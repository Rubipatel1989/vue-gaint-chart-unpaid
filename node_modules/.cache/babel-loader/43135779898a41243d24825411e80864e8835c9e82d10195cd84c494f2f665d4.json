{"ast":null,"code":"import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */function () {\n  /**\n   * Constructor for render module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance.\n   */\n  function ColumnChooser(parent) {\n    Grid.Inject(GridColumnChooser);\n    this.parent = parent;\n  }\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   *\n   * @param  {number} X - Defines the X axis.\n   * @param  {number} Y - Defines the Y axis.\n   * @returns {void}\n   */\n  ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n    return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n  };\n  /**\n   * Destroys the openColumnChooser.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  ColumnChooser.prototype.destroy = function () {\n    //this.parent.grid.ColumnChooserModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns ColumnChooser module name\n   */\n  ColumnChooser.prototype.getModuleName = function () {\n    return 'ColumnChooser';\n  };\n  return ColumnChooser;\n}();\nexport { ColumnChooser };","map":{"version":3,"names":["Grid","ColumnChooser","GridColumnChooser","parent","Inject","prototype","openColumnChooser","X","Y","grid","columnChooserModule","destroy","getModuleName"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,aAAa,IAAIC,iBAAiB,QAAQ,uBAAuB;AAChF;AACA;AACA;AACA;AACA;AACA,IAAID,aAAa,GAAG,aAAe,YAAY;EAC3C;AACJ;AACA;AACA;AACA;EACI,SAASA,aAAaA,CAACE,MAAM,EAAE;IAC3BH,IAAI,CAACI,MAAM,CAACF,iBAAiB,CAAC;IAC9B,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIF,aAAa,CAACI,SAAS,CAACC,iBAAiB,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IACxD,OAAO,IAAI,CAACL,MAAM,CAACM,IAAI,CAACC,mBAAmB,CAACJ,iBAAiB,CAACC,CAAC,EAAEC,CAAC,CAAC;EACvE,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIP,aAAa,CAACI,SAAS,CAACM,OAAO,GAAG,YAAY;IAC1C;EAAA,CACH;EACD;AACJ;AACA;AACA;AACA;AACA;EACIV,aAAa,CAACI,SAAS,CAACO,aAAa,GAAG,YAAY;IAChD,OAAO,eAAe;EAC1B,CAAC;EACD,OAAOX,aAAa;AACxB,CAAC,CAAC,CAAE;AACJ,SAASA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}