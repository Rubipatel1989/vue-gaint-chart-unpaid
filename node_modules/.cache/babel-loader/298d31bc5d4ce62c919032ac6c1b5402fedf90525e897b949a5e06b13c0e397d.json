{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode, nestedListCleanUp } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */function () {\n  function InsertHtml() {}\n  InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal, enterAction) {\n    var node;\n    if (typeof insertNode === 'string') {\n      var divNode = document.createElement('div');\n      divNode.innerHTML = insertNode;\n      node = isExternal ? divNode : divNode.firstChild;\n    } else {\n      if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) && insertNode.classList.contains('pasteContent'))) {\n        var divNode = document.createElement('div');\n        divNode.appendChild(insertNode);\n        node = divNode;\n      } else {\n        node = insertNode;\n      }\n    }\n    var nodeSelection = new NodeSelection(editNode);\n    var nodeCutter = new NodeCutter();\n    var range = nodeSelection.getRange(docElement);\n    if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 && range.startOffset === range.endOffset && editNode.textContent.length === 0 && (editNode.children[0].tagName === 'P' || editNode.children[0].tagName === 'DIV' || editNode.children[0].tagName === 'BR')) {\n      nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n    if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 && range.startOffset === range.endOffset && editNode.textContent.trim().length > 0) {\n      var focusNode = this.findFirstTextNode(range.startContainer);\n      if (!isNOU(focusNode)) {\n        nodeSelection.setSelectionText(docElement, focusNode, focusNode, 0, 0);\n        range = nodeSelection.getRange(docElement);\n      }\n    }\n    if (range.startContainer.nodeName === 'BR' && range.startOffset === 0 && range.startOffset === range.endOffset && range.startContainer === range.endContainer) {\n      var currentIndex = Array.prototype.slice.call(range.startContainer.parentElement.childNodes).indexOf(range.startContainer);\n      nodeSelection.setSelectionText(docElement, range.startContainer.parentElement, range.startContainer.parentElement, currentIndex, currentIndex);\n      range = nodeSelection.getRange(docElement);\n    }\n    var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 && range.startContainer === range.endContainer;\n    var isCollapsed = range.collapsed;\n    var nodes = this.getNodeCollection(range, nodeSelection, node);\n    var closestParentNode = node.nodeName.toLowerCase() === 'table' ? !isNOU(nodes[0]) ? this.closestEle(nodes[0].parentNode, editNode) : range.startContainer : nodes[0];\n    if (closestParentNode && closestParentNode.nodeName === 'LI' && node.nodeName.toLowerCase() === 'table') {\n      this.insertTableInList(range, node, closestParentNode, nodes[0], nodeCutter);\n      return;\n    }\n    if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR' && enterAction !== 'BR' && node.nodeName !== '#text' && !isNOU(node.children[0]) && !isNOU(node.children[0].tagName) && node.children[0].tagName === 'IMG' && node.children.length === 1) {\n      range.startContainer.innerHTML = '';\n    }\n    if (isExternal || !isNOU(node) && !isNOU(node.classList) && node.classList.contains('pasteContent')) {\n      this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction);\n      return;\n    }\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      var sibNode = preNode.previousSibling;\n      var parentNode = preNode.parentNode;\n      if (nodes.length === 1 || node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n      } else {\n        var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n        lasNode = isNOU(lasNode) ? preNode : lasNode;\n        nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        range = nodeSelection.getRange(docElement);\n      }\n      if (range.startContainer.parentElement.closest('ol,ul') !== null && range.endContainer.parentElement.closest('ol,ul') !== null) {\n        nestedListCleanUp(range);\n      } else {\n        range.extractContents();\n      }\n      if (insertNode.tagName === 'TABLE') {\n        this.removeEmptyElements(editNode);\n      }\n      for (var index = 0; index < nodes.length; index++) {\n        if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n          if (nodes[index].nodeName === 'IMG') {\n            continue;\n          }\n          nodes[index].parentNode.removeChild(nodes[index]);\n        }\n      }\n      if (!isNOU(sibNode) && !isNOU(sibNode.parentNode)) {\n        if (docElement.contains(sibNode)) {\n          InsertMethods.AppendBefore(node, sibNode, true);\n        } else {\n          range.insertNode(node);\n        }\n      } else {\n        var previousNode = null;\n        while (parentNode !== editNode && parentNode.firstChild && parentNode.textContent.trim() === '') {\n          var parentNode1 = parentNode.parentNode;\n          previousNode = parentNode;\n          parentNode = parentNode1;\n        }\n        if (previousNode !== null) {\n          parentNode = previousNode;\n        }\n        if (parentNode.firstChild && (parentNode !== editNode || node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer && parentNode === range.endContainer)) {\n          if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n            InsertMethods.AppendBefore(node, parentNode, false);\n            detach(parentNode);\n          } else {\n            InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n          }\n        } else if (isNOU(preNode.previousSibling) && insertNode.tagName === 'TABLE') {\n          parentNode.prepend(node);\n        } else {\n          parentNode.appendChild(node);\n        }\n      }\n      if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n      }\n    } else {\n      range.deleteContents();\n      if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n        range.startContainer.innerHTML = '';\n      }\n      if (Browser.isIE) {\n        var frag = docElement.createDocumentFragment();\n        frag.appendChild(node);\n        range.insertNode(frag);\n      } else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr' && range.endContainer.nodeName.toLowerCase() === 'hr') {\n        var paraElem = range.startContainer.nextElementSibling;\n        if (paraElem) {\n          if (paraElem.querySelector('br')) {\n            detach(paraElem.querySelector('br'));\n          }\n          paraElem.appendChild(node);\n        }\n      } else {\n        if (range.startContainer.nodeName === 'BR') {\n          range.startContainer.parentElement.insertBefore(node, range.startContainer);\n        } else {\n          range.insertNode(node);\n        }\n      }\n      if (node.nodeType !== 3 && node.childNodes.length > 0) {\n        nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n      } else if (node.nodeName === 'IMG') {\n        this.imageFocus(node, nodeSelection, docElement);\n      } else if (node.nodeType !== 3) {\n        nodeSelection.setSelectionContents(docElement, node);\n      } else {\n        nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n      }\n    }\n  };\n  InsertHtml.findFirstTextNode = function (node) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return node;\n    }\n    for (var i = 0; i < node.childNodes.length; i++) {\n      var textNode = this.findFirstTextNode(node.childNodes[i]);\n      if (!isNOU(textNode)) {\n        return textNode;\n      }\n    }\n    return null;\n  };\n  InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction) {\n    var isCursor = range.startOffset === range.endOffset && range.startContainer === range.endContainer;\n    if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n      var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n      range = nodeSelection.getRange(docElement);\n    }\n    var lasNode;\n    var sibNode;\n    var isSingleNode;\n    var preNode;\n    if (editNode !== range.startContainer && (!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1) || node.nodeName.toLowerCase() === 'table' && closestParentNode && CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1)) {\n      preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n      if (!isNOU(preNode)) {\n        sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n        if (nodes.length === 1) {\n          nodeSelection.setSelectionContents(docElement, preNode);\n          range = nodeSelection.getRange(docElement);\n          isSingleNode = true;\n        } else {\n          lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n          lasNode = isNOU(lasNode) ? preNode : lasNode;\n          nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n          range = nodeSelection.getRange(docElement);\n          isSingleNode = false;\n        }\n      }\n    }\n    var containsBlockNode = false;\n    this.removingComments(node);\n    var allChildNodes = node.childNodes;\n    for (var i = 0; i < allChildNodes.length; i++) {\n      if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n        containsBlockNode = true;\n        break;\n      }\n    }\n    var lastSelectionNode;\n    var fragment = document.createDocumentFragment();\n    if (!containsBlockNode) {\n      if (!isCursor) {\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n        if (isSingleNode) {\n          range.deleteContents();\n          this.removeEmptyElements(editNode, true);\n          range.insertNode(fragment);\n        } else {\n          var startContainerParent = editNode === range.startContainer ? range.startContainer : range.startContainer.parentNode;\n          // Get the index of the start container among its siblings\n          var startIndex = Array.prototype.indexOf.call(startContainerParent.childNodes, Browser.userAgent.indexOf('Firefox') !== -1 && editNode === range.startContainer ? range.startContainer.firstChild : range.startContainer);\n          range.deleteContents();\n          range.setStart(startContainerParent, startIndex);\n          range.setEnd(startContainerParent, startIndex);\n          if (!isNOU(lasNode) && lasNode !== editNode) {\n            detach(lasNode);\n            this.removeEmptyElements(editNode, true);\n          }\n          // eslint-disable-next-line\n          !isNOU(sibNode) ? sibNode.parentNode === editNode ? sibNode.appendChild(fragment) : sibNode.parentNode.appendChild(fragment) : range.insertNode(fragment);\n        }\n      } else {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n        if (range.startContainer.nodeType === 3 && nearestAnchor && closest(nearestAnchor, 'span')) {\n          var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n          if (immediateBlockNode.querySelectorAll('br').length > 0) {\n            detach(immediateBlockNode.querySelector('br'));\n          }\n          var rangeElement = closest(nearestAnchor, 'span');\n          rangeElement.appendChild(tempSpan);\n        } else if (nodes[0].nodeName === '#text' && nodes[0].nodeValue.includes('\\u200B') && !isNOU(nodes[0].parentElement) && !isNOU(nodes[0].parentElement.previousElementSibling) && nodes[0].parentElement.previousElementSibling.classList.contains('e-mention-chip')) {\n          range.startContainer.parentElement.insertAdjacentElement('afterend', tempSpan);\n        } else {\n          range.insertNode(tempSpan);\n        }\n        while (node.firstChild) {\n          lastSelectionNode = node.firstChild;\n          fragment.appendChild(node.firstChild);\n        }\n        tempSpan.parentNode.replaceChild(fragment, tempSpan);\n      }\n    } else {\n      var parentElem = range.startContainer;\n      while (!isNOU(parentElem) && parentElem.nodeName !== 'PRE' && parentElem !== editNode) {\n        parentElem = parentElem.parentElement;\n      }\n      if (!isNOU(node) && !isNOU(parentElem) && parentElem.nodeName === 'PRE') {\n        range.insertNode(node);\n        lastSelectionNode = node.lastChild;\n      } else {\n        this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n        var isFirstTextNode = true;\n        var isPreviousInlineElem = void 0;\n        var paraElm = void 0;\n        var previousParent = void 0;\n        if (!this.contentsDeleted) {\n          if (!isCollapsed && range.startContainer.parentElement.textContent.length === 0 && range.startContainer.nodeName === 'BR' && range.startContainer.parentElement.nodeName === 'P') {\n            editNode.removeChild(range.startContainer.parentElement);\n          }\n          range.deleteContents();\n        }\n        while (node.firstChild) {\n          if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n            detach(node.firstChild);\n            continue;\n          }\n          if (node.firstChild.nodeName === '#text' && isFirstTextNode || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode) {\n            lastSelectionNode = node.firstChild;\n            if (isNOU(node.previousElementSibling)) {\n              var firstParaElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n              node.parentElement.insertBefore(firstParaElm, node);\n            }\n            if (node.previousElementSibling.nodeName === 'BR') {\n              node.parentElement.insertBefore(node.firstChild, node);\n            } else {\n              node.previousElementSibling.appendChild(node.firstChild);\n            }\n          } else {\n            lastSelectionNode = node.firstChild;\n            if (node.firstChild.nodeName === '#text' || this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0) {\n              if (!isPreviousInlineElem) {\n                paraElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n                paraElm.appendChild(node.firstChild);\n                fragment.appendChild(paraElm);\n              } else {\n                previousParent.appendChild(node.firstChild);\n                fragment.appendChild(previousParent);\n              }\n              previousParent = paraElm;\n              isPreviousInlineElem = true;\n            } else {\n              fragment.appendChild(node.firstChild);\n              isPreviousInlineElem = false;\n            }\n            isFirstTextNode = false;\n          }\n        }\n        node.parentNode.replaceChild(fragment, node);\n      }\n    }\n    if (lastSelectionNode.nodeName === 'TABLE') {\n      var pTag = createElement('p');\n      pTag.appendChild(createElement('br'));\n      lastSelectionNode.parentElement.insertBefore(pTag, lastSelectionNode.nextSibling);\n      lastSelectionNode = pTag;\n    }\n    if (lastSelectionNode.nodeName === '#text') {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n    } else if (lastSelectionNode.nodeName === 'HR') {\n      var nextSiblingNode = lastSelectionNode.nextSibling ? lastSelectionNode.nextSibling : null;\n      var siblingTag = enterAction === 'DIV' ? createElement('div') : createElement('p');\n      siblingTag.appendChild(createElement('br'));\n      if (!isNOU(nextSiblingNode) && nextSiblingNode.nodeName === 'HR') {\n        lastSelectionNode.parentNode.insertBefore(siblingTag, nextSiblingNode);\n        lastSelectionNode = siblingTag;\n      } else if (!isNOU(nextSiblingNode)) {\n        lastSelectionNode = nextSiblingNode;\n      } else {\n        lastSelectionNode.parentNode.appendChild(siblingTag);\n        lastSelectionNode.parentNode.insertBefore(lastSelectionNode, siblingTag);\n        lastSelectionNode = siblingTag;\n      }\n      nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, 0, 0);\n    } else {\n      this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction);\n    }\n    this.alignCheck(editNode);\n    this.listCleanUp(nodeSelection, docElement);\n  };\n  InsertHtml.listCleanUp = function (nodeSelection, docElement) {\n    var range = nodeSelection.getRange(docElement);\n    var startContainer = range.startContainer;\n    var startOffset = range.startOffset;\n    var startParentElement = range.startContainer.parentElement;\n    var endParentElement = range.endContainer.parentElement;\n    if (!isNOU(startParentElement) && !isNOU(endParentElement)) {\n      var startClosestList = startParentElement.closest('ol, ul');\n      var endClosestList = endParentElement.closest('ol, ul');\n      if (!isNOU(startClosestList) && !isNOU(endClosestList)) {\n        var hasListCleanUp = this.cleanUpListItems(startClosestList);\n        var hasListContainerCleanUp = this.cleanUpListContainer(startClosestList);\n        if (hasListCleanUp || hasListContainerCleanUp) {\n          range.setStart(startContainer, startOffset);\n          range.setEnd(startContainer, startOffset);\n        }\n      }\n    }\n  };\n  InsertHtml.cleanUpListItems = function (parentContainer) {\n    var _this = this;\n    var hasListCleanUp = false;\n    var listItems;\n    if (!isNOU(parentContainer.closest('ol, ul'))) {\n      listItems = parentContainer.closest('ol, ul').querySelectorAll('li');\n    }\n    if (isNOU(listItems) || listItems.length === 0) {\n      return false;\n    }\n    var nearestListItem = null;\n    listItems.forEach(function (listItem) {\n      var parentElement = listItem.parentElement;\n      if (!isNOU(parentElement) && parentElement.nodeName !== 'OL' && parentElement.nodeName !== 'UL') {\n        if (isNOU(nearestListItem)) {\n          nearestListItem = parentElement.closest('li');\n        }\n        if (!isNOU(nearestListItem)) {\n          var nextSibling = listItem.nextSibling;\n          if (!isNOU(nextSibling) && nextSibling.nodeName !== 'LI') {\n            var startIndex = Array.prototype.indexOf.call(parentElement.childNodes, nextSibling);\n            var clonedParent = parentElement.cloneNode(false);\n            var totalChildren = parentElement.childNodes.length;\n            for (var i = startIndex; i < totalChildren; i++) {\n              clonedParent.appendChild(parentElement.childNodes[startIndex]);\n            }\n            if (clonedParent.childNodes.length > 0) {\n              var newListItem = document.createElement('li');\n              newListItem.appendChild(clonedParent);\n              nearestListItem.insertAdjacentElement('afterend', newListItem);\n            } else {\n              clonedParent.remove();\n            }\n          }\n          var closestList = parentElement.closest('ol, ul');\n          nearestListItem.insertAdjacentElement('afterend', listItem);\n          nearestListItem = nearestListItem.nextSibling;\n          if (!isNOU(closestList)) {\n            _this.removeEmptyElements(closestList);\n          }\n          hasListCleanUp = true;\n        }\n      }\n    });\n    var cleanUpFlattenListContainer = this.cleanUpFlattenListContainer(parentContainer);\n    hasListCleanUp = cleanUpFlattenListContainer ? cleanUpFlattenListContainer : hasListCleanUp;\n    return hasListCleanUp;\n  };\n  InsertHtml.cleanUpFlattenListContainer = function (parentContainer) {\n    var hasListCleanUp = false;\n    var listItems;\n    if (!isNOU(parentContainer.closest('ol, ul'))) {\n      listItems = parentContainer.closest('ol, ul').querySelectorAll('li');\n    }\n    if (isNOU(listItems) || listItems.length === 0) {\n      return false;\n    }\n    listItems.forEach(function (listItem) {\n      if (!isNOU(listItem.firstChild) && (listItem.firstChild.nodeName === 'OL' || listItem.firstChild.nodeName === 'UL')) {\n        listItem.style.listStyleType = 'none';\n      }\n      var nestedLi = Array.from(listItem.children).find(function (child) {\n        return child.tagName === 'LI' && child.parentElement && child.parentElement.tagName !== 'OL' && child.parentElement.tagName !== 'UL';\n      });\n      if (!isNOU(nestedLi) && !isNOU(listItem.parentNode)) {\n        listItem.parentNode.replaceChild(nestedLi, listItem);\n        if (isNOU(nestedLi.textContent) || nestedLi.textContent.trim() === '') {\n          nestedLi.remove();\n        }\n        hasListCleanUp = true;\n      }\n    });\n    return hasListCleanUp;\n  };\n  InsertHtml.cleanUpListContainer = function (parentList) {\n    var hasListContainerCleanUp = false;\n    var nonLiElementCollection = [];\n    var replacements = [];\n    if (!isNOU(parentList)) {\n      parentList.childNodes.forEach(function (childNode) {\n        if (childNode.nodeName.toLocaleUpperCase() !== 'LI') {\n          nonLiElementCollection.push(childNode);\n        }\n        if ((childNode.nodeName.toLocaleUpperCase() === 'LI' || parentList.lastChild === childNode) && nonLiElementCollection.length > 0) {\n          replacements.push({\n            elements: nonLiElementCollection.slice()\n          });\n          nonLiElementCollection = [];\n        }\n      });\n      replacements.forEach(function (_a) {\n        var elements = _a.elements;\n        var newListItem = document.createElement('li');\n        elements[0].parentNode.replaceChild(newListItem, elements[0]);\n        elements.forEach(function (child) {\n          return newListItem.appendChild(child);\n        });\n        if (newListItem.textContent && newListItem.textContent.trim() === '') {\n          parentList.removeChild(newListItem);\n        }\n        hasListContainerCleanUp = true;\n      });\n    }\n    return hasListContainerCleanUp;\n  };\n  InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n    lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode : lastSelectionNode.previousSibling : lastSelectionNode;\n    while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' && lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n      if (!isNOU(lastSelectionNode.lastChild) && lastSelectionNode.lastChild.nodeName === 'P' && lastSelectionNode.lastChild.innerHTML === '') {\n        var lineBreak = createElement('br');\n        lastSelectionNode.lastChild.appendChild(lineBreak);\n      }\n      lastSelectionNode = lastSelectionNode.lastChild;\n    }\n    lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n    if (lastSelectionNode.nodeName === 'IMG') {\n      this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n    } else {\n      nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n    }\n    this.removeEmptyElements(editNode);\n  };\n  InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n    var nodes = [];\n    if (range.startOffset === range.endOffset && range.startContainer === range.endContainer && range.startContainer.nodeName !== 'BR' && range.startContainer.childNodes.length > 0 && (range.startContainer.nodeName === 'TD' || range.startContainer.nodeType !== 3 && node.classList && node.classList.contains('pasteContent'))) {\n      nodes.push(range.startContainer.childNodes[range.endOffset]);\n    } else {\n      nodes = nodeSelection.getInsertNodeCollection(range);\n    }\n    return nodes;\n  };\n  InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n    if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) && range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n      if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n      }\n    } else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) && range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n      range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n    } else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3 && node.firstChild.nodeName === 'HR') {\n      if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n        range.startContainer.appendChild(node);\n      } else {\n        range.startContainer.parentNode.insertBefore(node, range.startContainer);\n      }\n    } else {\n      var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n      if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n        blockNode = range.endContainer;\n        range.setEnd(blockNode, range.endContainer.textContent.length);\n      }\n      if (blockNode && blockNode.nodeName === 'BODY' || blockNode.nodeName === 'DIV' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n        blockNode = range.startContainer;\n      }\n      if (blockNode && blockNode.closest('LI') && editNode.contains(blockNode.closest('LI')) && blockNode.nodeName !== 'TD' && blockNode.nodeName !== 'TH' && blockNode.nodeName !== 'TR' && node && node.firstElementChild && (node.firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n        var liNode = void 0;\n        while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n          liNode = node.firstElementChild.lastElementChild;\n          liNode.style.removeProperty('margin-left');\n          liNode.style.removeProperty('margin-top');\n          liNode.style.removeProperty('margin-bottom');\n          node.firstElementChild.insertAdjacentElement('afterend', liNode);\n        }\n      }\n      if (blockNode && blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH' || blockNode.nodeName === 'TR') {\n        var tempSpan = createElement('span', {\n          className: 'tempSpan'\n        });\n        range.insertNode(tempSpan);\n        tempSpan.parentNode.replaceChild(node, tempSpan);\n      } else {\n        var nodeSelection = new NodeSelection(editNode);\n        var currentNode = this.getNodeCollection(range, nodeSelection, node)[this.getNodeCollection(range, nodeSelection, node).length - 1];\n        var splitedElm = void 0;\n        if (currentNode && (currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR' || currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) && currentNode.parentElement.nodeName === 'LI') && !isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0) {\n          splitedElm = currentNode;\n          if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) && currentNode.nextSibling.nodeName === 'BR') {\n            detach(currentNode.nextSibling);\n          }\n          if (currentNode.parentElement.nodeName === 'LI' && currentNode.parentElement.textContent === '') {\n            this.removeListfromPaste(range);\n            range.insertNode(node);\n            this.contentsDeleted = true;\n            return;\n          }\n        } else if (currentNode && (currentNode.nodeName === '#text' || currentNode.nodeName === 'BR') && !isNOU(currentNode.parentElement) && (currentNode.parentElement.nodeName === 'LI' || currentNode.parentElement.closest('LI') || blockNode === editNode && currentNode.parentElement === blockNode) && currentNode.parentElement.textContent.trim().length > 0) {\n          splitedElm = currentNode;\n          if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) && currentNode.nextSibling.nodeName === 'BR') {\n            detach(currentNode.nextSibling);\n          }\n          if (!range.collapsed) {\n            var startContainer = range.startContainer;\n            var startOffset = range.startOffset;\n            this.removeListfromPaste(range);\n            range.setStart(startContainer, startOffset);\n            range.setEnd(startContainer, startOffset);\n          }\n          range.insertNode(node);\n          this.contentsDeleted = true;\n          return;\n        } else {\n          splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n        }\n        splitedElm.parentNode.replaceChild(node, splitedElm);\n      }\n    }\n  };\n  InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction) {\n    lastSelectionNode.classList.add('lastNode');\n    editNode.innerHTML = updateTextNode(editNode.innerHTML, enterAction);\n    lastSelectionNode = editNode.querySelector('.lastNode');\n    if (!isNOU(lastSelectionNode)) {\n      this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n      lastSelectionNode.classList.remove('lastNode');\n      if (lastSelectionNode.classList.length === 0) {\n        lastSelectionNode.removeAttribute('class');\n      }\n    }\n  };\n  InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n    var focusNode = document.createTextNode(' ');\n    if (node.parentNode && node.parentNode.nodeName === 'A') {\n      var anchorTag = node.parentNode;\n      var parentNode = anchorTag.parentNode;\n      parentNode.insertBefore(focusNode, anchorTag.nextSibling);\n      parentNode.insertBefore(node, focusNode);\n    } else {\n      node.parentNode.insertBefore(focusNode, node.nextSibling);\n    }\n    nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n  };\n  // eslint-disable-next-line\n  InsertHtml.getImmediateBlockNode = function (node, editNode) {\n    while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0) {\n      node = node.parentNode;\n    }\n    return node;\n  };\n  InsertHtml.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n  InsertHtml.findDetachEmptyElem = function (element, ignoreBlockNodes) {\n    if (ignoreBlockNodes === void 0) {\n      ignoreBlockNodes = false;\n    }\n    var removableElement;\n    if (!isNOU(element.parentElement)) {\n      var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g) && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n      if (!hasNbsp && element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true' && isNOU(element.parentElement.querySelector('img')) && element.parentElement.nodeName !== 'TD' && element.parentElement.nodeName !== 'TH') {\n        removableElement = ignoreBlockNodes && CONSTANT.BLOCK_TAGS.indexOf(element.parentElement.tagName.toLowerCase()) !== -1 ? element : this.findDetachEmptyElem(element.parentElement, ignoreBlockNodes);\n      } else {\n        removableElement = ignoreBlockNodes && CONSTANT.BLOCK_TAGS.indexOf(element.tagName.toLowerCase()) !== -1 ? null : element;\n      }\n    } else {\n      removableElement = null;\n    }\n    return removableElement;\n  };\n  InsertHtml.removeEmptyElements = function (element, ignoreBlockNodes) {\n    if (ignoreBlockNodes === void 0) {\n      ignoreBlockNodes = false;\n    }\n    var emptyElements = element.querySelectorAll(':empty');\n    var nonSvgEmptyElements = Array.from(emptyElements).filter(function (element) {\n      // Check if the element is an SVG element or an ancestor of an SVG element\n      return !element.closest('svg') && !element.closest('canvas');\n    });\n    for (var i = 0; i < nonSvgEmptyElements.length; i++) {\n      var lineWithDiv = true;\n      if (nonSvgEmptyElements[i].tagName === 'DIV') {\n        lineWithDiv = nonSvgEmptyElements[i].style.borderBottom === 'none' || nonSvgEmptyElements[i].style.borderBottom === '' ? true : false;\n      }\n      if (CONSTANT.SELF_CLOSING_TAGS.indexOf(nonSvgEmptyElements[i].tagName.toLowerCase()) < 0 && lineWithDiv) {\n        var detachableElement = this.findDetachEmptyElem(nonSvgEmptyElements[i], ignoreBlockNodes);\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n  InsertHtml.closestEle = function (element, editNode) {\n    var el = element;\n    if (closest(el, 'li')) {\n      return closest(el, 'li');\n    }\n    while (el && el.nodeType === 1) {\n      if (el.parentNode === editNode || !isNOU(el.parentNode.tagName) && (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1 || CONSTANT.ALLOWED_TABLE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1)) {\n        return el;\n      }\n      el = el.parentNode;\n    }\n    return null;\n  };\n  InsertHtml.insertTableInList = function (range, insertNode, parentNode, currentNode, nodeCutter) {\n    if (range.collapsed) {\n      var isStart = range.startOffset === 0;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var isEnd = range.startContainer.textContent.trimEnd().length === range.startOffset;\n      if (isStart || isEnd) {\n        if (isStart) {\n          InsertMethods.AppendBefore(insertNode, currentNode, false);\n        } else {\n          InsertMethods.AppendBefore(insertNode, currentNode, true);\n        }\n      } else {\n        var preNode = nodeCutter.SplitNode(range, parentNode, true);\n        var sibNode = preNode.previousSibling;\n        sibNode.appendChild(insertNode);\n      }\n    } else {\n      range.deleteContents();\n      parentNode.appendChild(insertNode);\n    }\n    insertNode.classList.add('ignore-table');\n  };\n  InsertHtml.alignCheck = function (editNode) {\n    var spanAligns = editNode.querySelectorAll('span[style*=\"text-align\"]');\n    for (var i = 0; i < spanAligns.length; i++) {\n      var spanAlign = spanAligns[i];\n      if (spanAlign) {\n        var blockAlign = this.getImmediateBlockNode(spanAlign, null);\n        if (blockAlign) {\n          var totalSpanText = '';\n          for (var j = 0; j < spanAligns.length; j++) {\n            var span = spanAligns[j];\n            if (blockAlign.contains(span)) {\n              totalSpanText += span.textContent;\n            }\n          }\n          if (blockAlign.textContent.trim() === totalSpanText.trim()) {\n            blockAlign.style.textAlign = spanAlign.style.textAlign;\n          }\n        }\n      }\n    }\n  };\n  InsertHtml.removeListfromPaste = function (range) {\n    range.deleteContents();\n    var value = range.startContainer;\n    if (!isNOU(value) && value.nodeName === 'LI' && !isNOU(value.parentElement) && (value.parentElement.nodeName === 'OL' || value.parentElement.nodeName === 'UL') && value.textContent.trim() === '') {\n      value.parentElement.querySelectorAll('li').forEach(function (item) {\n        if (item.textContent.trim() === '' && item !== value) {\n          item.remove();\n        }\n      });\n    }\n  };\n  /**\n   * Insert method\n   *\n   * @hidden\n    */\n  InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button', 'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress', 'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n  InsertHtml.contentsDeleted = false;\n  return InsertHtml;\n}();\nexport { InsertHtml };","map":{"version":3,"names":["NodeSelection","NodeCutter","CONSTANT","detach","Browser","isNullOrUndefined","isNOU","createElement","closest","InsertMethods","updateTextNode","nestedListCleanUp","InsertHtml","Insert","docElement","insertNode","editNode","isExternal","enterAction","node","divNode","document","innerHTML","firstChild","classList","contains","appendChild","nodeSelection","nodeCutter","range","getRange","startContainer","endContainer","startOffset","endOffset","textContent","length","children","tagName","setSelectionText","trim","focusNode","findFirstTextNode","nodeName","currentIndex","Array","prototype","slice","call","parentElement","childNodes","indexOf","isCursor","isCollapsed","collapsed","nodes","getNodeCollection","closestParentNode","toLowerCase","closestEle","parentNode","insertTableInList","pasteInsertHTML","nodeType","Node","ELEMENT_NODE","TABLE_BLOCK_TAGS","toLocaleLowerCase","preNode","GetSpliceNode","sibNode","previousSibling","childElementCount","setSelectionContents","lasNode","extractContents","removeEmptyElements","index","removeChild","AppendBefore","previousNode","parentNode1","prepend","imageFocus","deleteContents","isIE","frag","createDocumentFragment","paraElem","nextElementSibling","querySelector","insertBefore","TEXT_NODE","i","textNode","currentBlockNode","getImmediateBlockNode","isSingleNode","containsBlockNode","removingComments","allChildNodes","BLOCK_TAGS","lastSelectionNode","fragment","startContainerParent","startIndex","userAgent","setStart","setEnd","tempSpan","className","nearestAnchor","immediateBlockNode","querySelectorAll","rangeElement","nodeValue","includes","previousElementSibling","insertAdjacentElement","replaceChild","parentElem","lastChild","insertTempNode","isFirstTextNode","isPreviousInlineElem","paraElm","previousParent","contentsDeleted","inlineNode","firstParaElm","pTag","nextSibling","placeCursorEnd","nextSiblingNode","siblingTag","cursorPos","alignCheck","listCleanUp","startParentElement","endParentElement","startClosestList","endClosestList","hasListCleanUp","cleanUpListItems","hasListContainerCleanUp","cleanUpListContainer","parentContainer","_this","listItems","nearestListItem","forEach","listItem","clonedParent","cloneNode","totalChildren","newListItem","remove","closestList","cleanUpFlattenListContainer","style","listStyleType","nestedLi","from","find","child","parentList","nonLiElementCollection","replacements","childNode","toLocaleUpperCase","push","elements","_a","lineBreak","getInsertNodeCollection","blockNode","firstElementChild","liNode","lastElementChild","removeProperty","currentNode","splitedElm","removeListfromPaste","add","removeAttribute","createTextNode","anchorTag","elm","innerElement","replace","findDetachEmptyElem","element","ignoreBlockNodes","removableElement","hasNbsp","match","contentEditable","emptyElements","nonSvgEmptyElements","filter","lineWithDiv","borderBottom","SELF_CLOSING_TAGS","detachableElement","el","IGNORE_BLOCK_TAGS","ALLOWED_TABLE_BLOCK_TAGS","isStart","isEnd","trimEnd","SplitNode","spanAligns","spanAlign","blockAlign","totalSpanText","j","span","textAlign","value","item"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/inserthtml.js"],"sourcesContent":["import { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport * as CONSTANT from './../base/constant';\nimport { detach, Browser, isNullOrUndefined as isNOU, createElement, closest } from '@syncfusion/ej2-base';\nimport { InsertMethods } from './insert-methods';\nimport { updateTextNode, nestedListCleanUp } from './../../common/util';\n/**\n * Insert a HTML Node or Text\n *\n * @hidden\n\n */\nvar InsertHtml = /** @class */ (function () {\n    function InsertHtml() {\n    }\n    InsertHtml.Insert = function (docElement, insertNode, editNode, isExternal, enterAction) {\n        var node;\n        if (typeof insertNode === 'string') {\n            var divNode = document.createElement('div');\n            divNode.innerHTML = insertNode;\n            node = isExternal ? divNode : divNode.firstChild;\n        }\n        else {\n            if (isExternal && !(!isNOU(insertNode) && !isNOU(insertNode.classList) &&\n                insertNode.classList.contains('pasteContent'))) {\n                var divNode = document.createElement('div');\n                divNode.appendChild(insertNode);\n                node = divNode;\n            }\n            else {\n                node = insertNode;\n            }\n        }\n        var nodeSelection = new NodeSelection(editNode);\n        var nodeCutter = new NodeCutter();\n        var range = nodeSelection.getRange(docElement);\n        if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 &&\n            range.startOffset === range.endOffset && editNode.textContent.length === 0 &&\n            (editNode.children[0].tagName === 'P' || editNode.children[0].tagName === 'DIV' || (editNode.children[0].tagName === 'BR'))) {\n            nodeSelection.setSelectionText(docElement, range.startContainer.children[0], range.startContainer.children[0], 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        if (range.startContainer === editNode && range.startContainer === range.endContainer && range.startOffset === 0 &&\n            range.startOffset === range.endOffset && editNode.textContent.trim().length > 0) {\n            var focusNode = this.findFirstTextNode(range.startContainer);\n            if (!isNOU(focusNode)) {\n                nodeSelection.setSelectionText(docElement, focusNode, focusNode, 0, 0);\n                range = nodeSelection.getRange(docElement);\n            }\n        }\n        if (range.startContainer.nodeName === 'BR' && range.startOffset === 0 && range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer) {\n            var currentIndex = Array.prototype.slice.call(range.startContainer.parentElement.childNodes).indexOf(range.startContainer);\n            nodeSelection.setSelectionText(docElement, range.startContainer.parentElement, range.startContainer.parentElement, currentIndex, currentIndex);\n            range = nodeSelection.getRange(docElement);\n        }\n        var isCursor = range.startOffset === range.endOffset && range.startOffset === 0 &&\n            range.startContainer === range.endContainer;\n        var isCollapsed = range.collapsed;\n        var nodes = this.getNodeCollection(range, nodeSelection, node);\n        var closestParentNode = (node.nodeName.toLowerCase() === 'table') ? (!isNOU(nodes[0]) ? this.closestEle(nodes[0].parentNode, editNode) : range.startContainer) : nodes[0];\n        if (closestParentNode && closestParentNode.nodeName === 'LI' && node.nodeName.toLowerCase() === 'table') {\n            this.insertTableInList(range, node, closestParentNode, nodes[0], nodeCutter);\n            return;\n        }\n        if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR' && enterAction !== 'BR' && node.nodeName !== '#text' && !isNOU(node.children[0]) && !isNOU(node.children[0].tagName) && node.children[0].tagName === 'IMG' && node.children.length === 1) {\n            range.startContainer.innerHTML = '';\n        }\n        if (isExternal || (!isNOU(node) && !isNOU(node.classList) &&\n            node.classList.contains('pasteContent'))) {\n            this.pasteInsertHTML(nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction);\n            return;\n        }\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            var preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            var sibNode = preNode.previousSibling;\n            var parentNode = preNode.parentNode;\n            if (nodes.length === 1 || (node.nodeName.toLowerCase() === 'table' && preNode.childElementCount === 0)) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n            }\n            else {\n                var lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                lasNode = isNOU(lasNode) ? preNode : lasNode;\n                nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                    lasNode.textContent.length : lasNode.childNodes.length);\n                range = nodeSelection.getRange(docElement);\n            }\n            if (range.startContainer.parentElement.closest('ol,ul') !== null && range.endContainer.parentElement.closest('ol,ul') !== null) {\n                nestedListCleanUp(range);\n            }\n            else {\n                range.extractContents();\n            }\n            if (insertNode.tagName === 'TABLE') {\n                this.removeEmptyElements(editNode);\n            }\n            for (var index = 0; index < nodes.length; index++) {\n                if (nodes[index].nodeType !== 3 && nodes[index].parentNode != null) {\n                    if (nodes[index].nodeName === 'IMG') {\n                        continue;\n                    }\n                    nodes[index].parentNode.removeChild(nodes[index]);\n                }\n            }\n            if (!isNOU(sibNode) && !isNOU(sibNode.parentNode)) {\n                if (docElement.contains(sibNode)) {\n                    InsertMethods.AppendBefore(node, sibNode, true);\n                }\n                else {\n                    range.insertNode(node);\n                }\n            }\n            else {\n                var previousNode = null;\n                while (parentNode !== editNode && parentNode.firstChild &&\n                    (parentNode.textContent.trim() === '')) {\n                    var parentNode1 = parentNode.parentNode;\n                    previousNode = parentNode;\n                    parentNode = parentNode1;\n                }\n                if (previousNode !== null) {\n                    parentNode = previousNode;\n                }\n                if (parentNode.firstChild && (parentNode !== editNode ||\n                    (node.nodeName === 'TABLE' && isCursor && parentNode === range.startContainer &&\n                        parentNode === range.endContainer))) {\n                    if (parentNode.textContent.trim() === '' && parentNode !== editNode) {\n                        InsertMethods.AppendBefore(node, parentNode, false);\n                        detach(parentNode);\n                    }\n                    else {\n                        InsertMethods.AppendBefore(node, parentNode.firstChild, false);\n                    }\n                }\n                else if (isNOU(preNode.previousSibling) && insertNode.tagName === 'TABLE') {\n                    parentNode.prepend(node);\n                }\n                else {\n                    parentNode.appendChild(node);\n                }\n            }\n            if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.childNodes.length);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, 0, node.textContent.length);\n            }\n        }\n        else {\n            range.deleteContents();\n            if (isCursor && range.startContainer.textContent === '' && range.startContainer.nodeName !== 'BR') {\n                range.startContainer.innerHTML = '';\n            }\n            if (Browser.isIE) {\n                var frag = docElement.createDocumentFragment();\n                frag.appendChild(node);\n                range.insertNode(frag);\n            }\n            else if (range.startContainer.nodeType === 1 && range.startContainer.nodeName.toLowerCase() === 'hr'\n                && range.endContainer.nodeName.toLowerCase() === 'hr') {\n                var paraElem = range.startContainer.nextElementSibling;\n                if (paraElem) {\n                    if (paraElem.querySelector('br')) {\n                        detach(paraElem.querySelector('br'));\n                    }\n                    paraElem.appendChild(node);\n                }\n            }\n            else {\n                if (range.startContainer.nodeName === 'BR') {\n                    range.startContainer.parentElement.insertBefore(node, range.startContainer);\n                }\n                else {\n                    range.insertNode(node);\n                }\n            }\n            if (node.nodeType !== 3 && node.childNodes.length > 0) {\n                nodeSelection.setSelectionText(docElement, node, node, 1, 1);\n            }\n            else if (node.nodeName === 'IMG') {\n                this.imageFocus(node, nodeSelection, docElement);\n            }\n            else if (node.nodeType !== 3) {\n                nodeSelection.setSelectionContents(docElement, node);\n            }\n            else {\n                nodeSelection.setSelectionText(docElement, node, node, node.textContent.length, node.textContent.length);\n            }\n        }\n    };\n    InsertHtml.findFirstTextNode = function (node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            return node;\n        }\n        for (var i = 0; i < node.childNodes.length; i++) {\n            var textNode = this.findFirstTextNode(node.childNodes[i]);\n            if (!isNOU(textNode)) {\n                return textNode;\n            }\n        }\n        return null;\n    };\n    InsertHtml.pasteInsertHTML = function (nodes, node, range, nodeSelection, nodeCutter, docElement, isCollapsed, closestParentNode, editNode, enterAction) {\n        var isCursor = range.startOffset === range.endOffset &&\n            range.startContainer === range.endContainer;\n        if (isCursor && range.startContainer === editNode && editNode.textContent === '') {\n            var currentBlockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            nodeSelection.setSelectionText(docElement, currentBlockNode, currentBlockNode, 0, 0);\n            range = nodeSelection.getRange(docElement);\n        }\n        var lasNode;\n        var sibNode;\n        var isSingleNode;\n        var preNode;\n        if (editNode !== range.startContainer && ((!isCollapsed && !(closestParentNode.nodeType === Node.ELEMENT_NODE &&\n            CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) !== -1))\n            || (node.nodeName.toLowerCase() === 'table' && closestParentNode &&\n                CONSTANT.TABLE_BLOCK_TAGS.indexOf(closestParentNode.tagName.toLocaleLowerCase()) === -1))) {\n            preNode = nodeCutter.GetSpliceNode(range, closestParentNode);\n            if (!isNOU(preNode)) {\n                sibNode = isNOU(preNode.previousSibling) ? preNode.parentNode.previousSibling : preNode.previousSibling;\n                if (nodes.length === 1) {\n                    nodeSelection.setSelectionContents(docElement, preNode);\n                    range = nodeSelection.getRange(docElement);\n                    isSingleNode = true;\n                }\n                else {\n                    lasNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length - 1].parentElement);\n                    lasNode = isNOU(lasNode) ? preNode : lasNode;\n                    nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                        lasNode.textContent.length : lasNode.childNodes.length);\n                    range = nodeSelection.getRange(docElement);\n                    isSingleNode = false;\n                }\n            }\n        }\n        var containsBlockNode = false;\n        this.removingComments(node);\n        var allChildNodes = node.childNodes;\n        for (var i = 0; i < allChildNodes.length; i++) {\n            if (CONSTANT.BLOCK_TAGS.indexOf(allChildNodes[i].nodeName.toLocaleLowerCase()) >= 0) {\n                containsBlockNode = true;\n                break;\n            }\n        }\n        var lastSelectionNode;\n        var fragment = document.createDocumentFragment();\n        if (!containsBlockNode) {\n            if (!isCursor) {\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                if (isSingleNode) {\n                    range.deleteContents();\n                    this.removeEmptyElements(editNode, true);\n                    range.insertNode(fragment);\n                }\n                else {\n                    var startContainerParent = editNode === range.startContainer ?\n                        range.startContainer : range.startContainer.parentNode;\n                    // Get the index of the start container among its siblings\n                    var startIndex = Array.prototype.indexOf.call(startContainerParent.childNodes, (Browser.userAgent.indexOf('Firefox') !== -1 && editNode === range.startContainer) ? range.startContainer.firstChild : range.startContainer);\n                    range.deleteContents();\n                    range.setStart(startContainerParent, startIndex);\n                    range.setEnd(startContainerParent, startIndex);\n                    if (!isNOU(lasNode) && lasNode !== editNode) {\n                        detach(lasNode);\n                        this.removeEmptyElements(editNode, true);\n                    }\n                    // eslint-disable-next-line\n                    !isNOU(sibNode) ? (sibNode.parentNode === editNode ? sibNode.appendChild(fragment) : sibNode.parentNode.appendChild(fragment)) : range.insertNode(fragment);\n                }\n            }\n            else {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                var nearestAnchor = closest(range.startContainer.parentElement, 'a');\n                if (range.startContainer.nodeType === 3 && nearestAnchor && closest(nearestAnchor, 'span')) {\n                    var immediateBlockNode = this.getImmediateBlockNode(range.startContainer, editNode);\n                    if (immediateBlockNode.querySelectorAll('br').length > 0) {\n                        detach(immediateBlockNode.querySelector('br'));\n                    }\n                    var rangeElement = closest(nearestAnchor, 'span');\n                    rangeElement.appendChild(tempSpan);\n                }\n                else if (nodes[0].nodeName === '#text' && nodes[0].nodeValue.includes('\\u200B') && !isNOU(nodes[0].parentElement) && !isNOU(nodes[0].parentElement.previousElementSibling) && nodes[0].parentElement.previousElementSibling.classList.contains('e-mention-chip')) {\n                    range.startContainer.parentElement.insertAdjacentElement('afterend', tempSpan);\n                }\n                else {\n                    range.insertNode(tempSpan);\n                }\n                while (node.firstChild) {\n                    lastSelectionNode = node.firstChild;\n                    fragment.appendChild(node.firstChild);\n                }\n                tempSpan.parentNode.replaceChild(fragment, tempSpan);\n            }\n        }\n        else {\n            var parentElem = range.startContainer;\n            while (!isNOU(parentElem) && parentElem.nodeName !== 'PRE' && parentElem !== editNode) {\n                parentElem = parentElem.parentElement;\n            }\n            if (!isNOU(node) && !isNOU(parentElem) && parentElem.nodeName === 'PRE') {\n                range.insertNode(node);\n                lastSelectionNode = node.lastChild;\n            }\n            else {\n                this.insertTempNode(range, node, nodes, nodeCutter, editNode);\n                var isFirstTextNode = true;\n                var isPreviousInlineElem = void 0;\n                var paraElm = void 0;\n                var previousParent = void 0;\n                if (!this.contentsDeleted) {\n                    if (!isCollapsed && range.startContainer.parentElement.textContent.length === 0 && range.startContainer.nodeName === 'BR' && range.startContainer.parentElement.nodeName === 'P') {\n                        editNode.removeChild(range.startContainer.parentElement);\n                    }\n                    range.deleteContents();\n                }\n                while (node.firstChild) {\n                    if (node.firstChild.nodeName === '#text' && node.firstChild.textContent.trim() === '') {\n                        detach(node.firstChild);\n                        continue;\n                    }\n                    if (node.firstChild.nodeName === '#text' && isFirstTextNode ||\n                        (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0 && isFirstTextNode)) {\n                        lastSelectionNode = node.firstChild;\n                        if (isNOU(node.previousElementSibling)) {\n                            var firstParaElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n                            node.parentElement.insertBefore(firstParaElm, node);\n                        }\n                        if (node.previousElementSibling.nodeName === 'BR') {\n                            node.parentElement.insertBefore(node.firstChild, node);\n                        }\n                        else {\n                            node.previousElementSibling.appendChild(node.firstChild);\n                        }\n                    }\n                    else {\n                        lastSelectionNode = node.firstChild;\n                        if (node.firstChild.nodeName === '#text' ||\n                            (this.inlineNode.indexOf(node.firstChild.nodeName.toLocaleLowerCase()) >= 0)) {\n                            if (!isPreviousInlineElem) {\n                                paraElm = enterAction === 'DIV' ? createElement('div') : createElement('p');\n                                paraElm.appendChild(node.firstChild);\n                                fragment.appendChild(paraElm);\n                            }\n                            else {\n                                previousParent.appendChild(node.firstChild);\n                                fragment.appendChild(previousParent);\n                            }\n                            previousParent = paraElm;\n                            isPreviousInlineElem = true;\n                        }\n                        else {\n                            fragment.appendChild(node.firstChild);\n                            isPreviousInlineElem = false;\n                        }\n                        isFirstTextNode = false;\n                    }\n                }\n                node.parentNode.replaceChild(fragment, node);\n            }\n        }\n        if (lastSelectionNode.nodeName === 'TABLE') {\n            var pTag = createElement('p');\n            pTag.appendChild(createElement('br'));\n            lastSelectionNode.parentElement.insertBefore(pTag, lastSelectionNode.nextSibling);\n            lastSelectionNode = pTag;\n        }\n        if (lastSelectionNode.nodeName === '#text') {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n        }\n        else if (lastSelectionNode.nodeName === 'HR') {\n            var nextSiblingNode = lastSelectionNode.nextSibling ? lastSelectionNode.nextSibling : null;\n            var siblingTag = enterAction === 'DIV' ? createElement('div') : createElement('p');\n            siblingTag.appendChild(createElement('br'));\n            if (!isNOU(nextSiblingNode) && nextSiblingNode.nodeName === 'HR') {\n                lastSelectionNode.parentNode.insertBefore(siblingTag, nextSiblingNode);\n                lastSelectionNode = siblingTag;\n            }\n            else if (!isNOU(nextSiblingNode)) {\n                lastSelectionNode = nextSiblingNode;\n            }\n            else {\n                lastSelectionNode.parentNode.appendChild(siblingTag);\n                lastSelectionNode.parentNode.insertBefore(lastSelectionNode, siblingTag);\n                lastSelectionNode = siblingTag;\n            }\n            nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, 0, 0);\n        }\n        else {\n            this.cursorPos(lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction);\n        }\n        this.alignCheck(editNode);\n        this.listCleanUp(nodeSelection, docElement);\n    };\n    InsertHtml.listCleanUp = function (nodeSelection, docElement) {\n        var range = nodeSelection.getRange(docElement);\n        var startContainer = range.startContainer;\n        var startOffset = range.startOffset;\n        var startParentElement = range.startContainer.parentElement;\n        var endParentElement = range.endContainer.parentElement;\n        if (!isNOU(startParentElement) && !isNOU(endParentElement)) {\n            var startClosestList = startParentElement.closest('ol, ul');\n            var endClosestList = endParentElement.closest('ol, ul');\n            if (!isNOU(startClosestList) && !isNOU(endClosestList)) {\n                var hasListCleanUp = this.cleanUpListItems(startClosestList);\n                var hasListContainerCleanUp = this.cleanUpListContainer(startClosestList);\n                if (hasListCleanUp || hasListContainerCleanUp) {\n                    range.setStart(startContainer, startOffset);\n                    range.setEnd(startContainer, startOffset);\n                }\n            }\n        }\n    };\n    InsertHtml.cleanUpListItems = function (parentContainer) {\n        var _this = this;\n        var hasListCleanUp = false;\n        var listItems;\n        if (!isNOU(parentContainer.closest('ol, ul'))) {\n            listItems = parentContainer.closest('ol, ul').querySelectorAll('li');\n        }\n        if (isNOU(listItems) || listItems.length === 0) {\n            return false;\n        }\n        var nearestListItem = null;\n        listItems.forEach(function (listItem) {\n            var parentElement = listItem.parentElement;\n            if (!isNOU(parentElement) && parentElement.nodeName !== 'OL' && parentElement.nodeName !== 'UL') {\n                if (isNOU(nearestListItem)) {\n                    nearestListItem = parentElement.closest('li');\n                }\n                if (!isNOU(nearestListItem)) {\n                    var nextSibling = listItem.nextSibling;\n                    if (!isNOU(nextSibling) && nextSibling.nodeName !== 'LI') {\n                        var startIndex = Array.prototype.indexOf.call(parentElement.childNodes, nextSibling);\n                        var clonedParent = parentElement.cloneNode(false);\n                        var totalChildren = parentElement.childNodes.length;\n                        for (var i = startIndex; i < totalChildren; i++) {\n                            clonedParent.appendChild(parentElement.childNodes[startIndex]);\n                        }\n                        if (clonedParent.childNodes.length > 0) {\n                            var newListItem = document.createElement('li');\n                            newListItem.appendChild(clonedParent);\n                            nearestListItem.insertAdjacentElement('afterend', newListItem);\n                        }\n                        else {\n                            clonedParent.remove();\n                        }\n                    }\n                    var closestList = parentElement.closest('ol, ul');\n                    nearestListItem.insertAdjacentElement('afterend', listItem);\n                    nearestListItem = nearestListItem.nextSibling;\n                    if (!isNOU(closestList)) {\n                        _this.removeEmptyElements(closestList);\n                    }\n                    hasListCleanUp = true;\n                }\n            }\n        });\n        var cleanUpFlattenListContainer = this.cleanUpFlattenListContainer(parentContainer);\n        hasListCleanUp = cleanUpFlattenListContainer ? cleanUpFlattenListContainer : hasListCleanUp;\n        return hasListCleanUp;\n    };\n    InsertHtml.cleanUpFlattenListContainer = function (parentContainer) {\n        var hasListCleanUp = false;\n        var listItems;\n        if (!isNOU(parentContainer.closest('ol, ul'))) {\n            listItems = parentContainer.closest('ol, ul').querySelectorAll('li');\n        }\n        if (isNOU(listItems) || listItems.length === 0) {\n            return false;\n        }\n        listItems.forEach(function (listItem) {\n            if (!isNOU(listItem.firstChild) && (listItem.firstChild.nodeName === 'OL' || listItem.firstChild.nodeName === 'UL')) {\n                listItem.style.listStyleType = 'none';\n            }\n            var nestedLi = Array.from(listItem.children).find(function (child) {\n                return child.tagName === 'LI' && (child.parentElement && child.parentElement.tagName !== 'OL' && child.parentElement.tagName !== 'UL');\n            });\n            if (!isNOU(nestedLi) && !isNOU(listItem.parentNode)) {\n                listItem.parentNode.replaceChild(nestedLi, listItem);\n                if (isNOU(nestedLi.textContent) || nestedLi.textContent.trim() === '') {\n                    nestedLi.remove();\n                }\n                hasListCleanUp = true;\n            }\n        });\n        return hasListCleanUp;\n    };\n    InsertHtml.cleanUpListContainer = function (parentList) {\n        var hasListContainerCleanUp = false;\n        var nonLiElementCollection = [];\n        var replacements = [];\n        if (!isNOU(parentList)) {\n            parentList.childNodes.forEach(function (childNode) {\n                if (childNode.nodeName.toLocaleUpperCase() !== 'LI') {\n                    nonLiElementCollection.push(childNode);\n                }\n                if ((childNode.nodeName.toLocaleUpperCase() === 'LI' || parentList.lastChild === childNode) && nonLiElementCollection.length > 0) {\n                    replacements.push({ elements: nonLiElementCollection.slice() });\n                    nonLiElementCollection = [];\n                }\n            });\n            replacements.forEach(function (_a) {\n                var elements = _a.elements;\n                var newListItem = document.createElement('li');\n                elements[0].parentNode.replaceChild(newListItem, elements[0]);\n                elements.forEach(function (child) { return newListItem.appendChild(child); });\n                if (newListItem.textContent && newListItem.textContent.trim() === '') {\n                    parentList.removeChild(newListItem);\n                }\n                hasListContainerCleanUp = true;\n            });\n        }\n        return hasListContainerCleanUp;\n    };\n    InsertHtml.placeCursorEnd = function (lastSelectionNode, node, nodeSelection, docElement, editNode) {\n        lastSelectionNode = lastSelectionNode.nodeName === 'BR' ? (isNOU(lastSelectionNode.previousSibling) ? lastSelectionNode.parentNode\n            : lastSelectionNode.previousSibling) : lastSelectionNode;\n        while (!isNOU(lastSelectionNode) && lastSelectionNode.nodeName !== '#text' && lastSelectionNode.nodeName !== 'IMG' &&\n            lastSelectionNode.nodeName !== 'BR' && lastSelectionNode.nodeName !== 'HR') {\n            if (!isNOU(lastSelectionNode.lastChild) && (lastSelectionNode.lastChild.nodeName === 'P' &&\n                lastSelectionNode.lastChild.innerHTML === '')) {\n                var lineBreak = createElement('br');\n                lastSelectionNode.lastChild.appendChild(lineBreak);\n            }\n            lastSelectionNode = lastSelectionNode.lastChild;\n        }\n        lastSelectionNode = isNOU(lastSelectionNode) ? node : lastSelectionNode;\n        if (lastSelectionNode.nodeName === 'IMG') {\n            this.imageFocus(lastSelectionNode, nodeSelection, docElement);\n        }\n        else {\n            nodeSelection.setSelectionText(docElement, lastSelectionNode, lastSelectionNode, lastSelectionNode.textContent.length, lastSelectionNode.textContent.length);\n        }\n        this.removeEmptyElements(editNode);\n    };\n    InsertHtml.getNodeCollection = function (range, nodeSelection, node) {\n        var nodes = [];\n        if (range.startOffset === range.endOffset && range.startContainer === range.endContainer &&\n            range.startContainer.nodeName !== 'BR' && range.startContainer.childNodes.length > 0 &&\n            (range.startContainer.nodeName === 'TD' || (range.startContainer.nodeType !== 3 &&\n                node.classList && node.classList.contains('pasteContent')))) {\n            nodes.push(range.startContainer.childNodes[range.endOffset]);\n        }\n        else {\n            nodes = nodeSelection.getInsertNodeCollection(range);\n        }\n        return nodes;\n    };\n    InsertHtml.insertTempNode = function (range, node, nodes, nodeCutter, editNode) {\n        if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset - 1]) &&\n            range.startContainer.childNodes[range.endOffset - 1].nodeName === 'TABLE') {\n            if (isNOU(range.startContainer.childNodes[range.endOffset - 1].nextSibling)) {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset - 1].nextSibling);\n            }\n        }\n        else if (range.startContainer === editNode && !isNOU(range.startContainer.childNodes[range.endOffset]) &&\n            range.startContainer.childNodes[range.endOffset].nodeName === 'TABLE') {\n            range.startContainer.insertBefore(node, range.startContainer.childNodes[range.endOffset]);\n        }\n        else if (range.startContainer === range.endContainer && range.startContainer.nodeType !== 3\n            && node.firstChild.nodeName === 'HR') {\n            if (range.startContainer.classList.contains('e-content') || range.startContainer.nodeName === 'BODY') {\n                range.startContainer.appendChild(node);\n            }\n            else {\n                range.startContainer.parentNode.insertBefore(node, range.startContainer);\n            }\n        }\n        else {\n            var blockNode = this.getImmediateBlockNode(nodes[nodes.length - 1], editNode);\n            if ((isNOU(blockNode) || isNOU(blockNode.parentElement)) && range.endContainer.nodeType !== 3) {\n                blockNode = range.endContainer;\n                range.setEnd(blockNode, range.endContainer.textContent.length);\n            }\n            if (blockNode && blockNode.nodeName === 'BODY' || blockNode.nodeName === 'DIV' && range.startContainer === range.endContainer && range.startContainer.nodeType === 1) {\n                blockNode = range.startContainer;\n            }\n            if (blockNode && blockNode.closest('LI') && editNode.contains(blockNode.closest('LI')) && blockNode.nodeName !== 'TD' && blockNode.nodeName !== 'TH' && blockNode.nodeName !== 'TR' && node && node.firstElementChild &&\n                ((node).firstElementChild.tagName === 'OL' || node.firstElementChild.tagName === 'UL')) {\n                var liNode = void 0;\n                while (node.firstElementChild.lastElementChild && node.firstElementChild.lastElementChild.tagName === 'LI') {\n                    liNode = node.firstElementChild.lastElementChild;\n                    liNode.style.removeProperty('margin-left');\n                    liNode.style.removeProperty('margin-top');\n                    liNode.style.removeProperty('margin-bottom');\n                    node.firstElementChild.insertAdjacentElement('afterend', liNode);\n                }\n            }\n            if (blockNode && blockNode.nodeName === 'TD' || blockNode.nodeName === 'TH' || blockNode.nodeName === 'TR') {\n                var tempSpan = createElement('span', { className: 'tempSpan' });\n                range.insertNode(tempSpan);\n                tempSpan.parentNode.replaceChild(node, tempSpan);\n            }\n            else {\n                var nodeSelection = new NodeSelection(editNode);\n                var currentNode = this.getNodeCollection(range, nodeSelection, node)[this.getNodeCollection(range, nodeSelection, node).length - 1];\n                var splitedElm = void 0;\n                if (currentNode && ((currentNode.nodeName === 'BR' || currentNode.nodeName === 'HR' ||\n                    (currentNode.nodeName === '#text' && !isNOU(currentNode.parentElement) && currentNode.parentElement.nodeName === 'LI')) &&\n                    (!isNOU(currentNode.parentElement) && currentNode.parentElement.textContent.trim().length === 0))) {\n                    splitedElm = currentNode;\n                    if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) &&\n                        currentNode.nextSibling.nodeName === 'BR') {\n                        detach(currentNode.nextSibling);\n                    }\n                    if (currentNode.parentElement.nodeName === 'LI' && currentNode.parentElement.textContent === '') {\n                        this.removeListfromPaste(range);\n                        range.insertNode(node);\n                        this.contentsDeleted = true;\n                        return;\n                    }\n                }\n                else if (currentNode && ((currentNode.nodeName === '#text' || currentNode.nodeName === 'BR') && !isNOU(currentNode.parentElement) &&\n                    (currentNode.parentElement.nodeName === 'LI' || currentNode.parentElement.closest('LI') || (blockNode === editNode && currentNode.parentElement === blockNode)) &&\n                    currentNode.parentElement.textContent.trim().length > 0)) {\n                    splitedElm = currentNode;\n                    if (currentNode.parentElement.nodeName === 'LI' && !isNOU(currentNode.nextSibling) &&\n                        currentNode.nextSibling.nodeName === 'BR') {\n                        detach(currentNode.nextSibling);\n                    }\n                    if (!range.collapsed) {\n                        var startContainer = range.startContainer;\n                        var startOffset = range.startOffset;\n                        this.removeListfromPaste(range);\n                        range.setStart(startContainer, startOffset);\n                        range.setEnd(startContainer, startOffset);\n                    }\n                    range.insertNode(node);\n                    this.contentsDeleted = true;\n                    return;\n                }\n                else {\n                    splitedElm = nodeCutter.GetSpliceNode(range, blockNode);\n                }\n                splitedElm.parentNode.replaceChild(node, splitedElm);\n            }\n        }\n    };\n    InsertHtml.cursorPos = function (lastSelectionNode, node, nodeSelection, docElement, editNode, enterAction) {\n        lastSelectionNode.classList.add('lastNode');\n        editNode.innerHTML = updateTextNode(editNode.innerHTML, enterAction);\n        lastSelectionNode = editNode.querySelector('.lastNode');\n        if (!isNOU(lastSelectionNode)) {\n            this.placeCursorEnd(lastSelectionNode, node, nodeSelection, docElement, editNode);\n            lastSelectionNode.classList.remove('lastNode');\n            if (lastSelectionNode.classList.length === 0) {\n                lastSelectionNode.removeAttribute('class');\n            }\n        }\n    };\n    InsertHtml.imageFocus = function (node, nodeSelection, docElement) {\n        var focusNode = document.createTextNode(' ');\n        if (node.parentNode && node.parentNode.nodeName === 'A') {\n            var anchorTag = node.parentNode;\n            var parentNode = anchorTag.parentNode;\n            parentNode.insertBefore(focusNode, anchorTag.nextSibling);\n            parentNode.insertBefore(node, focusNode);\n        }\n        else {\n            node.parentNode.insertBefore(focusNode, node.nextSibling);\n        }\n        nodeSelection.setSelectionText(docElement, node.nextSibling, node.nextSibling, 0, 0);\n    };\n    // eslint-disable-next-line\n    InsertHtml.getImmediateBlockNode = function (node, editNode) {\n        while (node && CONSTANT.BLOCK_TAGS.indexOf(node.nodeName.toLocaleLowerCase()) < 0) {\n            node = node.parentNode;\n        }\n        return node;\n    };\n    InsertHtml.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    InsertHtml.findDetachEmptyElem = function (element, ignoreBlockNodes) {\n        if (ignoreBlockNodes === void 0) { ignoreBlockNodes = false; }\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g)\n                && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n            if (!hasNbsp && element.parentElement.textContent.trim() === '' && element.parentElement.contentEditable !== 'true' &&\n                isNOU(element.parentElement.querySelector('img')) && element.parentElement.nodeName !== 'TD' && element.parentElement.nodeName !== 'TH') {\n                removableElement = ignoreBlockNodes && CONSTANT.BLOCK_TAGS.indexOf(element.parentElement.tagName.toLowerCase()) !== -1 ?\n                    element : this.findDetachEmptyElem(element.parentElement, ignoreBlockNodes);\n            }\n            else {\n                removableElement = ignoreBlockNodes && CONSTANT.BLOCK_TAGS.indexOf(element.tagName.toLowerCase()) !== -1 ? null :\n                    element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    InsertHtml.removeEmptyElements = function (element, ignoreBlockNodes) {\n        if (ignoreBlockNodes === void 0) { ignoreBlockNodes = false; }\n        var emptyElements = element.querySelectorAll(':empty');\n        var nonSvgEmptyElements = Array.from(emptyElements).filter(function (element) {\n            // Check if the element is an SVG element or an ancestor of an SVG element\n            return !element.closest('svg') && !element.closest('canvas');\n        });\n        for (var i = 0; i < nonSvgEmptyElements.length; i++) {\n            var lineWithDiv = true;\n            if (nonSvgEmptyElements[i].tagName === 'DIV') {\n                lineWithDiv = nonSvgEmptyElements[i].style.borderBottom === 'none' ||\n                    nonSvgEmptyElements[i].style.borderBottom === '' ? true : false;\n            }\n            if (CONSTANT.SELF_CLOSING_TAGS.indexOf(nonSvgEmptyElements[i].tagName.toLowerCase()) < 0 && lineWithDiv) {\n                var detachableElement = this.findDetachEmptyElem(nonSvgEmptyElements[i], ignoreBlockNodes);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    InsertHtml.closestEle = function (element, editNode) {\n        var el = element;\n        if (closest(el, 'li')) {\n            return closest(el, 'li');\n        }\n        while (el && el.nodeType === 1) {\n            if (el.parentNode === editNode ||\n                (!isNOU(el.parentNode.tagName) &&\n                    (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1\n                        || CONSTANT.ALLOWED_TABLE_BLOCK_TAGS.indexOf(el.parentNode.tagName.toLocaleLowerCase()) !== -1))) {\n                return el;\n            }\n            el = el.parentNode;\n        }\n        return null;\n    };\n    InsertHtml.insertTableInList = function (range, insertNode, parentNode, currentNode, nodeCutter) {\n        if (range.collapsed) {\n            var isStart = range.startOffset === 0;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var isEnd = range.startContainer.textContent.trimEnd().length === range.startOffset;\n            if (isStart || isEnd) {\n                if (isStart) {\n                    InsertMethods.AppendBefore(insertNode, currentNode, false);\n                }\n                else {\n                    InsertMethods.AppendBefore(insertNode, currentNode, true);\n                }\n            }\n            else {\n                var preNode = nodeCutter.SplitNode(range, parentNode, true);\n                var sibNode = preNode.previousSibling;\n                sibNode.appendChild(insertNode);\n            }\n        }\n        else {\n            range.deleteContents();\n            parentNode.appendChild(insertNode);\n        }\n        insertNode.classList.add('ignore-table');\n    };\n    InsertHtml.alignCheck = function (editNode) {\n        var spanAligns = editNode.querySelectorAll('span[style*=\"text-align\"]');\n        for (var i = 0; i < spanAligns.length; i++) {\n            var spanAlign = spanAligns[i];\n            if (spanAlign) {\n                var blockAlign = this.getImmediateBlockNode(spanAlign, null);\n                if (blockAlign) {\n                    var totalSpanText = '';\n                    for (var j = 0; j < spanAligns.length; j++) {\n                        var span = spanAligns[j];\n                        if (blockAlign.contains(span)) {\n                            totalSpanText += span.textContent;\n                        }\n                    }\n                    if (blockAlign.textContent.trim() === totalSpanText.trim()) {\n                        blockAlign.style.textAlign = spanAlign.style.textAlign;\n                    }\n                }\n            }\n        }\n    };\n    InsertHtml.removeListfromPaste = function (range) {\n        range.deleteContents();\n        var value = range.startContainer;\n        if (!isNOU(value) && value.nodeName === 'LI' && !isNOU(value.parentElement) && (value.parentElement.nodeName === 'OL' || value.parentElement.nodeName === 'UL') && value.textContent.trim() === '') {\n            value.parentElement.querySelectorAll('li').forEach(function (item) {\n                if (item.textContent.trim() === '' && item !== value) {\n                    item.remove();\n                }\n            });\n        }\n    };\n    /**\n     * Insert method\n     *\n     * @hidden\n\n     */\n    InsertHtml.inlineNode = ['a', 'abbr', 'acronym', 'audio', 'b', 'bdi', 'bdo', 'big', 'br', 'button',\n        'canvas', 'cite', 'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'font', 'i', 'iframe', 'img', 'input',\n        'ins', 'kbd', 'label', 'map', 'mark', 'meter', 'noscript', 'object', 'output', 'picture', 'progress',\n        'q', 'ruby', 's', 'samp', 'script', 'select', 'slot', 'small', 'span', 'strong', 'sub', 'sup', 'svg',\n        'template', 'textarea', 'time', 'u', 'tt', 'var', 'video', 'wbr'];\n    InsertHtml.contentsDeleted = false;\n    return InsertHtml;\n}());\nexport { InsertHtml };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}