{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { isNullOrUndefined, getValue, extend, setValue } from '@syncfusion/ej2-base';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isCountRequired, isScheduledTask } from './utils';\nimport { DateProcessor } from './date-processor';\n/**\n * To calculate and update task related values\n */\nvar TaskProcessor = /** @class */function (_super) {\n  __extends(TaskProcessor, _super);\n  function TaskProcessor(parent) {\n    var _this = _super.call(this, parent) || this;\n    _this.customSegmentProperties = [];\n    _this.recordIndex = 0;\n    _this.taskIds = [];\n    _this.hierarchyData = [];\n    _this.addEventListener();\n    return _this;\n  }\n  TaskProcessor.prototype.addEventListener = function () {\n    this.parent.on('beforeDataManipulate', this.checkDataBinding.bind(this));\n  };\n  /**\n   * @param {boolean} isChange .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.checkDataBinding = function (isChange) {\n    var _this = this;\n    if (isChange) {\n      this.parent.flatData = [];\n      this.parent.currentViewData = [];\n      this.parent.updatedRecords = [];\n      this.dataArray = [];\n      this.taskIds = [];\n      this.parent.ids = [];\n      this.recordIndex = 0;\n      this.hierarchyData = [];\n      this.parent.predecessorsCollection = [];\n      this.parent.treeGrid.parentData = [];\n      this.parent.taskIds = [];\n    }\n    if (isNullOrUndefined(this.parent.dataSource)) {\n      this.parent.dataSource = [];\n      this.parent.processTimeline();\n      this.parent.renderGantt(isChange);\n    } else if (this.parent.dataSource instanceof DataManager) {\n      this.initDataSource(isChange);\n    } else {\n      if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n        var ganttdata = getValue('result', this.parent.dataSource);\n        this.dataArray = ganttdata;\n      } else {\n        this.dataArray = this.parent.dataSource;\n      }\n      this.processTimeline();\n      this.cloneDataSource();\n      this.parent.renderGantt(isChange);\n      this.parent.flatData.map(function (data) {\n        _this.parent.chartRowsModule.updateSegment(data.ganttProperties.segments, data.ganttProperties.taskId);\n      });\n    }\n    this.parent.flatData.map(function (data) {\n      _this.parent.chartRowsModule.updateSegment(data.ganttProperties.segments, data.ganttProperties.taskId);\n    });\n  };\n  TaskProcessor.prototype.processTimeline = function () {\n    this.parent.processTimeline();\n    if (!this.parent.enableValidation) {\n      this.parent.dataOperation.calculateProjectDatesForValidatedTasks();\n      this.parent.timelineModule.validateTimelineProp();\n    }\n  };\n  TaskProcessor.prototype.initDataSource = function (isChange) {\n    var _this = this;\n    var queryManager = this.parent.query instanceof Query ? this.parent.query : new Query();\n    queryManager.requiresCount();\n    var dataManager = this.parent.dataSource;\n    if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      this.processTimeline();\n      this.parent.renderGantt(isChange);\n    } else {\n      dataManager.executeQuery(queryManager).then(function (e) {\n        _this.dataArray = e.result;\n        _this.processTimeline();\n        if (!_this.parent.loadChildOnDemand || _this.parent.loadChildOnDemand && !_this.parent.taskFields.hasChildMapping) {\n          _this.cloneDataSource();\n        }\n        _this.parent.renderGantt(isChange);\n      }).catch(function (e) {\n        // Trigger action failure event\n        _this.parent.processTimeline();\n        _this.parent.renderGantt(isChange);\n        _this.parent.trigger('actionFailure', {\n          error: e\n        });\n      });\n    }\n  };\n  TaskProcessor.prototype.constructDataSource = function (dataSource) {\n    var mappingData = new DataManager(dataSource).executeLocal(new Query().group(this.parent.taskFields.parentID));\n    var rootData = [];\n    var index;\n    for (var i = 0; i < mappingData.length; i++) {\n      var groupData = mappingData[i];\n      if (!isNullOrUndefined(groupData.key)) {\n        index = this.taskIds.indexOf(groupData.key.toString());\n        if (index > -1) {\n          if (!isNullOrUndefined(groupData.key)) {\n            dataSource[index][this.parent.taskFields.child] = groupData.items;\n            continue;\n          }\n        }\n      }\n      if (index !== -1) {\n        rootData.push.apply(rootData, groupData.items); // eslint-disable-line\n      }\n    }\n    this.hierarchyData = this.dataReorder(dataSource, rootData);\n  };\n  TaskProcessor.prototype.cloneDataSource = function () {\n    var taskIdMapping = this.parent.taskFields.id;\n    var parentIdMapping = this.parent.taskFields.parentID;\n    var hierarchicalData = [];\n    if (!isNullOrUndefined(taskIdMapping) && !isNullOrUndefined(parentIdMapping)) {\n      var data = [];\n      for (var i = 0; i < this.dataArray.length; i++) {\n        var tempData = this.dataArray[i];\n        if (tempData['parentItem']) {\n          delete tempData['parentItem'];\n        }\n        data.push(extend({}, {}, tempData, true));\n        if (!isNullOrUndefined(tempData[taskIdMapping])) {\n          this.taskIds.push(tempData[taskIdMapping].toString());\n        }\n      }\n      if (!this.parent.taskFields.child) {\n        this.parent.setProperties({\n          taskFields: {\n            child: 'Children'\n          }\n        }, true);\n      }\n      this.constructDataSource(data);\n      if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n        hierarchicalData = this.dataArray;\n      } else {\n        hierarchicalData = this.hierarchyData;\n      }\n    } else {\n      hierarchicalData = this.dataArray;\n    }\n    if (this.parent.taskFields.segmentId) {\n      this.segmentCollection = new DataManager(this.parent.segmentData).executeLocal(new Query().group(this.parent.taskFields.segmentId));\n      if (!this.parent.taskFields.segments) {\n        this.parent.taskFields.segments = 'Segments';\n      }\n    }\n    if (this.parent.viewType !== 'ProjectView') {\n      var resources = extend([], [], this.parent.resources, true);\n      var unassignedTasks = [];\n      this.constructResourceViewDataSource(resources, hierarchicalData, unassignedTasks);\n      if (unassignedTasks.length > 0) {\n        var record = {};\n        var resourceName = this.parent.resourceFields.name || 'resourceName';\n        record[this.parent.resourceFields.id] = 0;\n        record[resourceName] = this.parent.localeObj.getConstant('unassignedTask');\n        record[this.parent.taskFields.child] = unassignedTasks;\n        resources.push(record);\n      }\n      hierarchicalData = resources;\n    }\n    this.prepareDataSource(hierarchicalData);\n  };\n  /**\n   * @param {object[]} resources .\n   * @param {object[]} data .\n   * @param {object[]} unassignedTasks .\n   * @returns {void} .\n   *\n   */\n  TaskProcessor.prototype.constructResourceViewDataSource = function (resources, data, unassignedTasks) {\n    var _loop_1 = function (i) {\n      var tempData = data[i];\n      var child = this_1.parent.taskFields.child !== null ? this_1.parent.taskFields.child : this_1.parent.taskFields.child = 'Children';\n      var resourceData = tempData && tempData[this_1.parent.taskFields.resourceInfo];\n      var resourceIdMapping = this_1.parent.resourceFields.id;\n      if ((!tempData[child] || tempData[child].length === 0) && resourceData && resourceData.length) {\n        if (typeof resourceData === 'string') {\n          this_1.isResourceString = true;\n          var id = resourceData;\n          for (var j = 0; j < resources.length; j++) {\n            if (resources[j][this_1.parent.resourceFields.name].toString() === id.toString()) {\n              if (resources[j][child]) {\n                resources[j][child].push(tempData);\n              } else {\n                resources[j][child] = [tempData];\n              }\n              break;\n            }\n          }\n        } else {\n          resourceData.forEach(function (resource) {\n            var id = typeof resource === 'object' ? resource[resourceIdMapping] : resource;\n            for (var j = 0; j < resources.length; j++) {\n              if (resources[j][resourceIdMapping].toString() === id.toString()) {\n                if (resources[j][child]) {\n                  resources[j][child].push(tempData);\n                } else {\n                  resources[j][child] = [tempData];\n                }\n                break;\n              }\n            }\n          });\n        }\n      } else if (!tempData[child] || tempData[child] && tempData[child].length === 0) {\n        unassignedTasks.push(tempData);\n      }\n      if (tempData[this_1.parent.taskFields.child] && tempData[this_1.parent.taskFields.child].length) {\n        this_1.constructResourceViewDataSource(resources, tempData[this_1.parent.taskFields.child], unassignedTasks);\n      }\n    };\n    var this_1 = this;\n    for (var i = 0; i < data.length; i++) {\n      _loop_1(i);\n    }\n  };\n  /**\n   * Function to manipulate data-source\n   *\n   * @param {object[]} data .\n   * @returns {void} .\n   * @hidden\n   */\n  TaskProcessor.prototype.prepareDataSource = function (data) {\n    this.prepareRecordCollection(data, 0);\n    this.parent.initialLoadData = extend({}, {}, this.parent.flatData, true);\n    if (!this.parent.autoCalculateDateScheduling || this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      this.parent.dataMap = this.parent.flatData.reduce(function (map, val) {\n        map.set(val.uniqueID, val);\n        return map;\n      }, new Map());\n    }\n    // Method to maintain the shared task uniqueIds\n    if (this.parent.viewType === 'ResourceView') {\n      this.calculateSharedTaskUniqueIds();\n    }\n    if (this.parent.taskFields.dependency && this.parent.predecessorModule) {\n      this.parent.predecessorModule.ensurePredecessorCollection();\n    }\n  };\n  TaskProcessor.prototype.calculateSharedTaskUniqueIds = function () {\n    var _loop_2 = function (i) {\n      var value = [];\n      value[0] = this_2.parent.getTaskIds()[i][0];\n      value[1] = this_2.parent.getTaskIds()[i].slice(1);\n      if (value[0] !== 'R') {\n        var sharedRecords_1 = [];\n        var ids_1 = [];\n        this_2.parent.flatData.filter(function (data) {\n          if (data.ganttProperties.taskId.toString() === value[1] && data.level !== 0) {\n            ids_1.push(data.ganttProperties.rowUniqueID);\n            sharedRecords_1.push(data);\n          }\n        });\n        for (var j = 0; j < sharedRecords_1.length; j++) {\n          sharedRecords_1[j].ganttProperties.sharedTaskUniqueIds = ids_1;\n        }\n      }\n    };\n    var this_2 = this;\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      _loop_2(i);\n    }\n  };\n  TaskProcessor.prototype.prepareRecordCollection = function (data, level, parentItem) {\n    var _this = this;\n    var length = data.length;\n    var _loop_3 = function (i) {\n      var tempData = data[i];\n      if (!isNullOrUndefined(this_3.parent.taskFields.segmentId)) {\n        var segmentData = this_3.segmentCollection.filter(function (x) {\n          return x.key === tempData[_this.parent.taskFields.id];\n        });\n        if (segmentData.length > 0) {\n          tempData[this_3.parent.taskFields.segments] = segmentData[0].items;\n        }\n      }\n      if (this_3.parent.taskFields.hasChildMapping && tempData['parentUniqueID']) {\n        parentItem = this_3.parent.getTaskByUniqueID(tempData['parentUniqueID']);\n      }\n      var ganttData = this_3.createRecord(tempData, level, parentItem, true);\n      if (!this_3.parent.enableValidation || !this_3.parent.autoCalculateDateScheduling || this_3.parent.isLoad && this_3.parent.treeGrid.loadChildOnDemand && this_3.parent.taskFields.hasChildMapping) {\n        this_3.updateTaskLeftWidth(ganttData);\n      }\n      ganttData.index = this_3.recordIndex++;\n      this_3.parent.ids[ganttData.index] = ganttData.ganttProperties.rowUniqueID;\n      this_3.parent.flatData.push(ganttData);\n      this_3.parent.setTaskIds(ganttData);\n      var childData = tempData[this_3.parent.taskFields.child] || tempData['taskData'] && tempData['taskData'][this_3.parent.taskFields.child];\n      if (this_3.parent.viewType === 'ResourceView' && isNullOrUndefined(childData) && isNullOrUndefined(ganttData.parentItem) && ganttData.level === 0) {\n        var ganttProp = ganttData.ganttProperties;\n        var parentData = ganttData;\n        this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', null, parentData.ganttProperties, true);\n        this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', null, parentData.ganttProperties, true);\n        var parentProgress = 0;\n        var parentProp = parentData.ganttProperties;\n        this_3.parent.setRecordValue('isMilestone', false, parentProp, true);\n        if (parentProp.isAutoSchedule) {\n          this_3.calculateDuration(parentData);\n        }\n        this_3.updateWorkWithDuration(parentData);\n        var parentWork = parentProp.work;\n        this_3.parent.setRecordValue('work', parentWork, parentProp, true);\n        this_3.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n        if (!isNullOrUndefined(this_3.parent.taskFields.type)) {\n          this_3.updateMappingData(parentData, 'type');\n        }\n        this_3.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n        this_3.parent.setRecordValue('totalProgress', 0, parentProp, true);\n        this_3.parent.setRecordValue('totalDuration', 0, parentProp, true);\n        if (!parentProp.isAutoSchedule) {\n          this_3.parent.setRecordValue('autoDuration', this_3.calculateAutoDuration(parentProp), parentProp, true);\n          this_3.updateAutoWidthLeft(parentData);\n        }\n        if (!this_3.parent.allowParentDependency) {\n          this_3.resetDependency(parentData);\n        }\n        this_3.updateWidthLeft(parentData);\n        this_3.updateTaskData(parentData);\n      }\n      if (this_3.parent.taskFields.hasChildMapping) {\n        parentItem = null;\n      }\n      if (!isNullOrUndefined(childData) && childData.length > 0) {\n        this_3.prepareRecordCollection(childData, ganttData.level + 1, ganttData);\n      }\n    };\n    var this_3 = this;\n    for (var i = 0; i < length; i++) {\n      _loop_3(i);\n    }\n  };\n  /**\n   * Method to update custom field values in gantt record\n   *\n   * @param {object} data .\n   * @param {IGanttData} ganttRecord .\n   * @returns {void} .\n   */\n  TaskProcessor.prototype.addCustomFieldValue = function (data, ganttRecord) {\n    var columns = this.parent.ganttColumns;\n    var length = columns.length;\n    if (length) {\n      for (var i = 0; i < length; i++) {\n        var fieldName = ganttRecord[columns[i].field];\n        if (fieldName === undefined) {\n          this.parent.setRecordValue(columns[i].field, data[columns[i].field], ganttRecord);\n        }\n      }\n    }\n  };\n  /**\n   * To populate Gantt record\n   *\n   * @param {object} data .\n   * @param {number} level .\n   * @param {IGanttData} parentItem .\n   * @param {boolean} isLoad .\n   * @returns {IGanttData} .\n   * @private\n   */\n  TaskProcessor.prototype.createRecord = function (data, level, parentItem, isLoad) {\n    var taskSettings = this.parent.taskFields;\n    var resourceFields = this.parent.resourceFields;\n    var progress = data[taskSettings.progress];\n    var id = null;\n    var name = null;\n    var notes = data[taskSettings.notes];\n    progress = progress ? parseFloat(progress.toString()) ? parseFloat(progress.toString()) : 0 : 0;\n    progress = 100 < progress ? 100 : progress;\n    var predecessors = data[taskSettings.dependency];\n    var baselineStartDate = this.getDateFromFormat(data[taskSettings.baselineStartDate], true);\n    var baselineEndDate = this.getDateFromFormat(data[taskSettings.baselineEndDate], true);\n    var ganttData = {};\n    var ganttProperties = {};\n    var autoSchedule = this.parent.taskMode === 'Auto' ? true : this.parent.taskMode === 'Manual' ? false : data[taskSettings.manual] === true ? false : true;\n    this.parent.setRecordValue('ganttProperties', ganttProperties, ganttData);\n    if (data['ganttProperties'] && data['ganttProperties'].predecessor && data['ganttProperties'].predecessor.length > 0 && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      this.parent.setRecordValue('predecessor', data['ganttProperties'].predecessor, ganttProperties, true);\n    }\n    if (!isNullOrUndefined(data[taskSettings.id])) {\n      id = data[taskSettings.id];\n      name = data[taskSettings.name];\n      var shouldLoadChild = this.parent.loadChildOnDemand && taskSettings.hasChildMapping && data['taskData'] ? true : false;\n      if (shouldLoadChild) {\n        ganttData['taskData'] = data['taskData'];\n      } else {\n        if (data['taskData'] && data['ganttProperties']) {\n          this.addTaskData(ganttData, data['taskData'], isLoad);\n        } else {\n          this.addTaskData(ganttData, data, isLoad);\n        }\n      }\n    } else if (!isNullOrUndefined(data[resourceFields.id])) {\n      id = data[resourceFields.id];\n      if (isNullOrUndefined(data[resourceFields.name]) && data['resourceName'] === 'Unassigned Task') {\n        name = data['resourceName'];\n      } else {\n        name = data[resourceFields.name];\n      }\n      this.addTaskData(ganttData, data, false);\n    }\n    this.parent.setRecordValue('taskId', id, ganttProperties, true);\n    this.parent.setRecordValue('taskName', name, ganttProperties, true);\n    // eslint-disable-next-line\n    this.parent && taskSettings.parentID && this.parent.setRecordValue('parentId', data[taskSettings.parentID], ganttProperties, true);\n    this.addCustomFieldValue(data, ganttData);\n    this.parent.setRecordValue('isAutoSchedule', autoSchedule, ganttProperties, true);\n    if (!this.parent.undoRedoModule || this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n    } else if (data['ganttProperties']) {\n      this.parent.setRecordValue('resourceInfo', data['ganttProperties'].resourceInfo, ganttProperties, true);\n    }\n    this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n    this.parent.setRecordValue('indicators', data[taskSettings.indicators], ganttProperties, true);\n    this.updateResourceName(ganttData);\n    this.calculateScheduledValues(ganttData, data, isLoad);\n    this.parent.setRecordValue('baselineStartDate', this.checkBaselineStartDate(baselineStartDate, ganttProperties), ganttProperties, true);\n    // set default end time, if hour is 0\n    var dayEndTime;\n    if (this.parent.weekWorkingTime.length > 0 && baselineEndDate) {\n      dayEndTime = this.parent['getEndTime'](baselineEndDate);\n    } else {\n      dayEndTime = this.parent.defaultEndTime;\n    }\n    if (baselineEndDate && baselineEndDate.getHours() === 0 && dayEndTime !== 86400) {\n      this.setTime(dayEndTime, baselineEndDate);\n    }\n    if (ganttProperties.baselineStartDate && baselineEndDate && ganttProperties.baselineStartDate.getTime() > baselineEndDate.getTime() || !isNullOrUndefined(ganttProperties.baselineStartDate) && !isNullOrUndefined(ganttProperties.startDate) && ganttProperties.baselineStartDate.getTime() === ganttProperties.startDate.getTime() && !isNullOrUndefined(baselineEndDate) && !isNullOrUndefined(ganttProperties.endDate) && baselineEndDate.toLocaleDateString() === ganttProperties.endDate.toLocaleDateString() && ganttProperties.isMilestone) {\n      baselineEndDate = ganttProperties.baselineStartDate;\n    }\n    this.parent.setRecordValue('baselineEndDate', this.checkBaselineEndDate(baselineEndDate, ganttProperties), ganttProperties, true);\n    this.parent.setRecordValue('progress', progress, ganttProperties, true);\n    this.parent.setRecordValue('totalProgress', progress, ganttProperties, true);\n    if (data['ganttProperties'] && data['ganttProperties'].predecessorsName && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      this.parent.setRecordValue('predecessorsName', data['ganttProperties'].predecessorsName, ganttProperties, true);\n    } else {\n      this.parent.setRecordValue('predecessorsName', predecessors, ganttProperties, true);\n    }\n    this.parent.setRecordValue('notes', notes, ganttProperties, true);\n    this.parent.setRecordValue('cssClass', data[taskSettings.cssClass], ganttProperties, true);\n    this.parent.setRecordValue('parentItem', this.getCloneParent(parentItem), ganttData);\n    if (this.parent.loadChildOnDemand && taskSettings.hasChildMapping && this.parent.currentViewData.length > 0) {\n      this.parent.setRecordValue('parentItem', ganttData.parentItem, this.parent.currentViewData[this.taskIds.indexOf(data[taskSettings.id].toString())]);\n    }\n    var parentUniqId = ganttData.parentItem ? ganttData.parentItem.uniqueID : null;\n    this.parent.setRecordValue('parentUniqueID', parentUniqId, ganttData);\n    if (this.parent.viewType === 'ResourceView' && !isNullOrUndefined(taskSettings.parentID) && !isNullOrUndefined(ganttData.parentItem)) {\n      this.parent.setRecordValue('parentId', ganttData.parentItem.taskId, ganttProperties, true);\n    }\n    this.parent.setRecordValue('level', data['level'] ? data['level'] : level, ganttData);\n    if (data['ganttProperties'] && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      this.parent.setRecordValue('uniqueID', data['uniqueID'], ganttData);\n    } else {\n      if (this.parent.loadChildOnDemand && taskSettings.hasChildMapping && data['uniqueID']) {\n        this.parent.setRecordValue('uniqueID', data['uniqueID'], ganttData);\n      } else {\n        this.parent.setRecordValue('uniqueID', getUid(this.parent.element.id + '_data_'), ganttData);\n      }\n    }\n    this.parent.setRecordValue('uniqueID', ganttData.uniqueID, ganttProperties, true);\n    this.parent.setRecordValue('childRecords', [], ganttData);\n    if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) && !isNullOrUndefined(taskSettings.child)) {\n      this.parent.setRecordValue(taskSettings.child, [], ganttData);\n    }\n    if (!isNullOrUndefined(data[taskSettings.child]) && data[taskSettings.child].length > 0 || data['taskData'] && data['taskData'][taskSettings.child] && data['taskData'][taskSettings.child].length > 0) {\n      this.parent.setRecordValue('hasChildRecords', true, ganttData);\n      this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n      if (!this.parent.allowParentDependency) {\n        this.resetDependency(ganttData);\n      }\n    } else {\n      if (this.parent.loadChildOnDemand && taskSettings.hasChildMapping && ganttData.taskData[taskSettings.hasChildMapping]) {\n        this.parent.setRecordValue('hasChildRecords', true, ganttData);\n      } else {\n        this.parent.setRecordValue('hasChildRecords', false, ganttData);\n      }\n    }\n    if (ganttData.hasChildRecords) {\n      this.parent.setRecordValue('autoStartDate', ganttData.ganttProperties.startDate, ganttProperties);\n      this.parent.setRecordValue('autoEndDate', ganttData.ganttProperties.endDate, ganttProperties);\n      this.parent.setRecordValue('autoDuration', ganttData.ganttProperties.duration, ganttProperties);\n    }\n    this.parent.setRecordValue('expanded', ganttData.hasChildRecords && this.parent.collapseAllParentTasks ? false : true, ganttData);\n    this.updateExpandStateMappingValue(ganttData, data);\n    if (!isLoad) {\n      this.parent.setRecordValue('width', this.calculateWidth(ganttData), ganttProperties, true);\n      this.parent.setRecordValue('left', this.calculateLeft(ganttProperties), ganttProperties, true);\n      this.parent.setRecordValue('progressWidth', this.getProgressWidth(ganttProperties.width, progress), ganttProperties, true);\n      if (ganttProperties.baselineEndDate && ganttProperties.baselineStartDate) {\n        this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(ganttProperties), ganttProperties, true);\n        this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(ganttProperties), ganttProperties, true);\n      }\n    }\n    if (isNullOrUndefined(taskSettings.work)) {\n      this.updateWorkWithDuration(ganttData);\n    }\n    if (!isNullOrUndefined(taskSettings.manual)) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'manual');\n    }\n    this.updateTaskData(ganttData);\n    if (predecessors) {\n      this.parent.predecessorsCollection.push(ganttData);\n    }\n    if (!isNullOrUndefined(parentItem)) {\n      parentItem.childRecords.push(ganttData);\n      if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) && !isNullOrUndefined(this.parent.taskFields.child)) {\n        parentItem[this.parent.taskFields.child].push(ganttData.taskData);\n      }\n    }\n    if (this.parent.viewType === 'ProjectView') {\n      this.parent.setRecordValue('rowUniqueID', ganttProperties.taskId.toString(), ganttProperties, true);\n    } else {\n      var uniqueId = ganttData.uniqueID.replace(this.parent.element.id + '_data_', '');\n      // if (this.parent.viewType === 'ResourceView' && typeof(ganttData.ganttProperties.taskId) === 'string') {\n      //     uniqueId = ganttProperties.taskId.toString();\n      // }\n      this.parent.setRecordValue('rowUniqueID', uniqueId, ganttData);\n      this.parent.setRecordValue('rowUniqueID', uniqueId, ganttProperties, true);\n      this.parent.setRecordValue('sharedTaskUniqueIds', [], ganttProperties, true);\n    }\n    if (this.parent.allowUnscheduledTasks && ganttData.ganttProperties.startDate && (ganttData.ganttProperties.endDate || ganttData.ganttProperties.duration)) {\n      this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n      this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n      if (!isLoad) {\n        this.updateWidthLeft(ganttData);\n      }\n    }\n    this.parent.chartRowsModule.updateSegment(ganttData.ganttProperties.segments, ganttData.ganttProperties.taskId);\n    return ganttData;\n  };\n  TaskProcessor.prototype.sortSegmentsData = function (segments, onLoad, ganttProp) {\n    var _this = this;\n    if (onLoad) {\n      segments.sort(function (a, b) {\n        var startDate = _this.parent.taskFields.startDate;\n        return _this.getDateFromFormat(a[startDate]).getTime() - _this.getDateFromFormat(b[startDate]).getTime();\n      });\n    } else {\n      segments.sort(function (a, b) {\n        return a.startDate.getTime() - b.startDate.getTime();\n      });\n    }\n    return segments;\n  };\n  TaskProcessor.prototype.setSegmentsInfo = function (data, onLoad) {\n    var _this = this;\n    var taskSettings = this.parent.taskFields;\n    var ganttSegments = [];\n    var segments;\n    var sumOfDuration = 0;\n    var remainingDuration = 0;\n    var predefinedProperties = [this.parent.taskFields.duration, this.parent.taskFields.endDate, this.parent.taskFields.startDate, this.parent.taskFields.id];\n    var taskData = [];\n    if (!isNullOrUndefined(this.parent.taskFields.segments)) {\n      segments = onLoad ? data.taskData[this.parent.taskFields.segments] : data.ganttProperties.segments;\n      if (!onLoad) {\n        if (data.taskData[this.parent.taskFields.segments] && data.taskData[this.parent.taskFields.segments].length > 0) {\n          data.taskData[this.parent.taskFields.segments].forEach(function (segment) {\n            var cleanedObject = {};\n            var extraProperties = {};\n            for (var key in segment) {\n              if (predefinedProperties.indexOf(key) !== -1) {\n                cleanedObject[key] = segment[key];\n              } else {\n                extraProperties[key] = segment[key];\n              }\n            }\n            _this.customSegmentProperties.push(extraProperties);\n          });\n        }\n      }\n      if (!isNullOrUndefined(segments) && segments.length > 1) {\n        this.sortSegmentsData(segments, onLoad, data.ganttProperties);\n        for (var i = 0; i < segments.length; i++) {\n          var segment = segments[i];\n          var startDate = onLoad ? segment[taskSettings.startDate] : segment.startDate;\n          var endDate = onLoad ? segment[taskSettings.endDate] : segment.endDate;\n          var duration = onLoad ? segment[taskSettings.duration] : segment.duration;\n          startDate = this.getDateFromFormat(startDate);\n          startDate = this.checkStartDate(startDate, data.ganttProperties, false);\n          if (!isNullOrUndefined(duration)) {\n            endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n            if (taskSettings.duration) {\n              remainingDuration = data.ganttProperties.duration - sumOfDuration;\n              if (remainingDuration <= 0) {\n                continue;\n              }\n              duration = i === segments.length - 1 ? remainingDuration : remainingDuration > 0 && duration > remainingDuration ? remainingDuration : duration;\n              endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n            } else if (!taskSettings.duration && taskSettings.endDate && endDate) {\n              endDate = !isNullOrUndefined(data.ganttProperties.endDate) && endDate.getTime() >= data.ganttProperties.endDate.getTime() && i === segments.length - 1 ? data.ganttProperties.endDate : endDate;\n              duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n              if (ganttSegments.length > 0 && endDate.getTime() < startDate.getTime() && endDate.getTime() <= data.ganttProperties.endDate.getTime()) {\n                ganttSegments[i - 1].duration = this.getDuration(ganttSegments[i - 1].startDate, data.ganttProperties.endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                continue;\n              }\n            }\n          } else {\n            endDate = this.getDateFromFormat(endDate);\n            if (endDate && (isNullOrUndefined(duration) || String(duration) === '')) {\n              var dayEndTime = void 0;\n              if (this.parent.weekWorkingTime.length > 0) {\n                dayEndTime = this.parent['getEndTime'](endDate);\n              } else {\n                dayEndTime = this.parent.defaultEndTime;\n              }\n              if (endDate.getHours() === 0 && dayEndTime !== 86400) {\n                this.setTime(dayEndTime, endDate);\n              }\n            }\n            endDate = this.checkEndDate(endDate, data.ganttProperties, false);\n            duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n            if (taskSettings.duration) {\n              remainingDuration = data.ganttProperties.duration - sumOfDuration - 1;\n              if (remainingDuration <= 0) {\n                continue;\n              }\n              duration = i === segments.length - 1 ? remainingDuration : remainingDuration > 0 && duration > remainingDuration ? remainingDuration : duration;\n              endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n            } else if (!taskSettings.duration && taskSettings.endDate && endDate) {\n              endDate = !isNullOrUndefined(data.ganttProperties.endDate) && endDate.getTime() >= data.ganttProperties.endDate.getTime() && i === segments.length - 1 ? data.ganttProperties.endDate : endDate;\n              duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n              if (ganttSegments.length > 0 && endDate.getTime() < startDate.getTime() && endDate.getTime() <= data.ganttProperties.endDate.getTime()) {\n                ganttSegments[i - 1].duration = this.getDuration(ganttSegments[i - 1].startDate, data.ganttProperties.endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                continue;\n              }\n            }\n          }\n          segment = {};\n          if (!(startDate && endDate) || !(startDate && duration)) {\n            break;\n          }\n          sumOfDuration += Number(duration);\n          segment.startDate = startDate;\n          segment.endDate = endDate;\n          segment.duration = Number(duration);\n          segment.width = 0;\n          segment.left = 0;\n          segment.segmentIndex = i;\n          ganttSegments.push(segment);\n          if (!isNullOrUndefined(ganttSegments[i - 1])) {\n            var unit = void 0;\n            if (!isNullOrUndefined(this.parent.timelineSettings.bottomTier)) {\n              if (this.parent.timelineSettings.bottomTier.unit === 'Minutes') {\n                unit = 'minute';\n              } else if (this.parent.timelineSettings.bottomTier.unit === 'Hour') {\n                unit = 'hour';\n              } else {\n                unit = data.ganttProperties.durationUnit;\n              }\n            } else {\n              unit = data.ganttProperties.durationUnit;\n            }\n            var offsetDuration = this.getDuration(ganttSegments[i - 1].endDate, ganttSegments[i].startDate, unit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n            segment.offsetDuration = offsetDuration;\n            if (offsetDuration < 1) {\n              if (this.parent.weekWorkingTime.length === 0) {\n                segment.startDate = this.getEndDate(ganttSegments[i - 1].endDate, 1, data.ganttProperties.durationUnit, data.ganttProperties, false);\n              } else {\n                var prevSegmentDate = new Date(ganttSegments[i - 1].endDate.getTime());\n                segment.startDate = new Date(prevSegmentDate.setHours(prevSegmentDate.getHours() + 24));\n                if (this.isOnHolidayOrWeekEnd(segment.startDate, true)) {\n                  do {\n                    segment.startDate.setDate(segment.startDate.getDate() + 1);\n                  } while (this.isOnHolidayOrWeekEnd(segment.startDate, true));\n                }\n                if (!this.parent.includeWeekend) {\n                  segment.startDate = this.getNextWorkingDay(segment.startDate);\n                }\n                var dayEndTime = this.parent['getEndTime'](ganttSegments[i - 1].endDate);\n                if (this.getSecondsInDecimal(ganttSegments[i - 1].endDate) === dayEndTime) {\n                  this.setTime(this.parent['getEndTime'](segment.startDate), segment.startDate);\n                }\n              }\n              segment.startDate = this.checkStartDate(segment.startDate, data.ganttProperties, false);\n              segment.endDate = this.getEndDate(segment.startDate, segment.duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n              segment.endDate = !taskSettings.duration && taskSettings.endDate && segment.endDate > data.ganttProperties.endDate ? data.ganttProperties.endDate : segment.endDate;\n              segment.offsetDuration = 1;\n            }\n          } else {\n            segment.offsetDuration = 0;\n          }\n          taskData.push(this.setSegmentTaskData(segment, segments[i]));\n        }\n        this.parent.setRecordValue('duration', sumOfDuration, data.ganttProperties, true);\n        if (!isNullOrUndefined(ganttSegments[ganttSegments.length - 1])) {\n          this.parent.setRecordValue('endDate', ganttSegments[ganttSegments.length - 1].endDate, data.ganttProperties, true);\n        }\n        if (!isNullOrUndefined(taskSettings.endDate) && !isNullOrUndefined(ganttSegments[ganttSegments.length - 1])) {\n          this.parent.setRecordValue(this.parent.taskFields.endDate, ganttSegments[ganttSegments.length - 1].endDate, data, true);\n        }\n        if (!onLoad && taskData && taskData.length > 0) {\n          taskData.forEach(function (task, index) {\n            var mergedObject = Object.assign({}, task, _this.customSegmentProperties[index]);\n            taskData[index] = mergedObject;\n          });\n        }\n        this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, taskData, data);\n      }\n    }\n    if (ganttSegments.length > 1) {\n      this.parent.setRecordValue('segments', ganttSegments, data.ganttProperties, true);\n      this.parent.setRecordValue(this.parent.taskFields.segments, data.taskData[this.parent.taskFields.segments], data, true);\n    } else {\n      ganttSegments = null;\n    }\n    return ganttSegments;\n  };\n  TaskProcessor.prototype.setSegmentTaskData = function (segments, segmenttaskData) {\n    var taskSettings = this.parent.taskFields;\n    var taskData = extend({}, {}, segmenttaskData, true);\n    if (!isNullOrUndefined(taskSettings.startDate)) {\n      taskData[this.parent.taskFields.startDate] = segments.startDate;\n    }\n    if (!isNullOrUndefined(taskSettings.endDate)) {\n      taskData[this.parent.taskFields.endDate] = segments.endDate;\n    }\n    if (!isNullOrUndefined(taskSettings.duration)) {\n      taskData[this.parent.taskFields.duration] = Number(segments.duration);\n    }\n    return taskData;\n  };\n  /**\n   * Method to calculate work based on resource unit and duration.\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n  TaskProcessor.prototype.updateWorkWithDuration = function (ganttData) {\n    if (this.parent['triggeredColumnName'] === this.parent.taskFields.work) {\n      return;\n    }\n    var resources = this.parent.editModule && this.parent.editModule.dialogModule && this.parent.editModule.dialogModule['currentResources'] ? this.parent.editModule.dialogModule['currentResources'] : ganttData.ganttProperties.resourceInfo;\n    var work = 0;\n    var resourceOneDayWork;\n    if (!isNullOrUndefined(resources) && !ganttData.hasChildRecords) {\n      var resourcesLength = resources.length;\n      var index = void 0;\n      var resourceUnit = void 0;\n      var totSeconds = void 0;\n      if (this.parent.weekWorkingTime.length > 0) {\n        totSeconds = this.parent['getSecondsPerDay'](ganttData.ganttProperties.startDate ? ganttData.ganttProperties.startDate : ganttData.ganttProperties.endDate);\n      } else {\n        totSeconds = this.parent.secondsPerDay;\n      }\n      var actualOneDayWork = totSeconds / 3600;\n      var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n      for (index = 0; index < resourcesLength; index++) {\n        resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n        resourceOneDayWork = resourceUnit > 0 ? actualOneDayWork * resourceUnit / 100 : ganttData.ganttProperties.taskType !== 'FixedUnit' ? actualOneDayWork : 0;\n        work += resourceOneDayWork * durationInDay;\n      }\n      //Update work as per defined unit.\n      if (ganttData.ganttProperties.workUnit === 'minute') {\n        work = work * 60;\n      }\n      if (ganttData.ganttProperties.workUnit === 'day') {\n        work = work / actualOneDayWork;\n      }\n      //To check the decimal places.\n      if (work % 1 !== 0) {\n        work = parseFloat(work.toFixed(2));\n      }\n    }\n    if (ganttData.childRecords) {\n      if (ganttData.childRecords.length > 0 && this.parent.isOnEdit) {\n        var childCompletedWorks = 0;\n        for (var i = 0; i < ganttData.childRecords.length; i++) {\n          childCompletedWorks += ganttData.childRecords[i].ganttProperties.work;\n        }\n        work += childCompletedWorks;\n      }\n    }\n    if (ganttData.ganttProperties.taskType === 'FixedUnit' && resourceOneDayWork === 0) {\n      work = 0;\n      this.parent.setRecordValue('duration', 0, ganttData.ganttProperties, true);\n      if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n        this.parent.setRecordValue(this.parent.taskFields.duration, 0, ganttData, true);\n      }\n    }\n    this.parent.setRecordValue('work', work, ganttData.ganttProperties, true);\n    if (!isNullOrUndefined(this.parent.taskFields.work)) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'work');\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} parent .\n   * @returns {IParent} .\n   * @private\n   */\n  TaskProcessor.prototype.getCloneParent = function (parent) {\n    if (!isNullOrUndefined(parent)) {\n      var cloneParent = {};\n      cloneParent.uniqueID = parent.uniqueID;\n      cloneParent.expanded = parent.expanded;\n      cloneParent.level = parent.level;\n      cloneParent.index = parent.index;\n      cloneParent.taskId = parent.ganttProperties.rowUniqueID;\n      return cloneParent;\n    } else {\n      return null;\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.reUpdateResources = function () {\n    if (this.parent.flatData.length > 0) {\n      var data = void 0;\n      var ganttProperties = void 0;\n      var ganttData = void 0;\n      for (var index = 0; index < this.parent.flatData.length; index++) {\n        data = this.parent.flatData[index].taskData;\n        ganttProperties = this.parent.flatData[index].ganttProperties;\n        ganttData = this.parent.flatData[index];\n        this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n        this.updateResourceName(ganttData);\n      }\n    }\n  };\n  TaskProcessor.prototype.addTaskData = function (ganttData, data, isLoad) {\n    var _this = this;\n    var taskSettings = this.parent.taskFields;\n    var dataManager = this.parent.dataSource;\n    if (isLoad) {\n      if (taskSettings.parentID || dataManager instanceof DataManager && dataManager.dataSource.json && dataManager.dataSource.offline) {\n        if (taskSettings.parentID) {\n          var id = data[taskSettings.id];\n          var index = this.taskIds.indexOf(id.toString());\n          var tempData_1 = index > -1 ? this.dataArray[index] : {};\n          if (!isNullOrUndefined(this.parent.taskFields.segmentId)) {\n            var segmentDataCollection = this.segmentCollection.filter(function (x) {\n              return x.key === tempData_1[_this.parent.taskFields.id];\n            });\n            if (segmentDataCollection.length > 0) {\n              tempData_1[this.parent.taskFields.segments] = segmentDataCollection[0].items;\n            }\n          }\n          this.parent.setRecordValue('taskData', tempData_1, ganttData);\n        } else {\n          this.parent.setRecordValue('taskData', data, ganttData);\n        }\n      } else {\n        this.parent.setRecordValue('taskData', data, ganttData);\n      }\n    } else {\n      this.parent.setRecordValue('taskData', data, ganttData);\n    }\n  };\n  TaskProcessor.prototype.updateExpandStateMappingValue = function (ganttData, data) {\n    var expandStateMapping = this.parent.taskFields.expandState;\n    var mappingValue = data[expandStateMapping];\n    var updatableValue;\n    if (expandStateMapping && ganttData.hasChildRecords) {\n      if (!isNullOrUndefined(mappingValue)) {\n        updatableValue = mappingValue.toString() === 'true' ? true : false;\n      } else if (isNullOrUndefined(mappingValue) && !this.parent.collapseAllParentTasks) {\n        updatableValue = true;\n      } else if (isNullOrUndefined(mappingValue) && this.parent.collapseAllParentTasks) {\n        updatableValue = false;\n      }\n      this.parent.setRecordValue('taskData.' + expandStateMapping, updatableValue, ganttData);\n      this.parent.setRecordValue(expandStateMapping, updatableValue, ganttData);\n      this.parent.setRecordValue('expanded', updatableValue, ganttData);\n    }\n  };\n  /**\n   * @param {IGanttData} ganttData .\n   * @param {object} data .\n   * @returns {void} .\n   */\n  TaskProcessor.prototype.setValidatedDates = function (ganttData, data) {\n    var ganttProperties = ganttData.ganttProperties;\n    var taskSettings = this.parent.taskFields;\n    var duration = data[taskSettings.duration];\n    var startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n    var endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n    duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n    this.parent.setRecordValue('startDate', new Date(startDate.getTime()), ganttProperties, true);\n    if (!isNullOrUndefined(duration) && duration !== '') {\n      this.updateDurationValue(duration, ganttProperties);\n    } else {\n      this.calculateDuration(ganttData);\n    }\n    this.parent.setRecordValue('endDate', new Date(endDate.getTime()), ganttProperties, true);\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {object} data .\n   * @param {boolean} isLoad .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateScheduledValues = function (ganttData, data, isLoad) {\n    var taskSettings = this.parent.taskFields;\n    var ganttProperties = ganttData.ganttProperties;\n    var duration = data[taskSettings.duration];\n    duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n    var startDate;\n    var endDate;\n    if (ganttProperties.startDate && ganttProperties.endDate) {\n      startDate = this.getDateFromFormat(ganttProperties.startDate, true);\n      endDate = this.getDateFromFormat(ganttProperties.endDate, true);\n    } else {\n      startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n      endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n    }\n    var segments = taskSettings.segments ? data[taskSettings.segments] || ganttData.taskData[taskSettings.segments] : null;\n    var isMileStone = taskSettings.milestone ? data[taskSettings.milestone] ? true : false : false;\n    var durationMapping = data[taskSettings.durationUnit] ? data[taskSettings.durationUnit] : '';\n    this.parent.setRecordValue('durationUnit', this.validateDurationUnitMapping(durationMapping), ganttProperties, true);\n    var work = !isNullOrUndefined(data[taskSettings.work]) ? parseFloat(data[taskSettings.work]) : 0;\n    this.parent.setRecordValue('workUnit', this.validateWorkUnitMapping(this.parent.workUnit), ganttProperties, true);\n    var taskTypeMapping = data[taskSettings.type] ? data[taskSettings.type] : '';\n    var tType = this.validateTaskTypeMapping(taskTypeMapping);\n    this.parent.setRecordValue('taskType', tType, ganttProperties, true);\n    if (isLoad && !this.parent.enableValidation && startDate && endDate) {\n      this.setValidatedDates(ganttData, data);\n    } else {\n      if (!endDate && !startDate && (isNullOrUndefined(duration) || duration === '')) {\n        if (this.parent.allowUnscheduledTasks) {\n          return;\n        } else {\n          this.parent.setRecordValue('duration', 1, ganttProperties, true);\n          this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n          this.calculateEndDate(ganttData);\n        }\n      } else if (startDate) {\n        this.calculateDateFromStartDate(startDate, endDate, duration, ganttData, isLoad);\n      } else if (endDate) {\n        this.calculateDateFromEndDate(endDate, duration, ganttData);\n      } else if (!isNullOrUndefined(duration) && duration !== '') {\n        this.updateDurationValue(duration, ganttProperties);\n        if (this.parent.allowUnscheduledTasks) {\n          this.parent.setRecordValue('startDate', null, ganttProperties, true);\n          this.parent.setRecordValue('endDate', null, ganttProperties, true);\n        } else {\n          this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n          this.calculateEndDate(ganttData);\n        }\n      }\n    }\n    if (!this.parent.autoCalculateDateScheduling || this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      if (!isNullOrUndefined(ganttData.ganttProperties.startDate)) {\n        ganttData[this.parent.taskFields.startDate] = ganttData.ganttProperties.startDate;\n        ganttData.taskData[this.parent.taskFields.startDate] = ganttData.ganttProperties.startDate;\n      }\n      if (!isNullOrUndefined(ganttData.ganttProperties.endDate)) {\n        ganttData[this.parent.taskFields.endDate] = ganttData.ganttProperties.endDate;\n        ganttData.taskData[this.parent.taskFields.endDate] = ganttData.ganttProperties.endDate;\n      }\n    }\n    if (!isNullOrUndefined(segments)) {\n      this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n    }\n    if (ganttProperties.duration === 0) {\n      this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n      if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n        this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n      }\n      this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n    }\n    if (!isNullOrUndefined(isMileStone) && isMileStone) {\n      this.parent.setRecordValue('duration', 0, ganttProperties, true);\n      this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n      if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n        this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n      }\n      this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n    }\n    if (!isNullOrUndefined(taskSettings.work)) {\n      this.parent.setRecordValue('durationUnit', this.parent.durationUnit, ganttProperties, true);\n      if (isNaN(work) || isNullOrUndefined(work)) {\n        this.parent.setRecordValue('work', 0, ganttProperties, true);\n        this.parent.setRecordValue('duration', 0, ganttProperties, true);\n        this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n        if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n          this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n        }\n        this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n      } else {\n        this.parent.setRecordValue('work', work, ganttProperties, true);\n        switch (tType) {\n          case 'FixedDuration':\n            // To validate the work column as well,when initial dataset have 0 duration\n            if (!isNullOrUndefined(ganttData[this.parent.taskFields.resourceInfo]) && ganttData.ganttProperties.resourceInfo.length !== 0 || ganttProperties.duration === 0) {\n              this.updateWorkWithDuration(ganttData);\n            }\n            break;\n          case 'FixedWork':\n            if (!isNullOrUndefined(ganttData[this.parent.taskFields.resourceInfo]) && ganttData.ganttProperties.resourceInfo.length !== 0) {\n              this.updateDurationWithWork(ganttData);\n            }\n            this.updateUnitWithWork(ganttData);\n            break;\n          case 'FixedUnit':\n            this.updateWorkWithDuration(ganttData);\n            break;\n        }\n        if (!isNullOrUndefined(taskSettings.type)) {\n          this.parent.dataOperation.updateMappingData(ganttData, 'type');\n        }\n        if (ganttProperties.duration === 0) {\n          this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n          if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n            this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n          }\n          this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        } else if (!isNullOrUndefined(ganttProperties.startDate) && !isNullOrUndefined(ganttProperties.duration)) {\n          this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n          if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n            this.parent.setRecordValue(this.parent.taskFields.milestone, false, ganttData, true);\n          }\n          this.calculateEndDate(ganttData);\n        }\n      }\n      this.parent.dataOperation.updateMappingData(ganttData, 'work');\n    } else if (taskSettings.type && ganttProperties.taskType) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'type');\n    }\n  };\n  /**\n   * Method to update duration with work value.\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n  TaskProcessor.prototype.updateDurationWithWork = function (ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n    var resources = this.parent.editModule && this.parent.editModule.dialogModule && this.parent.editModule.dialogModule['currentResources'] ? this.parent.editModule.dialogModule['currentResources'] : ganttProperties.resourceInfo;\n    if (!isNullOrUndefined(resources)) {\n      var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n      var totalResourceOneDayWork = 0;\n      var totSeconds = void 0;\n      if (this.parent.weekWorkingTime.length > 0) {\n        totSeconds = this.parent['getSecondsPerDay'](ganttData.ganttProperties.startDate ? ganttData.ganttProperties.startDate : ganttData.ganttProperties.endDate);\n      } else {\n        totSeconds = this.parent.secondsPerDay;\n      }\n      var actualOneDayWork = totSeconds / 3600;\n      var updatedDuration = 0;\n      var resourceUnit = void 0;\n      var index = void 0;\n      for (index = 0; index < resourcesLength; index++) {\n        resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n        totalResourceOneDayWork += resourceUnit > 0 ? actualOneDayWork * resourceUnit / 100 : ganttData.ganttProperties.taskType !== 'FixedUnit' ? actualOneDayWork : 0; //in hours\n      }\n      var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n      if (resourcesLength > 0 && totalResourceOneDayWork > 0) {\n        updatedDuration += totalHours / totalResourceOneDayWork;\n      }\n      if (ganttProperties.taskType === 'FixedUnit' && totalResourceOneDayWork === 0) {\n        this.parent.setRecordValue('work', 0, ganttProperties, true);\n        this.parent.setRecordValue(this.parent.taskFields.work, 0, ganttData, true);\n      }\n      //Update duration as per defined unit.\n      if (ganttProperties.durationUnit === 'minute') {\n        updatedDuration = updatedDuration * actualOneDayWork * 60;\n      }\n      if (ganttProperties.durationUnit === 'hour') {\n        updatedDuration = updatedDuration * actualOneDayWork;\n      }\n      //To check the decimal places.\n      if (updatedDuration % 1 !== 0) {\n        updatedDuration = parseFloat(updatedDuration.toFixed(2));\n      }\n      if (!isNullOrUndefined(ganttProperties.duration)) {\n        this.parent.setRecordValue('duration', updatedDuration, ganttProperties, true);\n      }\n      this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n    }\n  };\n  /**\n   * Update units of resources with respect to duration and work of a task.\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n  TaskProcessor.prototype.updateUnitWithWork = function (ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n    var resources = !this.parent.isLoad && !isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.dialogModule) && !this.parent.editModule.dialogModule['isEdit'] && !isNullOrUndefined(this.parent.editModule.cellEditModule) && !this.parent.editModule.cellEditModule.isCellEdit ? this.parent.editModule.dialogModule.ganttResources : ganttProperties.resourceInfo;\n    if (this.parent.editModule && this.parent.editModule.taskbarEditModule && (this.parent.editModule.taskbarEditModule.taskBarEditAction === 'LeftResizing' || this.parent.editModule.taskbarEditModule.taskBarEditAction === 'RightResizing')) {\n      resources = ganttData.ganttProperties.resourceInfo;\n    }\n    var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n    var totSeconds;\n    if (this.parent.weekWorkingTime.length > 0) {\n      totSeconds = this.parent['getSecondsPerDay'](ganttData.ganttProperties.startDate ? ganttData.ganttProperties.startDate : ganttData.ganttProperties.endDate);\n    } else {\n      totSeconds = this.parent.secondsPerDay;\n    }\n    var actualOneDayWork = totSeconds / 3600;\n    if (resourcesLength === 0) {\n      return;\n    }\n    var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n    var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n    var totalUnitInPercentage = durationInDay > 0 ? totalHours / (durationInDay * actualOneDayWork) * 100 : 0;\n    var individualUnit = totalUnitInPercentage === 0 ? 0 : totalUnitInPercentage > 0 ? totalUnitInPercentage / resourcesLength : 100;\n    //To check the decimal places.\n    if (individualUnit % 1 !== 0) {\n      individualUnit = parseFloat(individualUnit.toFixed(2));\n    }\n    for (var index = 0; index < resourcesLength; index++) {\n      resources[index][this.parent.resourceFields.unit] = individualUnit;\n      if (!this.parent.isLoad && !isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.dialogModule) && !this.parent.editModule.dialogModule['isEdit'] && !isNullOrUndefined(this.parent.editModule.cellEditModule) && !this.parent.editModule.cellEditModule.isCellEdit) {\n        if (ganttProperties.resourceInfo) {\n          ganttProperties.resourceInfo[index][this.parent.resourceFields.unit] = individualUnit;\n        }\n      }\n    }\n    //To update the unit value in data source\n    this.updateResourceName(ganttData);\n  };\n  TaskProcessor.prototype.calculateDateFromEndDate = function (endDate, duration, ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n    var dayEndTime;\n    if (this.parent.weekWorkingTime.length > 0) {\n      dayEndTime = this.parent['getEndTime'](endDate);\n    } else {\n      dayEndTime = this.parent.defaultEndTime;\n    }\n    if (endDate.getHours() === 0 && dayEndTime !== 86400) {\n      this.setTime(dayEndTime, endDate);\n    }\n    var validateAsMilestone = parseInt(duration, 10) === 0 ? true : null;\n    this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties, validateAsMilestone), ganttProperties, true);\n    if (isNullOrUndefined(duration) || duration === '') {\n      if (this.parent.allowUnscheduledTasks) {\n        this.parent.setRecordValue('startDate', null, ganttProperties, true);\n        this.parent.setRecordValue('duration', null, ganttProperties, true);\n      } else {\n        this.parent.setRecordValue('duration', 1, ganttProperties, true);\n        this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n      }\n    } else if (!isNullOrUndefined(duration) && duration !== '') {\n      this.updateDurationValue(duration, ganttProperties);\n      this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n    }\n  };\n  TaskProcessor.prototype.calculateDateFromStartDate = function (startDate, endDate, duration, ganttData, isLoad) {\n    var ganttProperties = ganttData.ganttProperties;\n    var validateAsMilestone = parseInt(duration, 10) === 0 || startDate && endDate && new Date(startDate.getTime()) === new Date(endDate.getTime()) ? true : null;\n    this.parent.setRecordValue('startDate', this.checkStartDate(startDate, ganttProperties, validateAsMilestone, isLoad), ganttProperties, true);\n    if (this.parent.isTreeGridRendered && ganttData) {\n      this.updateTaskData(ganttData);\n    }\n    if (!endDate && (isNullOrUndefined(duration) || duration === '')) {\n      if (this.parent.allowUnscheduledTasks) {\n        this.parent.setRecordValue('endDate', null, ganttProperties, true);\n        this.parent.setRecordValue('duration', null, ganttProperties, true);\n      } else {\n        this.parent.setRecordValue('duration', 1, ganttProperties, true);\n        this.calculateEndDate(ganttData);\n      }\n    } else if (!isNullOrUndefined(duration) && !endDate) {\n      this.updateDurationValue(duration, ganttProperties);\n      this.calculateEndDate(ganttData);\n    } else if (endDate && (isNullOrUndefined(duration) || duration === '')) {\n      var dayEndTime = void 0;\n      if (this.parent.weekWorkingTime.length > 0) {\n        dayEndTime = this.parent['getEndTime'](endDate);\n      } else {\n        dayEndTime = this.parent.defaultEndTime;\n      }\n      if (endDate.getHours() === 0 && dayEndTime !== 86400) {\n        this.setTime(dayEndTime, endDate);\n      }\n      this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties), ganttProperties, true);\n      if (this.compareDates(ganttProperties.startDate, ganttProperties.endDate) === 1) {\n        this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n        this.parent.setRecordValue('duration', 0, ganttProperties, true);\n      } else {\n        this.calculateDuration(ganttData);\n      }\n    } else {\n      this.updateDurationValue(duration, ganttProperties);\n      if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n        this.calculateEndDate(ganttData);\n      } else {\n        this.parent.setRecordValue('endDate', endDate, ganttProperties, true);\n      }\n    }\n  };\n  /**\n   *\n   * @param {number} parentWidth .\n   * @param {number} percent .\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.getProgressWidth = function (parentWidth, percent) {\n    return parentWidth * percent / 100;\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {boolean} isAuto .\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateWidth = function (ganttData, isAuto) {\n    var ganttProp = ganttData.ganttProperties;\n    var sDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var eDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var unscheduledTaskWidth = 3;\n    if (isNullOrUndefined(sDate) && isNullOrUndefined(eDate)) {\n      sDate = this.getValidStartDate(ganttProp, isAuto);\n      eDate = this.getValidEndDate(ganttProp, isAuto);\n    }\n    if (isNullOrUndefined(sDate) || isNullOrUndefined(eDate)) {\n      return unscheduledTaskWidth;\n    } else if (ganttProp.isMilestone && (!ganttData.hasChildRecords || ganttProp.isAutoSchedule)) {\n      //let taskBarHeight: number = this.getTaskbarHeight();\n      return 0;\n    } else {\n      return this.getTaskWidth(sDate, eDate, ganttProp);\n    }\n  };\n  TaskProcessor.prototype.getTaskbarHeight = function () {\n    var rowHeight = this.parent.rowHeight;\n    var taskBarHeight = this.parent.taskbarHeight;\n    if (taskBarHeight < rowHeight) {\n      return taskBarHeight;\n    } else {\n      return rowHeight;\n    }\n  };\n  /**\n   * Method to calculate left\n   *\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isAuto .\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateLeft = function (ganttProp, isAuto) {\n    var sDate = null;\n    var left = -300;\n    var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration; // eslint-disable-line\n    var milestone = ganttProp.isMilestone;\n    var ganttRecord = this.parent.getTaskByUniqueID(ganttProp.uniqueID);\n    if (ganttRecord && this.parent.allowUnscheduledTasks && isNullOrUndefined(startDate) && isNullOrUndefined(endDate) && !isNullOrUndefined(duration) && !ganttRecord.hasChildRecords && ganttRecord.parentItem && (this.parent.taskMode === 'Manual' || this.parent.taskMode === 'Custom' && ganttRecord[this.parent.taskFields.manual])) {\n      var parentRec = this.parent.getParentTask(ganttRecord.parentItem);\n      if (parentRec.ganttProperties.startDate) {\n        startDate = parentRec.ganttProperties.startDate;\n      }\n    }\n    if (startDate) {\n      sDate = new Date(startDate.getTime());\n    } else if (endDate) {\n      sDate = new Date(endDate.getTime());\n      milestone = isNullOrUndefined(startDate) && this.parent.allowUnscheduledTasks ? false : true;\n    } else {\n      sDate = this.getValidStartDate(ganttProp);\n    }\n    if (!isNullOrUndefined(sDate)) {\n      left = this.getTaskLeft(sDate, milestone);\n    }\n    return left;\n  };\n  /**\n   * calculate the left position of the auto scheduled taskbar\n   *\n   * @param {ITaskData} ganttProperties - Defines the gantt data.\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateAutoLeft = function (ganttProperties) {\n    return this.getTaskLeft(ganttProperties.autoStartDate, ganttProperties.isMilestone);\n  };\n  /**\n   * To calculate duration of Gantt record with auto scheduled start date and auto scheduled end date\n   *\n   * @param {ITaskData} ganttProperties - Defines the gantt data.\n   * @returns {number} .\n   */\n  TaskProcessor.prototype.calculateAutoDuration = function (ganttProperties) {\n    return this.getDuration(ganttProperties.autoStartDate, ganttProperties.autoEndDate, ganttProperties.durationUnit, false, ganttProperties.isMilestone);\n  };\n  /**\n   * calculate the with between auto scheduled start date and auto scheduled end date\n   *\n   * @param {ITaskData} ganttProperties - Defines the gantt data.\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateAutoWidth = function (ganttProperties) {\n    return this.getTaskWidth(ganttProperties.autoStartDate, ganttProperties.autoEndDate);\n  };\n  /**\n   * calculate the left margin of the baseline element\n   *\n   * @param {ITaskData} ganttProperties .\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateBaselineLeft = function (ganttProperties) {\n    var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n    var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n    if (baselineStartDate && baselineEndDate) {\n      return this.getTaskLeft(baselineStartDate, ganttProperties.isMilestone);\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * calculate the width between baseline start date and baseline end date.\n   *\n   * @param {ITaskData} ganttProperties .\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateBaselineWidth = function (ganttProperties) {\n    var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n    var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n    if (baselineStartDate && baselineEndDate && baselineStartDate.getTime() !== baselineEndDate.getTime()) {\n      return this.getTaskWidth(baselineStartDate, baselineEndDate);\n    } else {\n      return 0;\n    }\n  };\n  /**\n   * To get tasks width value\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {ITaskData} [ganttData] .\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.getTaskWidth = function (startDate, endDate, ganttData) {\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n    var zoomOrTimeline = this.parent.currentZoomingLevel ? this.parent.currentZoomingLevel : this.parent.timelineSettings;\n    var countValue = zoomOrTimeline['bottomTier'] !== null ? zoomOrTimeline['bottomTier'].count : zoomOrTimeline['topTier'].count;\n    var isValid = false;\n    var modifiedsDate = new Date(startDate.getTime());\n    var hour = 0;\n    if (!isNullOrUndefined(ganttData) && ganttData.durationUnit === 'hour') {\n      modifiedsDate = new Date(modifiedsDate.getTime() + ganttData.duration * 60 * 60 * 1000);\n    }\n    if (!isNullOrUndefined(ganttData) && ganttData.durationUnit === 'minute' || !isNullOrUndefined(ganttData) && ganttData.durationUnit === 'day' && ganttData.duration < 1) {\n      modifiedsDate = new Date(modifiedsDate.getTime() + ganttData.duration * 60 * 1000);\n    }\n    if (this.parent.weekWorkingTime.length > 0) {\n      var date = new Date(startDate.getTime());\n      for (var count = startDate.getDate(); count <= endDate.getDate(); count++) {\n        var day = date.getDay();\n        var currentDay = void 0;\n        var weekWorkingTime = this.parent.weekWorkingTime;\n        switch (day) {\n          case 0:\n            currentDay = 'Sunday';\n            break;\n          case 1:\n            currentDay = 'Monday';\n            break;\n          case 2:\n            currentDay = 'Tuesday';\n            break;\n          case 3:\n            currentDay = 'Wednesday';\n            break;\n          case 4:\n            currentDay = 'Thursday';\n            break;\n          case 5:\n            currentDay = 'Friday';\n            break;\n          case 6:\n            currentDay = 'Saturday';\n            break;\n          default:\n            currentDay = '';\n        }\n        var isValid_1 = true;\n        for (var i = 0; i < weekWorkingTime.length; i++) {\n          if (weekWorkingTime[i][currentDay] && weekWorkingTime[i][currentDay].length > 0) {\n            isValid_1 = false;\n            for (var j = 0; j < weekWorkingTime[i][currentDay].length; j++) {\n              hour = hour + weekWorkingTime[i][currentDay][j].to - weekWorkingTime[i][currentDay][j].from;\n            }\n          }\n        }\n        if (isValid_1) {\n          for (var k = 0; k < this.parent.dayWorkingTime.length; k++) {\n            hour = hour + this.parent.dayWorkingTime[k].to - this.parent.dayWorkingTime[k].from;\n          }\n        }\n        date = new Date(date.setDate(date.getDate() + 1));\n        if (!this.parent.includeWeekend) {\n          date = this.parent.dataOperation.getNextWorkingDay(date);\n        }\n      }\n    } else {\n      for (var i = 0; i < this.parent.dayWorkingTime.length; i++) {\n        hour = hour + this.parent.dayWorkingTime[i].to - this.parent.dayWorkingTime[i].from;\n      }\n    }\n    var dateDiff = modifiedsDate.getTime() - sDate.getTime();\n    var dayStartTime;\n    var dayEndTime;\n    if (!isNullOrUndefined(ganttData) && ganttData.durationUnit === 'minute' && ganttData.duration < hour * 60 || !isNullOrUndefined(ganttData) && ganttData.durationUnit === 'day' && /^\\d+\\.\\d+$/.test(ganttData.duration.toString())) {\n      if (tierMode === 'Day') {\n        if (this.parent.weekWorkingTime.length > 0) {\n          dayStartTime = this.parent['getStartTime'](sDate);\n          dayEndTime = this.parent['getEndTime'](eDate);\n        } else {\n          dayStartTime = this.parent.defaultStartTime;\n          dayEndTime = this.parent.defaultEndTime;\n        }\n        if (Math.floor(dateDiff / (1000 * 60 * 60) % 24) >= hour || dateDiff === 0) {\n          isValid = true;\n        }\n        if (this.getSecondsInDecimal(sDate) === dayStartTime && isValid) {\n          sDate.setHours(0, 0, 0, 0);\n        }\n        if (this.getSecondsInDecimal(eDate) === dayEndTime && isValid) {\n          eDate.setHours(24);\n        }\n        if (this.getSecondsInDecimal(eDate) === dayStartTime) {\n          eDate.setHours(0, 0, 0, 0);\n        }\n      } else {\n        isValid = true;\n      }\n      if (sDate.getTime() === eDate.getTime()) {\n        return this.parent.perDayWidth;\n      } else {\n        if (isValid) {\n          if (ganttData.durationUnit === 'day' && /^\\d+\\.\\d+$/.test(ganttData.duration.toString()) && this.parent.timelineModule.bottomTier === 'Day' && ganttData.duration < 1) {\n            var holidaysCount = this.parent.holidays && this.parent.holidays.length > 0 ? this.getHolidaysCount(sDate, eDate) : 0;\n            var weekendCount = !this.parent.includeWeekend ? this.getWeekendCount(sDate, eDate) : 0;\n            return (holidaysCount + weekendCount + ganttData.duration) * this.parent.perDayWidth;\n          } else {\n            return this.getTimeDifference(sDate, eDate, true) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n          }\n        } else {\n          if (ganttData.durationUnit === 'day' && ganttData.duration < 1) {\n            return ganttData.duration * this.parent.perDayWidth;\n          } else {\n            return this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * hour) * this.parent.perDayWidth;\n          }\n        }\n      }\n    } else {\n      if (tierMode === 'Day') {\n        if (this.parent.weekWorkingTime.length > 0) {\n          dayStartTime = this.parent['getStartTime'](sDate);\n          dayEndTime = this.parent['getEndTime'](eDate);\n        } else {\n          dayStartTime = this.parent.defaultStartTime;\n          dayEndTime = this.parent.defaultEndTime;\n        }\n        if (this.getSecondsInDecimal(sDate) === dayStartTime) {\n          sDate.setHours(0, 0, 0, 0);\n        }\n        if (this.getSecondsInDecimal(eDate) === dayEndTime) {\n          eDate.setHours(24);\n          eDate.setHours(0, 0, 0, 0);\n        }\n        if (this.getSecondsInDecimal(eDate) === dayStartTime) {\n          eDate.setHours(0, 0, 0, 0);\n        }\n      }\n      if (sDate.getTime() === eDate.getTime()) {\n        return this.parent.perDayWidth;\n      } else {\n        if (this.parent.isInDst(sDate) || this.parent.isInDst(eDate)) {\n          var timeDifference = this.getTimeDifference(sDate, eDate, true);\n          var totalWidth = timeDifference / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n          var sOffset = sDate.getTimezoneOffset();\n          var eOffset = eDate.getTimezoneOffset();\n          var topTier = this.parent.timelineModule.customTimelineSettings.topTier;\n          if (topTier && topTier['unit'] === 'Hour' && topTier['count'] === 1) {\n            tierMode = topTier['unit'];\n            countValue = topTier['count'];\n          }\n          if (tierMode === 'Hour' && countValue === 1 && sOffset !== eOffset && sOffset > eOffset) {\n            totalWidth = totalWidth - this.parent.perDayWidth / 24;\n          }\n          return totalWidth;\n        } else {\n          return this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n        }\n      }\n    }\n  };\n  TaskProcessor.prototype.getDSTTransitions = function (year, timeZone) {\n    function findNthWeekday(year, month, dayOfWeek, n) {\n      var firstDayOfMonth = new Date(Date.UTC(year, month, 1));\n      var firstDayOfWeek = firstDayOfMonth.getUTCDay();\n      var offset = (dayOfWeek - firstDayOfWeek + 7) % 7;\n      return new Date(Date.UTC(year, month, 1 + offset + (n - 1) * 7, 2, 0, 0));\n    }\n    function convertToTimezone(date, timeZone) {\n      var formatter = new Intl.DateTimeFormat('en-US', {\n        timeZone: timeZone,\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      });\n      var formatted = formatter.format(date);\n      var _a = formatted.match(/\\d+/g).map(Number),\n        month = _a[0],\n        day = _a[1],\n        year = _a[2],\n        hour = _a[3],\n        minute = _a[4],\n        second = _a[5];\n      return new Date(year, month - 1, day, hour, minute, second);\n    }\n    var dstStartDate = findNthWeekday(year, 2, 0, 5);\n    var dstEndDate = findNthWeekday(year, 9, 0, 5);\n    return {\n      dstStart: convertToTimezone(dstStartDate, timeZone),\n      dstEnd: convertToTimezone(dstEndDate, timeZone)\n    };\n  };\n  TaskProcessor.prototype.hasDSTTransition = function (year) {\n    var january = new Date(year, 0, 1);\n    var july = new Date(year, 6, 1);\n    var janOffset = january.getTimezoneOffset();\n    var julOffset = july.getTimezoneOffset();\n    // If the offsets are different, it means there is a DST transition\n    return janOffset !== julOffset;\n  };\n  /**\n   * Get task left value\n   *\n   * @param {Date} startDate .\n   * @param {boolean} isMilestone .\n   * @param {boolean} isFromTimelineVirtulization .\n   * @returns {number} .\n   * @private\n   */\n  TaskProcessor.prototype.getTaskLeft = function (startDate, isMilestone, isFromTimelineVirtulization) {\n    var isTimeSet = false;\n    var date = new Date(startDate.getTime());\n    var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n    var zoomOrTimeline = this.parent.currentZoomingLevel ? this.parent.currentZoomingLevel : this.parent.timelineSettings;\n    var countValue = zoomOrTimeline['bottomTier'] !== null ? zoomOrTimeline['bottomTier'].count : zoomOrTimeline['topTier'].count;\n    if (tierMode === 'Day') {\n      var dayStartTime = void 0;\n      var dayEndTime = void 0;\n      if (this.parent.weekWorkingTime.length > 0) {\n        dayStartTime = this.parent['getStartTime'](date);\n        dayEndTime = this.parent['getEndTime'](date);\n      } else {\n        dayStartTime = this.parent.defaultStartTime;\n        dayEndTime = this.parent.defaultEndTime;\n      }\n      if (this.getSecondsInDecimal(date) === dayStartTime) {\n        date.setHours(0, 0, 0, 0);\n      } else if (isMilestone && this.getSecondsInDecimal(date) === dayEndTime) {\n        date.setHours(24);\n        isTimeSet = true;\n      } else if (this.getSecondsInDecimal(date) === dayEndTime && this.parent.allowUnscheduledTasks) {\n        date.setHours(22);\n        isTimeSet = true;\n      }\n    }\n    var leftValueForStartDate;\n    var isValid = true;\n    if (this.parent.editModule && (this.parent.editModule.taskbarEditModule && this.parent.editModule.taskbarEditModule.taskBarEditAction || this.parent.editModule.dialogModule && this.parent.editModule.dialogModule['isEdit'] || this.parent.editModule.cellEditModule && this.parent.editModule.cellEditModule.isCellEdit || this.parent.ganttChartModule.scrollObject['isSetScrollLeft']) && !isFromTimelineVirtulization) {\n      isValid = false;\n    }\n    if (this.parent.enableTimelineVirtualization && isValid && !this.parent.timelineModule['performedTimeSpanAction']) {\n      leftValueForStartDate = this.parent.enableTimelineVirtualization && this.parent.ganttChartModule.scrollObject.element.scrollLeft !== 0 ? this.parent.ganttChartModule.scrollObject.getTimelineLeft() : null;\n    }\n    var timelineStartDate = this.parent.enableTimelineVirtualization && !isNullOrUndefined(leftValueForStartDate) ? new Date(this.parent.timelineModule['dateByLeftValue'](leftValueForStartDate).toString()) : new Date(this.parent.timelineModule.timelineStartDate);\n    if (timelineStartDate) {\n      var leftValue = void 0;\n      var hasDST = this.hasDSTTransition(startDate.getFullYear());\n      var transitions = void 0;\n      if (hasDST) {\n        transitions = this.getDSTTransitions(startDate.getFullYear(), this.systemTimeZone);\n      }\n      if (this.parent.isInDst(startDate) && !this.parent.isInDst(timelineStartDate)) {\n        var newTimelineStartDate = void 0;\n        if (this.parent.isInDst(date)) {\n          newTimelineStartDate = new Date(timelineStartDate.getTime() - 60 * 60 * 1000);\n        } else {\n          newTimelineStartDate = new Date(timelineStartDate.getTime());\n        }\n        leftValue = (date.getTime() - newTimelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n      } else {\n        var width = void 0;\n        if (this.parent.timelineModule.bottomTier === 'Day' && this.getSecondsInDecimal(date) !== this.parent.defaultStartTime && this.getSecondsInDecimal(date) !== 0 && !isTimeSet) {\n          var newDate = new Date(startDate.getTime());\n          var setStartDate = new Date(newDate.setHours(0, 0, 0, 0));\n          var duration = this.getDuration(setStartDate, startDate, 'day', true, false);\n          width = duration * this.parent.perDayWidth;\n          date.setHours(0, 0, 0, 0);\n          leftValue = (date.getTime() - timelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n          if (this.getSecondsInDecimal(date) !== this.parent.defaultStartTime && this.parent.timelineModule.bottomTier === 'Day') {\n            leftValue += width;\n          }\n        } else {\n          var newTimelineStartDate = void 0;\n          if (date.getTimezoneOffset() < timelineStartDate.getTimezoneOffset()) {\n            newTimelineStartDate = new Date(timelineStartDate.getTime() - 60 * 60 * 1000);\n          } else {\n            newTimelineStartDate = new Date(timelineStartDate.getTime());\n          }\n          leftValue = (date.getTime() - timelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n        }\n      }\n      var timelineStartTime = timelineStartDate.getTime();\n      var dstStartTime = void 0;\n      if (transitions && transitions['dstStart']) {\n        dstStartTime = transitions['dstStart'].getTime();\n      }\n      var isBeforeOrAtDSTStart = timelineStartTime <= dstStartTime;\n      if (hasDST && this.parent.dayWorkingTime[0]['properties'].from > transitions['dstStart'].getHours() && isBeforeOrAtDSTStart && tierMode === 'Day' && this.getSecondsInDecimal(date) === this.parent.defaultStartTime) {\n        if (leftValue % this.parent.perDayWidth !== 0) {\n          var leftDifference = this.parent.perDayWidth - leftValue % this.parent.perDayWidth;\n          leftValue = leftValue + leftDifference;\n        }\n      }\n      if (this.parent.isInDst(timelineStartDate) && !this.parent.isInDst(startDate) && (this.parent.timelineModule.topTier === 'Hour' || this.parent.timelineModule.bottomTier === 'Hour')) {\n        leftValue = leftValue - this.parent.timelineSettings.timelineUnitSize;\n      }\n      var topTier = this.parent.timelineModule.customTimelineSettings.topTier;\n      if (topTier && topTier['unit'] === 'Hour' && topTier['count'] === 1) {\n        tierMode = topTier['unit'];\n        countValue = topTier['count'];\n      }\n      if (hasDST && countValue === 1 && tierMode === 'Hour' && startDate >= transitions['dstStart'] && isBeforeOrAtDSTStart) {\n        leftValue = leftValue - this.parent.perDayWidth / 24;\n      }\n      return leftValue;\n    } else {\n      return 0;\n    }\n  };\n  TaskProcessor.prototype.getSplitTaskWidth = function (sDate, duration, data) {\n    var startDate = new Date(sDate.getTime());\n    var endDate = new Date(this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false).getTime());\n    var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n    if (tierViewMode === 'Day') {\n      var dayStartTime = void 0;\n      var dayEndTime = void 0;\n      if (this.parent.weekWorkingTime.length > 0) {\n        dayStartTime = this.parent['getStartTime'](startDate);\n        dayEndTime = this.parent['getEndTime'](endDate);\n      } else {\n        dayStartTime = this.parent.defaultStartTime;\n        dayEndTime = this.parent.defaultEndTime;\n      }\n      if (this.getSecondsInDecimal(startDate) === dayStartTime) {\n        startDate.setHours(0, 0, 0, 0);\n      }\n      if (this.getSecondsInDecimal(endDate) === dayEndTime) {\n        endDate.setHours(24);\n      }\n      if (this.getSecondsInDecimal(endDate) === dayStartTime) {\n        endDate.setHours(0, 0, 0, 0);\n      }\n    }\n    return this.getTimeDifference(startDate, endDate) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n  };\n  TaskProcessor.prototype.getSplitTaskLeft = function (sDate, segmentTaskStartDate) {\n    var stDate = new Date(sDate.getTime());\n    var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n    if (tierViewMode === 'Day') {\n      var dayStartTime = void 0;\n      var segmentStartTime = void 0;\n      if (this.parent.weekWorkingTime.length > 0) {\n        dayStartTime = this.parent['getStartTime'](stDate);\n        segmentStartTime = this.parent['getStartTime'](segmentTaskStartDate);\n      } else {\n        segmentStartTime = dayStartTime = this.parent.defaultStartTime;\n      }\n      if (this.getSecondsInDecimal(stDate) === dayStartTime) {\n        stDate.setHours(0, 0, 0, 0);\n      }\n      if (this.getSecondsInDecimal(segmentTaskStartDate) === segmentStartTime) {\n        segmentTaskStartDate.setHours(0, 0, 0, 0);\n      }\n    }\n    if (segmentTaskStartDate) {\n      return (stDate.getTime() - segmentTaskStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n    } else {\n      return 0;\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {string} fieldName .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateMappingData = function (ganttData, fieldName) {\n    var columnMapping = this.parent.columnMapping;\n    var ganttProp = ganttData.ganttProperties;\n    if (isNullOrUndefined(columnMapping[fieldName]) && fieldName !== 'taskType' && fieldName !== 'segments') {\n      return;\n    }\n    if (fieldName === 'predecessorName') {\n      //\n    } else if (fieldName === 'resourceInfo') {\n      var resourceData = ganttProp.resourceInfo;\n      var resourceSettings = this.parent.resourceFields;\n      // eslint-disable-next-line\n      var resourcesId = [];\n      var resourcesName = [];\n      if (!isNullOrUndefined(resourceData)) {\n        for (var i = 0; i < resourceData.length; i++) {\n          resourcesId.push(resourceData[i][resourceSettings.id]);\n          var resName = resourceData[i][resourceSettings.name];\n          var resourceUnit = resourceData[i][resourceSettings.unit];\n          if (resourceUnit !== 100) {\n            resName += '[' + resourceUnit + '%' + ']';\n          }\n          if (resName) {\n            resourcesName.push(resName);\n          }\n        }\n      }\n      this.parent.setRecordValue('resourceNames', resourcesName.join(','), ganttProp, true);\n      if (this.isResourceString) {\n        ganttData.taskData[this.parent.taskFields.resourceInfo] = ganttData.taskData[this.parent.taskFields.resourceInfo][0][resourceSettings.name];\n        this.updateTaskDataResource(ganttData);\n      } else {\n        this.updateTaskDataResource(ganttData);\n      }\n      this.parent.setRecordValue(columnMapping[fieldName], resourcesName.join(','), ganttData);\n    } else if (fieldName === 'startDate' || fieldName === 'endDate') {\n      this.setRecordDate(ganttData, ganttProp[fieldName], columnMapping[fieldName]);\n    } else if (fieldName === 'duration') {\n      this.setRecordDuration(ganttData, columnMapping[fieldName]);\n    } else if (fieldName === 'work') {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp.work, ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n    } else if (fieldName === 'type') {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp.taskType, ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], ganttProp.taskType, ganttData);\n    } else if (fieldName === 'manual') {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n    } else if (fieldName === 'segments') {\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, this.segmentTaskData(ganttData), ganttData);\n    } else {\n      this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp[fieldName], ganttData);\n      this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n    }\n  };\n  TaskProcessor.prototype.segmentTaskData = function (data) {\n    var _this = this;\n    var segments = data.ganttProperties.segments;\n    var taskSettings = this.parent.taskFields;\n    if (isNullOrUndefined(segments)) {\n      return null;\n    }\n    var taskData = extend([], [], data.taskData[taskSettings.segments], true);\n    for (var i = 0; i < segments.length; i++) {\n      if (this.parent.isEdit || this.parent.editModule && this.parent.editModule.dialogModule && getValue('isEdit', this.parent.editModule.dialogModule) || this.parent.contextMenuModule && getValue('isEdit', this.parent.contextMenuModule)) {\n        taskData[i] = {};\n      }\n      if (!isNullOrUndefined(taskSettings.startDate)) {\n        taskData[i][this.parent.taskFields.startDate] = segments[i].startDate;\n      }\n      if (!isNullOrUndefined(taskSettings.endDate)) {\n        taskData[i][this.parent.taskFields.endDate] = segments[i].endDate;\n      }\n      if (!isNullOrUndefined(taskSettings.duration)) {\n        taskData[i][this.parent.taskFields.duration] = Number(segments[i].duration);\n      }\n    }\n    if (this.customSegmentProperties.length > 0 && taskData && taskData.length > 0) {\n      taskData.forEach(function (task, index) {\n        var mergedObject = Object.assign({}, task, _this.customSegmentProperties[index]);\n        taskData[index] = mergedObject;\n      });\n    }\n    return taskData;\n  };\n  /**\n   * Method to update the task data resource values\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   */\n  TaskProcessor.prototype.updateTaskDataResource = function (ganttData) {\n    var resourceData = ganttData.ganttProperties.resourceInfo;\n    var preTaskResources = ganttData.taskData[this.parent.taskFields.resourceInfo];\n    var resourceSettings = this.parent.resourceFields;\n    if (isNullOrUndefined(preTaskResources)) {\n      ganttData.taskData[this.parent.taskFields.resourceInfo] = resourceData;\n    } else if (resourceData && resourceData.length) {\n      for (var i = 0; i < resourceData.length; i++) {\n        var isAdded = false;\n        if (typeof preTaskResources === 'string') {\n          if (typeof preTaskResources === 'string') {\n            if (preTaskResources === resourceData[i][resourceSettings.name]) {\n              preTaskResources = resourceData[i][resourceSettings.name];\n              isAdded = true;\n              break;\n            }\n          }\n        } else {\n          for (var j = 0; j < preTaskResources.length; j++) {\n            if (typeof preTaskResources[j] === 'number' || typeof preTaskResources[j] === 'string') {\n              if (parseInt(preTaskResources[j], 10) === parseInt(resourceData[i][resourceSettings.id], 10)) {\n                preTaskResources[j] = resourceData[i];\n                isAdded = true;\n                break;\n              }\n            } else if (preTaskResources[j][resourceSettings.id] === resourceData[i][resourceSettings.id] && typeof preTaskResources[j] !== 'number') {\n              preTaskResources[j] = extend({}, preTaskResources[j], resourceData[i], true);\n              isAdded = true;\n              break;\n            }\n          }\n        }\n        if (!isAdded) {\n          if (typeof preTaskResources === 'string') {\n            preTaskResources = resourceData[i][resourceSettings.name];\n          } else {\n            preTaskResources.push(resourceData[i]);\n          }\n        }\n      }\n      var data_1 = [];\n      if (!isNullOrUndefined(preTaskResources)) {\n        if (typeof preTaskResources !== 'string') {\n          var _loop_4 = function (k) {\n            resourceData.filter(function (resourceInfo) {\n              if (resourceInfo[resourceSettings.id] === preTaskResources[k][resourceSettings.id] && data_1.indexOf(preTaskResources[k]) === -1) {\n                data_1.push(preTaskResources[k]);\n              }\n            });\n          };\n          for (var k = 0; k < preTaskResources.length; k++) {\n            _loop_4(k);\n          }\n          this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, data_1, ganttData);\n        } else {\n          this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, preTaskResources, ganttData);\n        }\n      }\n    } else {\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], ganttData);\n    }\n  };\n  TaskProcessor.prototype.setRecordDate = function (task, value, mapping) {\n    var tempDate = typeof value === 'string' ? new Date(value) : value;\n    if (!isNullOrUndefined(value)) {\n      value = new Date(tempDate.getTime());\n    }\n    this.parent.setRecordValue(mapping, value, task);\n    if (!isNullOrUndefined(value)) {\n      value = new Date(tempDate.getTime());\n    }\n    if (!this.parent.isLoad && !this.parent.isDynamicData) {\n      this.parent.setRecordValue('taskData.' + mapping, value, task);\n    }\n    this.parent.isDynamicData = false;\n  };\n  TaskProcessor.prototype.getDurationInDay = function (duration, durationUnit) {\n    if (durationUnit === 'day') {\n      return duration;\n    } else if (durationUnit === 'hour') {\n      return duration / (this.parent.secondsPerDay / 3600);\n    } else {\n      return duration / (this.parent.secondsPerDay / 60);\n    }\n  };\n  TaskProcessor.prototype.setRecordDuration = function (task, mapping) {\n    var duration = task.ganttProperties.duration;\n    var durationUnit = task.ganttProperties.durationUnit;\n    if (!isNullOrUndefined(duration)) {\n      this.parent.setRecordValue(mapping, task.ganttProperties.duration, task);\n      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      var durationValue = getValue(mapping, task.taskData);\n      if (isNaN(durationValue) && isNullOrUndefined(this.parent.taskFields.durationUnit) && !isNullOrUndefined(durationValue)) {\n        this.parent.setRecordValue('taskData.' + mapping, this.getDurationString(duration, durationUnit), task);\n      } else {\n        if (typeof durationValue === 'string') {\n          this.parent.setRecordValue('taskData.' + mapping, duration.toString(), task);\n        } else {\n          this.parent.setRecordValue('taskData.' + mapping, duration, task);\n        }\n      }\n    } else {\n      this.parent.setRecordValue(mapping, duration, task);\n      this.parent.setRecordValue('taskData.' + mapping, duration, task);\n    }\n    if (this.parent.taskFields.durationUnit) {\n      task.taskData[this.parent.taskFields.durationUnit] = task.ganttProperties.durationUnit;\n    }\n  };\n  TaskProcessor.prototype.setDataSource = function (data) {\n    var dataArray;\n    var createData = [];\n    if (Array.isArray(data)) {\n      dataArray = data;\n    }\n    var length = dataArray.length;\n    for (var i = 0; i < length; i++) {\n      var record = data[i];\n      createData.push(record);\n      if (!isNullOrUndefined(data[i][this.parent.taskFields.child])) {\n        this.setDataSource(data[i][this.parent.taskFields.child]);\n      }\n    }\n    return createData;\n  };\n  TaskProcessor.prototype.setStartDate = function (task) {\n    var _this = this;\n    var hierarchicalData = [];\n    if (!isNullOrUndefined(this.parent.taskFields.parentID) && !isNullOrUndefined(this.parent.taskFields.id)) {\n      hierarchicalData = this.setDataSource(this.parent.dataSource);\n    } else {\n      hierarchicalData = this.parent.dataSource;\n    }\n    hierarchicalData.map(function (record) {\n      if (task.ganttProperties.taskId === record[_this.parent.taskFields.id]) {\n        if (!isNullOrUndefined(_this.parent.taskFields.startDate)) {\n          task[_this.parent.taskFields.startDate] = record[_this.parent.taskFields.startDate];\n        }\n        if (!isNullOrUndefined(_this.parent.taskFields.endDate)) {\n          task[_this.parent.taskFields.endDate] = record[_this.parent.taskFields.endDate];\n        }\n      }\n    });\n  };\n  TaskProcessor.prototype.getWorkInHour = function (work, workUnit) {\n    if (workUnit === 'day') {\n      return work * (this.parent.secondsPerDay / 3600);\n    } else if (workUnit === 'minute') {\n      return work / 60;\n    } else {\n      return work;\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateTaskData = function (ganttData) {\n    var dataMapping = this.parent.taskFields;\n    var ganttProperties = ganttData.ganttProperties;\n    if (!isNullOrUndefined(ganttData.taskData)) {\n      var data = ganttData.taskData;\n      if (dataMapping.id) {\n        this.parent.setRecordValue('taskData.' + dataMapping.id, ganttProperties.taskId, ganttData);\n        this.parent.setRecordValue(dataMapping.id, ganttProperties.taskId, ganttData);\n      }\n      if (dataMapping.name) {\n        if (!this.parent.isLoad) {\n          this.parent.setRecordValue('taskData.' + dataMapping.name, ganttProperties.taskName, ganttData);\n        }\n        this.parent.setRecordValue(dataMapping.name, ganttProperties.taskName, ganttData);\n      }\n      if (dataMapping.startDate) {\n        this.setRecordDate(ganttData, ganttProperties.startDate, dataMapping.startDate);\n      }\n      if (dataMapping.endDate) {\n        this.setRecordDate(ganttData, ganttProperties.endDate, dataMapping.endDate);\n      }\n      if (dataMapping.duration) {\n        if (isNullOrUndefined(dataMapping.milestone) || !isNullOrUndefined(dataMapping.milestone) && !ganttData.taskData[dataMapping.milestone]) {\n          this.setRecordDuration(ganttData, dataMapping.duration);\n        }\n      }\n      if (dataMapping.durationUnit) {\n        data[dataMapping.durationUnit] = ganttProperties.durationUnit;\n      }\n      if (dataMapping.progress) {\n        if (!this.parent.isLoad) {\n          this.parent.setRecordValue('taskData.' + dataMapping.progress, ganttProperties.progress, ganttData);\n        }\n        this.parent.setRecordValue(dataMapping.progress, ganttProperties.progress, ganttData);\n      }\n      if (dataMapping.baselineStartDate) {\n        this.setRecordDate(ganttData, ganttProperties.baselineStartDate, dataMapping.baselineStartDate);\n      }\n      if (dataMapping.baselineEndDate) {\n        this.setRecordDate(ganttData, ganttProperties.baselineEndDate, dataMapping.baselineEndDate);\n      }\n      if (dataMapping.notes) {\n        if (!this.parent.isLoad) {\n          this.parent.setRecordValue('taskData.' + dataMapping.notes, ganttProperties.notes, ganttData);\n        }\n        this.parent.setRecordValue(dataMapping.notes, ganttProperties.notes, ganttData);\n      }\n      if (dataMapping.cssClass) {\n        if (!this.parent.isLoad) {\n          this.parent.setRecordValue('taskData.' + dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n        }\n        this.parent.setRecordValue(dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n      }\n      if (dataMapping.indicators) {\n        if (!this.parent.isLoad) {\n          this.parent.setRecordValue('taskData.' + dataMapping.indicators, ganttProperties.indicators, ganttData);\n        }\n        this.parent.setRecordValue(dataMapping.indicators, ganttProperties.indicators, ganttData);\n      }\n      if (dataMapping.parentID) {\n        var parentID = this.parent.viewType === 'ProjectView' ? ganttProperties.parentId : data[dataMapping.parentID];\n        this.parent.setRecordValue('taskData.' + dataMapping.parentID, parentID, ganttData);\n        this.parent.setRecordValue(dataMapping.parentID, ganttProperties.parentId, ganttData);\n      }\n      if (dataMapping.work) {\n        if (!this.parent.isLoad) {\n          this.parent.setRecordValue('taskData.' + dataMapping.work, ganttProperties.work, ganttData);\n        }\n        this.parent.setRecordValue(dataMapping.work, ganttProperties.work, ganttData);\n      }\n      if (dataMapping.type) {\n        if (!this.parent.isLoad) {\n          this.parent.setRecordValue('taskData.' + dataMapping.type, ganttProperties.taskType, ganttData);\n        }\n        this.parent.setRecordValue(dataMapping.type, ganttProperties.taskType, ganttData);\n      }\n    }\n  };\n  /**\n   * To set resource value in Gantt record\n   *\n   * @param {object} data .\n   * @returns {object[]} .\n   * @private\n   */\n  TaskProcessor.prototype.setResourceInfo = function (data) {\n    var _this = this;\n    // eslint-disable-next-line\n    var resourceIdCollection;\n    if (isNullOrUndefined(data[this.parent.taskFields.resourceInfo])) {\n      return resourceIdCollection;\n    }\n    if (this.parent.isLoad) {\n      resourceIdCollection = data[this.parent.taskFields.resourceInfo];\n    } else {\n      resourceIdCollection = data['taskData'] && this.parent.taskFields.resourceInfo in data['taskData'] ? data['taskData'][this.parent.taskFields.resourceInfo] : data[this.parent.taskFields.resourceInfo];\n    }\n    var resourceData;\n    if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.dialogModule) && this.parent.editModule.dialogModule.isAddNewResource) {\n      resourceData = this.parent.editModule.dialogModule.ganttResources;\n    } else {\n      resourceData = this.parent.resources;\n    }\n    var resourceIDMapping = this.parent.resourceFields.id;\n    var resourceUnitMapping = this.parent.resourceFields.unit;\n    var resourceGroup = this.parent.resourceFields.group;\n    var resources = [];\n    if (typeof resourceIdCollection === 'string' && resourceIdCollection !== '') {\n      var resource_1 = [];\n      var resourceIds_1 = data[this.parent.taskFields.resourceInfo].split(',');\n      if (resourceIds_1) {\n        resourceData.forEach(function (resourceInfo) {\n          if (resourceIds_1.includes(resourceInfo[_this.parent.resourceFields.name])) {\n            resource_1.push(resourceInfo);\n          }\n        });\n        var ganttDataResource = extend({}, resource_1[0]);\n        resources.push(ganttDataResource);\n        if (!isNullOrUndefined(resourceUnitMapping) && !isNullOrUndefined(resourceIdCollection[resourceUnitMapping])) {\n          ganttDataResource[resourceUnitMapping] = resourceIdCollection[resourceUnitMapping];\n        }\n        if (!isNullOrUndefined(resourceGroup) && !isNullOrUndefined(resourceIdCollection[resourceGroup])) {\n          ganttDataResource[resourceGroup] = resourceIdCollection[resourceGroup];\n        }\n      }\n    } else {\n      var _loop_5 = function (count) {\n        var resource = resourceData.filter(function (resourceInfo) {\n          if (typeof resourceIdCollection[count] === 'object' && resourceIdCollection[count][resourceIDMapping] === resourceInfo[resourceIDMapping]) {\n            return true;\n          } else {\n            return resourceIdCollection[count] === resourceInfo[resourceIDMapping];\n          }\n        });\n        var ganttDataResource = extend({}, resource[0]);\n        resources.push(ganttDataResource);\n        if (!isNullOrUndefined(resourceUnitMapping) && !isNullOrUndefined(resourceIdCollection[count][resourceUnitMapping])) {\n          ganttDataResource[resourceUnitMapping] = resourceIdCollection[count][resourceUnitMapping];\n        }\n        if (!isNullOrUndefined(resourceGroup) && !isNullOrUndefined(resourceIdCollection[count][resourceGroup])) {\n          ganttDataResource[resourceGroup] = resourceIdCollection[count][resourceGroup];\n        }\n      };\n      for (var count = 0; count < resourceIdCollection.length; count++) {\n        _loop_5(count);\n      }\n    }\n    this.updateResourceUnit(resources);\n    return resources;\n  };\n  /**\n   * To set resource unit in Gantt record\n   *\n   * @param {object[]} resourceData .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateResourceUnit = function (resourceData) {\n    var resourceUnit = this.parent.resourceFields.unit;\n    if (!isNullOrUndefined(resourceUnit)) {\n      var length_1 = resourceData.length;\n      var index = void 0;\n      for (index = 0; index < length_1; index++) {\n        if (isNullOrUndefined(resourceData[index][resourceUnit])) {\n          resourceData[index][resourceUnit] = 100;\n        }\n      }\n    }\n  };\n  /**\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateResourceName = function (data) {\n    var resourceInfo = data.ganttProperties.resourceInfo;\n    var resourceName = [];\n    var taskMapping = this.parent.taskFields;\n    if (resourceInfo && resourceInfo.length > 0) {\n      var resourceLength = resourceInfo.length;\n      if (typeof data.taskData[this.parent.taskFields.resourceInfo] === 'string') {\n        var taskResources = data.taskData[this.parent.taskFields.resourceInfo];\n        var stringResourceName = taskResources;\n        this.parent.setRecordValue('resourceNames', stringResourceName, data.ganttProperties, true);\n        this.parent.setRecordValue(this.parent.taskFields.resourceInfo, stringResourceName, data, true);\n        this.updateTaskDataResource(data);\n      } else {\n        var taskResources = extend([], [], data.taskData[this.parent.taskFields.resourceInfo], true);\n        this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], data);\n        for (var i = 0; i < resourceLength; i++) {\n          var resource = resourceInfo[i];\n          var resName = resource[this.parent.resourceFields.name];\n          var resourceUnit = resource[this.parent.resourceFields.unit];\n          if (resourceUnit !== 100) {\n            resName += '[' + resourceUnit + '%' + ']';\n          }\n          if (!isNullOrUndefined(resName)) {\n            resourceName.push(resName);\n          }\n          if (data.taskData) {\n            var mapping = taskMapping.resourceInfo;\n            if (taskResources[i] && typeof (taskResources[parseInt(i.toString(), 10)] === 'object')) {\n              data.taskData[mapping].push(taskResources[i]);\n            } else {\n              data.taskData[mapping].push(resource[this.parent.resourceFields.id]);\n            }\n          }\n        }\n        this.parent.setRecordValue('resourceNames', resourceName.join(','), data.ganttProperties, true);\n        this.parent.setRecordValue(this.parent.taskFields.resourceInfo, resourceName.join(','), data, true);\n        this.updateTaskDataResource(data);\n      }\n    }\n  };\n  TaskProcessor.prototype.dataReorder = function (flatCollection, rootCollection) {\n    var result = [];\n    while (flatCollection.length > 0 && rootCollection.length > 0) {\n      var index = rootCollection.indexOf(flatCollection[0]);\n      if (index === -1) {\n        flatCollection.shift();\n      } else {\n        result.push(flatCollection.shift());\n        rootCollection.splice(index, 1);\n      }\n    }\n    return result;\n  };\n  TaskProcessor.prototype.validateDurationUnitMapping = function (durationUnit) {\n    var unit = durationUnit;\n    if (unit === 'minute' || unit === 'minutes' || unit === 'm' || unit === 'min') {\n      unit = 'minute';\n    } else if (unit === 'hour' || unit === 'hours' || unit === 'h' || unit === 'hr') {\n      unit = 'hour';\n    } else if (unit === 'day' || unit === 'days' || unit === 'd') {\n      unit = 'day';\n    } else {\n      unit = this.parent.durationUnit.toLocaleLowerCase();\n    }\n    return unit;\n  };\n  TaskProcessor.prototype.validateTaskTypeMapping = function (taskType) {\n    var type = taskType;\n    if (type === 'FixedDuration') {\n      type = 'FixedDuration';\n    } else if (type === 'FixedUnit') {\n      type = 'FixedUnit';\n    } else if (type === 'FixedWork') {\n      type = 'FixedWork';\n    } else {\n      type = this.parent.taskType;\n    }\n    return type;\n  };\n  TaskProcessor.prototype.validateWorkUnitMapping = function (workUnit) {\n    var unit = workUnit;\n    if (unit === 'minute') {\n      unit = 'minute';\n    } else if (unit === 'hour') {\n      unit = 'hour';\n    } else if (unit === 'day') {\n      unit = 'day';\n    } else {\n      unit = this.parent.workUnit.toLocaleLowerCase();\n    }\n    return unit;\n  };\n  /**\n   * To update duration value in Task\n   *\n   * @param {string} duration .\n   * @param {ITaskData} ganttProperties .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateDurationValue = function (duration, ganttProperties) {\n    var tempDuration = this.getDurationValue(duration);\n    if (!isNaN(getValue('duration', tempDuration)) && !(this.parent.viewType === 'ResourceView' && tempDuration['duration'] === 0 && this.parent.editModule && this.parent.editModule.cellEditModule && this.parent.editModule.cellEditModule.isCellEdit)) {\n      this.parent.setRecordValue('duration', getValue('duration', tempDuration), ganttProperties, true);\n    }\n    if (!isNullOrUndefined(getValue('durationUnit', tempDuration))) {\n      this.parent.setRecordValue('durationUnit', getValue('durationUnit', tempDuration), ganttProperties, true);\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.reUpdateGanttData = function () {\n    if (this.parent.flatData.length > 0) {\n      var data = void 0;\n      var ganttData = void 0;\n      this.parent.secondsPerDay = this.getSecondsPerDay();\n      for (var index = 0; index < this.parent.flatData.length; index++) {\n        data = this.parent.flatData[index].taskData;\n        ganttData = this.parent.flatData[index];\n        if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n          this.setRecordDuration(ganttData, this.parent.taskFields.duration);\n        }\n        if (this.parent.isLoad) {\n          this.setStartDate(ganttData);\n        }\n        this.calculateScheduledValues(ganttData, data, false);\n      }\n      this.updateGanttData();\n    }\n  };\n  //check day is fall between from and to date range\n  TaskProcessor.prototype._isInStartDateRange = function (day, from, to) {\n    var isInRange = false;\n    if (day.getTime() >= from.getTime() && day.getTime() < to.getTime()) {\n      isInRange = true;\n    }\n    return isInRange;\n  };\n  //check day is fall between from and to date range\n  TaskProcessor.prototype._isInEndDateRange = function (day, from, to) {\n    var isInRange = false;\n    if (day.getTime() > from.getTime() && day.getTime() <= to.getTime()) {\n      isInRange = true;\n    }\n    return isInRange;\n  };\n  /**\n   * Method to find overlapping value of the parent task\n   *\n   * @param {IGanttData} resourceTask .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateOverlappingValues = function (resourceTask) {\n    var tasks = resourceTask.childRecords;\n    var currentTask;\n    var ranges = [];\n    if (tasks.length <= 1) {\n      resourceTask.ganttProperties.workTimelineRanges = [];\n      return;\n    }\n    tasks = this.setSortedChildTasks(resourceTask);\n    this.updateOverlappingIndex(tasks);\n    for (var count = 1; count < tasks.length; count++) {\n      currentTask = tasks[count];\n      var cStartDate = void 0;\n      var cEndDate = void 0;\n      if (currentTask.ganttProperties.startDate) {\n        cStartDate = new Date(currentTask.ganttProperties.startDate.getTime());\n      }\n      if (currentTask.ganttProperties.endDate) {\n        cEndDate = new Date(currentTask.ganttProperties.endDate.getTime()); //task 2\n      }\n      var range = [];\n      // eslint-disable-next-line\n      var rangeObj = {};\n      for (var index = 0; index < count; index++) {\n        var tStartDate = tasks[index].ganttProperties.startDate;\n        var tEndDate = tasks[index].ganttProperties.endDate; // task 1\n        var rangeObj_1 = {};\n        if (cStartDate && cEndDate && tEndDate && (this._isInStartDateRange(cStartDate, tStartDate, tEndDate) || this._isInEndDateRange(cEndDate, tStartDate, tEndDate))) {\n          if (tStartDate.getTime() > cStartDate.getTime() && tStartDate.getTime() < cEndDate.getTime() && tEndDate.getTime() > cStartDate.getTime() && tEndDate.getTime() >= cEndDate.getTime() || cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() <= tEndDate.getTime()) {\n            rangeObj_1.from = tStartDate;\n            rangeObj_1.to = cEndDate;\n          } else if (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() > tEndDate.getTime()) {\n            rangeObj_1.from = tStartDate;\n            rangeObj_1.to = tEndDate;\n          } else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime()) {\n            rangeObj_1.from = cStartDate;\n            rangeObj_1.to = tEndDate;\n          } else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime()) {\n            rangeObj_1.from = cStartDate;\n            rangeObj_1.to = cEndDate;\n          }\n          range.push(rangeObj_1);\n        }\n      }\n      // eslint-disable-next-line\n      ranges.push.apply(ranges, this.mergeRangeCollections(range));\n    }\n    this.parent.setRecordValue('workTimelineRanges', this.mergeRangeCollections(ranges, true), resourceTask.ganttProperties, true);\n    this.calculateRangeLeftWidth(resourceTask.ganttProperties.workTimelineRanges);\n  };\n  /**\n   * @param {IGanttData[]} tasks .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateOverlappingIndex = function (tasks) {\n    for (var i = 0; i < tasks.length; i++) {\n      tasks[i].ganttProperties.eOverlapIndex = i;\n    }\n  };\n  /**\n   * Method to calculate the left and width value of oarlapping ranges\n   *\n   * @param {IWorkTimelineRanges[]} ranges .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.calculateRangeLeftWidth = function (ranges) {\n    for (var count = 0; count < ranges.length; count++) {\n      ranges[count].left = this.getTaskLeft(ranges[count].from, false);\n      ranges[count].width = this.getTaskWidth(ranges[count].from, ranges[count].to);\n    }\n  };\n  /**\n   * @param {IWorkTimelineRanges[]} ranges .\n   * @param {boolean} isSplit .\n   * @returns {IWorkTimelineRanges[]} .\n   * @private\n   */\n  TaskProcessor.prototype.mergeRangeCollections = function (ranges, isSplit) {\n    var finalRange = [];\n    var currentTopRange = {};\n    var cCompareRange = {};\n    var cStartDate;\n    var cEndDate;\n    var tStartDate;\n    var tEndDate;\n    var sortedRanges = new DataManager(ranges).executeLocal(new Query().sortBy(this.parent.taskFields.startDate, 'Ascending'));\n    for (var i = 0; i < sortedRanges.length; i++) {\n      if (finalRange.length === 0 && i === 0) {\n        finalRange.push(sortedRanges[i]);\n        continue;\n      }\n      currentTopRange = finalRange[finalRange.length - 1];\n      cStartDate = currentTopRange.from;\n      cEndDate = currentTopRange.to;\n      cCompareRange = sortedRanges[i];\n      tStartDate = cCompareRange.from;\n      tEndDate = cCompareRange.to;\n      if (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime() || cStartDate.getTime() < tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime()) {\n        continue;\n      }\n      /* eslint-disable-next-line */else if (cStartDate.getTime() <= tStartDate.getTime() && cEndDate.getTime() >= tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime() || cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() === tStartDate.getTime()) {\n        currentTopRange.to = tEndDate;\n      } else if (cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() !== tStartDate.getTime()) {\n        finalRange.push(sortedRanges[i]);\n      }\n    }\n    if (isSplit) {\n      finalRange = this.splitRangeCollection(finalRange);\n    }\n    return finalRange;\n  };\n  /**\n   * Sort resource child records based on start date\n   *\n   * @param {IGanttData} resourceTask .\n   * @returns {IGanttData} .\n   * @private\n   */\n  TaskProcessor.prototype.setSortedChildTasks = function (resourceTask) {\n    var sortedRecords = [];\n    sortedRecords = new DataManager(resourceTask.childRecords).executeLocal(new Query().sortBy(this.parent.taskFields.startDate, 'Ascending'));\n    return sortedRecords;\n  };\n  TaskProcessor.prototype.splitRangeCollection = function (rangeCollection, fromField, toField) {\n    var splitArray = [];\n    var unit;\n    if (this.parent.timelineModule.isSingleTier) {\n      unit = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n    } else {\n      unit = this.parent.timelineModule.bottomTier;\n    }\n    if (unit === 'Week' || unit === 'Month' || unit === 'Year') {\n      splitArray = rangeCollection;\n    } else if (unit === 'Day') {\n      splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n    } else {\n      if (this.parent.workingTimeRanges[0].from === 0 && this.parent.workingTimeRanges[0].to === 86400) {\n        splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n      } else {\n        splitArray = this.getRangeWithDay(rangeCollection, fromField, toField);\n      }\n    }\n    return splitArray;\n  };\n  TaskProcessor.prototype.getRangeWithDay = function (ranges, fromField, toField) {\n    var splitArray = [];\n    for (var i = 0; i < ranges.length; i++) {\n      splitArray.push.apply(splitArray, this.splitRangeForDayMode(ranges[parseInt(i.toString(), 10)], fromField, toField));\n    }\n    return splitArray;\n  };\n  TaskProcessor.prototype.splitRangeForDayMode = function (range, fromField, toField) {\n    var fromString = fromField ? fromField : 'from';\n    var toString = toField ? toField : 'to';\n    var tempStart = new Date(range[fromString]);\n    var end = new Date(range[toString]);\n    var ranges = [];\n    var rangeObject = {};\n    if (tempStart.getTime() < end.getTime()) {\n      do {\n        var nStart = new Date(tempStart.getTime());\n        var nEndDate = new Date(tempStart.getTime());\n        var nextAvailDuration = 0;\n        var sHour = this.parent.dataOperation.getSecondsInDecimal(tempStart);\n        var startRangeIndex = -1;\n        for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n          var val = this.parent.workingTimeRanges[i];\n          if (sHour >= val.from && sHour <= val.to) {\n            startRangeIndex = i;\n            break;\n          }\n        }\n        if (startRangeIndex !== -1) {\n          nextAvailDuration = Math.round(this.parent.workingTimeRanges[startRangeIndex].to - sHour);\n          nEndDate.setSeconds(nEndDate.getSeconds() + nextAvailDuration);\n        }\n        var taskName = 'task';\n        if (nEndDate.getTime() < end.getTime()) {\n          rangeObject = {};\n          if (range.task) {\n            rangeObject[taskName] = extend([], range.task);\n          }\n          rangeObject[fromString] = nStart;\n          rangeObject[toString] = nEndDate;\n          rangeObject.isSplit = true;\n          ranges.push(rangeObject);\n        } else {\n          rangeObject = {};\n          if (range.task) {\n            rangeObject[taskName] = extend([], range.task);\n          }\n          rangeObject[fromString] = nStart;\n          rangeObject[toString] = end;\n          rangeObject.isSplit = true;\n          ranges.push(rangeObject);\n        }\n        tempStart = this.checkStartDate(nEndDate);\n      } while (tempStart.getTime() < end.getTime());\n    } else {\n      ranges.push(range);\n    }\n    return ranges;\n  };\n  TaskProcessor.prototype.getRangeWithWeek = function (ranges, fromField, toField) {\n    var splitArray = [];\n    for (var i = 0; i < ranges.length; i++) {\n      // eslint-disable-next-line\n      splitArray.push.apply(splitArray, this.splitRangeForWeekMode(ranges[i], fromField, toField));\n    }\n    return splitArray;\n  };\n  TaskProcessor.prototype.splitRangeForWeekMode = function (range, fromField, toField) {\n    var from = fromField ? fromField : 'from';\n    var to = toField ? toField : 'to';\n    var start = new Date(range[from]);\n    var tempStart = new Date(range[from]);\n    var end = new Date(range[to]);\n    var isInSplit = false;\n    var ranges = [];\n    var rangeObj = {};\n    tempStart.setDate(tempStart.getDate() + 1);\n    if (tempStart.getTime() < end.getTime()) {\n      do {\n        if (this.parent.dataOperation.isOnHolidayOrWeekEnd(tempStart, null)) {\n          var tempEndDate = new Date(tempStart.getTime());\n          tempEndDate.setDate(tempStart.getDate() - 1);\n          var dayEndTime = void 0;\n          if (this.parent.weekWorkingTime.length > 0) {\n            dayEndTime = this.parent['getEndTime'](tempEndDate);\n          } else {\n            dayEndTime = this.parent.defaultEndTime;\n          }\n          this.setTime(dayEndTime, tempEndDate);\n          rangeObj = {};\n          rangeObj[from] = start;\n          rangeObj.isSplit = true;\n          rangeObj[to] = new Date(tempEndDate);\n          if (range.task) {\n            rangeObj.task = extend([], range.task, true);\n          }\n          var isStartNotHolidayOrWeekend = !this.parent.dataOperation.isOnHolidayOrWeekEnd(start, null);\n          var isTempEndDateNotHolidayOrWeekend = !this.parent.dataOperation.isOnHolidayOrWeekEnd(tempEndDate, null);\n          var isDifferentDates = start.getTime() !== tempEndDate.getTime();\n          if (isStartNotHolidayOrWeekend && isTempEndDateNotHolidayOrWeekend && isDifferentDates) {\n            ranges.push(rangeObj);\n          }\n          tempEndDate.setDate(tempEndDate.getDate() + 1);\n          start = this.checkStartDate(tempEndDate);\n          tempStart = new Date(start.getTime());\n          isInSplit = true;\n        } else {\n          tempStart.setDate(tempStart.getDate() + 1);\n        }\n      } while (tempStart.getTime() < end.getTime());\n      if (isInSplit) {\n        if (start.getTime() !== end.getTime()) {\n          rangeObj = {};\n          if (range.task) {\n            rangeObj.task = extend([], range.task, true);\n          }\n          rangeObj[from] = start;\n          rangeObj[to] = end;\n          rangeObj.isSplit = true;\n          ranges.push(rangeObj);\n        }\n      } else {\n        ranges.push(range);\n      }\n    } else {\n      ranges.push(range);\n    }\n    return ranges;\n  };\n  /**\n   * Update all gantt data collection width, progress width and left value\n   *\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateGanttData = function () {\n    var flatData = this.parent.flatData;\n    var length = flatData.length;\n    this.systemTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    for (var i = 0; i < length; i++) {\n      var data = flatData[i];\n      this.updateTaskLeftWidth(data);\n    }\n  };\n  /**\n   * Update all gantt data collection width, progress width and left value\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @public\n   */\n  TaskProcessor.prototype.updateTaskLeftWidth = function (data) {\n    var task = data.ganttProperties;\n    if (!data.hasChildRecords || !this.parent.autoCalculateDateScheduling || this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      this.updateWidthLeft(data);\n    }\n    this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n    this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n    var childData = [];\n    var parentItem;\n    if (data.parentItem) {\n      parentItem = this.parent.getParentTask(data.parentItem);\n      childData = parentItem.childRecords;\n    }\n    if (parentItem && childData.indexOf(data) === childData.length - 1 && !data.hasChildRecords && this.parent.enableValidation) {\n      if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) || this.parent.viewType === 'ResourceView') {\n        this.updateParentItems(parentItem);\n      }\n      if (!this.parent.autoCalculateDateScheduling || this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n        this.updateWidthLeft(parentItem);\n      }\n    } else if (parentItem && !this.parent.enableValidation) {\n      this.updateWidthLeft(parentItem);\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.reUpdateGanttDataPosition = function () {\n    var flatData;\n    if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n      flatData = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'];\n    } else {\n      flatData = this.parent.flatData;\n    }\n    var length = flatData.length;\n    for (var i = 0; i < length; i++) {\n      var data = flatData[i];\n      var task = data.ganttProperties;\n      this.updateWidthLeft(data);\n      if (this.parent.taskMode !== 'Auto' && data.hasChildRecords) {\n        this.updateAutoWidthLeft(data);\n      }\n      this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n      this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n      this.parent.dataOperation.updateTaskData(data);\n    }\n  };\n  /**\n   * method to update left, width, progress width in record\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateWidthLeft = function (data) {\n    var ganttRecord = data.ganttProperties;\n    var totalSegmentsProgressWidth = 0;\n    // task endDate may be changed in segment calculation so this must be calculated first.\n    // task width calculating was based on endDate\n    var progressResizer = 0;\n    if (!isNullOrUndefined(ganttRecord.segments) && ganttRecord.segments.length > 0) {\n      var segments = ganttRecord.segments;\n      for (var i = 0; i < segments.length; i++) {\n        var segment = segments[i];\n        if (i === 0 && !isNullOrUndefined(ganttRecord.startDate) && !isNullOrUndefined(segment.startDate) && !isNullOrUndefined(segment.startDate.getTime()) && segment.startDate.getTime() !== ganttRecord.startDate.getTime()) {\n          segment.startDate = ganttRecord.startDate;\n          var endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttRecord.durationUnit, ganttRecord, false);\n          segment.endDate = this.parent.dataOperation.checkEndDate(endDate, ganttRecord, false);\n          this.parent.chartRowsModule.incrementSegments(segments, 0, data);\n        }\n        segment.width = this.getSplitTaskWidth(segment.startDate, segment.duration, data);\n        totalSegmentsProgressWidth = totalSegmentsProgressWidth + segment.width;\n        segment.showProgress = false;\n        segment.progressWidth = -1;\n        if (i !== 0) {\n          var pStartDate = new Date(ganttRecord.startDate.getTime());\n          segment.left = this.getSplitTaskLeft(segment.startDate, pStartDate);\n        }\n      }\n      var setProgress = this.parent.dataOperation.getProgressWidth(totalSegmentsProgressWidth, ganttRecord.progress);\n      var isValid = true;\n      for (var i = 0; i < segments.length; i++) {\n        if (isValid) {\n          if (setProgress <= segments[i].width) {\n            segments[i].progressWidth = setProgress;\n            segments[i].showProgress = true;\n            isValid = false;\n          } else {\n            segments[i].progressWidth = segments[i].width;\n            setProgress = setProgress - segments[i].progressWidth;\n          }\n          if (segments[i].showProgress) {\n            progressResizer = progressResizer + segments[i].left + segments[i].progressWidth;\n          }\n        }\n      }\n      this.parent.setRecordValue('segments', ganttRecord.segments, ganttRecord, true);\n      this.parent.dataOperation.updateMappingData(data, 'segments');\n    }\n    this.parent.setRecordValue('width', this.parent.dataOperation.calculateWidth(data), ganttRecord, true);\n    this.parent.setRecordValue('left', this.parent.dataOperation.calculateLeft(ganttRecord), ganttRecord, true);\n    if (!isNullOrUndefined(ganttRecord.segments) && ganttRecord.segments.length > 0) {\n      this.parent.setRecordValue('progressWidth', progressResizer, ganttRecord, true);\n    } else {\n      this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth(ganttRecord.isAutoSchedule || !data.hasChildRecords ? ganttRecord.width : ganttRecord.autoWidth, ganttRecord.progress), ganttRecord, true);\n    }\n  };\n  /**\n   * method to update left, width, progress width in record\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateAutoWidthLeft = function (data) {\n    var ganttRecord = data.ganttProperties;\n    this.parent.setRecordValue('autoWidth', this.calculateWidth(data, true), ganttRecord, true);\n    this.parent.setRecordValue('autoLeft', this.calculateLeft(ganttRecord, true), ganttRecord, true);\n    this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth(ganttRecord.isAutoSchedule || !data.hasChildRecords ? ganttRecord.width : ganttRecord.autoWidth, ganttRecord.progress), ganttRecord, true);\n  };\n  /**\n   * To calculate parent progress value\n   *\n   * @param {IGanttData} childGanttRecord .\n   * @returns {object} .\n   * @private\n   */\n  TaskProcessor.prototype.getParentProgress = function (childGanttRecord) {\n    var durationInDay = 0;\n    var progressValues = {};\n    var totSeconds;\n    if (this.parent.weekWorkingTime.length > 0) {\n      totSeconds = this.parent['getSecondsPerDay'](childGanttRecord.ganttProperties.startDate ? childGanttRecord.ganttProperties.startDate : childGanttRecord.ganttProperties.endDate);\n    } else {\n      totSeconds = this.parent.secondsPerDay;\n    }\n    switch (childGanttRecord.ganttProperties.durationUnit) {\n      case 'hour':\n        durationInDay = childGanttRecord.ganttProperties.duration / (totSeconds / 3600);\n        break;\n      case 'minute':\n        durationInDay = childGanttRecord.ganttProperties.duration / (totSeconds / 60);\n        break;\n      default:\n        durationInDay = childGanttRecord.ganttProperties.duration;\n    }\n    if (childGanttRecord.hasChildRecords) {\n      setValue('totalProgress', childGanttRecord.ganttProperties.totalProgress, progressValues);\n      setValue('totalDuration', childGanttRecord.ganttProperties.totalDuration ? childGanttRecord.ganttProperties.totalDuration : 0, progressValues);\n    } else {\n      setValue('totalProgress', childGanttRecord.ganttProperties.progress * durationInDay, progressValues);\n      setValue('totalDuration', durationInDay, progressValues);\n    }\n    return progressValues;\n  };\n  TaskProcessor.prototype.resetDependency = function (record) {\n    var dependency = this.parent.taskFields.dependency;\n    if (!isNullOrUndefined(dependency)) {\n      var recordProp = record.ganttProperties;\n      this.parent.setRecordValue('predecessor', [], recordProp, true);\n      this.parent.setRecordValue('predecessorsName', null, recordProp, true);\n      this.parent.setRecordValue('taskData.' + dependency, null, record);\n      this.parent.setRecordValue(dependency, null, record);\n    }\n  };\n  TaskProcessor.prototype.isUnscheduledTask = function (ganttProperties, parantData) {\n    var properties = ['startDate', 'endDate', 'duration'];\n    var count = 0;\n    var filledProperty = null;\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n      if (ganttProperties[prop]) {\n        count++;\n        filledProperty = prop;\n      }\n    }\n    if (count === 1 || count === 0 && !isNullOrUndefined(parantData) && parantData.hasChildRecords) {\n      return [true, filledProperty];\n    } else {\n      return [false, null];\n    }\n  };\n  TaskProcessor.prototype.isFromManual = function (childData) {\n    if (this.parent.allowUnscheduledTasks && this.parent.editModule && this.parent['oldRecords'] && this.parent['oldRecords'].length > 0 && isNullOrUndefined(childData.ganttProperties.startDate) && isNullOrUndefined(childData.ganttProperties.endDate) && !isNullOrUndefined(childData.ganttProperties.duration) && !childData.hasChildRecords && childData.parentItem && (this.parent.taskMode === 'Manual' || this.parent.taskMode === 'Custom' && childData[this.parent.taskFields.manual])) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * @param {IParent | IGanttData} cloneParent .\n   * @param {boolean} isParent .\n   * @returns {void} .\n   * @private\n   */\n  TaskProcessor.prototype.updateParentItems = function (cloneParent, isParent) {\n    var _this = this;\n    var parentData = isParent ? cloneParent : this.parent.getParentTask(cloneParent);\n    parentData = parentData ? parentData : cloneParent;\n    var deleteUpdate = false;\n    var ganttProp = !isNullOrUndefined(parentData) ? parentData.ganttProperties : null;\n    /* eslint-disable-next-line */\n    var _a = this.isUnscheduledTask(ganttProp, parentData),\n      isParentUnschecule = _a[0],\n      propertyWithValue = _a[1];\n    if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) || this.parent.viewType === 'ResourceView') {\n      if (parentData && parentData.childRecords && parentData.childRecords.length > 0) {\n        var previousStartDate = ganttProp.isAutoSchedule ? ganttProp.startDate : ganttProp.autoStartDate;\n        var previousEndDate = ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate;\n        var childRecords_1 = parentData.childRecords;\n        var childLength = childRecords_1.length;\n        var totalDuration = 0;\n        var progressValues = {};\n        var minStartDate = null;\n        var maxEndDate = null;\n        var milestoneCount = 0;\n        var totalProgress = 0;\n        var childCompletedWorks = 0;\n        var childData_1;\n        var countOfScheduled_1 = 0;\n        var countOfUnScheduled_1 = 0;\n        childRecords_1.some(function (childRecord) {\n          var _a = _this.isUnscheduledTask(childRecord['ganttProperties']),\n            isUnscheduled = _a[0],\n            propertyWithValue = _a[1];\n          if (isUnscheduled && propertyWithValue === 'duration') {\n            ++countOfUnScheduled_1;\n          } else if (!isUnscheduled) {\n            ++countOfScheduled_1;\n          }\n          if (countOfScheduled_1 > 0 && countOfUnScheduled_1 > 0) {\n            return true;\n          }\n          return false;\n        });\n        var isChildBoth = countOfScheduled_1 > 0 && countOfUnScheduled_1 > 0 ? true : undefined;\n        var _loop_6 = function (count) {\n          childData_1 = this_4.parent.loadChildOnDemand && this_4.parent.taskFields.hasChildMapping ? this_4.parent.currentViewData.filter(function (item) {\n            return item.ganttProperties.taskId === childRecords_1[count][_this.parent.taskFields.id];\n          })[0] : childRecords_1[count];\n          if (this_4.parent.isOnDelete && childData_1.isDelete) {\n            if (childLength === 1 && this_4.parent.viewType === 'ProjectView') {\n              deleteUpdate = true;\n            }\n            return \"continue\";\n          }\n          var startDate = void 0;\n          var endDate = void 0;\n          var _a = this_4.isUnscheduledTask(childData_1.ganttProperties),\n            isUnscheduled = _a[0],\n            propertyWithValue_1 = _a[1];\n          var parentRec = void 0;\n          if (this_4.isFromManual(childData_1)) {\n            var ganttRec = this_4.parent['oldRecords'].filter(function (record) {\n              return record.ganttProperties.uniqueID === childData_1.ganttProperties.uniqueID;\n            })[0];\n            if (ganttRec) {\n              parentRec = this_4.parent.getParentTask(ganttRec.parentItem);\n            }\n          }\n          var rec = parentRec ? parentRec : childData_1;\n          var prop = parentRec ? parentRec.ganttProperties : ganttProp;\n          startDate = isUnscheduled && propertyWithValue_1 !== 'startDate' && propertyWithValue_1 !== 'endDate' && !isParentUnschecule ? ganttProp.startDate : this_4.getValidStartDate(rec.ganttProperties);\n          if (parentData.hasChildRecords && !prop.isAutoSchedule && !isNullOrUndefined(rec.ganttProperties.autoStartDate)) {\n            startDate = rec.ganttProperties.autoStartDate;\n          }\n          endDate = isUnscheduled && propertyWithValue_1 !== 'startDate' && propertyWithValue_1 !== 'endDate' && !isParentUnschecule ? ganttProp.endDate : this_4.getValidEndDate(rec.ganttProperties);\n          if (parentData.hasChildRecords && !prop.isAutoSchedule && !isNullOrUndefined(rec.ganttProperties.autoEndDate)) {\n            endDate = rec.ganttProperties.autoEndDate;\n          }\n          if (isNullOrUndefined(minStartDate) && (isChildBoth && !isUnscheduled || isNullOrUndefined(isChildBoth))) {\n            minStartDate = this_4.getDateFromFormat(startDate);\n          }\n          if (isNullOrUndefined(maxEndDate) && (isChildBoth && !isUnscheduled || isNullOrUndefined(isChildBoth))) {\n            maxEndDate = this_4.getDateFromFormat(endDate);\n          }\n          if (!isNullOrUndefined(endDate) && maxEndDate && this_4.compareDates(endDate, maxEndDate) === 1) {\n            maxEndDate = this_4.getDateFromFormat(endDate);\n          }\n          if (!isNullOrUndefined(startDate) && minStartDate && this_4.compareDates(startDate, minStartDate) === -1) {\n            minStartDate = this_4.getDateFromFormat(startDate);\n          }\n          var condition = !childData_1.ganttProperties.isMilestone && isScheduledTask(childData_1.ganttProperties) ? true : false;\n          if (condition) {\n            progressValues = this_4.getParentProgress(childData_1);\n            totalProgress += getValue('totalProgress', progressValues);\n            if (childData_1[this_4.parent.taskFields.duration] < 1) {\n              totalDuration += getValue('totalDuration', progressValues);\n              totalDuration = Number(totalDuration.toFixed(4));\n            } else {\n              totalDuration += getValue('totalDuration', progressValues);\n            }\n          } else {\n            milestoneCount++;\n          }\n          var work = childData_1.ganttProperties.work;\n          if (typeof work === 'string') {\n            // If it's a string, convert it to a number\n            var numericValue = parseFloat(work);\n            if (!isNaN(numericValue)) {\n              childCompletedWorks += numericValue;\n            }\n          } else if (typeof work === 'number') {\n            // If it's already a number, simply add it to childCompletedWorks\n            childCompletedWorks += work;\n          }\n        };\n        var this_4 = this;\n        for (var count = 0; count < childLength; count++) {\n          _loop_6(count);\n        }\n        if (!deleteUpdate) {\n          var taskCount = void 0;\n          if (this.parent.isOnDelete && childData_1.isDelete) {\n            taskCount = childLength - milestoneCount - 1;\n          } else {\n            taskCount = childLength - milestoneCount;\n          }\n          var parentProgress = taskCount > 0 && totalDuration > 0 ? Number((totalProgress / totalDuration).toFixed(2)) : 0;\n          var parentProp = parentData.ganttProperties;\n          var milestone = taskCount === 0 && minStartDate && maxEndDate && minStartDate.getTime() === maxEndDate.getTime() ? true : false;\n          if (this.compareDates(previousStartDate, minStartDate) !== 0) {\n            this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', minStartDate, parentData.ganttProperties, true);\n            if ((!isNullOrUndefined(ganttProp.autoDuration) ? ganttProp.autoDuration === 0 : ganttProp.duration === 0) && parentData['isManual'] && milestone && parentData.hasChildRecords && parentData.ganttProperties.isAutoSchedule && this.parent.editModule.taskbarEditModule.taskbarEditedArgs.action !== 'TaskbarEditing') {\n              this.parent.setRecordValue('startDate', minStartDate, parentData.ganttProperties, true);\n            }\n          }\n          if (this.compareDates(previousEndDate, maxEndDate) !== 0) {\n            this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', maxEndDate, parentData.ganttProperties, true);\n            if ((!isNullOrUndefined(ganttProp.autoDuration) ? ganttProp.autoDuration === 0 : ganttProp.duration === 0) && parentData['isManual'] && milestone && parentData.hasChildRecords && parentData.ganttProperties.isAutoSchedule && this.parent.editModule.taskbarEditModule.taskbarEditedArgs.action !== 'TaskbarEditing') {\n              this.parent.setRecordValue('endDate', maxEndDate, parentData.ganttProperties, true);\n            }\n          }\n          this.parent.setRecordValue('isMilestone', milestone, parentProp, true);\n          if (!isNullOrUndefined(this.parent.taskFields.milestone)) {\n            this.updateMappingData(parentData, 'milestone');\n            this.parent.setRecordValue(this.parent.taskFields.milestone, milestone, parentData, true);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.milestone, milestone, parentData, true);\n          }\n          if (parentProp.isAutoSchedule) {\n            if (this.isFromManual(childData_1)) {\n              if (parentData.childRecords.length === 1) {\n                parentData.ganttProperties.duration = childData_1.ganttProperties.duration;\n              }\n              this.calculateEndDate(parentData);\n            } else {\n              this.calculateDuration(parentData);\n            }\n          }\n          this.updateWorkWithDuration(parentData);\n          var parentWork = parentProp.work;\n          parentWork = this.parent.isOnEdit ? parentWork : parentWork + childCompletedWorks;\n          this.parent.setRecordValue('work', parentWork, parentProp, true);\n          this.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n          if (!isNullOrUndefined(this.parent.taskFields.type)) {\n            this.updateMappingData(parentData, 'type');\n          }\n          this.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n          this.parent.setRecordValue('totalProgress', totalProgress, parentProp, true);\n          this.parent.setRecordValue('totalDuration', totalDuration, parentProp, true);\n          this.parent.setRecordValue('autoDuration', parentProp.duration, parentProp, true);\n          if (!parentProp.isAutoSchedule) {\n            this.parent.setRecordValue('autoDuration', this.calculateAutoDuration(parentProp), parentProp, true);\n            this.updateAutoWidthLeft(parentData);\n          }\n          if (!this.parent.allowParentDependency) {\n            this.resetDependency(parentData);\n          }\n          this.updateWidthLeft(parentData);\n          this.updateTaskData(parentData);\n        }\n      }\n    } else {\n      this.parent.setRecordValue('endDate', parentData.taskData[this.parent.taskFields.endDate], parentData.ganttProperties, true);\n    }\n    if (deleteUpdate && parentData.childRecords.length === 1 && parentData.ganttProperties.duration === 0) {\n      this.parent.setRecordValue('isMilestone', true, parentData.ganttProperties, true);\n      this.updateWidthLeft(parentData);\n      this.updateTaskData(parentData);\n    }\n    var parentItem = !isNullOrUndefined(parentData) ? this.parent.getParentTask(parentData.parentItem) : null;\n    if (parentItem) {\n      if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) || this.parent.viewType === 'ResourceView') {\n        this.updateParentItems(parentItem);\n      }\n    }\n    deleteUpdate = false;\n  };\n  return TaskProcessor;\n}(DateProcessor);\nexport { TaskProcessor };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","isNullOrUndefined","getValue","extend","setValue","getUid","DataManager","Query","isCountRequired","isScheduledTask","DateProcessor","TaskProcessor","_super","parent","_this","call","customSegmentProperties","recordIndex","taskIds","hierarchyData","addEventListener","on","checkDataBinding","bind","isChange","flatData","currentViewData","updatedRecords","dataArray","ids","predecessorsCollection","treeGrid","parentData","dataSource","processTimeline","renderGantt","initDataSource","ganttdata","cloneDataSource","map","data","chartRowsModule","updateSegment","ganttProperties","segments","taskId","enableValidation","dataOperation","calculateProjectDatesForValidatedTasks","timelineModule","validateTimelineProp","queryManager","query","requiresCount","dataManager","loadChildOnDemand","taskFields","hasChildMapping","executeQuery","then","e","result","catch","trigger","error","constructDataSource","mappingData","executeLocal","group","parentID","rootData","index","i","length","groupData","key","indexOf","toString","child","items","push","apply","dataReorder","taskIdMapping","id","parentIdMapping","hierarchicalData","tempData","setProperties","segmentId","segmentCollection","segmentData","viewType","resources","unassignedTasks","constructResourceViewDataSource","record","resourceName","resourceFields","name","localeObj","getConstant","prepareDataSource","_loop_1","this_1","resourceData","resourceInfo","resourceIdMapping","isResourceString","j","forEach","resource","prepareRecordCollection","initialLoadData","autoCalculateDateScheduling","isLoad","dataMap","reduce","val","set","uniqueID","Map","calculateSharedTaskUniqueIds","dependency","predecessorModule","ensurePredecessorCollection","_loop_2","value","this_2","getTaskIds","slice","sharedRecords_1","ids_1","filter","level","rowUniqueID","sharedTaskUniqueIds","parentItem","_loop_3","this_3","x","getTaskByUniqueID","ganttData","createRecord","updateTaskLeftWidth","setTaskIds","childData","ganttProp","setRecordValue","isAutoSchedule","parentProgress","parentProp","calculateDuration","updateWorkWithDuration","parentWork","work","type","updateMappingData","Math","floor","calculateAutoDuration","updateAutoWidthLeft","allowParentDependency","resetDependency","updateWidthLeft","updateTaskData","addCustomFieldValue","ganttRecord","columns","ganttColumns","fieldName","field","undefined","taskSettings","progress","notes","parseFloat","predecessors","baselineStartDate","getDateFromFormat","baselineEndDate","autoSchedule","taskMode","manual","predecessor","undoRedoModule","shouldLoadChild","addTaskData","setResourceInfo","indicators","updateResourceName","calculateScheduledValues","checkBaselineStartDate","dayEndTime","weekWorkingTime","defaultEndTime","getHours","setTime","getTime","startDate","endDate","toLocaleDateString","isMilestone","checkBaselineEndDate","predecessorsName","cssClass","getCloneParent","parentUniqId","element","taskData","hasChildRecords","duration","collapseAllParentTasks","updateExpandStateMappingValue","calculateWidth","calculateLeft","getProgressWidth","width","calculateBaselineLeft","calculateBaselineWidth","childRecords","uniqueId","replace","allowUnscheduledTasks","setSegmentsInfo","sortSegmentsData","onLoad","sort","a","ganttSegments","sumOfDuration","remainingDuration","predefinedProperties","segment","cleanedObject","extraProperties","checkStartDate","getEndDate","durationUnit","getDuration","String","checkEndDate","Number","left","segmentIndex","unit","timelineSettings","bottomTier","offsetDuration","prevSegmentDate","Date","setHours","isOnHolidayOrWeekEnd","setDate","getDate","includeWeekend","getNextWorkingDay","getSecondsInDecimal","setSegmentTaskData","task","mergedObject","assign","segmenttaskData","editModule","dialogModule","resourceOneDayWork","resourcesLength","resourceUnit","totSeconds","secondsPerDay","actualOneDayWork","durationInDay","getDurationInDay","taskType","workUnit","toFixed","isOnEdit","childCompletedWorks","cloneParent","expanded","reUpdateResources","json","offline","tempData_1","segmentDataCollection","expandStateMapping","expandState","mappingValue","updatableValue","setValidatedDates","updateDurationValue","isMileStone","milestone","durationMapping","validateDurationUnitMapping","validateWorkUnitMapping","taskTypeMapping","tType","validateTaskTypeMapping","getProjectStartDate","calculateEndDate","calculateDateFromStartDate","calculateDateFromEndDate","isNaN","updateDurationWithWork","updateUnitWithWork","totalResourceOneDayWork","updatedDuration","totalHours","getWorkInHour","cellEditModule","isCellEdit","ganttResources","taskbarEditModule","taskBarEditAction","totalUnitInPercentage","individualUnit","validateAsMilestone","parseInt","getStartDate","isTreeGridRendered","compareDates","parentWidth","percent","isAuto","sDate","autoStartDate","eDate","autoEndDate","unscheduledTaskWidth","getValidStartDate","getValidEndDate","getTaskWidth","getTaskbarHeight","rowHeight","taskBarHeight","taskbarHeight","autoDuration","parentRec","getParentTask","getTaskLeft","calculateAutoLeft","calculateAutoWidth","tierMode","topTier","zoomOrTimeline","currentZoomingLevel","countValue","count","isValid","modifiedsDate","hour","date","day","getDay","currentDay","isValid_1","to","from","k","dayWorkingTime","dateDiff","dayStartTime","test","defaultStartTime","perDayWidth","holidaysCount","holidays","getHolidaysCount","weekendCount","getWeekendCount","getTimeDifference","isInDst","timeDifference","totalWidth","sOffset","getTimezoneOffset","eOffset","customTimelineSettings","getDSTTransitions","year","timeZone","findNthWeekday","month","dayOfWeek","n","firstDayOfMonth","UTC","firstDayOfWeek","getUTCDay","offset","convertToTimezone","formatter","Intl","DateTimeFormat","minute","second","hour12","formatted","format","_a","match","dstStartDate","dstEndDate","dstStart","dstEnd","hasDSTTransition","january","july","janOffset","julOffset","isFromTimelineVirtulization","isTimeSet","leftValueForStartDate","ganttChartModule","scrollObject","enableTimelineVirtualization","scrollLeft","getTimelineLeft","timelineStartDate","leftValue","hasDST","getFullYear","transitions","systemTimeZone","newTimelineStartDate","newDate","setStartDate","timelineStartTime","dstStartTime","isBeforeOrAtDSTStart","leftDifference","timelineUnitSize","getSplitTaskWidth","tierViewMode","getSplitTaskLeft","segmentTaskStartDate","stDate","segmentStartTime","columnMapping","resourceSettings","resourcesId","resourcesName","resName","join","updateTaskDataResource","setRecordDate","setRecordDuration","segmentTaskData","isEdit","contextMenuModule","preTaskResources","isAdded","data_1","_loop_4","mapping","tempDate","isDynamicData","durationValue","getDurationString","setDataSource","createData","isArray","dataMapping","taskName","parentId","resourceIdCollection","isAddNewResource","resourceIDMapping","resourceUnitMapping","resourceGroup","resource_1","resourceIds_1","split","includes","ganttDataResource","_loop_5","updateResourceUnit","length_1","taskMapping","resourceLength","taskResources","stringResourceName","flatCollection","rootCollection","shift","splice","toLocaleLowerCase","tempDuration","getDurationValue","reUpdateGanttData","getSecondsPerDay","updateGanttData","_isInStartDateRange","isInRange","_isInEndDateRange","updateOverlappingValues","resourceTask","tasks","currentTask","ranges","workTimelineRanges","setSortedChildTasks","updateOverlappingIndex","cStartDate","cEndDate","range","rangeObj","tStartDate","tEndDate","rangeObj_1","mergeRangeCollections","calculateRangeLeftWidth","eOverlapIndex","isSplit","finalRange","currentTopRange","cCompareRange","sortedRanges","sortBy","splitRangeCollection","sortedRecords","rangeCollection","fromField","toField","splitArray","isSingleTier","getRangeWithWeek","workingTimeRanges","getRangeWithDay","splitRangeForDayMode","fromString","tempStart","end","rangeObject","nStart","nEndDate","nextAvailDuration","sHour","startRangeIndex","round","setSeconds","getSeconds","splitRangeForWeekMode","start","isInSplit","tempEndDate","isStartNotHolidayOrWeekend","isTempEndDateNotHolidayOrWeekend","isDifferentDates","resolvedOptions","updateParentItems","reUpdateGanttDataPosition","pdfExportModule","isPdfExport","helper","exportProps","fitToWidthSettings","isFitToWidth","beforeSinglePageExport","totalSegmentsProgressWidth","progressResizer","incrementSegments","showProgress","progressWidth","pStartDate","setProgress","autoWidth","getParentProgress","childGanttRecord","progressValues","totalProgress","totalDuration","recordProp","isUnscheduledTask","parantData","properties","filledProperty","_i","properties_1","prop","isFromManual","isParent","deleteUpdate","isParentUnschecule","propertyWithValue","previousStartDate","previousEndDate","childRecords_1","childLength","minStartDate","maxEndDate","milestoneCount","childData_1","countOfScheduled_1","countOfUnScheduled_1","some","childRecord","isUnscheduled","isChildBoth","_loop_6","this_4","item","isOnDelete","isDelete","propertyWithValue_1","ganttRec","rec","condition","numericValue","taskCount","taskbarEditedArgs","action"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/base/task-processor.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined, getValue, extend, setValue } from '@syncfusion/ej2-base';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isCountRequired, isScheduledTask } from './utils';\nimport { DateProcessor } from './date-processor';\n/**\n * To calculate and update task related values\n */\nvar TaskProcessor = /** @class */ (function (_super) {\n    __extends(TaskProcessor, _super);\n    function TaskProcessor(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.customSegmentProperties = [];\n        _this.recordIndex = 0;\n        _this.taskIds = [];\n        _this.hierarchyData = [];\n        _this.addEventListener();\n        return _this;\n    }\n    TaskProcessor.prototype.addEventListener = function () {\n        this.parent.on('beforeDataManipulate', this.checkDataBinding.bind(this));\n    };\n    /**\n     * @param {boolean} isChange .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.checkDataBinding = function (isChange) {\n        var _this = this;\n        if (isChange) {\n            this.parent.flatData = [];\n            this.parent.currentViewData = [];\n            this.parent.updatedRecords = [];\n            this.dataArray = [];\n            this.taskIds = [];\n            this.parent.ids = [];\n            this.recordIndex = 0;\n            this.hierarchyData = [];\n            this.parent.predecessorsCollection = [];\n            this.parent.treeGrid.parentData = [];\n            this.parent.taskIds = [];\n        }\n        if (isNullOrUndefined(this.parent.dataSource)) {\n            this.parent.dataSource = [];\n            this.parent.processTimeline();\n            this.parent.renderGantt(isChange);\n        }\n        else if (this.parent.dataSource instanceof DataManager) {\n            this.initDataSource(isChange);\n        }\n        else {\n            if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n                var ganttdata = getValue('result', this.parent.dataSource);\n                this.dataArray = ganttdata;\n            }\n            else {\n                this.dataArray = this.parent.dataSource;\n            }\n            this.processTimeline();\n            this.cloneDataSource();\n            this.parent.renderGantt(isChange);\n            this.parent.flatData.map(function (data) {\n                _this.parent.chartRowsModule.updateSegment(data.ganttProperties.segments, data.ganttProperties.taskId);\n            });\n        }\n        this.parent.flatData.map(function (data) {\n            _this.parent.chartRowsModule.updateSegment(data.ganttProperties.segments, data.ganttProperties.taskId);\n        });\n    };\n    TaskProcessor.prototype.processTimeline = function () {\n        this.parent.processTimeline();\n        if (!this.parent.enableValidation) {\n            this.parent.dataOperation.calculateProjectDatesForValidatedTasks();\n            this.parent.timelineModule.validateTimelineProp();\n        }\n    };\n    TaskProcessor.prototype.initDataSource = function (isChange) {\n        var _this = this;\n        var queryManager = this.parent.query instanceof Query ? this.parent.query : new Query();\n        queryManager.requiresCount();\n        var dataManager = this.parent.dataSource;\n        if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n            this.processTimeline();\n            this.parent.renderGantt(isChange);\n        }\n        else {\n            dataManager.executeQuery(queryManager).then(function (e) {\n                _this.dataArray = e.result;\n                _this.processTimeline();\n                if (!_this.parent.loadChildOnDemand || (_this.parent.loadChildOnDemand && !(_this.parent.taskFields.hasChildMapping))) {\n                    _this.cloneDataSource();\n                }\n                _this.parent.renderGantt(isChange);\n            }).catch(function (e) {\n                // Trigger action failure event\n                _this.parent.processTimeline();\n                _this.parent.renderGantt(isChange);\n                _this.parent.trigger('actionFailure', { error: e });\n            });\n        }\n    };\n    TaskProcessor.prototype.constructDataSource = function (dataSource) {\n        var mappingData = new DataManager(dataSource).executeLocal(new Query()\n            .group(this.parent.taskFields.parentID));\n        var rootData = [];\n        var index;\n        for (var i = 0; i < mappingData.length; i++) {\n            var groupData = mappingData[i];\n            if (!isNullOrUndefined(groupData.key)) {\n                index = this.taskIds.indexOf(groupData.key.toString());\n                if (index > -1) {\n                    if (!isNullOrUndefined(groupData.key)) {\n                        dataSource[index][this.parent.taskFields.child] = groupData.items;\n                        continue;\n                    }\n                }\n            }\n            if (index !== -1) {\n                rootData.push.apply(rootData, groupData.items); // eslint-disable-line\n            }\n        }\n        this.hierarchyData = this.dataReorder(dataSource, rootData);\n    };\n    TaskProcessor.prototype.cloneDataSource = function () {\n        var taskIdMapping = this.parent.taskFields.id;\n        var parentIdMapping = this.parent.taskFields.parentID;\n        var hierarchicalData = [];\n        if (!isNullOrUndefined(taskIdMapping) && !isNullOrUndefined(parentIdMapping)) {\n            var data = [];\n            for (var i = 0; i < this.dataArray.length; i++) {\n                var tempData = this.dataArray[i];\n                if (tempData['parentItem']) {\n                    delete tempData['parentItem'];\n                }\n                data.push(extend({}, {}, tempData, true));\n                if (!isNullOrUndefined(tempData[taskIdMapping])) {\n                    this.taskIds.push(tempData[taskIdMapping].toString());\n                }\n            }\n            if (!this.parent.taskFields.child) {\n                this.parent.setProperties({ taskFields: { child: 'Children' } }, true);\n            }\n            this.constructDataSource(data);\n            if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n                hierarchicalData = this.dataArray;\n            }\n            else {\n                hierarchicalData = this.hierarchyData;\n            }\n        }\n        else {\n            hierarchicalData = this.dataArray;\n        }\n        if (this.parent.taskFields.segmentId) {\n            this.segmentCollection = new DataManager(this.parent.segmentData).executeLocal(new Query()\n                .group(this.parent.taskFields.segmentId));\n            if (!this.parent.taskFields.segments) {\n                this.parent.taskFields.segments = 'Segments';\n            }\n        }\n        if (this.parent.viewType !== 'ProjectView') {\n            var resources = extend([], [], this.parent.resources, true);\n            var unassignedTasks = [];\n            this.constructResourceViewDataSource(resources, hierarchicalData, unassignedTasks);\n            if (unassignedTasks.length > 0) {\n                var record = {};\n                var resourceName = this.parent.resourceFields.name || 'resourceName';\n                record[this.parent.resourceFields.id] = 0;\n                record[resourceName] = this.parent.localeObj.getConstant('unassignedTask');\n                record[this.parent.taskFields.child] = unassignedTasks;\n                resources.push(record);\n            }\n            hierarchicalData = resources;\n        }\n        this.prepareDataSource(hierarchicalData);\n    };\n    /**\n     * @param {object[]} resources .\n     * @param {object[]} data .\n     * @param {object[]} unassignedTasks .\n     * @returns {void} .\n     *\n     */\n    TaskProcessor.prototype.constructResourceViewDataSource = function (resources, data, unassignedTasks) {\n        var _loop_1 = function (i) {\n            var tempData = data[i];\n            var child = this_1.parent.taskFields.child !== null ? this_1.parent.taskFields.child : this_1.parent.taskFields.child = 'Children';\n            var resourceData = tempData && tempData[this_1.parent.taskFields.resourceInfo];\n            var resourceIdMapping = this_1.parent.resourceFields.id;\n            if ((!tempData[child] || tempData[child].length === 0) && resourceData && resourceData.length) {\n                if (typeof (resourceData) === 'string') {\n                    this_1.isResourceString = true;\n                    var id = resourceData;\n                    for (var j = 0; j < resources.length; j++) {\n                        if (resources[j][this_1.parent.resourceFields.name].toString() === id.toString()) {\n                            if (resources[j][child]) {\n                                resources[j][child].push(tempData);\n                            }\n                            else {\n                                resources[j][child] = [tempData];\n                            }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    resourceData.forEach(function (resource) {\n                        var id = (typeof resource === 'object') ? resource[resourceIdMapping] :\n                            resource;\n                        for (var j = 0; j < resources.length; j++) {\n                            if (resources[j][resourceIdMapping].toString() === id.toString()) {\n                                if (resources[j][child]) {\n                                    resources[j][child].push(tempData);\n                                }\n                                else {\n                                    resources[j][child] = [tempData];\n                                }\n                                break;\n                            }\n                        }\n                    });\n                }\n            }\n            else if (!tempData[child] || (tempData[child] && tempData[child].length === 0)) {\n                unassignedTasks.push(tempData);\n            }\n            if (tempData[this_1.parent.taskFields.child] && tempData[this_1.parent.taskFields.child].length) {\n                this_1.constructResourceViewDataSource(resources, tempData[this_1.parent.taskFields.child], unassignedTasks);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Function to manipulate data-source\n     *\n     * @param {object[]} data .\n     * @returns {void} .\n     * @hidden\n     */\n    TaskProcessor.prototype.prepareDataSource = function (data) {\n        this.prepareRecordCollection(data, 0);\n        this.parent.initialLoadData = extend({}, {}, this.parent.flatData, true);\n        if (!this.parent.autoCalculateDateScheduling || (this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n            this.parent.taskFields.hasChildMapping)) {\n            this.parent.dataMap = this.parent.flatData.reduce(function (map, val) {\n                map.set(val.uniqueID, val);\n                return map;\n            }, new Map());\n        }\n        // Method to maintain the shared task uniqueIds\n        if (this.parent.viewType === 'ResourceView') {\n            this.calculateSharedTaskUniqueIds();\n        }\n        if (this.parent.taskFields.dependency && this.parent.predecessorModule) {\n            this.parent.predecessorModule.ensurePredecessorCollection();\n        }\n    };\n    TaskProcessor.prototype.calculateSharedTaskUniqueIds = function () {\n        var _loop_2 = function (i) {\n            var value = [];\n            value[0] = this_2.parent.getTaskIds()[i][0];\n            value[1] = this_2.parent.getTaskIds()[i].slice(1);\n            if (value[0] !== 'R') {\n                var sharedRecords_1 = [];\n                var ids_1 = [];\n                this_2.parent.flatData.filter(function (data) {\n                    if (data.ganttProperties.taskId.toString() === value[1] && data.level !== 0) {\n                        ids_1.push(data.ganttProperties.rowUniqueID);\n                        sharedRecords_1.push(data);\n                    }\n                });\n                for (var j = 0; j < sharedRecords_1.length; j++) {\n                    sharedRecords_1[j].ganttProperties.sharedTaskUniqueIds = ids_1;\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            _loop_2(i);\n        }\n    };\n    TaskProcessor.prototype.prepareRecordCollection = function (data, level, parentItem) {\n        var _this = this;\n        var length = data.length;\n        var _loop_3 = function (i) {\n            var tempData = data[i];\n            if (!isNullOrUndefined(this_3.parent.taskFields.segmentId)) {\n                var segmentData = this_3.segmentCollection.\n                    filter(function (x) { return x.key === tempData[_this.parent.taskFields.id]; });\n                if (segmentData.length > 0) {\n                    tempData[this_3.parent.taskFields.segments] = segmentData[0].items;\n                }\n            }\n            if (this_3.parent.taskFields.hasChildMapping && tempData['parentUniqueID']) {\n                parentItem = this_3.parent.getTaskByUniqueID(tempData['parentUniqueID']);\n            }\n            var ganttData = this_3.createRecord(tempData, level, parentItem, true);\n            if (!this_3.parent.enableValidation || (!this_3.parent.autoCalculateDateScheduling || (this_3.parent.isLoad &&\n                this_3.parent.treeGrid.loadChildOnDemand && this_3.parent.taskFields.hasChildMapping))) {\n                this_3.updateTaskLeftWidth(ganttData);\n            }\n            ganttData.index = this_3.recordIndex++;\n            this_3.parent.ids[ganttData.index] = ganttData.ganttProperties.rowUniqueID;\n            this_3.parent.flatData.push(ganttData);\n            this_3.parent.setTaskIds(ganttData);\n            var childData = tempData[this_3.parent.taskFields.child] || (tempData['taskData'] && tempData['taskData'][this_3.parent.taskFields.child]);\n            if (this_3.parent.viewType === 'ResourceView' && isNullOrUndefined(childData)\n                && isNullOrUndefined(ganttData.parentItem) && ganttData.level === 0) {\n                var ganttProp = ganttData.ganttProperties;\n                var parentData = ganttData;\n                this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', null, parentData.ganttProperties, true);\n                this_3.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', null, parentData.ganttProperties, true);\n                var parentProgress = 0;\n                var parentProp = parentData.ganttProperties;\n                this_3.parent.setRecordValue('isMilestone', false, parentProp, true);\n                if (parentProp.isAutoSchedule) {\n                    this_3.calculateDuration(parentData);\n                }\n                this_3.updateWorkWithDuration(parentData);\n                var parentWork = parentProp.work;\n                this_3.parent.setRecordValue('work', parentWork, parentProp, true);\n                this_3.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n                if (!isNullOrUndefined(this_3.parent.taskFields.type)) {\n                    this_3.updateMappingData(parentData, 'type');\n                }\n                this_3.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n                this_3.parent.setRecordValue('totalProgress', 0, parentProp, true);\n                this_3.parent.setRecordValue('totalDuration', 0, parentProp, true);\n                if (!parentProp.isAutoSchedule) {\n                    this_3.parent.setRecordValue('autoDuration', this_3.calculateAutoDuration(parentProp), parentProp, true);\n                    this_3.updateAutoWidthLeft(parentData);\n                }\n                if (!this_3.parent.allowParentDependency) {\n                    this_3.resetDependency(parentData);\n                }\n                this_3.updateWidthLeft(parentData);\n                this_3.updateTaskData(parentData);\n            }\n            if (this_3.parent.taskFields.hasChildMapping) {\n                parentItem = null;\n            }\n            if (!isNullOrUndefined(childData) && childData.length > 0) {\n                this_3.prepareRecordCollection(childData, ganttData.level + 1, ganttData);\n            }\n        };\n        var this_3 = this;\n        for (var i = 0; i < length; i++) {\n            _loop_3(i);\n        }\n    };\n    /**\n     * Method to update custom field values in gantt record\n     *\n     * @param {object} data .\n     * @param {IGanttData} ganttRecord .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.addCustomFieldValue = function (data, ganttRecord) {\n        var columns = this.parent.ganttColumns;\n        var length = columns.length;\n        if (length) {\n            for (var i = 0; i < length; i++) {\n                var fieldName = ganttRecord[columns[i].field];\n                if (fieldName === undefined) {\n                    this.parent.setRecordValue(columns[i].field, data[columns[i].field], ganttRecord);\n                }\n            }\n        }\n    };\n    /**\n     * To populate Gantt record\n     *\n     * @param {object} data .\n     * @param {number} level .\n     * @param {IGanttData} parentItem .\n     * @param {boolean} isLoad .\n     * @returns {IGanttData} .\n     * @private\n     */\n    TaskProcessor.prototype.createRecord = function (data, level, parentItem, isLoad) {\n        var taskSettings = this.parent.taskFields;\n        var resourceFields = this.parent.resourceFields;\n        var progress = data[taskSettings.progress];\n        var id = null;\n        var name = null;\n        var notes = data[taskSettings.notes];\n        progress = progress ? parseFloat(progress.toString()) ? parseFloat(progress.toString()) : 0 : 0;\n        progress = (100 < progress) ? 100 : progress;\n        var predecessors = data[taskSettings.dependency];\n        var baselineStartDate = this.getDateFromFormat(data[taskSettings.baselineStartDate], true);\n        var baselineEndDate = this.getDateFromFormat(data[taskSettings.baselineEndDate], true);\n        var ganttData = {};\n        var ganttProperties = {};\n        var autoSchedule = (this.parent.taskMode === 'Auto') ? true :\n            (this.parent.taskMode === 'Manual') ? false :\n                data[taskSettings.manual] === true ? false : true;\n        this.parent.setRecordValue('ganttProperties', ganttProperties, ganttData);\n        if (data['ganttProperties'] && data['ganttProperties'].predecessor && data['ganttProperties'].predecessor.length > 0 && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            this.parent.setRecordValue('predecessor', data['ganttProperties'].predecessor, ganttProperties, true);\n        }\n        if (!isNullOrUndefined(data[taskSettings.id])) {\n            id = data[taskSettings.id];\n            name = data[taskSettings.name];\n            var shouldLoadChild = (this.parent.loadChildOnDemand &&\n                taskSettings.hasChildMapping && data['taskData']) ? true : false;\n            if (shouldLoadChild) {\n                ganttData['taskData'] = data['taskData'];\n            }\n            else {\n                if (data['taskData'] && data['ganttProperties']) {\n                    this.addTaskData(ganttData, data['taskData'], isLoad);\n                }\n                else {\n                    this.addTaskData(ganttData, data, isLoad);\n                }\n            }\n        }\n        else if (!isNullOrUndefined(data[resourceFields.id])) {\n            id = data[resourceFields.id];\n            if (isNullOrUndefined(data[resourceFields.name]) && data['resourceName'] === 'Unassigned Task') {\n                name = data['resourceName'];\n            }\n            else {\n                name = data[resourceFields.name];\n            }\n            this.addTaskData(ganttData, data, false);\n        }\n        this.parent.setRecordValue('taskId', id, ganttProperties, true);\n        this.parent.setRecordValue('taskName', name, ganttProperties, true);\n        // eslint-disable-next-line\n        this.parent && taskSettings.parentID && this.parent.setRecordValue('parentId', data[taskSettings.parentID], ganttProperties, true);\n        this.addCustomFieldValue(data, ganttData);\n        this.parent.setRecordValue('isAutoSchedule', autoSchedule, ganttProperties, true);\n        if (!this.parent.undoRedoModule || (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'])) {\n            this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n        }\n        else if (data['ganttProperties']) {\n            this.parent.setRecordValue('resourceInfo', data['ganttProperties'].resourceInfo, ganttProperties, true);\n        }\n        this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n        this.parent.setRecordValue('indicators', data[taskSettings.indicators], ganttProperties, true);\n        this.updateResourceName(ganttData);\n        this.calculateScheduledValues(ganttData, data, isLoad);\n        this.parent.setRecordValue('baselineStartDate', this.checkBaselineStartDate(baselineStartDate, ganttProperties), ganttProperties, true);\n        // set default end time, if hour is 0\n        var dayEndTime;\n        if (this.parent.weekWorkingTime.length > 0 && baselineEndDate) {\n            dayEndTime = this.parent['getEndTime'](baselineEndDate);\n        }\n        else {\n            dayEndTime = this.parent.defaultEndTime;\n        }\n        if (baselineEndDate && baselineEndDate.getHours() === 0 && dayEndTime !== 86400) {\n            this.setTime(dayEndTime, baselineEndDate);\n        }\n        if ((ganttProperties.baselineStartDate && baselineEndDate &&\n            (ganttProperties.baselineStartDate.getTime() > baselineEndDate.getTime())) ||\n            ((!isNullOrUndefined(ganttProperties.baselineStartDate) && !isNullOrUndefined(ganttProperties.startDate)\n                && (ganttProperties.baselineStartDate.getTime() === ganttProperties.startDate.getTime()))\n                && (!isNullOrUndefined(baselineEndDate) && !isNullOrUndefined(ganttProperties.endDate)\n                    && (baselineEndDate.toLocaleDateString() === ganttProperties.endDate.toLocaleDateString())) &&\n                ganttProperties.isMilestone)) {\n            baselineEndDate = ganttProperties.baselineStartDate;\n        }\n        this.parent.setRecordValue('baselineEndDate', this.checkBaselineEndDate(baselineEndDate, ganttProperties), ganttProperties, true);\n        this.parent.setRecordValue('progress', progress, ganttProperties, true);\n        this.parent.setRecordValue('totalProgress', progress, ganttProperties, true);\n        if (data['ganttProperties'] && data['ganttProperties'].predecessorsName && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            this.parent.setRecordValue('predecessorsName', data['ganttProperties'].predecessorsName, ganttProperties, true);\n        }\n        else {\n            this.parent.setRecordValue('predecessorsName', predecessors, ganttProperties, true);\n        }\n        this.parent.setRecordValue('notes', notes, ganttProperties, true);\n        this.parent.setRecordValue('cssClass', data[taskSettings.cssClass], ganttProperties, true);\n        this.parent.setRecordValue('parentItem', this.getCloneParent(parentItem), ganttData);\n        if (this.parent.loadChildOnDemand && taskSettings.hasChildMapping && this.parent.currentViewData.length > 0) {\n            this.parent.setRecordValue('parentItem', ganttData.parentItem, this.parent.currentViewData[this.taskIds.indexOf(data[taskSettings.id].toString())]);\n        }\n        var parentUniqId = ganttData.parentItem ? ganttData.parentItem.uniqueID : null;\n        this.parent.setRecordValue('parentUniqueID', parentUniqId, ganttData);\n        if (this.parent.viewType === 'ResourceView' && !isNullOrUndefined(taskSettings.parentID)\n            && !isNullOrUndefined(ganttData.parentItem)) {\n            this.parent.setRecordValue('parentId', ganttData.parentItem.taskId, ganttProperties, true);\n        }\n        this.parent.setRecordValue('level', data['level'] ? data['level'] : level, ganttData);\n        if (data['ganttProperties'] && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            this.parent.setRecordValue('uniqueID', data['uniqueID'], ganttData);\n        }\n        else {\n            if (this.parent.loadChildOnDemand && taskSettings.hasChildMapping && data['uniqueID']) {\n                this.parent.setRecordValue('uniqueID', data['uniqueID'], ganttData);\n            }\n            else {\n                this.parent.setRecordValue('uniqueID', getUid(this.parent.element.id + '_data_'), ganttData);\n            }\n        }\n        this.parent.setRecordValue('uniqueID', ganttData.uniqueID, ganttProperties, true);\n        this.parent.setRecordValue('childRecords', [], ganttData);\n        if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) &&\n            !isNullOrUndefined(taskSettings.child)) {\n            this.parent.setRecordValue(taskSettings.child, [], ganttData);\n        }\n        if ((!isNullOrUndefined(data[taskSettings.child]) && data[taskSettings.child].length > 0) ||\n            (data['taskData'] && data['taskData'][taskSettings.child] && data['taskData'][taskSettings.child].length > 0)) {\n            this.parent.setRecordValue('hasChildRecords', true, ganttData);\n            this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n            if (!this.parent.allowParentDependency) {\n                this.resetDependency(ganttData);\n            }\n        }\n        else {\n            if (this.parent.loadChildOnDemand && taskSettings.hasChildMapping && ganttData.taskData[taskSettings.hasChildMapping]) {\n                this.parent.setRecordValue('hasChildRecords', true, ganttData);\n            }\n            else {\n                this.parent.setRecordValue('hasChildRecords', false, ganttData);\n            }\n        }\n        if (ganttData.hasChildRecords) {\n            this.parent.setRecordValue('autoStartDate', ganttData.ganttProperties.startDate, ganttProperties);\n            this.parent.setRecordValue('autoEndDate', ganttData.ganttProperties.endDate, ganttProperties);\n            this.parent.setRecordValue('autoDuration', ganttData.ganttProperties.duration, ganttProperties);\n        }\n        this.parent.setRecordValue('expanded', (ganttData.hasChildRecords && this.parent.collapseAllParentTasks) ? false : true, ganttData);\n        this.updateExpandStateMappingValue(ganttData, data);\n        if (!isLoad) {\n            this.parent.setRecordValue('width', this.calculateWidth(ganttData), ganttProperties, true);\n            this.parent.setRecordValue('left', this.calculateLeft(ganttProperties), ganttProperties, true);\n            this.parent.setRecordValue('progressWidth', this.getProgressWidth(ganttProperties.width, progress), ganttProperties, true);\n            if (ganttProperties.baselineEndDate && ganttProperties.baselineStartDate) {\n                this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(ganttProperties), ganttProperties, true);\n                this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(ganttProperties), ganttProperties, true);\n            }\n        }\n        if (isNullOrUndefined(taskSettings.work)) {\n            this.updateWorkWithDuration(ganttData);\n        }\n        if (!isNullOrUndefined(taskSettings.manual)) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'manual');\n        }\n        this.updateTaskData(ganttData);\n        if (predecessors) {\n            this.parent.predecessorsCollection.push(ganttData);\n        }\n        if (!isNullOrUndefined(parentItem)) {\n            parentItem.childRecords.push(ganttData);\n            if (this.parent.dataSource instanceof Object && isCountRequired(this.parent) &&\n                !isNullOrUndefined(this.parent.taskFields.child)) {\n                parentItem[this.parent.taskFields.child].push(ganttData.taskData);\n            }\n        }\n        if (this.parent.viewType === 'ProjectView') {\n            this.parent.setRecordValue('rowUniqueID', ganttProperties.taskId.toString(), ganttProperties, true);\n        }\n        else {\n            var uniqueId = ganttData.uniqueID.replace(this.parent.element.id + '_data_', '');\n            // if (this.parent.viewType === 'ResourceView' && typeof(ganttData.ganttProperties.taskId) === 'string') {\n            //     uniqueId = ganttProperties.taskId.toString();\n            // }\n            this.parent.setRecordValue('rowUniqueID', uniqueId, ganttData);\n            this.parent.setRecordValue('rowUniqueID', uniqueId, ganttProperties, true);\n            this.parent.setRecordValue('sharedTaskUniqueIds', [], ganttProperties, true);\n        }\n        if (this.parent.allowUnscheduledTasks && ganttData.ganttProperties.startDate\n            && (ganttData.ganttProperties.endDate || ganttData.ganttProperties.duration)) {\n            this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n            this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n            if (!isLoad) {\n                this.updateWidthLeft(ganttData);\n            }\n        }\n        this.parent.chartRowsModule.updateSegment(ganttData.ganttProperties.segments, ganttData.ganttProperties.taskId);\n        return ganttData;\n    };\n    TaskProcessor.prototype.sortSegmentsData = function (segments, onLoad, ganttProp) {\n        var _this = this;\n        if (onLoad) {\n            segments.sort(function (a, b) {\n                var startDate = _this.parent.taskFields.startDate;\n                return _this.getDateFromFormat(a[startDate]).getTime() - _this.getDateFromFormat(b[startDate]).getTime();\n            });\n        }\n        else {\n            segments.sort(function (a, b) {\n                return a.startDate.getTime() - b.startDate.getTime();\n            });\n        }\n        return segments;\n    };\n    TaskProcessor.prototype.setSegmentsInfo = function (data, onLoad) {\n        var _this = this;\n        var taskSettings = this.parent.taskFields;\n        var ganttSegments = [];\n        var segments;\n        var sumOfDuration = 0;\n        var remainingDuration = 0;\n        var predefinedProperties = [this.parent.taskFields.duration, this.parent.taskFields.endDate,\n            this.parent.taskFields.startDate, this.parent.taskFields.id];\n        var taskData = [];\n        if (!isNullOrUndefined(this.parent.taskFields.segments)) {\n            segments = onLoad ? data.taskData[this.parent.taskFields.segments] : data.ganttProperties.segments;\n            if (!onLoad) {\n                if (data.taskData[this.parent.taskFields.segments] && data.taskData[this.parent.taskFields.segments].length > 0) {\n                    data.taskData[this.parent.taskFields.segments].forEach(function (segment) {\n                        var cleanedObject = {};\n                        var extraProperties = {};\n                        for (var key in segment) {\n                            if (predefinedProperties.indexOf(key) !== -1) {\n                                cleanedObject[key] = segment[key];\n                            }\n                            else {\n                                extraProperties[key] = segment[key];\n                            }\n                        }\n                        _this.customSegmentProperties.push(extraProperties);\n                    });\n                }\n            }\n            if (!isNullOrUndefined(segments) && segments.length > 1) {\n                this.sortSegmentsData(segments, onLoad, data.ganttProperties);\n                for (var i = 0; i < segments.length; i++) {\n                    var segment = segments[i];\n                    var startDate = onLoad ? segment[taskSettings.startDate] : segment.startDate;\n                    var endDate = onLoad ? segment[taskSettings.endDate] : segment.endDate;\n                    var duration = onLoad ? segment[taskSettings.duration] : segment.duration;\n                    startDate = this.getDateFromFormat(startDate);\n                    startDate = this.checkStartDate(startDate, data.ganttProperties, false);\n                    if (!isNullOrUndefined(duration)) {\n                        endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                        if (taskSettings.duration) {\n                            remainingDuration = data.ganttProperties.duration - sumOfDuration;\n                            if (remainingDuration <= 0) {\n                                continue;\n                            }\n                            duration = i === segments.length - 1 ? remainingDuration : remainingDuration > 0 &&\n                                duration > remainingDuration ? remainingDuration : duration;\n                            endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                        }\n                        else if (!taskSettings.duration && taskSettings.endDate && endDate) {\n                            endDate = (!isNullOrUndefined(data.ganttProperties.endDate)) && endDate.getTime() >=\n                                data.ganttProperties.endDate.getTime() && i === segments.length - 1 ? data.ganttProperties.endDate : endDate;\n                            duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                            if (ganttSegments.length > 0 && endDate.getTime() < startDate.getTime()\n                                && endDate.getTime() <= data.ganttProperties.endDate.getTime()) {\n                                ganttSegments[i - 1].duration = this.getDuration(ganttSegments[i - 1].startDate, data.ganttProperties.endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                                continue;\n                            }\n                        }\n                    }\n                    else {\n                        endDate = this.getDateFromFormat(endDate);\n                        if (endDate && (isNullOrUndefined(duration) || String(duration) === '')) {\n                            var dayEndTime = void 0;\n                            if (this.parent.weekWorkingTime.length > 0) {\n                                dayEndTime = this.parent['getEndTime'](endDate);\n                            }\n                            else {\n                                dayEndTime = this.parent.defaultEndTime;\n                            }\n                            if (endDate.getHours() === 0 && dayEndTime !== 86400) {\n                                this.setTime(dayEndTime, endDate);\n                            }\n                        }\n                        endDate = this.checkEndDate(endDate, data.ganttProperties, false);\n                        duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                        if (taskSettings.duration) {\n                            remainingDuration = data.ganttProperties.duration - sumOfDuration - 1;\n                            if (remainingDuration <= 0) {\n                                continue;\n                            }\n                            duration = i === segments.length - 1 ? remainingDuration : remainingDuration > 0 &&\n                                duration > remainingDuration ? remainingDuration : duration;\n                            endDate = this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                        }\n                        else if (!taskSettings.duration && taskSettings.endDate && endDate) {\n                            endDate = (!isNullOrUndefined(data.ganttProperties.endDate)) && endDate.getTime() >=\n                                data.ganttProperties.endDate.getTime() && i === segments.length - 1 ? data.ganttProperties.endDate : endDate;\n                            duration = this.getDuration(startDate, endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                            if (ganttSegments.length > 0 && endDate.getTime() < startDate.getTime()\n                                && endDate.getTime() <= data.ganttProperties.endDate.getTime()) {\n                                ganttSegments[i - 1].duration = this.getDuration(ganttSegments[i - 1].startDate, data.ganttProperties.endDate, data.ganttProperties.durationUnit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                                continue;\n                            }\n                        }\n                    }\n                    segment = {};\n                    if (!(startDate && endDate) || !(startDate && duration)) {\n                        break;\n                    }\n                    sumOfDuration += Number(duration);\n                    segment.startDate = startDate;\n                    segment.endDate = endDate;\n                    segment.duration = Number(duration);\n                    segment.width = 0;\n                    segment.left = 0;\n                    segment.segmentIndex = i;\n                    ganttSegments.push(segment);\n                    if (!isNullOrUndefined(ganttSegments[i - 1])) {\n                        var unit = void 0;\n                        if (!isNullOrUndefined(this.parent.timelineSettings.bottomTier)) {\n                            if (this.parent.timelineSettings.bottomTier.unit === 'Minutes') {\n                                unit = 'minute';\n                            }\n                            else if (this.parent.timelineSettings.bottomTier.unit === 'Hour') {\n                                unit = 'hour';\n                            }\n                            else {\n                                unit = data.ganttProperties.durationUnit;\n                            }\n                        }\n                        else {\n                            unit = data.ganttProperties.durationUnit;\n                        }\n                        var offsetDuration = this.getDuration(ganttSegments[i - 1].endDate, ganttSegments[i].startDate, unit, data.ganttProperties.isAutoSchedule, data.ganttProperties.isMilestone);\n                        segment.offsetDuration = offsetDuration;\n                        if (offsetDuration < 1) {\n                            if (this.parent.weekWorkingTime.length === 0) {\n                                segment.startDate = this.getEndDate(ganttSegments[i - 1].endDate, 1, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                            }\n                            else {\n                                var prevSegmentDate = new Date(ganttSegments[i - 1].endDate.getTime());\n                                segment.startDate = new Date(prevSegmentDate.setHours(prevSegmentDate.getHours() + 24));\n                                if (this.isOnHolidayOrWeekEnd(segment.startDate, true)) {\n                                    do {\n                                        segment.startDate.setDate(segment.startDate.getDate() + 1);\n                                    } while (this.isOnHolidayOrWeekEnd(segment.startDate, true));\n                                }\n                                if (!this.parent.includeWeekend) {\n                                    segment.startDate = this.getNextWorkingDay(segment.startDate);\n                                }\n                                var dayEndTime = this.parent['getEndTime'](ganttSegments[i - 1].endDate);\n                                if (this.getSecondsInDecimal(ganttSegments[i - 1].endDate) === dayEndTime) {\n                                    this.setTime(this.parent['getEndTime'](segment.startDate), segment.startDate);\n                                }\n                            }\n                            segment.startDate = this.checkStartDate(segment.startDate, data.ganttProperties, false);\n                            segment.endDate = this.getEndDate(segment.startDate, segment.duration, data.ganttProperties.durationUnit, data.ganttProperties, false);\n                            segment.endDate = !taskSettings.duration && taskSettings.endDate\n                                && segment.endDate > data.ganttProperties.endDate ? data.ganttProperties.endDate : segment.endDate;\n                            segment.offsetDuration = 1;\n                        }\n                    }\n                    else {\n                        segment.offsetDuration = 0;\n                    }\n                    taskData.push(this.setSegmentTaskData(segment, segments[i]));\n                }\n                this.parent.setRecordValue('duration', sumOfDuration, data.ganttProperties, true);\n                if (!isNullOrUndefined(ganttSegments[ganttSegments.length - 1])) {\n                    this.parent.setRecordValue('endDate', ganttSegments[ganttSegments.length - 1].endDate, data.ganttProperties, true);\n                }\n                if (!isNullOrUndefined(taskSettings.endDate) && !isNullOrUndefined(ganttSegments[ganttSegments.length - 1])) {\n                    this.parent.setRecordValue(this.parent.taskFields.endDate, ganttSegments[ganttSegments.length - 1].endDate, data, true);\n                }\n                if (!onLoad && taskData && taskData.length > 0) {\n                    taskData.forEach(function (task, index) {\n                        var mergedObject = Object.assign({}, task, _this.customSegmentProperties[index]);\n                        taskData[index] = mergedObject;\n                    });\n                }\n                this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, taskData, data);\n            }\n        }\n        if (ganttSegments.length > 1) {\n            this.parent.setRecordValue('segments', ganttSegments, data.ganttProperties, true);\n            this.parent.setRecordValue(this.parent.taskFields.segments, data.taskData[this.parent.taskFields.segments], data, true);\n        }\n        else {\n            ganttSegments = null;\n        }\n        return ganttSegments;\n    };\n    TaskProcessor.prototype.setSegmentTaskData = function (segments, segmenttaskData) {\n        var taskSettings = this.parent.taskFields;\n        var taskData = extend({}, {}, segmenttaskData, true);\n        if (!isNullOrUndefined(taskSettings.startDate)) {\n            taskData[this.parent.taskFields.startDate] = segments.startDate;\n        }\n        if (!isNullOrUndefined(taskSettings.endDate)) {\n            taskData[this.parent.taskFields.endDate] = segments.endDate;\n        }\n        if (!isNullOrUndefined(taskSettings.duration)) {\n            taskData[this.parent.taskFields.duration] = Number(segments.duration);\n        }\n        return taskData;\n    };\n    /**\n     * Method to calculate work based on resource unit and duration.\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateWorkWithDuration = function (ganttData) {\n        if (this.parent['triggeredColumnName'] === this.parent.taskFields.work) {\n            return;\n        }\n        var resources = (this.parent.editModule && this.parent.editModule.dialogModule &&\n            this.parent.editModule.dialogModule['currentResources']) ? this.parent.editModule.dialogModule['currentResources']\n            : ganttData.ganttProperties.resourceInfo;\n        var work = 0;\n        var resourceOneDayWork;\n        if (!isNullOrUndefined(resources) && !ganttData.hasChildRecords) {\n            var resourcesLength = resources.length;\n            var index = void 0;\n            var resourceUnit = void 0;\n            var totSeconds = void 0;\n            if (this.parent.weekWorkingTime.length > 0) {\n                totSeconds = this.parent['getSecondsPerDay'](ganttData.ganttProperties.startDate ? ganttData.ganttProperties.startDate : ganttData.ganttProperties.endDate);\n            }\n            else {\n                totSeconds = this.parent.secondsPerDay;\n            }\n            var actualOneDayWork = (totSeconds) / 3600;\n            var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n            for (index = 0; index < resourcesLength; index++) {\n                resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n                resourceOneDayWork = (resourceUnit > 0 ? (actualOneDayWork * resourceUnit) / 100 : (ganttData.ganttProperties.taskType !== 'FixedUnit' ? actualOneDayWork : 0));\n                work += (resourceOneDayWork * durationInDay);\n            }\n            //Update work as per defined unit.\n            if (ganttData.ganttProperties.workUnit === 'minute') {\n                work = work * 60;\n            }\n            if (ganttData.ganttProperties.workUnit === 'day') {\n                work = work / actualOneDayWork;\n            }\n            //To check the decimal places.\n            if (work % 1 !== 0) {\n                work = parseFloat(work.toFixed(2));\n            }\n        }\n        if (ganttData.childRecords) {\n            if (ganttData.childRecords.length > 0 && this.parent.isOnEdit) {\n                var childCompletedWorks = 0;\n                for (var i = 0; i < ganttData.childRecords.length; i++) {\n                    childCompletedWorks += ganttData.childRecords[i].ganttProperties.work;\n                }\n                work += childCompletedWorks;\n            }\n        }\n        if (ganttData.ganttProperties.taskType === 'FixedUnit' && resourceOneDayWork === 0) {\n            work = 0;\n            this.parent.setRecordValue('duration', 0, ganttData.ganttProperties, true);\n            if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n                this.parent.setRecordValue(this.parent.taskFields.duration, 0, ganttData, true);\n            }\n        }\n        this.parent.setRecordValue('work', work, ganttData.ganttProperties, true);\n        if (!isNullOrUndefined(this.parent.taskFields.work)) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'work');\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} parent .\n     * @returns {IParent} .\n     * @private\n     */\n    TaskProcessor.prototype.getCloneParent = function (parent) {\n        if (!isNullOrUndefined(parent)) {\n            var cloneParent = {};\n            cloneParent.uniqueID = parent.uniqueID;\n            cloneParent.expanded = parent.expanded;\n            cloneParent.level = parent.level;\n            cloneParent.index = parent.index;\n            cloneParent.taskId = parent.ganttProperties.rowUniqueID;\n            return cloneParent;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.reUpdateResources = function () {\n        if (this.parent.flatData.length > 0) {\n            var data = void 0;\n            var ganttProperties = void 0;\n            var ganttData = void 0;\n            for (var index = 0; index < this.parent.flatData.length; index++) {\n                data = this.parent.flatData[index].taskData;\n                ganttProperties = this.parent.flatData[index].ganttProperties;\n                ganttData = this.parent.flatData[index];\n                this.parent.setRecordValue('resourceInfo', this.setResourceInfo(data), ganttProperties, true);\n                this.updateResourceName(ganttData);\n            }\n        }\n    };\n    TaskProcessor.prototype.addTaskData = function (ganttData, data, isLoad) {\n        var _this = this;\n        var taskSettings = this.parent.taskFields;\n        var dataManager = this.parent.dataSource;\n        if (isLoad) {\n            if (taskSettings.parentID || (dataManager instanceof DataManager &&\n                dataManager.dataSource.json && dataManager.dataSource.offline)) {\n                if (taskSettings.parentID) {\n                    var id = data[taskSettings.id];\n                    var index = this.taskIds.indexOf(id.toString());\n                    var tempData_1 = (index > -1) ? this.dataArray[index] : {};\n                    if (!isNullOrUndefined(this.parent.taskFields.segmentId)) {\n                        var segmentDataCollection = this.segmentCollection.\n                            filter(function (x) { return x.key === tempData_1[_this.parent.taskFields.id]; });\n                        if (segmentDataCollection.length > 0) {\n                            tempData_1[this.parent.taskFields.segments] = segmentDataCollection[0].items;\n                        }\n                    }\n                    this.parent.setRecordValue('taskData', tempData_1, ganttData);\n                }\n                else {\n                    this.parent.setRecordValue('taskData', data, ganttData);\n                }\n            }\n            else {\n                this.parent.setRecordValue('taskData', data, ganttData);\n            }\n        }\n        else {\n            this.parent.setRecordValue('taskData', data, ganttData);\n        }\n    };\n    TaskProcessor.prototype.updateExpandStateMappingValue = function (ganttData, data) {\n        var expandStateMapping = this.parent.taskFields.expandState;\n        var mappingValue = data[expandStateMapping];\n        var updatableValue;\n        if (expandStateMapping && ganttData.hasChildRecords) {\n            if (!isNullOrUndefined(mappingValue)) {\n                updatableValue = mappingValue.toString() === 'true' ? true : false;\n            }\n            else if (isNullOrUndefined(mappingValue) && !this.parent.collapseAllParentTasks) {\n                updatableValue = true;\n            }\n            else if (isNullOrUndefined(mappingValue) && this.parent.collapseAllParentTasks) {\n                updatableValue = false;\n            }\n            this.parent.setRecordValue('taskData.' + expandStateMapping, updatableValue, ganttData);\n            this.parent.setRecordValue(expandStateMapping, updatableValue, ganttData);\n            this.parent.setRecordValue('expanded', updatableValue, ganttData);\n        }\n    };\n    /**\n     * @param {IGanttData} ganttData .\n     * @param {object} data .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.setValidatedDates = function (ganttData, data) {\n        var ganttProperties = ganttData.ganttProperties;\n        var taskSettings = this.parent.taskFields;\n        var duration = data[taskSettings.duration];\n        var startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n        var endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n        duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n        this.parent.setRecordValue('startDate', new Date(startDate.getTime()), ganttProperties, true);\n        if (!isNullOrUndefined(duration) && duration !== '') {\n            this.updateDurationValue(duration, ganttProperties);\n        }\n        else {\n            this.calculateDuration(ganttData);\n        }\n        this.parent.setRecordValue('endDate', new Date((endDate.getTime())), ganttProperties, true);\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {object} data .\n     * @param {boolean} isLoad .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateScheduledValues = function (ganttData, data, isLoad) {\n        var taskSettings = this.parent.taskFields;\n        var ganttProperties = ganttData.ganttProperties;\n        var duration = data[taskSettings.duration];\n        duration = isNullOrUndefined(duration) || duration === '' ? null : duration;\n        var startDate;\n        var endDate;\n        if (ganttProperties.startDate && ganttProperties.endDate) {\n            startDate = this.getDateFromFormat(ganttProperties.startDate, true);\n            endDate = this.getDateFromFormat(ganttProperties.endDate, true);\n        }\n        else {\n            startDate = this.getDateFromFormat(data[taskSettings.startDate], true);\n            endDate = this.getDateFromFormat(data[taskSettings.endDate], true);\n        }\n        var segments = taskSettings.segments ? (data[taskSettings.segments] ||\n            ganttData.taskData[taskSettings.segments]) : null;\n        var isMileStone = taskSettings.milestone ? data[taskSettings.milestone] ? true : false : false;\n        var durationMapping = data[taskSettings.durationUnit] ? data[taskSettings.durationUnit] : '';\n        this.parent.setRecordValue('durationUnit', this.validateDurationUnitMapping(durationMapping), ganttProperties, true);\n        var work = !isNullOrUndefined(data[taskSettings.work]) ? parseFloat(data[taskSettings.work]) : 0;\n        this.parent.setRecordValue('workUnit', this.validateWorkUnitMapping(this.parent.workUnit), ganttProperties, true);\n        var taskTypeMapping = data[taskSettings.type] ? data[taskSettings.type] : '';\n        var tType = this.validateTaskTypeMapping(taskTypeMapping);\n        this.parent.setRecordValue('taskType', tType, ganttProperties, true);\n        if (isLoad && !this.parent.enableValidation && startDate && endDate) {\n            this.setValidatedDates(ganttData, data);\n        }\n        else {\n            if (!endDate && !startDate && (isNullOrUndefined(duration) || duration === '')) {\n                if (this.parent.allowUnscheduledTasks) {\n                    return;\n                }\n                else {\n                    this.parent.setRecordValue('duration', 1, ganttProperties, true);\n                    this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n                    this.calculateEndDate(ganttData);\n                }\n            }\n            else if (startDate) {\n                this.calculateDateFromStartDate(startDate, endDate, duration, ganttData, isLoad);\n            }\n            else if (endDate) {\n                this.calculateDateFromEndDate(endDate, duration, ganttData);\n            }\n            else if (!isNullOrUndefined(duration) && duration !== '') {\n                this.updateDurationValue(duration, ganttProperties);\n                if (this.parent.allowUnscheduledTasks) {\n                    this.parent.setRecordValue('startDate', null, ganttProperties, true);\n                    this.parent.setRecordValue('endDate', null, ganttProperties, true);\n                }\n                else {\n                    this.parent.setRecordValue('startDate', this.getProjectStartDate(ganttProperties, isLoad), ganttProperties, true);\n                    this.calculateEndDate(ganttData);\n                }\n            }\n        }\n        if (!this.parent.autoCalculateDateScheduling || (this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n            this.parent.taskFields.hasChildMapping)) {\n            if (!isNullOrUndefined(ganttData.ganttProperties.startDate)) {\n                ganttData[this.parent.taskFields.startDate] = ganttData.ganttProperties.startDate;\n                ganttData.taskData[this.parent.taskFields.startDate] = ganttData.ganttProperties.startDate;\n            }\n            if (!isNullOrUndefined(ganttData.ganttProperties.endDate)) {\n                ganttData[this.parent.taskFields.endDate] = ganttData.ganttProperties.endDate;\n                ganttData.taskData[this.parent.taskFields.endDate] = ganttData.ganttProperties.endDate;\n            }\n        }\n        if (!isNullOrUndefined(segments)) {\n            this.parent.setRecordValue('segments', this.setSegmentsInfo(ganttData, true), ganttProperties, true);\n        }\n        if (ganttProperties.duration === 0) {\n            this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n            if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n                this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n            }\n            this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        }\n        if (!isNullOrUndefined(isMileStone) && isMileStone) {\n            this.parent.setRecordValue('duration', 0, ganttProperties, true);\n            this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n            if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n                this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n            }\n            this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n        }\n        if (!isNullOrUndefined(taskSettings.work)) {\n            this.parent.setRecordValue('durationUnit', this.parent.durationUnit, ganttProperties, true);\n            if (isNaN(work) || isNullOrUndefined(work)) {\n                this.parent.setRecordValue('work', 0, ganttProperties, true);\n                this.parent.setRecordValue('duration', 0, ganttProperties, true);\n                this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n                if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n                    this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n                }\n                this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n            }\n            else {\n                this.parent.setRecordValue('work', work, ganttProperties, true);\n                switch (tType) {\n                    case 'FixedDuration':\n                        // To validate the work column as well,when initial dataset have 0 duration\n                        if ((!isNullOrUndefined(ganttData[this.parent.taskFields.resourceInfo]) &&\n                            ganttData.ganttProperties.resourceInfo.length !== 0) || ganttProperties.duration === 0) {\n                            this.updateWorkWithDuration(ganttData);\n                        }\n                        break;\n                    case 'FixedWork':\n                        if (!isNullOrUndefined(ganttData[this.parent.taskFields.resourceInfo]) &&\n                            ganttData.ganttProperties.resourceInfo.length !== 0) {\n                            this.updateDurationWithWork(ganttData);\n                        }\n                        this.updateUnitWithWork(ganttData);\n                        break;\n                    case 'FixedUnit':\n                        this.updateWorkWithDuration(ganttData);\n                        break;\n                }\n                if (!isNullOrUndefined(taskSettings.type)) {\n                    this.parent.dataOperation.updateMappingData(ganttData, 'type');\n                }\n                if (ganttProperties.duration === 0) {\n                    this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n                    if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n                        this.parent.setRecordValue(this.parent.taskFields.milestone, true, ganttData, true);\n                    }\n                    this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n                }\n                else if (!isNullOrUndefined(ganttProperties.startDate) && !isNullOrUndefined(ganttProperties.duration)) {\n                    this.parent.setRecordValue('isMilestone', false, ganttProperties, true);\n                    if (!isNullOrUndefined(this.parent.taskFields) && !isNullOrUndefined(this.parent.taskFields.milestone)) {\n                        this.parent.setRecordValue(this.parent.taskFields.milestone, false, ganttData, true);\n                    }\n                    this.calculateEndDate(ganttData);\n                }\n            }\n            this.parent.dataOperation.updateMappingData(ganttData, 'work');\n        }\n        else if (taskSettings.type && ganttProperties.taskType) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'type');\n        }\n    };\n    /**\n     * Method to update duration with work value.\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateDurationWithWork = function (ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        var resources = (this.parent.editModule && this.parent.editModule.dialogModule &&\n            this.parent.editModule.dialogModule['currentResources']) ? this.parent.editModule.dialogModule['currentResources']\n            : ganttProperties.resourceInfo;\n        if (!isNullOrUndefined(resources)) {\n            var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n            var totalResourceOneDayWork = 0;\n            var totSeconds = void 0;\n            if (this.parent.weekWorkingTime.length > 0) {\n                totSeconds = this.parent['getSecondsPerDay'](ganttData.ganttProperties.startDate ? ganttData.ganttProperties.startDate : ganttData.ganttProperties.endDate);\n            }\n            else {\n                totSeconds = this.parent.secondsPerDay;\n            }\n            var actualOneDayWork = (totSeconds) / 3600;\n            var updatedDuration = 0;\n            var resourceUnit = void 0;\n            var index = void 0;\n            for (index = 0; index < resourcesLength; index++) {\n                resourceUnit = resources[index][this.parent.resourceFields.unit]; //in percentage\n                totalResourceOneDayWork += (resourceUnit > 0 ? (actualOneDayWork * resourceUnit) / 100 : (ganttData.ganttProperties.taskType !== 'FixedUnit' ? actualOneDayWork : 0)); //in hours\n            }\n            var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n            if (resourcesLength > 0 && totalResourceOneDayWork > 0) {\n                updatedDuration += (totalHours / totalResourceOneDayWork);\n            }\n            if (ganttProperties.taskType === 'FixedUnit' && totalResourceOneDayWork === 0) {\n                this.parent.setRecordValue('work', 0, ganttProperties, true);\n                this.parent.setRecordValue(this.parent.taskFields.work, 0, ganttData, true);\n            }\n            //Update duration as per defined unit.\n            if (ganttProperties.durationUnit === 'minute') {\n                updatedDuration = updatedDuration * actualOneDayWork * 60;\n            }\n            if (ganttProperties.durationUnit === 'hour') {\n                updatedDuration = updatedDuration * actualOneDayWork;\n            }\n            //To check the decimal places.\n            if (updatedDuration % 1 !== 0) {\n                updatedDuration = parseFloat(updatedDuration.toFixed(2));\n            }\n            if (!isNullOrUndefined(ganttProperties.duration)) {\n                this.parent.setRecordValue('duration', updatedDuration, ganttProperties, true);\n            }\n            this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n        }\n    };\n    /**\n     * Update units of resources with respect to duration and work of a task.\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateUnitWithWork = function (ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        var resources = (!this.parent.isLoad && !isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.dialogModule) && !this.parent.editModule.dialogModule['isEdit'] &&\n            (!isNullOrUndefined(this.parent.editModule.cellEditModule) && !this.parent.editModule.cellEditModule.isCellEdit))\n            ? this.parent.editModule.dialogModule.ganttResources : ganttProperties.resourceInfo;\n        if (this.parent.editModule && this.parent.editModule.taskbarEditModule &&\n            (this.parent.editModule.taskbarEditModule.taskBarEditAction === 'LeftResizing' || this.parent.editModule.taskbarEditModule.taskBarEditAction === 'RightResizing')) {\n            resources = ganttData.ganttProperties.resourceInfo;\n        }\n        var resourcesLength = !isNullOrUndefined(resources) ? resources.length : 0;\n        var totSeconds;\n        if (this.parent.weekWorkingTime.length > 0) {\n            totSeconds = this.parent['getSecondsPerDay'](ganttData.ganttProperties.startDate ? ganttData.ganttProperties.startDate : ganttData.ganttProperties.endDate);\n        }\n        else {\n            totSeconds = this.parent.secondsPerDay;\n        }\n        var actualOneDayWork = (totSeconds) / 3600;\n        if (resourcesLength === 0) {\n            return;\n        }\n        var durationInDay = this.getDurationInDay(ganttData.ganttProperties.duration, ganttData.ganttProperties.durationUnit);\n        var totalHours = this.getWorkInHour(ganttProperties.work, ganttProperties.workUnit);\n        var totalUnitInPercentage = durationInDay > 0 ? (totalHours / (durationInDay * actualOneDayWork)) * 100 : 0;\n        var individualUnit = totalUnitInPercentage === 0 ? 0 : totalUnitInPercentage > 0 ?\n            totalUnitInPercentage / resourcesLength : 100;\n        //To check the decimal places.\n        if (individualUnit % 1 !== 0) {\n            individualUnit = parseFloat(individualUnit.toFixed(2));\n        }\n        for (var index = 0; index < resourcesLength; index++) {\n            resources[index][this.parent.resourceFields.unit] = individualUnit;\n            if (!this.parent.isLoad && !isNullOrUndefined(this.parent.editModule) &&\n                !isNullOrUndefined(this.parent.editModule.dialogModule) &&\n                !this.parent.editModule.dialogModule['isEdit'] &&\n                (!isNullOrUndefined(this.parent.editModule.cellEditModule) && !this.parent.editModule.cellEditModule.isCellEdit)) {\n                if (ganttProperties.resourceInfo) {\n                    ganttProperties.resourceInfo[index][this.parent.resourceFields.unit] = individualUnit;\n                }\n            }\n        }\n        //To update the unit value in data source\n        this.updateResourceName(ganttData);\n    };\n    TaskProcessor.prototype.calculateDateFromEndDate = function (endDate, duration, ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        var dayEndTime;\n        if (this.parent.weekWorkingTime.length > 0) {\n            dayEndTime = this.parent['getEndTime'](endDate);\n        }\n        else {\n            dayEndTime = this.parent.defaultEndTime;\n        }\n        if (endDate.getHours() === 0 && dayEndTime !== 86400) {\n            this.setTime(dayEndTime, endDate);\n        }\n        var validateAsMilestone = (parseInt(duration, 10) === 0) ? true : null;\n        this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties, validateAsMilestone), ganttProperties, true);\n        if (isNullOrUndefined(duration) || duration === '') {\n            if (this.parent.allowUnscheduledTasks) {\n                this.parent.setRecordValue('startDate', null, ganttProperties, true);\n                this.parent.setRecordValue('duration', null, ganttProperties, true);\n            }\n            else {\n                this.parent.setRecordValue('duration', 1, ganttProperties, true);\n                this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n            }\n        }\n        else if (!isNullOrUndefined(duration) && duration !== '') {\n            this.updateDurationValue(duration, ganttProperties);\n            this.parent.setRecordValue('startDate', this.getStartDate(ganttProperties.endDate, ganttProperties.duration, ganttProperties.durationUnit, ganttProperties), ganttProperties, true);\n        }\n    };\n    TaskProcessor.prototype.calculateDateFromStartDate = function (startDate, endDate, duration, ganttData, isLoad) {\n        var ganttProperties = ganttData.ganttProperties;\n        var validateAsMilestone = (parseInt(duration, 10) === 0 || ((startDate && endDate) &&\n            (new Date(startDate.getTime()) === new Date(endDate.getTime())))) ? true : null;\n        this.parent.setRecordValue('startDate', this.checkStartDate(startDate, ganttProperties, validateAsMilestone, isLoad), ganttProperties, true);\n        if (this.parent.isTreeGridRendered && ganttData) {\n            this.updateTaskData(ganttData);\n        }\n        if (!endDate && (isNullOrUndefined(duration) || duration === '')) {\n            if (this.parent.allowUnscheduledTasks) {\n                this.parent.setRecordValue('endDate', null, ganttProperties, true);\n                this.parent.setRecordValue('duration', null, ganttProperties, true);\n            }\n            else {\n                this.parent.setRecordValue('duration', 1, ganttProperties, true);\n                this.calculateEndDate(ganttData);\n            }\n        }\n        else if (!isNullOrUndefined(duration) && !endDate) {\n            this.updateDurationValue(duration, ganttProperties);\n            this.calculateEndDate(ganttData);\n        }\n        else if (endDate && (isNullOrUndefined(duration) || duration === '')) {\n            var dayEndTime = void 0;\n            if (this.parent.weekWorkingTime.length > 0) {\n                dayEndTime = this.parent['getEndTime'](endDate);\n            }\n            else {\n                dayEndTime = this.parent.defaultEndTime;\n            }\n            if (endDate.getHours() === 0 && dayEndTime !== 86400) {\n                this.setTime(dayEndTime, endDate);\n            }\n            this.parent.setRecordValue('endDate', this.checkEndDate(endDate, ganttData.ganttProperties), ganttProperties, true);\n            if (this.compareDates(ganttProperties.startDate, ganttProperties.endDate) === 1) {\n                this.parent.setRecordValue('endDate', ganttProperties.startDate, ganttProperties, true);\n                this.parent.setRecordValue('isMilestone', true, ganttProperties, true);\n                this.parent.setRecordValue('duration', 0, ganttProperties, true);\n            }\n            else {\n                this.calculateDuration(ganttData);\n            }\n        }\n        else {\n            this.updateDurationValue(duration, ganttProperties);\n            if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n                this.parent.taskFields.hasChildMapping)) {\n                this.calculateEndDate(ganttData);\n            }\n            else {\n                this.parent.setRecordValue('endDate', endDate, ganttProperties, true);\n            }\n        }\n    };\n    /**\n     *\n     * @param {number} parentWidth .\n     * @param {number} percent .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.getProgressWidth = function (parentWidth, percent) {\n        return (parentWidth * percent) / 100;\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {boolean} isAuto .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateWidth = function (ganttData, isAuto) {\n        var ganttProp = ganttData.ganttProperties;\n        var sDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var eDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var unscheduledTaskWidth = 3;\n        if (isNullOrUndefined(sDate) && isNullOrUndefined(eDate)) {\n            sDate = this.getValidStartDate(ganttProp, isAuto);\n            eDate = this.getValidEndDate(ganttProp, isAuto);\n        }\n        if (isNullOrUndefined(sDate) || isNullOrUndefined(eDate)) {\n            return unscheduledTaskWidth;\n        }\n        else if (ganttProp.isMilestone && (!ganttData.hasChildRecords || ganttProp.isAutoSchedule)) {\n            //let taskBarHeight: number = this.getTaskbarHeight();\n            return 0;\n        }\n        else {\n            return this.getTaskWidth(sDate, eDate, ganttProp);\n        }\n    };\n    TaskProcessor.prototype.getTaskbarHeight = function () {\n        var rowHeight = this.parent.rowHeight;\n        var taskBarHeight = this.parent.taskbarHeight;\n        if (taskBarHeight < rowHeight) {\n            return taskBarHeight;\n        }\n        else {\n            return rowHeight;\n        }\n    };\n    /**\n     * Method to calculate left\n     *\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isAuto .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateLeft = function (ganttProp, isAuto) {\n        var sDate = null;\n        var left = -300;\n        var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration; // eslint-disable-line\n        var milestone = ganttProp.isMilestone;\n        var ganttRecord = this.parent.getTaskByUniqueID(ganttProp.uniqueID);\n        if (ganttRecord && this.parent.allowUnscheduledTasks && isNullOrUndefined(startDate) && isNullOrUndefined(endDate)\n            && !isNullOrUndefined(duration) && !ganttRecord.hasChildRecords && ganttRecord.parentItem &&\n            (this.parent.taskMode === 'Manual' || (this.parent.taskMode === 'Custom' && ganttRecord[this.parent.taskFields.manual]))) {\n            var parentRec = this.parent.getParentTask(ganttRecord.parentItem);\n            if (parentRec.ganttProperties.startDate) {\n                startDate = parentRec.ganttProperties.startDate;\n            }\n        }\n        if (startDate) {\n            sDate = new Date(startDate.getTime());\n        }\n        else if (endDate) {\n            sDate = new Date(endDate.getTime());\n            milestone = isNullOrUndefined(startDate) && this.parent.allowUnscheduledTasks ? false : true;\n        }\n        else {\n            sDate = this.getValidStartDate(ganttProp);\n        }\n        if (!isNullOrUndefined(sDate)) {\n            left = this.getTaskLeft(sDate, milestone);\n        }\n        return left;\n    };\n    /**\n     * calculate the left position of the auto scheduled taskbar\n     *\n     * @param {ITaskData} ganttProperties - Defines the gantt data.\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateAutoLeft = function (ganttProperties) {\n        return this.getTaskLeft(ganttProperties.autoStartDate, ganttProperties.isMilestone);\n    };\n    /**\n     * To calculate duration of Gantt record with auto scheduled start date and auto scheduled end date\n     *\n     * @param {ITaskData} ganttProperties - Defines the gantt data.\n     * @returns {number} .\n     */\n    TaskProcessor.prototype.calculateAutoDuration = function (ganttProperties) {\n        return this.getDuration(ganttProperties.autoStartDate, ganttProperties.autoEndDate, ganttProperties.durationUnit, false, ganttProperties.isMilestone);\n    };\n    /**\n     * calculate the with between auto scheduled start date and auto scheduled end date\n     *\n     * @param {ITaskData} ganttProperties - Defines the gantt data.\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateAutoWidth = function (ganttProperties) {\n        return this.getTaskWidth(ganttProperties.autoStartDate, ganttProperties.autoEndDate);\n    };\n    /**\n     * calculate the left margin of the baseline element\n     *\n     * @param {ITaskData} ganttProperties .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateBaselineLeft = function (ganttProperties) {\n        var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n        var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n        if (baselineStartDate && baselineEndDate) {\n            return (this.getTaskLeft(baselineStartDate, ganttProperties.isMilestone));\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * calculate the width between baseline start date and baseline end date.\n     *\n     * @param {ITaskData} ganttProperties .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateBaselineWidth = function (ganttProperties) {\n        var baselineStartDate = this.getDateFromFormat(ganttProperties.baselineStartDate);\n        var baselineEndDate = this.getDateFromFormat(ganttProperties.baselineEndDate);\n        if (baselineStartDate && baselineEndDate && (baselineStartDate.getTime() !== baselineEndDate.getTime())) {\n            return (this.getTaskWidth(baselineStartDate, baselineEndDate));\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * To get tasks width value\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {ITaskData} [ganttData] .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.getTaskWidth = function (startDate, endDate, ganttData) {\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        var zoomOrTimeline = this.parent.currentZoomingLevel ? this.parent.currentZoomingLevel :\n            this.parent.timelineSettings;\n        var countValue = zoomOrTimeline['bottomTier'] !== null ? zoomOrTimeline['bottomTier'].count :\n            zoomOrTimeline['topTier'].count;\n        var isValid = false;\n        var modifiedsDate = new Date(startDate.getTime());\n        var hour = 0;\n        if (!isNullOrUndefined(ganttData) && ganttData.durationUnit === 'hour') {\n            modifiedsDate = new Date(modifiedsDate.getTime() + ganttData.duration * 60 * 60 * 1000);\n        }\n        if (!isNullOrUndefined(ganttData) && (ganttData.durationUnit === 'minute') || !isNullOrUndefined(ganttData) && ganttData.durationUnit === 'day' && ganttData.duration < 1) {\n            modifiedsDate = new Date(modifiedsDate.getTime() + ganttData.duration * 60 * 1000);\n        }\n        if (this.parent.weekWorkingTime.length > 0) {\n            var date = new Date(startDate.getTime());\n            for (var count = startDate.getDate(); count <= endDate.getDate(); count++) {\n                var day = date.getDay();\n                var currentDay = void 0;\n                var weekWorkingTime = this.parent.weekWorkingTime;\n                switch (day) {\n                    case 0:\n                        currentDay = 'Sunday';\n                        break;\n                    case 1:\n                        currentDay = 'Monday';\n                        break;\n                    case 2:\n                        currentDay = 'Tuesday';\n                        break;\n                    case 3:\n                        currentDay = 'Wednesday';\n                        break;\n                    case 4:\n                        currentDay = 'Thursday';\n                        break;\n                    case 5:\n                        currentDay = 'Friday';\n                        break;\n                    case 6:\n                        currentDay = 'Saturday';\n                        break;\n                    default:\n                        currentDay = '';\n                }\n                var isValid_1 = true;\n                for (var i = 0; i < weekWorkingTime.length; i++) {\n                    if (weekWorkingTime[i][currentDay]\n                        && weekWorkingTime[i][currentDay].length > 0) {\n                        isValid_1 = false;\n                        for (var j = 0; j < weekWorkingTime[i][currentDay].length; j++) {\n                            hour = hour + weekWorkingTime[i][currentDay][j].to\n                                - weekWorkingTime[i][currentDay][j].from;\n                        }\n                    }\n                }\n                if (isValid_1) {\n                    for (var k = 0; k < this.parent.dayWorkingTime.length; k++) {\n                        hour = hour + this.parent.dayWorkingTime[k].to - this.parent.dayWorkingTime[k].from;\n                    }\n                }\n                date = new Date(date.setDate(date.getDate() + 1));\n                if (!this.parent.includeWeekend) {\n                    date = this.parent.dataOperation.getNextWorkingDay(date);\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < this.parent.dayWorkingTime.length; i++) {\n                hour = hour + this.parent.dayWorkingTime[i].to - this.parent.dayWorkingTime[i].from;\n            }\n        }\n        var dateDiff = modifiedsDate.getTime() - sDate.getTime();\n        var dayStartTime;\n        var dayEndTime;\n        if (!isNullOrUndefined(ganttData) && (ganttData.durationUnit === 'minute' && ganttData.duration < (hour * 60)) || !isNullOrUndefined(ganttData) && ganttData.durationUnit === 'day' && /^\\d+\\.\\d+$/.test(ganttData.duration.toString())) {\n            if (tierMode === 'Day') {\n                if (this.parent.weekWorkingTime.length > 0) {\n                    dayStartTime = this.parent['getStartTime'](sDate);\n                    dayEndTime = this.parent['getEndTime'](eDate);\n                }\n                else {\n                    dayStartTime = this.parent.defaultStartTime;\n                    dayEndTime = this.parent.defaultEndTime;\n                }\n                if ((Math.floor((dateDiff / (1000 * 60 * 60)) % 24) >= hour || dateDiff === 0)) {\n                    isValid = true;\n                }\n                if (this.getSecondsInDecimal(sDate) === dayStartTime && isValid) {\n                    sDate.setHours(0, 0, 0, 0);\n                }\n                if (this.getSecondsInDecimal(eDate) === dayEndTime && isValid) {\n                    eDate.setHours(24);\n                }\n                if (this.getSecondsInDecimal(eDate) === dayStartTime) {\n                    eDate.setHours(0, 0, 0, 0);\n                }\n            }\n            else {\n                isValid = true;\n            }\n            if ((sDate).getTime() === (eDate).getTime()) {\n                return (this.parent.perDayWidth);\n            }\n            else {\n                if (isValid) {\n                    if (ganttData.durationUnit === 'day' && /^\\d+\\.\\d+$/.test(ganttData.duration.toString()) && this.parent.timelineModule.bottomTier === 'Day'\n                        && ganttData.duration < 1) {\n                        var holidaysCount = this.parent.holidays && this.parent.holidays.length > 0\n                            ? this.getHolidaysCount(sDate, eDate)\n                            : 0;\n                        var weekendCount = !this.parent.includeWeekend ? this.getWeekendCount(sDate, eDate) : 0;\n                        return ((holidaysCount + weekendCount + ganttData.duration) * this.parent.perDayWidth);\n                    }\n                    else {\n                        return ((this.getTimeDifference(sDate, eDate, true) / (1000 * 60 * 60 * 24)) * this.parent.perDayWidth);\n                    }\n                }\n                else {\n                    if (ganttData.durationUnit === 'day' && ganttData.duration < 1) {\n                        return (ganttData.duration * this.parent.perDayWidth);\n                    }\n                    else {\n                        return ((this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * hour)) * this.parent.perDayWidth);\n                    }\n                }\n            }\n        }\n        else {\n            if (tierMode === 'Day') {\n                if (this.parent.weekWorkingTime.length > 0) {\n                    dayStartTime = this.parent['getStartTime'](sDate);\n                    dayEndTime = this.parent['getEndTime'](eDate);\n                }\n                else {\n                    dayStartTime = this.parent.defaultStartTime;\n                    dayEndTime = this.parent.defaultEndTime;\n                }\n                if (this.getSecondsInDecimal(sDate) === dayStartTime) {\n                    sDate.setHours(0, 0, 0, 0);\n                }\n                if (this.getSecondsInDecimal(eDate) === dayEndTime) {\n                    eDate.setHours(24);\n                    eDate.setHours(0, 0, 0, 0);\n                }\n                if (this.getSecondsInDecimal(eDate) === dayStartTime) {\n                    eDate.setHours(0, 0, 0, 0);\n                }\n            }\n            if ((sDate).getTime() === (eDate).getTime()) {\n                return (this.parent.perDayWidth);\n            }\n            else {\n                if (this.parent.isInDst(sDate) || this.parent.isInDst(eDate)) {\n                    var timeDifference = this.getTimeDifference(sDate, eDate, true);\n                    var totalWidth = (timeDifference / (1000 * 60 * 60 * 24)) * this.parent.perDayWidth;\n                    var sOffset = sDate.getTimezoneOffset();\n                    var eOffset = eDate.getTimezoneOffset();\n                    var topTier = this.parent.timelineModule.customTimelineSettings.topTier;\n                    if (topTier && topTier['unit'] === 'Hour' && topTier['count'] === 1) {\n                        tierMode = topTier['unit'];\n                        countValue = topTier['count'];\n                    }\n                    if (tierMode === 'Hour' && countValue === 1 && sOffset !== eOffset && sOffset > eOffset) {\n                        totalWidth = totalWidth - (this.parent.perDayWidth / 24);\n                    }\n                    return totalWidth;\n                }\n                else {\n                    return ((this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24)) * this.parent.perDayWidth);\n                }\n            }\n        }\n    };\n    TaskProcessor.prototype.getDSTTransitions = function (year, timeZone) {\n        function findNthWeekday(year, month, dayOfWeek, n) {\n            var firstDayOfMonth = new Date(Date.UTC(year, month, 1));\n            var firstDayOfWeek = firstDayOfMonth.getUTCDay();\n            var offset = (dayOfWeek - firstDayOfWeek + 7) % 7;\n            return new Date(Date.UTC(year, month, 1 + offset + (n - 1) * 7, 2, 0, 0));\n        }\n        function convertToTimezone(date, timeZone) {\n            var formatter = new Intl.DateTimeFormat('en-US', {\n                timeZone: timeZone,\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit',\n                second: '2-digit',\n                hour12: false\n            });\n            var formatted = formatter.format(date);\n            var _a = formatted.match(/\\d+/g).map(Number), month = _a[0], day = _a[1], year = _a[2], hour = _a[3], minute = _a[4], second = _a[5];\n            return new Date(year, month - 1, day, hour, minute, second);\n        }\n        var dstStartDate = findNthWeekday(year, 2, 0, 5);\n        var dstEndDate = findNthWeekday(year, 9, 0, 5);\n        return {\n            dstStart: convertToTimezone(dstStartDate, timeZone),\n            dstEnd: convertToTimezone(dstEndDate, timeZone)\n        };\n    };\n    TaskProcessor.prototype.hasDSTTransition = function (year) {\n        var january = new Date(year, 0, 1);\n        var july = new Date(year, 6, 1);\n        var janOffset = january.getTimezoneOffset();\n        var julOffset = july.getTimezoneOffset();\n        // If the offsets are different, it means there is a DST transition\n        return janOffset !== julOffset;\n    };\n    /**\n     * Get task left value\n     *\n     * @param {Date} startDate .\n     * @param {boolean} isMilestone .\n     * @param {boolean} isFromTimelineVirtulization .\n     * @returns {number} .\n     * @private\n     */\n    TaskProcessor.prototype.getTaskLeft = function (startDate, isMilestone, isFromTimelineVirtulization) {\n        var isTimeSet = false;\n        var date = new Date(startDate.getTime());\n        var tierMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        var zoomOrTimeline = this.parent.currentZoomingLevel ? this.parent.currentZoomingLevel :\n            this.parent.timelineSettings;\n        var countValue = zoomOrTimeline['bottomTier'] !== null ? zoomOrTimeline['bottomTier'].count :\n            zoomOrTimeline['topTier'].count;\n        if (tierMode === 'Day') {\n            var dayStartTime = void 0;\n            var dayEndTime = void 0;\n            if (this.parent.weekWorkingTime.length > 0) {\n                dayStartTime = this.parent['getStartTime'](date);\n                dayEndTime = this.parent['getEndTime'](date);\n            }\n            else {\n                dayStartTime = this.parent.defaultStartTime;\n                dayEndTime = this.parent.defaultEndTime;\n            }\n            if (this.getSecondsInDecimal(date) === dayStartTime) {\n                date.setHours(0, 0, 0, 0);\n            }\n            else if (isMilestone && this.getSecondsInDecimal(date) === dayEndTime) {\n                date.setHours(24);\n                isTimeSet = true;\n            }\n            else if (this.getSecondsInDecimal(date) === dayEndTime && this.parent.allowUnscheduledTasks) {\n                date.setHours(22);\n                isTimeSet = true;\n            }\n        }\n        var leftValueForStartDate;\n        var isValid = true;\n        if ((this.parent.editModule && ((this.parent.editModule.taskbarEditModule && this.parent.editModule.taskbarEditModule.taskBarEditAction) || (this.parent.editModule.dialogModule && this.parent.editModule.dialogModule['isEdit']) ||\n            (this.parent.editModule.cellEditModule && this.parent.editModule.cellEditModule.isCellEdit) ||\n            this.parent.ganttChartModule.scrollObject['isSetScrollLeft'])) && !isFromTimelineVirtulization) {\n            isValid = false;\n        }\n        if (this.parent.enableTimelineVirtualization && isValid && !this.parent.timelineModule['performedTimeSpanAction']) {\n            leftValueForStartDate = (this.parent.enableTimelineVirtualization\n                && this.parent.ganttChartModule.scrollObject.element.scrollLeft !== 0)\n                ? this.parent.ganttChartModule.scrollObject.getTimelineLeft() : null;\n        }\n        var timelineStartDate = (this.parent.enableTimelineVirtualization && !isNullOrUndefined(leftValueForStartDate))\n            ? new Date((this.parent.timelineModule['dateByLeftValue'](leftValueForStartDate)).toString()) : new Date(this.parent.timelineModule.timelineStartDate);\n        if (timelineStartDate) {\n            var leftValue = void 0;\n            var hasDST = this.hasDSTTransition(startDate.getFullYear());\n            var transitions = void 0;\n            if (hasDST) {\n                transitions = this.getDSTTransitions(startDate.getFullYear(), this.systemTimeZone);\n            }\n            if (this.parent.isInDst(startDate) && !this.parent.isInDst(timelineStartDate)) {\n                var newTimelineStartDate = void 0;\n                if (this.parent.isInDst(date)) {\n                    newTimelineStartDate = new Date(timelineStartDate.getTime() - (60 * 60 * 1000));\n                }\n                else {\n                    newTimelineStartDate = new Date(timelineStartDate.getTime());\n                }\n                leftValue = (date.getTime() - newTimelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n            }\n            else {\n                var width = void 0;\n                if (this.parent.timelineModule.bottomTier === 'Day' && this.getSecondsInDecimal(date) !== this.parent.defaultStartTime && this.getSecondsInDecimal(date) !== 0 && !isTimeSet) {\n                    var newDate = new Date(startDate.getTime());\n                    var setStartDate = new Date(newDate.setHours(0, 0, 0, 0));\n                    var duration = this.getDuration(setStartDate, startDate, 'day', true, false);\n                    width = duration * this.parent.perDayWidth;\n                    date.setHours(0, 0, 0, 0);\n                    leftValue = (date.getTime() - timelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n                    if (this.getSecondsInDecimal(date) !== this.parent.defaultStartTime && this.parent.timelineModule.bottomTier === 'Day') {\n                        leftValue += width;\n                    }\n                }\n                else {\n                    var newTimelineStartDate = void 0;\n                    if (date.getTimezoneOffset() < timelineStartDate.getTimezoneOffset()) {\n                        newTimelineStartDate = new Date(timelineStartDate.getTime() - (60 * 60 * 1000));\n                    }\n                    else {\n                        newTimelineStartDate = new Date(timelineStartDate.getTime());\n                    }\n                    leftValue = (date.getTime() - timelineStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n                }\n            }\n            var timelineStartTime = timelineStartDate.getTime();\n            var dstStartTime = void 0;\n            if (transitions && transitions['dstStart']) {\n                dstStartTime = transitions['dstStart'].getTime();\n            }\n            var isBeforeOrAtDSTStart = timelineStartTime <= dstStartTime;\n            if (hasDST && this.parent.dayWorkingTime[0]['properties'].from > transitions['dstStart'].getHours() && isBeforeOrAtDSTStart && tierMode === 'Day' && this.getSecondsInDecimal(date) === this.parent.defaultStartTime) {\n                if ((leftValue % this.parent.perDayWidth) !== 0) {\n                    var leftDifference = this.parent.perDayWidth - (leftValue % this.parent.perDayWidth);\n                    leftValue = leftValue + leftDifference;\n                }\n            }\n            if (this.parent.isInDst(timelineStartDate) && !this.parent.isInDst(startDate) && (this.parent.timelineModule.topTier === 'Hour' || this.parent.timelineModule.bottomTier === 'Hour')) {\n                leftValue = leftValue - this.parent.timelineSettings.timelineUnitSize;\n            }\n            var topTier = this.parent.timelineModule.customTimelineSettings.topTier;\n            if (topTier && topTier['unit'] === 'Hour' && topTier['count'] === 1) {\n                tierMode = topTier['unit'];\n                countValue = topTier['count'];\n            }\n            if (hasDST && countValue === 1 && tierMode === 'Hour' && startDate >= transitions['dstStart'] && isBeforeOrAtDSTStart) {\n                leftValue = leftValue - (this.parent.perDayWidth / 24);\n            }\n            return leftValue;\n        }\n        else {\n            return 0;\n        }\n    };\n    TaskProcessor.prototype.getSplitTaskWidth = function (sDate, duration, data) {\n        var startDate = new Date(sDate.getTime());\n        var endDate = new Date((this.getEndDate(startDate, duration, data.ganttProperties.durationUnit, data.ganttProperties, false).getTime()));\n        var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        if (tierViewMode === 'Day') {\n            var dayStartTime = void 0;\n            var dayEndTime = void 0;\n            if (this.parent.weekWorkingTime.length > 0) {\n                dayStartTime = this.parent['getStartTime'](startDate);\n                dayEndTime = this.parent['getEndTime'](endDate);\n            }\n            else {\n                dayStartTime = this.parent.defaultStartTime;\n                dayEndTime = this.parent.defaultEndTime;\n            }\n            if (this.getSecondsInDecimal(startDate) === dayStartTime) {\n                startDate.setHours(0, 0, 0, 0);\n            }\n            if (this.getSecondsInDecimal(endDate) === dayEndTime) {\n                endDate.setHours(24);\n            }\n            if (this.getSecondsInDecimal(endDate) === dayStartTime) {\n                endDate.setHours(0, 0, 0, 0);\n            }\n        }\n        return ((this.getTimeDifference(startDate, endDate) / (1000 * 60 * 60 * 24)) * this.parent.perDayWidth);\n    };\n    TaskProcessor.prototype.getSplitTaskLeft = function (sDate, segmentTaskStartDate) {\n        var stDate = new Date(sDate.getTime());\n        var tierViewMode = this.parent.timelineModule.bottomTier !== 'None' ? this.parent.timelineModule.bottomTier :\n            this.parent.timelineModule.topTier;\n        if (tierViewMode === 'Day') {\n            var dayStartTime = void 0;\n            var segmentStartTime = void 0;\n            if (this.parent.weekWorkingTime.length > 0) {\n                dayStartTime = this.parent['getStartTime'](stDate);\n                segmentStartTime = this.parent['getStartTime'](segmentTaskStartDate);\n            }\n            else {\n                segmentStartTime = dayStartTime = this.parent.defaultStartTime;\n            }\n            if (this.getSecondsInDecimal(stDate) === dayStartTime) {\n                stDate.setHours(0, 0, 0, 0);\n            }\n            if (this.getSecondsInDecimal(segmentTaskStartDate) === segmentStartTime) {\n                segmentTaskStartDate.setHours(0, 0, 0, 0);\n            }\n        }\n        if (segmentTaskStartDate) {\n            return (stDate.getTime() - segmentTaskStartDate.getTime()) / (1000 * 60 * 60 * 24) * this.parent.perDayWidth;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {string} fieldName .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateMappingData = function (ganttData, fieldName) {\n        var columnMapping = this.parent.columnMapping;\n        var ganttProp = ganttData.ganttProperties;\n        if (isNullOrUndefined(columnMapping[fieldName]) && fieldName !== 'taskType' && fieldName !== 'segments') {\n            return;\n        }\n        if (fieldName === 'predecessorName') {\n            //\n        }\n        else if (fieldName === 'resourceInfo') {\n            var resourceData = ganttProp.resourceInfo;\n            var resourceSettings = this.parent.resourceFields;\n            // eslint-disable-next-line\n            var resourcesId = [];\n            var resourcesName = [];\n            if (!isNullOrUndefined(resourceData)) {\n                for (var i = 0; i < resourceData.length; i++) {\n                    resourcesId.push(resourceData[i][resourceSettings.id]);\n                    var resName = resourceData[i][resourceSettings.name];\n                    var resourceUnit = resourceData[i][resourceSettings.unit];\n                    if (resourceUnit !== 100) {\n                        resName += '[' + resourceUnit + '%' + ']';\n                    }\n                    if (resName) {\n                        resourcesName.push(resName);\n                    }\n                }\n            }\n            this.parent.setRecordValue('resourceNames', resourcesName.join(','), ganttProp, true);\n            if (this.isResourceString) {\n                ganttData.taskData[this.parent.taskFields.resourceInfo] =\n                    ganttData.taskData[this.parent.taskFields.resourceInfo][0][resourceSettings.name];\n                this.updateTaskDataResource(ganttData);\n            }\n            else {\n                this.updateTaskDataResource(ganttData);\n            }\n            this.parent.setRecordValue(columnMapping[fieldName], resourcesName.join(','), ganttData);\n        }\n        else if (fieldName === 'startDate' || fieldName === 'endDate') {\n            this.setRecordDate(ganttData, ganttProp[fieldName], columnMapping[fieldName]);\n        }\n        else if (fieldName === 'duration') {\n            this.setRecordDuration(ganttData, columnMapping[fieldName]);\n        }\n        else if (fieldName === 'work') {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp.work, ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n        }\n        else if (fieldName === 'type') {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp.taskType, ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], ganttProp.taskType, ganttData);\n        }\n        else if (fieldName === 'manual') {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], !ganttProp.isAutoSchedule, ganttData);\n        }\n        else if (fieldName === 'segments') {\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.segments, this.segmentTaskData(ganttData), ganttData);\n        }\n        else {\n            this.parent.setRecordValue('taskData.' + columnMapping[fieldName], ganttProp[fieldName], ganttData);\n            this.parent.setRecordValue(columnMapping[fieldName], ganttProp[fieldName], ganttData);\n        }\n    };\n    TaskProcessor.prototype.segmentTaskData = function (data) {\n        var _this = this;\n        var segments = data.ganttProperties.segments;\n        var taskSettings = this.parent.taskFields;\n        if (isNullOrUndefined(segments)) {\n            return null;\n        }\n        var taskData = extend([], [], data.taskData[taskSettings.segments], true);\n        for (var i = 0; i < segments.length; i++) {\n            if (this.parent.isEdit || (this.parent.editModule && this.parent.editModule.dialogModule &&\n                getValue('isEdit', this.parent.editModule.dialogModule)) || (this.parent.contextMenuModule && getValue('isEdit', this.parent.contextMenuModule))) {\n                taskData[i] = {};\n            }\n            if (!isNullOrUndefined(taskSettings.startDate)) {\n                taskData[i][this.parent.taskFields.startDate] = segments[i].startDate;\n            }\n            if (!isNullOrUndefined(taskSettings.endDate)) {\n                taskData[i][this.parent.taskFields.endDate] = segments[i].endDate;\n            }\n            if (!isNullOrUndefined(taskSettings.duration)) {\n                taskData[i][this.parent.taskFields.duration] = Number(segments[i].duration);\n            }\n        }\n        if (this.customSegmentProperties.length > 0 && taskData && taskData.length > 0) {\n            taskData.forEach(function (task, index) {\n                var mergedObject = Object.assign({}, task, _this.customSegmentProperties[index]);\n                taskData[index] = mergedObject;\n            });\n        }\n        return taskData;\n    };\n    /**\n     * Method to update the task data resource values\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     */\n    TaskProcessor.prototype.updateTaskDataResource = function (ganttData) {\n        var resourceData = ganttData.ganttProperties.resourceInfo;\n        var preTaskResources = ganttData.taskData[this.parent.taskFields.resourceInfo];\n        var resourceSettings = this.parent.resourceFields;\n        if (isNullOrUndefined(preTaskResources)) {\n            ganttData.taskData[this.parent.taskFields.resourceInfo] = resourceData;\n        }\n        else if (resourceData && resourceData.length) {\n            for (var i = 0; i < resourceData.length; i++) {\n                var isAdded = false;\n                if (typeof (preTaskResources) === 'string') {\n                    if (typeof preTaskResources === 'string') {\n                        if ((preTaskResources) === (resourceData[i][resourceSettings.name])) {\n                            preTaskResources = resourceData[i][resourceSettings.name];\n                            isAdded = true;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var j = 0; j < preTaskResources.length; j++) {\n                        if (typeof preTaskResources[j] === 'number' || typeof preTaskResources[j] === 'string') {\n                            if (parseInt(preTaskResources[j], 10) ===\n                                parseInt(resourceData[i][resourceSettings.id], 10)) {\n                                preTaskResources[j] = resourceData[i];\n                                isAdded = true;\n                                break;\n                            }\n                        }\n                        else if (preTaskResources[j][resourceSettings.id] === resourceData[i][resourceSettings.id] && typeof preTaskResources[j] !== 'number') {\n                            preTaskResources[j] = extend({}, preTaskResources[j], resourceData[i], true);\n                            isAdded = true;\n                            break;\n                        }\n                    }\n                }\n                if (!isAdded) {\n                    if (typeof (preTaskResources) === 'string') {\n                        preTaskResources = resourceData[i][resourceSettings.name];\n                    }\n                    else {\n                        preTaskResources.push(resourceData[i]);\n                    }\n                }\n            }\n            var data_1 = [];\n            if (!isNullOrUndefined(preTaskResources)) {\n                if (typeof (preTaskResources) !== 'string') {\n                    var _loop_4 = function (k) {\n                        resourceData.filter(function (resourceInfo) {\n                            if (resourceInfo[resourceSettings.id] === preTaskResources[k][resourceSettings.id]\n                                && data_1.indexOf(preTaskResources[k]) === -1) {\n                                data_1.push(preTaskResources[k]);\n                            }\n                        });\n                    };\n                    for (var k = 0; k < preTaskResources.length; k++) {\n                        _loop_4(k);\n                    }\n                    this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, data_1, ganttData);\n                }\n                else {\n                    this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, preTaskResources, ganttData);\n                }\n            }\n        }\n        else {\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], ganttData);\n        }\n    };\n    TaskProcessor.prototype.setRecordDate = function (task, value, mapping) {\n        var tempDate = typeof value === 'string' ? new Date(value) : value;\n        if (!isNullOrUndefined(value)) {\n            value = new Date(tempDate.getTime());\n        }\n        this.parent.setRecordValue(mapping, value, task);\n        if (!isNullOrUndefined(value)) {\n            value = new Date(tempDate.getTime());\n        }\n        if (!this.parent.isLoad && !this.parent.isDynamicData) {\n            this.parent.setRecordValue('taskData.' + mapping, value, task);\n        }\n        this.parent.isDynamicData = false;\n    };\n    TaskProcessor.prototype.getDurationInDay = function (duration, durationUnit) {\n        if (durationUnit === 'day') {\n            return duration;\n        }\n        else if (durationUnit === 'hour') {\n            return duration / (this.parent.secondsPerDay / 3600);\n        }\n        else {\n            return duration / (this.parent.secondsPerDay / 60);\n        }\n    };\n    TaskProcessor.prototype.setRecordDuration = function (task, mapping) {\n        var duration = task.ganttProperties.duration;\n        var durationUnit = task.ganttProperties.durationUnit;\n        if (!isNullOrUndefined(duration)) {\n            this.parent.setRecordValue(mapping, task.ganttProperties.duration, task);\n            /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n            var durationValue = (getValue(mapping, task.taskData));\n            if (isNaN(durationValue) && isNullOrUndefined(this.parent.taskFields.durationUnit) && !isNullOrUndefined(durationValue)) {\n                this.parent.setRecordValue('taskData.' + mapping, this.getDurationString(duration, durationUnit), task);\n            }\n            else {\n                if (typeof durationValue === 'string') {\n                    this.parent.setRecordValue('taskData.' + mapping, duration.toString(), task);\n                }\n                else {\n                    this.parent.setRecordValue('taskData.' + mapping, duration, task);\n                }\n            }\n        }\n        else {\n            this.parent.setRecordValue(mapping, duration, task);\n            this.parent.setRecordValue('taskData.' + mapping, duration, task);\n        }\n        if (this.parent.taskFields.durationUnit) {\n            task.taskData[this.parent.taskFields.durationUnit] = task.ganttProperties.durationUnit;\n        }\n    };\n    TaskProcessor.prototype.setDataSource = function (data) {\n        var dataArray;\n        var createData = [];\n        if (Array.isArray(data)) {\n            dataArray = data;\n        }\n        var length = dataArray.length;\n        for (var i = 0; i < length; i++) {\n            var record = data[i];\n            createData.push(record);\n            if (!(isNullOrUndefined(data[i][this.parent.taskFields.child]))) {\n                this.setDataSource(data[i][this.parent.taskFields.child]);\n            }\n        }\n        return createData;\n    };\n    TaskProcessor.prototype.setStartDate = function (task) {\n        var _this = this;\n        var hierarchicalData = [];\n        if (!isNullOrUndefined(this.parent.taskFields.parentID) && !isNullOrUndefined(this.parent.taskFields.id)) {\n            hierarchicalData = this.setDataSource(this.parent.dataSource);\n        }\n        else {\n            hierarchicalData = this.parent.dataSource;\n        }\n        hierarchicalData.map(function (record) {\n            if (task.ganttProperties.taskId === record[_this.parent.taskFields.id]) {\n                if (!isNullOrUndefined(_this.parent.taskFields.startDate)) {\n                    task[_this.parent.taskFields.startDate] = record[_this.parent.taskFields.startDate];\n                }\n                if (!isNullOrUndefined(_this.parent.taskFields.endDate)) {\n                    task[_this.parent.taskFields.endDate] = record[_this.parent.taskFields.endDate];\n                }\n            }\n        });\n    };\n    TaskProcessor.prototype.getWorkInHour = function (work, workUnit) {\n        if (workUnit === 'day') {\n            return work * (this.parent.secondsPerDay / 3600);\n        }\n        else if (workUnit === 'minute') {\n            return work / 60;\n        }\n        else {\n            return work;\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateTaskData = function (ganttData) {\n        var dataMapping = this.parent.taskFields;\n        var ganttProperties = ganttData.ganttProperties;\n        if (!isNullOrUndefined(ganttData.taskData)) {\n            var data = ganttData.taskData;\n            if (dataMapping.id) {\n                this.parent.setRecordValue('taskData.' + dataMapping.id, ganttProperties.taskId, ganttData);\n                this.parent.setRecordValue(dataMapping.id, ganttProperties.taskId, ganttData);\n            }\n            if (dataMapping.name) {\n                if (!this.parent.isLoad) {\n                    this.parent.setRecordValue('taskData.' + dataMapping.name, ganttProperties.taskName, ganttData);\n                }\n                this.parent.setRecordValue(dataMapping.name, ganttProperties.taskName, ganttData);\n            }\n            if (dataMapping.startDate) {\n                this.setRecordDate(ganttData, ganttProperties.startDate, dataMapping.startDate);\n            }\n            if (dataMapping.endDate) {\n                this.setRecordDate(ganttData, ganttProperties.endDate, dataMapping.endDate);\n            }\n            if (dataMapping.duration) {\n                if (isNullOrUndefined(dataMapping.milestone) || (!isNullOrUndefined(dataMapping.milestone) &&\n                    !ganttData.taskData[dataMapping.milestone])) {\n                    this.setRecordDuration(ganttData, dataMapping.duration);\n                }\n            }\n            if (dataMapping.durationUnit) {\n                data[dataMapping.durationUnit] = ganttProperties.durationUnit;\n            }\n            if (dataMapping.progress) {\n                if (!this.parent.isLoad) {\n                    this.parent.setRecordValue('taskData.' + dataMapping.progress, ganttProperties.progress, ganttData);\n                }\n                this.parent.setRecordValue(dataMapping.progress, ganttProperties.progress, ganttData);\n            }\n            if (dataMapping.baselineStartDate) {\n                this.setRecordDate(ganttData, ganttProperties.baselineStartDate, dataMapping.baselineStartDate);\n            }\n            if (dataMapping.baselineEndDate) {\n                this.setRecordDate(ganttData, ganttProperties.baselineEndDate, dataMapping.baselineEndDate);\n            }\n            if (dataMapping.notes) {\n                if (!this.parent.isLoad) {\n                    this.parent.setRecordValue('taskData.' + dataMapping.notes, ganttProperties.notes, ganttData);\n                }\n                this.parent.setRecordValue(dataMapping.notes, ganttProperties.notes, ganttData);\n            }\n            if (dataMapping.cssClass) {\n                if (!this.parent.isLoad) {\n                    this.parent.setRecordValue('taskData.' + dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n                }\n                this.parent.setRecordValue(dataMapping.cssClass, ganttProperties.cssClass, ganttData);\n            }\n            if (dataMapping.indicators) {\n                if (!this.parent.isLoad) {\n                    this.parent.setRecordValue('taskData.' + dataMapping.indicators, ganttProperties.indicators, ganttData);\n                }\n                this.parent.setRecordValue(dataMapping.indicators, ganttProperties.indicators, ganttData);\n            }\n            if (dataMapping.parentID) {\n                var parentID = this.parent.viewType === 'ProjectView' ? ganttProperties.parentId : data[dataMapping.parentID];\n                this.parent.setRecordValue('taskData.' + dataMapping.parentID, parentID, ganttData);\n                this.parent.setRecordValue(dataMapping.parentID, ganttProperties.parentId, ganttData);\n            }\n            if (dataMapping.work) {\n                if (!this.parent.isLoad) {\n                    this.parent.setRecordValue('taskData.' + dataMapping.work, ganttProperties.work, ganttData);\n                }\n                this.parent.setRecordValue(dataMapping.work, ganttProperties.work, ganttData);\n            }\n            if (dataMapping.type) {\n                if (!this.parent.isLoad) {\n                    this.parent.setRecordValue('taskData.' + dataMapping.type, ganttProperties.taskType, ganttData);\n                }\n                this.parent.setRecordValue(dataMapping.type, ganttProperties.taskType, ganttData);\n            }\n        }\n    };\n    /**\n     * To set resource value in Gantt record\n     *\n     * @param {object} data .\n     * @returns {object[]} .\n     * @private\n     */\n    TaskProcessor.prototype.setResourceInfo = function (data) {\n        var _this = this;\n        // eslint-disable-next-line\n        var resourceIdCollection;\n        if (isNullOrUndefined(data[this.parent.taskFields.resourceInfo])) {\n            return resourceIdCollection;\n        }\n        if (this.parent.isLoad) {\n            resourceIdCollection = data[this.parent.taskFields.resourceInfo];\n        }\n        else {\n            resourceIdCollection = data['taskData'] && this.parent.taskFields.resourceInfo in data['taskData']\n                ? data['taskData'][this.parent.taskFields.resourceInfo]\n                : data[this.parent.taskFields.resourceInfo];\n        }\n        var resourceData;\n        if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.dialogModule)\n            && this.parent.editModule.dialogModule.isAddNewResource) {\n            resourceData = this.parent.editModule.dialogModule.ganttResources;\n        }\n        else {\n            resourceData = this.parent.resources;\n        }\n        var resourceIDMapping = this.parent.resourceFields.id;\n        var resourceUnitMapping = this.parent.resourceFields.unit;\n        var resourceGroup = this.parent.resourceFields.group;\n        var resources = [];\n        if (typeof (resourceIdCollection) === 'string' && resourceIdCollection !== '') {\n            var resource_1 = [];\n            var resourceIds_1 = data[this.parent.taskFields.resourceInfo].split(',');\n            if (resourceIds_1) {\n                resourceData.forEach(function (resourceInfo) {\n                    if (resourceIds_1.includes(resourceInfo[_this.parent.resourceFields.name])) {\n                        resource_1.push(resourceInfo);\n                    }\n                });\n                var ganttDataResource = extend({}, resource_1[0]);\n                resources.push(ganttDataResource);\n                if (!isNullOrUndefined(resourceUnitMapping) && !isNullOrUndefined(resourceIdCollection[resourceUnitMapping])) {\n                    ganttDataResource[resourceUnitMapping] = resourceIdCollection[resourceUnitMapping];\n                }\n                if (!isNullOrUndefined(resourceGroup) && !isNullOrUndefined(resourceIdCollection[resourceGroup])) {\n                    ganttDataResource[resourceGroup] = resourceIdCollection[resourceGroup];\n                }\n            }\n        }\n        else {\n            var _loop_5 = function (count) {\n                var resource = resourceData.filter(function (resourceInfo) {\n                    if (typeof (resourceIdCollection[count]) === 'object' &&\n                        resourceIdCollection[count][resourceIDMapping] === resourceInfo[resourceIDMapping]) {\n                        return true;\n                    }\n                    else {\n                        return (resourceIdCollection[count] === resourceInfo[resourceIDMapping]);\n                    }\n                });\n                var ganttDataResource = extend({}, resource[0]);\n                resources.push(ganttDataResource);\n                if (!isNullOrUndefined(resourceUnitMapping)\n                    && !isNullOrUndefined(resourceIdCollection[count][resourceUnitMapping])) {\n                    ganttDataResource[resourceUnitMapping] = resourceIdCollection[count][resourceUnitMapping];\n                }\n                if (!isNullOrUndefined(resourceGroup)\n                    && !isNullOrUndefined(resourceIdCollection[count][resourceGroup])) {\n                    ganttDataResource[resourceGroup] = resourceIdCollection[count][resourceGroup];\n                }\n            };\n            for (var count = 0; count < resourceIdCollection.length; count++) {\n                _loop_5(count);\n            }\n        }\n        this.updateResourceUnit(resources);\n        return resources;\n    };\n    /**\n     * To set resource unit in Gantt record\n     *\n     * @param {object[]} resourceData .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateResourceUnit = function (resourceData) {\n        var resourceUnit = this.parent.resourceFields.unit;\n        if (!isNullOrUndefined(resourceUnit)) {\n            var length_1 = resourceData.length;\n            var index = void 0;\n            for (index = 0; index < length_1; index++) {\n                if (isNullOrUndefined(resourceData[index][resourceUnit])) {\n                    resourceData[index][resourceUnit] = 100;\n                }\n            }\n        }\n    };\n    /**\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateResourceName = function (data) {\n        var resourceInfo = data.ganttProperties.resourceInfo;\n        var resourceName = [];\n        var taskMapping = this.parent.taskFields;\n        if (resourceInfo && resourceInfo.length > 0) {\n            var resourceLength = resourceInfo.length;\n            if (typeof data.taskData[this.parent.taskFields.resourceInfo] === 'string') {\n                var taskResources = data.taskData[this.parent.taskFields.resourceInfo];\n                var stringResourceName = taskResources;\n                this.parent.setRecordValue('resourceNames', stringResourceName, data.ganttProperties, true);\n                this.parent.setRecordValue(this.parent.taskFields.resourceInfo, stringResourceName, data, true);\n                this.updateTaskDataResource(data);\n            }\n            else {\n                var taskResources = extend([], [], data.taskData[this.parent.taskFields.resourceInfo], true);\n                this.parent.setRecordValue('taskData.' + this.parent.taskFields.resourceInfo, [], data);\n                for (var i = 0; i < resourceLength; i++) {\n                    var resource = resourceInfo[i];\n                    var resName = resource[this.parent.resourceFields.name];\n                    var resourceUnit = resource[this.parent.resourceFields.unit];\n                    if (resourceUnit !== 100) {\n                        resName += '[' + resourceUnit + '%' + ']';\n                    }\n                    if (!isNullOrUndefined(resName)) {\n                        resourceName.push(resName);\n                    }\n                    if (data.taskData) {\n                        var mapping = taskMapping.resourceInfo;\n                        if (taskResources[i] && typeof (taskResources[parseInt(i.toString(), 10)] === 'object')) {\n                            data.taskData[mapping].push(taskResources[i]);\n                        }\n                        else {\n                            data.taskData[mapping].push(resource[this.parent.resourceFields.id]);\n                        }\n                    }\n                }\n                this.parent.setRecordValue('resourceNames', resourceName.join(','), data.ganttProperties, true);\n                this.parent.setRecordValue(this.parent.taskFields.resourceInfo, resourceName.join(','), data, true);\n                this.updateTaskDataResource(data);\n            }\n        }\n    };\n    TaskProcessor.prototype.dataReorder = function (flatCollection, rootCollection) {\n        var result = [];\n        while (flatCollection.length > 0 && rootCollection.length > 0) {\n            var index = rootCollection.indexOf(flatCollection[0]);\n            if (index === -1) {\n                flatCollection.shift();\n            }\n            else {\n                result.push(flatCollection.shift());\n                rootCollection.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    TaskProcessor.prototype.validateDurationUnitMapping = function (durationUnit) {\n        var unit = durationUnit;\n        if ((unit === 'minute') || (unit === 'minutes') || (unit === 'm') || (unit === 'min')) {\n            unit = 'minute';\n        }\n        else if ((unit === 'hour') || (unit === 'hours') || (unit === 'h') || (unit === 'hr')) {\n            unit = 'hour';\n        }\n        else if ((unit === 'day') || (unit === 'days') || (unit === 'd')) {\n            unit = 'day';\n        }\n        else {\n            unit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n        return unit;\n    };\n    TaskProcessor.prototype.validateTaskTypeMapping = function (taskType) {\n        var type = taskType;\n        if (type === 'FixedDuration') {\n            type = 'FixedDuration';\n        }\n        else if (type === 'FixedUnit') {\n            type = 'FixedUnit';\n        }\n        else if (type === 'FixedWork') {\n            type = 'FixedWork';\n        }\n        else {\n            type = this.parent.taskType;\n        }\n        return type;\n    };\n    TaskProcessor.prototype.validateWorkUnitMapping = function (workUnit) {\n        var unit = workUnit;\n        if (unit === 'minute') {\n            unit = 'minute';\n        }\n        else if (unit === 'hour') {\n            unit = 'hour';\n        }\n        else if (unit === 'day') {\n            unit = 'day';\n        }\n        else {\n            unit = this.parent.workUnit.toLocaleLowerCase();\n        }\n        return unit;\n    };\n    /**\n     * To update duration value in Task\n     *\n     * @param {string} duration .\n     * @param {ITaskData} ganttProperties .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateDurationValue = function (duration, ganttProperties) {\n        var tempDuration = this.getDurationValue(duration);\n        if (!isNaN(getValue('duration', tempDuration)) && !(this.parent.viewType === 'ResourceView' && tempDuration['duration'] === 0 && this.parent.editModule && this.parent.editModule.cellEditModule && this.parent.editModule.cellEditModule.isCellEdit)) {\n            this.parent.setRecordValue('duration', getValue('duration', tempDuration), ganttProperties, true);\n        }\n        if (!isNullOrUndefined(getValue('durationUnit', tempDuration))) {\n            this.parent.setRecordValue('durationUnit', getValue('durationUnit', tempDuration), ganttProperties, true);\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.reUpdateGanttData = function () {\n        if (this.parent.flatData.length > 0) {\n            var data = void 0;\n            var ganttData = void 0;\n            this.parent.secondsPerDay = this.getSecondsPerDay();\n            for (var index = 0; index < this.parent.flatData.length; index++) {\n                data = this.parent.flatData[index].taskData;\n                ganttData = this.parent.flatData[index];\n                if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n                    this.setRecordDuration(ganttData, this.parent.taskFields.duration);\n                }\n                if (this.parent.isLoad) {\n                    this.setStartDate(ganttData);\n                }\n                this.calculateScheduledValues(ganttData, data, false);\n            }\n            this.updateGanttData();\n        }\n    };\n    //check day is fall between from and to date range\n    TaskProcessor.prototype._isInStartDateRange = function (day, from, to) {\n        var isInRange = false;\n        if (day.getTime() >= from.getTime() && day.getTime() < to.getTime()) {\n            isInRange = true;\n        }\n        return isInRange;\n    };\n    //check day is fall between from and to date range\n    TaskProcessor.prototype._isInEndDateRange = function (day, from, to) {\n        var isInRange = false;\n        if (day.getTime() > from.getTime() && day.getTime() <= to.getTime()) {\n            isInRange = true;\n        }\n        return isInRange;\n    };\n    /**\n     * Method to find overlapping value of the parent task\n     *\n     * @param {IGanttData} resourceTask .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateOverlappingValues = function (resourceTask) {\n        var tasks = resourceTask.childRecords;\n        var currentTask;\n        var ranges = [];\n        if (tasks.length <= 1) {\n            resourceTask.ganttProperties.workTimelineRanges = [];\n            return;\n        }\n        tasks = this.setSortedChildTasks(resourceTask);\n        this.updateOverlappingIndex(tasks);\n        for (var count = 1; count < tasks.length; count++) {\n            currentTask = tasks[count];\n            var cStartDate = void 0;\n            var cEndDate = void 0;\n            if (currentTask.ganttProperties.startDate) {\n                cStartDate = new Date(currentTask.ganttProperties.startDate.getTime());\n            }\n            if (currentTask.ganttProperties.endDate) {\n                cEndDate = new Date(currentTask.ganttProperties.endDate.getTime()); //task 2\n            }\n            var range = [];\n            // eslint-disable-next-line\n            var rangeObj = {};\n            for (var index = 0; index < count; index++) {\n                var tStartDate = tasks[index].ganttProperties.startDate;\n                var tEndDate = tasks[index].ganttProperties.endDate; // task 1\n                var rangeObj_1 = {};\n                if (cStartDate && cEndDate && tEndDate\n                    && (this._isInStartDateRange(cStartDate, tStartDate, tEndDate)\n                        || this._isInEndDateRange(cEndDate, tStartDate, tEndDate))) {\n                    if ((tStartDate.getTime() > cStartDate.getTime() && tStartDate.getTime() < cEndDate.getTime()\n                        && tEndDate.getTime() > cStartDate.getTime() && tEndDate.getTime() >= cEndDate.getTime())\n                        || (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() <= tEndDate.getTime())) {\n                        rangeObj_1.from = tStartDate;\n                        rangeObj_1.to = cEndDate;\n                    }\n                    else if (cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() > tEndDate.getTime()) {\n                        rangeObj_1.from = tStartDate;\n                        rangeObj_1.to = tEndDate;\n                    }\n                    else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime()) {\n                        rangeObj_1.from = cStartDate;\n                        rangeObj_1.to = tEndDate;\n                    }\n                    else if (cStartDate.getTime() > tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime()) {\n                        rangeObj_1.from = cStartDate;\n                        rangeObj_1.to = cEndDate;\n                    }\n                    range.push(rangeObj_1);\n                }\n            }\n            // eslint-disable-next-line\n            ranges.push.apply(ranges, this.mergeRangeCollections(range));\n        }\n        this.parent.setRecordValue('workTimelineRanges', this.mergeRangeCollections(ranges, true), resourceTask.ganttProperties, true);\n        this.calculateRangeLeftWidth(resourceTask.ganttProperties.workTimelineRanges);\n    };\n    /**\n     * @param {IGanttData[]} tasks .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateOverlappingIndex = function (tasks) {\n        for (var i = 0; i < tasks.length; i++) {\n            tasks[i].ganttProperties.eOverlapIndex = i;\n        }\n    };\n    /**\n     * Method to calculate the left and width value of oarlapping ranges\n     *\n     * @param {IWorkTimelineRanges[]} ranges .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.calculateRangeLeftWidth = function (ranges) {\n        for (var count = 0; count < ranges.length; count++) {\n            ranges[count].left = this.getTaskLeft(ranges[count].from, false);\n            ranges[count].width = this.getTaskWidth(ranges[count].from, ranges[count].to);\n        }\n    };\n    /**\n     * @param {IWorkTimelineRanges[]} ranges .\n     * @param {boolean} isSplit .\n     * @returns {IWorkTimelineRanges[]} .\n     * @private\n     */\n    TaskProcessor.prototype.mergeRangeCollections = function (ranges, isSplit) {\n        var finalRange = [];\n        var currentTopRange = {};\n        var cCompareRange = {};\n        var cStartDate;\n        var cEndDate;\n        var tStartDate;\n        var tEndDate;\n        var sortedRanges = new DataManager(ranges).executeLocal(new Query()\n            .sortBy(this.parent.taskFields.startDate, 'Ascending'));\n        for (var i = 0; i < sortedRanges.length; i++) {\n            if (finalRange.length === 0 && i === 0) {\n                finalRange.push(sortedRanges[i]);\n                continue;\n            }\n            currentTopRange = finalRange[finalRange.length - 1];\n            cStartDate = currentTopRange.from;\n            cEndDate = currentTopRange.to;\n            cCompareRange = sortedRanges[i];\n            tStartDate = cCompareRange.from;\n            tEndDate = cCompareRange.to;\n            if ((cStartDate.getTime() === tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime())\n                || (cStartDate.getTime() < tStartDate.getTime() && cEndDate.getTime() >= tEndDate.getTime())) {\n                continue;\n            }\n            /* eslint-disable-next-line */\n            else if ((cStartDate.getTime() <= tStartDate.getTime() && cEndDate.getTime() >= tStartDate.getTime() && cEndDate.getTime() < tEndDate.getTime())\n                || (cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() === tStartDate.getTime())) {\n                currentTopRange.to = tEndDate;\n            }\n            else if (cEndDate.getTime() < tStartDate.getTime() && this.checkStartDate(cEndDate).getTime() !== tStartDate.getTime()) {\n                finalRange.push(sortedRanges[i]);\n            }\n        }\n        if (isSplit) {\n            finalRange = this.splitRangeCollection(finalRange);\n        }\n        return finalRange;\n    };\n    /**\n     * Sort resource child records based on start date\n     *\n     * @param {IGanttData} resourceTask .\n     * @returns {IGanttData} .\n     * @private\n     */\n    TaskProcessor.prototype.setSortedChildTasks = function (resourceTask) {\n        var sortedRecords = [];\n        sortedRecords = new DataManager(resourceTask.childRecords).executeLocal(new Query()\n            .sortBy(this.parent.taskFields.startDate, 'Ascending'));\n        return sortedRecords;\n    };\n    TaskProcessor.prototype.splitRangeCollection = function (rangeCollection, fromField, toField) {\n        var splitArray = [];\n        var unit;\n        if (this.parent.timelineModule.isSingleTier) {\n            unit = this.parent.timelineModule.bottomTier !== 'None' ?\n                this.parent.timelineModule.bottomTier : this.parent.timelineModule.topTier;\n        }\n        else {\n            unit = this.parent.timelineModule.bottomTier;\n        }\n        if (unit === 'Week' || unit === 'Month' || unit === 'Year') {\n            splitArray = rangeCollection;\n        }\n        else if (unit === 'Day') {\n            splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n        }\n        else {\n            if (this.parent.workingTimeRanges[0].from === 0 && this.parent.workingTimeRanges[0].to === 86400) {\n                splitArray = this.getRangeWithWeek(rangeCollection, fromField, toField);\n            }\n            else {\n                splitArray = this.getRangeWithDay(rangeCollection, fromField, toField);\n            }\n        }\n        return splitArray;\n    };\n    TaskProcessor.prototype.getRangeWithDay = function (ranges, fromField, toField) {\n        var splitArray = [];\n        for (var i = 0; i < ranges.length; i++) {\n            splitArray.push.apply(splitArray, this.splitRangeForDayMode(ranges[parseInt(i.toString(), 10)], fromField, toField));\n        }\n        return splitArray;\n    };\n    TaskProcessor.prototype.splitRangeForDayMode = function (range, fromField, toField) {\n        var fromString = fromField ? fromField : 'from';\n        var toString = toField ? toField : 'to';\n        var tempStart = new Date(range[fromString]);\n        var end = new Date(range[toString]);\n        var ranges = [];\n        var rangeObject = {};\n        if (tempStart.getTime() < end.getTime()) {\n            do {\n                var nStart = new Date(tempStart.getTime());\n                var nEndDate = new Date(tempStart.getTime());\n                var nextAvailDuration = 0;\n                var sHour = this.parent.dataOperation.getSecondsInDecimal(tempStart);\n                var startRangeIndex = -1;\n                for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n                    var val = this.parent.workingTimeRanges[i];\n                    if (sHour >= val.from && sHour <= val.to) {\n                        startRangeIndex = i;\n                        break;\n                    }\n                }\n                if (startRangeIndex !== -1) {\n                    nextAvailDuration = Math.round(this.parent.workingTimeRanges[startRangeIndex].to - sHour);\n                    nEndDate.setSeconds(nEndDate.getSeconds() + nextAvailDuration);\n                }\n                var taskName = 'task';\n                if (nEndDate.getTime() < end.getTime()) {\n                    rangeObject = {};\n                    if (range.task) {\n                        rangeObject[taskName] = extend([], range.task);\n                    }\n                    rangeObject[fromString] = nStart;\n                    rangeObject[toString] = nEndDate;\n                    rangeObject.isSplit = true;\n                    ranges.push(rangeObject);\n                }\n                else {\n                    rangeObject = {};\n                    if (range.task) {\n                        rangeObject[taskName] = extend([], range.task);\n                    }\n                    rangeObject[fromString] = nStart;\n                    rangeObject[toString] = end;\n                    rangeObject.isSplit = true;\n                    ranges.push(rangeObject);\n                }\n                tempStart = this.checkStartDate(nEndDate);\n            } while (tempStart.getTime() < end.getTime());\n        }\n        else {\n            ranges.push(range);\n        }\n        return ranges;\n    };\n    TaskProcessor.prototype.getRangeWithWeek = function (ranges, fromField, toField) {\n        var splitArray = [];\n        for (var i = 0; i < ranges.length; i++) {\n            // eslint-disable-next-line\n            splitArray.push.apply(splitArray, this.splitRangeForWeekMode(ranges[i], fromField, toField));\n        }\n        return splitArray;\n    };\n    TaskProcessor.prototype.splitRangeForWeekMode = function (range, fromField, toField) {\n        var from = fromField ? fromField : 'from';\n        var to = toField ? toField : 'to';\n        var start = new Date(range[from]);\n        var tempStart = new Date(range[from]);\n        var end = new Date(range[to]);\n        var isInSplit = false;\n        var ranges = [];\n        var rangeObj = {};\n        tempStart.setDate(tempStart.getDate() + 1);\n        if (tempStart.getTime() < end.getTime()) {\n            do {\n                if (this.parent.dataOperation.isOnHolidayOrWeekEnd(tempStart, null)) {\n                    var tempEndDate = new Date(tempStart.getTime());\n                    tempEndDate.setDate(tempStart.getDate() - 1);\n                    var dayEndTime = void 0;\n                    if (this.parent.weekWorkingTime.length > 0) {\n                        dayEndTime = this.parent['getEndTime'](tempEndDate);\n                    }\n                    else {\n                        dayEndTime = this.parent.defaultEndTime;\n                    }\n                    this.setTime(dayEndTime, tempEndDate);\n                    rangeObj = {};\n                    rangeObj[from] = start;\n                    rangeObj.isSplit = true;\n                    rangeObj[to] = new Date(tempEndDate);\n                    if (range.task) {\n                        rangeObj.task = extend([], range.task, true);\n                    }\n                    var isStartNotHolidayOrWeekend = !this.parent.dataOperation.isOnHolidayOrWeekEnd(start, null);\n                    var isTempEndDateNotHolidayOrWeekend = !this.parent.dataOperation.isOnHolidayOrWeekEnd(tempEndDate, null);\n                    var isDifferentDates = start.getTime() !== tempEndDate.getTime();\n                    if (isStartNotHolidayOrWeekend && isTempEndDateNotHolidayOrWeekend && isDifferentDates) {\n                        ranges.push(rangeObj);\n                    }\n                    tempEndDate.setDate(tempEndDate.getDate() + 1);\n                    start = this.checkStartDate(tempEndDate);\n                    tempStart = new Date(start.getTime());\n                    isInSplit = true;\n                }\n                else {\n                    tempStart.setDate(tempStart.getDate() + 1);\n                }\n            } while (tempStart.getTime() < end.getTime());\n            if (isInSplit) {\n                if (start.getTime() !== end.getTime()) {\n                    rangeObj = {};\n                    if (range.task) {\n                        rangeObj.task = extend([], range.task, true);\n                    }\n                    rangeObj[from] = start;\n                    rangeObj[to] = end;\n                    rangeObj.isSplit = true;\n                    ranges.push(rangeObj);\n                }\n            }\n            else {\n                ranges.push(range);\n            }\n        }\n        else {\n            ranges.push(range);\n        }\n        return ranges;\n    };\n    /**\n     * Update all gantt data collection width, progress width and left value\n     *\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateGanttData = function () {\n        var flatData = this.parent.flatData;\n        var length = flatData.length;\n        this.systemTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        for (var i = 0; i < length; i++) {\n            var data = flatData[i];\n            this.updateTaskLeftWidth(data);\n        }\n    };\n    /**\n     * Update all gantt data collection width, progress width and left value\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @public\n     */\n    TaskProcessor.prototype.updateTaskLeftWidth = function (data) {\n        var task = data.ganttProperties;\n        if (!data.hasChildRecords || (!this.parent.autoCalculateDateScheduling || (this.parent.isLoad &&\n            this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping))) {\n            this.updateWidthLeft(data);\n        }\n        this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n        this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n        var childData = [];\n        var parentItem;\n        if (data.parentItem) {\n            parentItem = this.parent.getParentTask(data.parentItem);\n            childData = parentItem.childRecords;\n        }\n        if (parentItem && childData.indexOf(data) === childData.length - 1 && !data.hasChildRecords && this.parent.enableValidation) {\n            if ((this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n                this.parent.taskFields.hasChildMapping)) || this.parent.viewType === 'ResourceView') {\n                this.updateParentItems(parentItem);\n            }\n            if (!this.parent.autoCalculateDateScheduling || (this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n                this.parent.taskFields.hasChildMapping)) {\n                this.updateWidthLeft(parentItem);\n            }\n        }\n        else if (parentItem && !this.parent.enableValidation) {\n            this.updateWidthLeft(parentItem);\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.reUpdateGanttDataPosition = function () {\n        var flatData;\n        if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings\n            && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n            flatData = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'];\n        }\n        else {\n            flatData = this.parent.flatData;\n        }\n        var length = flatData.length;\n        for (var i = 0; i < length; i++) {\n            var data = flatData[i];\n            var task = data.ganttProperties;\n            this.updateWidthLeft(data);\n            if (this.parent.taskMode !== 'Auto' && data.hasChildRecords) {\n                this.updateAutoWidthLeft(data);\n            }\n            this.parent.setRecordValue('baselineLeft', this.calculateBaselineLeft(task), task, true);\n            this.parent.setRecordValue('baselineWidth', this.calculateBaselineWidth(task), task, true);\n            this.parent.dataOperation.updateTaskData(data);\n        }\n    };\n    /**\n     * method to update left, width, progress width in record\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateWidthLeft = function (data) {\n        var ganttRecord = data.ganttProperties;\n        var totalSegmentsProgressWidth = 0;\n        // task endDate may be changed in segment calculation so this must be calculated first.\n        // task width calculating was based on endDate\n        var progressResizer = 0;\n        if (!isNullOrUndefined(ganttRecord.segments) && ganttRecord.segments.length > 0) {\n            var segments = ganttRecord.segments;\n            for (var i = 0; i < segments.length; i++) {\n                var segment = segments[i];\n                if (i === 0 && !isNullOrUndefined(ganttRecord.startDate)\n                    && !isNullOrUndefined(segment.startDate) && !isNullOrUndefined(segment.startDate.getTime()) &&\n                    segment.startDate.getTime() !== ganttRecord.startDate.getTime()) {\n                    segment.startDate = ganttRecord.startDate;\n                    var endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttRecord.durationUnit, ganttRecord, false);\n                    segment.endDate = this.parent.dataOperation.checkEndDate(endDate, ganttRecord, false);\n                    this.parent.chartRowsModule.incrementSegments(segments, 0, data);\n                }\n                segment.width = this.getSplitTaskWidth(segment.startDate, segment.duration, data);\n                totalSegmentsProgressWidth = totalSegmentsProgressWidth + segment.width;\n                segment.showProgress = false;\n                segment.progressWidth = -1;\n                if (i !== 0) {\n                    var pStartDate = new Date(ganttRecord.startDate.getTime());\n                    segment.left = this.getSplitTaskLeft(segment.startDate, pStartDate);\n                }\n            }\n            var setProgress = this.parent.dataOperation.getProgressWidth(totalSegmentsProgressWidth, ganttRecord.progress);\n            var isValid = true;\n            for (var i = 0; i < segments.length; i++) {\n                if (isValid) {\n                    if (setProgress <= segments[i].width) {\n                        segments[i].progressWidth = setProgress;\n                        segments[i].showProgress = true;\n                        isValid = false;\n                    }\n                    else {\n                        segments[i].progressWidth = segments[i].width;\n                        setProgress = setProgress - segments[i].progressWidth;\n                    }\n                    if (segments[i].showProgress) {\n                        progressResizer = progressResizer + segments[i].left + segments[i].progressWidth;\n                    }\n                }\n            }\n            this.parent.setRecordValue('segments', ganttRecord.segments, ganttRecord, true);\n            this.parent.dataOperation.updateMappingData(data, 'segments');\n        }\n        this.parent.setRecordValue('width', this.parent.dataOperation.calculateWidth(data), ganttRecord, true);\n        this.parent.setRecordValue('left', this.parent.dataOperation.calculateLeft(ganttRecord), ganttRecord, true);\n        if (!isNullOrUndefined(ganttRecord.segments) && ganttRecord.segments.length > 0) {\n            this.parent.setRecordValue('progressWidth', progressResizer, ganttRecord, true);\n        }\n        else {\n            this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth((ganttRecord.isAutoSchedule || !data.hasChildRecords ? ganttRecord.width : ganttRecord.autoWidth), ganttRecord.progress), ganttRecord, true);\n        }\n    };\n    /**\n     * method to update left, width, progress width in record\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateAutoWidthLeft = function (data) {\n        var ganttRecord = data.ganttProperties;\n        this.parent.setRecordValue('autoWidth', this.calculateWidth(data, true), ganttRecord, true);\n        this.parent.setRecordValue('autoLeft', this.calculateLeft(ganttRecord, true), ganttRecord, true);\n        this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth((ganttRecord.isAutoSchedule ||\n            !data.hasChildRecords ? ganttRecord.width : ganttRecord.autoWidth), ganttRecord.progress), ganttRecord, true);\n    };\n    /**\n     * To calculate parent progress value\n     *\n     * @param {IGanttData} childGanttRecord .\n     * @returns {object} .\n     * @private\n     */\n    TaskProcessor.prototype.getParentProgress = function (childGanttRecord) {\n        var durationInDay = 0;\n        var progressValues = {};\n        var totSeconds;\n        if (this.parent.weekWorkingTime.length > 0) {\n            totSeconds = this.parent['getSecondsPerDay'](childGanttRecord.ganttProperties.startDate ? childGanttRecord.ganttProperties.startDate : childGanttRecord.ganttProperties.endDate);\n        }\n        else {\n            totSeconds = this.parent.secondsPerDay;\n        }\n        switch (childGanttRecord.ganttProperties.durationUnit) {\n            case 'hour':\n                durationInDay = (childGanttRecord.ganttProperties.duration / (totSeconds / 3600));\n                break;\n            case 'minute':\n                durationInDay = (childGanttRecord.ganttProperties.duration / (totSeconds / 60));\n                break;\n            default:\n                durationInDay = childGanttRecord.ganttProperties.duration;\n        }\n        if (childGanttRecord.hasChildRecords) {\n            setValue('totalProgress', childGanttRecord.ganttProperties.totalProgress, progressValues);\n            setValue('totalDuration', childGanttRecord.ganttProperties.totalDuration ? childGanttRecord.ganttProperties.totalDuration : 0, progressValues);\n        }\n        else {\n            setValue('totalProgress', childGanttRecord.ganttProperties.progress * durationInDay, progressValues);\n            setValue('totalDuration', durationInDay, progressValues);\n        }\n        return progressValues;\n    };\n    TaskProcessor.prototype.resetDependency = function (record) {\n        var dependency = this.parent.taskFields.dependency;\n        if (!isNullOrUndefined(dependency)) {\n            var recordProp = record.ganttProperties;\n            this.parent.setRecordValue('predecessor', [], recordProp, true);\n            this.parent.setRecordValue('predecessorsName', null, recordProp, true);\n            this.parent.setRecordValue('taskData.' + dependency, null, record);\n            this.parent.setRecordValue(dependency, null, record);\n        }\n    };\n    TaskProcessor.prototype.isUnscheduledTask = function (ganttProperties, parantData) {\n        var properties = ['startDate', 'endDate', 'duration'];\n        var count = 0;\n        var filledProperty = null;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            if (ganttProperties[prop]) {\n                count++;\n                filledProperty = prop;\n            }\n        }\n        if (count === 1 || (count === 0 && !isNullOrUndefined(parantData) && parantData.hasChildRecords)) {\n            return [true, filledProperty];\n        }\n        else {\n            return [false, null];\n        }\n    };\n    TaskProcessor.prototype.isFromManual = function (childData) {\n        if (this.parent.allowUnscheduledTasks && this.parent.editModule && this.parent['oldRecords'] && this.parent['oldRecords'].length > 0 &&\n            isNullOrUndefined(childData.ganttProperties.startDate) && isNullOrUndefined(childData.ganttProperties.endDate)\n            && !isNullOrUndefined(childData.ganttProperties.duration) && !childData.hasChildRecords && childData.parentItem &&\n            (this.parent.taskMode === 'Manual' || (this.parent.taskMode === 'Custom' && childData[this.parent.taskFields.manual]))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {IParent | IGanttData} cloneParent .\n     * @param {boolean} isParent .\n     * @returns {void} .\n     * @private\n     */\n    TaskProcessor.prototype.updateParentItems = function (cloneParent, isParent) {\n        var _this = this;\n        var parentData = isParent ? cloneParent : this.parent.getParentTask(cloneParent);\n        parentData = parentData ? parentData : cloneParent;\n        var deleteUpdate = false;\n        var ganttProp = !isNullOrUndefined(parentData) ? parentData.ganttProperties : null;\n        /* eslint-disable-next-line */\n        var _a = this.isUnscheduledTask(ganttProp, parentData), isParentUnschecule = _a[0], propertyWithValue = _a[1];\n        if ((this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n            this.parent.taskFields.hasChildMapping)) || this.parent.viewType === 'ResourceView') {\n            if (parentData && parentData.childRecords && parentData.childRecords.length > 0) {\n                var previousStartDate = ganttProp.isAutoSchedule ? ganttProp.startDate : ganttProp.autoStartDate;\n                var previousEndDate = ganttProp.isAutoSchedule ? ganttProp.endDate :\n                    ganttProp.autoEndDate;\n                var childRecords_1 = parentData.childRecords;\n                var childLength = childRecords_1.length;\n                var totalDuration = 0;\n                var progressValues = {};\n                var minStartDate = null;\n                var maxEndDate = null;\n                var milestoneCount = 0;\n                var totalProgress = 0;\n                var childCompletedWorks = 0;\n                var childData_1;\n                var countOfScheduled_1 = 0;\n                var countOfUnScheduled_1 = 0;\n                childRecords_1.some(function (childRecord) {\n                    var _a = _this.isUnscheduledTask(childRecord['ganttProperties']), isUnscheduled = _a[0], propertyWithValue = _a[1];\n                    if (isUnscheduled && propertyWithValue === 'duration') {\n                        ++countOfUnScheduled_1;\n                    }\n                    else if (!isUnscheduled) {\n                        ++countOfScheduled_1;\n                    }\n                    if (countOfScheduled_1 > 0 && countOfUnScheduled_1 > 0) {\n                        return true;\n                    }\n                    return false;\n                });\n                var isChildBoth = (countOfScheduled_1 > 0 && countOfUnScheduled_1 > 0) ? true : undefined;\n                var _loop_6 = function (count) {\n                    childData_1 = (this_4.parent.loadChildOnDemand && this_4.parent.taskFields.hasChildMapping) ?\n                        this_4.parent.currentViewData.filter(function (item) {\n                            return item.ganttProperties.taskId === childRecords_1[count][_this.parent.taskFields.id];\n                        })[0] :\n                        childRecords_1[count];\n                    if (this_4.parent.isOnDelete && childData_1.isDelete) {\n                        if (childLength === 1 && this_4.parent.viewType === 'ProjectView') {\n                            deleteUpdate = true;\n                        }\n                        return \"continue\";\n                    }\n                    var startDate = void 0;\n                    var endDate = void 0;\n                    var _a = this_4.isUnscheduledTask(childData_1.ganttProperties), isUnscheduled = _a[0], propertyWithValue_1 = _a[1];\n                    var parentRec = void 0;\n                    if (this_4.isFromManual(childData_1)) {\n                        var ganttRec = this_4.parent['oldRecords'].filter(function (record) { return record.ganttProperties.uniqueID === childData_1.ganttProperties.uniqueID; })[0];\n                        if (ganttRec) {\n                            parentRec = this_4.parent.getParentTask(ganttRec.parentItem);\n                        }\n                    }\n                    var rec = parentRec ? parentRec : childData_1;\n                    var prop = parentRec ? parentRec.ganttProperties : ganttProp;\n                    startDate = ((isUnscheduled && (propertyWithValue_1 !== 'startDate' && propertyWithValue_1 !== 'endDate')) && !isParentUnschecule) ?\n                        ganttProp.startDate : this_4.getValidStartDate(rec.ganttProperties);\n                    if (parentData.hasChildRecords && !prop.isAutoSchedule\n                        && !isNullOrUndefined(rec.ganttProperties.autoStartDate)) {\n                        startDate = rec.ganttProperties.autoStartDate;\n                    }\n                    endDate = ((isUnscheduled && (propertyWithValue_1 !== 'startDate' && propertyWithValue_1 !== 'endDate')) && !isParentUnschecule) ?\n                        ganttProp.endDate : this_4.getValidEndDate(rec.ganttProperties);\n                    if (parentData.hasChildRecords && !prop.isAutoSchedule\n                        && !isNullOrUndefined(rec.ganttProperties.autoEndDate)) {\n                        endDate = rec.ganttProperties.autoEndDate;\n                    }\n                    if (isNullOrUndefined(minStartDate) &&\n                        ((isChildBoth && !isUnscheduled) || (isNullOrUndefined(isChildBoth)))) {\n                        minStartDate = this_4.getDateFromFormat(startDate);\n                    }\n                    if (isNullOrUndefined(maxEndDate) &&\n                        ((isChildBoth && !isUnscheduled) || (isNullOrUndefined(isChildBoth)))) {\n                        maxEndDate = this_4.getDateFromFormat(endDate);\n                    }\n                    if (!isNullOrUndefined(endDate) && maxEndDate && this_4.compareDates(endDate, maxEndDate) === 1) {\n                        maxEndDate = this_4.getDateFromFormat(endDate);\n                    }\n                    if (!isNullOrUndefined(startDate) && minStartDate && this_4.compareDates(startDate, minStartDate) === -1) {\n                        minStartDate = this_4.getDateFromFormat(startDate);\n                    }\n                    var condition = (!childData_1.ganttProperties.isMilestone &&\n                        isScheduledTask(childData_1.ganttProperties)) ? true : false;\n                    if (condition) {\n                        progressValues = this_4.getParentProgress(childData_1);\n                        totalProgress += getValue('totalProgress', progressValues);\n                        if (childData_1[this_4.parent.taskFields.duration] < 1) {\n                            totalDuration += getValue('totalDuration', progressValues);\n                            totalDuration = Number(totalDuration.toFixed(4));\n                        }\n                        else {\n                            totalDuration += getValue('totalDuration', progressValues);\n                        }\n                    }\n                    else {\n                        milestoneCount++;\n                    }\n                    var work = childData_1.ganttProperties.work;\n                    if (typeof work === 'string') {\n                        // If it's a string, convert it to a number\n                        var numericValue = parseFloat(work);\n                        if (!isNaN(numericValue)) {\n                            childCompletedWorks += numericValue;\n                        }\n                    }\n                    else if (typeof work === 'number') {\n                        // If it's already a number, simply add it to childCompletedWorks\n                        childCompletedWorks += work;\n                    }\n                };\n                var this_4 = this;\n                for (var count = 0; count < childLength; count++) {\n                    _loop_6(count);\n                }\n                if (!deleteUpdate) {\n                    var taskCount = void 0;\n                    if (this.parent.isOnDelete && childData_1.isDelete) {\n                        taskCount = childLength - milestoneCount - 1;\n                    }\n                    else {\n                        taskCount = childLength - milestoneCount;\n                    }\n                    var parentProgress = (taskCount > 0 && totalDuration > 0) ?\n                        Number((totalProgress / totalDuration).toFixed(2)) : 0;\n                    var parentProp = parentData.ganttProperties;\n                    var milestone = (taskCount === 0) && minStartDate && maxEndDate &&\n                        minStartDate.getTime() === maxEndDate.getTime() ? true : false;\n                    if (this.compareDates(previousStartDate, minStartDate) !== 0) {\n                        this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'startDate' : 'autoStartDate', minStartDate, parentData.ganttProperties, true);\n                        if ((((!isNullOrUndefined(ganttProp.autoDuration)) ? ganttProp.autoDuration === 0 : ganttProp.duration === 0)) && parentData['isManual'] && milestone && (parentData.hasChildRecords && parentData.ganttProperties.isAutoSchedule && this.parent.editModule.taskbarEditModule.taskbarEditedArgs.action !== 'TaskbarEditing')) {\n                            this.parent.setRecordValue('startDate', minStartDate, parentData.ganttProperties, true);\n                        }\n                    }\n                    if (this.compareDates(previousEndDate, maxEndDate) !== 0) {\n                        this.parent.setRecordValue(ganttProp.isAutoSchedule ? 'endDate' : 'autoEndDate', maxEndDate, parentData.ganttProperties, true);\n                        if ((((!isNullOrUndefined(ganttProp.autoDuration)) ? ganttProp.autoDuration === 0 : ganttProp.duration === 0)) && parentData['isManual'] && milestone && (parentData.hasChildRecords && parentData.ganttProperties.isAutoSchedule && this.parent.editModule.taskbarEditModule.taskbarEditedArgs.action !== 'TaskbarEditing')) {\n                            this.parent.setRecordValue('endDate', maxEndDate, parentData.ganttProperties, true);\n                        }\n                    }\n                    this.parent.setRecordValue('isMilestone', milestone, parentProp, true);\n                    if (!isNullOrUndefined(this.parent.taskFields.milestone)) {\n                        this.updateMappingData(parentData, 'milestone');\n                        this.parent.setRecordValue(this.parent.taskFields.milestone, milestone, parentData, true);\n                        this.parent.setRecordValue('taskData.' + this.parent.taskFields.milestone, milestone, parentData, true);\n                    }\n                    if (parentProp.isAutoSchedule) {\n                        if (this.isFromManual(childData_1)) {\n                            if (parentData.childRecords.length === 1) {\n                                parentData.ganttProperties.duration = childData_1.ganttProperties.duration;\n                            }\n                            this.calculateEndDate(parentData);\n                        }\n                        else {\n                            this.calculateDuration(parentData);\n                        }\n                    }\n                    this.updateWorkWithDuration(parentData);\n                    var parentWork = parentProp.work;\n                    parentWork = this.parent.isOnEdit ? parentWork : (parentWork + childCompletedWorks);\n                    this.parent.setRecordValue('work', parentWork, parentProp, true);\n                    this.parent.setRecordValue('taskType', 'FixedDuration', parentProp, true);\n                    if (!isNullOrUndefined(this.parent.taskFields.type)) {\n                        this.updateMappingData(parentData, 'type');\n                    }\n                    this.parent.setRecordValue('progress', Math.floor(parentProgress), parentProp, true);\n                    this.parent.setRecordValue('totalProgress', totalProgress, parentProp, true);\n                    this.parent.setRecordValue('totalDuration', totalDuration, parentProp, true);\n                    this.parent.setRecordValue('autoDuration', parentProp.duration, parentProp, true);\n                    if (!parentProp.isAutoSchedule) {\n                        this.parent.setRecordValue('autoDuration', this.calculateAutoDuration(parentProp), parentProp, true);\n                        this.updateAutoWidthLeft(parentData);\n                    }\n                    if (!this.parent.allowParentDependency) {\n                        this.resetDependency(parentData);\n                    }\n                    this.updateWidthLeft(parentData);\n                    this.updateTaskData(parentData);\n                }\n            }\n        }\n        else {\n            this.parent.setRecordValue('endDate', parentData.taskData[this.parent.taskFields.endDate], parentData.ganttProperties, true);\n        }\n        if (deleteUpdate && parentData.childRecords.length === 1 && parentData.ganttProperties.duration === 0) {\n            this.parent.setRecordValue('isMilestone', true, parentData.ganttProperties, true);\n            this.updateWidthLeft(parentData);\n            this.updateTaskData(parentData);\n        }\n        var parentItem = !isNullOrUndefined(parentData) ?\n            this.parent.getParentTask(parentData.parentItem) : null;\n        if (parentItem) {\n            if ((this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n                this.parent.taskFields.hasChildMapping)) || this.parent.viewType === 'ResourceView') {\n                this.updateParentItems(parentItem);\n            }\n        }\n        deleteUpdate = false;\n    };\n    return TaskProcessor;\n}(DateProcessor));\nexport { TaskProcessor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}