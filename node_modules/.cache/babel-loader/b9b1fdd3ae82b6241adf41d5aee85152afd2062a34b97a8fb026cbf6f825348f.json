{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */function () {\n  /**\n   * Constructor for Selection module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function Selection(parent) {\n    this.parent = parent;\n    this.selectedItems = [];\n    this.selectedIndexes = [];\n    this.filteredList = [];\n    this.searchingRecords = [];\n    this.addEventListener();\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns Selection module name\n   */\n  Selection.prototype.getModuleName = function () {\n    return 'selection';\n  };\n  Selection.prototype.addEventListener = function () {\n    this.parent.on('dataBoundArg', this.headerCheckbox, this);\n    this.parent.on('columnCheckbox', this.columnCheckbox, this);\n    this.parent.on('updateGridActions', this.updateGridActions, this);\n    this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n    this.parent.on('checkboxSelection', this.checkboxSelection, this);\n  };\n  Selection.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off('dataBoundArg', this.headerCheckbox);\n    this.parent.off('columnCheckbox', this.columnCheckbox);\n    this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n    this.parent.off('checkboxSelection', this.checkboxSelection);\n    this.parent.off('updateGridActions', this.updateGridActions);\n  };\n  /**\n   * To destroy the Selection\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Selection.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  Selection.prototype.checkboxSelection = function (args) {\n    var _a;\n    var target = getObject('target', args);\n    var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n    var checkBox;\n    if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      var rowIndex = [];\n      rowIndex.push(target.closest('tr').rowIndex);\n      this.selectCheckboxes(rowIndex);\n      this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n    } else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n      var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check') && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n      this.headerSelection(checkBoxvalue);\n      checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n      this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n    }\n    if (!isNullOrUndefined(this.parent['parentQuery']) && this.parent.selectionSettings.persistSelection && this.parent['columnModel'].filter(function (col) {\n      return col.type === 'checkbox';\n    }).length > 0 && isRemoteData(this.parent)) {\n      if (this.parent['parentQuery'].length > 0) {\n        (_a = this.parent.query.queries).push.apply(_a, this.parent['parentQuery']);\n        this.parent['parentQuery'] = [];\n      }\n    }\n  };\n  Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n    var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n    var args = {\n      checked: checkState,\n      target: checkBox,\n      rowElement: rowElement,\n      rowData: checkBox.classList.contains('e-treeselectall') ? this.parent.getCheckedRecords() : data\n    };\n    this.parent.trigger(events.checkboxChange, args);\n  };\n  Selection.prototype.getCheckboxcolumnIndex = function () {\n    var mappingUid;\n    var columnIndex;\n    var stackedHeader = 'stackedHeader';\n    var columnModel = 'columnModel';\n    var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : this.parent.columns;\n    for (var col = 0; col < columns.length; col++) {\n      if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n        mappingUid = columns[parseInt(col.toString(), 10)].uid;\n      }\n    }\n    var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n    for (var j = 0; j < headerCelllength; j++) {\n      var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n      if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n        columnIndex = j;\n      }\n    }\n    return columnIndex;\n  };\n  Selection.prototype.headerCheckbox = function () {\n    this.columnIndex = this.getCheckboxcolumnIndex();\n    if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n      var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n      var value = false;\n      var rowChkBox = this.parent.createElement('input', {\n        className: 'e-treeselectall',\n        attrs: {\n          'type': 'checkbox'\n        }\n      });\n      var checkWrap = createCheckBox(this.parent.createElement, false, {\n        checked: value,\n        label: ' '\n      });\n      checkWrap.classList.add('e-hierarchycheckbox');\n      checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n      if (!isNullOrUndefined(headerElement)) {\n        headerElement.insertBefore(checkWrap, headerElement.firstChild);\n      }\n      if (this.parent.autoCheckHierarchy) {\n        this.headerSelection();\n      }\n    } else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n      var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n      var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n      if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n        this.headerSelection(checkBoxvalue);\n      }\n    }\n  };\n  Selection.prototype.renderColumnCheckbox = function (args) {\n    var rowChkBox = this.parent.createElement('input', {\n      className: 'e-treecheckselect',\n      attrs: {\n        'type': 'checkbox',\n        'aria-label': 'checkbox'\n      }\n    });\n    var data = args.data;\n    args.cell.classList.add('e-treegridcheckbox');\n    args.cell.setAttribute('aria-label', 'checkbox');\n    var value = isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck' ? false : true;\n    var checkWrap = createCheckBox(this.parent.createElement, false, {\n      checked: value,\n      label: ' '\n    });\n    checkWrap.classList.add('e-hierarchycheckbox');\n    if (this.parent.allowTextWrap) {\n      checkWrap.querySelector('.e-frame').style.width = '18px';\n    }\n    if (data.checkboxState === 'indeterminate') {\n      var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n      removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n      checkWrap.querySelector('.e-frame').classList.add('e-stop');\n    }\n    checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n    return checkWrap;\n  };\n  Selection.prototype.columnCheckbox = function (container) {\n    var checkWrap = this.renderColumnCheckbox(container);\n    var containerELe = container.cell.querySelector('.e-treecolumn-container');\n    if (!isNullOrUndefined(containerELe)) {\n      if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n        containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n      }\n    } else {\n      var spanEle = this.parent.createElement('span', {\n        className: 'e-treecheckbox'\n      });\n      var data = container.cell.innerHTML;\n      container.cell.innerHTML = '';\n      spanEle.innerHTML = data;\n      var divEle = this.parent.createElement('div', {\n        className: 'e-treecheckbox-container'\n      });\n      divEle.appendChild(checkWrap);\n      divEle.appendChild(spanEle);\n      container.cell.appendChild(divEle);\n    }\n  };\n  Selection.prototype.selectCheckboxes = function (rowIndexes) {\n    if (isNullOrUndefined(rowIndexes)) {\n      var error = 'The provided value for the rowIndexes is undefined. Please ensure the rowIndexes contains number.';\n      this.parent.trigger(events.actionFailure, {\n        error: error\n      });\n    }\n    for (var i = 0; i < rowIndexes.length; i++) {\n      var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n      var flatRecord = getParentData(this.parent, record.uniqueID);\n      record = flatRecord;\n      var checkboxState = record.checkboxState === 'uncheck' ? 'check' : 'uncheck';\n      record.checkboxState = checkboxState;\n      var keys = Object.keys(record);\n      for (var j = 0; j < keys.length; j++) {\n        if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n          flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n        }\n      }\n      this.traverSelection(record, checkboxState, false);\n      if (this.parent.autoCheckHierarchy) {\n        this.headerSelection();\n      }\n    }\n  };\n  Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n    var length = 0;\n    this.updateSelectedItems(record, checkboxState);\n    if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n      this.updateParentSelection(record.parentItem);\n    }\n    if (record.childRecords && this.parent.autoCheckHierarchy) {\n      var childRecords = record.childRecords;\n      if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n        childRecords = this.getFilteredChildRecords(childRecords);\n      }\n      length = childRecords.length;\n      for (var count = 0; count < length; count++) {\n        if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n          if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n            this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n          } else {\n            this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n          }\n        }\n      }\n    }\n  };\n  Selection.prototype.getFilteredChildRecords = function (childRecords) {\n    var _this = this;\n    var filteredChildRecords = childRecords.filter(function (e) {\n      return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n    });\n    return filteredChildRecords;\n  };\n  Selection.prototype.updateParentSelection = function (parentRecord) {\n    var length = 0;\n    var childRecords = [];\n    var record = getParentData(this.parent, parentRecord.uniqueID);\n    if (record && record.childRecords) {\n      childRecords = record.childRecords;\n    }\n    if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n      childRecords = this.getFilteredChildRecords(childRecords);\n    }\n    length = childRecords && childRecords.length;\n    var indeter = 0;\n    var checkChildRecords = 0;\n    if (!isNullOrUndefined(record)) {\n      for (var i = 0; i < childRecords.length; i++) {\n        var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n        var checkBoxRecord = currentRecord;\n        if (!isNullOrUndefined(checkBoxRecord)) {\n          if (checkBoxRecord.checkboxState === 'indeterminate') {\n            indeter++;\n          } else if (checkBoxRecord.checkboxState === 'check') {\n            checkChildRecords++;\n          }\n        }\n      }\n      if (indeter > 0 || checkChildRecords > 0 && checkChildRecords !== length) {\n        record.checkboxState = 'indeterminate';\n      } else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) && (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n        record.checkboxState = 'check';\n      } else if (checkChildRecords === 0 && indeter === 0 || checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) && (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n        record.checkboxState = 'uncheck';\n      } else {\n        record.checkboxState = 'check';\n      }\n      this.updateSelectedItems(record, record.checkboxState);\n      if (record.parentItem) {\n        this.updateParentSelection(record.parentItem);\n      }\n    }\n  };\n  Selection.prototype.headerSelection = function (checkAll) {\n    var _this = this;\n    var index = -1;\n    var length = 0;\n    //This property used to maintain the check state of the currentview data after clear filtering\n    var multiFilterCheckState = false;\n    if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n      var filterResult = this.parent.filterModule.filteredResult;\n      if (this.filteredList.length === 0) {\n        this.filteredList = filterResult;\n      }\n      if (this.parent.grid.searchSettings.key.length) {\n        this.searchingRecords = filterResult;\n      } else {\n        if (this.filteredList !== filterResult) {\n          this.filteredList = filterResult;\n          multiFilterCheckState = true;\n        } else {\n          multiFilterCheckState = false;\n        }\n      }\n    }\n    if (this.filteredList.length > 0) {\n      if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n        this.filteredList = [];\n      }\n      if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n        this.filteredList = this.searchingRecords;\n      }\n    }\n    var data;\n    if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 && this.parent.filterSettings.columns.length > 0) {\n      data = this.filteredList;\n    } else {\n      data = !isNullOrUndefined(this.parent.filterModule) && this.filteredList.length > 0 ? this.filteredList : this.parent.flatData;\n    }\n    data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n    if (!isNullOrUndefined(checkAll)) {\n      for (var i = 0; i < data.length; i++) {\n        if (checkAll) {\n          if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n            continue;\n          }\n          if (multiFilterCheckState) {\n            continue;\n          }\n          data[parseInt(i.toString(), 10)].checkboxState = 'check';\n          this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n        } else {\n          index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n          if (index > -1) {\n            data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n            this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n            if (this.parent.autoCheckHierarchy) {\n              this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n            }\n          }\n        }\n      }\n    }\n    if (checkAll === false && this.parent.enableVirtualization) {\n      this.selectedItems = [];\n      this.selectedIndexes = [];\n      data.filter(function (rec) {\n        rec.checkboxState = 'uncheck';\n        _this.updateSelectedItems(rec, rec.checkboxState);\n      });\n    }\n    length = this.selectedItems.length;\n    var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n    if (length > 0 && data.length > 0) {\n      if (length !== data.length && !checkAll) {\n        removeClass([checkbox], ['e-check']);\n        checkbox.classList.add('e-stop');\n      } else {\n        removeClass([checkbox], ['e-stop']);\n        checkbox.classList.add('e-check');\n      }\n    } else {\n      removeClass([checkbox], ['e-check', 'e-stop']);\n    }\n  };\n  Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n    var record = this.parent.grid.currentViewData.filter(function (e) {\n      return e.uniqueID === currentRecord.uniqueID;\n    });\n    var checkedRecord;\n    var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n    var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n    var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n    var checkbox;\n    if (recordIndex > -1) {\n      var movableTr = void 0;\n      if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n        movableTr = this.parent.getDataRows()[parseInt(recordIndex.toString(), 10)];\n      }\n      checkbox = tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0] ? tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0] : movableTr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0];\n      if (!isNullOrUndefined(checkbox)) {\n        removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n      }\n    }\n    checkedRecord = checkboxRecord;\n    if (isNullOrUndefined(checkedRecord)) {\n      checkedRecord = currentRecord;\n    }\n    checkedRecord.checkboxState = checkState;\n    if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n      if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n        this.selectedIndexes.push(recordIndex);\n      }\n      if (this.selectedItems.indexOf(checkedRecord) === -1 && recordIndex !== -1 && !isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n        this.selectedItems.push(checkedRecord);\n      }\n      if (this.selectedItems.indexOf(checkedRecord) === -1 && (this.parent.enableVirtualization || this.parent.allowPaging) && !isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n        this.selectedItems.push(checkedRecord);\n      }\n      if (this.selectedItems.indexOf(checkedRecord) === -1 && !isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length === 0) {\n        this.selectedItems.push(checkedRecord);\n      }\n      if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n        this.selectedItems.push(checkedRecord);\n      }\n    } else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n      var index = this.selectedItems.indexOf(checkedRecord);\n      if (index !== -1) {\n        this.selectedItems.splice(index, 1);\n      }\n      if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n        var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n        this.selectedIndexes.splice(checkedIndex, 1);\n      }\n    }\n    var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n    if (recordIndex > -1) {\n      if (!isNullOrUndefined(checkbox)) {\n        checkbox.classList.add(checkBoxclass);\n        tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n      }\n    }\n  };\n  Selection.prototype.updateGridActions = function (args) {\n    var _this = this;\n    var requestType = args.requestType;\n    var childData;\n    var childLength;\n    if (isCheckboxcolumn(this.parent)) {\n      if (this.parent.autoCheckHierarchy) {\n        if (requestType === 'sorting' || requestType === 'paging') {\n          var rows = this.parent.grid.getRows();\n          childData = this.parent.getCurrentViewRecords();\n          childLength = childData.length;\n          this.selectedIndexes = [];\n          for (var i = 0; i < childLength; i++) {\n            if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n              this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n            }\n          }\n        } else if (requestType === 'delete' || args.action === 'add') {\n          var updatedData = [];\n          if (requestType === 'delete') {\n            updatedData = args.data;\n          } else {\n            updatedData.push(args.data);\n          }\n          for (var i = 0; i < updatedData.length; i++) {\n            if (requestType === 'delete') {\n              var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n              var checkedIndex = this.selectedIndexes.indexOf(index);\n              this.selectedIndexes.splice(checkedIndex, 1);\n              this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n            }\n            if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n              this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n            }\n          }\n        } else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n          args.data.checkboxState = 'uncheck';\n        } else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh' && !isRemoteData(this.parent)) {\n          this.selectedItems = [];\n          this.selectedIndexes = [];\n          childData = !isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0 ? this.parent.filterModule.filteredResult : this.parent.flatData;\n          childData.forEach(function (record) {\n            if (_this.parent.enableVirtualization) {\n              if (record.hasChildRecords && record.childRecords.length > 0) {\n                _this.updateParentSelection(record);\n              } else {\n                _this.updateSelectedItems(record, record.checkboxState);\n              }\n              var child = findChildrenRecords(record);\n              child = _this.getFilteredChildRecords(child);\n              for (var i = 0; i < child.length; i++) {\n                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                  _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                } else if (!child[parseInt(i.toString(), 10)].hasChildRecords && !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                  _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                }\n              }\n            } else {\n              if (record.hasChildRecords) {\n                _this.updateParentSelection(record);\n              } else {\n                _this.updateSelectedItems(record, record.checkboxState);\n              }\n            }\n          });\n          this.headerSelection();\n        }\n      }\n    }\n  };\n  Selection.prototype.getCheckedrecords = function () {\n    return this.selectedItems;\n  };\n  Selection.prototype.getCheckedRowIndexes = function () {\n    return this.selectedIndexes;\n  };\n  return Selection;\n}();\nexport { Selection };","map":{"version":3,"names":["isNullOrUndefined","removeClass","createCheckBox","parentsUntil","getObject","events","getParentData","isRemoteData","isCheckboxcolumn","findChildrenRecords","Selection","parent","selectedItems","selectedIndexes","filteredList","searchingRecords","addEventListener","prototype","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","grid","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","_a","target","checkWrap","checkBox","querySelectorAll","length","querySelector","rowIndex","push","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","selectionSettings","persistSelection","filter","col","type","query","queries","apply","checkState","rowElement","data","getCurrentViewRecords","checked","rowData","getCheckedRecords","trigger","checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","stackedHeader","columnModel","columns","parseInt","toString","showCheckbox","uid","headerCelllength","getHeaderContent","j","headercell","getAttribute","headerElement","value","rowChkBox","createElement","className","attrs","label","add","insertBefore","cloneNode","firstChild","renderColumnCheckbox","cell","setAttribute","checkboxState","allowTextWrap","style","width","checkbox","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","error","actionFailure","i","record","flatRecord","uniqueID","keys","Object","hasOwnProperty","call","traverSelection","ischildItem","updateSelectedItems","parentItem","updateParentSelection","childRecords","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","hasChildRecords","_this","filteredChildRecords","e","indexOf","parentRecord","indeter","checkChildRecords","currentRecord","checkBoxRecord","hasFilteredChildRecords","requestType","checkAll","index","multiFilterCheckState","filterResult","searchSettings","key","filterSettings","flatData","enableVirtualization","rec","currentViewData","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","frozenRows","getFrozenColumns","getDataRows","allowPaging","splice","checkedIndex","checkBoxclass","childData","childLength","rows","action","updatedData","forEach","child","getCheckedrecords","getCheckedRowIndexes"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/selection.js"],"sourcesContent":["import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn, findChildrenRecords } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.filteredList = [];\n        this.searchingRecords = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var _a;\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n        if (!isNullOrUndefined(this.parent['parentQuery']) && this.parent.selectionSettings.persistSelection\n            && this.parent['columnModel'].filter(function (col) { return col.type === 'checkbox'; }).length > 0\n            && isRemoteData(this.parent)) {\n            if (this.parent['parentQuery'].length > 0) {\n                (_a = this.parent.query.queries).push.apply(_a, this.parent['parentQuery']);\n                this.parent['parentQuery'] = [];\n            }\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var stackedHeader = 'stackedHeader';\n        var columnModel = 'columnModel';\n        var columns = this.parent[\"\" + stackedHeader] ? this.parent[\"\" + columnModel] : (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[parseInt(col.toString(), 10)].showCheckbox) {\n                mappingUid = columns[parseInt(col.toString(), 10)].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[parseInt(j.toString(), 10)];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox', 'aria-label': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        if (this.parent.allowTextWrap) {\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n        }\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        if (isNullOrUndefined(rowIndexes)) {\n            var error = 'The provided value for the rowIndexes is undefined. Please ensure the rowIndexes contains number.';\n            this.parent.trigger(events.actionFailure, { error: error });\n        }\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[parseInt(i.toString(), 10)]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[parseInt(j.toString(), 10)])) {\n                    flatRecord[keys[parseInt(j.toString(), 10)]] = record[keys[parseInt(j.toString(), 10)]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[parseInt(count.toString(), 10)].isSummaryRow) {\n                    if (childRecords[parseInt(count.toString(), 10)].hasChildRecords) {\n                        this.traverSelection(childRecords[parseInt(count.toString(), 10)], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[parseInt(count.toString(), 10)], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[parseInt(i.toString(), 10)].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && (!record.hasFilteredChildRecords || isNullOrUndefined(record.hasFilteredChildRecords)) && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check') {\n                record.checkboxState = 'check';\n            }\n            else if ((checkChildRecords === 0 && indeter === 0) || (checkChildRecords === 0 && record.hasFilteredChildRecords && !isNullOrUndefined(this.parent['dataResults']['actionArgs']) &&\n                (this.parent['dataResults']['actionArgs'].requestType === 'searching' || this.parent['dataResults']['actionArgs'].requestType === 'filtering') && record.checkboxState === 'check')) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        //This property used to maintain the check state of the currentview data after clear filtering\n        var multiFilterCheckState = false;\n        if (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) {\n            var filterResult = this.parent.filterModule.filteredResult;\n            if (this.filteredList.length === 0) {\n                this.filteredList = filterResult;\n            }\n            if (this.parent.grid.searchSettings.key.length) {\n                this.searchingRecords = filterResult;\n            }\n            else {\n                if (this.filteredList !== filterResult) {\n                    this.filteredList = filterResult;\n                    multiFilterCheckState = true;\n                }\n                else {\n                    multiFilterCheckState = false;\n                }\n            }\n        }\n        if (this.filteredList.length > 0) {\n            if (!this.parent.filterSettings.columns.length && this.filteredList.length && !this.parent.grid.searchSettings.key.length) {\n                this.filteredList = [];\n            }\n            if (this.searchingRecords.length && !isNullOrUndefined(checkAll)) {\n                this.filteredList = this.searchingRecords;\n            }\n        }\n        var data;\n        if (!(isNullOrUndefined(this.parent.filterModule)) &&\n            this.parent.filterModule.filteredResult.length === 0 && this.parent.getCurrentViewRecords().length === 0 &&\n            this.parent.filterSettings.columns.length > 0) {\n            data = this.filteredList;\n        }\n        else {\n            data = (!isNullOrUndefined(this.parent.filterModule) &&\n                (this.filteredList.length > 0)) ? this.filteredList : this.parent.flatData;\n        }\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[parseInt(i.toString(), 10)].checkboxState === 'check') {\n                        continue;\n                    }\n                    if (multiFilterCheckState) {\n                        continue;\n                    }\n                    data[parseInt(i.toString(), 10)].checkboxState = 'check';\n                    this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[parseInt(i.toString(), 10)]);\n                    if (index > -1) {\n                        data[parseInt(i.toString(), 10)].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[parseInt(i.toString(), 10)], data[parseInt(i.toString(), 10)].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[parseInt(i.toString(), 10)]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.grid.currentViewData.filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.grid.currentViewData.indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var tr = this.parent.getRows()[parseInt(recordIndex.toString(), 10)];\n        var checkbox;\n        if (recordIndex > -1) {\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getDataRows()[parseInt(recordIndex.toString(), 10)];\n            }\n            checkbox = tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0] ? tr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0]\n                : movableTr.querySelectorAll('.e-hierarchycheckbox .e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (this.parent.enableVirtualization || this.parent.allowPaging) && ((!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n                tr.querySelector('.e-treecheckselect').setAttribute('aria-checked', checkState === 'check' ? 'true' : checkState === 'uncheck' ? 'false' : 'mixed');\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[parseInt(i.toString(), 10)].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[parseInt(i.toString(), 10)], childData[parseInt(i.toString(), 10)].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[parseInt(i.toString(), 10)]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[parseInt(i.toString(), 10)], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[parseInt(i.toString(), 10)].parentItem)) {\n                            this.updateParentSelection(updatedData[parseInt(i.toString(), 10)].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.filterModule.filteredResult : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (_this.parent.enableVirtualization) {\n                            if (record.hasChildRecords && record.childRecords.length > 0) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                            var child = findChildrenRecords(record);\n                            child = _this.getFilteredChildRecords(child);\n                            for (var i = 0; i < child.length; i++) {\n                                if (child[parseInt(i.toString(), 10)].hasChildRecords) {\n                                    _this.updateParentSelection(child[parseInt(i.toString(), 10)]);\n                                }\n                                else if (!(child[parseInt(i.toString(), 10)].hasChildRecords) &&\n                                    !isNullOrUndefined(child[parseInt(i.toString(), 10)])) {\n                                    _this.updateSelectedItems(child[parseInt(i.toString(), 10)], child[parseInt(i.toString(), 10)].checkboxState);\n                                }\n                            }\n                        }\n                        else {\n                            if (record.hasChildRecords) {\n                                _this.updateParentSelection(record);\n                            }\n                            else {\n                                _this.updateSelectedItems(record, record.checkboxState);\n                            }\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}