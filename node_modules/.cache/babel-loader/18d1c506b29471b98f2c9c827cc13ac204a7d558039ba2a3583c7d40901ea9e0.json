{"ast":null,"code":"import { isNullOrUndefined, getValue, removeClass } from '@syncfusion/ej2-base';\n/**\n * Focus module is used to handle certain action on focus elements in keyboard navigations.\n */\nvar FocusModule = /** @class */function () {\n  function FocusModule(parent) {\n    this.parent = parent;\n    this.activeElement = null;\n    this.previousActiveElement = null;\n  }\n  FocusModule.prototype.getActiveElement = function (isPreviousActiveElement) {\n    return isPreviousActiveElement ? this.previousActiveElement : this.activeElement;\n  };\n  FocusModule.prototype.setActiveElement = function (element) {\n    this.previousActiveElement = this.activeElement;\n    this.activeElement = element;\n  };\n  /**\n   * To perform key interaction in Gantt\n   *\n   * @param {KeyboardEventArgs} e .\n   * @returns {void} .\n   * @private\n   */\n  FocusModule.prototype.onKeyPress = function (e) {\n    var ganttObj = this.parent;\n    var ele = e.target;\n    var expandedRecords = ganttObj.getExpandedRecords(ganttObj.currentViewData);\n    if (isNullOrUndefined(this.parent.focusModule.getActiveElement()) && (e.action === 'expandAll' || e.action === 'collapseAll')) {\n      var focussedElement = this.parent.element.querySelector('.e-treegrid');\n      focussedElement.focus();\n    }\n    if (!this.parent.isEdit && !isNullOrUndefined(ele) && ele.closest('.e-headercell') && e.key === 'Enter' && this.parent.sortModule && this.parent.allowSorting) {\n      e.action = 'enter';\n      this.parent.treeGrid.grid.notify('key-pressed', e);\n    }\n    var targetElement = this.parent.focusModule.getActiveElement();\n    if (e.action === 'home' || e.action === 'end' || e.action === 'downArrow' || e.action === 'upArrow' || e.action === 'delete' || e.action === 'rightArrow' || e.action === 'leftArrow' || e.action === 'focusTask' || e.action === 'focusSearch' || e.action === 'expandAll' || e.action === 'collapseAll' || e.action === 'undo' || e.action === 'redo' || e.action === 'selectAll') {\n      if (!isNullOrUndefined(ganttObj.editModule) && !isNullOrUndefined(ganttObj.editModule.cellEditModule) && ganttObj.editModule.cellEditModule.isCellEdit === true) {\n        return;\n      }\n    }\n    if (ganttObj.isAdaptive) {\n      if (e.action === 'addRowDialog' || e.action === 'editRowDialog' || e.action === 'delete' || e.action === 'addRow') {\n        if (ganttObj.selectionModule && ganttObj.selectionSettings.type === 'Multiple') {\n          ganttObj.selectionModule.hidePopUp();\n          document.getElementsByClassName('e-gridpopup')[0].style.display = 'none';\n        }\n      }\n    }\n    switch (e.action) {\n      case 'home':\n        if (ganttObj.selectionModule && ganttObj.selectionSettings.mode !== 'Cell') {\n          if (ganttObj.selectedRowIndex === 0) {\n            return;\n          }\n          if (ganttObj.selectionModule && ganttObj.selectionModule.getCellSelectedRecords().length === 0) {\n            ganttObj.selectionModule.selectRow(0, false, true);\n          }\n        }\n        break;\n      case 'end':\n        if (ganttObj.selectionModule && ganttObj.selectionSettings.mode !== 'Cell') {\n          var currentSelectingRecord = expandedRecords[expandedRecords.length - 1];\n          if (ganttObj.selectedRowIndex === ganttObj.flatData.indexOf(currentSelectingRecord)) {\n            return;\n          }\n          if (ganttObj.selectionModule && ganttObj.selectionModule.getCellSelectedRecords().length === 0) {\n            ganttObj.selectionModule.selectRow(ganttObj.flatData.indexOf(currentSelectingRecord), false, true);\n          }\n        }\n        break;\n      case 'downArrow':\n      case 'upArrow':\n        {\n          var searchElement = ganttObj.element.querySelector('#' + ganttObj.element.id + '_searchbar');\n          if (searchElement && searchElement.parentElement.classList.contains('e-input-focus')) {\n            ganttObj.selectionModule.clearSelection();\n          }\n          if (!ganttObj.element.classList.contains('e-scroll-disabled')) {\n            this.upDownKeyNavigate(e);\n            if (!isNullOrUndefined(targetElement) && !isNullOrUndefined(targetElement.closest('.e-chart-row'))) {\n              ganttObj.ganttChartModule.manageFocus(this.getActiveElement(), 'remove', true, e.action);\n            }\n            if (ganttObj.selectionSettings && ganttObj.selectionSettings.mode === 'Both' && e.target instanceof HTMLElement && e.target.classList.contains('e-cellselectionbackground')) {\n              e.target.classList.remove('e-cellselectionbackground');\n            }\n          }\n          break;\n        }\n      case 'expandAll':\n        ganttObj.ganttChartModule.expandCollapseAll('expand');\n        break;\n      case 'collapseAll':\n        ganttObj.ganttChartModule.expandCollapseAll('collapse');\n        break;\n      case 'expandRow':\n      case 'collapseRow':\n        this.expandCollapseKey(e);\n        break;\n      case 'saveRequest':\n        if (!isNullOrUndefined(ganttObj.editModule) && !isNullOrUndefined(ganttObj.editModule.cellEditModule) && ganttObj.editModule.cellEditModule.isCellEdit) {\n          var col = ganttObj.editModule.cellEditModule.editedColumn;\n          if (col.field === ganttObj.columnMapping.duration && !isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read)) {\n            var textBox = e.target.ej2_instances[0];\n            var textValue = e.target.value;\n            // const ganttProp: ITaskData = ganttObj.currentViewData[ganttObj.selectedRowIndex].ganttProperties;\n            var tempValue = void 0;\n            if (col.field === ganttObj.columnMapping.duration) {\n              // tempValue = !isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read) ? (col.edit.read as Function)() :\n              //     // eslint-disable-next-line\n              //     !isNullOrUndefined(col.valueAccessor) ? (col.valueAccessor as Function)(ganttObj.columnMapping.duration, ganttObj.editedRecords, col) :\n              //         ganttObj.dataOperation.getDurationString(ganttProp.duration, ganttProp.durationUnit);\n              if (!isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read)) {\n                tempValue = col.edit.read();\n              }\n              if (textValue !== tempValue.toString()) {\n                textBox.value = textValue;\n                textBox.dataBind();\n              }\n            }\n          }\n          if (ganttObj.editModule.dialogModule.dialogObj && getValue('dialogOpen', ganttObj.editModule.dialogModule.dialogObj)) {\n            return;\n          }\n          ganttObj.treeGrid.grid.saveCell();\n          var focussedElement = ganttObj.element.querySelector('.e-treegrid');\n          focussedElement.focus();\n        }\n        // if (!isNullOrUndefined(this.parent.onTaskbarClick) && !isNullOrUndefined(targetElement)\n        //     && !isNullOrUndefined(targetElement.closest('.e-chart-row'))) {\n        //     const target: EventTarget = e.target;\n        //     const taskbarElement: Element = targetElement.querySelector('.e-gantt-parent-taskbar,' +\n        //             '.e-gantt-child-taskbar,.e-gantt-milestone');\n        //     if (taskbarElement) {\n        //         this.parent.ganttChartModule.onTaskbarClick(e, target, taskbarElement);\n        //     }\n        // }\n        if (!isNullOrUndefined(targetElement) && !isNullOrUndefined(targetElement.closest('.e-chart-row'))) {\n          var target = e.target;\n          var taskbarElement = targetElement.querySelector('.e-gantt-parent-taskbar,' + '.e-gantt-child-taskbar,.e-gantt-milestone');\n          if (taskbarElement) {\n            this.parent.ganttChartModule.onTaskbarClick(e, target, taskbarElement);\n          }\n        }\n        break;\n      case 'cancelRequest':\n        if (!isNullOrUndefined(ganttObj.editModule) && !isNullOrUndefined(ganttObj.editModule.cellEditModule)) {\n          ganttObj.editModule.cellEditModule.isCellEdit = false;\n          if (!isNullOrUndefined(ganttObj.toolbarModule)) {\n            ganttObj.toolbarModule.refreshToolbarItems();\n          }\n        }\n        break;\n      case 'addRow':\n        {\n          if (ganttObj.editModule && ganttObj.editModule.cellEditModule && ganttObj.editModule.cellEditModule.isCellEdit) {\n            e.stopPropagation();\n          } else if (isNullOrUndefined(document.getElementById(this.parent.element.id + '_dialog'))) {\n            e.preventDefault();\n            ganttObj.addRecord(undefined, this.parent.editSettings.newRowPosition, this.parent.selectedRowIndex);\n            var focussedElement = ganttObj.element;\n            focussedElement.focus();\n          }\n          break;\n        }\n      case 'addRowDialog':\n        e.preventDefault();\n        if (ganttObj.editModule && ganttObj.editModule.dialogModule && ganttObj.editSettings.allowAdding) {\n          if (ganttObj.editModule.dialogModule.dialogObj && getValue('dialogOpen', ganttObj.editModule.dialogModule.dialogObj)) {\n            return;\n          }\n          ganttObj.editModule.dialogModule.openAddDialog();\n        }\n        break;\n      case 'editRowDialog':\n        {\n          e.preventDefault();\n          var focussedTreeElement = ganttObj.element.querySelector('.e-treegrid');\n          focussedTreeElement.focus();\n          if (ganttObj.editModule && ganttObj.editModule.dialogModule && ganttObj.editSettings.allowEditing) {\n            if (ganttObj.editModule.dialogModule.dialogObj && getValue('dialogOpen', ganttObj.editModule.dialogModule.dialogObj)) {\n              return;\n            }\n            ganttObj.editModule.dialogModule.openToolbarEditDialog();\n          }\n          break;\n        }\n      case 'delete':\n        if (ganttObj.selectionModule && ganttObj.editModule && ganttObj.editModule.dialogModule && (!ganttObj.editModule.dialogModule.dialogObj || ganttObj.editModule.dialogModule.dialogObj && !ganttObj.editModule.dialogModule.dialogObj.visible) && (!ganttObj.editSettings.allowTaskbarEditing || ganttObj.editSettings.allowTaskbarEditing && !ganttObj.editModule.taskbarEditModule.touchEdit)) {\n          if (ganttObj.selectionSettings.mode !== 'Cell' && ganttObj.selectionModule.selectedRowIndexes.length || ganttObj.selectionSettings.mode === 'Cell' && ganttObj.selectionModule.getSelectedRowCellIndexes().length) {\n            if (!isNullOrUndefined(e.target)) {\n              if (e.target['tagName'] !== 'INPUT') {\n                ganttObj.editModule.startDeleteAction();\n              }\n            } else {\n              ganttObj.editModule.startDeleteAction();\n            }\n          }\n        }\n        break;\n      case 'focusTask':\n        {\n          e.preventDefault();\n          var selectedId = void 0;\n          if (ganttObj.selectionModule) {\n            var currentViewData = ganttObj.currentViewData;\n            if (ganttObj.selectionSettings.mode !== 'Cell' && !isNullOrUndefined(currentViewData[ganttObj.selectedRowIndex])) {\n              selectedId = ganttObj.currentViewData[ganttObj.selectedRowIndex].ganttProperties.rowUniqueID;\n            } else if (ganttObj.selectionSettings.mode === 'Cell' && ganttObj.selectionModule.getSelectedRowCellIndexes().length > 0) {\n              var selectCellIndex = ganttObj.selectionModule.getSelectedRowCellIndexes();\n              selectedId = currentViewData[selectCellIndex[selectCellIndex.length - 1].rowIndex].ganttProperties.rowUniqueID;\n            }\n          }\n          if (selectedId) {\n            ganttObj.scrollToTask(selectedId.toString());\n          }\n          break;\n        }\n      case 'focusSearch':\n        {\n          if (ganttObj.element.querySelector('#' + ganttObj.element.id + '_searchbar')) {\n            var searchElement = ganttObj.element.querySelector('#' + ganttObj.element.id + '_searchbar');\n            searchElement.setAttribute('tabIndex', '-1');\n            searchElement.focus();\n          }\n          break;\n        }\n      case 'tab':\n      case 'shiftTab':\n        if (!ganttObj.element.classList.contains('e-scroll-disabled')) {\n          ganttObj.ganttChartModule.onTabAction(e);\n        }\n        break;\n      case 'contextMenu':\n        {\n          var contextMenu = document.getElementById(this.parent.element.id + '_contextmenu').ej2_instances[0];\n          var containerPosition = this.parent.getOffsetRect(e.target);\n          var top_1 = containerPosition.top + containerPosition.height / 2;\n          var left = containerPosition.left + containerPosition.width / 2;\n          this.setActiveElement(e.target);\n          contextMenu.open(top_1, left);\n          e.preventDefault();\n          break;\n        }\n      case 'undo':\n        {\n          if (this.parent.undoRedoModule && this.parent.undoRedoModule['getUndoCollection'].length > 0) {\n            this.parent.undo();\n          }\n          break;\n        }\n      case 'redo':\n        {\n          if (this.parent.undoRedoModule && this.parent.undoRedoModule['getRedoCollection'].length > 0) {\n            this.parent.redo();\n          }\n          break;\n        }\n      case 'selectAll':\n        {\n          e.preventDefault();\n          var ganttRow = [].slice.call(this.parent.ganttChartModule.chartBodyContent.querySelector('tbody').children);\n          if (ganttRow.length > 0) {\n            var firstRowIndex = ganttRow[0].getAttribute('data-rowindex');\n            var lastRowIndex = ganttRow[ganttRow.length - 1].getAttribute('data-rowindex');\n            if (!isNullOrUndefined(firstRowIndex)) {\n              firstRowIndex = Number(firstRowIndex);\n            }\n            if (!isNullOrUndefined(lastRowIndex)) {\n              lastRowIndex = Number(lastRowIndex);\n            }\n            if (!isNullOrUndefined(firstRowIndex) && !isNullOrUndefined(lastRowIndex)) {\n              this.parent.selectionModule.selectRowsByRange(firstRowIndex, lastRowIndex);\n            }\n          }\n          break;\n        }\n      default:\n        {\n          var eventArgs = {\n            requestType: 'keyPressed',\n            action: e.action,\n            keyEvent: e\n          };\n          ganttObj.trigger('actionComplete', eventArgs);\n          break;\n        }\n    }\n  };\n  FocusModule.prototype.upDownKeyNavigate = function (e) {\n    e.preventDefault();\n    var ganttObj = this.parent;\n    var expandedRecords;\n    if ((e.action === 'downArrow' || e.action === 'upArrow') && this.parent.selectionModule && this.parent.allowSelection && this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n      expandedRecords = ganttObj.getExpandedRecords(ganttObj.flatData);\n    } else {\n      expandedRecords = ganttObj.getExpandedRecords(ganttObj.currentViewData);\n    }\n    if (ganttObj.selectionModule) {\n      if (ganttObj.selectionSettings.mode !== 'Cell' && ganttObj.selectedRowIndex !== -1) {\n        var selectedItem = void 0;\n        if ((e.action === 'downArrow' || e.action === 'upArrow') && this.parent.selectionModule && this.parent.allowSelection && this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n          selectedItem = ganttObj.flatData[ganttObj.selectedRowIndex];\n        } else {\n          selectedItem = ganttObj.currentViewData[ganttObj.selectedRowIndex];\n        }\n        var focussedElement = ganttObj.element.querySelector('.e-focused');\n        if (focussedElement) {\n          removeClass([focussedElement], 'e-focused');\n        }\n        var selectingRowIndex = expandedRecords.indexOf(selectedItem);\n        var currentSelectingRecord = e.action === 'downArrow' ? expandedRecords[selectingRowIndex + 1] : expandedRecords[selectingRowIndex - 1];\n        var activeElement = this.parent['args'];\n        if (document.activeElement !== activeElement) {\n          if ((e.action === 'downArrow' || e.action === 'upArrow') && this.parent.selectionModule && this.parent.allowSelection && this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n            ganttObj.selectionModule.selectRow(ganttObj.flatData.indexOf(currentSelectingRecord), false, true);\n          } else {\n            ganttObj.selectionModule.selectRow(ganttObj.currentViewData.indexOf(currentSelectingRecord), false, true);\n          }\n        }\n      } else if (ganttObj.selectionSettings.mode === 'Cell' && ganttObj.selectionModule.getSelectedRowCellIndexes().length > 0) {\n        var selectCellIndex = ganttObj.selectionModule.getSelectedRowCellIndexes();\n        var selectedCellItem = selectCellIndex[selectCellIndex.length - 1];\n        var currentCellIndex = selectedCellItem.cellIndexes[selectedCellItem.cellIndexes.length - 1];\n        var selectedItem = ganttObj.currentViewData[selectedCellItem.rowIndex];\n        var selectingRowIndex = expandedRecords.indexOf(selectedItem);\n        var currentSelectingRecord = e.action === 'downArrow' ? expandedRecords[selectingRowIndex + 1] : expandedRecords[selectingRowIndex - 1];\n        var cellInfo = {\n          rowIndex: ganttObj.currentViewData.indexOf(currentSelectingRecord),\n          cellIndex: currentCellIndex\n        };\n        ganttObj.selectionModule.selectCell(cellInfo);\n      }\n      this.parent.ganttChartModule.focusedRowIndex = this.parent.selectedRowIndex;\n    }\n  };\n  FocusModule.prototype.expandCollapseKey = function (e) {\n    var ganttObj = this.parent;\n    if (ganttObj.selectionModule && ganttObj.selectedRowIndex !== -1) {\n      var selectedRowIndex_1;\n      if (ganttObj.selectionSettings.mode !== 'Cell') {\n        selectedRowIndex_1 = ganttObj.selectedRowIndex;\n      } else if (ganttObj.selectionSettings.mode === 'Cell' && ganttObj.selectionModule.getSelectedRowCellIndexes().length > 0) {\n        var selectCellIndex = ganttObj.selectionModule.getSelectedRowCellIndexes();\n        selectedRowIndex_1 = selectCellIndex[selectCellIndex.length - 1].rowIndex;\n      }\n      if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n        selectedRowIndex_1 = this.parent.currentViewData.findIndex(function (obj) {\n          return obj.ganttProperties.rowUniqueID === selectedRowIndex_1.toString();\n        }) + 1;\n      }\n      if (e.action === 'expandRow') {\n        ganttObj.expandByIndex(selectedRowIndex_1);\n      } else {\n        ganttObj.collapseByIndex(selectedRowIndex_1);\n      }\n    }\n  };\n  return FocusModule;\n}();\nexport { FocusModule };","map":{"version":3,"names":["isNullOrUndefined","getValue","removeClass","FocusModule","parent","activeElement","previousActiveElement","prototype","getActiveElement","isPreviousActiveElement","setActiveElement","element","onKeyPress","e","ganttObj","ele","target","expandedRecords","getExpandedRecords","currentViewData","focusModule","action","focussedElement","querySelector","focus","isEdit","closest","key","sortModule","allowSorting","treeGrid","grid","notify","targetElement","editModule","cellEditModule","isCellEdit","isAdaptive","selectionModule","selectionSettings","type","hidePopUp","document","getElementsByClassName","style","display","mode","selectedRowIndex","getCellSelectedRecords","length","selectRow","currentSelectingRecord","flatData","indexOf","searchElement","id","parentElement","classList","contains","clearSelection","upDownKeyNavigate","ganttChartModule","manageFocus","HTMLElement","remove","expandCollapseAll","expandCollapseKey","col","editedColumn","field","columnMapping","duration","edit","read","textBox","ej2_instances","textValue","value","tempValue","toString","dataBind","dialogModule","dialogObj","saveCell","taskbarElement","onTaskbarClick","toolbarModule","refreshToolbarItems","stopPropagation","getElementById","preventDefault","addRecord","undefined","editSettings","newRowPosition","allowAdding","openAddDialog","focussedTreeElement","allowEditing","openToolbarEditDialog","visible","allowTaskbarEditing","taskbarEditModule","touchEdit","selectedRowIndexes","getSelectedRowCellIndexes","startDeleteAction","selectedId","ganttProperties","rowUniqueID","selectCellIndex","rowIndex","scrollToTask","setAttribute","onTabAction","contextMenu","containerPosition","getOffsetRect","top_1","top","height","left","width","open","undoRedoModule","undo","redo","ganttRow","slice","call","chartBodyContent","children","firstRowIndex","getAttribute","lastRowIndex","Number","selectRowsByRange","eventArgs","requestType","keyEvent","trigger","allowSelection","virtualScrollModule","enableVirtualization","selectedItem","selectingRowIndex","selectedCellItem","currentCellIndex","cellIndexes","cellInfo","cellIndex","selectCell","focusedRowIndex","selectedRowIndex_1","findIndex","obj","expandByIndex","collapseByIndex"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/keyboard.js"],"sourcesContent":["import { isNullOrUndefined, getValue, removeClass } from '@syncfusion/ej2-base';\n/**\n * Focus module is used to handle certain action on focus elements in keyboard navigations.\n */\nvar FocusModule = /** @class */ (function () {\n    function FocusModule(parent) {\n        this.parent = parent;\n        this.activeElement = null;\n        this.previousActiveElement = null;\n    }\n    FocusModule.prototype.getActiveElement = function (isPreviousActiveElement) {\n        return isPreviousActiveElement ? this.previousActiveElement : this.activeElement;\n    };\n    FocusModule.prototype.setActiveElement = function (element) {\n        this.previousActiveElement = this.activeElement;\n        this.activeElement = element;\n    };\n    /**\n     * To perform key interaction in Gantt\n     *\n     * @param {KeyboardEventArgs} e .\n     * @returns {void} .\n     * @private\n     */\n    FocusModule.prototype.onKeyPress = function (e) {\n        var ganttObj = this.parent;\n        var ele = e.target;\n        var expandedRecords = ganttObj.getExpandedRecords(ganttObj.currentViewData);\n        if (isNullOrUndefined(this.parent.focusModule.getActiveElement()) && (e.action === 'expandAll' || e.action === 'collapseAll')) {\n            var focussedElement = this.parent.element.querySelector('.e-treegrid');\n            focussedElement.focus();\n        }\n        if (!this.parent.isEdit && !isNullOrUndefined(ele) && ele.closest('.e-headercell') && (e.key === 'Enter') && this.parent.sortModule\n            && this.parent.allowSorting) {\n            e.action = 'enter';\n            this.parent.treeGrid.grid.notify('key-pressed', e);\n        }\n        var targetElement = this.parent.focusModule.getActiveElement();\n        if (e.action === 'home' || e.action === 'end' || e.action === 'downArrow' || e.action === 'upArrow' || e.action === 'delete' ||\n            e.action === 'rightArrow' || e.action === 'leftArrow' || e.action === 'focusTask' || e.action === 'focusSearch' ||\n            e.action === 'expandAll' || e.action === 'collapseAll' || e.action === 'undo' || e.action === 'redo' || e.action === 'selectAll') {\n            if (!isNullOrUndefined(ganttObj.editModule) && !isNullOrUndefined(ganttObj.editModule.cellEditModule) &&\n                ganttObj.editModule.cellEditModule.isCellEdit === true) {\n                return;\n            }\n        }\n        if (ganttObj.isAdaptive) {\n            if (e.action === 'addRowDialog' || e.action === 'editRowDialog' || e.action === 'delete'\n                || e.action === 'addRow') {\n                if (ganttObj.selectionModule && ganttObj.selectionSettings.type === 'Multiple') {\n                    ganttObj.selectionModule.hidePopUp();\n                    document.getElementsByClassName('e-gridpopup')[0].style.display = 'none';\n                }\n            }\n        }\n        switch (e.action) {\n            case 'home':\n                if (ganttObj.selectionModule && ganttObj.selectionSettings.mode !== 'Cell') {\n                    if (ganttObj.selectedRowIndex === 0) {\n                        return;\n                    }\n                    if (ganttObj.selectionModule && ganttObj.selectionModule.getCellSelectedRecords().length === 0) {\n                        ganttObj.selectionModule.selectRow(0, false, true);\n                    }\n                }\n                break;\n            case 'end':\n                if (ganttObj.selectionModule && ganttObj.selectionSettings.mode !== 'Cell') {\n                    var currentSelectingRecord = expandedRecords[expandedRecords.length - 1];\n                    if (ganttObj.selectedRowIndex === ganttObj.flatData.indexOf(currentSelectingRecord)) {\n                        return;\n                    }\n                    if (ganttObj.selectionModule && ganttObj.selectionModule.getCellSelectedRecords().length === 0) {\n                        ganttObj.selectionModule.selectRow(ganttObj.flatData.indexOf(currentSelectingRecord), false, true);\n                    }\n                }\n                break;\n            case 'downArrow':\n            case 'upArrow':\n                {\n                    var searchElement = ganttObj.element.querySelector('#' + ganttObj.element.id + '_searchbar');\n                    if (searchElement && searchElement.parentElement.classList.contains('e-input-focus')) {\n                        ganttObj.selectionModule.clearSelection();\n                    }\n                    if (!ganttObj.element.classList.contains('e-scroll-disabled')) {\n                        this.upDownKeyNavigate(e);\n                        if (!isNullOrUndefined(targetElement) && !isNullOrUndefined(targetElement.closest('.e-chart-row'))) {\n                            ganttObj.ganttChartModule.manageFocus(this.getActiveElement(), 'remove', true, e.action);\n                        }\n                        if (ganttObj.selectionSettings && ganttObj.selectionSettings.mode === 'Both' && e.target instanceof HTMLElement && e.target.classList.contains('e-cellselectionbackground')) {\n                            e.target.classList.remove('e-cellselectionbackground');\n                        }\n                    }\n                    break;\n                }\n            case 'expandAll':\n                ganttObj.ganttChartModule.expandCollapseAll('expand');\n                break;\n            case 'collapseAll':\n                ganttObj.ganttChartModule.expandCollapseAll('collapse');\n                break;\n            case 'expandRow':\n            case 'collapseRow':\n                this.expandCollapseKey(e);\n                break;\n            case 'saveRequest':\n                if (!isNullOrUndefined(ganttObj.editModule) && !isNullOrUndefined(ganttObj.editModule.cellEditModule) &&\n                    ganttObj.editModule.cellEditModule.isCellEdit) {\n                    var col = ganttObj.editModule.cellEditModule.editedColumn;\n                    if (col.field === ganttObj.columnMapping.duration && !isNullOrUndefined(col.edit) &&\n                        !isNullOrUndefined(col.edit.read)) {\n                        var textBox = e.target.ej2_instances[0];\n                        var textValue = e.target.value;\n                        // const ganttProp: ITaskData = ganttObj.currentViewData[ganttObj.selectedRowIndex].ganttProperties;\n                        var tempValue = void 0;\n                        if (col.field === ganttObj.columnMapping.duration) {\n                            // tempValue = !isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read) ? (col.edit.read as Function)() :\n                            //     // eslint-disable-next-line\n                            //     !isNullOrUndefined(col.valueAccessor) ? (col.valueAccessor as Function)(ganttObj.columnMapping.duration, ganttObj.editedRecords, col) :\n                            //         ganttObj.dataOperation.getDurationString(ganttProp.duration, ganttProp.durationUnit);\n                            if (!isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read)) {\n                                tempValue = col.edit.read();\n                            }\n                            if (textValue !== tempValue.toString()) {\n                                textBox.value = textValue;\n                                textBox.dataBind();\n                            }\n                        }\n                    }\n                    if (ganttObj.editModule.dialogModule.dialogObj && getValue('dialogOpen', ganttObj.editModule.dialogModule.dialogObj)) {\n                        return;\n                    }\n                    ganttObj.treeGrid.grid.saveCell();\n                    var focussedElement = ganttObj.element.querySelector('.e-treegrid');\n                    focussedElement.focus();\n                }\n                // if (!isNullOrUndefined(this.parent.onTaskbarClick) && !isNullOrUndefined(targetElement)\n                //     && !isNullOrUndefined(targetElement.closest('.e-chart-row'))) {\n                //     const target: EventTarget = e.target;\n                //     const taskbarElement: Element = targetElement.querySelector('.e-gantt-parent-taskbar,' +\n                //             '.e-gantt-child-taskbar,.e-gantt-milestone');\n                //     if (taskbarElement) {\n                //         this.parent.ganttChartModule.onTaskbarClick(e, target, taskbarElement);\n                //     }\n                // }\n                if (!isNullOrUndefined(targetElement)\n                    && !isNullOrUndefined(targetElement.closest('.e-chart-row'))) {\n                    var target = e.target;\n                    var taskbarElement = targetElement.querySelector('.e-gantt-parent-taskbar,' +\n                        '.e-gantt-child-taskbar,.e-gantt-milestone');\n                    if (taskbarElement) {\n                        this.parent.ganttChartModule.onTaskbarClick(e, target, taskbarElement);\n                    }\n                }\n                break;\n            case 'cancelRequest':\n                if (!isNullOrUndefined(ganttObj.editModule) && !isNullOrUndefined(ganttObj.editModule.cellEditModule)) {\n                    ganttObj.editModule.cellEditModule.isCellEdit = false;\n                    if (!isNullOrUndefined(ganttObj.toolbarModule)) {\n                        ganttObj.toolbarModule.refreshToolbarItems();\n                    }\n                }\n                break;\n            case 'addRow':\n                {\n                    if (ganttObj.editModule && ganttObj.editModule.cellEditModule && ganttObj.editModule.cellEditModule.isCellEdit) {\n                        e.stopPropagation();\n                    }\n                    else if (isNullOrUndefined(document.getElementById(this.parent.element.id + '_dialog'))) {\n                        e.preventDefault();\n                        ganttObj.addRecord(undefined, this.parent.editSettings.newRowPosition, this.parent.selectedRowIndex);\n                        var focussedElement = ganttObj.element;\n                        focussedElement.focus();\n                    }\n                    break;\n                }\n            case 'addRowDialog':\n                e.preventDefault();\n                if (ganttObj.editModule && ganttObj.editModule.dialogModule && ganttObj.editSettings.allowAdding) {\n                    if (ganttObj.editModule.dialogModule.dialogObj && getValue('dialogOpen', ganttObj.editModule.dialogModule.dialogObj)) {\n                        return;\n                    }\n                    ganttObj.editModule.dialogModule.openAddDialog();\n                }\n                break;\n            case 'editRowDialog':\n                {\n                    e.preventDefault();\n                    var focussedTreeElement = ganttObj.element.querySelector('.e-treegrid');\n                    focussedTreeElement.focus();\n                    if (ganttObj.editModule && ganttObj.editModule.dialogModule && ganttObj.editSettings.allowEditing) {\n                        if (ganttObj.editModule.dialogModule.dialogObj && getValue('dialogOpen', ganttObj.editModule.dialogModule.dialogObj)) {\n                            return;\n                        }\n                        ganttObj.editModule.dialogModule.openToolbarEditDialog();\n                    }\n                    break;\n                }\n            case 'delete':\n                if (ganttObj.selectionModule && ganttObj.editModule && ganttObj.editModule.dialogModule &&\n                    (!ganttObj.editModule.dialogModule.dialogObj || (ganttObj.editModule.dialogModule.dialogObj &&\n                        !ganttObj.editModule.dialogModule.dialogObj.visible)) && (!ganttObj.editSettings.allowTaskbarEditing\n                    || (ganttObj.editSettings.allowTaskbarEditing && !ganttObj.editModule.taskbarEditModule.touchEdit))) {\n                    if ((ganttObj.selectionSettings.mode !== 'Cell' && ganttObj.selectionModule.selectedRowIndexes.length)\n                        || (ganttObj.selectionSettings.mode === 'Cell' && ganttObj.selectionModule.getSelectedRowCellIndexes().length)) {\n                        if (!isNullOrUndefined(e.target)) {\n                            if (e.target['tagName'] !== 'INPUT') {\n                                ganttObj.editModule.startDeleteAction();\n                            }\n                        }\n                        else {\n                            ganttObj.editModule.startDeleteAction();\n                        }\n                    }\n                }\n                break;\n            case 'focusTask':\n                {\n                    e.preventDefault();\n                    var selectedId = void 0;\n                    if (ganttObj.selectionModule) {\n                        var currentViewData = ganttObj.currentViewData;\n                        if (ganttObj.selectionSettings.mode !== 'Cell' &&\n                            !isNullOrUndefined(currentViewData[ganttObj.selectedRowIndex])) {\n                            selectedId = ganttObj.currentViewData[ganttObj.selectedRowIndex].ganttProperties.rowUniqueID;\n                        }\n                        else if (ganttObj.selectionSettings.mode === 'Cell' &&\n                            ganttObj.selectionModule.getSelectedRowCellIndexes().length > 0) {\n                            var selectCellIndex = ganttObj.selectionModule.getSelectedRowCellIndexes();\n                            selectedId = currentViewData[selectCellIndex[selectCellIndex.length - 1].rowIndex].ganttProperties.rowUniqueID;\n                        }\n                    }\n                    if (selectedId) {\n                        ganttObj.scrollToTask(selectedId.toString());\n                    }\n                    break;\n                }\n            case 'focusSearch':\n                {\n                    if (ganttObj.element.querySelector('#' + ganttObj.element.id + '_searchbar')) {\n                        var searchElement = ganttObj.element.querySelector('#' + ganttObj.element.id + '_searchbar');\n                        searchElement.setAttribute('tabIndex', '-1');\n                        searchElement.focus();\n                    }\n                    break;\n                }\n            case 'tab':\n            case 'shiftTab':\n                if (!ganttObj.element.classList.contains('e-scroll-disabled')) {\n                    ganttObj.ganttChartModule.onTabAction(e);\n                }\n                break;\n            case 'contextMenu':\n                {\n                    var contextMenu = document.getElementById(this.parent.element.id +\n                        '_contextmenu').ej2_instances[0];\n                    var containerPosition = this.parent.getOffsetRect(e.target);\n                    var top_1 = containerPosition.top + (containerPosition.height / 2);\n                    var left = containerPosition.left + (containerPosition.width / 2);\n                    this.setActiveElement(e.target);\n                    contextMenu.open(top_1, left);\n                    e.preventDefault();\n                    break;\n                }\n            case 'undo':\n                {\n                    if (this.parent.undoRedoModule && this.parent.undoRedoModule['getUndoCollection'].length > 0) {\n                        this.parent.undo();\n                    }\n                    break;\n                }\n            case 'redo':\n                {\n                    if (this.parent.undoRedoModule && this.parent.undoRedoModule['getRedoCollection'].length > 0) {\n                        this.parent.redo();\n                    }\n                    break;\n                }\n            case 'selectAll':\n                {\n                    e.preventDefault();\n                    var ganttRow = [].slice.call(this.parent.ganttChartModule.chartBodyContent.querySelector('tbody').children);\n                    if (ganttRow.length > 0) {\n                        var firstRowIndex = ganttRow[0].getAttribute('data-rowindex');\n                        var lastRowIndex = ganttRow[ganttRow.length - 1].getAttribute('data-rowindex');\n                        if (!isNullOrUndefined(firstRowIndex)) {\n                            firstRowIndex = Number(firstRowIndex);\n                        }\n                        if (!isNullOrUndefined(lastRowIndex)) {\n                            lastRowIndex = Number(lastRowIndex);\n                        }\n                        if (!isNullOrUndefined(firstRowIndex) && !isNullOrUndefined(lastRowIndex)) {\n                            this.parent.selectionModule.selectRowsByRange(firstRowIndex, lastRowIndex);\n                        }\n                    }\n                    break;\n                }\n            default:\n                {\n                    var eventArgs = {\n                        requestType: 'keyPressed',\n                        action: e.action,\n                        keyEvent: e\n                    };\n                    ganttObj.trigger('actionComplete', eventArgs);\n                    break;\n                }\n        }\n    };\n    FocusModule.prototype.upDownKeyNavigate = function (e) {\n        e.preventDefault();\n        var ganttObj = this.parent;\n        var expandedRecords;\n        if ((e.action === 'downArrow' || e.action === 'upArrow') && this.parent.selectionModule && this.parent.allowSelection && this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n            expandedRecords = ganttObj.getExpandedRecords(ganttObj.flatData);\n        }\n        else {\n            expandedRecords = ganttObj.getExpandedRecords(ganttObj.currentViewData);\n        }\n        if (ganttObj.selectionModule) {\n            if (ganttObj.selectionSettings.mode !== 'Cell' && ganttObj.selectedRowIndex !== -1) {\n                var selectedItem = void 0;\n                if ((e.action === 'downArrow' || e.action === 'upArrow') && this.parent.selectionModule && this.parent.allowSelection && this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n                    selectedItem = ganttObj.flatData[ganttObj.selectedRowIndex];\n                }\n                else {\n                    selectedItem = ganttObj.currentViewData[ganttObj.selectedRowIndex];\n                }\n                var focussedElement = ganttObj.element.querySelector('.e-focused');\n                if (focussedElement) {\n                    removeClass([focussedElement], 'e-focused');\n                }\n                var selectingRowIndex = expandedRecords.indexOf(selectedItem);\n                var currentSelectingRecord = e.action === 'downArrow' ? expandedRecords[selectingRowIndex + 1] :\n                    expandedRecords[selectingRowIndex - 1];\n                var activeElement = this.parent['args'];\n                if (document.activeElement !== activeElement) {\n                    if ((e.action === 'downArrow' || e.action === 'upArrow') && this.parent.selectionModule && this.parent.allowSelection && this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n                        ganttObj.selectionModule.selectRow(ganttObj.flatData.indexOf(currentSelectingRecord), false, true);\n                    }\n                    else {\n                        ganttObj.selectionModule.selectRow(ganttObj.currentViewData.indexOf(currentSelectingRecord), false, true);\n                    }\n                }\n            }\n            else if (ganttObj.selectionSettings.mode === 'Cell' && ganttObj.selectionModule.getSelectedRowCellIndexes().length > 0) {\n                var selectCellIndex = ganttObj.selectionModule.getSelectedRowCellIndexes();\n                var selectedCellItem = selectCellIndex[selectCellIndex.length - 1];\n                var currentCellIndex = selectedCellItem.cellIndexes[selectedCellItem.cellIndexes.length - 1];\n                var selectedItem = ganttObj.currentViewData[selectedCellItem.rowIndex];\n                var selectingRowIndex = expandedRecords.indexOf(selectedItem);\n                var currentSelectingRecord = e.action === 'downArrow' ? expandedRecords[selectingRowIndex + 1] :\n                    expandedRecords[selectingRowIndex - 1];\n                var cellInfo = {\n                    rowIndex: ganttObj.currentViewData.indexOf(currentSelectingRecord),\n                    cellIndex: currentCellIndex\n                };\n                ganttObj.selectionModule.selectCell(cellInfo);\n            }\n            this.parent.ganttChartModule.focusedRowIndex = this.parent.selectedRowIndex;\n        }\n    };\n    FocusModule.prototype.expandCollapseKey = function (e) {\n        var ganttObj = this.parent;\n        if (ganttObj.selectionModule && ganttObj.selectedRowIndex !== -1) {\n            var selectedRowIndex_1;\n            if (ganttObj.selectionSettings.mode !== 'Cell') {\n                selectedRowIndex_1 = ganttObj.selectedRowIndex;\n            }\n            else if (ganttObj.selectionSettings.mode === 'Cell' && ganttObj.selectionModule.getSelectedRowCellIndexes().length > 0) {\n                var selectCellIndex = ganttObj.selectionModule.getSelectedRowCellIndexes();\n                selectedRowIndex_1 = selectCellIndex[selectCellIndex.length - 1].rowIndex;\n            }\n            if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n                selectedRowIndex_1 = this.parent.currentViewData.findIndex(function (obj) { return obj.ganttProperties.rowUniqueID ===\n                    selectedRowIndex_1.toString(); }) + 1;\n            }\n            if (e.action === 'expandRow') {\n                ganttObj.expandByIndex(selectedRowIndex_1);\n            }\n            else {\n                ganttObj.collapseByIndex(selectedRowIndex_1);\n            }\n        }\n    };\n    return FocusModule;\n}());\nexport { FocusModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}