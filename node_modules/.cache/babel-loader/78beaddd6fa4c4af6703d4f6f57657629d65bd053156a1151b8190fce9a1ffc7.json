{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport dayjs from 'dayjs';\nimport CalendarRow from './CalendarRow.vue';\nexport default {\n  name: 'Calendar',\n  components: {\n    CalendarRow\n  },\n  inject: ['root'],\n  data() {\n    return {};\n  },\n  methods: {\n    /**\n     * How many hours will fit?\n     *\n     * @returns {object}\n     */\n    howManyHoursFit(dayIndex) {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullCellWidth = this.root.state.options.times.steps[dayIndex].width.px;\n      let formatNames = Object.keys(this.root.state.options.calendar.hour.format);\n      for (let hours = 24; hours > 1; hours = Math.ceil(hours / 2)) {\n        for (let formatName of formatNames) {\n          if ((this.root.state.options.calendar.hour.maxWidths[formatName] + additionalSpace) * hours <= fullCellWidth && hours > 1) {\n            return {\n              count: hours,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: ''\n      };\n    },\n    /**\n     * How many days will fit?\n     *\n     * @returns {object}\n     */\n    howManyDaysFit() {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullWidth = this.root.state.options.width;\n      let formatNames = Object.keys(this.root.state.options.calendar.day.format);\n      for (let days = this.root.state.options.times.steps.length; days > 1; days = Math.ceil(days / 2)) {\n        for (let formatName of formatNames) {\n          if ((this.root.state.options.calendar.day.maxWidths[formatName] + additionalSpace) * days <= fullWidth && days > 1) {\n            return {\n              count: days,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: ''\n      };\n    },\n    /**\n     * How many months will fit?\n     *\n     * @returns {object}\n     */\n    howManyMonthsFit() {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullWidth = this.root.state.options.width;\n      let formatNames = Object.keys(this.root.state.options.calendar.month.format);\n      let currentMonth = dayjs(this.root.state.options.times.firstTime);\n      let previousMonth = currentMonth.clone();\n      const lastTime = this.root.state.options.times.lastTime;\n      let monthsCount = this.root.monthsCount(this.root.state.options.times.firstTime, this.root.state.options.times.lastTime);\n      if (monthsCount === 1) {\n        for (let formatName of formatNames) {\n          if (this.root.state.options.calendar.month.maxWidths[formatName] + additionalSpace <= fullWidth) {\n            return {\n              count: 1,\n              type: formatName\n            };\n          }\n        }\n      }\n      for (let months = monthsCount; months > 1; months = Math.ceil(months / 2)) {\n        for (let formatName of formatNames) {\n          if ((this.root.state.options.calendar.month.maxWidths[formatName] + additionalSpace) * months <= fullWidth && months > 1) {\n            return {\n              count: months,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: formatNames[0]\n      };\n    },\n    /**\n     * Generate hours\n     *\n     * @returns {array}\n     */\n    generateHours() {\n      let allHours = [];\n      if (!this.root.state.options.calendar.hour.display) {\n        return allHours;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      for (let hourIndex = 0, len = steps.length; hourIndex < len; hourIndex++) {\n        const hoursCount = this.howManyHoursFit(hourIndex);\n        if (hoursCount.count === 0) {\n          continue;\n        }\n        const hours = {\n          key: hourIndex + 'step',\n          children: []\n        };\n        const hourStep = 24 / hoursCount.count;\n        const hourWidthPx = steps[hourIndex].width.px / hoursCount.count;\n        for (let i = 0, len = hoursCount.count; i < len; i++) {\n          const hour = i * hourStep;\n          let index = hourIndex;\n          if (hourIndex > 0) {\n            index = hourIndex - Math.floor(hourIndex / 24) * 24;\n          }\n          let textWidth = 0;\n          if (typeof this.root.state.options.calendar.hour.widths[index] !== 'undefined') {\n            textWidth = this.root.state.options.calendar.hour.widths[index][hoursCount.type];\n          }\n          let x = steps[hourIndex].offset.px + hourWidthPx * i;\n          hours.children.push({\n            index: hourIndex,\n            key: 'h' + i,\n            x,\n            y: this.root.state.options.calendar.day.height + this.root.state.options.calendar.month.height,\n            width: hourWidthPx,\n            textWidth,\n            height: this.root.state.options.calendar.hour.height,\n            label: this.root.state.options.calendar.hour.formatted[hoursCount.type][hour]\n          });\n        }\n        allHours.push(hours);\n      }\n      return allHours;\n    },\n    /**\n     * Generate days\n     *\n     * @returns {array}\n     */\n    generateDays() {\n      let days = [];\n      if (!this.root.state.options.calendar.day.display) {\n        return days;\n      }\n      const daysCount = this.howManyDaysFit();\n      if (daysCount.count === 0) {\n        return days;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      const dayStep = Math.ceil(steps.length / daysCount.count);\n      for (let dayIndex = 0, len = steps.length; dayIndex < len; dayIndex += dayStep) {\n        let dayWidthPx = 0;\n        // day could be shorter (daylight saving time) so join widths and divide\n        for (let currentStep = 0; currentStep < dayStep; currentStep++) {\n          if (typeof steps[dayIndex + currentStep] !== 'undefined') {\n            dayWidthPx += steps[dayIndex + currentStep].width.px;\n          }\n        }\n        const date = dayjs(steps[dayIndex].time);\n        let textWidth = 0;\n        if (typeof this.root.state.options.calendar.day.widths[dayIndex] !== 'undefined') {\n          textWidth = this.root.state.options.calendar.day.widths[dayIndex][daysCount.type];\n        }\n        let x = steps[dayIndex].offset.px;\n        days.push({\n          index: dayIndex,\n          key: steps[dayIndex].time + 'd',\n          x,\n          y: this.root.state.options.calendar.month.height,\n          width: dayWidthPx,\n          textWidth,\n          height: this.root.state.options.calendar.day.height,\n          label: this.root.state.options.calendar.day.format[daysCount.type](date.locale(localeName))\n        });\n      }\n      return days.map(item => ({\n        key: item.key,\n        children: [item]\n      }));\n    },\n    /**\n     * Generate months\n     *\n     * @returns {array}\n     */\n    generateMonths() {\n      let months = [];\n      if (!this.root.state.options.calendar.month.display) {\n        return months;\n      }\n      const monthsCount = this.howManyMonthsFit();\n      if (monthsCount.count === 0) {\n        return months;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      let formatNames = Object.keys(this.root.state.options.calendar.month.format);\n      let currentDate = dayjs(this.root.state.options.times.firstTime);\n      for (let monthIndex = 0; monthIndex < monthsCount.count; monthIndex++) {\n        let monthWidth = 0;\n        let monthOffset = Number.MAX_SAFE_INTEGER;\n        let finalDate = dayjs(currentDate).add(1, 'month').startOf('month');\n        if (finalDate.valueOf() > this.root.state.options.times.lastTime) {\n          finalDate = dayjs(this.root.state.options.times.lastTime);\n        }\n        // we must find first and last step to get the offsets / widths\n        for (let step = 0, len = this.root.state.options.times.steps.length; step < len; step++) {\n          let currentStep = this.root.state.options.times.steps[step];\n          if (currentStep.time >= currentDate.valueOf() && currentStep.time < finalDate.valueOf()) {\n            monthWidth += currentStep.width.px;\n            if (currentStep.offset.px < monthOffset) {\n              monthOffset = currentStep.offset.px;\n            }\n          }\n        }\n        let label = '';\n        let choosenFormatName;\n        for (let formatName of formatNames) {\n          if (this.root.state.options.calendar.month.maxWidths[formatName] + 2 <= monthWidth) {\n            label = this.root.state.options.calendar.month.format[formatName](currentDate.locale(localeName));\n            choosenFormatName = formatName;\n          }\n        }\n        let textWidth = 0;\n        if (typeof this.root.state.options.calendar.month.widths[monthIndex] !== 'undefined') {\n          textWidth = this.root.state.options.calendar.month.widths[monthIndex][choosenFormatName];\n        }\n        let x = monthOffset;\n        months.push({\n          index: monthIndex,\n          key: monthIndex + 'm',\n          x,\n          y: 0,\n          width: monthWidth,\n          textWidth,\n          choosenFormatName,\n          height: this.root.state.options.calendar.month.height,\n          label\n        });\n        currentDate = currentDate.add(1, 'month').startOf('month');\n        if (currentDate.valueOf() > this.root.state.options.times.lastTime) {\n          currentDate = dayjs(this.root.state.options.times.lastTime);\n        }\n      }\n      return months.map(item => ({\n        key: item.key,\n        children: [item]\n      }));\n    },\n    /**\n     * Sum all calendar rows height and return result\n     *\n     * @returns {int}\n     */\n    calculateCalendarDimensions({\n      hours,\n      days,\n      months\n    }) {\n      let height = 0;\n      if (this.root.state.options.calendar.hour.display && hours.length > 0) {\n        height += this.root.state.options.calendar.hour.height;\n      }\n      if (this.root.state.options.calendar.day.display && days.length > 0) {\n        height += this.root.state.options.calendar.day.height;\n      }\n      if (this.root.state.options.calendar.month.display && months.length > 0) {\n        height += this.root.state.options.calendar.month.height;\n      }\n      this.root.state.options.calendar.height = height;\n    }\n  },\n  computed: {\n    dates() {\n      const hours = this.generateHours();\n      const days = this.generateDays();\n      const months = this.generateMonths();\n      const allDates = {\n        hours,\n        days,\n        months\n      };\n      this.calculateCalendarDimensions(allDates);\n      return allDates;\n    }\n  }\n};","map":{"version":3,"names":["dayjs","CalendarRow","name","components","inject","data","methods","howManyHoursFit","dayIndex","stroke","additionalSpace","fullCellWidth","root","state","options","times","steps","width","px","formatNames","Object","keys","calendar","hour","format","hours","Math","ceil","formatName","maxWidths","count","type","howManyDaysFit","fullWidth","day","days","length","howManyMonthsFit","month","currentMonth","firstTime","previousMonth","clone","lastTime","monthsCount","months","generateHours","allHours","display","localeName","locale","hourIndex","len","hoursCount","key","children","hourStep","hourWidthPx","i","index","floor","textWidth","widths","x","offset","push","y","height","label","formatted","generateDays","daysCount","dayStep","dayWidthPx","currentStep","date","time","map","item","generateMonths","currentDate","monthIndex","monthWidth","monthOffset","Number","MAX_SAFE_INTEGER","finalDate","add","startOf","valueOf","step","choosenFormatName","calculateCalendarDimensions","computed","dates","allDates"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Calendar/Calendar.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview Calendar component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div\n    class=\"gantt-elastic__calendar-wrapper\"\n    :style=\"{ ...root.style['calendar-wrapper'], width: root.state.options.width + 'px' }\"\n  >\n    <div class=\"gantt-elastic__calendar\" :style=\"{ ...root.style['calendar'], width: root.state.options.width + 'px' }\">\n      <calendar-row :items=\"dates.months\" which=\"month\" v-if=\"root.state.options.calendar.month.display\"></calendar-row>\n      <calendar-row :items=\"dates.days\" which=\"day\" v-if=\"root.state.options.calendar.day.display\"></calendar-row>\n      <calendar-row :items=\"dates.hours\" which=\"hour\" v-if=\"root.state.options.calendar.hour.display\"></calendar-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport dayjs from 'dayjs';\nimport CalendarRow from './CalendarRow.vue';\n\nexport default {\n  name: 'Calendar',\n  components: {\n    CalendarRow\n  },\n  inject: ['root'],\n  data() {\n    return {};\n  },\n\n  methods: {\n    /**\n     * How many hours will fit?\n     *\n     * @returns {object}\n     */\n    howManyHoursFit(dayIndex) {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullCellWidth = this.root.state.options.times.steps[dayIndex].width.px;\n      let formatNames = Object.keys(this.root.state.options.calendar.hour.format);\n      for (let hours = 24; hours > 1; hours = Math.ceil(hours / 2)) {\n        for (let formatName of formatNames) {\n          if (\n            (this.root.state.options.calendar.hour.maxWidths[formatName] + additionalSpace) * hours <= fullCellWidth &&\n            hours > 1\n          ) {\n            return {\n              count: hours,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: ''\n      };\n    },\n\n    /**\n     * How many days will fit?\n     *\n     * @returns {object}\n     */\n    howManyDaysFit() {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullWidth = this.root.state.options.width;\n      let formatNames = Object.keys(this.root.state.options.calendar.day.format);\n      for (let days = this.root.state.options.times.steps.length; days > 1; days = Math.ceil(days / 2)) {\n        for (let formatName of formatNames) {\n          if (\n            (this.root.state.options.calendar.day.maxWidths[formatName] + additionalSpace) * days <= fullWidth &&\n            days > 1\n          ) {\n            return {\n              count: days,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: ''\n      };\n    },\n\n    /**\n     * How many months will fit?\n     *\n     * @returns {object}\n     */\n    howManyMonthsFit() {\n      const stroke = 1;\n      const additionalSpace = stroke + 2;\n      let fullWidth = this.root.state.options.width;\n      let formatNames = Object.keys(this.root.state.options.calendar.month.format);\n      let currentMonth = dayjs(this.root.state.options.times.firstTime);\n      let previousMonth = currentMonth.clone();\n      const lastTime = this.root.state.options.times.lastTime;\n      let monthsCount = this.root.monthsCount(\n        this.root.state.options.times.firstTime,\n        this.root.state.options.times.lastTime\n      );\n      if (monthsCount === 1) {\n        for (let formatName of formatNames) {\n          if (this.root.state.options.calendar.month.maxWidths[formatName] + additionalSpace <= fullWidth) {\n            return {\n              count: 1,\n              type: formatName\n            };\n          }\n        }\n      }\n      for (let months = monthsCount; months > 1; months = Math.ceil(months / 2)) {\n        for (let formatName of formatNames) {\n          if (\n            (this.root.state.options.calendar.month.maxWidths[formatName] + additionalSpace) * months <= fullWidth &&\n            months > 1\n          ) {\n            return {\n              count: months,\n              type: formatName\n            };\n          }\n        }\n      }\n      return {\n        count: 0,\n        type: formatNames[0]\n      };\n    },\n\n    /**\n     * Generate hours\n     *\n     * @returns {array}\n     */\n    generateHours() {\n      let allHours = [];\n      if (!this.root.state.options.calendar.hour.display) {\n        return allHours;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      for (let hourIndex = 0, len = steps.length; hourIndex < len; hourIndex++) {\n        const hoursCount = this.howManyHoursFit(hourIndex);\n        if (hoursCount.count === 0) {\n          continue;\n        }\n        const hours = { key: hourIndex + 'step', children: [] };\n        const hourStep = 24 / hoursCount.count;\n        const hourWidthPx = steps[hourIndex].width.px / hoursCount.count;\n        for (let i = 0, len = hoursCount.count; i < len; i++) {\n          const hour = i * hourStep;\n          let index = hourIndex;\n          if (hourIndex > 0) {\n            index = hourIndex - Math.floor(hourIndex / 24) * 24;\n          }\n          let textWidth = 0;\n          if (typeof this.root.state.options.calendar.hour.widths[index] !== 'undefined') {\n            textWidth = this.root.state.options.calendar.hour.widths[index][hoursCount.type];\n          }\n          let x = steps[hourIndex].offset.px + hourWidthPx * i;\n          hours.children.push({\n            index: hourIndex,\n            key: 'h' + i,\n            x,\n            y: this.root.state.options.calendar.day.height + this.root.state.options.calendar.month.height,\n            width: hourWidthPx,\n            textWidth,\n            height: this.root.state.options.calendar.hour.height,\n            label: this.root.state.options.calendar.hour.formatted[hoursCount.type][hour]\n          });\n        }\n        allHours.push(hours);\n      }\n      return allHours;\n    },\n\n    /**\n     * Generate days\n     *\n     * @returns {array}\n     */\n    generateDays() {\n      let days = [];\n      if (!this.root.state.options.calendar.day.display) {\n        return days;\n      }\n      const daysCount = this.howManyDaysFit();\n      if (daysCount.count === 0) {\n        return days;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      const dayStep = Math.ceil(steps.length / daysCount.count);\n      for (let dayIndex = 0, len = steps.length; dayIndex < len; dayIndex += dayStep) {\n        let dayWidthPx = 0;\n        // day could be shorter (daylight saving time) so join widths and divide\n        for (let currentStep = 0; currentStep < dayStep; currentStep++) {\n          if (typeof steps[dayIndex + currentStep] !== 'undefined') {\n            dayWidthPx += steps[dayIndex + currentStep].width.px;\n          }\n        }\n        const date = dayjs(steps[dayIndex].time);\n        let textWidth = 0;\n        if (typeof this.root.state.options.calendar.day.widths[dayIndex] !== 'undefined') {\n          textWidth = this.root.state.options.calendar.day.widths[dayIndex][daysCount.type];\n        }\n        let x = steps[dayIndex].offset.px;\n        days.push({\n          index: dayIndex,\n          key: steps[dayIndex].time + 'd',\n          x,\n          y: this.root.state.options.calendar.month.height,\n          width: dayWidthPx,\n          textWidth,\n          height: this.root.state.options.calendar.day.height,\n          label: this.root.state.options.calendar.day.format[daysCount.type](date.locale(localeName))\n        });\n      }\n      return days.map(item => ({\n        key: item.key,\n        children: [item]\n      }));\n    },\n\n    /**\n     * Generate months\n     *\n     * @returns {array}\n     */\n    generateMonths() {\n      let months = [];\n      if (!this.root.state.options.calendar.month.display) {\n        return months;\n      }\n      const monthsCount = this.howManyMonthsFit();\n      if (monthsCount.count === 0) {\n        return months;\n      }\n      const steps = this.root.state.options.times.steps;\n      const localeName = this.root.state.options.locale.name;\n      let formatNames = Object.keys(this.root.state.options.calendar.month.format);\n      let currentDate = dayjs(this.root.state.options.times.firstTime);\n      for (let monthIndex = 0; monthIndex < monthsCount.count; monthIndex++) {\n        let monthWidth = 0;\n        let monthOffset = Number.MAX_SAFE_INTEGER;\n        let finalDate = dayjs(currentDate)\n          .add(1, 'month')\n          .startOf('month');\n        if (finalDate.valueOf() > this.root.state.options.times.lastTime) {\n          finalDate = dayjs(this.root.state.options.times.lastTime);\n        }\n        // we must find first and last step to get the offsets / widths\n        for (let step = 0, len = this.root.state.options.times.steps.length; step < len; step++) {\n          let currentStep = this.root.state.options.times.steps[step];\n          if (currentStep.time >= currentDate.valueOf() && currentStep.time < finalDate.valueOf()) {\n            monthWidth += currentStep.width.px;\n            if (currentStep.offset.px < monthOffset) {\n              monthOffset = currentStep.offset.px;\n            }\n          }\n        }\n        let label = '';\n        let choosenFormatName;\n        for (let formatName of formatNames) {\n          if (this.root.state.options.calendar.month.maxWidths[formatName] + 2 <= monthWidth) {\n            label = this.root.state.options.calendar.month.format[formatName](currentDate.locale(localeName));\n            choosenFormatName = formatName;\n          }\n        }\n        let textWidth = 0;\n        if (typeof this.root.state.options.calendar.month.widths[monthIndex] !== 'undefined') {\n          textWidth = this.root.state.options.calendar.month.widths[monthIndex][choosenFormatName];\n        }\n        let x = monthOffset;\n        months.push({\n          index: monthIndex,\n          key: monthIndex + 'm',\n          x,\n          y: 0,\n          width: monthWidth,\n          textWidth,\n          choosenFormatName,\n          height: this.root.state.options.calendar.month.height,\n          label\n        });\n        currentDate = currentDate.add(1, 'month').startOf('month');\n        if (currentDate.valueOf() > this.root.state.options.times.lastTime) {\n          currentDate = dayjs(this.root.state.options.times.lastTime);\n        }\n      }\n      return months.map(item => ({\n        key: item.key,\n        children: [item]\n      }));\n    },\n\n    /**\n     * Sum all calendar rows height and return result\n     *\n     * @returns {int}\n     */\n    calculateCalendarDimensions({ hours, days, months }) {\n      let height = 0;\n      if (this.root.state.options.calendar.hour.display && hours.length > 0) {\n        height += this.root.state.options.calendar.hour.height;\n      }\n      if (this.root.state.options.calendar.day.display && days.length > 0) {\n        height += this.root.state.options.calendar.day.height;\n      }\n      if (this.root.state.options.calendar.month.display && months.length > 0) {\n        height += this.root.state.options.calendar.month.height;\n      }\n      this.root.state.options.calendar.height = height;\n    }\n  },\n\n  computed: {\n    dates() {\n      const hours = this.generateHours();\n      const days = this.generateDays();\n      const months = this.generateMonths();\n      const allDates = { hours, days, months };\n      this.calculateCalendarDimensions(allDates);\n      return allDates;\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}