{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\n/**\n * SelectionCommands internal component\n *\n * @hidden\n\n */\nvar MDSelectionFormats = /** @class */function () {\n  function MDSelectionFormats(parent) {\n    extend(this, this, parent, true);\n    this.selection = this.parent.markdownSelection;\n    this.addEventListener();\n  }\n  MDSelectionFormats.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.selectionCommand, this.applyCommands, this);\n    this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler, this);\n    this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n  };\n  MDSelectionFormats.prototype.removeEventListener = function () {\n    this.parent.observer.off(CONSTANT.selectionCommand, this.applyCommands);\n    this.parent.observer.off(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler);\n    this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n  };\n  MDSelectionFormats.prototype.keyDownHandler = function (e) {\n    switch (e.event.action) {\n      case 'bold':\n        this.applyCommands({\n          subCommand: 'Bold',\n          callBack: e.callBack\n        });\n        e.event.preventDefault();\n        break;\n      case 'italic':\n        this.applyCommands({\n          subCommand: 'Italic',\n          callBack: e.callBack\n        });\n        e.event.preventDefault();\n        break;\n      case 'strikethrough':\n        this.applyCommands({\n          subCommand: 'StrikeThrough',\n          callBack: e.callBack\n        });\n        e.event.preventDefault();\n        break;\n      case 'uppercase':\n        this.applyCommands({\n          subCommand: 'UpperCase',\n          callBack: e.callBack\n        });\n        e.event.preventDefault();\n        break;\n      case 'lowercase':\n        this.applyCommands({\n          subCommand: 'LowerCase',\n          callBack: e.callBack\n        });\n        e.event.preventDefault();\n        break;\n      case 'superscript':\n        this.applyCommands({\n          subCommand: 'SuperScript',\n          callBack: e.callBack\n        });\n        e.event.preventDefault();\n        break;\n      case 'subscript':\n        this.applyCommands({\n          subCommand: 'SubScript',\n          callBack: e.callBack\n        });\n        e.event.preventDefault();\n        break;\n    }\n  };\n  MDSelectionFormats.prototype.isBold = function (text, cmd) {\n    return text.search('\\\\' + cmd + '\\\\' + cmd + '') !== -1;\n  };\n  MDSelectionFormats.prototype.isItalic = function (text, cmd) {\n    return text.search('\\\\' + cmd) !== -1;\n  };\n  MDSelectionFormats.prototype.isMatch = function (text, cmd) {\n    var matchText = [''];\n    switch (cmd) {\n      case this.syntax.Italic:\n        matchText = text.match(this.singleCharRegx(cmd));\n        break;\n      case this.syntax.InlineCode:\n        matchText = text.match(this.singleCharRegx(cmd));\n        break;\n      case this.syntax.StrikeThrough:\n        matchText = text.match(this.singleCharRegx(cmd));\n        break;\n    }\n    return matchText;\n  };\n  MDSelectionFormats.prototype.multiCharRegx = function (cmd) {\n    var regExp = RegExp;\n    return new regExp('(\\\\' + cmd + '\\\\' + cmd + ')', 'g');\n  };\n  MDSelectionFormats.prototype.singleCharRegx = function (cmd) {\n    var regExp = RegExp;\n    return new regExp('(\\\\' + cmd + ')', 'g');\n  };\n  MDSelectionFormats.prototype.isAppliedCommand = function (cmd) {\n    // eslint-disable-next-line\n    var selectCmd = '';\n    var isFormat = false;\n    var textArea = this.parent.element;\n    var start = textArea.selectionStart;\n    var splitAt = function (index) {\n      return function (x) {\n        return [x.slice(0, index), x.slice(index)];\n      };\n    };\n    var splitText = splitAt(start)(textArea.value);\n    var cmdB = this.syntax.Bold.substr(0, 1);\n    var cmdI = this.syntax.Italic;\n    var selectedText = this.parent.markdownSelection.getSelectedText(textArea);\n    if (selectedText !== '' && selectedText === selectedText.toLocaleUpperCase() && cmd === 'UpperCase') {\n      return true;\n    } else if (selectedText === '') {\n      var beforeText = textArea.value.substr(splitText[0].length - 1, 1);\n      var afterText = splitText[1].substr(0, 1);\n      if (beforeText !== '' && afterText !== '' && beforeText.match(/[a-z]/i) && beforeText === beforeText.toLocaleUpperCase() && afterText === afterText.toLocaleUpperCase() && cmd === 'UpperCase') {\n        return true;\n      }\n    }\n    if (!this.isBold(splitText[0], cmdB) && !this.isItalic(splitText[0], cmdI) && !this.isBold(splitText[1], cmdB) && !this.isItalic(splitText[1], cmdI)) {\n      if (!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.StrikeThrough)) && !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.StrikeThrough)) && this.isMatch(splitText[0], this.syntax.StrikeThrough).length % 2 === 1 && this.isMatch(splitText[1], this.syntax.StrikeThrough).length % 2 === 1 && cmd === 'StrikeThrough') {\n        isFormat = true;\n      }\n      if (!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.InlineCode)) && !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.InlineCode)) && this.isMatch(splitText[0], this.syntax.InlineCode).length % 2 === 1 && this.isMatch(splitText[1], this.syntax.InlineCode).length % 2 === 1 && cmd === 'InlineCode') {\n        isFormat = true;\n      }\n      /* eslint-disable */\n      if (!isNullOrUndefined(splitText[0].match(/\\<sub>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sub>/g)) && splitText[0].match(/\\<sub>/g).length % 2 === 1 && splitText[1].match(/\\<\\/sub>/g).length % 2 === 1 && cmd === 'SubScript') {\n        isFormat = true;\n      }\n      if (!isNullOrUndefined(splitText[0].match(/\\<sup>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sup>/g)) && splitText[0].match(/\\<sup>/g).length % 2 === 1 && splitText[1].match(/\\<\\/sup>/g).length % 2 === 1 && cmd === 'SuperScript') {\n        isFormat = true;\n      }\n      /* eslint-enable */\n    }\n    if (this.isBold(splitText[0], cmdB) && this.isBold(splitText[1], cmdB) && splitText[0].match(this.multiCharRegx(cmdB)).length % 2 === 1 && splitText[1].match(this.multiCharRegx(cmdB)).length % 2 === 1 && cmd === 'Bold') {\n      isFormat = true;\n    }\n    splitText[0] = this.isBold(splitText[0], cmdB) ? splitText[0].replace(this.multiCharRegx(cmdB), '$%@') : splitText[0];\n    splitText[1] = this.isBold(splitText[1], cmdB) ? splitText[1].replace(this.multiCharRegx(cmdB), '$%@') : splitText[1];\n    if (!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.Italic)) && !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.Italic)) && this.isMatch(splitText[0], this.syntax.Italic).length % 2 === 1 && this.isMatch(splitText[1], this.syntax.Italic).length % 2 === 1 && cmd === 'Italic') {\n      isFormat = true;\n    }\n    if (!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.StrikeThrough)) && !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.StrikeThrough)) && this.isMatch(splitText[0], this.syntax.StrikeThrough).length % 2 === 1 && this.isMatch(splitText[1], this.syntax.StrikeThrough).length % 2 === 1 && cmd === 'StrikeThrough') {\n      isFormat = true;\n    }\n    if (!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.InlineCode)) && !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.InlineCode)) && this.isMatch(splitText[0], this.syntax.InlineCode).length % 2 === 1 && this.isMatch(splitText[1], this.syntax.InlineCode).length % 2 === 1 && cmd === 'InlineCode') {\n      isFormat = true;\n    }\n    /* eslint-disable */\n    if (!isNullOrUndefined(splitText[0].match(/\\<sub>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sub>/g)) && splitText[0].match(/\\<sub>/g).length % 2 === 1 && splitText[1].match(/\\<\\/sub>/g).length % 2 === 1 && cmd === 'SubScript') {\n      isFormat = true;\n    }\n    if (!isNullOrUndefined(splitText[0].match(/\\<sup>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sup>/g)) && splitText[0].match(/\\<sup>/g).length % 2 === 1 && splitText[1].match(/\\<\\/sup>/g).length % 2 === 1 && cmd === 'SuperScript') {\n      isFormat = true;\n      /* eslint-enable */\n    }\n    return isFormat;\n  };\n  MDSelectionFormats.prototype.applyCommands = function (e) {\n    this.currentAction = e.subCommand;\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var addedLength = 0;\n    var selection = this.parent.markdownSelection.getSelectedInlinePoints(textArea);\n    if (this.isAppliedCommand(e.subCommand) && selection.text !== '') {\n      var startCmd = this.syntax[e.subCommand];\n      var endCmd = e.subCommand === 'SubScript' ? '</sub>' : e.subCommand === 'SuperScript' ? '</sup>' : this.syntax[e.subCommand];\n      var startLength = e.subCommand === 'UpperCase' || e.subCommand === 'LowerCase' ? 0 : startCmd.length;\n      var startNo = textArea.value.substr(0, selection.start).lastIndexOf(startCmd);\n      var endNo = textArea.value.substr(selection.end, textArea.value.length).indexOf(endCmd);\n      endNo = endNo + selection.end;\n      var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), startCmd, '', startNo, selection.start);\n      var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), endCmd, '', 0, endNo);\n      textArea.value = repStartText + selection.text + repEndText;\n      this.restore(textArea, start - startLength, end - startLength, e);\n      return;\n    }\n    if (selection.text !== '' && !this.isApplied(selection, e.subCommand)) {\n      addedLength = e.subCommand === 'UpperCase' || e.subCommand === 'LowerCase' ? 0 : this.syntax[e.subCommand].length;\n      var repStart = textArea.value.substr(selection.start - this.syntax[e.subCommand].length, this.syntax[e.subCommand].length);\n      var repEnd = void 0;\n      if (repStart === e.subCommand || selection.start - this.syntax[e.subCommand].length === textArea.value.indexOf(this.syntax[e.subCommand]) && (selection.end === textArea.value.lastIndexOf(this.syntax[e.subCommand]) || selection.end === textArea.value.lastIndexOf('</' + this.syntax[e.subCommand].substring(1, 5)))) {\n        if (e.subCommand === 'SubScript' || e.subCommand === 'SuperScript') {\n          repEnd = textArea.value.substr(selection.end, this.syntax[e.subCommand].length + 1);\n        } else {\n          repEnd = textArea.value.substr(selection.end, this.syntax[e.subCommand].length);\n        }\n        var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), repStart, '', selection.start - this.syntax[e.subCommand].length, selection.start);\n        var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), repEnd, '', 0, repEnd.length);\n        textArea.value = repStartText + selection.text + repEndText;\n        this.restore(textArea, start - addedLength, end - addedLength, e);\n      } else {\n        if (e.subCommand === 'SubScript' || e.subCommand === 'SuperScript') {\n          selection.text = this.syntax[e.subCommand] + selection.text + '</' + this.syntax[e.subCommand].substring(1, 5);\n        } else if (e.subCommand === 'UpperCase' || e.subCommand === 'LowerCase') {\n          selection.text = e.subCommand === 'UpperCase' ? selection.text.toUpperCase() : selection.text.toLowerCase();\n        } else {\n          selection.text = this.syntax[e.subCommand] + selection.text + this.syntax[e.subCommand];\n        }\n        textArea.value = textArea.value.substr(0, selection.start) + selection.text + textArea.value.substr(selection.end, textArea.value.length);\n        this.restore(textArea, start + addedLength, end + addedLength, e);\n      }\n    } else if (e.subCommand !== 'UpperCase' && e.subCommand !== 'LowerCase') {\n      if (e.subCommand === 'SubScript' || e.subCommand === 'SuperScript') {\n        selection.text = this.textReplace(selection.text, e.subCommand);\n        selection.text = this.syntax[e.subCommand] + selection.text + '</' + this.syntax[e.subCommand].substring(1, 5);\n      } else {\n        selection.text = this.textReplace(selection.text, e.subCommand);\n        selection.text = this.syntax[e.subCommand] + selection.text + this.syntax[e.subCommand];\n      }\n      textArea.value = textArea.value.substr(0, selection.start) + selection.text + textArea.value.substr(selection.end, textArea.value.length);\n      addedLength = this.syntax[e.subCommand].length;\n      if (selection.start === selection.end) {\n        this.restore(textArea, start + addedLength, end + addedLength, e);\n      } else {\n        this.restore(textArea, start + addedLength, end - addedLength, e);\n      }\n    } else {\n      this.restore(textArea, start, end, e);\n    }\n    this.parent.undoRedoManager.saveData();\n  };\n  MDSelectionFormats.prototype.replaceAt = function (input, search, replace, start, end) {\n    return input.slice(0, start) + input.slice(start, end).replace(search, replace) + input.slice(end);\n  };\n  MDSelectionFormats.prototype.restore = function (textArea, start, end, event) {\n    this.selection.save(start, end);\n    this.selection.restore(textArea);\n    if (event && event.callBack) {\n      event.callBack({\n        requestType: this.currentAction,\n        selectedText: this.selection.getSelectedText(textArea),\n        editorMode: 'Markdown',\n        event: event.event\n      });\n    }\n  };\n  MDSelectionFormats.prototype.textReplace = function (text, command) {\n    var regx = this.singleCharRegx(this.syntax[\"\" + command]);\n    switch (command) {\n      case 'Bold':\n        regx = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n        text = text.replace(regx, '');\n        break;\n      case 'Italic':\n        if (!this.isBold(text, this.syntax[\"\" + command].substr(0, 1))) {\n          text = text.replace(regx, '');\n        } else {\n          var regxB = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n          var repText = text;\n          repText = repText.replace(regxB, '$%@').replace(regx, '');\n          var regxTemp = new RegExp('\\\\$%@', 'g');\n          text = repText.replace(regxTemp, this.syntax[\"\" + command].substr(0, 1) + this.syntax[\"\" + command].substr(0, 1));\n        }\n        break;\n      case 'StrikeThrough':\n        text = text.replace(regx, '');\n        break;\n      case 'InlineCode':\n        text = text.replace(regx, '');\n        break;\n      case 'SubScript':\n        text = text.replace(/<sub>/g, '').replace(/<\\/sub>/g, '');\n        break;\n      case 'SuperScript':\n        text = text.replace(/<sup>/g, '').replace(/<\\/sup>/g, '');\n        break;\n    }\n    return text;\n  };\n  MDSelectionFormats.prototype.isApplied = function (line, command) {\n    var regx = this.singleCharRegx(this.syntax[\"\" + command]);\n    var regExp;\n    switch (command) {\n      case 'SubScript':\n      case 'SuperScript':\n        regx = this.singleCharRegx(this.syntax[\"\" + command]);\n        return regx.test(line.text);\n      case 'Bold':\n      case 'StrikeThrough':\n        regx = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n        return regx.test(line.text);\n      case 'UpperCase':\n      case 'LowerCase':\n        regExp = RegExp;\n        regx = new regExp('^[' + this.syntax[\"\" + command] + ']*$', 'g');\n        return regx.test(line.text);\n      case 'Italic':\n        {\n          var regTest = void 0;\n          var regxB = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n          if (regxB.test(line.text)) {\n            var repText = line.text;\n            repText = repText.replace(regxB, '$%#');\n            regTest = regx.test(repText);\n          } else {\n            regTest = regx.test(line.text);\n          }\n          return regTest;\n        }\n      case 'InlineCode':\n        return regx.test(line.text);\n    }\n  };\n  MDSelectionFormats.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return MDSelectionFormats;\n}();\nexport { MDSelectionFormats };","map":{"version":3,"names":["isNullOrUndefined","CONSTANT","extend","EVENTS","MDSelectionFormats","parent","selection","markdownSelection","addEventListener","prototype","observer","on","selectionCommand","applyCommands","KEY_DOWN_HANDLER","keyDownHandler","INTERNAL_DESTROY","destroy","removeEventListener","off","e","event","action","subCommand","callBack","preventDefault","isBold","text","cmd","search","isItalic","isMatch","matchText","syntax","Italic","match","singleCharRegx","InlineCode","StrikeThrough","multiCharRegx","regExp","RegExp","isAppliedCommand","selectCmd","isFormat","textArea","element","start","selectionStart","splitAt","index","x","slice","splitText","value","cmdB","Bold","substr","cmdI","selectedText","getSelectedText","toLocaleUpperCase","beforeText","length","afterText","replace","currentAction","save","selectionEnd","end","addedLength","getSelectedInlinePoints","startCmd","endCmd","startLength","startNo","lastIndexOf","endNo","indexOf","repStartText","replaceAt","repEndText","restore","isApplied","repStart","repEnd","substring","toUpperCase","toLowerCase","textReplace","undoRedoManager","saveData","input","requestType","editorMode","command","regx","regxB","repText","regxTemp","line","test","regTest"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/plugin/md-selection-formats.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\n/**\n * SelectionCommands internal component\n *\n * @hidden\n\n */\nvar MDSelectionFormats = /** @class */ (function () {\n    function MDSelectionFormats(parent) {\n        extend(this, this, parent, true);\n        this.selection = this.parent.markdownSelection;\n        this.addEventListener();\n    }\n    MDSelectionFormats.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.selectionCommand, this.applyCommands, this);\n        this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler, this);\n        this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n    };\n    MDSelectionFormats.prototype.removeEventListener = function () {\n        this.parent.observer.off(CONSTANT.selectionCommand, this.applyCommands);\n        this.parent.observer.off(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler);\n        this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n    };\n    MDSelectionFormats.prototype.keyDownHandler = function (e) {\n        switch (e.event.action) {\n            case 'bold':\n                this.applyCommands({ subCommand: 'Bold', callBack: e.callBack });\n                e.event.preventDefault();\n                break;\n            case 'italic':\n                this.applyCommands({ subCommand: 'Italic', callBack: e.callBack });\n                e.event.preventDefault();\n                break;\n            case 'strikethrough':\n                this.applyCommands({ subCommand: 'StrikeThrough', callBack: e.callBack });\n                e.event.preventDefault();\n                break;\n            case 'uppercase':\n                this.applyCommands({ subCommand: 'UpperCase', callBack: e.callBack });\n                e.event.preventDefault();\n                break;\n            case 'lowercase':\n                this.applyCommands({ subCommand: 'LowerCase', callBack: e.callBack });\n                e.event.preventDefault();\n                break;\n            case 'superscript':\n                this.applyCommands({ subCommand: 'SuperScript', callBack: e.callBack });\n                e.event.preventDefault();\n                break;\n            case 'subscript':\n                this.applyCommands({ subCommand: 'SubScript', callBack: e.callBack });\n                e.event.preventDefault();\n                break;\n        }\n    };\n    MDSelectionFormats.prototype.isBold = function (text, cmd) {\n        return text.search('\\\\' + cmd + '\\\\' + cmd + '') !== -1;\n    };\n    MDSelectionFormats.prototype.isItalic = function (text, cmd) {\n        return text.search('\\\\' + cmd) !== -1;\n    };\n    MDSelectionFormats.prototype.isMatch = function (text, cmd) {\n        var matchText = [''];\n        switch (cmd) {\n            case this.syntax.Italic:\n                matchText = text.match(this.singleCharRegx(cmd));\n                break;\n            case this.syntax.InlineCode:\n                matchText = text.match(this.singleCharRegx(cmd));\n                break;\n            case this.syntax.StrikeThrough:\n                matchText = text.match(this.singleCharRegx(cmd));\n                break;\n        }\n        return matchText;\n    };\n    MDSelectionFormats.prototype.multiCharRegx = function (cmd) {\n        var regExp = RegExp;\n        return new regExp('(\\\\' + cmd + '\\\\' + cmd + ')', 'g');\n    };\n    MDSelectionFormats.prototype.singleCharRegx = function (cmd) {\n        var regExp = RegExp;\n        return new regExp('(\\\\' + cmd + ')', 'g');\n    };\n    MDSelectionFormats.prototype.isAppliedCommand = function (cmd) {\n        // eslint-disable-next-line\n        var selectCmd = '';\n        var isFormat = false;\n        var textArea = this.parent.element;\n        var start = textArea.selectionStart;\n        var splitAt = function (index) { return function (x) { return [x.slice(0, index), x.slice(index)]; }; };\n        var splitText = splitAt(start)(textArea.value);\n        var cmdB = this.syntax.Bold.substr(0, 1);\n        var cmdI = this.syntax.Italic;\n        var selectedText = this.parent.markdownSelection.getSelectedText(textArea);\n        if (selectedText !== '' && selectedText === selectedText.toLocaleUpperCase() && cmd === 'UpperCase') {\n            return true;\n        }\n        else if (selectedText === '') {\n            var beforeText = textArea.value.substr(splitText[0].length - 1, 1);\n            var afterText = splitText[1].substr(0, 1);\n            if ((beforeText !== '' && afterText !== '' && beforeText.match(/[a-z]/i)) &&\n                beforeText === beforeText.toLocaleUpperCase() && afterText === afterText.toLocaleUpperCase() && cmd === 'UpperCase') {\n                return true;\n            }\n        }\n        if (!(this.isBold(splitText[0], cmdB)) && !(this.isItalic(splitText[0], cmdI)) && !(this.isBold(splitText[1], cmdB)) &&\n            !(this.isItalic(splitText[1], cmdI))) {\n            if ((!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.StrikeThrough)) &&\n                !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.StrikeThrough))) &&\n                (this.isMatch(splitText[0], this.syntax.StrikeThrough).length % 2 === 1 &&\n                    this.isMatch(splitText[1], this.syntax.StrikeThrough).length % 2 === 1) && cmd === 'StrikeThrough') {\n                isFormat = true;\n            }\n            if ((!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.InlineCode)) &&\n                !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.InlineCode))) &&\n                (this.isMatch(splitText[0], this.syntax.InlineCode).length % 2 === 1 &&\n                    this.isMatch(splitText[1], this.syntax.InlineCode).length % 2 === 1) && cmd === 'InlineCode') {\n                isFormat = true;\n            }\n            /* eslint-disable */\n            if ((!isNullOrUndefined(splitText[0].match(/\\<sub>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sub>/g))) &&\n                (splitText[0].match(/\\<sub>/g).length % 2 === 1 &&\n                    splitText[1].match(/\\<\\/sub>/g).length % 2 === 1) && cmd === 'SubScript') {\n                isFormat = true;\n            }\n            if ((!isNullOrUndefined(splitText[0].match(/\\<sup>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sup>/g))) &&\n                (splitText[0].match(/\\<sup>/g).length % 2 === 1 && splitText[1].match(/\\<\\/sup>/g).length % 2 === 1) &&\n                cmd === 'SuperScript') {\n                isFormat = true;\n            }\n            /* eslint-enable */\n        }\n        if ((this.isBold(splitText[0], cmdB) && this.isBold(splitText[1], cmdB)) &&\n            (splitText[0].match(this.multiCharRegx(cmdB)).length % 2 === 1 &&\n                splitText[1].match(this.multiCharRegx(cmdB)).length % 2 === 1) && cmd === 'Bold') {\n            isFormat = true;\n        }\n        splitText[0] = this.isBold(splitText[0], cmdB) ? splitText[0].replace(this.multiCharRegx(cmdB), '$%@') : splitText[0];\n        splitText[1] = this.isBold(splitText[1], cmdB) ? splitText[1].replace(this.multiCharRegx(cmdB), '$%@') : splitText[1];\n        if ((!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.Italic)) &&\n            !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.Italic))) &&\n            (this.isMatch(splitText[0], this.syntax.Italic).length % 2 === 1 &&\n                this.isMatch(splitText[1], this.syntax.Italic).length % 2 === 1) && cmd === 'Italic') {\n            isFormat = true;\n        }\n        if ((!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.StrikeThrough)) &&\n            !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.StrikeThrough))) &&\n            (this.isMatch(splitText[0], this.syntax.StrikeThrough).length % 2 === 1 &&\n                this.isMatch(splitText[1], this.syntax.StrikeThrough).length % 2 === 1) && cmd === 'StrikeThrough') {\n            isFormat = true;\n        }\n        if ((!isNullOrUndefined(this.isMatch(splitText[0], this.syntax.InlineCode)) &&\n            !isNullOrUndefined(this.isMatch(splitText[1], this.syntax.InlineCode))) &&\n            (this.isMatch(splitText[0], this.syntax.InlineCode).length % 2 === 1 &&\n                this.isMatch(splitText[1], this.syntax.InlineCode).length % 2 === 1) && cmd === 'InlineCode') {\n            isFormat = true;\n        }\n        /* eslint-disable */\n        if ((!isNullOrUndefined(splitText[0].match(/\\<sub>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sub>/g))) &&\n            (splitText[0].match(/\\<sub>/g).length % 2 === 1 && splitText[1].match(/\\<\\/sub>/g).length % 2 === 1) && cmd === 'SubScript') {\n            isFormat = true;\n        }\n        if ((!isNullOrUndefined(splitText[0].match(/\\<sup>/g)) && !isNullOrUndefined(splitText[1].match(/\\<\\/sup>/g))) &&\n            (splitText[0].match(/\\<sup>/g).length % 2 === 1 && splitText[1].match(/\\<\\/sup>/g).length % 2 === 1) && cmd === 'SuperScript') {\n            isFormat = true;\n            /* eslint-enable */\n        }\n        return isFormat;\n    };\n    MDSelectionFormats.prototype.applyCommands = function (e) {\n        this.currentAction = e.subCommand;\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var addedLength = 0;\n        var selection = this.parent.markdownSelection.getSelectedInlinePoints(textArea);\n        if (this.isAppliedCommand(e.subCommand) && selection.text !== '') {\n            var startCmd = this.syntax[e.subCommand];\n            var endCmd = e.subCommand === 'SubScript' ? '</sub>' :\n                e.subCommand === 'SuperScript' ? '</sup>' : this.syntax[e.subCommand];\n            var startLength = (e.subCommand === 'UpperCase' || e.subCommand === 'LowerCase') ? 0 : startCmd.length;\n            var startNo = textArea.value.substr(0, selection.start).lastIndexOf(startCmd);\n            var endNo = textArea.value.substr(selection.end, textArea.value.length).indexOf(endCmd);\n            endNo = endNo + selection.end;\n            var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), startCmd, '', startNo, selection.start);\n            var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), endCmd, '', 0, endNo);\n            textArea.value = repStartText + selection.text + repEndText;\n            this.restore(textArea, start - startLength, end - startLength, e);\n            return;\n        }\n        if (selection.text !== '' && !this.isApplied(selection, e.subCommand)) {\n            addedLength = (e.subCommand === 'UpperCase' || e.subCommand === 'LowerCase') ? 0 :\n                this.syntax[e.subCommand].length;\n            var repStart = textArea.value.substr(selection.start - this.syntax[e.subCommand].length, this.syntax[e.subCommand].length);\n            var repEnd = void 0;\n            if ((repStart === e.subCommand) || ((selection.start - this.syntax[e.subCommand].length ===\n                textArea.value.indexOf(this.syntax[e.subCommand])) && (selection.end === textArea.value.lastIndexOf(this.syntax[e.subCommand]) || selection.end === textArea.value.lastIndexOf('</' + this.syntax[e.subCommand].substring(1, 5))))) {\n                if (e.subCommand === 'SubScript' || e.subCommand === 'SuperScript') {\n                    repEnd = textArea.value.substr(selection.end, this.syntax[e.subCommand].length + 1);\n                }\n                else {\n                    repEnd = textArea.value.substr(selection.end, this.syntax[e.subCommand].length);\n                }\n                var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), repStart, '', selection.start - this.syntax[e.subCommand].length, selection.start);\n                var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), repEnd, '', 0, repEnd.length);\n                textArea.value = repStartText + selection.text + repEndText;\n                this.restore(textArea, start - addedLength, end - addedLength, e);\n            }\n            else {\n                if (e.subCommand === 'SubScript' || e.subCommand === 'SuperScript') {\n                    selection.text = this.syntax[e.subCommand] + selection.text\n                        + '</' + this.syntax[e.subCommand].substring(1, 5);\n                }\n                else if (e.subCommand === 'UpperCase' || e.subCommand === 'LowerCase') {\n                    selection.text = (e.subCommand === 'UpperCase') ? selection.text.toUpperCase()\n                        : selection.text.toLowerCase();\n                }\n                else {\n                    selection.text = this.syntax[e.subCommand] + selection.text + this.syntax[e.subCommand];\n                }\n                textArea.value = textArea.value.substr(0, selection.start) + selection.text +\n                    textArea.value.substr(selection.end, textArea.value.length);\n                this.restore(textArea, start + addedLength, end + addedLength, e);\n            }\n        }\n        else if (e.subCommand !== 'UpperCase' && e.subCommand !== 'LowerCase') {\n            if (e.subCommand === 'SubScript' || e.subCommand === 'SuperScript') {\n                selection.text = this.textReplace(selection.text, e.subCommand);\n                selection.text = this.syntax[e.subCommand] + selection.text\n                    + '</' + this.syntax[e.subCommand].substring(1, 5);\n            }\n            else {\n                selection.text = this.textReplace(selection.text, e.subCommand);\n                selection.text = this.syntax[e.subCommand] + selection.text + this.syntax[e.subCommand];\n            }\n            textArea.value = textArea.value.substr(0, selection.start)\n                + selection.text + textArea.value.substr(selection.end, textArea.value.length);\n            addedLength = this.syntax[e.subCommand].length;\n            if (selection.start === selection.end) {\n                this.restore(textArea, start + addedLength, end + addedLength, e);\n            }\n            else {\n                this.restore(textArea, start + addedLength, end - addedLength, e);\n            }\n        }\n        else {\n            this.restore(textArea, start, end, e);\n        }\n        this.parent.undoRedoManager.saveData();\n    };\n    MDSelectionFormats.prototype.replaceAt = function (input, search, replace, start, end) {\n        return input.slice(0, start)\n            + input.slice(start, end).replace(search, replace)\n            + input.slice(end);\n    };\n    MDSelectionFormats.prototype.restore = function (textArea, start, end, event) {\n        this.selection.save(start, end);\n        this.selection.restore(textArea);\n        if (event && event.callBack) {\n            event.callBack({\n                requestType: this.currentAction,\n                selectedText: this.selection.getSelectedText(textArea),\n                editorMode: 'Markdown',\n                event: event.event\n            });\n        }\n    };\n    MDSelectionFormats.prototype.textReplace = function (text, command) {\n        var regx = this.singleCharRegx(this.syntax[\"\" + command]);\n        switch (command) {\n            case 'Bold':\n                regx = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n                text = text.replace(regx, '');\n                break;\n            case 'Italic':\n                if (!this.isBold(text, this.syntax[\"\" + command].substr(0, 1))) {\n                    text = text.replace(regx, '');\n                }\n                else {\n                    var regxB = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n                    var repText = text;\n                    repText = repText.replace(regxB, '$%@').replace(regx, '');\n                    var regxTemp = new RegExp('\\\\$%@', 'g');\n                    text = repText.replace(regxTemp, this.syntax[\"\" + command].substr(0, 1) + this.syntax[\"\" + command].substr(0, 1));\n                }\n                break;\n            case 'StrikeThrough':\n                text = text.replace(regx, '');\n                break;\n            case 'InlineCode':\n                text = text.replace(regx, '');\n                break;\n            case 'SubScript':\n                text = text.replace(/<sub>/g, '').replace(/<\\/sub>/g, '');\n                break;\n            case 'SuperScript':\n                text = text.replace(/<sup>/g, '').replace(/<\\/sup>/g, '');\n                break;\n        }\n        return text;\n    };\n    MDSelectionFormats.prototype.isApplied = function (line, command) {\n        var regx = this.singleCharRegx(this.syntax[\"\" + command]);\n        var regExp;\n        switch (command) {\n            case 'SubScript':\n            case 'SuperScript':\n                regx = this.singleCharRegx(this.syntax[\"\" + command]);\n                return regx.test(line.text);\n            case 'Bold':\n            case 'StrikeThrough':\n                regx = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n                return regx.test(line.text);\n            case 'UpperCase':\n            case 'LowerCase':\n                regExp = RegExp;\n                regx = new regExp('^[' + this.syntax[\"\" + command] + ']*$', 'g');\n                return regx.test(line.text);\n            case 'Italic': {\n                var regTest = void 0;\n                var regxB = this.multiCharRegx(this.syntax[\"\" + command].substr(0, 1));\n                if (regxB.test(line.text)) {\n                    var repText = line.text;\n                    repText = repText.replace(regxB, '$%#');\n                    regTest = regx.test(repText);\n                }\n                else {\n                    regTest = regx.test(line.text);\n                }\n                return regTest;\n            }\n            case 'InlineCode':\n                return regx.test(line.text);\n        }\n    };\n    MDSelectionFormats.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MDSelectionFormats;\n}());\nexport { MDSelectionFormats };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}