{"ast":null,"code":"import * as CONSTANT from '../base/constant';\nimport { InsertHtml } from './inserthtml';\nimport * as EVENTS from './../../common/constant';\n/**\n * Insert a Text Node or Text\n *\n * @hidden\n\n */\nvar InsertTextExec = /** @class */function () {\n  /**\n   * Constructor for creating the InsertText plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element\n   * @hidden\n    */\n  function InsertTextExec(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  InsertTextExec.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.INSERT_TEXT_TYPE, this.insertText, this);\n    this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n  };\n  InsertTextExec.prototype.removeEventListener = function () {\n    this.parent.observer.off(CONSTANT.INSERT_TEXT_TYPE, this.insertText);\n    this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n  };\n  InsertTextExec.prototype.insertText = function (e) {\n    var node = document.createTextNode(e.value);\n    InsertHtml.Insert(this.parent.currentDocument, node, this.parent.editableElement);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  InsertTextExec.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return InsertTextExec;\n}();\nexport { InsertTextExec };","map":{"version":3,"names":["CONSTANT","InsertHtml","EVENTS","InsertTextExec","parent","addEventListener","prototype","observer","on","INSERT_TEXT_TYPE","insertText","INTERNAL_DESTROY","destroy","removeEventListener","off","e","node","document","createTextNode","value","Insert","currentDocument","editableElement","callBack","requestType","subCommand","editorMode","event","range","nodeSelection","getRange","elements","getSelectedNodes"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/insert-text.js"],"sourcesContent":["import * as CONSTANT from '../base/constant';\nimport { InsertHtml } from './inserthtml';\nimport * as EVENTS from './../../common/constant';\n/**\n * Insert a Text Node or Text\n *\n * @hidden\n\n */\nvar InsertTextExec = /** @class */ (function () {\n    /**\n     * Constructor for creating the InsertText plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element\n     * @hidden\n\n     */\n    function InsertTextExec(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    InsertTextExec.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.INSERT_TEXT_TYPE, this.insertText, this);\n        this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n    };\n    InsertTextExec.prototype.removeEventListener = function () {\n        this.parent.observer.off(CONSTANT.INSERT_TEXT_TYPE, this.insertText);\n        this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n    };\n    InsertTextExec.prototype.insertText = function (e) {\n        var node = document.createTextNode(e.value);\n        InsertHtml.Insert(this.parent.currentDocument, node, this.parent.editableElement);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    InsertTextExec.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InsertTextExec;\n}());\nexport { InsertTextExec };\n"],"mappings":"AAAA,OAAO,KAAKA,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAO,KAAKC,MAAM,MAAM,yBAAyB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,cAAc,GAAG,aAAe,YAAY;EAC5C;AACJ;AACA;AACA;AACA;AACA;EAEI,SAASA,cAAcA,CAACC,MAAM,EAAE;IAC5B,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3B;EACAF,cAAc,CAACG,SAAS,CAACD,gBAAgB,GAAG,YAAY;IACpD,IAAI,CAACD,MAAM,CAACG,QAAQ,CAACC,EAAE,CAACR,QAAQ,CAACS,gBAAgB,EAAE,IAAI,CAACC,UAAU,EAAE,IAAI,CAAC;IACzE,IAAI,CAACN,MAAM,CAACG,QAAQ,CAACC,EAAE,CAACN,MAAM,CAACS,gBAAgB,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAAC;EACxE,CAAC;EACDT,cAAc,CAACG,SAAS,CAACO,mBAAmB,GAAG,YAAY;IACvD,IAAI,CAACT,MAAM,CAACG,QAAQ,CAACO,GAAG,CAACd,QAAQ,CAACS,gBAAgB,EAAE,IAAI,CAACC,UAAU,CAAC;IACpE,IAAI,CAACN,MAAM,CAACG,QAAQ,CAACO,GAAG,CAACZ,MAAM,CAACS,gBAAgB,EAAE,IAAI,CAACC,OAAO,CAAC;EACnE,CAAC;EACDT,cAAc,CAACG,SAAS,CAACI,UAAU,GAAG,UAAUK,CAAC,EAAE;IAC/C,IAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAACH,CAAC,CAACI,KAAK,CAAC;IAC3ClB,UAAU,CAACmB,MAAM,CAAC,IAAI,CAAChB,MAAM,CAACiB,eAAe,EAAEL,IAAI,EAAE,IAAI,CAACZ,MAAM,CAACkB,eAAe,CAAC;IACjF,IAAIP,CAAC,CAACQ,QAAQ,EAAE;MACZR,CAAC,CAACQ,QAAQ,CAAC;QACPC,WAAW,EAAET,CAAC,CAACU,UAAU;QACzBC,UAAU,EAAE,MAAM;QAClBC,KAAK,EAAEZ,CAAC,CAACY,KAAK;QACdC,KAAK,EAAE,IAAI,CAACxB,MAAM,CAACyB,aAAa,CAACC,QAAQ,CAAC,IAAI,CAAC1B,MAAM,CAACiB,eAAe,CAAC;QACtEU,QAAQ,EAAE,IAAI,CAAC3B,MAAM,CAACyB,aAAa,CAACG,gBAAgB,CAAC,IAAI,CAAC5B,MAAM,CAACiB,eAAe;MACpF,CAAC,CAAC;IACN;EACJ,CAAC;EACDlB,cAAc,CAACG,SAAS,CAACM,OAAO,GAAG,YAAY;IAC3C,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC9B,CAAC;EACD,OAAOV,cAAc;AACzB,CAAC,CAAC,CAAE;AACJ,SAASA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}