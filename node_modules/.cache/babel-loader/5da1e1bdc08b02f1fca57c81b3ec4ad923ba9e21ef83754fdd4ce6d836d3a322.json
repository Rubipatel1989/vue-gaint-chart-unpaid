{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.every.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { getValue, createElement, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { parentsUntil, formatString, isScheduledTask, getIndex } from '../base/utils';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * File for handling connector line edit operation in Gantt.\n *\n */\nvar ConnectorLineEdit = /** @class */function () {\n  function ConnectorLineEdit(ganttObj) {\n    /**\n     * @private\n     */\n    this.validationPredecessor = null;\n    /** @private */\n    this.confirmPredecessorDialog = null;\n    /** @private */\n    this.predecessorIndex = null;\n    /** @private */\n    this.childRecord = null;\n    this.validatedId = [];\n    this.validatedOffsetIds = [];\n    this.isPublicDependencyDelete = false;\n    this.parent = ganttObj;\n    this.dateValidateModule = this.parent.dateValidationModule;\n    this.parent.on('initPredessorDialog', this.initPredecessorValidationDialog, this);\n  }\n  /**\n   * To update connector line edit element.\n   *\n   * @param {PointerEvent} e .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.updateConnectorLineEditElement = function (e) {\n    var element = this.getConnectorLineHoverElement(e.target);\n    if (!getValue('editModule.taskbarEditModule.taskBarEditAction', this.parent)) {\n      this.highlightConnectorLineElements(element);\n    }\n  };\n  /**\n   * To get hovered connector line element.\n   *\n   * @param {EventTarget} target .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.getConnectorLineHoverElement = function (target) {\n    var isOnLine = parentsUntil(target, cls.connectorLineSVG);\n    var isArrow = parentsUntil(target, cls.connectorLineArrow);\n    var isCriticalLine = parentsUntil(target, cls.criticalConnectorLineSVG);\n    var isCriticalArrow = parentsUntil(target, cls.criticalConnectorArrowSVG);\n    if (isOnLine || isArrow || isCriticalLine || isCriticalArrow) {\n      return parentsUntil(target, cls.connectorLineContainer);\n    } else {\n      return null;\n    }\n  };\n  /**\n   * To highlight connector line while hover.\n   *\n   * @param {Element} element .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.highlightConnectorLineElements = function (element) {\n    if (element) {\n      if (element !== this.connectorLineElement) {\n        this.removeHighlight();\n        this.addHighlight(element);\n      }\n    } else {\n      this.removeHighlight();\n    }\n  };\n  /**\n   * To add connector line highlight class.\n   *\n   * @param {Element} element .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.addHighlight = function (element) {\n    this.connectorLineElement = element;\n    var pathElement = element.querySelector('.' + cls.connectorLineSVG);\n    if (pathElement) {\n      pathElement.setAttribute('stroke-width', (this.parent.connectorLineModule['lineStroke'] + 1).toString());\n    }\n  };\n  /**\n   * To remove connector line highlight class.\n   *\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.removeHighlight = function () {\n    if (this.connectorLineElement) {\n      var pathElement = this.connectorLineElement.querySelector('.' + cls.connectorLineSVG);\n      if (pathElement) {\n        pathElement.setAttribute('stroke-width', this.parent.connectorLineModule['lineStroke'].toString());\n      }\n      this.connectorLineElement = null;\n    }\n  };\n  /**\n   * To remove connector line highlight class.\n   *\n   * @param {IGanttData[]} records .\n   * @returns {string} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.getEditedConnectorLineString = function (records) {\n    var ganttRecord;\n    var predecessorsCollection;\n    var predecessor;\n    var parentGanttRecord;\n    var childGanttRecord;\n    var connectorObj;\n    var idArray = [];\n    var lineArray = [];\n    var editedConnectorLineString = '';\n    for (var count = 0; count < records.length; count++) {\n      ganttRecord = records[count];\n      predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n      if (predecessorsCollection) {\n        for (var predecessorCount = 0; predecessorCount < predecessorsCollection.length; predecessorCount++) {\n          predecessor = predecessorsCollection[predecessorCount];\n          var from = 'from';\n          var to = 'to';\n          this.parent.connectorLineModule.removeConnectorLineById('parent' + predecessor[from] + 'child' + predecessor[to]);\n          parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[\"\" + from]);\n          childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[\"\" + to]);\n          if (!this.parent.allowParentDependency && parentGanttRecord && parentGanttRecord.expanded === true || childGanttRecord && childGanttRecord.expanded === true || this.parent.allowParentDependency && (parentGanttRecord || childGanttRecord)) {\n            connectorObj = this.parent.predecessorModule.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n            if (!isNullOrUndefined(connectorObj)) {\n              var lineIndex = idArray.indexOf(connectorObj.connectorLineId);\n              var lineString = this.parent.connectorLineModule.getConnectorLineTemplate(connectorObj);\n              if (lineIndex !== -1) {\n                lineArray[lineIndex] = lineString;\n              } else {\n                idArray.push(connectorObj.connectorLineId);\n                lineArray.push(lineString);\n              }\n            }\n          }\n        }\n        editedConnectorLineString = lineArray.join('');\n      }\n    }\n    return editedConnectorLineString;\n  };\n  /**\n   * Tp refresh connector lines of edited records\n   *\n   * @param {IGanttData[]} editedRecord .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.refreshEditedRecordConnectorLine = function (editedRecord) {\n    this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.previousRecords);\n    this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n    var editedConnectorLineString = this.getEditedConnectorLineString(editedRecord);\n    this.parent.connectorLineModule.svgObject.innerHTML = this.parent.connectorLineModule.svgObject.innerHTML + editedConnectorLineString;\n  };\n  ConnectorLineEdit.prototype.idFromPredecessor = function (pre) {\n    var preArray = pre.split(',');\n    var preIdArray = [];\n    var values = [];\n    var match = [];\n    for (var j = 0; j < preArray.length; j++) {\n      var strArray = [];\n      var firstPart = void 0;\n      var isAlpha = false;\n      var predecessorName = void 0;\n      var isGUId = false;\n      var regex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\n      var elSplit = preArray[j].split('-');\n      var id = void 0;\n      if (elSplit.length === 6) {\n        elSplit[4] = elSplit[4] + '-' + elSplit[5];\n        elSplit.pop();\n      }\n      if (elSplit.length === 5 && elSplit[4].length >= 12) {\n        id = preArray[j].substring(0, 36);\n        if (regex.test(id)) {\n          isGUId = true;\n        }\n      }\n      if (preArray[j].includes('-')) {\n        if (preArray[j].includes('-') && preArray[j].includes('days')) {\n          predecessorName = preArray[j].slice(-9).toString();\n        }\n        if (preArray[j].includes('-') && preArray[j].includes('day')) {\n          predecessorName = preArray[j].slice(-8).toString();\n        } else {\n          predecessorName = preArray[j].slice(-2).toString();\n        }\n        if (preArray[j].includes('-') && /[A-Za-z]/.test(predecessorName)) {\n          var indexFS = preArray[j].indexOf(predecessorName);\n          if (indexFS !== -1) {\n            firstPart = preArray[j].substring(0, indexFS);\n            if (firstPart.includes('-')) {\n              isAlpha = true;\n            }\n          }\n        }\n      }\n      if (isGUId) {\n        var split = void 0;\n        split = elSplit[4].split('+');\n        var spliceLength = void 0;\n        if (split.length === 1) {\n          values[0] = preArray[j];\n        } else {\n          spliceLength = split[1].length;\n          values[0] = preArray[j].slice(0, -(spliceLength + 1));\n          values[1] = split[1];\n        }\n        if (elSplit[4].indexOf('-') >= 0) {\n          split = elSplit[4].split('-');\n          if (split.length === 1) {\n            values[0] = preArray[j];\n          } else {\n            spliceLength = split[1].length;\n            values[0] = preArray[j].slice(0, -(spliceLength + 1));\n            values[1] = split[1];\n          }\n        }\n      } else {\n        if (isAlpha && firstPart.includes('-')) {\n          values[0] = firstPart;\n        } else {\n          values = preArray[j].split('+');\n          if (preArray[j].indexOf('-') >= 0) {\n            values = preArray[j].split('-');\n          }\n        }\n      }\n      if (!isNullOrUndefined(values[0])) {\n        var ids = this.parent.viewType === 'ResourceView' ? this.parent.getTaskIds() : this.parent.ids;\n        if (ids.indexOf(values[0]) === -1) {\n          if (values[0].indexOf(' ') !== -1) {\n            match = values[0].split(' ');\n            if (match.length === 1) {\n              match = values[0].match(/(\\d+|[A-z]+)/g);\n            }\n            strArray.push(match[0]);\n          } else {\n            if (values[0].length === 1 || values[0].length === 2) {\n              strArray.push(values[0]);\n            } else {\n              strArray.push(values[0].slice(0, -2));\n            }\n          }\n        } else {\n          strArray.push(values[0]);\n        }\n      }\n      preIdArray.push(strArray.join(''));\n    }\n    return preIdArray;\n  };\n  ConnectorLineEdit.prototype.predecessorValidation = function (predecessor, record) {\n    var recordId = record.rowUniqueID;\n    var currentId;\n    var currentRecord;\n    for (var count = 0; count < predecessor.length; count++) {\n      currentId = predecessor[count];\n      var visitedIdArray = [];\n      var predecessorCollection = predecessor.slice(0);\n      predecessorCollection.splice(count, 1);\n      var _loop_1 = function () {\n        var currentIdArray = [];\n        if (visitedIdArray.indexOf(currentId) === -1) {\n          //Predecessor id not in records collection\n          if (isNullOrUndefined(this_1.parent.connectorLineModule.getRecordByID(currentId))) {\n            return {\n              value: false\n            };\n          }\n          currentRecord = this_1.parent.connectorLineModule.getRecordByID(currentId).ganttProperties;\n          if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n            currentRecord.predecessor.forEach(function (value) {\n              if (currentRecord.rowUniqueID.toString() !== value.from) {\n                currentIdArray.push(value.from.toString());\n              }\n            });\n          }\n          /* eslint-disable-next-line */\n          if (recordId.toString() === currentRecord.rowUniqueID.toString() || currentIdArray.indexOf(recordId.toString()) !== -1) {\n            return {\n              value: false\n            };\n          }\n          visitedIdArray.push(currentId);\n          if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n            currentId = currentRecord.predecessor[0].from;\n          } else {\n            return \"break\";\n          }\n        } else {\n          return \"break\";\n        }\n      };\n      var this_1 = this;\n      while (currentId !== null) {\n        var state_1 = _loop_1();\n        if (typeof state_1 === \"object\") return state_1.value;\n        if (state_1 === \"break\") break;\n      }\n    }\n    return true;\n  };\n  // Get the root parent of the record\n  ConnectorLineEdit.prototype.getRootParent = function (rec) {\n    var parentRec = rec;\n    if (rec.parentItem) {\n      parentRec = this.parent.flatData.filter(function (item) {\n        return item.uniqueID === rec.parentUniqueID;\n      })[0];\n      if (parentRec.parentItem) {\n        parentRec = this.getRootParent(parentRec);\n      }\n      return parentRec;\n    }\n    return parentRec;\n  };\n  // To check whether the predecessor drawn is valid for parent task\n  ConnectorLineEdit.prototype.validateParentPredecessor = function (fromRecord, toRecord) {\n    if (fromRecord && toRecord) {\n      if (toRecord.hasChildRecords && !fromRecord.hasChildRecords) {\n        if (fromRecord.parentUniqueID === toRecord.uniqueID) {\n          return false;\n        } else {\n          do {\n            if (fromRecord.parentItem) {\n              fromRecord = this.parent.flatData[this.parent.ids.indexOf(fromRecord.parentItem.taskId)];\n              if (fromRecord.uniqueID === toRecord.uniqueID) {\n                return false;\n              }\n            }\n          } while (fromRecord.parentItem);\n        }\n      } else if (!toRecord.hasChildRecords && fromRecord.hasChildRecords) {\n        if (toRecord.parentUniqueID === fromRecord.uniqueID) {\n          return false;\n        } else {\n          do {\n            if (toRecord.parentItem) {\n              toRecord = this.parent.flatData[this.parent.ids.indexOf(toRecord.parentItem.taskId)];\n              if (toRecord.uniqueID === fromRecord.uniqueID) {\n                return false;\n              }\n            }\n          } while (toRecord.parentItem);\n        }\n      } else if (toRecord.hasChildRecords && fromRecord.hasChildRecords) {\n        if (toRecord.parentItem && fromRecord.parentItem) {\n          if (fromRecord.parentUniqueID === toRecord.uniqueID || fromRecord.uniqueID === toRecord.parentUniqueID) {\n            return false;\n          }\n        } else {\n          if (!toRecord.parentItem && fromRecord.parentItem) {\n            var fromRootParent = this.parent.connectorLineEditModule.getRootParent(fromRecord);\n            if (fromRootParent.uniqueID === toRecord.uniqueID) {\n              return false;\n            }\n          } else if (toRecord.parentItem && !fromRecord.parentItem) {\n            var toRootParent = this.parent.connectorLineEditModule.getRootParent(toRecord);\n            if (toRootParent.uniqueID === fromRecord.uniqueID) {\n              return false;\n            }\n          }\n        }\n      }\n    }\n    return true;\n  };\n  /**\n   * To validate predecessor relations\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {string} predecessorString .\n   * @returns {boolean} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.validatePredecessorRelation = function (ganttRecord, predecessorString) {\n    var flag = true;\n    var recordId = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId : ganttRecord.ganttProperties.rowUniqueID;\n    var predecessorIdArray;\n    var currentId;\n    if (!isNullOrUndefined(predecessorString) && predecessorString.length > 0) {\n      predecessorIdArray = this.idFromPredecessor(predecessorString);\n      var _loop_2 = function (count) {\n        //Check edited item has parent item in predecessor collection\n        if (!this_2.parent.allowParentDependency) {\n          var checkParent = this_2.checkParentRelation(ganttRecord, predecessorIdArray);\n          if (!checkParent) {\n            return {\n              value: false\n            };\n          }\n        } else {\n          if (parseInt(predecessorIdArray[predecessorIdArray.length - 1], 10) !== ganttRecord[this_2.parent.taskFields.id]) {\n            var num = this_2.parent.ids.indexOf(predecessorIdArray[predecessorIdArray.length - 1]);\n            var fromRecord = this_2.parent.currentViewData[num];\n            if (fromRecord && ganttRecord) {\n              flag = this_2.validateParentPredecessor(fromRecord, ganttRecord);\n            }\n          }\n        }\n        // Check if predecessor exist more then one\n        var tempIdArray = predecessorIdArray.slice(0);\n        var checkArray = [];\n        var countFlag = true;\n        tempIdArray.forEach(function (value) {\n          if (checkArray.indexOf(value) === -1) {\n            checkArray.push(value);\n          } else {\n            countFlag = false;\n          }\n        });\n        if (!countFlag) {\n          return {\n            value: false\n          };\n        }\n        //Cyclick check\n        currentId = predecessorIdArray[count];\n        var visitedIdArray = [];\n        var predecessorCollection = predecessorIdArray.slice(0);\n        predecessorCollection.splice(count, 1);\n        var _loop_3 = function () {\n          var currentIdArray = [];\n          var currentIdIndex;\n          var currentRecord;\n          if (visitedIdArray.indexOf(currentId) === -1) {\n            //Predecessor id not in records collection\n            if (isNullOrUndefined(this_2.parent.connectorLineModule.getRecordByID(currentId.toString()))) {\n              return {\n                value: false\n              };\n            }\n            currentRecord = this_2.parent.connectorLineModule.getRecordByID(currentId.toString()).ganttProperties;\n            //  let currentPredecessor='';\n            if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n              currentRecord.predecessor.forEach(function (value, index) {\n                if (currentRecord.rowUniqueID.toString() !== value.from) {\n                  currentIdArray.push(value.from.toString());\n                  currentIdIndex = index;\n                }\n              });\n              //    currentPredecessor=currentRecord.predecessor[0].from\n            }\n            if (recordId.toString() === currentRecord.rowUniqueID.toString() || currentIdArray.indexOf(recordId.toString()) !== -1) {\n              return {\n                value: false\n              };\n            }\n            visitedIdArray.push(currentId);\n            if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n              var result = void 0;\n              if (currentIdArray.length > 1) {\n                result = this_2.predecessorValidation(currentIdArray, ganttRecord.ganttProperties);\n              } else if (currentIdArray.length === 1) {\n                currentId = currentRecord.predecessor[currentIdIndex].from;\n              }\n              if (result === false) {\n                return {\n                  value: false\n                };\n              }\n            } else {\n              return \"break\";\n            }\n          } else {\n            return \"break\";\n          }\n        };\n        while (currentId !== null) {\n          var state_3 = _loop_3();\n          if (typeof state_3 === \"object\") return state_3;\n          if (state_3 === \"break\") break;\n        }\n      };\n      var this_2 = this;\n      for (var count = 0; count < predecessorIdArray.length; count++) {\n        var state_2 = _loop_2(count);\n        if (typeof state_2 === \"object\") return state_2.value;\n      }\n    }\n    return flag;\n  };\n  /**\n   * To add dependency for Task\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {string} predecessorString .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.addPredecessor = function (ganttRecord, predecessorString) {\n    var tempPredecessorString = isNullOrUndefined(ganttRecord.ganttProperties.predecessorsName) || ganttRecord.ganttProperties.predecessorsName === '' ? predecessorString : ganttRecord.ganttProperties.predecessorsName + ',' + predecessorString;\n    this.updatePredecessorHelper(ganttRecord, tempPredecessorString);\n  };\n  /**\n   * To remove dependency from task\n   *\n   * @param {IGanttData} ganttRecord .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.removePredecessor = function (ganttRecord) {\n    this.isPublicDependencyDelete = true;\n    this.updatePredecessorHelper(ganttRecord, null);\n  };\n  /**\n   * To modify current dependency values of Task\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {string} predecessorString .\n   * @param {ITaskbarEditedEventArgs} editedArgs .\n   * @returns {boolean} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.updatePredecessor = function (ganttRecord, predecessorString, editedArgs) {\n    return this.updatePredecessorHelper(ganttRecord, predecessorString, editedArgs);\n  };\n  ConnectorLineEdit.prototype.updatePredecessorHelper = function (ganttRecord, predecessorString, editedArgs) {\n    if (isUndefined(predecessorString) || this.validatePredecessorRelation(ganttRecord, predecessorString)) {\n      this.parent.isOnEdit = true;\n      var predecessorCollection = [];\n      if (!isNullOrUndefined(predecessorString) && predecessorString !== '') {\n        predecessorCollection = this.parent.predecessorModule.calculatePredecessor(predecessorString, ganttRecord);\n      }\n      this.parent.setRecordValue('predecessor', predecessorCollection, ganttRecord.ganttProperties, true);\n      var stringValue = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n      this.parent.setRecordValue('predecessorsName', stringValue, ganttRecord.ganttProperties, true);\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, stringValue, ganttRecord);\n      this.parent.setRecordValue(this.parent.taskFields.dependency, stringValue, ganttRecord);\n      var args = {};\n      args.action = editedArgs && editedArgs.action && editedArgs.action === 'CellEditing' ? editedArgs.action : this.parent.contextMenuModule && this.parent.contextMenuModule['isCntxtMenuDependencyDelete'] || this.isPublicDependencyDelete ? 'DeleteConnectorLine' : 'DrawConnectorLine';\n      args.data = ganttRecord;\n      this.parent.editModule.initiateUpdateAction(args);\n      return true;\n    } else {\n      if (ganttRecord.taskData[this.parent.taskFields.dependency]) {\n        ganttRecord.taskData[this.parent.taskFields.dependency] = null;\n      }\n      var err = predecessorString + \" is an invalid relation for task \" + this.parent.taskFields.id + \". Kindly ensure the \" + this.parent.taskFields.dependency + \" field contains only valid predecessor relations.\";\n      this.parent.trigger('actionFailure', {\n        error: err\n      });\n      return false;\n    }\n  };\n  ConnectorLineEdit.prototype.checkParentRelation = function (ganttRecord, predecessorIdArray) {\n    var editingData = ganttRecord;\n    var checkParent = true;\n    if (editingData && editingData.parentItem) {\n      if (predecessorIdArray.indexOf(editingData.parentItem.taskId.toString()) !== -1) {\n        return false;\n      }\n    }\n    var _loop_4 = function (p) {\n      var record = this_3.parent.currentViewData.filter(function (item) {\n        return item && item.ganttProperties.rowUniqueID.toString() === predecessorIdArray[p].toString();\n      });\n      if (record[0] && record[0].hasChildRecords) {\n        return {\n          value: false\n        };\n      }\n    };\n    var this_3 = this;\n    for (var p = 0; p < predecessorIdArray.length; p++) {\n      var state_4 = _loop_4(p);\n      if (typeof state_4 === \"object\") return state_4.value;\n    }\n    return checkParent;\n  };\n  ConnectorLineEdit.prototype.initPredecessorValidationDialog = function () {\n    if (this.parent.taskFields.dependency && this.parent.isInPredecessorValidation) {\n      var dialogElement = createElement('div', {\n        id: this.parent.element.id + '_dialogValidationRule'\n      });\n      this.parent.element.appendChild(dialogElement);\n      this.renderValidationDialog();\n    }\n  };\n  /**\n   * To render validation dialog\n   *\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.renderValidationDialog = function () {\n    var validationDialog = new Dialog({\n      header: 'Validate Editing',\n      isModal: true,\n      enableRtl: this.parent.enableRtl,\n      visible: false,\n      width: '50%',\n      showCloseIcon: true,\n      close: this.validationDialogClose.bind(this),\n      content: '',\n      buttons: [{\n        click: this.validationDialogOkButton.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('okText'),\n          isPrimary: true\n        }\n      }, {\n        click: this.validationDialogCancelButton.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('cancel')\n        }\n      }],\n      target: this.parent.element,\n      animationSettings: {\n        effect: 'None'\n      }\n    });\n    document.getElementById(this.parent.element.id + '_dialogValidationRule').innerHTML = '';\n    validationDialog.isStringTemplate = true;\n    validationDialog.appendTo('#' + this.parent.element.id + '_dialogValidationRule');\n    this.parent.validationDialogElement = validationDialog;\n  };\n  ConnectorLineEdit.prototype.validationDialogOkButton = function () {\n    var currentArgs = this.parent.currentEditedArgs;\n    currentArgs.validateMode.preserveLinkWithEditing = document.getElementById(this.parent.element.id + '_ValidationAddlineOffset').checked;\n    currentArgs.validateMode.removeLink = document.getElementById(this.parent.element.id + '_ValidationRemoveline').checked;\n    currentArgs.validateMode.respectLink = document.getElementById(this.parent.element.id + '_ValidationCancel').checked;\n    this.applyPredecessorOption();\n    this.parent.validationDialogElement.hide();\n  };\n  ConnectorLineEdit.prototype.validationDialogCancelButton = function () {\n    this.parent.currentEditedArgs.validateMode.respectLink = true;\n    this.applyPredecessorOption();\n    this.parent.validationDialogElement.hide();\n  };\n  ConnectorLineEdit.prototype.validationDialogClose = function (e) {\n    if (getValue('isInteraction', e)) {\n      this.parent.currentEditedArgs.validateMode.respectLink = true;\n      this.applyPredecessorOption();\n    }\n  };\n  /**\n   * Validate and apply the predecessor option from validation dialog\n   *\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.applyPredecessorOption = function () {\n    var args = this.parent.currentEditedArgs;\n    var ganttRecord = args.data;\n    if (args.validateMode.respectLink) {\n      this.parent.editModule.reUpdatePreviousRecords();\n      this.parent.chartRowsModule.refreshRecords([args.data]);\n    } else if (args.validateMode.removeLink) {\n      this.checkChildRecords(ganttRecord);\n      this.parent.editModule.updateEditedTask(args.editEventArgs);\n    } else if (args.validateMode.preserveLinkWithEditing) {\n      var connectedTaskId_1;\n      if (this.parent.updateOffsetOnTaskbarEdit) {\n        var taskId_1 = ganttRecord.ganttProperties.taskId;\n        if (ganttRecord.ganttProperties.predecessor) {\n          ganttRecord.ganttProperties.predecessor.forEach(function (predecessor) {\n            if (taskId_1 === predecessor.from) {\n              connectedTaskId_1 = predecessor.to;\n              return;\n            }\n          });\n        }\n      }\n      this.parent.editModule.updateEditedTask(args.editEventArgs);\n      this.processPredecessors(connectedTaskId_1);\n    }\n  };\n  ConnectorLineEdit.prototype.compareArrays = function (arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n    var str1 = JSON.stringify(arr1);\n    var str2 = JSON.stringify(arr2);\n    return str1 === str2;\n  };\n  ConnectorLineEdit.prototype.processPredecessors = function (parentId) {\n    var _this = this;\n    if (parentId) {\n      var record_1 = this.parent.getRecordByID(parentId);\n      if (record_1 && record_1.ganttProperties && record_1.ganttProperties.predecessor) {\n        this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n        this.calculateOffset(record_1);\n        var isIdInclude_1 = true;\n        /* eslint-disable-next-line */\n        var matchedObject = this.validatedId.find(function (item) {\n          return item.id === record_1.ganttProperties.taskId;\n        });\n        if (matchedObject) {\n          var predecessorArray = matchedObject.value;\n          var areArraysEqual = this.compareArrays(predecessorArray, record_1.ganttProperties.predecessor);\n          if (areArraysEqual) {\n            isIdInclude_1 = false;\n          }\n        }\n        var predecessors = record_1.ganttProperties.predecessor;\n        predecessors.forEach(function (predecessor) {\n          if (record_1.ganttProperties.taskId === predecessor.from && isIdInclude_1) {\n            _this.processPredecessors(predecessor.to);\n          }\n        });\n      }\n    }\n  };\n  ConnectorLineEdit.prototype.checkChildRecords = function (ganttRecord) {\n    this.validationPredecessor = ganttRecord.ganttProperties.predecessor;\n    if (!isNullOrUndefined(this.validationPredecessor)) {\n      this.removePredecessors(ganttRecord, this.validationPredecessor);\n    }\n    if (ganttRecord.childRecords.length > 0) {\n      for (var i = 0; i < ganttRecord.childRecords.length; i++) {\n        var childRecord = ganttRecord.childRecords[i];\n        this.validationPredecessor = childRecord.ganttProperties.predecessor;\n        if (!isNullOrUndefined(this.validationPredecessor)) {\n          this.removePredecessors(childRecord, this.validationPredecessor);\n        }\n        if (childRecord.childRecords.length > 0) {\n          this.checkChildRecords(childRecord);\n        }\n      }\n    } else if (!isNullOrUndefined(ganttRecord.parentItem)) {\n      var parentRecord = this.parent.getRecordByID(ganttRecord.parentItem.taskId);\n      this.validationPredecessor = parentRecord.ganttProperties.predecessor;\n      this.removePredecessors(parentRecord, this.validationPredecessor);\n    }\n  };\n  ConnectorLineEdit.prototype.compareObjects = function (obj1, obj2) {\n    var keys1 = Object.keys(obj1).filter(function (key) {\n      return key !== 'offset';\n    });\n    var keys2 = Object.keys(obj2).filter(function (key) {\n      return key !== 'offset';\n    });\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keys1.every(function (key) {\n      return obj1[key] === obj2[key];\n    });\n  };\n  ConnectorLineEdit.prototype.calculateOffset = function (record, isRecursive) {\n    var _this = this;\n    if (!this.parent.autoCalculateDateScheduling || this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      return;\n    }\n    if (record && isScheduledTask(record.ganttProperties) !== null) {\n      var prevPredecessor = extend([], record.ganttProperties.predecessor, [], true);\n      var validPredecessor_1 = this.parent.predecessorModule.getValidPredecessor(record);\n      if (validPredecessor_1.length > 0) {\n        this.cumulativePredecessorChanges = prevPredecessor;\n        var _loop_5 = function (i) {\n          var predecessor = validPredecessor_1[parseInt(i.toString(), 10)];\n          var parentTask = this_4.parent.connectorLineModule.getRecordByID(predecessor.from);\n          if (this_4.parent.undoRedoModule && this_4.parent.undoRedoModule['isUndoRedoPerformed'] && this_4.parent.viewType === 'ProjectView') {\n            var isPresent = parentTask.ganttProperties.predecessor.filter(function (pred) {\n              return pred.from === validPredecessor_1[i].from && pred.to === validPredecessor_1[i].to;\n            });\n            if (isPresent.length === 0) {\n              parentTask.ganttProperties.predecessor.push(validPredecessor_1[i]);\n            }\n          }\n          var offset = void 0;\n          if ((parentTask.ganttProperties.startDate || parentTask.ganttProperties.endDate) && (record.ganttProperties.startDate || record.ganttProperties.endDate)) {\n            var tempStartDate = void 0;\n            var tempEndDate = void 0;\n            var tempDuration = void 0;\n            var isNegativeOffset = void 0;\n            switch (predecessor.type) {\n              case 'FS':\n                tempStartDate = new Date((parentTask.ganttProperties.endDate || parentTask.ganttProperties.startDate).getTime());\n                tempEndDate = new Date((record.ganttProperties.startDate || record.ganttProperties.endDate).getTime());\n                break;\n              case 'SS':\n                tempStartDate = new Date((parentTask.ganttProperties.startDate || parentTask.ganttProperties.endDate).getTime());\n                tempEndDate = new Date((record.ganttProperties.startDate || record.ganttProperties.endDate).getTime());\n                break;\n              case 'SF':\n                tempStartDate = new Date((parentTask.ganttProperties.startDate || parentTask.ganttProperties.endDate).getTime());\n                tempEndDate = new Date((record.ganttProperties.endDate || record.ganttProperties.startDate).getTime());\n                break;\n              case 'FF':\n                tempStartDate = new Date((parentTask.ganttProperties.endDate || parentTask.ganttProperties.startDate).getTime());\n                tempEndDate = new Date((record.ganttProperties.endDate || record.ganttProperties.startDate).getTime());\n                break;\n            }\n            if (tempStartDate.getTime() < tempEndDate.getTime()) {\n              tempStartDate = this_4.dateValidateModule.checkStartDate(tempStartDate);\n              tempEndDate = this_4.dateValidateModule.checkEndDate(tempEndDate, null);\n              isNegativeOffset = false;\n            } else {\n              var tempDate = new Date(tempStartDate.getTime());\n              tempStartDate = this_4.dateValidateModule.checkStartDate(tempEndDate);\n              tempEndDate = this_4.dateValidateModule.checkEndDate(tempDate, null);\n              isNegativeOffset = true;\n            }\n            if (tempStartDate.getTime() < tempEndDate.getTime()) {\n              tempDuration = this_4.dateValidateModule.getDuration(tempStartDate, tempEndDate, predecessor.offsetUnit, true, false);\n              if (this_4.parent.durationUnit === predecessor.offsetUnit && (parentTask.ganttProperties.startDate && isNullOrUndefined(parentTask.ganttProperties.endDate) || isNullOrUndefined(parentTask.ganttProperties.startDate) && parentTask.ganttProperties.endDate)) {\n                tempDuration = tempDuration - 1;\n              }\n              offset = isNegativeOffset ? tempDuration * -1 : tempDuration;\n            } else {\n              offset = 0;\n            }\n          } else {\n            offset = 0;\n          }\n          var preIndex = getIndex(predecessor, 'from', prevPredecessor, 'to');\n          if (preIndex !== -1) {\n            prevPredecessor[preIndex].offset = offset;\n          }\n          // Update predecessor in predecessor task\n          var parentPredecessors = extend([], parentTask.ganttProperties.predecessor, [], true);\n          var parentPreIndex = getIndex(predecessor, 'from', parentPredecessors, 'to');\n          if (parentPreIndex !== -1) {\n            parentPredecessors[parentPreIndex].offset = offset;\n          }\n          this_4.parent.setRecordValue('predecessor', parentPredecessors, parentTask.ganttProperties, true);\n        };\n        var this_4 = this;\n        for (var i = 0; i < validPredecessor_1.length; i++) {\n          _loop_5(i);\n        }\n      } else {\n        var validPredecessor_2 = record.ganttProperties.predecessor;\n        if (validPredecessor_2) {\n          if (validPredecessor_2.length > 0) {\n            validPredecessor_2.forEach(function (element) {\n              if (_this.validatedOffsetIds.indexOf(element.to) === -1) {\n                _this.calculateOffset(_this.parent.getRecordByID(element.to), true);\n              }\n            });\n          }\n        }\n      }\n      if (validPredecessor_1.length === 0) {\n        this.cumulativePredecessorChanges = [];\n      }\n      if (!isRecursive && this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n        if (prevPredecessor && prevPredecessor.length > 0 && this.cumulativePredecessorChanges && this.cumulativePredecessorChanges.length > 0) {\n          var matchingObjects = prevPredecessor.map(function (objectToCompare) {\n            var matchedObject = _this.cumulativePredecessorChanges.find(function (obj) {\n              return _this.compareObjects(obj, objectToCompare);\n            });\n            return matchedObject ? __assign({}, matchedObject) : null;\n          }).filter(function (matchedObject) {\n            return matchedObject !== null;\n          });\n          this.parent.setRecordValue('predecessor', matchingObjects, record.ganttProperties, true);\n        }\n      } else {\n        this.parent.setRecordValue('predecessor', prevPredecessor, record.ganttProperties, true);\n      }\n      var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(record);\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, record);\n      this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, record);\n      this.parent.setRecordValue('predecessorsName', predecessorString, record.ganttProperties, true);\n      if (this.validatedOffsetIds.indexOf(record.ganttProperties.taskId.toString()) === -1) {\n        this.validatedOffsetIds.push(record.ganttProperties.taskId.toString());\n      }\n      if (record.hasChildRecords) {\n        for (var i = 0; i < record.childRecords.length; i++) {\n          if (this.validatedOffsetIds.indexOf(record.childRecords[i].ganttProperties.taskId.toString()) === -1 && record.childRecords[i].ganttProperties.predecessor && record.childRecords[i].ganttProperties.predecessor.length > 0) {\n            this.calculateOffset(record.childRecords[i]);\n          }\n        }\n      } else if (record.parentItem) {\n        var parentItem = this.parent.getRecordByID(record.parentItem.taskId);\n        if (this.validatedOffsetIds.indexOf(parentItem.ganttProperties.taskId.toString()) === -1 && parentItem.ganttProperties.predecessor && parentItem.ganttProperties.predecessor.length > 0) {\n          this.calculateOffset(parentItem);\n        }\n      }\n    }\n  };\n  /**\n   * Update predecessor value with user selection option in predecessor validation dialog\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {IPredecessor[]} predecessor .\n   * @returns {void} .\n   */\n  ConnectorLineEdit.prototype.removePredecessors = function (ganttRecord, predecessor) {\n    var prevPredecessor = extend([], [], ganttRecord.ganttProperties.predecessor, true);\n    if (isNullOrUndefined(predecessor)) {\n      return;\n    }\n    var preLength = predecessor.length;\n    for (var i = 0; i < preLength; i++) {\n      var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n      var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n      var index = getIndex(predecessor[i], 'from', prevPredecessor, 'to');\n      prevPredecessor.splice(index, 1);\n      var parentIndex = getIndex(predecessor[parseInt(i.toString(), 10)], 'from', parentPredecessor, 'to');\n      parentPredecessor.splice(parentIndex, 1);\n      this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n    }\n    if (prevPredecessor.length !== ganttRecord.ganttProperties.predecessor.length) {\n      this.parent.setRecordValue('predecessor', prevPredecessor, ganttRecord.ganttProperties, true);\n      var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n      this.parent.setRecordValue('predecessorsName', predecessorString, ganttRecord.ganttProperties, true);\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, ganttRecord);\n      this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, ganttRecord);\n    }\n  };\n  /**\n   * To open predecessor validation dialog\n   *\n   * @param {object} args .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.openValidationDialog = function (args) {\n    var contentTemplate = this.validationDialogTemplate(args);\n    this.parent.validationDialogElement.setProperties({\n      content: contentTemplate\n    });\n    this.parent.validationDialogElement.show();\n  };\n  /**\n   * Predecessor link validation dialog template\n   *\n   * @param {object} args .\n   * @returns {HTMLElement} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.validationDialogTemplate = function (args) {\n    var ganttId = this.parent.element.id;\n    var contentdiv = createElement('div', {\n      className: 'e-ValidationContent'\n    });\n    var taskData = getValue('task', args);\n    var parenttaskData = getValue('parentTask', args);\n    var violationType = getValue('violationType', args);\n    var recordName = taskData.ganttProperties.taskName;\n    var recordNewStartDate = this.parent.getFormatedDate(taskData.ganttProperties.startDate, this.parent.dateFormat);\n    var parentName = parenttaskData.ganttProperties.taskName;\n    var recordArgs = [recordName, parentName];\n    var topContentText;\n    if (violationType === 'taskBeforePredecessor_FS') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FS');\n    } else if (violationType === 'taskAfterPredecessor_FS') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FS');\n    } else if (violationType === 'taskBeforePredecessor_SS') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SS');\n    } else if (violationType === 'taskAfterPredecessor_SS') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SS');\n    } else if (violationType === 'taskBeforePredecessor_FF') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FF');\n    } else if (violationType === 'taskAfterPredecessor_FF') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FF');\n    } else if (violationType === 'taskBeforePredecessor_SF') {\n      topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SF');\n    } else if (violationType === 'taskAfterPredecessor_SF') {\n      topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SF');\n    }\n    topContentText = formatString(topContentText, recordArgs);\n    var topContent = '<div id=\"' + ganttId + '_ValidationText\">' + topContentText + '<div>';\n    var innerTable = '<table>' + '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationCancel\" name=\"ValidationRule\" checked/><label for=\"' + ganttId + '_ValidationCancel\" id= \"' + ganttId + '_cancelLink\">Cancel, keep the existing link</label></td></tr>' + '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationRemoveline\" name=\"ValidationRule\"/><label for=\"' + ganttId + '_ValidationRemoveline\" id=\"' + ganttId + '_removeLink\">Remove the link and move <b>' + recordName + '</b> to start on <b>' + recordNewStartDate + '</b>.</label></td></tr>' + '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationAddlineOffset\" name=\"ValidationRule\"/><label for=\"' + ganttId + '_ValidationAddlineOffset\" id=\"' + ganttId + '_preserveLink\">Move the <b>' + recordName + '</b> to start on <b>' + recordNewStartDate + '</b> and keep the link.</label></td></tr></table>';\n    contentdiv.innerHTML = topContent + innerTable;\n    return contentdiv;\n  };\n  /**\n   * To validate the types while editing the taskbar\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {any} data .\n   * @returns {boolean} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.validateTypes = function (ganttRecord, data) {\n    var predecessor = this.parent.predecessorModule.getValidPredecessor(ganttRecord);\n    var parentGanttRecord;\n    this.validationPredecessor = [];\n    var violatedParent;\n    var ganttTaskData;\n    var violateType;\n    var startDate = this.parent.predecessorModule.getPredecessorDate(ganttRecord, predecessor);\n    if (data) {\n      ganttTaskData = data.ganttProperties;\n    } else {\n      ganttTaskData = ganttRecord.ganttProperties;\n    }\n    var endDate = this.parent.allowUnscheduledTasks && isNullOrUndefined(startDate) ? ganttTaskData.endDate : this.dateValidateModule.getEndDate(startDate, ganttTaskData.duration, ganttTaskData.durationUnit, ganttTaskData, false);\n    for (var i = 0; i < predecessor.length; i++) {\n      parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n      var violationType = null;\n      if (predecessor[i].type === 'FS') {\n        if (this.parent.dateValidationModule.getDuration(startDate, ganttTaskData.startDate, this.parent.durationUnit, ganttTaskData.isAutoSchedule, ganttTaskData.isMilestone, true) !== 0) {\n          if (ganttTaskData.startDate < startDate) {\n            this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n            violationType = 'taskBeforePredecessor_FS';\n          } else if (ganttTaskData.startDate > startDate) {\n            this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n            violationType = 'taskAfterPredecessor_FS';\n          }\n        }\n      } else if (predecessor[i].type === 'SS') {\n        var endDateOlny = new Date(ganttTaskData.endDate);\n        var startDateOlny = new Date(startDate);\n        if (ganttTaskData.startDate < startDate) {\n          this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n          violationType = 'taskBeforePredecessor_SS';\n        } else if (ganttTaskData.startDate > startDate) {\n          this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n          violationType = 'taskAfterPredecessor_SS';\n        } else if (this.parent.allowUnscheduledTasks && isNullOrUndefined(ganttTaskData.startDate) && isNullOrUndefined(ganttTaskData.duration) && endDateOlny.setHours(0, 0, 0, 0) < startDateOlny.setHours(0, 0, 0, 0)) {\n          this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n          violationType = 'taskBeforePredecessor_SS';\n        } else if (this.parent.allowUnscheduledTasks && isNullOrUndefined(ganttTaskData.startDate) && isNullOrUndefined(ganttTaskData.duration) && endDateOlny.setHours(0, 0, 0, 0) > startDateOlny.setHours(0, 0, 0, 0)) {\n          this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n          violationType = 'taskAfterPredecessor_SS';\n        }\n      } else if (predecessor[i].type === 'FF') {\n        if (this.parent.dateValidationModule.getDuration(startDate, parentGanttRecord.ganttProperties.endDate, this.parent.durationUnit, parentGanttRecord.ganttProperties.isAutoSchedule, parentGanttRecord.ganttProperties.isMilestone, true) !== 0) {\n          if (endDate <= parentGanttRecord.ganttProperties.endDate) {\n            this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n            violationType = 'taskBeforePredecessor_FF';\n          } else if (endDate > parentGanttRecord.ganttProperties.endDate) {\n            this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n            violationType = 'taskAfterPredecessor_FF';\n          }\n        }\n      } else if (predecessor[i].type === 'SF') {\n        if (this.parent.dateValidationModule.getDuration(parentGanttRecord.ganttProperties.startDate, endDate, this.parent.durationUnit, parentGanttRecord.ganttProperties.isAutoSchedule, parentGanttRecord.ganttProperties.isMilestone, true) !== 0) {\n          if (endDate < parentGanttRecord.ganttProperties.startDate) {\n            this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n            violationType = 'taskBeforePredecessor_SF';\n          } else if (endDate >= parentGanttRecord.ganttProperties.startDate) {\n            this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n            violationType = 'taskAfterPredecessor_SF';\n          }\n        }\n      }\n      if (!isNullOrUndefined(violationType) && isNullOrUndefined(violateType)) {\n        violatedParent = parentGanttRecord;\n        violateType = violationType;\n      }\n    }\n    var validateArgs = {\n      parentTask: violatedParent,\n      task: ganttRecord,\n      violationType: violateType\n    };\n    return validateArgs;\n  };\n  /**\n   * Method to remove and update new predecessor collection in successor record\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.addRemovePredecessor = function (data) {\n    var prevData = this.parent.previousRecords[data.uniqueID];\n    var newPredecessor = data.ganttProperties.predecessor.slice();\n    // eslint-disable-next-line\n    if (prevData && prevData.ganttProperties && prevData.ganttProperties.hasOwnProperty('predecessor')) {\n      var prevPredecessor_1 = prevData.ganttProperties.predecessor;\n      if (!isNullOrUndefined(prevPredecessor_1)) {\n        var _loop_6 = function (p) {\n          var parentGanttRecord = this_5.parent.connectorLineModule.getRecordByID(prevPredecessor_1[parseInt(p.toString(), 10)].from);\n          if (parentGanttRecord === data) {\n            var isValid = data.ganttProperties.predecessor.filter(function (pred) {\n              return prevPredecessor_1[p].from === pred.from && prevPredecessor_1[p].to === pred.to;\n            });\n            if (isValid.length === 0) {\n              if (data.parentItem && this_5.parent.taskFields.dependency && data.ganttProperties.predecessor && this_5.parent.allowParentDependency) {\n                if (prevPredecessor_1[p].from !== data.parentItem.taskId && prevPredecessor_1[p].to !== data.parentItem.taskId) {\n                  data.ganttProperties.predecessor.push(prevPredecessor_1[parseInt(p.toString(), 10)]);\n                }\n              } else {\n                data.ganttProperties.predecessor.push(prevPredecessor_1[parseInt(p.toString(), 10)]);\n              }\n            }\n          } else {\n            var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n            var parentIndex = getIndex(prevPredecessor_1[parseInt(p.toString(), 10)], 'from', parentPredecessor, 'to');\n            if (parentIndex !== -1) {\n              parentPredecessor.splice(parentIndex, 1);\n              this_5.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n            }\n          }\n        };\n        var this_5 = this;\n        for (var p = 0; p < prevPredecessor_1.length; p++) {\n          _loop_6(p);\n        }\n      }\n      if (!isNullOrUndefined(newPredecessor)) {\n        var _loop_7 = function (n) {\n          var parentGanttRecord = this_6.parent.connectorLineModule.getRecordByID(newPredecessor[parseInt(n.toString(), 10)].from);\n          var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n          var isValid = parentPredecessor.filter(function (pred) {\n            return newPredecessor[n].from === pred.from && newPredecessor[n].to === pred.to;\n          });\n          if (isValid.length === 0) {\n            parentPredecessor.push(newPredecessor[parseInt(n.toString(), 10)]);\n            this_6.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n          }\n        };\n        var this_6 = this;\n        for (var n = 0; n < newPredecessor.length; n++) {\n          _loop_7(n);\n        }\n      }\n    }\n  };\n  /**\n   * Method to remove a predecessor from a record.\n   *\n   * @param {IGanttData} childRecord .\n   * @param {number} index .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.removePredecessorByIndex = function (childRecord, index) {\n    if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      if (this.parent.undoRedoModule['redoEnabled']) {\n        this.parent.undoRedoModule['disableRedo']();\n      }\n      this.parent.undoRedoModule['createUndoCollection']();\n      var details = {};\n      details['action'] = 'DeleteDependency';\n      details['modifiedRecords'] = extend([], [childRecord], [], true);\n      this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n    }\n    var childPredecessor = childRecord.ganttProperties.predecessor;\n    var predecessor = childPredecessor.splice(index, 1);\n    var parentRecord = this.parent.connectorLineModule.getRecordByID(predecessor[0].from);\n    var parentPredecessor = parentRecord.ganttProperties.predecessor;\n    var parentIndex = getIndex(predecessor[0], 'from', parentPredecessor, 'to');\n    parentPredecessor.splice(parentIndex, 1);\n    var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(childRecord);\n    childPredecessor.push(predecessor[0]);\n    this.parent.connectorLineEditModule.updatePredecessor(childRecord, predecessorString);\n  };\n  /**\n   * To render predecessor delete confirmation dialog\n   *\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLineEdit.prototype.renderPredecessorDeleteConfirmDialog = function () {\n    this.confirmPredecessorDialog = new Dialog({\n      width: '320px',\n      isModal: true,\n      enableRtl: this.parent.enableRtl,\n      content: this.parent.localeObj.getConstant('confirmPredecessorDelete'),\n      buttons: [{\n        click: this.confirmOkDeleteButton.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('okText'),\n          isPrimary: true\n        }\n      }, {\n        click: this.confirmCloseDialog.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('cancel')\n        }\n      }],\n      target: this.parent.element,\n      animationSettings: {\n        effect: 'None'\n      }\n    });\n    var confirmDialog = createElement('div', {\n      id: this.parent.element.id + '_deletePredecessorConfirmDialog'\n    });\n    this.parent.element.appendChild(confirmDialog);\n    this.confirmPredecessorDialog.isStringTemplate = true;\n    this.confirmPredecessorDialog.appendTo(confirmDialog);\n  };\n  ConnectorLineEdit.prototype.confirmCloseDialog = function () {\n    this.confirmPredecessorDialog.destroy();\n  };\n  ConnectorLineEdit.prototype.confirmOkDeleteButton = function () {\n    this.removePredecessorByIndex(this.childRecord, this.predecessorIndex);\n    this.confirmPredecessorDialog.destroy();\n  };\n  return ConnectorLineEdit;\n}();\nexport { ConnectorLineEdit };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","isNullOrUndefined","isUndefined","getValue","createElement","extend","cls","parentsUntil","formatString","isScheduledTask","getIndex","Dialog","ConnectorLineEdit","ganttObj","validationPredecessor","confirmPredecessorDialog","predecessorIndex","childRecord","validatedId","validatedOffsetIds","isPublicDependencyDelete","parent","dateValidateModule","dateValidationModule","on","initPredecessorValidationDialog","updateConnectorLineEditElement","e","element","getConnectorLineHoverElement","target","highlightConnectorLineElements","isOnLine","connectorLineSVG","isArrow","connectorLineArrow","isCriticalLine","criticalConnectorLineSVG","isCriticalArrow","criticalConnectorArrowSVG","connectorLineContainer","connectorLineElement","removeHighlight","addHighlight","pathElement","querySelector","setAttribute","connectorLineModule","toString","getEditedConnectorLineString","records","ganttRecord","predecessorsCollection","predecessor","parentGanttRecord","childGanttRecord","connectorObj","idArray","lineArray","editedConnectorLineString","count","ganttProperties","predecessorCount","from","to","removeConnectorLineById","getRecordByID","allowParentDependency","expanded","predecessorModule","updateConnectorLineObject","lineIndex","indexOf","connectorLineId","lineString","getConnectorLineTemplate","push","join","refreshEditedRecordConnectorLine","editedRecord","removePreviousConnectorLines","previousRecords","expandedRecords","virtualScrollModule","enableVirtualization","updatedRecords","getExpandedRecords","svgObject","innerHTML","idFromPredecessor","pre","preArray","split","preIdArray","values","match","j","strArray","firstPart","isAlpha","predecessorName","isGUId","regex","elSplit","id","pop","substring","test","includes","slice","indexFS","spliceLength","ids","viewType","getTaskIds","predecessorValidation","record","recordId","rowUniqueID","currentId","currentRecord","visitedIdArray","predecessorCollection","splice","_loop_1","currentIdArray","this_1","value","forEach","state_1","getRootParent","rec","parentRec","parentItem","flatData","filter","item","uniqueID","parentUniqueID","validateParentPredecessor","fromRecord","toRecord","hasChildRecords","taskId","fromRootParent","connectorLineEditModule","toRootParent","validatePredecessorRelation","predecessorString","flag","predecessorIdArray","_loop_2","this_2","checkParent","checkParentRelation","parseInt","taskFields","num","currentViewData","tempIdArray","checkArray","countFlag","_loop_3","currentIdIndex","index","result","state_3","state_2","addPredecessor","tempPredecessorString","predecessorsName","updatePredecessorHelper","removePredecessor","updatePredecessor","editedArgs","isOnEdit","calculatePredecessor","setRecordValue","stringValue","getPredecessorStringValue","dependency","args","action","contextMenuModule","data","editModule","initiateUpdateAction","taskData","err","trigger","error","editingData","_loop_4","this_3","state_4","isInPredecessorValidation","dialogElement","appendChild","renderValidationDialog","validationDialog","header","isModal","enableRtl","visible","width","showCloseIcon","close","validationDialogClose","bind","content","buttons","click","validationDialogOkButton","buttonModel","localeObj","getConstant","isPrimary","validationDialogCancelButton","animationSettings","effect","document","getElementById","isStringTemplate","appendTo","validationDialogElement","currentArgs","currentEditedArgs","validateMode","preserveLinkWithEditing","checked","removeLink","respectLink","applyPredecessorOption","hide","reUpdatePreviousRecords","chartRowsModule","refreshRecords","checkChildRecords","updateEditedTask","editEventArgs","connectedTaskId_1","updateOffsetOnTaskbarEdit","taskId_1","processPredecessors","compareArrays","arr1","arr2","str1","JSON","stringify","str2","parentId","_this","record_1","calculateOffset","isIdInclude_1","matchedObject","find","predecessorArray","areArraysEqual","predecessors","removePredecessors","childRecords","parentRecord","compareObjects","obj1","obj2","keys1","keys","key","keys2","every","isRecursive","autoCalculateDateScheduling","isLoad","treeGrid","loadChildOnDemand","hasChildMapping","prevPredecessor","validPredecessor_1","getValidPredecessor","cumulativePredecessorChanges","_loop_5","parentTask","this_4","undoRedoModule","isPresent","pred","offset","startDate","endDate","tempStartDate","tempEndDate","tempDuration","isNegativeOffset","type","Date","getTime","checkStartDate","checkEndDate","tempDate","getDuration","offsetUnit","durationUnit","preIndex","parentPredecessors","parentPreIndex","validPredecessor_2","matchingObjects","map","objectToCompare","obj","preLength","parentPredecessor","parentIndex","openValidationDialog","contentTemplate","validationDialogTemplate","setProperties","show","ganttId","contentdiv","className","parenttaskData","violationType","recordName","taskName","recordNewStartDate","getFormatedDate","dateFormat","parentName","recordArgs","topContentText","topContent","innerTable","validateTypes","violatedParent","ganttTaskData","violateType","getPredecessorDate","allowUnscheduledTasks","getEndDate","duration","isAutoSchedule","isMilestone","endDateOlny","startDateOlny","setHours","validateArgs","task","addRemovePredecessor","prevData","newPredecessor","prevPredecessor_1","_loop_6","this_5","isValid","_loop_7","this_6","removePredecessorByIndex","details","childPredecessor","renderPredecessorDeleteConfirmDialog","confirmOkDeleteButton","confirmCloseDialog","confirmDialog","destroy"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/connector-line-edit.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isNullOrUndefined, isUndefined } from '@syncfusion/ej2-base';\nimport { getValue, createElement, extend } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { parentsUntil, formatString, isScheduledTask, getIndex } from '../base/utils';\nimport { Dialog } from '@syncfusion/ej2-popups';\n/**\n * File for handling connector line edit operation in Gantt.\n *\n */\nvar ConnectorLineEdit = /** @class */ (function () {\n    function ConnectorLineEdit(ganttObj) {\n        /**\n         * @private\n         */\n        this.validationPredecessor = null;\n        /** @private */\n        this.confirmPredecessorDialog = null;\n        /** @private */\n        this.predecessorIndex = null;\n        /** @private */\n        this.childRecord = null;\n        this.validatedId = [];\n        this.validatedOffsetIds = [];\n        this.isPublicDependencyDelete = false;\n        this.parent = ganttObj;\n        this.dateValidateModule = this.parent.dateValidationModule;\n        this.parent.on('initPredessorDialog', this.initPredecessorValidationDialog, this);\n    }\n    /**\n     * To update connector line edit element.\n     *\n     * @param {PointerEvent} e .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.updateConnectorLineEditElement = function (e) {\n        var element = this.getConnectorLineHoverElement(e.target);\n        if (!getValue('editModule.taskbarEditModule.taskBarEditAction', this.parent)) {\n            this.highlightConnectorLineElements(element);\n        }\n    };\n    /**\n     * To get hovered connector line element.\n     *\n     * @param {EventTarget} target .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.getConnectorLineHoverElement = function (target) {\n        var isOnLine = parentsUntil(target, cls.connectorLineSVG);\n        var isArrow = parentsUntil(target, cls.connectorLineArrow);\n        var isCriticalLine = parentsUntil(target, cls.criticalConnectorLineSVG);\n        var isCriticalArrow = parentsUntil(target, cls.criticalConnectorArrowSVG);\n        if (isOnLine || isArrow || isCriticalLine || isCriticalArrow) {\n            return parentsUntil(target, cls.connectorLineContainer);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * To highlight connector line while hover.\n     *\n     * @param {Element} element .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.highlightConnectorLineElements = function (element) {\n        if (element) {\n            if (element !== this.connectorLineElement) {\n                this.removeHighlight();\n                this.addHighlight(element);\n            }\n        }\n        else {\n            this.removeHighlight();\n        }\n    };\n    /**\n     * To add connector line highlight class.\n     *\n     * @param {Element} element .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.addHighlight = function (element) {\n        this.connectorLineElement = element;\n        var pathElement = element.querySelector('.' + cls.connectorLineSVG);\n        if (pathElement) {\n            pathElement.setAttribute('stroke-width', (this.parent.connectorLineModule['lineStroke'] + 1).toString());\n        }\n    };\n    /**\n     * To remove connector line highlight class.\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.removeHighlight = function () {\n        if (this.connectorLineElement) {\n            var pathElement = this.connectorLineElement.querySelector('.' + cls.connectorLineSVG);\n            if (pathElement) {\n                pathElement.setAttribute('stroke-width', (this.parent.connectorLineModule['lineStroke']).toString());\n            }\n            this.connectorLineElement = null;\n        }\n    };\n    /**\n     * To remove connector line highlight class.\n     *\n     * @param {IGanttData[]} records .\n     * @returns {string} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.getEditedConnectorLineString = function (records) {\n        var ganttRecord;\n        var predecessorsCollection;\n        var predecessor;\n        var parentGanttRecord;\n        var childGanttRecord;\n        var connectorObj;\n        var idArray = [];\n        var lineArray = [];\n        var editedConnectorLineString = '';\n        for (var count = 0; count < records.length; count++) {\n            ganttRecord = records[count];\n            predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n            if (predecessorsCollection) {\n                for (var predecessorCount = 0; predecessorCount < predecessorsCollection.length; predecessorCount++) {\n                    predecessor = predecessorsCollection[predecessorCount];\n                    var from = 'from';\n                    var to = 'to';\n                    this.parent.connectorLineModule.removeConnectorLineById('parent' + predecessor[from] + 'child' + predecessor[to]);\n                    parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[\"\" + from]);\n                    childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[\"\" + to]);\n                    if ((!this.parent.allowParentDependency && (parentGanttRecord && parentGanttRecord.expanded === true) ||\n                        (childGanttRecord && childGanttRecord.expanded === true)) || (this.parent.allowParentDependency &&\n                        (parentGanttRecord || childGanttRecord))) {\n                        connectorObj =\n                            this.parent.predecessorModule.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n                        if (!isNullOrUndefined(connectorObj)) {\n                            var lineIndex = idArray.indexOf(connectorObj.connectorLineId);\n                            var lineString = this.parent.connectorLineModule.getConnectorLineTemplate(connectorObj);\n                            if (lineIndex !== -1) {\n                                lineArray[lineIndex] = lineString;\n                            }\n                            else {\n                                idArray.push(connectorObj.connectorLineId);\n                                lineArray.push(lineString);\n                            }\n                        }\n                    }\n                }\n                editedConnectorLineString = lineArray.join('');\n            }\n        }\n        return editedConnectorLineString;\n    };\n    /**\n     * Tp refresh connector lines of edited records\n     *\n     * @param {IGanttData[]} editedRecord .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.refreshEditedRecordConnectorLine = function (editedRecord) {\n        this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.previousRecords);\n        this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n            this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n        var editedConnectorLineString = this.getEditedConnectorLineString(editedRecord);\n        this.parent.connectorLineModule.svgObject.innerHTML =\n            this.parent.connectorLineModule.svgObject.innerHTML + editedConnectorLineString;\n    };\n    ConnectorLineEdit.prototype.idFromPredecessor = function (pre) {\n        var preArray = pre.split(',');\n        var preIdArray = [];\n        var values = [];\n        var match = [];\n        for (var j = 0; j < preArray.length; j++) {\n            var strArray = [];\n            var firstPart = void 0;\n            var isAlpha = false;\n            var predecessorName = void 0;\n            var isGUId = false;\n            var regex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\n            var elSplit = preArray[j].split('-');\n            var id = void 0;\n            if (elSplit.length === 6) {\n                elSplit[4] = elSplit[4] + '-' + elSplit[5];\n                elSplit.pop();\n            }\n            if (elSplit.length === 5 && elSplit[4].length >= 12) {\n                id = preArray[j].substring(0, 36);\n                if (regex.test(id)) {\n                    isGUId = true;\n                }\n            }\n            if (preArray[j].includes('-')) {\n                if (preArray[j].includes('-') && preArray[j].includes('days')) {\n                    predecessorName = preArray[j].slice(-9).toString();\n                }\n                if (preArray[j].includes('-') && preArray[j].includes('day')) {\n                    predecessorName = preArray[j].slice(-8).toString();\n                }\n                else {\n                    predecessorName = preArray[j].slice(-2).toString();\n                }\n                if (preArray[j].includes('-') && /[A-Za-z]/.test(predecessorName)) {\n                    var indexFS = preArray[j].indexOf(predecessorName);\n                    if (indexFS !== -1) {\n                        firstPart = preArray[j].substring(0, indexFS);\n                        if (firstPart.includes('-')) {\n                            isAlpha = true;\n                        }\n                    }\n                }\n            }\n            if (isGUId) {\n                var split = void 0;\n                split = elSplit[4].split('+');\n                var spliceLength = void 0;\n                if (split.length === 1) {\n                    values[0] = preArray[j];\n                }\n                else {\n                    spliceLength = split[1].length;\n                    values[0] = preArray[j].slice(0, -(spliceLength + 1));\n                    values[1] = split[1];\n                }\n                if (elSplit[4].indexOf('-') >= 0) {\n                    split = elSplit[4].split('-');\n                    if (split.length === 1) {\n                        values[0] = preArray[j];\n                    }\n                    else {\n                        spliceLength = split[1].length;\n                        values[0] = preArray[j].slice(0, -(spliceLength + 1));\n                        values[1] = split[1];\n                    }\n                }\n            }\n            else {\n                if (isAlpha && firstPart.includes('-')) {\n                    values[0] = firstPart;\n                }\n                else {\n                    values = preArray[j].split('+');\n                    if (preArray[j].indexOf('-') >= 0) {\n                        values = preArray[j].split('-');\n                    }\n                }\n            }\n            if (!isNullOrUndefined(values[0])) {\n                var ids = this.parent.viewType === 'ResourceView' ? this.parent.getTaskIds() : this.parent.ids;\n                if (ids.indexOf(values[0]) === -1) {\n                    if (values[0].indexOf(' ') !== -1) {\n                        match = values[0].split(' ');\n                        if (match.length === 1) {\n                            match = values[0].match(/(\\d+|[A-z]+)/g);\n                        }\n                        strArray.push(match[0]);\n                    }\n                    else {\n                        if (values[0].length === 1 || values[0].length === 2) {\n                            strArray.push(values[0]);\n                        }\n                        else {\n                            strArray.push(values[0].slice(0, -2));\n                        }\n                    }\n                }\n                else {\n                    strArray.push(values[0]);\n                }\n            }\n            preIdArray.push((strArray.join('')));\n        }\n        return preIdArray;\n    };\n    ConnectorLineEdit.prototype.predecessorValidation = function (predecessor, record) {\n        var recordId = record.rowUniqueID;\n        var currentId;\n        var currentRecord;\n        for (var count = 0; count < predecessor.length; count++) {\n            currentId = predecessor[count];\n            var visitedIdArray = [];\n            var predecessorCollection = predecessor.slice(0);\n            predecessorCollection.splice(count, 1);\n            var _loop_1 = function () {\n                var currentIdArray = [];\n                if (visitedIdArray.indexOf(currentId) === -1) {\n                    //Predecessor id not in records collection\n                    if (isNullOrUndefined(this_1.parent.connectorLineModule.getRecordByID(currentId))) {\n                        return { value: false };\n                    }\n                    currentRecord = this_1.parent.connectorLineModule.getRecordByID(currentId).ganttProperties;\n                    if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                        currentRecord.predecessor.forEach(function (value) {\n                            if (currentRecord.rowUniqueID.toString() !== value.from) {\n                                currentIdArray.push(value.from.toString());\n                            }\n                        });\n                    }\n                    /* eslint-disable-next-line */\n                    if (recordId.toString() === currentRecord.rowUniqueID.toString() || currentIdArray.indexOf(recordId.toString()) !== -1) {\n                        return { value: false };\n                    }\n                    visitedIdArray.push(currentId);\n                    if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                        currentId = currentRecord.predecessor[0].from;\n                    }\n                    else {\n                        return \"break\";\n                    }\n                }\n                else {\n                    return \"break\";\n                }\n            };\n            var this_1 = this;\n            while (currentId !== null) {\n                var state_1 = _loop_1();\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n        return true;\n    };\n    // Get the root parent of the record\n    ConnectorLineEdit.prototype.getRootParent = function (rec) {\n        var parentRec = rec;\n        if (rec.parentItem) {\n            parentRec = this.parent.flatData.filter(function (item) {\n                return item.uniqueID === rec.parentUniqueID;\n            })[0];\n            if (parentRec.parentItem) {\n                parentRec = this.getRootParent(parentRec);\n            }\n            return parentRec;\n        }\n        return parentRec;\n    };\n    // To check whether the predecessor drawn is valid for parent task\n    ConnectorLineEdit.prototype.validateParentPredecessor = function (fromRecord, toRecord) {\n        if (fromRecord && toRecord) {\n            if (toRecord.hasChildRecords && !fromRecord.hasChildRecords) {\n                if (fromRecord.parentUniqueID === toRecord.uniqueID) {\n                    return false;\n                }\n                else {\n                    do {\n                        if (fromRecord.parentItem) {\n                            fromRecord = this.parent.flatData[this.parent.ids.indexOf(fromRecord.parentItem.taskId)];\n                            if (fromRecord.uniqueID === toRecord.uniqueID) {\n                                return false;\n                            }\n                        }\n                    } while (fromRecord.parentItem);\n                }\n            }\n            else if (!toRecord.hasChildRecords && fromRecord.hasChildRecords) {\n                if (toRecord.parentUniqueID === fromRecord.uniqueID) {\n                    return false;\n                }\n                else {\n                    do {\n                        if (toRecord.parentItem) {\n                            toRecord = this.parent.flatData[this.parent.ids.indexOf(toRecord.parentItem.taskId)];\n                            if (toRecord.uniqueID === fromRecord.uniqueID) {\n                                return false;\n                            }\n                        }\n                    } while (toRecord.parentItem);\n                }\n            }\n            else if (toRecord.hasChildRecords && fromRecord.hasChildRecords) {\n                if (toRecord.parentItem && fromRecord.parentItem) {\n                    if (fromRecord.parentUniqueID === toRecord.uniqueID || fromRecord.uniqueID === toRecord.parentUniqueID) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!toRecord.parentItem && fromRecord.parentItem) {\n                        var fromRootParent = this.parent.connectorLineEditModule.getRootParent(fromRecord);\n                        if (fromRootParent.uniqueID === toRecord.uniqueID) {\n                            return false;\n                        }\n                    }\n                    else if (toRecord.parentItem && !fromRecord.parentItem) {\n                        var toRootParent = this.parent.connectorLineEditModule.getRootParent(toRecord);\n                        if (toRootParent.uniqueID === fromRecord.uniqueID) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * To validate predecessor relations\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {string} predecessorString .\n     * @returns {boolean} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.validatePredecessorRelation = function (ganttRecord, predecessorString) {\n        var flag = true;\n        var recordId = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId\n            : ganttRecord.ganttProperties.rowUniqueID;\n        var predecessorIdArray;\n        var currentId;\n        if (!isNullOrUndefined(predecessorString) && predecessorString.length > 0) {\n            predecessorIdArray = this.idFromPredecessor(predecessorString);\n            var _loop_2 = function (count) {\n                //Check edited item has parent item in predecessor collection\n                if (!this_2.parent.allowParentDependency) {\n                    var checkParent = this_2.checkParentRelation(ganttRecord, predecessorIdArray);\n                    if (!checkParent) {\n                        return { value: false };\n                    }\n                }\n                else {\n                    if (parseInt(predecessorIdArray[predecessorIdArray.length - 1], 10) !== ganttRecord[this_2.parent.taskFields.id]) {\n                        var num = this_2.parent.ids.indexOf(predecessorIdArray[predecessorIdArray.length - 1]);\n                        var fromRecord = this_2.parent.currentViewData[num];\n                        if (fromRecord && ganttRecord) {\n                            flag = this_2.validateParentPredecessor(fromRecord, ganttRecord);\n                        }\n                    }\n                }\n                // Check if predecessor exist more then one\n                var tempIdArray = predecessorIdArray.slice(0);\n                var checkArray = [];\n                var countFlag = true;\n                tempIdArray.forEach(function (value) {\n                    if (checkArray.indexOf(value) === -1) {\n                        checkArray.push(value);\n                    }\n                    else {\n                        countFlag = false;\n                    }\n                });\n                if (!countFlag) {\n                    return { value: false };\n                }\n                //Cyclick check\n                currentId = predecessorIdArray[count];\n                var visitedIdArray = [];\n                var predecessorCollection = predecessorIdArray.slice(0);\n                predecessorCollection.splice(count, 1);\n                var _loop_3 = function () {\n                    var currentIdArray = [];\n                    var currentIdIndex;\n                    var currentRecord;\n                    if (visitedIdArray.indexOf(currentId) === -1) {\n                        //Predecessor id not in records collection\n                        if (isNullOrUndefined(this_2.parent.connectorLineModule.getRecordByID(currentId.toString()))) {\n                            return { value: false };\n                        }\n                        currentRecord = this_2.parent.connectorLineModule.getRecordByID(currentId.toString()).ganttProperties;\n                        //  let currentPredecessor='';\n                        if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                            currentRecord.predecessor.forEach(function (value, index) {\n                                if (currentRecord.rowUniqueID.toString() !== value.from) {\n                                    currentIdArray.push(value.from.toString());\n                                    currentIdIndex = index;\n                                }\n                            });\n                            //    currentPredecessor=currentRecord.predecessor[0].from\n                        }\n                        if (recordId.toString() === currentRecord.rowUniqueID.toString() ||\n                            currentIdArray.indexOf(recordId.toString()) !== -1) {\n                            return { value: false };\n                        }\n                        visitedIdArray.push(currentId);\n                        if (!isNullOrUndefined(currentRecord.predecessor) && currentRecord.predecessor.length > 0) {\n                            var result = void 0;\n                            if (currentIdArray.length > 1) {\n                                result = this_2.predecessorValidation(currentIdArray, ganttRecord.ganttProperties);\n                            }\n                            else if (currentIdArray.length === 1) {\n                                currentId = currentRecord.predecessor[currentIdIndex].from;\n                            }\n                            if (result === false) {\n                                return { value: false };\n                            }\n                        }\n                        else {\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        return \"break\";\n                    }\n                };\n                while (currentId !== null) {\n                    var state_3 = _loop_3();\n                    if (typeof state_3 === \"object\")\n                        return state_3;\n                    if (state_3 === \"break\")\n                        break;\n                }\n            };\n            var this_2 = this;\n            for (var count = 0; count < predecessorIdArray.length; count++) {\n                var state_2 = _loop_2(count);\n                if (typeof state_2 === \"object\")\n                    return state_2.value;\n            }\n        }\n        return flag;\n    };\n    /**\n     * To add dependency for Task\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {string} predecessorString .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.addPredecessor = function (ganttRecord, predecessorString) {\n        var tempPredecessorString = isNullOrUndefined(ganttRecord.ganttProperties.predecessorsName) ||\n            ganttRecord.ganttProperties.predecessorsName === '' ?\n            predecessorString : (ganttRecord.ganttProperties.predecessorsName + ',' + predecessorString);\n        this.updatePredecessorHelper(ganttRecord, tempPredecessorString);\n    };\n    /**\n     * To remove dependency from task\n     *\n     * @param {IGanttData} ganttRecord .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.removePredecessor = function (ganttRecord) {\n        this.isPublicDependencyDelete = true;\n        this.updatePredecessorHelper(ganttRecord, null);\n    };\n    /**\n     * To modify current dependency values of Task\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {string} predecessorString .\n     * @param {ITaskbarEditedEventArgs} editedArgs .\n     * @returns {boolean} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.updatePredecessor = function (ganttRecord, predecessorString, editedArgs) {\n        return this.updatePredecessorHelper(ganttRecord, predecessorString, editedArgs);\n    };\n    ConnectorLineEdit.prototype.updatePredecessorHelper = function (ganttRecord, predecessorString, editedArgs) {\n        if (isUndefined(predecessorString) || this.validatePredecessorRelation(ganttRecord, predecessorString)) {\n            this.parent.isOnEdit = true;\n            var predecessorCollection = [];\n            if (!isNullOrUndefined(predecessorString) && predecessorString !== '') {\n                predecessorCollection = this.parent.predecessorModule.calculatePredecessor(predecessorString, ganttRecord);\n            }\n            this.parent.setRecordValue('predecessor', predecessorCollection, ganttRecord.ganttProperties, true);\n            var stringValue = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n            this.parent.setRecordValue('predecessorsName', stringValue, ganttRecord.ganttProperties, true);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, stringValue, ganttRecord);\n            this.parent.setRecordValue(this.parent.taskFields.dependency, stringValue, ganttRecord);\n            var args = {};\n            args.action = editedArgs && editedArgs.action && editedArgs.action === 'CellEditing' ? editedArgs.action : ((this.parent.contextMenuModule && this.parent.contextMenuModule['isCntxtMenuDependencyDelete']) ||\n                this.isPublicDependencyDelete) ? 'DeleteConnectorLine' : 'DrawConnectorLine';\n            args.data = ganttRecord;\n            this.parent.editModule.initiateUpdateAction(args);\n            return true;\n        }\n        else {\n            if (ganttRecord.taskData[this.parent.taskFields.dependency]) {\n                ganttRecord.taskData[this.parent.taskFields.dependency] = null;\n            }\n            var err = predecessorString + \" is an invalid relation for task \" + this.parent.taskFields.id + \". Kindly ensure the \" + this.parent.taskFields.dependency + \" field contains only valid predecessor relations.\";\n            this.parent.trigger('actionFailure', { error: err });\n            return false;\n        }\n    };\n    ConnectorLineEdit.prototype.checkParentRelation = function (ganttRecord, predecessorIdArray) {\n        var editingData = ganttRecord;\n        var checkParent = true;\n        if (editingData && editingData.parentItem) {\n            if (predecessorIdArray.indexOf(editingData.parentItem.taskId.toString()) !== -1) {\n                return false;\n            }\n        }\n        var _loop_4 = function (p) {\n            var record = this_3.parent.currentViewData.filter(function (item) {\n                return item && item.ganttProperties.rowUniqueID.toString() === predecessorIdArray[p].toString();\n            });\n            if (record[0] && record[0].hasChildRecords) {\n                return { value: false };\n            }\n        };\n        var this_3 = this;\n        for (var p = 0; p < predecessorIdArray.length; p++) {\n            var state_4 = _loop_4(p);\n            if (typeof state_4 === \"object\")\n                return state_4.value;\n        }\n        return checkParent;\n    };\n    ConnectorLineEdit.prototype.initPredecessorValidationDialog = function () {\n        if (this.parent.taskFields.dependency && this.parent.isInPredecessorValidation) {\n            var dialogElement = createElement('div', {\n                id: this.parent.element.id + '_dialogValidationRule'\n            });\n            this.parent.element.appendChild(dialogElement);\n            this.renderValidationDialog();\n        }\n    };\n    /**\n     * To render validation dialog\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.renderValidationDialog = function () {\n        var validationDialog = new Dialog({\n            header: 'Validate Editing',\n            isModal: true,\n            enableRtl: this.parent.enableRtl,\n            visible: false,\n            width: '50%',\n            showCloseIcon: true,\n            close: this.validationDialogClose.bind(this),\n            content: '',\n            buttons: [\n                {\n                    click: this.validationDialogOkButton.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('okText'), isPrimary: true }\n                },\n                {\n                    click: this.validationDialogCancelButton.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            target: this.parent.element,\n            animationSettings: { effect: 'None' }\n        });\n        document.getElementById(this.parent.element.id + '_dialogValidationRule').innerHTML = '';\n        validationDialog.isStringTemplate = true;\n        validationDialog.appendTo('#' + this.parent.element.id + '_dialogValidationRule');\n        this.parent.validationDialogElement = validationDialog;\n    };\n    ConnectorLineEdit.prototype.validationDialogOkButton = function () {\n        var currentArgs = this.parent.currentEditedArgs;\n        currentArgs.validateMode.preserveLinkWithEditing =\n            document.getElementById(this.parent.element.id + '_ValidationAddlineOffset').checked;\n        currentArgs.validateMode.removeLink =\n            document.getElementById(this.parent.element.id + '_ValidationRemoveline').checked;\n        currentArgs.validateMode.respectLink =\n            document.getElementById(this.parent.element.id + '_ValidationCancel').checked;\n        this.applyPredecessorOption();\n        this.parent.validationDialogElement.hide();\n    };\n    ConnectorLineEdit.prototype.validationDialogCancelButton = function () {\n        this.parent.currentEditedArgs.validateMode.respectLink = true;\n        this.applyPredecessorOption();\n        this.parent.validationDialogElement.hide();\n    };\n    ConnectorLineEdit.prototype.validationDialogClose = function (e) {\n        if (getValue('isInteraction', e)) {\n            this.parent.currentEditedArgs.validateMode.respectLink = true;\n            this.applyPredecessorOption();\n        }\n    };\n    /**\n     * Validate and apply the predecessor option from validation dialog\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.applyPredecessorOption = function () {\n        var args = this.parent.currentEditedArgs;\n        var ganttRecord = args.data;\n        if (args.validateMode.respectLink) {\n            this.parent.editModule.reUpdatePreviousRecords();\n            this.parent.chartRowsModule.refreshRecords([args.data]);\n        }\n        else if (args.validateMode.removeLink) {\n            this.checkChildRecords(ganttRecord);\n            this.parent.editModule.updateEditedTask(args.editEventArgs);\n        }\n        else if (args.validateMode.preserveLinkWithEditing) {\n            var connectedTaskId_1;\n            if (this.parent.updateOffsetOnTaskbarEdit) {\n                var taskId_1 = ganttRecord.ganttProperties.taskId;\n                if (ganttRecord.ganttProperties.predecessor) {\n                    ganttRecord.ganttProperties.predecessor.forEach(function (predecessor) {\n                        if (taskId_1 === predecessor.from) {\n                            connectedTaskId_1 = predecessor.to;\n                            return;\n                        }\n                    });\n                }\n            }\n            this.parent.editModule.updateEditedTask(args.editEventArgs);\n            this.processPredecessors(connectedTaskId_1);\n        }\n    };\n    ConnectorLineEdit.prototype.compareArrays = function (arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n            return false;\n        }\n        var str1 = JSON.stringify(arr1);\n        var str2 = JSON.stringify(arr2);\n        return str1 === str2;\n    };\n    ConnectorLineEdit.prototype.processPredecessors = function (parentId) {\n        var _this = this;\n        if (parentId) {\n            var record_1 = this.parent.getRecordByID(parentId);\n            if (record_1 && record_1.ganttProperties && record_1.ganttProperties.predecessor) {\n                this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n                this.calculateOffset(record_1);\n                var isIdInclude_1 = true;\n                /* eslint-disable-next-line */\n                var matchedObject = this.validatedId.find(function (item) {\n                    return item.id === record_1.ganttProperties.taskId;\n                });\n                if (matchedObject) {\n                    var predecessorArray = matchedObject.value;\n                    var areArraysEqual = this.compareArrays(predecessorArray, record_1.ganttProperties.predecessor);\n                    if (areArraysEqual) {\n                        isIdInclude_1 = false;\n                    }\n                }\n                var predecessors = record_1.ganttProperties.predecessor;\n                predecessors.forEach(function (predecessor) {\n                    if (record_1.ganttProperties.taskId === predecessor.from && isIdInclude_1) {\n                        _this.processPredecessors(predecessor.to);\n                    }\n                });\n            }\n        }\n    };\n    ConnectorLineEdit.prototype.checkChildRecords = function (ganttRecord) {\n        this.validationPredecessor = ganttRecord.ganttProperties.predecessor;\n        if (!isNullOrUndefined(this.validationPredecessor)) {\n            this.removePredecessors(ganttRecord, this.validationPredecessor);\n        }\n        if (ganttRecord.childRecords.length > 0) {\n            for (var i = 0; i < ganttRecord.childRecords.length; i++) {\n                var childRecord = ganttRecord.childRecords[i];\n                this.validationPredecessor = childRecord.ganttProperties.predecessor;\n                if (!isNullOrUndefined(this.validationPredecessor)) {\n                    this.removePredecessors(childRecord, this.validationPredecessor);\n                }\n                if (childRecord.childRecords.length > 0) {\n                    this.checkChildRecords(childRecord);\n                }\n            }\n        }\n        else if (!isNullOrUndefined(ganttRecord.parentItem)) {\n            var parentRecord = this.parent.getRecordByID(ganttRecord.parentItem.taskId);\n            this.validationPredecessor = parentRecord.ganttProperties.predecessor;\n            this.removePredecessors(parentRecord, this.validationPredecessor);\n        }\n    };\n    ConnectorLineEdit.prototype.compareObjects = function (obj1, obj2) {\n        var keys1 = Object.keys(obj1).filter(function (key) { return key !== 'offset'; });\n        var keys2 = Object.keys(obj2).filter(function (key) { return key !== 'offset'; });\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n        return keys1.every(function (key) { return obj1[key] === obj2[key]; });\n    };\n    ConnectorLineEdit.prototype.calculateOffset = function (record, isRecursive) {\n        var _this = this;\n        if (!this.parent.autoCalculateDateScheduling || (this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand\n            && this.parent.taskFields.hasChildMapping)) {\n            return;\n        }\n        if (record && isScheduledTask(record.ganttProperties) !== null) {\n            var prevPredecessor = extend([], record.ganttProperties.predecessor, [], true);\n            var validPredecessor_1 = this.parent.predecessorModule.getValidPredecessor(record);\n            if (validPredecessor_1.length > 0) {\n                this.cumulativePredecessorChanges = prevPredecessor;\n                var _loop_5 = function (i) {\n                    var predecessor = validPredecessor_1[parseInt(i.toString(), 10)];\n                    var parentTask = this_4.parent.connectorLineModule.getRecordByID(predecessor.from);\n                    if (this_4.parent.undoRedoModule && this_4.parent.undoRedoModule['isUndoRedoPerformed'] && this_4.parent.viewType === 'ProjectView') {\n                        var isPresent = parentTask.ganttProperties.predecessor.filter(function (pred) {\n                            return pred.from === validPredecessor_1[i].from && pred.to === validPredecessor_1[i].to;\n                        });\n                        if (isPresent.length === 0) {\n                            parentTask.ganttProperties.predecessor.push(validPredecessor_1[i]);\n                        }\n                    }\n                    var offset = void 0;\n                    if ((parentTask.ganttProperties.startDate || parentTask.ganttProperties.endDate) &&\n                        (record.ganttProperties.startDate || record.ganttProperties.endDate)) {\n                        var tempStartDate = void 0;\n                        var tempEndDate = void 0;\n                        var tempDuration = void 0;\n                        var isNegativeOffset = void 0;\n                        switch (predecessor.type) {\n                            case 'FS':\n                                tempStartDate = new Date((parentTask.ganttProperties.endDate ||\n                                    parentTask.ganttProperties.startDate).getTime());\n                                tempEndDate = new Date((record.ganttProperties.startDate || record.ganttProperties.endDate).getTime());\n                                break;\n                            case 'SS':\n                                tempStartDate = new Date((parentTask.ganttProperties.startDate ||\n                                    parentTask.ganttProperties.endDate).getTime());\n                                tempEndDate = new Date((record.ganttProperties.startDate || record.ganttProperties.endDate).getTime());\n                                break;\n                            case 'SF':\n                                tempStartDate = new Date((parentTask.ganttProperties.startDate ||\n                                    parentTask.ganttProperties.endDate).getTime());\n                                tempEndDate = new Date((record.ganttProperties.endDate || record.ganttProperties.startDate).getTime());\n                                break;\n                            case 'FF':\n                                tempStartDate = new Date((parentTask.ganttProperties.endDate ||\n                                    parentTask.ganttProperties.startDate).getTime());\n                                tempEndDate = new Date((record.ganttProperties.endDate || record.ganttProperties.startDate).getTime());\n                                break;\n                        }\n                        if (tempStartDate.getTime() < tempEndDate.getTime()) {\n                            tempStartDate = this_4.dateValidateModule.checkStartDate(tempStartDate);\n                            tempEndDate = this_4.dateValidateModule.checkEndDate(tempEndDate, null);\n                            isNegativeOffset = false;\n                        }\n                        else {\n                            var tempDate = new Date(tempStartDate.getTime());\n                            tempStartDate = this_4.dateValidateModule.checkStartDate(tempEndDate);\n                            tempEndDate = this_4.dateValidateModule.checkEndDate(tempDate, null);\n                            isNegativeOffset = true;\n                        }\n                        if (tempStartDate.getTime() < tempEndDate.getTime()) {\n                            tempDuration = this_4.dateValidateModule.getDuration(tempStartDate, tempEndDate, predecessor.offsetUnit, true, false);\n                            if (this_4.parent.durationUnit === predecessor.offsetUnit &&\n                                ((parentTask.ganttProperties.startDate && isNullOrUndefined(parentTask.ganttProperties.endDate)) ||\n                                    (isNullOrUndefined(parentTask.ganttProperties.startDate) && parentTask.ganttProperties.endDate))) {\n                                tempDuration = tempDuration - 1;\n                            }\n                            offset = isNegativeOffset ? (tempDuration * -1) : tempDuration;\n                        }\n                        else {\n                            offset = 0;\n                        }\n                    }\n                    else {\n                        offset = 0;\n                    }\n                    var preIndex = getIndex(predecessor, 'from', prevPredecessor, 'to');\n                    if (preIndex !== -1) {\n                        prevPredecessor[preIndex].offset = offset;\n                    }\n                    // Update predecessor in predecessor task\n                    var parentPredecessors = extend([], parentTask.ganttProperties.predecessor, [], true);\n                    var parentPreIndex = getIndex(predecessor, 'from', parentPredecessors, 'to');\n                    if (parentPreIndex !== -1) {\n                        parentPredecessors[parentPreIndex].offset = offset;\n                    }\n                    this_4.parent.setRecordValue('predecessor', parentPredecessors, parentTask.ganttProperties, true);\n                };\n                var this_4 = this;\n                for (var i = 0; i < validPredecessor_1.length; i++) {\n                    _loop_5(i);\n                }\n            }\n            else {\n                var validPredecessor_2 = record.ganttProperties.predecessor;\n                if (validPredecessor_2) {\n                    if (validPredecessor_2.length > 0) {\n                        validPredecessor_2.forEach(function (element) {\n                            if (_this.validatedOffsetIds.indexOf(element.to) === -1) {\n                                _this.calculateOffset(_this.parent.getRecordByID(element.to), true);\n                            }\n                        });\n                    }\n                }\n            }\n            if (validPredecessor_1.length === 0) {\n                this.cumulativePredecessorChanges = [];\n            }\n            if (!isRecursive && this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                if (prevPredecessor && prevPredecessor.length > 0 && this.cumulativePredecessorChanges &&\n                    this.cumulativePredecessorChanges.length > 0) {\n                    var matchingObjects = prevPredecessor.map(function (objectToCompare) {\n                        var matchedObject = _this.cumulativePredecessorChanges.find(function (obj) { return _this.compareObjects(obj, objectToCompare); });\n                        return matchedObject ? __assign({}, matchedObject) : null;\n                    }).filter(function (matchedObject) { return matchedObject !== null; });\n                    this.parent.setRecordValue('predecessor', matchingObjects, record.ganttProperties, true);\n                }\n            }\n            else {\n                this.parent.setRecordValue('predecessor', prevPredecessor, record.ganttProperties, true);\n            }\n            var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(record);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, record);\n            this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, record);\n            this.parent.setRecordValue('predecessorsName', predecessorString, record.ganttProperties, true);\n            if (this.validatedOffsetIds.indexOf(record.ganttProperties.taskId.toString()) === -1) {\n                this.validatedOffsetIds.push(record.ganttProperties.taskId.toString());\n            }\n            if (record.hasChildRecords) {\n                for (var i = 0; i < record.childRecords.length; i++) {\n                    if (this.validatedOffsetIds.indexOf(record.childRecords[i].ganttProperties.taskId.toString()) === -1 &&\n                        record.childRecords[i].ganttProperties.predecessor &&\n                        record.childRecords[i].ganttProperties.predecessor.length > 0) {\n                        this.calculateOffset(record.childRecords[i]);\n                    }\n                }\n            }\n            else if (record.parentItem) {\n                var parentItem = this.parent.getRecordByID(record.parentItem.taskId);\n                if (this.validatedOffsetIds.indexOf(parentItem.ganttProperties.taskId.toString()) === -1 &&\n                    parentItem.ganttProperties.predecessor && parentItem.ganttProperties.predecessor.length > 0) {\n                    this.calculateOffset(parentItem);\n                }\n            }\n        }\n    };\n    /**\n     * Update predecessor value with user selection option in predecessor validation dialog\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {IPredecessor[]} predecessor .\n     * @returns {void} .\n     */\n    ConnectorLineEdit.prototype.removePredecessors = function (ganttRecord, predecessor) {\n        var prevPredecessor = extend([], [], ganttRecord.ganttProperties.predecessor, true);\n        if (isNullOrUndefined(predecessor)) {\n            return;\n        }\n        var preLength = predecessor.length;\n        for (var i = 0; i < preLength; i++) {\n            var parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n            var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n            var index = getIndex(predecessor[i], 'from', prevPredecessor, 'to');\n            prevPredecessor.splice(index, 1);\n            var parentIndex = getIndex(predecessor[parseInt(i.toString(), 10)], 'from', parentPredecessor, 'to');\n            parentPredecessor.splice(parentIndex, 1);\n            this.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n        }\n        if (prevPredecessor.length !== ganttRecord.ganttProperties.predecessor.length) {\n            this.parent.setRecordValue('predecessor', prevPredecessor, ganttRecord.ganttProperties, true);\n            var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(ganttRecord);\n            this.parent.setRecordValue('predecessorsName', predecessorString, ganttRecord.ganttProperties, true);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, ganttRecord);\n            this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, ganttRecord);\n        }\n    };\n    /**\n     * To open predecessor validation dialog\n     *\n     * @param {object} args .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.openValidationDialog = function (args) {\n        var contentTemplate = this.validationDialogTemplate(args);\n        this.parent.validationDialogElement.setProperties({ content: contentTemplate });\n        this.parent.validationDialogElement.show();\n    };\n    /**\n     * Predecessor link validation dialog template\n     *\n     * @param {object} args .\n     * @returns {HTMLElement} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.validationDialogTemplate = function (args) {\n        var ganttId = this.parent.element.id;\n        var contentdiv = createElement('div', {\n            className: 'e-ValidationContent'\n        });\n        var taskData = getValue('task', args);\n        var parenttaskData = getValue('parentTask', args);\n        var violationType = getValue('violationType', args);\n        var recordName = taskData.ganttProperties.taskName;\n        var recordNewStartDate = this.parent.getFormatedDate(taskData.ganttProperties.startDate, this.parent.dateFormat);\n        var parentName = parenttaskData.ganttProperties.taskName;\n        var recordArgs = [recordName, parentName];\n        var topContentText;\n        if (violationType === 'taskBeforePredecessor_FS') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FS');\n        }\n        else if (violationType === 'taskAfterPredecessor_FS') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FS');\n        }\n        else if (violationType === 'taskBeforePredecessor_SS') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SS');\n        }\n        else if (violationType === 'taskAfterPredecessor_SS') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SS');\n        }\n        else if (violationType === 'taskBeforePredecessor_FF') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_FF');\n        }\n        else if (violationType === 'taskAfterPredecessor_FF') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_FF');\n        }\n        else if (violationType === 'taskBeforePredecessor_SF') {\n            topContentText = this.parent.localeObj.getConstant('taskBeforePredecessor_SF');\n        }\n        else if (violationType === 'taskAfterPredecessor_SF') {\n            topContentText = this.parent.localeObj.getConstant('taskAfterPredecessor_SF');\n        }\n        topContentText = formatString(topContentText, recordArgs);\n        var topContent = '<div id=\"' + ganttId + '_ValidationText\">' + topContentText + '<div>';\n        var innerTable = '<table>' +\n            '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationCancel\" name=\"ValidationRule\" checked/><label for=\"'\n            + ganttId + '_ValidationCancel\" id= \"' + ganttId + '_cancelLink\">Cancel, keep the existing link</label></td></tr>' +\n            '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationRemoveline\" name=\"ValidationRule\"/><label for=\"'\n            + ganttId + '_ValidationRemoveline\" id=\"' + ganttId + '_removeLink\">Remove the link and move <b>'\n            + recordName + '</b> to start on <b>' + recordNewStartDate + '</b>.</label></td></tr>' +\n            '<tr><td><input type=\"radio\" id=\"' + ganttId + '_ValidationAddlineOffset\" name=\"ValidationRule\"/><label for=\"'\n            + ganttId + '_ValidationAddlineOffset\" id=\"' + ganttId + '_preserveLink\">Move the <b>'\n            + recordName + '</b> to start on <b>' + recordNewStartDate + '</b> and keep the link.</label></td></tr></table>';\n        contentdiv.innerHTML = topContent + innerTable;\n        return contentdiv;\n    };\n    /**\n     * To validate the types while editing the taskbar\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {any} data .\n     * @returns {boolean} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.validateTypes = function (ganttRecord, data) {\n        var predecessor = this.parent.predecessorModule.getValidPredecessor(ganttRecord);\n        var parentGanttRecord;\n        this.validationPredecessor = [];\n        var violatedParent;\n        var ganttTaskData;\n        var violateType;\n        var startDate = this.parent.predecessorModule.getPredecessorDate(ganttRecord, predecessor);\n        if (data) {\n            ganttTaskData = data.ganttProperties;\n        }\n        else {\n            ganttTaskData = ganttRecord.ganttProperties;\n        }\n        var endDate = this.parent.allowUnscheduledTasks && isNullOrUndefined(startDate) ?\n            ganttTaskData.endDate :\n            this.dateValidateModule.getEndDate(startDate, ganttTaskData.duration, ganttTaskData.durationUnit, ganttTaskData, false);\n        for (var i = 0; i < predecessor.length; i++) {\n            parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[i].from);\n            var violationType = null;\n            if (predecessor[i].type === 'FS') {\n                if (this.parent.dateValidationModule.getDuration(startDate, ganttTaskData.startDate, this.parent.durationUnit, ganttTaskData.isAutoSchedule, ganttTaskData.isMilestone, true) !== 0) {\n                    if (ganttTaskData.startDate < startDate) {\n                        this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                        violationType = 'taskBeforePredecessor_FS';\n                    }\n                    else if (ganttTaskData.startDate > startDate) {\n                        this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                        violationType = 'taskAfterPredecessor_FS';\n                    }\n                }\n            }\n            else if (predecessor[i].type === 'SS') {\n                var endDateOlny = new Date(ganttTaskData.endDate);\n                var startDateOlny = new Date(startDate);\n                if (ganttTaskData.startDate < startDate) {\n                    this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                    violationType = 'taskBeforePredecessor_SS';\n                }\n                else if (ganttTaskData.startDate > startDate) {\n                    this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                    violationType = 'taskAfterPredecessor_SS';\n                }\n                else if (this.parent.allowUnscheduledTasks &&\n                    isNullOrUndefined(ganttTaskData.startDate) &&\n                    isNullOrUndefined(ganttTaskData.duration) &&\n                    endDateOlny.setHours(0, 0, 0, 0) < startDateOlny.setHours(0, 0, 0, 0)) {\n                    this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                    violationType = 'taskBeforePredecessor_SS';\n                }\n                else if (this.parent.allowUnscheduledTasks &&\n                    isNullOrUndefined(ganttTaskData.startDate) &&\n                    isNullOrUndefined(ganttTaskData.duration) &&\n                    endDateOlny.setHours(0, 0, 0, 0) > startDateOlny.setHours(0, 0, 0, 0)) {\n                    this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                    violationType = 'taskAfterPredecessor_SS';\n                }\n            }\n            else if (predecessor[i].type === 'FF') {\n                if (this.parent.dateValidationModule.getDuration(startDate, parentGanttRecord.ganttProperties.endDate, this.parent.durationUnit, parentGanttRecord.ganttProperties.isAutoSchedule, parentGanttRecord.ganttProperties.isMilestone, true) !== 0) {\n                    if (endDate <= parentGanttRecord.ganttProperties.endDate) {\n                        this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                        violationType = 'taskBeforePredecessor_FF';\n                    }\n                    else if (endDate > parentGanttRecord.ganttProperties.endDate) {\n                        this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                        violationType = 'taskAfterPredecessor_FF';\n                    }\n                }\n            }\n            else if (predecessor[i].type === 'SF') {\n                if (this.parent.dateValidationModule.getDuration(parentGanttRecord.ganttProperties.startDate, endDate, this.parent.durationUnit, parentGanttRecord.ganttProperties.isAutoSchedule, parentGanttRecord.ganttProperties.isMilestone, true) !== 0) {\n                    if (endDate < parentGanttRecord.ganttProperties.startDate) {\n                        this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                        violationType = 'taskBeforePredecessor_SF';\n                    }\n                    else if (endDate >= parentGanttRecord.ganttProperties.startDate) {\n                        this.validationPredecessor.push(predecessor[parseInt(i.toString(), 10)]);\n                        violationType = 'taskAfterPredecessor_SF';\n                    }\n                }\n            }\n            if (!isNullOrUndefined(violationType) && isNullOrUndefined(violateType)) {\n                violatedParent = parentGanttRecord;\n                violateType = violationType;\n            }\n        }\n        var validateArgs = {\n            parentTask: violatedParent,\n            task: ganttRecord,\n            violationType: violateType\n        };\n        return validateArgs;\n    };\n    /**\n     * Method to remove and update new predecessor collection in successor record\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.addRemovePredecessor = function (data) {\n        var prevData = this.parent.previousRecords[data.uniqueID];\n        var newPredecessor = data.ganttProperties.predecessor.slice();\n        // eslint-disable-next-line\n        if (prevData && prevData.ganttProperties && prevData.ganttProperties.hasOwnProperty('predecessor')) {\n            var prevPredecessor_1 = prevData.ganttProperties.predecessor;\n            if (!isNullOrUndefined(prevPredecessor_1)) {\n                var _loop_6 = function (p) {\n                    var parentGanttRecord = this_5.parent.connectorLineModule.getRecordByID(prevPredecessor_1[parseInt(p.toString(), 10)].from);\n                    if (parentGanttRecord === data) {\n                        var isValid = data.ganttProperties.predecessor.filter(function (pred) {\n                            return prevPredecessor_1[p].from === pred.from && prevPredecessor_1[p].to === pred.to;\n                        });\n                        if (isValid.length === 0) {\n                            if (data.parentItem && this_5.parent.taskFields.dependency && data.ganttProperties.predecessor &&\n                                this_5.parent.allowParentDependency) {\n                                if (prevPredecessor_1[p].from !== data.parentItem.taskId &&\n                                    prevPredecessor_1[p].to !== data.parentItem.taskId) {\n                                    data.ganttProperties.predecessor.push(prevPredecessor_1[parseInt(p.toString(), 10)]);\n                                }\n                            }\n                            else {\n                                data.ganttProperties.predecessor.push(prevPredecessor_1[parseInt(p.toString(), 10)]);\n                            }\n                        }\n                    }\n                    else {\n                        var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n                        var parentIndex = getIndex(prevPredecessor_1[parseInt(p.toString(), 10)], 'from', parentPredecessor, 'to');\n                        if (parentIndex !== -1) {\n                            parentPredecessor.splice(parentIndex, 1);\n                            this_5.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n                        }\n                    }\n                };\n                var this_5 = this;\n                for (var p = 0; p < prevPredecessor_1.length; p++) {\n                    _loop_6(p);\n                }\n            }\n            if (!isNullOrUndefined(newPredecessor)) {\n                var _loop_7 = function (n) {\n                    var parentGanttRecord = this_6.parent.connectorLineModule.getRecordByID(newPredecessor[parseInt(n.toString(), 10)].from);\n                    var parentPredecessor = extend([], [], parentGanttRecord.ganttProperties.predecessor, true);\n                    var isValid = parentPredecessor.filter(function (pred) {\n                        return newPredecessor[n].from === pred.from && newPredecessor[n].to === pred.to;\n                    });\n                    if (isValid.length === 0) {\n                        parentPredecessor.push(newPredecessor[parseInt(n.toString(), 10)]);\n                        this_6.parent.setRecordValue('predecessor', parentPredecessor, parentGanttRecord.ganttProperties, true);\n                    }\n                };\n                var this_6 = this;\n                for (var n = 0; n < newPredecessor.length; n++) {\n                    _loop_7(n);\n                }\n            }\n        }\n    };\n    /**\n     * Method to remove a predecessor from a record.\n     *\n     * @param {IGanttData} childRecord .\n     * @param {number} index .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.removePredecessorByIndex = function (childRecord, index) {\n        if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            if (this.parent.undoRedoModule['redoEnabled']) {\n                this.parent.undoRedoModule['disableRedo']();\n            }\n            this.parent.undoRedoModule['createUndoCollection']();\n            var details = {};\n            details['action'] = 'DeleteDependency';\n            details['modifiedRecords'] = extend([], [childRecord], [], true);\n            this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n        }\n        var childPredecessor = childRecord.ganttProperties.predecessor;\n        var predecessor = childPredecessor.splice(index, 1);\n        var parentRecord = this.parent.connectorLineModule.getRecordByID(predecessor[0].from);\n        var parentPredecessor = parentRecord.ganttProperties.predecessor;\n        var parentIndex = getIndex(predecessor[0], 'from', parentPredecessor, 'to');\n        parentPredecessor.splice(parentIndex, 1);\n        var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(childRecord);\n        childPredecessor.push(predecessor[0]);\n        this.parent.connectorLineEditModule.updatePredecessor(childRecord, predecessorString);\n    };\n    /**\n     * To render predecessor delete confirmation dialog\n     *\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLineEdit.prototype.renderPredecessorDeleteConfirmDialog = function () {\n        this.confirmPredecessorDialog = new Dialog({\n            width: '320px',\n            isModal: true,\n            enableRtl: this.parent.enableRtl,\n            content: this.parent.localeObj.getConstant('confirmPredecessorDelete'),\n            buttons: [\n                {\n                    click: this.confirmOkDeleteButton.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('okText'), isPrimary: true }\n                },\n                {\n                    click: this.confirmCloseDialog.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            target: this.parent.element,\n            animationSettings: { effect: 'None' }\n        });\n        var confirmDialog = createElement('div', {\n            id: this.parent.element.id + '_deletePredecessorConfirmDialog'\n        });\n        this.parent.element.appendChild(confirmDialog);\n        this.confirmPredecessorDialog.isStringTemplate = true;\n        this.confirmPredecessorDialog.appendTo(confirmDialog);\n    };\n    ConnectorLineEdit.prototype.confirmCloseDialog = function () {\n        this.confirmPredecessorDialog.destroy();\n    };\n    ConnectorLineEdit.prototype.confirmOkDeleteButton = function () {\n        this.removePredecessorByIndex(this.childRecord, this.predecessorIndex);\n        this.confirmPredecessorDialog.destroy();\n    };\n    return ConnectorLineEdit;\n}());\nexport { ConnectorLineEdit };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}