{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport * as events from '../base/constant';\nimport { ToolbarStatus } from '../../editor-manager/plugin/toolbar-status';\nimport { getDefaultHtmlTbStatus } from '../../common/util';\n/**\n * HtmlToolbarStatus module for refresh the toolbar status\n */\nvar HtmlToolbarStatus = /** @class */function () {\n  function HtmlToolbarStatus(parent) {\n    this.parent = parent;\n    this.toolbarStatus = this.prevToolbarStatus = getDefaultHtmlTbStatus();\n    this.addEventListener();\n  }\n  HtmlToolbarStatus.prototype.addEventListener = function () {\n    this.parent.on(events.toolbarRefresh, this.onRefreshHandler, this);\n    this.parent.on(events.destroy, this.removeEventListener, this);\n  };\n  HtmlToolbarStatus.prototype.removeEventListener = function () {\n    this.toolbarStatus = null;\n    this.prevToolbarStatus = null;\n    this.parent.off(events.toolbarRefresh, this.onRefreshHandler);\n    this.parent.off(events.destroy, this.removeEventListener);\n  };\n  HtmlToolbarStatus.prototype.onRefreshHandler = function (args) {\n    if (this.parent.readonly) {\n      return;\n    }\n    var fontsize = [];\n    var fontName = [];\n    var formats = [];\n    this.parent.fontSize.items.forEach(function (item) {\n      fontsize.push(item.value);\n    });\n    this.parent.fontFamily.items.forEach(function (item) {\n      fontName.push(item.value);\n    });\n    this.parent.format.types.forEach(function (item) {\n      formats.push(item.value.toLocaleLowerCase());\n    });\n    this.toolbarStatus = ToolbarStatus.get(this.parent.contentModule.getDocument(), this.parent.contentModule.getEditPanel(), formats, fontsize, fontName, args.documentNode);\n    var tbStatusString = JSON.stringify(this.toolbarStatus);\n    this.parent.notify(events.toolbarUpdated, this.toolbarStatus);\n    if (JSON.stringify(this.prevToolbarStatus) !== tbStatusString) {\n      this.parent.notify(events.updateTbItemsStatus, {\n        html: JSON.parse(tbStatusString),\n        markdown: null\n      });\n      this.prevToolbarStatus = JSON.parse(tbStatusString);\n    }\n  };\n  return HtmlToolbarStatus;\n}();\nexport { HtmlToolbarStatus };","map":{"version":3,"names":["events","ToolbarStatus","getDefaultHtmlTbStatus","HtmlToolbarStatus","parent","toolbarStatus","prevToolbarStatus","addEventListener","prototype","on","toolbarRefresh","onRefreshHandler","destroy","removeEventListener","off","args","readonly","fontsize","fontName","formats","fontSize","items","forEach","item","push","value","fontFamily","format","types","toLocaleLowerCase","get","contentModule","getDocument","getEditPanel","documentNode","tbStatusString","JSON","stringify","notify","toolbarUpdated","updateTbItemsStatus","html","parse","markdown"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/actions/html-toolbar-status.js"],"sourcesContent":["import * as events from '../base/constant';\nimport { ToolbarStatus } from '../../editor-manager/plugin/toolbar-status';\nimport { getDefaultHtmlTbStatus } from '../../common/util';\n/**\n * HtmlToolbarStatus module for refresh the toolbar status\n */\nvar HtmlToolbarStatus = /** @class */ (function () {\n    function HtmlToolbarStatus(parent) {\n        this.parent = parent;\n        this.toolbarStatus = this.prevToolbarStatus = getDefaultHtmlTbStatus();\n        this.addEventListener();\n    }\n    HtmlToolbarStatus.prototype.addEventListener = function () {\n        this.parent.on(events.toolbarRefresh, this.onRefreshHandler, this);\n        this.parent.on(events.destroy, this.removeEventListener, this);\n    };\n    HtmlToolbarStatus.prototype.removeEventListener = function () {\n        this.toolbarStatus = null;\n        this.prevToolbarStatus = null;\n        this.parent.off(events.toolbarRefresh, this.onRefreshHandler);\n        this.parent.off(events.destroy, this.removeEventListener);\n    };\n    HtmlToolbarStatus.prototype.onRefreshHandler = function (args) {\n        if (this.parent.readonly) {\n            return;\n        }\n        var fontsize = [];\n        var fontName = [];\n        var formats = [];\n        this.parent.fontSize.items.forEach(function (item) {\n            fontsize.push(item.value);\n        });\n        this.parent.fontFamily.items.forEach(function (item) {\n            fontName.push(item.value);\n        });\n        this.parent.format.types.forEach(function (item) {\n            formats.push(item.value.toLocaleLowerCase());\n        });\n        this.toolbarStatus = ToolbarStatus.get(this.parent.contentModule.getDocument(), this.parent.contentModule.getEditPanel(), formats, fontsize, fontName, args.documentNode);\n        var tbStatusString = JSON.stringify(this.toolbarStatus);\n        this.parent.notify(events.toolbarUpdated, this.toolbarStatus);\n        if (JSON.stringify(this.prevToolbarStatus) !== tbStatusString) {\n            this.parent.notify(events.updateTbItemsStatus, { html: JSON.parse(tbStatusString), markdown: null });\n            this.prevToolbarStatus = JSON.parse(tbStatusString);\n        }\n    };\n    return HtmlToolbarStatus;\n}());\nexport { HtmlToolbarStatus };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}