{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElement, detach, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport { insertItemsAtIndex } from '../../common/util';\n/**\n * Utilities to handle the table cell selection\n */\nvar TableSelection = /** @class */function () {\n  function TableSelection(root, currentDocument) {\n    this.BLOCK_TAGS = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'li', 'pre', 'td', 'th', 'div', 'hr', 'section', 'figure'];\n    this.BASIC_FORMATS = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'pre'];\n    this.root = root;\n    this.currentDocument = currentDocument;\n  }\n  /**\n   * Get the block nodes from the selected cells.\n   *\n   * @returns {HTMLTableCellElement[]} - Returns the selected cells\n   */\n  TableSelection.prototype.getBlockNodes = function () {\n    var blockNodes = [];\n    if (isNOU(this.root.querySelector('.e-cell-select'))) {\n      return blockNodes;\n    }\n    var currentTable = this.root.querySelector('.e-cell-select').closest('table');\n    var cellSelectNode = currentTable.querySelectorAll('.e-cell-select');\n    if (isNOU(cellSelectNode) || cellSelectNode.length < 2) {\n      return blockNodes;\n    }\n    // Generate block nodes\n    for (var i = 0; i < cellSelectNode.length; i++) {\n      this.addBlockNodes(cellSelectNode[i], blockNodes);\n    }\n    this.wrapParagraphNodes(blockNodes);\n    return blockNodes;\n  };\n  TableSelection.prototype.addBlockNodes = function (node, blockNodes) {\n    var nodes = node.childNodes;\n    if (nodes.length === 0) {\n      blockNodes.push(node);\n      return;\n    }\n    for (var j = 0; j < nodes.length; j++) {\n      var currentNode = nodes[j];\n      if (blockNodes.indexOf(currentNode.parentElement) >= 0) {\n        continue;\n      }\n      if (currentNode.parentElement && (currentNode.parentElement.nodeName === 'TD' || currentNode.parentElement.nodeName === 'TH') && currentNode.parentElement.childNodes.length === 1) {\n        if (currentNode.nodeName === 'BR') {\n          blockNodes.push(currentNode.parentElement);\n        } else if (currentNode.nodeType === Node.TEXT_NODE) {\n          blockNodes.push(currentNode.parentElement);\n        } else {\n          blockNodes.push(currentNode.parentElement);\n        }\n      } else {\n        blockNodes.push(currentNode.parentElement);\n      }\n    }\n  };\n  /**\n   * Get the text nodes from the selected cells\n   *\n   * @returns {Node[]} - Returns the text nodes\n   */\n  TableSelection.prototype.getTextNodes = function () {\n    var textNodes = [];\n    if (isNOU(this.root.querySelector('.e-cell-select'))) {\n      return textNodes;\n    }\n    var currentTable = this.root.querySelector('.e-cell-select').closest('table');\n    var cellSelectNode = currentTable.querySelectorAll('.e-cell-select');\n    if (isNOU(cellSelectNode) || cellSelectNode.length < 2) {\n      return textNodes;\n    }\n    // Generate text nodes\n    for (var i = 0; i < cellSelectNode.length; i++) {\n      this.addTextNodes(cellSelectNode[i], textNodes);\n    }\n    return textNodes;\n  };\n  TableSelection.prototype.addTextNodes = function (parent, textNodes) {\n    var nodes = parent.childNodes;\n    if (nodes.length === 0 && (parent.nodeName === 'TD' || parent.nodeName === 'TH')) {\n      var text = this.currentDocument.createTextNode('\\u200B');\n      parent.appendChild(text);\n      textNodes.push(text);\n      return;\n    } // If the BR element is the only child of the TD element, add a zero width space character\n    else if (nodes.length === 1 && (parent.nodeName === 'TD' || parent.nodeName === 'TH') && nodes[0].nodeName === 'BR') {\n      var text = this.currentDocument.createTextNode('\\u200B');\n      parent.insertBefore(text, nodes[0]);\n      textNodes.push(text);\n      return;\n    }\n    for (var j = 0; j < nodes.length; j++) {\n      var currentNode = nodes[j];\n      if (currentNode.nodeType === Node.TEXT_NODE) {\n        textNodes.push(currentNode);\n      } else if (currentNode.nodeType === Node.ELEMENT_NODE) {\n        // Recursively check all descendants\n        this.addTextNodes(currentNode, textNodes);\n      }\n    }\n  };\n  TableSelection.prototype.wrapParagraphNodes = function (blockNodes) {\n    var blockNodesArry = Array.from(blockNodes);\n    for (var i = 0; i < blockNodesArry.length; i++) {\n      var node = blockNodesArry[i];\n      if (node.nodeName === 'TD' || node.nodeName === 'TH') {\n        // Case 1: Simple TD with BR or inline or text nodes\n        if (node.childNodes.length === 1 && (node.childNodes[0].nodeName === 'BR' || node.childNodes[0].nodeType === Node.TEXT_NODE)) {\n          var childNode = node.childNodes[0];\n          var paragraph = createElement('p');\n          childNode.parentElement.insertBefore(paragraph, childNode);\n          paragraph.appendChild(childNode);\n          var index = blockNodes.indexOf(node);\n          blockNodes[index] = paragraph;\n        }\n        // Case 2 TD with inline and block nodes\n        else {\n          var newIndex = blockNodes.indexOf(node);\n          this.wrapInlineNodes(node, blockNodes, newIndex);\n        }\n      }\n    }\n    for (var i = 0; i < blockNodes.length; i++) {\n      var currentNode = blockNodes[i];\n      if (currentNode.nodeName === 'LI' && currentNode.childNodes.length === 1) {\n        var firstChild = currentNode.childNodes[0];\n        if (firstChild.nodeType === Node.ELEMENT_NODE && this.BASIC_FORMATS.indexOf(firstChild.nodeName.toLocaleLowerCase()) >= 0 && firstChild.textContent === currentNode.textContent) {\n          blockNodes[i] = firstChild;\n        }\n      }\n    }\n  };\n  TableSelection.prototype.wrapInlineNodes = function (node, blockNodes, index) {\n    var child = node.childNodes[0];\n    var wrapperElement = createElement('p');\n    var tempBlockNodes = [];\n    if (isNOU(child)) {\n      node.appendChild(wrapperElement);\n      tempBlockNodes.push(wrapperElement);\n      insertItemsAtIndex(blockNodes, tempBlockNodes, index);\n      return;\n    }\n    while (child) {\n      // CASE 1: BR Elements\n      if (child.nodeName === 'BR') {\n        child.parentNode.insertBefore(wrapperElement, child);\n        wrapperElement.appendChild(child);\n        if (wrapperElement.childNodes.length > 0 && tempBlockNodes.indexOf(wrapperElement) < 0) {\n          tempBlockNodes.push(wrapperElement);\n        }\n        child = wrapperElement.nextSibling;\n        wrapperElement = createElement('p');\n      } // CASE 2: Block elements\n      else if (this.BLOCK_TAGS.indexOf(child.nodeName.toLocaleLowerCase()) >= 0) {\n        tempBlockNodes.push(child);\n        if (wrapperElement.childNodes.length > 0) {\n          child = wrapperElement.nextSibling;\n        } else {\n          // Check if any nested list items are present\n          if (child && child.nodeName === 'LI' && child.querySelectorAll('li').length > 0) {\n            var listNodes = child.querySelectorAll('li');\n            for (var i = 0; i < listNodes.length; i++) {\n              tempBlockNodes.push(listNodes[i]);\n            }\n          }\n          if (child.nodeName === 'LI' && isNOU(child.nextSibling)) {\n            child = child.parentElement.nextSibling;\n          } else {\n            child = child.nextSibling;\n          }\n        }\n      } // CASE 3: Text node\n      else if (child.nodeType === Node.TEXT_NODE) {\n        // Remove empty text nodes\n        if (child.textContent.trim() === '' && child.textContent.indexOf('\\u200B') < 0) {\n          var nextSibling = child.nextSibling;\n          detach(child);\n          child = nextSibling;\n          continue;\n        }\n        child.parentNode.insertBefore(wrapperElement, child);\n        var textNode = child;\n        wrapperElement.appendChild(textNode);\n        if (wrapperElement.childNodes.length > 0 && tempBlockNodes.indexOf(wrapperElement) < 0) {\n          tempBlockNodes.push(wrapperElement);\n        }\n        child = wrapperElement.nextSibling;\n      } // CASE 4: Edge case UL, OL, TABLE, etc.\n      else if (child.nodeName === 'TABLE' || child.nodeName === 'UL' || child.nodeName === 'OL') {\n        if (child.nodeName === 'TABLE') {\n          var nestedBlockNodes = [];\n          var cellSelectNode = child.querySelectorAll('td, th');\n          for (var i = 0; i < cellSelectNode.length; i++) {\n            this.addBlockNodes(cellSelectNode[i], nestedBlockNodes);\n          }\n          this.wrapParagraphNodes(nestedBlockNodes);\n          for (var i = 0; i < nestedBlockNodes.length; i++) {\n            tempBlockNodes.push(nestedBlockNodes[i]);\n          }\n          child = child.nextSibling;\n        } else {\n          child = child.firstElementChild;\n        }\n      } // CASE 5: Inline elements\n      else if (this.BLOCK_TAGS.indexOf(child.nodeName.toLocaleLowerCase()) < 0) {\n        child.parentNode.insertBefore(wrapperElement, child);\n        wrapperElement.appendChild(child);\n        if (wrapperElement.childNodes.length > 0 && tempBlockNodes.indexOf(wrapperElement) < 0) {\n          tempBlockNodes.push(wrapperElement);\n        }\n        child = wrapperElement.nextSibling;\n      }\n    }\n    // Merge the block nodes\n    insertItemsAtIndex(blockNodes, tempBlockNodes, index);\n  };\n  return TableSelection;\n}();\nexport { TableSelection };","map":{"version":3,"names":["createElement","detach","isNullOrUndefined","isNOU","insertItemsAtIndex","TableSelection","root","currentDocument","BLOCK_TAGS","BASIC_FORMATS","prototype","getBlockNodes","blockNodes","querySelector","currentTable","closest","cellSelectNode","querySelectorAll","length","i","addBlockNodes","wrapParagraphNodes","node","nodes","childNodes","push","j","currentNode","indexOf","parentElement","nodeName","nodeType","Node","TEXT_NODE","getTextNodes","textNodes","addTextNodes","parent","text","createTextNode","appendChild","insertBefore","ELEMENT_NODE","blockNodesArry","Array","from","childNode","paragraph","index","newIndex","wrapInlineNodes","firstChild","toLocaleLowerCase","textContent","child","wrapperElement","tempBlockNodes","parentNode","nextSibling","listNodes","trim","textNode","nestedBlockNodes","firstElementChild"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/table-selection.js"],"sourcesContent":["import { createElement, detach, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport { insertItemsAtIndex } from '../../common/util';\n/**\n * Utilities to handle the table cell selection\n */\nvar TableSelection = /** @class */ (function () {\n    function TableSelection(root, currentDocument) {\n        this.BLOCK_TAGS = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'li', 'pre', 'td', 'th', 'div', 'hr', 'section', 'figure'];\n        this.BASIC_FORMATS = ['p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'blockquote', 'pre'];\n        this.root = root;\n        this.currentDocument = currentDocument;\n    }\n    /**\n     * Get the block nodes from the selected cells.\n     *\n     * @returns {HTMLTableCellElement[]} - Returns the selected cells\n     */\n    TableSelection.prototype.getBlockNodes = function () {\n        var blockNodes = [];\n        if (isNOU(this.root.querySelector('.e-cell-select'))) {\n            return blockNodes;\n        }\n        var currentTable = this.root.querySelector('.e-cell-select').closest('table');\n        var cellSelectNode = currentTable.querySelectorAll('.e-cell-select');\n        if (isNOU(cellSelectNode) || cellSelectNode.length < 2) {\n            return blockNodes;\n        }\n        // Generate block nodes\n        for (var i = 0; i < cellSelectNode.length; i++) {\n            this.addBlockNodes(cellSelectNode[i], blockNodes);\n        }\n        this.wrapParagraphNodes(blockNodes);\n        return blockNodes;\n    };\n    TableSelection.prototype.addBlockNodes = function (node, blockNodes) {\n        var nodes = node.childNodes;\n        if (nodes.length === 0) {\n            blockNodes.push(node);\n            return;\n        }\n        for (var j = 0; j < nodes.length; j++) {\n            var currentNode = nodes[j];\n            if (blockNodes.indexOf(currentNode.parentElement) >= 0) {\n                continue;\n            }\n            if (currentNode.parentElement && (currentNode.parentElement.nodeName === 'TD' || currentNode.parentElement.nodeName === 'TH')\n                && currentNode.parentElement.childNodes.length === 1) {\n                if (currentNode.nodeName === 'BR') {\n                    blockNodes.push(currentNode.parentElement);\n                }\n                else if (currentNode.nodeType === Node.TEXT_NODE) {\n                    blockNodes.push(currentNode.parentElement);\n                }\n                else {\n                    blockNodes.push(currentNode.parentElement);\n                }\n            }\n            else {\n                blockNodes.push(currentNode.parentElement);\n            }\n        }\n    };\n    /**\n     * Get the text nodes from the selected cells\n     *\n     * @returns {Node[]} - Returns the text nodes\n     */\n    TableSelection.prototype.getTextNodes = function () {\n        var textNodes = [];\n        if (isNOU(this.root.querySelector('.e-cell-select'))) {\n            return textNodes;\n        }\n        var currentTable = this.root.querySelector('.e-cell-select').closest('table');\n        var cellSelectNode = currentTable.querySelectorAll('.e-cell-select');\n        if (isNOU(cellSelectNode) || cellSelectNode.length < 2) {\n            return textNodes;\n        }\n        // Generate text nodes\n        for (var i = 0; i < cellSelectNode.length; i++) {\n            this.addTextNodes(cellSelectNode[i], textNodes);\n        }\n        return textNodes;\n    };\n    TableSelection.prototype.addTextNodes = function (parent, textNodes) {\n        var nodes = parent.childNodes;\n        if (nodes.length === 0 && (parent.nodeName === 'TD' || parent.nodeName === 'TH')) {\n            var text = this.currentDocument.createTextNode('\\u200B');\n            parent.appendChild(text);\n            textNodes.push(text);\n            return;\n        } // If the BR element is the only child of the TD element, add a zero width space character\n        else if (nodes.length === 1 && (parent.nodeName === 'TD' || parent.nodeName === 'TH') && nodes[0].nodeName === 'BR') {\n            var text = this.currentDocument.createTextNode('\\u200B');\n            parent.insertBefore(text, nodes[0]);\n            textNodes.push(text);\n            return;\n        }\n        for (var j = 0; j < nodes.length; j++) {\n            var currentNode = nodes[j];\n            if (currentNode.nodeType === Node.TEXT_NODE) {\n                textNodes.push(currentNode);\n            }\n            else if (currentNode.nodeType === Node.ELEMENT_NODE) {\n                // Recursively check all descendants\n                this.addTextNodes(currentNode, textNodes);\n            }\n        }\n    };\n    TableSelection.prototype.wrapParagraphNodes = function (blockNodes) {\n        var blockNodesArry = Array.from(blockNodes);\n        for (var i = 0; i < blockNodesArry.length; i++) {\n            var node = blockNodesArry[i];\n            if (node.nodeName === 'TD' || node.nodeName === 'TH') {\n                // Case 1: Simple TD with BR or inline or text nodes\n                if (node.childNodes.length === 1 && (node.childNodes[0].nodeName === 'BR' || node.childNodes[0].nodeType === Node.TEXT_NODE)) {\n                    var childNode = node.childNodes[0];\n                    var paragraph = createElement('p');\n                    childNode.parentElement.insertBefore(paragraph, childNode);\n                    paragraph.appendChild(childNode);\n                    var index = blockNodes.indexOf(node);\n                    blockNodes[index] = paragraph;\n                }\n                // Case 2 TD with inline and block nodes\n                else {\n                    var newIndex = blockNodes.indexOf(node);\n                    this.wrapInlineNodes(node, blockNodes, newIndex);\n                }\n            }\n        }\n        for (var i = 0; i < blockNodes.length; i++) {\n            var currentNode = blockNodes[i];\n            if (currentNode.nodeName === 'LI' && currentNode.childNodes.length === 1) {\n                var firstChild = currentNode.childNodes[0];\n                if (firstChild.nodeType === Node.ELEMENT_NODE && this.BASIC_FORMATS.indexOf(firstChild.nodeName.toLocaleLowerCase()) >= 0\n                    && firstChild.textContent === currentNode.textContent) {\n                    blockNodes[i] = firstChild;\n                }\n            }\n        }\n    };\n    TableSelection.prototype.wrapInlineNodes = function (node, blockNodes, index) {\n        var child = node.childNodes[0];\n        var wrapperElement = createElement('p');\n        var tempBlockNodes = [];\n        if (isNOU(child)) {\n            node.appendChild(wrapperElement);\n            tempBlockNodes.push(wrapperElement);\n            insertItemsAtIndex(blockNodes, tempBlockNodes, index);\n            return;\n        }\n        while (child) {\n            // CASE 1: BR Elements\n            if (child.nodeName === 'BR') {\n                child.parentNode.insertBefore(wrapperElement, child);\n                wrapperElement.appendChild(child);\n                if (wrapperElement.childNodes.length > 0 && tempBlockNodes.indexOf(wrapperElement) < 0) {\n                    tempBlockNodes.push(wrapperElement);\n                }\n                child = wrapperElement.nextSibling;\n                wrapperElement = createElement('p');\n            } // CASE 2: Block elements\n            else if (this.BLOCK_TAGS.indexOf(child.nodeName.toLocaleLowerCase()) >= 0) {\n                tempBlockNodes.push(child);\n                if (wrapperElement.childNodes.length > 0) {\n                    child = wrapperElement.nextSibling;\n                }\n                else {\n                    // Check if any nested list items are present\n                    if (child && child.nodeName === 'LI' && child.querySelectorAll('li').length > 0) {\n                        var listNodes = child.querySelectorAll('li');\n                        for (var i = 0; i < listNodes.length; i++) {\n                            tempBlockNodes.push(listNodes[i]);\n                        }\n                    }\n                    if (child.nodeName === 'LI' && isNOU(child.nextSibling)) {\n                        child = child.parentElement.nextSibling;\n                    }\n                    else {\n                        child = child.nextSibling;\n                    }\n                }\n            } // CASE 3: Text node\n            else if (child.nodeType === Node.TEXT_NODE) {\n                // Remove empty text nodes\n                if (child.textContent.trim() === '' && child.textContent.indexOf('\\u200B') < 0) {\n                    var nextSibling = child.nextSibling;\n                    detach(child);\n                    child = nextSibling;\n                    continue;\n                }\n                child.parentNode.insertBefore(wrapperElement, child);\n                var textNode = child;\n                wrapperElement.appendChild(textNode);\n                if (wrapperElement.childNodes.length > 0 && tempBlockNodes.indexOf(wrapperElement) < 0) {\n                    tempBlockNodes.push(wrapperElement);\n                }\n                child = wrapperElement.nextSibling;\n            } // CASE 4: Edge case UL, OL, TABLE, etc.\n            else if (child.nodeName === 'TABLE' || child.nodeName === 'UL' || child.nodeName === 'OL') {\n                if (child.nodeName === 'TABLE') {\n                    var nestedBlockNodes = [];\n                    var cellSelectNode = child.querySelectorAll('td, th');\n                    for (var i = 0; i < cellSelectNode.length; i++) {\n                        this.addBlockNodes(cellSelectNode[i], nestedBlockNodes);\n                    }\n                    this.wrapParagraphNodes(nestedBlockNodes);\n                    for (var i = 0; i < nestedBlockNodes.length; i++) {\n                        tempBlockNodes.push(nestedBlockNodes[i]);\n                    }\n                    child = child.nextSibling;\n                }\n                else {\n                    child = child.firstElementChild;\n                }\n            } // CASE 5: Inline elements\n            else if (this.BLOCK_TAGS.indexOf(child.nodeName.toLocaleLowerCase()) < 0) {\n                child.parentNode.insertBefore(wrapperElement, child);\n                wrapperElement.appendChild(child);\n                if (wrapperElement.childNodes.length > 0 && tempBlockNodes.indexOf(wrapperElement) < 0) {\n                    tempBlockNodes.push(wrapperElement);\n                }\n                child = wrapperElement.nextSibling;\n            }\n        }\n        // Merge the block nodes\n        insertItemsAtIndex(blockNodes, tempBlockNodes, index);\n    };\n    return TableSelection;\n}());\nexport { TableSelection };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}