{"ast":null,"code":"import { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport * as CONSTANT from './../../markdown-parser/base/constant';\n/**\n * MDFormats internal plugin\n *\n * @hidden\n\n */\nvar MDFormats = /** @class */function () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {IMDFormats} options - specifies the formats\n   * @hidden\n    */\n  function MDFormats(options) {\n    extend(this, this, options, true);\n    this.selection = this.parent.markdownSelection;\n    this.addEventListener();\n  }\n  MDFormats.prototype.addEventListener = function () {\n    this.parent.observer.on(EVENTS.FORMAT_TYPE, this.applyFormats, this);\n    this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n  };\n  MDFormats.prototype.removeEventListener = function () {\n    this.parent.observer.off(EVENTS.FORMAT_TYPE, this.applyFormats);\n    this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n  };\n  MDFormats.prototype.applyFormats = function (e) {\n    e.subCommand = e.subCommand.toLowerCase();\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    if (this.isAppliedFormat(parents) === e.subCommand) {\n      if (e.subCommand === 'pre') {\n        if (parents.length > 1) {\n          this.applyCodeBlock(textArea, e, parents);\n        } else {\n          return;\n        }\n      }\n      this.cleanFormat(textArea);\n      this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n      return;\n    }\n    if (e.subCommand === 'p') {\n      this.cleanFormat(textArea);\n      this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n      return;\n    } else {\n      if (e.subCommand === 'pre' && parents.length !== 1 || e.subCommand !== 'pre') {\n        this.cleanFormat(textArea, e.subCommand);\n      }\n    }\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var addedLength = 0;\n    parents = this.selection.getSelectedParentPoints(textArea);\n    if (e.subCommand === 'pre') {\n      if (parents.length > 1) {\n        this.applyCodeBlock(textArea, e, parents);\n      } else {\n        extend(e, e, {\n          subCommand: 'InlineCode'\n        }, true);\n        this.parent.observer.notify(CONSTANT.selectionCommand, e);\n      }\n      return;\n    }\n    for (var i = 0; i < parents.length; i++) {\n      if (parents[i].text !== '' && !this.selection.isStartWith(parents[i].text, '\\\\' + this.syntax[e.subCommand])) {\n        parents[i].text = this.syntax[e.subCommand] + parents[i].text;\n        textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n        start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n        addedLength += this.syntax[e.subCommand].length;\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            parents[j].start = j !== 0 ? this.syntax[e.subCommand].length + parents[j].start : parents[j].start;\n            parents[j].end = this.syntax[e.subCommand].length + parents[j].end;\n          }\n        }\n      } else if (parents[i].text === '' && i === 0) {\n        this.selection.save(start, end);\n        if (this.selection.getSelectedText(textArea).length === 0) {\n          parents[i].text = this.syntax[e.subCommand];\n          textArea.value = textArea.value.substr(0, parents[i].start) + this.syntax[e.subCommand] + textArea.value.substr(parents[i].end, textArea.value.length);\n          start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n          addedLength += this.syntax[e.subCommand].length;\n        }\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n            parents[j].end = 1 + parents[j].end;\n          }\n        }\n      }\n    }\n    this.restore(textArea, start, end + addedLength, e);\n  };\n  MDFormats.prototype.clearRegex = function () {\n    var regex = '';\n    var configKey = Object.keys(this.syntax);\n    for (var j = 0; j < configKey.length && configKey[j] !== 'pre' && configKey[j] !== 'p'; j++) {\n      regex += regex === '' ? '^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')' : '|^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')';\n    }\n    return regex;\n  };\n  MDFormats.prototype.cleanFormat = function (textArea, command) {\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var removeLength = 0;\n    if (this.selection.isClear(parents, this.clearRegex())) {\n      for (var i = 0; i < parents.length; i++) {\n        var configKey = Object.keys(this.syntax);\n        for (var j = 0; parents[i].text !== '' && j < configKey.length; j++) {\n          var removeText = this.syntax[configKey[j]];\n          if (configKey[j] === command) {\n            continue;\n          }\n          // eslint-disable-next-line\n          var regex = new RegExp('^(' + this.selection.replaceSpecialChar(removeText) + ')', 'gim');\n          if (regex.test(parents[i].text)) {\n            parents[i].text = parents[i].text.replace(regex, '');\n            textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n            start = i === 0 ? start - removeText.length > 0 ? start - removeText.length : 0 : start;\n            removeLength += removeText.length;\n            if (parents.length !== 1) {\n              for (var k = 0; k < parents.length; k++) {\n                parents[k].start = k !== 0 ? parents[k].start - removeText.length : parents[k].start;\n                parents[k].end = parents[k].end - removeText.length;\n              }\n            }\n            break;\n          }\n        }\n        if (parents[i].text === '' && i === 0) {\n          this.selection.save(start, end);\n          if (parents.length !== 1) {\n            for (var j = i; j < parents.length; j++) {\n              parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n              parents[j].end = 1 + parents[j].end;\n            }\n          }\n        }\n      }\n      this.restore(textArea, start, end - removeLength);\n    }\n  };\n  MDFormats.prototype.applyCodeBlock = function (textArea, event, parents) {\n    var command = event.subCommand;\n    var start = parents[0].start;\n    var end = parents[parents.length - 1].end;\n    var parentLines = this.selection.getAllParents(textArea.value);\n    var firstPrevText = parentLines[parents[0].line - 1];\n    var lastNextText = parentLines[parents.length + 1 + 1];\n    // eslint-disable-next-line\n    var addedLength = 0;\n    if (!this.selection.isStartWith(firstPrevText, this.syntax.pre.split('\\n')[0]) && !this.selection.isStartWith(lastNextText, this.syntax.pre.split('\\n')[0])) {\n      var lines = textArea.value.substring(start, end).split('\\n');\n      var lastLine = lines[lines.length - 1] === '' ? '' : '\\n';\n      textArea.value = textArea.value.substr(0, start) + this.syntax[\"\" + command] + textArea.value.substring(start, end) + lastLine + this.syntax[\"\" + command] + textArea.value.substr(end, textArea.value.length);\n      start = this.selection.selectionStart + this.syntax[\"\" + command].length;\n      end = this.selection.selectionEnd + this.syntax[\"\" + command].length - 1;\n    } else {\n      var cmd = this.syntax[\"\" + command];\n      var selection = this.parent.markdownSelection.getSelectedInlinePoints(textArea);\n      var startNo = textArea.value.substr(0, textArea.selectionStart).lastIndexOf(cmd);\n      var endNo = textArea.value.substr(textArea.selectionEnd, textArea.selectionEnd).indexOf(cmd);\n      endNo = endNo + selection.end;\n      var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), cmd, '', startNo, selection.start);\n      var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), cmd, '', 0, endNo);\n      textArea.value = repStartText + selection.text + repEndText;\n      start = this.selection.selectionStart - cmd.length;\n      end = this.selection.selectionEnd - cmd.length;\n    }\n    this.restore(textArea, start, end, event);\n  };\n  MDFormats.prototype.replaceAt = function (input, search, replace, start, end) {\n    return input.slice(0, start) + input.slice(start, end).replace(search, replace) + input.slice(end);\n  };\n  MDFormats.prototype.restore = function (textArea, start, end, event) {\n    this.selection.save(start, end);\n    this.selection.restore(textArea);\n    if (event && event.callBack) {\n      event.callBack({\n        requestType: event.subCommand,\n        selectedText: this.selection.getSelectedText(textArea),\n        editorMode: 'Markdown',\n        event: event.event\n      });\n    }\n  };\n  MDFormats.prototype.isAppliedFormat = function (lines, documentNode) {\n    var format = 'p';\n    // eslint-disable-next-line\n    var configKey = Object.keys(this.syntax);\n    var keys = Object.keys(this.syntax);\n    var direction = this.parent.element.selectionDirection;\n    var checkLine = direction === 'backward' ? lines[0].text : lines[lines.length - 1].text;\n    for (var i = 0; !documentNode && i < keys.length; i++) {\n      if (keys[i] !== 'pre' && this.selection.isStartWith(checkLine, this.syntax[keys[i]])) {\n        format = keys[i];\n        break;\n      } else if (keys[i] === 'pre') {\n        var parentLines = this.selection.getAllParents(this.parent.element.value);\n        var firstPrevText = parentLines[lines[0].line - 1];\n        var lastNextText = parentLines[lines.length + 1];\n        if (this.selection.isStartWith(firstPrevText, this.syntax[keys[i]].split('\\n')[0]) && this.selection.isStartWith(lastNextText, this.syntax[keys[i]].split('\\n')[0])) {\n          format = keys[i];\n          break;\n        }\n      }\n    }\n    return format;\n  };\n  MDFormats.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return MDFormats;\n}();\nexport { MDFormats };","map":{"version":3,"names":["extend","EVENTS","CONSTANT","MDFormats","options","selection","parent","markdownSelection","addEventListener","prototype","observer","on","FORMAT_TYPE","applyFormats","INTERNAL_DESTROY","destroy","removeEventListener","off","e","subCommand","toLowerCase","textArea","element","save","selectionStart","selectionEnd","parents","getSelectedParentPoints","isAppliedFormat","length","applyCodeBlock","cleanFormat","restore","start","end","addedLength","notify","selectionCommand","i","text","isStartWith","syntax","value","substr","j","getSelectedText","clearRegex","regex","configKey","Object","keys","replaceSpecialChar","trim","command","removeLength","isClear","removeText","RegExp","test","replace","k","event","parentLines","getAllParents","firstPrevText","line","lastNextText","pre","split","lines","substring","lastLine","cmd","getSelectedInlinePoints","startNo","lastIndexOf","endNo","indexOf","repStartText","replaceAt","repEndText","input","search","slice","callBack","requestType","selectedText","editorMode","documentNode","format","direction","selectionDirection","checkLine"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/plugin/formats.js"],"sourcesContent":["import { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport * as CONSTANT from './../../markdown-parser/base/constant';\n/**\n * MDFormats internal plugin\n *\n * @hidden\n\n */\nvar MDFormats = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {IMDFormats} options - specifies the formats\n     * @hidden\n\n     */\n    function MDFormats(options) {\n        extend(this, this, options, true);\n        this.selection = this.parent.markdownSelection;\n        this.addEventListener();\n    }\n    MDFormats.prototype.addEventListener = function () {\n        this.parent.observer.on(EVENTS.FORMAT_TYPE, this.applyFormats, this);\n        this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n    };\n    MDFormats.prototype.removeEventListener = function () {\n        this.parent.observer.off(EVENTS.FORMAT_TYPE, this.applyFormats);\n        this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n    };\n    MDFormats.prototype.applyFormats = function (e) {\n        e.subCommand = e.subCommand.toLowerCase();\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        if (this.isAppliedFormat(parents) === e.subCommand) {\n            if (e.subCommand === 'pre') {\n                if (parents.length > 1) {\n                    this.applyCodeBlock(textArea, e, parents);\n                }\n                else {\n                    return;\n                }\n            }\n            this.cleanFormat(textArea);\n            this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n            return;\n        }\n        if (e.subCommand === 'p') {\n            this.cleanFormat(textArea);\n            this.restore(textArea, textArea.selectionStart, textArea.selectionEnd, e);\n            return;\n        }\n        else {\n            if ((e.subCommand === 'pre' && parents.length !== 1) || e.subCommand !== 'pre') {\n                this.cleanFormat(textArea, e.subCommand);\n            }\n        }\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var addedLength = 0;\n        parents = this.selection.getSelectedParentPoints(textArea);\n        if (e.subCommand === 'pre') {\n            if (parents.length > 1) {\n                this.applyCodeBlock(textArea, e, parents);\n            }\n            else {\n                extend(e, e, { subCommand: 'InlineCode' }, true);\n                this.parent.observer.notify(CONSTANT.selectionCommand, e);\n            }\n            return;\n        }\n        for (var i = 0; i < parents.length; i++) {\n            if (parents[i].text !== '' && !this.selection.isStartWith(parents[i].text, '\\\\' + this.syntax[e.subCommand])) {\n                parents[i].text = this.syntax[e.subCommand] + parents[i].text;\n                textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' +\n                    textArea.value.substr(parents[i].end, textArea.value.length);\n                start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n                addedLength += this.syntax[e.subCommand].length;\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        parents[j].start = j !== 0 ?\n                            this.syntax[e.subCommand].length + parents[j].start : parents[j].start;\n                        parents[j].end = this.syntax[e.subCommand].length + parents[j].end;\n                    }\n                }\n            }\n            else if (parents[i].text === '' && i === 0) {\n                this.selection.save(start, end);\n                if (this.selection.getSelectedText(textArea).length === 0) {\n                    parents[i].text = this.syntax[e.subCommand];\n                    textArea.value = textArea.value.substr(0, parents[i].start) + this.syntax[e.subCommand] +\n                        textArea.value.substr(parents[i].end, textArea.value.length);\n                    start = i === 0 ? start + this.syntax[e.subCommand].length : start;\n                    addedLength += this.syntax[e.subCommand].length;\n                }\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n                        parents[j].end = 1 + parents[j].end;\n                    }\n                }\n            }\n        }\n        this.restore(textArea, start, end + addedLength, e);\n    };\n    MDFormats.prototype.clearRegex = function () {\n        var regex = '';\n        var configKey = Object.keys(this.syntax);\n        for (var j = 0; j < configKey.length && configKey[j] !== 'pre' && configKey[j] !== 'p'; j++) {\n            regex += regex === '' ? '^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')' :\n                '|^(' + this.selection.replaceSpecialChar(this.syntax[configKey[j]].trim()) + ')';\n        }\n        return regex;\n    };\n    MDFormats.prototype.cleanFormat = function (textArea, command) {\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var removeLength = 0;\n        if (this.selection.isClear(parents, this.clearRegex())) {\n            for (var i = 0; i < parents.length; i++) {\n                var configKey = Object.keys(this.syntax);\n                for (var j = 0; parents[i].text !== '' && j < configKey.length; j++) {\n                    var removeText = this.syntax[configKey[j]];\n                    if (configKey[j] === command) {\n                        continue;\n                    }\n                    // eslint-disable-next-line\n                    var regex = new RegExp('^(' + this.selection.replaceSpecialChar(removeText) + ')', 'gim');\n                    if (regex.test(parents[i].text)) {\n                        parents[i].text = parents[i].text.replace(regex, '');\n                        textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' +\n                            textArea.value.substr(parents[i].end, textArea.value.length);\n                        start = i === 0 ? (start - (removeText.length)) > 0 ? start - (removeText.length) : 0 : start;\n                        removeLength += removeText.length;\n                        if (parents.length !== 1) {\n                            for (var k = 0; k < parents.length; k++) {\n                                parents[k].start = k !== 0 ?\n                                    parents[k].start - removeText.length : parents[k].start;\n                                parents[k].end = parents[k].end - removeText.length;\n                            }\n                        }\n                        break;\n                    }\n                }\n                if (parents[i].text === '' && i === 0) {\n                    this.selection.save(start, end);\n                    if (parents.length !== 1) {\n                        for (var j = i; j < parents.length; j++) {\n                            parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n                            parents[j].end = 1 + parents[j].end;\n                        }\n                    }\n                }\n            }\n            this.restore(textArea, start, end - removeLength);\n        }\n    };\n    MDFormats.prototype.applyCodeBlock = function (textArea, event, parents) {\n        var command = event.subCommand;\n        var start = parents[0].start;\n        var end = parents[parents.length - 1].end;\n        var parentLines = this.selection.getAllParents(textArea.value);\n        var firstPrevText = parentLines[parents[0].line - 1];\n        var lastNextText = parentLines[(parents.length + 1) + 1];\n        // eslint-disable-next-line\n        var addedLength = 0;\n        if (!this.selection.isStartWith(firstPrevText, this.syntax.pre.split('\\n')[0]) &&\n            !this.selection.isStartWith(lastNextText, this.syntax.pre.split('\\n')[0])) {\n            var lines = textArea.value.substring(start, end).split('\\n');\n            var lastLine = lines[lines.length - 1] === '' ? '' : '\\n';\n            textArea.value = textArea.value.substr(0, start) + this.syntax[\"\" + command] + textArea.value.substring(start, end) +\n                lastLine + this.syntax[\"\" + command] +\n                textArea.value.substr(end, textArea.value.length);\n            start = this.selection.selectionStart + this.syntax[\"\" + command].length;\n            end = this.selection.selectionEnd + this.syntax[\"\" + command].length - 1;\n        }\n        else {\n            var cmd = this.syntax[\"\" + command];\n            var selection = this.parent.markdownSelection.getSelectedInlinePoints(textArea);\n            var startNo = textArea.value.substr(0, textArea.selectionStart).lastIndexOf(cmd);\n            var endNo = textArea.value.substr(textArea.selectionEnd, textArea.selectionEnd).indexOf(cmd);\n            endNo = endNo + selection.end;\n            var repStartText = this.replaceAt(textArea.value.substr(0, selection.start), cmd, '', startNo, selection.start);\n            var repEndText = this.replaceAt(textArea.value.substr(selection.end, textArea.value.length), cmd, '', 0, endNo);\n            textArea.value = repStartText + selection.text + repEndText;\n            start = this.selection.selectionStart - cmd.length;\n            end = this.selection.selectionEnd - cmd.length;\n        }\n        this.restore(textArea, start, end, event);\n    };\n    MDFormats.prototype.replaceAt = function (input, search, replace, start, end) {\n        return input.slice(0, start)\n            + input.slice(start, end).replace(search, replace)\n            + input.slice(end);\n    };\n    MDFormats.prototype.restore = function (textArea, start, end, event) {\n        this.selection.save(start, end);\n        this.selection.restore(textArea);\n        if (event && event.callBack) {\n            event.callBack({\n                requestType: event.subCommand,\n                selectedText: this.selection.getSelectedText(textArea),\n                editorMode: 'Markdown',\n                event: event.event\n            });\n        }\n    };\n    MDFormats.prototype.isAppliedFormat = function (lines, documentNode) {\n        var format = 'p';\n        // eslint-disable-next-line\n        var configKey = Object.keys(this.syntax);\n        var keys = Object.keys(this.syntax);\n        var direction = this.parent.element.selectionDirection;\n        var checkLine = direction === 'backward' ? lines[0].text : lines[lines.length - 1].text;\n        for (var i = 0; !documentNode && i < keys.length; i++) {\n            if (keys[i] !== 'pre' && this.selection.isStartWith(checkLine, this.syntax[keys[i]])) {\n                format = keys[i];\n                break;\n            }\n            else if (keys[i] === 'pre') {\n                var parentLines = this.selection.getAllParents(this.parent.element.value);\n                var firstPrevText = parentLines[lines[0].line - 1];\n                var lastNextText = parentLines[lines.length + 1];\n                if (this.selection.isStartWith(firstPrevText, this.syntax[keys[i]].split('\\n')[0]) &&\n                    this.selection.isStartWith(lastNextText, this.syntax[keys[i]].split('\\n')[0])) {\n                    format = keys[i];\n                    break;\n                }\n            }\n        }\n        return format;\n    };\n    MDFormats.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MDFormats;\n}());\nexport { MDFormats };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}