{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"gantt-chart\"\n};\nconst _hoisted_2 = {\n  class: \"task-rows\"\n};\nexport function render(_ctx, _cache) {\n  const _component_timeline = _resolveComponent(\"timeline\");\n  const _component_task_row = _resolveComponent(\"task-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_timeline, {\n    dates: _ctx.dates\n  }, null, 8 /* PROPS */, [\"dates\"]), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.tasks, task => {\n    return _openBlock(), _createBlock(_component_task_row, {\n      key: task.id,\n      task: task,\n      dates: _ctx.dates\n    }, null, 8 /* PROPS */, [\"task\", \"dates\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_timeline","dates","_ctx","_createElementVNode","_hoisted_2","_Fragment","_renderList","tasks","task","_createBlock","_component_task_row","key","id"],"sources":["/var/www/vue/vue-gantt-chart/src/components/GanttChart.vue"],"sourcesContent":["<template>\n  <div class=\"gantt-chart\">\n    <timeline :dates=\"dates\" />\n    <div class=\"task-rows\">\n      <task-row\n        v-for=\"task in tasks\"\n        :key=\"task.id\"\n        :task=\"task\"\n        :dates=\"dates\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport Timeline from \"./Timeline.vue\";\nimport TaskRow from \"./TaskRow.vue\";\n\nexport default {\n  name:'GanttChart'\n  components: { Timeline, TaskRow },\n  data() {\n    return {\n      dates: this.generateDates(\"2024-12-01\", \"2024-12-31\"), // Start and end dates\n      tasks: [\n        { id: 1, name: \"Task 1\", start: \"2024-12-05\", end: \"2024-12-10\" },\n        { id: 2, name: \"Task 2\", start: \"2024-12-08\", end: \"2024-12-15\" },\n        // Add more tasks as needed\n      ],\n    };\n  },\n  methods: {\n    generateDates(start, end) {\n      const dates = [];\n      const startDate = new Date(start);\n      const endDate = new Date(end);\n      while (startDate <= endDate) {\n        dates.push(new Date(startDate));\n        startDate.setDate(startDate.getDate() + 1);\n      }\n      return dates;\n    },\n  },\n};\n</script>\n\n<style>\n.gantt-chart {\n  display: flex;\n  flex-direction: column;\n}\n.task-rows {\n  display: flex;\n  flex-direction: column;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAW;;;;uBAFxBC,mBAAA,CAUM,OAVNC,UAUM,GATJC,YAAA,CAA2BC,mBAAA;IAAhBC,KAAK,EAAEC,IAAA,CAAAD;EAAK,oCACvBE,mBAAA,CAOM,OAPNC,UAOM,I,kBANJP,mBAAA,CAKEQ,SAAA,QATRC,WAAA,CAKuBJ,IAAA,CAAAK,KAAK,EAAbC,IAAI;yBADbC,YAAA,CAKEC,mBAAA;MAHCC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZJ,IAAI,EAAEA,IAAI;MACVP,KAAK,EAAEC,IAAA,CAAAD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}