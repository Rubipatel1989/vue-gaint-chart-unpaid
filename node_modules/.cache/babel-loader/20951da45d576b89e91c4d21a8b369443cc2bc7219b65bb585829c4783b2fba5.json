{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as CONSTANT from './../base/constant';\nimport { append, detach, createElement, isNullOrUndefined as isNOU, closest } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { selfClosingTags } from '../../common/config';\nimport { getLastTextNode } from '../../common/util';\nimport { TableSelection } from './table-selection';\nexport var markerClassName = {\n  startSelection: 'e-editor-select-start',\n  endSelection: 'e-editor-select-end'\n};\n/**\n * DOMNode internal plugin\n *\n * @hidden\n\n */\nvar DOMNode = /** @class */function () {\n  /**\n   * Constructor for creating the DOMNode plugin\n   *\n   * @param {Element} parent - specifies the parent element\n   * @param {Document} currentDocument - specifies the current document.\n   * @hidden\n    */\n  function DOMNode(parent, currentDocument) {\n    this.parent = parent;\n    this.nodeSelection = new NodeSelection(parent);\n    this.currentDocument = currentDocument;\n    this.tableSelection = new TableSelection(parent, currentDocument);\n  }\n  /**\n   * contents method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {void}\n   * @hidden\n    */\n  DOMNode.prototype.contents = function (element) {\n    return element && 'IFRAME' !== element.tagName ? Array.prototype.slice.call(element.childNodes || []) : [];\n  };\n  /**\n   * isBlockNode method\n   *\n   * @param {Element} element - specifies the node element.\n   * @returns {boolean} - sepcifies the boolean value\n   * @hidden\n    */\n  DOMNode.prototype.isBlockNode = function (element) {\n    return !!element && element.nodeType === Node.ELEMENT_NODE && CONSTANT.BLOCK_TAGS.indexOf(element.tagName.toLowerCase()) >= 0;\n  };\n  /**\n   * isLink method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {boolean} -  specifies the boolean value\n   * @hidden\n    */\n  DOMNode.prototype.isLink = function (element) {\n    return !!element && element.nodeType === Node.ELEMENT_NODE && 'a' === element.tagName.toLowerCase();\n  };\n  /**\n   * blockParentNode method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {Element} - returns the element value\n   * @hidden\n    */\n  DOMNode.prototype.blockParentNode = function (element) {\n    for (; element && element.parentNode !== this.parent && (!element.parentNode || !this.hasClass(element.parentNode, 'e-node-inner')); null) {\n      element = element.parentNode;\n      if (this.isBlockNode(element)) {\n        return element;\n      }\n    }\n    return element;\n  };\n  /**\n   * rawAttributes method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {string} - returns the string value\n   * @hidden\n    */\n  DOMNode.prototype.rawAttributes = function (element) {\n    var rawAttr = {};\n    var attributes = element.attributes;\n    if (attributes.length > 0) {\n      for (var d = 0; d < attributes.length; d++) {\n        var e = attributes[d];\n        rawAttr[e.nodeName] = e.value;\n      }\n    }\n    return rawAttr;\n  };\n  /**\n   * attributes method\n   *\n   * @param {Element} element - sepcifies the element.\n   * @returns {string} - returns the string value.\n   * @hidden\n    */\n  DOMNode.prototype.attributes = function (element) {\n    if (!element) {\n      return '';\n    }\n    var attr = '';\n    var rawAttr = this.rawAttributes(element);\n    var orderRawAttr = Object.keys(rawAttr).sort();\n    for (var e = 0; e < orderRawAttr.length; e++) {\n      var attrKey = orderRawAttr[e];\n      var attrValue = rawAttr[\"\" + attrKey];\n      /* eslint-disable */\n      if (attrValue.indexOf(\"'\") < 0 && attrValue.indexOf('\"') >= 0) {\n        attr += ' ' + attrKey + \"='\" + attrValue + \"'\";\n      } else if (attrValue.indexOf('\"') >= 0 && attrValue.indexOf(\"'\") >= 0) {\n        /* eslint-enable */\n        attrValue = attrValue.replace(/\"/g, '&quot;');\n        attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n      } else {\n        attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n      }\n    }\n    return attr;\n  };\n  /**\n   * clearAttributes method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {void}\n   * @hidden\n    */\n  DOMNode.prototype.clearAttributes = function (element) {\n    for (var attr = element.attributes, c = attr.length - 1; c >= 0; c--) {\n      var key = attr[c];\n      element.removeAttribute(key.nodeName);\n    }\n  };\n  /**\n   * openTagString method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {string} - returns the string\n   * @hidden\n    */\n  DOMNode.prototype.openTagString = function (element) {\n    return '<' + element.tagName.toLowerCase() + this.attributes(element) + '>';\n  };\n  /**\n   * closeTagString method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {string} - returns the string value\n   * @hidden\n    */\n  DOMNode.prototype.closeTagString = function (element) {\n    return '</' + element.tagName.toLowerCase() + '>';\n  };\n  /**\n   * createTagString method\n   *\n   * @param {string} tagName - specifies the tag name\n   * @param {Element} relativeElement - specifies the relative element\n   * @param {string} innerHTML - specifies the string value\n   * @returns {string} - returns the string value.\n   * @hidden\n    */\n  DOMNode.prototype.createTagString = function (tagName, relativeElement, innerHTML) {\n    return '<' + tagName.toLowerCase() + this.attributes(relativeElement) + '>' + innerHTML + '</' + tagName.toLowerCase() + '>';\n  };\n  /**\n   * isList method\n   *\n   * @param {Element} element - specifes the element.\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n  DOMNode.prototype.isList = function (element) {\n    return !!element && ['UL', 'OL'].indexOf(element.tagName) >= 0;\n  };\n  /**\n   * isElement method\n   *\n   * @param {Element} element - specifes the element.\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n  DOMNode.prototype.isElement = function (element) {\n    return element === this.parent;\n  };\n  /**\n   * isEditable method\n   *\n   * @param {Element} element - specifes the element.\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n  DOMNode.prototype.isEditable = function (element) {\n    return (!element.getAttribute || element.getAttribute('contenteditable') === 'true') && ['STYLE', 'SCRIPT'].indexOf(element.tagName) < 0;\n  };\n  /**\n   * hasClass method\n   *\n   * @param {Element} element - specifes the element.\n   * @param {string} className - specifies the class name value\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n  DOMNode.prototype.hasClass = function (element, className) {\n    return element && element.classList && element.classList.contains(className);\n  };\n  /**\n   * replaceWith method\n   *\n   * @param {Element} element - specifes the element.\n   * @param {string} value - specifies the string value\n   * @returns {void}\n   * @hidden\n    */\n  DOMNode.prototype.replaceWith = function (element, value) {\n    var parentNode = element.parentNode;\n    parentNode.insertBefore(this.parseHTMLFragment(value), element);\n    detach(element);\n  };\n  /**\n   * parseHTMLFragment method\n   *\n   * @param {string} value - specifies the string value\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n  DOMNode.prototype.parseHTMLFragment = function (value) {\n    /* eslint-disable */\n    var temp = createElement('template');\n    temp.innerHTML = value;\n    if (temp.content instanceof DocumentFragment) {\n      return temp.content;\n    } else {\n      return document.createRange().createContextualFragment(value);\n    }\n    /* eslint-enable */\n  };\n  /**\n   * wrap method\n   *\n   * @param {Element} element - specifies the element\n   * @param {Element} wrapper - specifies the element.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n  DOMNode.prototype.wrap = function (element, wrapper) {\n    element.parentNode.insertBefore(wrapper, element);\n    wrapper = element.previousSibling;\n    wrapper.appendChild(element);\n    return wrapper;\n  };\n  /**\n   * insertAfter method\n   *\n   * @param {Element} newNode - specifies the new node element\n   * @param {Element} referenceNode - specifies the referenece node\n   * @returns {void}\n   * @hidden\n    */\n  DOMNode.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  /**\n   * wrapInner method\n   *\n   * @param {Element} parent - specifies the parent element.\n   * @param {Element} wrapper - specifies the wrapper element.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n  DOMNode.prototype.wrapInner = function (parent, wrapper) {\n    parent.appendChild(wrapper);\n    wrapper = parent.querySelector('.e-rte-wrap-inner');\n    wrapper.classList.remove('e-rte-wrap-inner');\n    if (wrapper.classList.length === 0) {\n      wrapper.removeAttribute('class');\n    }\n    while (parent.firstChild !== wrapper) {\n      wrapper.appendChild(parent.firstChild);\n    }\n    return wrapper;\n  };\n  /**\n   * unWrap method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {Element} - returns the element.\n   * @hidden\n    */\n  DOMNode.prototype.unWrap = function (element) {\n    var parent = element.parentNode;\n    var unWrapNode = [];\n    while (element.firstChild && element.textContent !== ' ') {\n      unWrapNode.push(element.firstChild);\n      parent.insertBefore(element.firstChild, element);\n    }\n    unWrapNode = unWrapNode.length > 0 ? unWrapNode : [element.parentNode];\n    parent.removeChild(element);\n    return unWrapNode;\n  };\n  /**\n   * getSelectedNode method\n   *\n   * @param {Element} element - specifies the element\n   * @param {number} index - specifies the index value.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n  DOMNode.prototype.getSelectedNode = function (element, index) {\n    if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 && element.childNodes[index - 1] && element.childNodes[index - 1].nodeType === Node.ELEMENT_NODE && (element.childNodes[index - 1].classList.contains(markerClassName.startSelection) || element.childNodes[index - 1].classList.contains(markerClassName.endSelection))) {\n      element = element.childNodes[index - 1];\n    } else if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 && element.childNodes[index]) {\n      element = element.childNodes[index];\n    }\n    if (element.nodeType === Node.TEXT_NODE) {\n      element = element.parentNode;\n    }\n    return element;\n  };\n  /**\n   * nodeFinds method\n   *\n   * @param {Element} element - specifies the element.\n   * @param {Element[]} elements - specifies the array of elements\n   * @returns {Element[]} - returnts the array elements\n   * @hidden\n    */\n  DOMNode.prototype.nodeFinds = function (element, elements) {\n    var existNodes = [];\n    for (var i = 0; i < elements.length; i++) {\n      if (element.contains(elements[i]) && element !== elements[i]) {\n        existNodes.push(elements[i]);\n      }\n    }\n    return existNodes;\n  };\n  /**\n   * isEditorArea method\n   *\n   * @returns {boolean} - returns the boolean value\n   * @hidden\n    */\n  DOMNode.prototype.isEditorArea = function () {\n    var range = this.getRangePoint(0);\n    var element;\n    for (element = range.commonAncestorContainer; element && !this.isElement(element); null) {\n      element = element.parentNode;\n    }\n    return !!this.isElement(element);\n  };\n  /**\n   * getRangePoint method\n   *\n   * @param {number} point - specifies the number value.\n   * @returns {Range} - returns the range.\n   * @hidden\n    */\n  DOMNode.prototype.getRangePoint = function (point) {\n    var selection = this.getSelection();\n    var ranges = [];\n    if (selection && selection.getRangeAt && selection.rangeCount) {\n      ranges = [];\n      for (var f = 0; f < selection.rangeCount; f++) {\n        ranges.push(selection.getRangeAt(f));\n      }\n    } else {\n      ranges = [this.currentDocument.createRange()];\n    }\n    return 'undefined' !== typeof point ? ranges[point] : ranges;\n  };\n  DOMNode.prototype.getSelection = function () {\n    return this.nodeSelection.get(this.currentDocument);\n  };\n  /**\n   * getPreviousNode method\n   *\n   * @param {Element} element - specifies the element\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n  DOMNode.prototype.getPreviousNode = function (element) {\n    element = element.previousElementSibling;\n    for (; element && element.textContent === '\\n'; null) {\n      element = element.previousElementSibling;\n    }\n    return element;\n  };\n  /**\n   * encode method\n   *\n   * @param {string} value - specifies the string value\n   * @returns {string} - specifies the string value\n   * @hidden\n    */\n  DOMNode.prototype.encode = function (value) {\n    var divNode = document.createElement('div');\n    divNode.innerText = value;\n    // eslint-disable-next-line\n    return divNode.innerHTML.replace(/<br\\s*[\\/]?>/gi, '\\n');\n  };\n  /**\n   * saveMarker method\n   *\n   * @param {NodeSelection} save - specifies the node selection,\n   * @returns {NodeSelection} - returns the value\n   * @hidden\n    */\n  DOMNode.prototype.saveMarker = function (save) {\n    var start = this.parent.querySelector('.' + markerClassName.startSelection);\n    var end = this.parent.querySelector('.' + markerClassName.endSelection);\n    var startTextNode;\n    var endTextNode;\n    if (this.hasClass(start, markerClassName.startSelection) && start.classList.length > 1) {\n      var replace = this.createTagString(CONSTANT.DEFAULT_TAG, start, this.encode(start.textContent));\n      this.replaceWith(start, replace);\n      start = this.parent.querySelector('.' + markerClassName.startSelection);\n      start.classList.remove(markerClassName.startSelection);\n      startTextNode = start.childNodes[0];\n    } else {\n      startTextNode = this.unWrap(start)[0];\n    }\n    if (this.hasClass(end, markerClassName.endSelection) && end.classList.length > 1) {\n      var replace = this.createTagString(CONSTANT.DEFAULT_TAG, end, this.encode(end.textContent));\n      this.replaceWith(end, replace);\n      end = this.parent.querySelector('.' + markerClassName.endSelection);\n      end.classList.remove(markerClassName.endSelection);\n      endTextNode = end.childNodes[0];\n    } else {\n      endTextNode = end ? this.unWrap(end)[0] : startTextNode;\n    }\n    save.startContainer = save.getNodeArray(startTextNode, true);\n    save.endContainer = save.getNodeArray(endTextNode, false);\n    return save;\n  };\n  DOMNode.prototype.marker = function (className, textContent) {\n    return '<span class=\"' + className + '\">' + textContent + '</span>';\n  };\n  /**\n   * setMarker method\n   *\n   * @param {NodeSelection} save - specifies the node selection.\n   * @returns {void}\n   * @hidden\n    */\n  DOMNode.prototype.setMarker = function (save) {\n    var range = save.range;\n    var startChildNodes = range.startContainer.childNodes;\n    var isTableStart = startChildNodes.length > 1 && startChildNodes[0].nodeName === 'TABLE';\n    var isImgOnlySelected = startChildNodes.length > 1 && startChildNodes[0].nodeName === 'IMAGE' && range.endOffset === 1 && range.endContainer.nodeName === '#text' && range.endContainer.textContent.length === 0;\n    var start = (isTableStart ? getLastTextNode(startChildNodes[range.startOffset + 1]) : startChildNodes[range.startOffset > 0 ? range.startOffset - 1 : range.startOffset]) || range.startContainer;\n    var end = range.endContainer.childNodes[range.endOffset > 0 ? isImgOnlySelected ? range.endOffset : range.endOffset - 1 : range.endOffset] || range.endContainer;\n    if (start.nodeType === Node.ELEMENT_NODE && end.nodeType === Node.ELEMENT_NODE && (start.contains(end) || end.contains(start))) {\n      var existNode = start.contains(end) ? start : end;\n      var isElement = existNode.nodeType !== Node.TEXT_NODE;\n      if (isElement) {\n        var nodes = [];\n        var textNodes = [];\n        for (var node = existNode; existNode.contains(node); null) {\n          if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n            nodes.push(node);\n            node = node.childNodes[0];\n          } else if (node.nextSibling) {\n            node = node.nextSibling;\n          } else if (node.parentNode) {\n            node = node.parentNode;\n            nodes.push(node);\n          }\n          if (textNodes.indexOf(node) < 0 && (node.nodeType === Node.TEXT_NODE || CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0 && (node.tagName === 'BR' || node.tagName === 'IMG'))) {\n            textNodes.push(node);\n          }\n        }\n        if (textNodes.length) {\n          start = start.contains(end) ? textNodes[0] : start;\n          end = textNodes[textNodes.length - 1];\n        }\n      }\n    }\n    if (start !== end) {\n      if (start.nodeType !== Node.TEXT_NODE && (start.tagName === 'BR' && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(start.parentNode.tagName.toLocaleLowerCase()) >= 0 || start.tagName === 'IMG')) {\n        this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n        var markerStart = range.startContainer.querySelector('.' + markerClassName.startSelection);\n        markerStart.appendChild(start);\n      } else {\n        if (start.nodeType !== 3 && start.nodeName !== '#text' && start.nodeName !== 'BR') {\n          var marker = this.marker(markerClassName.startSelection, '');\n          append([this.parseHTMLFragment(marker)], start);\n        } else {\n          this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n        }\n      }\n      if (end.nodeType !== Node.TEXT_NODE && end.tagName === 'BR' && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(end.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n        this.replaceWith(end, this.marker(markerClassName.endSelection, this.encode(end.textContent)));\n        var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n        markerEnd.appendChild(end);\n      } else {\n        this.ensureSelfClosingTag(end, markerClassName.endSelection, range);\n      }\n    } else {\n      this.ensureSelfClosingTag(start, markerClassName.startSelection, range);\n    }\n  };\n  /**\n   * ensureSelfClosingTag method\n   *\n   * @param {Element} start - specifies the element.\n   * @param {string} className - specifes the class name string value\n   * @param {Range} range - specifies the range value\n   * @returns {void}\n   * @hidden\n    */\n  DOMNode.prototype.ensureSelfClosingTag = function (start, className, range) {\n    var isTable = false;\n    if (start.nodeType === 3) {\n      this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n    } else if (start.tagName === 'BR') {\n      this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n      var markerStart = range.startContainer.querySelector('.' + className);\n      if (markerStart) {\n        markerStart.parentElement.appendChild(start);\n      }\n    } else {\n      var tagName = !isNOU(start.parentElement) ? start.parentElement.tagName.toLocaleLowerCase() : '';\n      if (start.tagName === 'IMG' && tagName !== 'p' && tagName !== 'div') {\n        var parNode = document.createElement('p');\n        start.parentElement.insertBefore(parNode, start);\n        parNode.appendChild(start);\n        start = parNode.children[0];\n      }\n      if (start.tagName === 'TABLE') {\n        isTable = true;\n        if (start.textContent === '') {\n          var tdNode = start.querySelectorAll('td');\n          start = tdNode[tdNode.length - 1];\n          start = !isNOU(start.childNodes[0]) ? start.childNodes[0] : start;\n        } else {\n          var lastNode = start.lastChild;\n          while (lastNode.nodeType !== 3 && lastNode.nodeName !== '#text' && lastNode.nodeName !== 'BR') {\n            lastNode = lastNode.lastChild;\n          }\n          start = lastNode;\n        }\n      }\n      for (var i = 0; i < selfClosingTags.length; i++) {\n        start = start.tagName === selfClosingTags[i] && !isTable ? start.parentNode : start;\n      }\n      if (start.nodeType === 3 && start.nodeName === '#text') {\n        this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n      } else if (start.nodeName === 'BR') {\n        this.replaceWith(start, this.marker(markerClassName.endSelection, this.encode(start.textContent)));\n        var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n        markerEnd.appendChild(start);\n      } else {\n        var marker = this.marker(className, '');\n        append([this.parseHTMLFragment(marker)], start);\n      }\n    }\n  };\n  /**\n   * createTempNode method\n   *\n   * @param {Element} element - specifies the element.\n   * @returns {Element} - returns the element\n   * @hidden\n    */\n  DOMNode.prototype.createTempNode = function (element) {\n    var textContent = element.textContent;\n    if (element.tagName === 'BR') {\n      var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n      var node = element.parentNode;\n      if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.tagName.toLocaleLowerCase()) >= 0) {\n        element = this.wrap(element, this.parseHTMLFragment(wrapper));\n      }\n    } else if (element.nodeType !== Node.TEXT_NODE && (element.classList.contains(markerClassName.startSelection) || element.classList.contains(markerClassName.endSelection)) || textContent.replace(/\\n/g, '').replace(/(^ *)|( *$)/g, '').length > 0 || textContent.length && textContent.indexOf('\\n') < 0) {\n      var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n      var target = element;\n      element = this.wrap(element, this.parseHTMLFragment(wrapper));\n      var ignoreBr = target.nodeType === Node.ELEMENT_NODE && target.firstChild && target.firstChild.nodeName === 'BR' && (target.classList.contains(markerClassName.startSelection) || target.classList.contains(markerClassName.endSelection));\n      if (!ignoreBr && element.nextElementSibling && element.nextElementSibling.tagName === 'BR') {\n        element.appendChild(element.nextElementSibling);\n      }\n    }\n    return element;\n  };\n  /**\n   * getImageTagInSelection method\n   *\n   * @returns {void}\n   * @hidden\n    */\n  DOMNode.prototype.getImageTagInSelection = function () {\n    var selection = this.getSelection();\n    if (this.isEditorArea() && selection.rangeCount) {\n      return selection.focusNode.querySelectorAll('img');\n    }\n    return null;\n  };\n  /**\n   * Method to wrap the inline and text node with block node.\n   *\n   * @param {HTMLElement} node - specifies the element sent to wrap the node around it with block nodes.\n   * @param {string} wrapperElement - specifies which block nodes to wrap around.\n   * @returns {HTMLElement} - returns the wrapped element.\n   * @hidden\n    */\n  DOMNode.prototype.gatherElementsAround = function (node, wrapperElement) {\n    var newWrapElem = createElement(wrapperElement);\n    // Insert the new div element before the current node.\n    var currentNode = node.previousSibling;\n    var currentNodeParent = node.parentElement;\n    if (currentNodeParent.className === 'e-editor-select-start') {\n      currentNodeParent.parentNode.insertBefore(newWrapElem, currentNodeParent);\n    } else if (currentNodeParent) {\n      currentNodeParent.insertBefore(newWrapElem, node);\n    }\n    var i = 0;\n    while (currentNode !== null && currentNode.nodeName !== 'BR' && !this.isBlockNode(currentNode)) {\n      var prevSibling = currentNode.previousSibling;\n      if (currentNode.nodeType === 3 || currentNode.nodeType === 1) {\n        if (i === 0) {\n          newWrapElem.appendChild(currentNode);\n        } else {\n          newWrapElem.insertBefore(currentNode, newWrapElem.firstChild);\n        }\n      }\n      currentNode = prevSibling;\n      i++;\n    }\n    // Add the current node to the new div\n    newWrapElem.appendChild(node);\n    // Gather text and inline elements after the currentNode\n    currentNode = newWrapElem.nextSibling ? newWrapElem.nextSibling : newWrapElem.parentElement.nextSibling;\n    while (currentNode !== null && currentNode.nodeName !== 'BR' && !this.isBlockNode(currentNode)) {\n      var nextSibling = currentNode.nextSibling ? currentNode.nextSibling : currentNode.parentElement.nextSibling;\n      if (currentNode.nodeType === 3 || currentNode.nodeType === 1) {\n        newWrapElem.appendChild(currentNode);\n      }\n      currentNode = nextSibling;\n    }\n    return newWrapElem;\n  };\n  /**\n   * Method to convert all the inline nodes between the selection to block nodes.\n   *\n   * @param {Node[]} selectedNodes - specifies the nodes of the start and end selection.\n   * @param {boolean} fromList - specifies if the method is called from list module.\n   * @returns {Node[]} - returns the selected list of elements as block nodes.\n   * @hidden\n    */\n  DOMNode.prototype.convertToBlockNodes = function (selectedNodes, fromList) {\n    if (selectedNodes.length > 1) {\n      var i = 0;\n      var currentSelectedNode = selectedNodes[0];\n      while (!isNOU(currentSelectedNode)) {\n        if (currentSelectedNode.nodeName === 'BR') {\n          var nextNode = currentSelectedNode.nextSibling;\n          detach(currentSelectedNode);\n          currentSelectedNode = nextNode;\n        }\n        if (!isNOU(currentSelectedNode)) {\n          if (fromList) {\n            selectedNodes[i] = currentSelectedNode.nodeName === 'LI' || this.isBlockNode(currentSelectedNode) ? currentSelectedNode : this.gatherElementsAround(currentSelectedNode, fromList ? 'p' : 'div');\n          } else {\n            selectedNodes[i] = !this.isBlockNode(selectedNodes[i]) ? this.gatherElementsAround(currentSelectedNode, fromList ? 'p' : 'div') : selectedNodes[i];\n          }\n          var currentProcessNode = selectedNodes[i].nodeName === 'LI' ? selectedNodes[i].parentElement : selectedNodes[i];\n          var currentElementCheckNode = currentProcessNode.nodeName === '#text' ? currentProcessNode.parentElement : currentProcessNode;\n          currentSelectedNode = !isNOU(currentElementCheckNode.querySelector('.e-editor-select-end')) || !isNOU(closest(currentSelectedNode, '.e-editor-select-end')) ? null : currentProcessNode.nextSibling;\n          if (currentSelectedNode === null && !isNOU(currentProcessNode.nextSibling) && currentProcessNode.nextSibling.nodeName === 'BR') {\n            detach(currentProcessNode.nextSibling);\n          }\n        }\n        i++;\n      }\n    } else {\n      if (!this.isBlockNode(selectedNodes[0])) {\n        selectedNodes[0] = this.gatherElementsAround(selectedNodes[0], fromList ? 'p' : 'div');\n        if (!isNOU(selectedNodes[0].nextSibling) && selectedNodes[0].nextSibling.nodeName === 'BR') {\n          detach(selectedNodes[0].nextSibling);\n        }\n      }\n    }\n    return selectedNodes;\n  };\n  /**\n   * blockNodes method\n   *\n   * @param {boolean} action - Optional Boolean that specifies the action is whether performed.\n   * @returns {Node[]} - returns the node array values\n   * @hidden\n    */\n  DOMNode.prototype.blockNodes = function (action) {\n    var collectionNodes = [];\n    var selection = this.getSelection();\n    if (this.isEditorArea() && selection.rangeCount) {\n      var ranges = this.getRangePoint();\n      for (var j = 0; j < ranges.length; j++) {\n        var parentNode = void 0;\n        var range = ranges[j];\n        var startNode = this.getSelectedNode(range.startContainer, range.startOffset);\n        var endNode = this.getSelectedNode(range.endContainer, range.endOffset);\n        if (this.isBlockNode(startNode) && collectionNodes.indexOf(startNode) < 0) {\n          collectionNodes.push(startNode);\n        }\n        parentNode = this.blockParentNode(startNode);\n        var endParentNode = this.blockParentNode(endNode);\n        if (parentNode && collectionNodes.indexOf(parentNode) < 0) {\n          if (!isNOU(action) && action) {\n            if (range.commonAncestorContainer.nodeName === 'TD' || parentNode.nodeName === 'TD' || endParentNode.nodeName === 'TD') {\n              var processedNodes = this.getPreBlockNodeCollection(range);\n              if (processedNodes.length > 1) {\n                this.wrapWithBlockNode(processedNodes, collectionNodes);\n              } else if (processedNodes.length > 0) {\n                if (startNode !== endNode && startNode.nodeName !== 'BR') {\n                  collectionNodes.push(this.createTempNode(startNode));\n                } else if (startNode === endNode && startNode.nodeName === 'SPAN' && (startNode.classList.contains(markerClassName.startSelection) || startNode.classList.contains(markerClassName.endSelection))) {\n                  collectionNodes.push(this.createTempNode(startNode));\n                }\n              }\n            } else {\n              collectionNodes.push(parentNode);\n            }\n          } else {\n            if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(parentNode.tagName.toLocaleLowerCase()) >= 0 && (startNode.tagName === 'BR' || startNode.nodeType === Node.TEXT_NODE || startNode.classList.contains(markerClassName.startSelection) || startNode.classList.contains(markerClassName.endSelection))) {\n              var tempNode = startNode.previousSibling && startNode.previousSibling.nodeType === Node.TEXT_NODE ? startNode.previousSibling : startNode;\n              if (!startNode.nextSibling && !startNode.previousSibling && startNode.tagName === 'BR') {\n                collectionNodes.push(tempNode);\n              } else {\n                collectionNodes.push(this.createTempNode(tempNode));\n              }\n            } else {\n              collectionNodes.push(parentNode);\n            }\n          }\n        }\n        var nodes = [];\n        for (var node = startNode; node !== endNode && node !== this.parent; null) {\n          if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n            nodes.push(node);\n            node = node.childNodes[0];\n          } else if (node && node.nodeType !== 8 && (node.tagName === 'BR' || node.nodeType === Node.TEXT_NODE && node.textContent.trim() !== '' || node.nodeType !== Node.TEXT_NODE && (node.classList.contains(markerClassName.startSelection) || node.classList.contains(markerClassName.endSelection))) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n            node = this.createTempNode(node);\n          } else if (node.nextSibling && node.nextSibling.nodeType !== 8 && (node.nextSibling.tagName === 'BR' || node.nextSibling.nodeType === Node.TEXT_NODE || node.nextSibling.classList.contains(markerClassName.startSelection) || node.nextSibling.classList.contains(markerClassName.endSelection)) && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.nextSibling.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n            node = this.createTempNode(node.nextSibling);\n          } else if (node.nextSibling) {\n            node = node.nextSibling;\n          } else if (node.parentNode) {\n            node = node.parentNode;\n            nodes.push(node);\n          }\n          if (collectionNodes.indexOf(node) < 0 && node.nodeType === Node.ELEMENT_NODE && CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0 && (node.classList.contains(markerClassName.startSelection) || node.classList.contains(markerClassName.endSelection))) {\n            collectionNodes.push(this.createTempNode(node));\n          }\n          if (this.isBlockNode(node) && this.ignoreTableTag(node) && nodes.indexOf(node) < 0 && collectionNodes.indexOf(node) < 0 && (node !== endNode || range.endOffset > 0)) {\n            collectionNodes.push(node);\n          }\n          if (node.nodeName === 'IMG' && node.parentElement.contentEditable === 'true') {\n            collectionNodes.push(node);\n          }\n        }\n        parentNode = this.blockParentNode(endNode);\n        if (parentNode && this.ignoreTableTag(parentNode) && collectionNodes.indexOf(parentNode) < 0 && !isNOU(parentNode.previousElementSibling) && parentNode.previousElementSibling.tagName !== 'IMG') {\n          collectionNodes.push(parentNode);\n        }\n      }\n    }\n    for (var i = collectionNodes.length - 1; i > 0; i--) {\n      var nodes = this.nodeFinds(collectionNodes[i], collectionNodes);\n      if (nodes.length) {\n        var listNodes = collectionNodes[i].querySelectorAll('ul, ol');\n        if (collectionNodes[i].tagName === 'LI' && listNodes.length > 0) {\n          continue;\n        } else {\n          collectionNodes.splice(i, 1);\n        }\n      }\n    }\n    var tableBlockNodes = this.tableSelection.getBlockNodes();\n    if (tableBlockNodes.length > 0) {\n      return tableBlockNodes;\n    }\n    return collectionNodes;\n  };\n  DOMNode.prototype.ignoreTableTag = function (element) {\n    return !(CONSTANT.TABLE_BLOCK_TAGS.indexOf(element.tagName.toLocaleLowerCase()) >= 0);\n  };\n  DOMNode.prototype.getPreBlockNodeCollection = function (range) {\n    var startNode = this.getSelectedNode(range.startContainer, range.startOffset);\n    var endNode = this.getSelectedNode(range.endContainer, range.endOffset);\n    var nodes = [];\n    var rootNode = startNode.closest('td, th');\n    if (isNOU(rootNode)) {\n      return nodes;\n    }\n    var rootChildNode = Array.from(rootNode.childNodes);\n    var isContinue = true;\n    var processedStart = this.getClosestInlineParent(startNode, rootNode, true);\n    var processedEnd = this.getClosestInlineParent(endNode, rootNode, false);\n    for (var i = 0; i < rootChildNode.length; i++) {\n      var child = rootChildNode[i];\n      if (processedStart === processedEnd && child === processedStart) {\n        nodes.push(child);\n        isContinue = true;\n      } else if (child === processedStart) {\n        isContinue = false;\n      } else if (child === processedEnd) {\n        nodes.push(child); // Early Exit so Push the end node.\n        isContinue = true;\n      }\n      if (isContinue) {\n        continue;\n      } else {\n        nodes.push(child);\n      }\n    }\n    return nodes;\n  };\n  DOMNode.prototype.getClosestInlineParent = function (node, rootNode, isStart) {\n    // 1. If the node is a text node, return the node\n    // 2. If the node is a block node return block node\n    // 3. If the node is a inline node,\n    //      Traverse back untill the TD or TH node\n    //      Check if the the previous sibling , next sibling is a block node.\n    //      If yes return the inline node that is closest to the block node.\n    if (node.nodeType === Node.TEXT_NODE) {\n      return node;\n    }\n    if (this.isBlockNode(node)) {\n      return node;\n    }\n    var currentNode = node;\n    var rootFlag = false;\n    while (currentNode) {\n      var previousNode = currentNode;\n      if (rootFlag) {\n        if (this.isBlockNode(currentNode)) {\n          return previousNode;\n        }\n        if (isStart && currentNode.previousSibling) {\n          if (this.isBlockNode(currentNode.previousSibling) || currentNode.previousSibling.nodeName === 'BR') {\n            return previousNode;\n          } else {\n            currentNode = currentNode.previousSibling;\n          }\n        } else if (!isStart && currentNode.nextSibling) {\n          if (this.isBlockNode(currentNode.nextSibling) || currentNode.nextSibling.nodeName === 'BR') {\n            return previousNode;\n          } else {\n            currentNode = currentNode.nextSibling;\n          }\n        } else {\n          return currentNode;\n        }\n      } else {\n        currentNode = currentNode.parentElement;\n        if (currentNode === rootNode) {\n          currentNode = previousNode;\n          rootFlag = true;\n        }\n      }\n    }\n    return null;\n  };\n  DOMNode.prototype.wrapWithBlockNode = function (nodes, collectionNodes) {\n    var wrapperElement = createElement('p');\n    for (var i = 0; i < nodes.length; i++) {\n      var child = nodes[i];\n      if (child.nodeName === 'BR') {\n        child.parentNode.insertBefore(wrapperElement, child);\n        wrapperElement.appendChild(child);\n        if (wrapperElement.childNodes.length > 0) {\n          collectionNodes.push(wrapperElement);\n        }\n        wrapperElement = createElement('p');\n      } else {\n        if (!this.isBlockNode(child)) {\n          if (child.nodeName === '#text' && child.textContent.trim() === '') {\n            continue;\n          }\n          if (wrapperElement.childElementCount === 0) {\n            child.parentNode.insertBefore(wrapperElement, child);\n            wrapperElement.appendChild(child);\n          } else {\n            wrapperElement.appendChild(child);\n          }\n        } else {\n          collectionNodes.push(child);\n        }\n        // Use case when the BR is next sibling but the BR is not the part of selection.\n        if (i === nodes.length - 1 && wrapperElement.nextElementSibling && wrapperElement.querySelectorAll('br').length === 0 && wrapperElement.nextElementSibling.nodeName === 'BR') {\n          wrapperElement.appendChild(wrapperElement.nextElementSibling);\n        }\n      }\n    }\n    if (wrapperElement.childNodes.length > 0 && collectionNodes.indexOf(wrapperElement) < 0) {\n      collectionNodes.push(wrapperElement);\n    }\n  };\n  return DOMNode;\n}();\nexport { DOMNode };","map":{"version":3,"names":["CONSTANT","append","detach","createElement","isNullOrUndefined","isNOU","closest","NodeSelection","selfClosingTags","getLastTextNode","TableSelection","markerClassName","startSelection","endSelection","DOMNode","parent","currentDocument","nodeSelection","tableSelection","prototype","contents","element","tagName","Array","slice","call","childNodes","isBlockNode","nodeType","Node","ELEMENT_NODE","BLOCK_TAGS","indexOf","toLowerCase","isLink","blockParentNode","parentNode","hasClass","rawAttributes","rawAttr","attributes","length","d","e","nodeName","value","attr","orderRawAttr","Object","keys","sort","attrKey","attrValue","replace","clearAttributes","c","key","removeAttribute","openTagString","closeTagString","createTagString","relativeElement","innerHTML","isList","isElement","isEditable","getAttribute","className","classList","contains","replaceWith","insertBefore","parseHTMLFragment","temp","content","DocumentFragment","document","createRange","createContextualFragment","wrap","wrapper","previousSibling","appendChild","insertAfter","newNode","referenceNode","nextSibling","wrapInner","querySelector","remove","firstChild","unWrap","unWrapNode","textContent","push","removeChild","getSelectedNode","index","TEXT_NODE","nodeFinds","elements","existNodes","i","isEditorArea","range","getRangePoint","commonAncestorContainer","point","selection","getSelection","ranges","getRangeAt","rangeCount","f","get","getPreviousNode","previousElementSibling","encode","divNode","innerText","saveMarker","save","start","end","startTextNode","endTextNode","DEFAULT_TAG","startContainer","getNodeArray","endContainer","marker","setMarker","startChildNodes","isTableStart","isImgOnlySelected","endOffset","startOffset","existNode","nodes","textNodes","node","IGNORE_BLOCK_TAGS","toLocaleLowerCase","markerStart","markerEnd","ensureSelfClosingTag","isTable","parentElement","parNode","children","tdNode","querySelectorAll","lastNode","lastChild","createTempNode","target","ignoreBr","nextElementSibling","getImageTagInSelection","focusNode","gatherElementsAround","wrapperElement","newWrapElem","currentNode","currentNodeParent","prevSibling","convertToBlockNodes","selectedNodes","fromList","currentSelectedNode","nextNode","currentProcessNode","currentElementCheckNode","blockNodes","action","collectionNodes","j","startNode","endNode","endParentNode","processedNodes","getPreBlockNodeCollection","wrapWithBlockNode","tempNode","trim","ignoreTableTag","contentEditable","listNodes","splice","tableBlockNodes","getBlockNodes","TABLE_BLOCK_TAGS","rootNode","rootChildNode","from","isContinue","processedStart","getClosestInlineParent","processedEnd","child","isStart","rootFlag","previousNode","childElementCount"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/dom-node.js"],"sourcesContent":["import * as CONSTANT from './../base/constant';\nimport { append, detach, createElement, isNullOrUndefined as isNOU, closest } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { selfClosingTags } from '../../common/config';\nimport { getLastTextNode } from '../../common/util';\nimport { TableSelection } from './table-selection';\nexport var markerClassName = {\n    startSelection: 'e-editor-select-start',\n    endSelection: 'e-editor-select-end'\n};\n/**\n * DOMNode internal plugin\n *\n * @hidden\n\n */\nvar DOMNode = /** @class */ (function () {\n    /**\n     * Constructor for creating the DOMNode plugin\n     *\n     * @param {Element} parent - specifies the parent element\n     * @param {Document} currentDocument - specifies the current document.\n     * @hidden\n\n     */\n    function DOMNode(parent, currentDocument) {\n        this.parent = parent;\n        this.nodeSelection = new NodeSelection(parent);\n        this.currentDocument = currentDocument;\n        this.tableSelection = new TableSelection(parent, currentDocument);\n    }\n    /**\n     * contents method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.contents = function (element) {\n        return (element && 'IFRAME' !== element.tagName ? Array.prototype.slice.call(element.childNodes || []) : []);\n    };\n    /**\n     * isBlockNode method\n     *\n     * @param {Element} element - specifies the node element.\n     * @returns {boolean} - sepcifies the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isBlockNode = function (element) {\n        return (!!element && (element.nodeType === Node.ELEMENT_NODE && CONSTANT.BLOCK_TAGS.indexOf(element.tagName.toLowerCase()) >= 0));\n    };\n    /**\n     * isLink method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {boolean} -  specifies the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isLink = function (element) {\n        return (!!element && (element.nodeType === Node.ELEMENT_NODE && 'a' === element.tagName.toLowerCase()));\n    };\n    /**\n     * blockParentNode method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {Element} - returns the element value\n     * @hidden\n\n     */\n    DOMNode.prototype.blockParentNode = function (element) {\n        for (; element && element.parentNode !== this.parent && ((!element.parentNode ||\n            !this.hasClass(element.parentNode, 'e-node-inner'))); null) {\n            element = element.parentNode;\n            if (this.isBlockNode(element)) {\n                return element;\n            }\n        }\n        return element;\n    };\n    /**\n     * rawAttributes method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {string} - returns the string value\n     * @hidden\n\n     */\n    DOMNode.prototype.rawAttributes = function (element) {\n        var rawAttr = {};\n        var attributes = element.attributes;\n        if (attributes.length > 0) {\n            for (var d = 0; d < attributes.length; d++) {\n                var e = attributes[d];\n                rawAttr[e.nodeName] = e.value;\n            }\n        }\n        return rawAttr;\n    };\n    /**\n     * attributes method\n     *\n     * @param {Element} element - sepcifies the element.\n     * @returns {string} - returns the string value.\n     * @hidden\n\n     */\n    DOMNode.prototype.attributes = function (element) {\n        if (!element) {\n            return '';\n        }\n        var attr = '';\n        var rawAttr = this.rawAttributes(element);\n        var orderRawAttr = Object.keys(rawAttr).sort();\n        for (var e = 0; e < orderRawAttr.length; e++) {\n            var attrKey = orderRawAttr[e];\n            var attrValue = rawAttr[\"\" + attrKey];\n            /* eslint-disable */\n            if (attrValue.indexOf(\"'\") < 0 && attrValue.indexOf('\"') >= 0) {\n                attr += ' ' + attrKey + \"='\" + attrValue + \"'\";\n            }\n            else if (attrValue.indexOf('\"') >= 0 && attrValue.indexOf(\"'\") >= 0) {\n                /* eslint-enable */\n                attrValue = attrValue.replace(/\"/g, '&quot;');\n                attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n            }\n            else {\n                attr += ' ' + attrKey + '=\"' + attrValue + '\"';\n            }\n        }\n        return attr;\n    };\n    /**\n     * clearAttributes method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.clearAttributes = function (element) {\n        for (var attr = element.attributes, c = attr.length - 1; c >= 0; c--) {\n            var key = attr[c];\n            element.removeAttribute(key.nodeName);\n        }\n    };\n    /**\n     * openTagString method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {string} - returns the string\n     * @hidden\n\n     */\n    DOMNode.prototype.openTagString = function (element) {\n        return '<' + element.tagName.toLowerCase() + this.attributes(element) + '>';\n    };\n    /**\n     * closeTagString method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {string} - returns the string value\n     * @hidden\n\n     */\n    DOMNode.prototype.closeTagString = function (element) {\n        return '</' + element.tagName.toLowerCase() + '>';\n    };\n    /**\n     * createTagString method\n     *\n     * @param {string} tagName - specifies the tag name\n     * @param {Element} relativeElement - specifies the relative element\n     * @param {string} innerHTML - specifies the string value\n     * @returns {string} - returns the string value.\n     * @hidden\n\n     */\n    DOMNode.prototype.createTagString = function (tagName, relativeElement, innerHTML) {\n        return '<' + tagName.toLowerCase() + this.attributes(relativeElement) + '>' + innerHTML + '</' + tagName.toLowerCase() + '>';\n    };\n    /**\n     * isList method\n     *\n     * @param {Element} element - specifes the element.\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isList = function (element) {\n        return !!element && ['UL', 'OL'].indexOf(element.tagName) >= 0;\n    };\n    /**\n     * isElement method\n     *\n     * @param {Element} element - specifes the element.\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isElement = function (element) {\n        return element === this.parent;\n    };\n    /**\n     * isEditable method\n     *\n     * @param {Element} element - specifes the element.\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isEditable = function (element) {\n        return ((!element.getAttribute || element.getAttribute('contenteditable') === 'true')\n            && ['STYLE', 'SCRIPT'].indexOf(element.tagName) < 0);\n    };\n    /**\n     * hasClass method\n     *\n     * @param {Element} element - specifes the element.\n     * @param {string} className - specifies the class name value\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.hasClass = function (element, className) {\n        return element && element.classList && element.classList.contains(className);\n    };\n    /**\n     * replaceWith method\n     *\n     * @param {Element} element - specifes the element.\n     * @param {string} value - specifies the string value\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.replaceWith = function (element, value) {\n        var parentNode = element.parentNode;\n        parentNode.insertBefore(this.parseHTMLFragment(value), element);\n        detach(element);\n    };\n    /**\n     * parseHTMLFragment method\n     *\n     * @param {string} value - specifies the string value\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.parseHTMLFragment = function (value) {\n        /* eslint-disable */\n        var temp = createElement('template');\n        temp.innerHTML = value;\n        if (temp.content instanceof DocumentFragment) {\n            return temp.content;\n        }\n        else {\n            return document.createRange().createContextualFragment(value);\n        }\n        /* eslint-enable */\n    };\n    /**\n     * wrap method\n     *\n     * @param {Element} element - specifies the element\n     * @param {Element} wrapper - specifies the element.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.wrap = function (element, wrapper) {\n        element.parentNode.insertBefore(wrapper, element);\n        wrapper = element.previousSibling;\n        wrapper.appendChild(element);\n        return wrapper;\n    };\n    /**\n     * insertAfter method\n     *\n     * @param {Element} newNode - specifies the new node element\n     * @param {Element} referenceNode - specifies the referenece node\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    /**\n     * wrapInner method\n     *\n     * @param {Element} parent - specifies the parent element.\n     * @param {Element} wrapper - specifies the wrapper element.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.wrapInner = function (parent, wrapper) {\n        parent.appendChild(wrapper);\n        wrapper = parent.querySelector('.e-rte-wrap-inner');\n        wrapper.classList.remove('e-rte-wrap-inner');\n        if (wrapper.classList.length === 0) {\n            wrapper.removeAttribute('class');\n        }\n        while (parent.firstChild !== wrapper) {\n            wrapper.appendChild(parent.firstChild);\n        }\n        return wrapper;\n    };\n    /**\n     * unWrap method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {Element} - returns the element.\n     * @hidden\n\n     */\n    DOMNode.prototype.unWrap = function (element) {\n        var parent = element.parentNode;\n        var unWrapNode = [];\n        while (element.firstChild && (element.textContent !== ' ')) {\n            unWrapNode.push(element.firstChild);\n            parent.insertBefore(element.firstChild, element);\n        }\n        unWrapNode = unWrapNode.length > 0 ? unWrapNode : [element.parentNode];\n        parent.removeChild(element);\n        return unWrapNode;\n    };\n    /**\n     * getSelectedNode method\n     *\n     * @param {Element} element - specifies the element\n     * @param {number} index - specifies the index value.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.getSelectedNode = function (element, index) {\n        if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 &&\n            element.childNodes[index - 1] && element.childNodes[index - 1].nodeType === Node.ELEMENT_NODE &&\n            (element.childNodes[index - 1].classList.contains(markerClassName.startSelection) ||\n                element.childNodes[index - 1].classList.contains(markerClassName.endSelection))) {\n            element = element.childNodes[index - 1];\n        }\n        else if (element.nodeType === Node.ELEMENT_NODE && element.childNodes.length > 0 && element.childNodes[index]) {\n            element = element.childNodes[index];\n        }\n        if (element.nodeType === Node.TEXT_NODE) {\n            element = element.parentNode;\n        }\n        return element;\n    };\n    /**\n     * nodeFinds method\n     *\n     * @param {Element} element - specifies the element.\n     * @param {Element[]} elements - specifies the array of elements\n     * @returns {Element[]} - returnts the array elements\n     * @hidden\n\n     */\n    DOMNode.prototype.nodeFinds = function (element, elements) {\n        var existNodes = [];\n        for (var i = 0; i < elements.length; i++) {\n            if (element.contains(elements[i]) && element !== elements[i]) {\n                existNodes.push(elements[i]);\n            }\n        }\n        return existNodes;\n    };\n    /**\n     * isEditorArea method\n     *\n     * @returns {boolean} - returns the boolean value\n     * @hidden\n\n     */\n    DOMNode.prototype.isEditorArea = function () {\n        var range = this.getRangePoint(0);\n        var element;\n        for (element = range.commonAncestorContainer; element && !this.isElement(element); null) {\n            element = element.parentNode;\n        }\n        return !!this.isElement(element);\n    };\n    /**\n     * getRangePoint method\n     *\n     * @param {number} point - specifies the number value.\n     * @returns {Range} - returns the range.\n     * @hidden\n\n     */\n    DOMNode.prototype.getRangePoint = function (point) {\n        var selection = this.getSelection();\n        var ranges = [];\n        if (selection && selection.getRangeAt && selection.rangeCount) {\n            ranges = [];\n            for (var f = 0; f < selection.rangeCount; f++) {\n                ranges.push(selection.getRangeAt(f));\n            }\n        }\n        else {\n            ranges = [this.currentDocument.createRange()];\n        }\n        return 'undefined' !== typeof point ? ranges[point] : ranges;\n    };\n    DOMNode.prototype.getSelection = function () {\n        return this.nodeSelection.get(this.currentDocument);\n    };\n    /**\n     * getPreviousNode method\n     *\n     * @param {Element} element - specifies the element\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.getPreviousNode = function (element) {\n        element = element.previousElementSibling;\n        for (; element && element.textContent === '\\n'; null) {\n            element = element.previousElementSibling;\n        }\n        return element;\n    };\n    /**\n     * encode method\n     *\n     * @param {string} value - specifies the string value\n     * @returns {string} - specifies the string value\n     * @hidden\n\n     */\n    DOMNode.prototype.encode = function (value) {\n        var divNode = document.createElement('div');\n        divNode.innerText = value;\n        // eslint-disable-next-line\n        return divNode.innerHTML.replace(/<br\\s*[\\/]?>/gi, '\\n');\n    };\n    /**\n     * saveMarker method\n     *\n     * @param {NodeSelection} save - specifies the node selection,\n     * @returns {NodeSelection} - returns the value\n     * @hidden\n\n     */\n    DOMNode.prototype.saveMarker = function (save) {\n        var start = this.parent.querySelector('.' + markerClassName.startSelection);\n        var end = this.parent.querySelector('.' + markerClassName.endSelection);\n        var startTextNode;\n        var endTextNode;\n        if (this.hasClass(start, markerClassName.startSelection) && start.classList.length > 1) {\n            var replace = this.createTagString(CONSTANT.DEFAULT_TAG, start, this.encode(start.textContent));\n            this.replaceWith(start, replace);\n            start = this.parent.querySelector('.' + markerClassName.startSelection);\n            start.classList.remove(markerClassName.startSelection);\n            startTextNode = start.childNodes[0];\n        }\n        else {\n            startTextNode = this.unWrap(start)[0];\n        }\n        if (this.hasClass(end, markerClassName.endSelection) && end.classList.length > 1) {\n            var replace = this.createTagString(CONSTANT.DEFAULT_TAG, end, this.encode(end.textContent));\n            this.replaceWith(end, replace);\n            end = this.parent.querySelector('.' + markerClassName.endSelection);\n            end.classList.remove(markerClassName.endSelection);\n            endTextNode = end.childNodes[0];\n        }\n        else {\n            endTextNode = end ? this.unWrap(end)[0] : startTextNode;\n        }\n        save.startContainer = save.getNodeArray(startTextNode, true);\n        save.endContainer = save.getNodeArray(endTextNode, false);\n        return save;\n    };\n    DOMNode.prototype.marker = function (className, textContent) {\n        return '<span class=\"' + className + '\">' + textContent + '</span>';\n    };\n    /**\n     * setMarker method\n     *\n     * @param {NodeSelection} save - specifies the node selection.\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.setMarker = function (save) {\n        var range = save.range;\n        var startChildNodes = range.startContainer.childNodes;\n        var isTableStart = startChildNodes.length > 1 && startChildNodes[0].nodeName === 'TABLE';\n        var isImgOnlySelected = startChildNodes.length > 1 && startChildNodes[0].nodeName === 'IMAGE' &&\n            range.endOffset === 1 && range.endContainer.nodeName === '#text' && range.endContainer.textContent.length === 0;\n        var start = ((isTableStart ? getLastTextNode(startChildNodes[range.startOffset + 1]) :\n            startChildNodes[(range.startOffset > 0) ? (range.startOffset - 1) : range.startOffset]) || range.startContainer);\n        var end = (range.endContainer.childNodes[(range.endOffset > 0) ? (isImgOnlySelected ? range.endOffset :\n            (range.endOffset - 1)) : range.endOffset] || range.endContainer);\n        if ((start.nodeType === Node.ELEMENT_NODE && end.nodeType === Node.ELEMENT_NODE) && (start.contains(end) || end.contains(start))) {\n            var existNode = start.contains(end) ? start : end;\n            var isElement = existNode.nodeType !== Node.TEXT_NODE;\n            if (isElement) {\n                var nodes = [];\n                var textNodes = [];\n                for (var node = existNode; existNode.contains(node); null) {\n                    if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n                        nodes.push(node);\n                        node = node.childNodes[0];\n                    }\n                    else if (node.nextSibling) {\n                        node = node.nextSibling;\n                    }\n                    else if (node.parentNode) {\n                        node = node.parentNode;\n                        nodes.push(node);\n                    }\n                    if (textNodes.indexOf(node) < 0 && (node.nodeType === Node.TEXT_NODE ||\n                        (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0\n                            && (node.tagName === 'BR' || node.tagName === 'IMG')))) {\n                        textNodes.push(node);\n                    }\n                }\n                if (textNodes.length) {\n                    start = start.contains(end) ? textNodes[0] : start;\n                    end = textNodes[textNodes.length - 1];\n                }\n            }\n        }\n        if (start !== end) {\n            if (start.nodeType !== Node.TEXT_NODE && ((start.tagName === 'BR' &&\n                CONSTANT.IGNORE_BLOCK_TAGS.indexOf(start.parentNode.tagName.toLocaleLowerCase()) >= 0) ||\n                start.tagName === 'IMG')) {\n                this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n                var markerStart = range.startContainer.querySelector('.' + markerClassName.startSelection);\n                markerStart.appendChild(start);\n            }\n            else {\n                if (start.nodeType !== 3 && start.nodeName !== '#text' && start.nodeName !== 'BR') {\n                    var marker = this.marker(markerClassName.startSelection, '');\n                    append([this.parseHTMLFragment(marker)], start);\n                }\n                else {\n                    this.replaceWith(start, this.marker(markerClassName.startSelection, this.encode(start.textContent)));\n                }\n            }\n            if (end.nodeType !== Node.TEXT_NODE && end.tagName === 'BR' &&\n                CONSTANT.IGNORE_BLOCK_TAGS.indexOf(end.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n                this.replaceWith(end, this.marker(markerClassName.endSelection, this.encode(end.textContent)));\n                var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n                markerEnd.appendChild(end);\n            }\n            else {\n                this.ensureSelfClosingTag(end, markerClassName.endSelection, range);\n            }\n        }\n        else {\n            this.ensureSelfClosingTag(start, markerClassName.startSelection, range);\n        }\n    };\n    /**\n     * ensureSelfClosingTag method\n     *\n     * @param {Element} start - specifies the element.\n     * @param {string} className - specifes the class name string value\n     * @param {Range} range - specifies the range value\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.ensureSelfClosingTag = function (start, className, range) {\n        var isTable = false;\n        if (start.nodeType === 3) {\n            this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n        }\n        else if (start.tagName === 'BR') {\n            this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n            var markerStart = range.startContainer.querySelector('.' + className);\n            if (markerStart) {\n                markerStart.parentElement.appendChild(start);\n            }\n        }\n        else {\n            var tagName = !isNOU(start.parentElement) ? start.parentElement.tagName.toLocaleLowerCase() : '';\n            if (start.tagName === 'IMG' && tagName !== 'p' && tagName !== 'div') {\n                var parNode = document.createElement('p');\n                start.parentElement.insertBefore(parNode, start);\n                parNode.appendChild(start);\n                start = parNode.children[0];\n            }\n            if (start.tagName === 'TABLE') {\n                isTable = true;\n                if (start.textContent === '') {\n                    var tdNode = start.querySelectorAll('td');\n                    start = tdNode[tdNode.length - 1];\n                    start = !isNOU(start.childNodes[0]) ? start.childNodes[0] : start;\n                }\n                else {\n                    var lastNode = start.lastChild;\n                    while (lastNode.nodeType !== 3 && lastNode.nodeName !== '#text' &&\n                        lastNode.nodeName !== 'BR') {\n                        lastNode = lastNode.lastChild;\n                    }\n                    start = lastNode;\n                }\n            }\n            for (var i = 0; i < selfClosingTags.length; i++) {\n                start = (start.tagName === selfClosingTags[i] && !isTable) ? start.parentNode : start;\n            }\n            if (start.nodeType === 3 && start.nodeName === '#text') {\n                this.replaceWith(start, this.marker(className, this.encode(start.textContent)));\n            }\n            else if (start.nodeName === 'BR') {\n                this.replaceWith(start, this.marker(markerClassName.endSelection, this.encode(start.textContent)));\n                var markerEnd = range.endContainer.querySelector('.' + markerClassName.endSelection);\n                markerEnd.appendChild(start);\n            }\n            else {\n                var marker = this.marker(className, '');\n                append([this.parseHTMLFragment(marker)], start);\n            }\n        }\n    };\n    /**\n     * createTempNode method\n     *\n     * @param {Element} element - specifies the element.\n     * @returns {Element} - returns the element\n     * @hidden\n\n     */\n    DOMNode.prototype.createTempNode = function (element) {\n        var textContent = element.textContent;\n        if (element.tagName === 'BR') {\n            var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n            var node = element.parentNode;\n            if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.tagName.toLocaleLowerCase()) >= 0) {\n                element = this.wrap(element, this.parseHTMLFragment(wrapper));\n            }\n        }\n        else if (((element.nodeType !== Node.TEXT_NODE &&\n            (element.classList.contains(markerClassName.startSelection) ||\n                element.classList.contains(markerClassName.endSelection))) ||\n            textContent.replace(/\\n/g, '').replace(/(^ *)|( *$)/g, '').length > 0 ||\n            textContent.length && textContent.indexOf('\\n') < 0)) {\n            var wrapper = '<' + CONSTANT.DEFAULT_TAG + '></' + CONSTANT.DEFAULT_TAG + '>';\n            var target = element;\n            element = this.wrap(element, this.parseHTMLFragment(wrapper));\n            var ignoreBr = target.nodeType === Node.ELEMENT_NODE && target.firstChild && target.firstChild.nodeName === 'BR'\n                && (target.classList.contains(markerClassName.startSelection) ||\n                    target.classList.contains(markerClassName.endSelection));\n            if (!ignoreBr && element.nextElementSibling && element.nextElementSibling.tagName === 'BR') {\n                element.appendChild(element.nextElementSibling);\n            }\n        }\n        return element;\n    };\n    /**\n     * getImageTagInSelection method\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    DOMNode.prototype.getImageTagInSelection = function () {\n        var selection = this.getSelection();\n        if (this.isEditorArea() && selection.rangeCount) {\n            return selection.focusNode.querySelectorAll('img');\n        }\n        return null;\n    };\n    /**\n     * Method to wrap the inline and text node with block node.\n     *\n     * @param {HTMLElement} node - specifies the element sent to wrap the node around it with block nodes.\n     * @param {string} wrapperElement - specifies which block nodes to wrap around.\n     * @returns {HTMLElement} - returns the wrapped element.\n     * @hidden\n\n     */\n    DOMNode.prototype.gatherElementsAround = function (node, wrapperElement) {\n        var newWrapElem = createElement(wrapperElement);\n        // Insert the new div element before the current node.\n        var currentNode = node.previousSibling;\n        var currentNodeParent = node.parentElement;\n        if (currentNodeParent.className === 'e-editor-select-start') {\n            currentNodeParent.parentNode.insertBefore(newWrapElem, currentNodeParent);\n        }\n        else if (currentNodeParent) {\n            currentNodeParent.insertBefore(newWrapElem, node);\n        }\n        var i = 0;\n        while (currentNode !== null && currentNode.nodeName !== 'BR' &&\n            !this.isBlockNode(currentNode)) {\n            var prevSibling = currentNode.previousSibling;\n            if (currentNode.nodeType === 3 || currentNode.nodeType === 1) {\n                if (i === 0) {\n                    newWrapElem.appendChild(currentNode);\n                }\n                else {\n                    newWrapElem.insertBefore(currentNode, newWrapElem.firstChild);\n                }\n            }\n            currentNode = prevSibling;\n            i++;\n        }\n        // Add the current node to the new div\n        newWrapElem.appendChild(node);\n        // Gather text and inline elements after the currentNode\n        currentNode = newWrapElem.nextSibling ? newWrapElem.nextSibling :\n            newWrapElem.parentElement.nextSibling;\n        while (currentNode !== null && currentNode.nodeName !== 'BR' &&\n            !this.isBlockNode(currentNode)) {\n            var nextSibling = currentNode.nextSibling ?\n                currentNode.nextSibling : currentNode.parentElement.nextSibling;\n            if (currentNode.nodeType === 3 || currentNode.nodeType === 1) {\n                newWrapElem.appendChild(currentNode);\n            }\n            currentNode = nextSibling;\n        }\n        return newWrapElem;\n    };\n    /**\n     * Method to convert all the inline nodes between the selection to block nodes.\n     *\n     * @param {Node[]} selectedNodes - specifies the nodes of the start and end selection.\n     * @param {boolean} fromList - specifies if the method is called from list module.\n     * @returns {Node[]} - returns the selected list of elements as block nodes.\n     * @hidden\n\n     */\n    DOMNode.prototype.convertToBlockNodes = function (selectedNodes, fromList) {\n        if (selectedNodes.length > 1) {\n            var i = 0;\n            var currentSelectedNode = selectedNodes[0];\n            while (!isNOU(currentSelectedNode)) {\n                if (currentSelectedNode.nodeName === 'BR') {\n                    var nextNode = currentSelectedNode.nextSibling;\n                    detach(currentSelectedNode);\n                    currentSelectedNode = nextNode;\n                }\n                if (!isNOU(currentSelectedNode)) {\n                    if (fromList) {\n                        selectedNodes[i] = currentSelectedNode.nodeName === 'LI' || this.isBlockNode(currentSelectedNode) ?\n                            currentSelectedNode :\n                            this.gatherElementsAround(currentSelectedNode, (fromList ? 'p' : 'div'));\n                    }\n                    else {\n                        selectedNodes[i] = !this.isBlockNode(selectedNodes[i]) ?\n                            this.gatherElementsAround(currentSelectedNode, (fromList ? 'p' : 'div')) :\n                            selectedNodes[i];\n                    }\n                    var currentProcessNode = selectedNodes[i].nodeName === 'LI' ? selectedNodes[i].parentElement : selectedNodes[i];\n                    var currentElementCheckNode = currentProcessNode.nodeName === '#text' ? currentProcessNode.parentElement : currentProcessNode;\n                    currentSelectedNode = !isNOU(currentElementCheckNode.querySelector('.e-editor-select-end')) ||\n                        !isNOU(closest(currentSelectedNode, '.e-editor-select-end')) ?\n                        null : currentProcessNode.nextSibling;\n                    if (currentSelectedNode === null && !isNOU(currentProcessNode.nextSibling) && currentProcessNode.nextSibling.nodeName === 'BR') {\n                        detach(currentProcessNode.nextSibling);\n                    }\n                }\n                i++;\n            }\n        }\n        else {\n            if (!this.isBlockNode(selectedNodes[0])) {\n                selectedNodes[0] = this.gatherElementsAround(selectedNodes[0], (fromList ? 'p' : 'div'));\n                if (!isNOU(selectedNodes[0].nextSibling) && (selectedNodes[0].nextSibling.nodeName === 'BR')) {\n                    detach(selectedNodes[0].nextSibling);\n                }\n            }\n        }\n        return selectedNodes;\n    };\n    /**\n     * blockNodes method\n     *\n     * @param {boolean} action - Optional Boolean that specifies the action is whether performed.\n     * @returns {Node[]} - returns the node array values\n     * @hidden\n\n     */\n    DOMNode.prototype.blockNodes = function (action) {\n        var collectionNodes = [];\n        var selection = this.getSelection();\n        if (this.isEditorArea() && selection.rangeCount) {\n            var ranges = this.getRangePoint();\n            for (var j = 0; j < ranges.length; j++) {\n                var parentNode = void 0;\n                var range = ranges[j];\n                var startNode = this.getSelectedNode(range.startContainer, range.startOffset);\n                var endNode = this.getSelectedNode(range.endContainer, range.endOffset);\n                if (this.isBlockNode(startNode) && collectionNodes.indexOf(startNode) < 0) {\n                    collectionNodes.push(startNode);\n                }\n                parentNode = this.blockParentNode(startNode);\n                var endParentNode = this.blockParentNode(endNode);\n                if (parentNode && collectionNodes.indexOf(parentNode) < 0) {\n                    if (!isNOU(action) && action) {\n                        if (range.commonAncestorContainer.nodeName === 'TD' || parentNode.nodeName === 'TD' || endParentNode.nodeName === 'TD') {\n                            var processedNodes = this.getPreBlockNodeCollection(range);\n                            if (processedNodes.length > 1) {\n                                this.wrapWithBlockNode(processedNodes, collectionNodes);\n                            }\n                            else if (processedNodes.length > 0) {\n                                if (startNode !== endNode && startNode.nodeName !== 'BR') {\n                                    collectionNodes.push(this.createTempNode(startNode));\n                                }\n                                else if (startNode === endNode && startNode.nodeName === 'SPAN' && (startNode.classList.contains(markerClassName.startSelection)\n                                    || startNode.classList.contains(markerClassName.endSelection))) {\n                                    collectionNodes.push(this.createTempNode(startNode));\n                                }\n                            }\n                        }\n                        else {\n                            collectionNodes.push(parentNode);\n                        }\n                    }\n                    else {\n                        if (CONSTANT.IGNORE_BLOCK_TAGS.indexOf(parentNode.tagName.toLocaleLowerCase()) >= 0 && (startNode.tagName === 'BR' ||\n                            startNode.nodeType === Node.TEXT_NODE ||\n                            startNode.classList.contains(markerClassName.startSelection) ||\n                            startNode.classList.contains(markerClassName.endSelection))) {\n                            var tempNode = startNode.previousSibling &&\n                                startNode.previousSibling.nodeType === Node.TEXT_NODE ?\n                                startNode.previousSibling : startNode;\n                            if (!startNode.nextSibling && !startNode.previousSibling && startNode.tagName === 'BR') {\n                                collectionNodes.push(tempNode);\n                            }\n                            else {\n                                collectionNodes.push(this.createTempNode(tempNode));\n                            }\n                        }\n                        else {\n                            collectionNodes.push(parentNode);\n                        }\n                    }\n                }\n                var nodes = [];\n                for (var node = startNode; node !== endNode && node !== this.parent; null) {\n                    if (nodes.indexOf(node) < 0 && node.childNodes && node.childNodes.length) {\n                        nodes.push(node);\n                        node = node.childNodes[0];\n                    }\n                    else if (node && node.nodeType !== 8 && (node.tagName === 'BR' || (node.nodeType === Node.TEXT_NODE &&\n                        node.textContent.trim() !== '') || (node.nodeType !== Node.TEXT_NODE &&\n                        (node.classList.contains(markerClassName.startSelection) ||\n                            node.classList.contains(markerClassName.endSelection)))) &&\n                        CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n                        node = this.createTempNode(node);\n                    }\n                    else if (node.nextSibling && node.nextSibling.nodeType !== 8 &&\n                        (node.nextSibling.tagName === 'BR' ||\n                            node.nextSibling.nodeType === Node.TEXT_NODE ||\n                            node.nextSibling.classList.contains(markerClassName.startSelection) ||\n                            node.nextSibling.classList.contains(markerClassName.endSelection)) &&\n                        CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.nextSibling.parentNode.tagName.toLocaleLowerCase()) >= 0) {\n                        node = this.createTempNode(node.nextSibling);\n                    }\n                    else if (node.nextSibling) {\n                        node = node.nextSibling;\n                    }\n                    else if (node.parentNode) {\n                        node = node.parentNode;\n                        nodes.push(node);\n                    }\n                    if (collectionNodes.indexOf(node) < 0 && node.nodeType === Node.ELEMENT_NODE &&\n                        CONSTANT.IGNORE_BLOCK_TAGS.indexOf(node.parentNode.tagName.toLocaleLowerCase()) >= 0 &&\n                        (node.classList.contains(markerClassName.startSelection) ||\n                            node.classList.contains(markerClassName.endSelection))) {\n                        collectionNodes.push(this.createTempNode(node));\n                    }\n                    if (this.isBlockNode(node) && this.ignoreTableTag(node) && nodes.indexOf(node) < 0 &&\n                        collectionNodes.indexOf(node) < 0 && (node !== endNode || range.endOffset > 0)) {\n                        collectionNodes.push(node);\n                    }\n                    if (node.nodeName === 'IMG' && node.parentElement.contentEditable === 'true') {\n                        collectionNodes.push(node);\n                    }\n                }\n                parentNode = this.blockParentNode(endNode);\n                if (parentNode && this.ignoreTableTag(parentNode) && collectionNodes.indexOf(parentNode) < 0 &&\n                    (!isNOU(parentNode.previousElementSibling) && parentNode.previousElementSibling.tagName !== 'IMG')) {\n                    collectionNodes.push(parentNode);\n                }\n            }\n        }\n        for (var i = collectionNodes.length - 1; i > 0; i--) {\n            var nodes = this.nodeFinds(collectionNodes[i], collectionNodes);\n            if (nodes.length) {\n                var listNodes = collectionNodes[i].querySelectorAll('ul, ol');\n                if (collectionNodes[i].tagName === 'LI' && listNodes.length > 0) {\n                    continue;\n                }\n                else {\n                    collectionNodes.splice(i, 1);\n                }\n            }\n        }\n        var tableBlockNodes = this.tableSelection.getBlockNodes();\n        if (tableBlockNodes.length > 0) {\n            return tableBlockNodes;\n        }\n        return collectionNodes;\n    };\n    DOMNode.prototype.ignoreTableTag = function (element) {\n        return !(CONSTANT.TABLE_BLOCK_TAGS.indexOf(element.tagName.toLocaleLowerCase()) >= 0);\n    };\n    DOMNode.prototype.getPreBlockNodeCollection = function (range) {\n        var startNode = this.getSelectedNode(range.startContainer, range.startOffset);\n        var endNode = this.getSelectedNode(range.endContainer, range.endOffset);\n        var nodes = [];\n        var rootNode = startNode.closest('td, th');\n        if (isNOU(rootNode)) {\n            return nodes;\n        }\n        var rootChildNode = Array.from(rootNode.childNodes);\n        var isContinue = true;\n        var processedStart = this.getClosestInlineParent(startNode, rootNode, true);\n        var processedEnd = this.getClosestInlineParent(endNode, rootNode, false);\n        for (var i = 0; i < rootChildNode.length; i++) {\n            var child = rootChildNode[i];\n            if (processedStart === processedEnd && child === processedStart) {\n                nodes.push(child);\n                isContinue = true;\n            }\n            else if (child === processedStart) {\n                isContinue = false;\n            }\n            else if (child === processedEnd) {\n                nodes.push(child); // Early Exit so Push the end node.\n                isContinue = true;\n            }\n            if (isContinue) {\n                continue;\n            }\n            else {\n                nodes.push(child);\n            }\n        }\n        return nodes;\n    };\n    DOMNode.prototype.getClosestInlineParent = function (node, rootNode, isStart) {\n        // 1. If the node is a text node, return the node\n        // 2. If the node is a block node return block node\n        // 3. If the node is a inline node,\n        //      Traverse back untill the TD or TH node\n        //      Check if the the previous sibling , next sibling is a block node.\n        //      If yes return the inline node that is closest to the block node.\n        if (node.nodeType === Node.TEXT_NODE) {\n            return node;\n        }\n        if (this.isBlockNode(node)) {\n            return node;\n        }\n        var currentNode = node;\n        var rootFlag = false;\n        while (currentNode) {\n            var previousNode = currentNode;\n            if (rootFlag) {\n                if (this.isBlockNode(currentNode)) {\n                    return previousNode;\n                }\n                if (isStart && currentNode.previousSibling) {\n                    if (this.isBlockNode(currentNode.previousSibling) || currentNode.previousSibling.nodeName === 'BR') {\n                        return previousNode;\n                    }\n                    else {\n                        currentNode = currentNode.previousSibling;\n                    }\n                }\n                else if (!isStart && currentNode.nextSibling) {\n                    if (this.isBlockNode(currentNode.nextSibling) || currentNode.nextSibling.nodeName === 'BR') {\n                        return previousNode;\n                    }\n                    else {\n                        currentNode = currentNode.nextSibling;\n                    }\n                }\n                else {\n                    return currentNode;\n                }\n            }\n            else {\n                currentNode = currentNode.parentElement;\n                if (currentNode === rootNode) {\n                    currentNode = previousNode;\n                    rootFlag = true;\n                }\n            }\n        }\n        return null;\n    };\n    DOMNode.prototype.wrapWithBlockNode = function (nodes, collectionNodes) {\n        var wrapperElement = createElement('p');\n        for (var i = 0; i < nodes.length; i++) {\n            var child = nodes[i];\n            if (child.nodeName === 'BR') {\n                child.parentNode.insertBefore(wrapperElement, child);\n                wrapperElement.appendChild(child);\n                if (wrapperElement.childNodes.length > 0) {\n                    collectionNodes.push(wrapperElement);\n                }\n                wrapperElement = createElement('p');\n            }\n            else {\n                if (!this.isBlockNode(child)) {\n                    if (child.nodeName === '#text' && child.textContent.trim() === '') {\n                        continue;\n                    }\n                    if (wrapperElement.childElementCount === 0) {\n                        child.parentNode.insertBefore(wrapperElement, child);\n                        wrapperElement.appendChild(child);\n                    }\n                    else {\n                        wrapperElement.appendChild(child);\n                    }\n                }\n                else {\n                    collectionNodes.push(child);\n                }\n                // Use case when the BR is next sibling but the BR is not the part of selection.\n                if ((i === nodes.length - 1) && wrapperElement.nextElementSibling &&\n                    wrapperElement.querySelectorAll('br').length === 0 &&\n                    wrapperElement.nextElementSibling.nodeName === 'BR') {\n                    wrapperElement.appendChild(wrapperElement.nextElementSibling);\n                }\n            }\n        }\n        if (wrapperElement.childNodes.length > 0 && collectionNodes.indexOf(wrapperElement) < 0) {\n            collectionNodes.push(wrapperElement);\n        }\n    };\n    return DOMNode;\n}());\nexport { DOMNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}