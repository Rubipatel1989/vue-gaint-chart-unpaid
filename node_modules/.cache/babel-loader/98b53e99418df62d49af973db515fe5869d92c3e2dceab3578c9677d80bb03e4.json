{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-row\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"task-bar\",\n    style: _normalizeStyle({\n      left: `${$options.calculateLeft()}%`,\n      width: `${$options.calculateWidth()}%`\n    })\n  }, _toDisplayString($props.task.name), 5 /* TEXT, STYLE */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","style","_normalizeStyle","$options","calculateLeft","calculateWidth","$props","task","name"],"sources":["/var/www/vue/vue-gantt-chart/src/components/TaskRow.vue"],"sourcesContent":["<template>\n       <div class=\"task-row\">\n         <div\n           class=\"task-bar\"\n           :style=\"{\n             left: `${calculateLeft()}%`,\n             width: `${calculateWidth()}%`,\n           }\"\n         >\n           {{ task.name }}\n         </div>\n       </div>\n     </template>\n     \n     <script>\n     export default {\n       props: {\n         task: Object,\n         dates: Array,\n       },\n       methods: {\n         calculateLeft() {\n           const totalDays = this.dates.length;\n           const taskStart = new Date(this.task.start);\n           const startOffset = (taskStart - new Date(this.dates[0])) / (1000 * 60 * 60 * 24);\n           return (startOffset / totalDays) * 100;\n         },\n         calculateWidth() {\n           const totalDays = this.dates.length;\n           const taskStart = new Date(this.task.start);\n           const taskEnd = new Date(this.task.end);\n           const taskDuration = (taskEnd - taskStart) / (1000 * 60 * 60 * 24) + 1;\n           return (taskDuration / totalDays) * 100;\n         },\n       },\n     };\n     </script>\n     \n     <style>\n     .task-row {\n       position: relative;\n       height: 30px;\n     }\n     \n     .task-bar {\n       position: absolute;\n       height: 100%;\n       background-color: blue;\n       color: white;\n       text-align: center;\n       line-height: 30px;\n     }\n     </style>\n     "],"mappings":";;EACYA,KAAK,EAAC;AAAU;;uBAArBC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,CAQM;IAPJH,KAAK,EAAC,UAAU;IACfI,KAAK,EAJjBC,eAAA;eAI2CC,QAAA,CAAAC,aAAa;gBAA8BD,QAAA,CAAAE,cAAc;;sBAKtFC,MAAA,CAAAC,IAAI,CAACC,IAAI,wB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}