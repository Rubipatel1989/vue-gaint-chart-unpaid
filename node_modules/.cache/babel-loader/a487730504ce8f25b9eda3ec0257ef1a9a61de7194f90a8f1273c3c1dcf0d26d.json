{"ast":null,"code":"import { Gantt } from \"gantt-schedule-timeline-calendar\"; // Import the library\n\nexport default {\n  name: \"Time\",\n  mounted() {\n    // Initialize the Gantt chart\n    const gstc = Gantt({\n      element: document.getElementById(\"gantt\"),\n      // Attach to an HTML element\n      state: {\n        config: {\n          list: {\n            rows: {\n              // Define the rows for the Gantt chart\n              P001: {\n                id: \"P001\",\n                label: \"Product A\"\n              },\n              P002: {\n                id: \"P002\",\n                label: \"Product B\"\n              }\n            }\n          },\n          chart: {\n            items: {\n              // Define the items (tasks) in the chart\n              task1: {\n                id: \"task1\",\n                label: \"Selling Product A\",\n                time: {\n                  start: new Date(\"2024-12-01\").getTime(),\n                  end: new Date(\"2024-12-10\").getTime()\n                },\n                rowId: \"P001\"\n              },\n              task2: {\n                id: \"task2\",\n                label: \"Selling Product B\",\n                time: {\n                  start: new Date(\"2024-12-02\").getTime(),\n                  end: new Date(\"2024-12-07\").getTime()\n                },\n                rowId: \"P002\"\n              }\n            }\n          }\n        }\n      }\n    });\n\n    // Destroy the instance on component unmount\n    this.$on(\"hook:beforeDestroy\", () => {\n      gstc.destroy();\n    });\n  }\n};","map":{"version":3,"names":["Gantt","name","mounted","gstc","element","document","getElementById","state","config","list","rows","P001","id","label","P002","chart","items","task1","time","start","Date","getTime","end","rowId","task2","$on","destroy"],"sources":["/var/www/vue/vue-gantt-chart/src/components/Ej2Chart.vue"],"sourcesContent":["<template>\n       <div id=\"gantt\"></div>\n</template>\n\n<script>\n\nimport { Gantt } from \"gantt-schedule-timeline-calendar\"; // Import the library\n\nexport default {\n       name: \"Time\",\n       mounted() {\n              // Initialize the Gantt chart\n              const gstc = Gantt({\n                     element: document.getElementById(\"gantt\"), // Attach to an HTML element\n                     state: {\n                            config: {\n                                   list: {\n                                          rows: {\n                                                 // Define the rows for the Gantt chart\n                                                 P001: { id: \"P001\", label: \"Product A\" },\n                                                 P002: { id: \"P002\", label: \"Product B\" },\n                                          },\n                                   },\n                                   chart: {\n                                          items: {\n                                                 // Define the items (tasks) in the chart\n                                                 task1: {\n                                                        id: \"task1\",\n                                                        label: \"Selling Product A\",\n                                                        time: { start: new Date(\"2024-12-01\").getTime(), end: new Date(\"2024-12-10\").getTime() },\n                                                        rowId: \"P001\",\n                                                 },\n                                                 task2: {\n                                                        id: \"task2\",\n                                                        label: \"Selling Product B\",\n                                                        time: { start: new Date(\"2024-12-02\").getTime(), end: new Date(\"2024-12-07\").getTime() },\n                                                        rowId: \"P002\",\n                                                 },\n                                          },\n                                   },\n                            },\n                     },\n              });\n\n              // Destroy the instance on component unmount\n              this.$on(\"hook:beforeDestroy\", () => {\n                     gstc.destroy();\n              });\n       },\n};\n</script>\n\n<style>\n#gantt {\n       width: 100%;\n       height: 500px;\n       border: 1px solid #ccc;\n}\n</style>"],"mappings":"AAMA,SAASA,KAAI,QAAS,kCAAkC,EAAE;;AAE1D,eAAe;EACRC,IAAI,EAAE,MAAM;EACZC,OAAOA,CAAA,EAAG;IACH;IACA,MAAMC,IAAG,GAAIH,KAAK,CAAC;MACZI,OAAO,EAAEC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;MAAE;MAC3CC,KAAK,EAAE;QACAC,MAAM,EAAE;UACDC,IAAI,EAAE;YACCC,IAAI,EAAE;cACC;cACAC,IAAI,EAAE;gBAAEC,EAAE,EAAE,MAAM;gBAAEC,KAAK,EAAE;cAAY,CAAC;cACxCC,IAAI,EAAE;gBAAEF,EAAE,EAAE,MAAM;gBAAEC,KAAK,EAAE;cAAY;YAC9C;UACP,CAAC;UACDE,KAAK,EAAE;YACAC,KAAK,EAAE;cACA;cACAC,KAAK,EAAE;gBACAL,EAAE,EAAE,OAAO;gBACXC,KAAK,EAAE,mBAAmB;gBAC1BK,IAAI,EAAE;kBAAEC,KAAK,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC,CAAC;kBAAEC,GAAG,EAAE,IAAIF,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC;gBAAE,CAAC;gBACxFE,KAAK,EAAE;cACd,CAAC;cACDC,KAAK,EAAE;gBACAZ,EAAE,EAAE,OAAO;gBACXC,KAAK,EAAE,mBAAmB;gBAC1BK,IAAI,EAAE;kBAAEC,KAAK,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC,CAAC;kBAAEC,GAAG,EAAE,IAAIF,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC;gBAAE,CAAC;gBACxFE,KAAK,EAAE;cACd;YACP;UACP;QACP;MACP;IACP,CAAC,CAAC;;IAEF;IACA,IAAI,CAACE,GAAG,CAAC,oBAAoB,EAAE,MAAM;MAC9BtB,IAAI,CAACuB,OAAO,CAAC,CAAC;IACrB,CAAC,CAAC;EACT;AACP,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}