{"ast":null,"code":"import { getEditValue } from '../base/util';\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\n/**\n * Content module is used to render Rich Text Editor content\n *\n * @hidden\n\n */\nvar ContentRender = /** @class */function () {\n  /**\n   * Constructor for content renderer module\n   *\n   * @param {IRichTextEditor} parent - specifies the parent element.\n   */\n  function ContentRender(parent) {\n    this.parent = parent;\n  }\n  /**\n   * The function is used to render Rich Text Editor content div\n   *\n   * @returns {void}\n   * @hidden\n    */\n  ContentRender.prototype.renderPanel = function () {\n    var rteObj = this.parent;\n    var div = this.parent.createElement('div', {\n      className: 'e-rte-content',\n      id: this.parent.getID() + 'rte-view'\n    });\n    var rteContent = getEditValue(rteObj.value, rteObj);\n    this.editableElement = this.parent.createElement('div', {\n      className: 'e-content',\n      id: this.parent.getID() + '_rte-edit-view',\n      attrs: {\n        'contenteditable': 'true'\n      }\n    });\n    if (!isNOU(this.parent.fontFamily.default)) {\n      this.editableElement.style.fontFamily = this.parent.fontFamily.default;\n    }\n    if (!isNOU(this.parent.fontSize.default)) {\n      this.editableElement.style.fontSize = this.parent.fontSize.default;\n    }\n    this.editableElement.innerHTML = rteContent;\n    div.appendChild(this.editableElement);\n    this.setPanel(div);\n    rteObj.rootContainer.appendChild(div);\n  };\n  /**\n   * Get the content div element of RichTextEditor\n   *\n   * @returns {Element} - specifies the element.\n   * @hidden\n    */\n  ContentRender.prototype.getPanel = function () {\n    return this.contentPanel;\n  };\n  /**\n   * Get the editable element of RichTextEditor\n   *\n   * @returns {Element} - specifies the return element.\n   * @hidden\n    */\n  ContentRender.prototype.getEditPanel = function () {\n    return this.editableElement;\n  };\n  /**\n   * Returns the text content as string.\n   *\n   * @returns {string} - specifies the string element.\n   */\n  ContentRender.prototype.getText = function () {\n    var textString = this.getEditPanel().innerText;\n    return textString === '\\n' ? '' : textString;\n  };\n  /**\n   * Set the content div element of RichTextEditor\n   *\n   * @param {Element} panel - specifies the panel element.\n   * @returns {void}\n   * @hidden\n    */\n  ContentRender.prototype.setPanel = function (panel) {\n    this.contentPanel = panel;\n  };\n  /**\n   * Get the document of RichTextEditor\n   *\n   * @returns {Document} - specifies the document.\n   * @hidden\n    */\n  ContentRender.prototype.getDocument = function () {\n    return this.getEditPanel().ownerDocument;\n  };\n  return ContentRender;\n}();\nexport { ContentRender };","map":{"version":3,"names":["getEditValue","isNullOrUndefined","isNOU","ContentRender","parent","prototype","renderPanel","rteObj","div","createElement","className","id","getID","rteContent","value","editableElement","attrs","fontFamily","default","style","fontSize","innerHTML","appendChild","setPanel","rootContainer","getPanel","contentPanel","getEditPanel","getText","textString","innerText","panel","getDocument","ownerDocument"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/renderer/content-renderer.js"],"sourcesContent":["import { getEditValue } from '../base/util';\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\n/**\n * Content module is used to render Rich Text Editor content\n *\n * @hidden\n\n */\nvar ContentRender = /** @class */ (function () {\n    /**\n     * Constructor for content renderer module\n     *\n     * @param {IRichTextEditor} parent - specifies the parent element.\n     */\n    function ContentRender(parent) {\n        this.parent = parent;\n    }\n    /**\n     * The function is used to render Rich Text Editor content div\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    ContentRender.prototype.renderPanel = function () {\n        var rteObj = this.parent;\n        var div = this.parent.createElement('div', { className: 'e-rte-content', id: this.parent.getID() + 'rte-view' });\n        var rteContent = getEditValue(rteObj.value, rteObj);\n        this.editableElement = this.parent.createElement('div', {\n            className: 'e-content',\n            id: this.parent.getID() + '_rte-edit-view',\n            attrs: {\n                'contenteditable': 'true'\n            }\n        });\n        if (!isNOU(this.parent.fontFamily.default)) {\n            this.editableElement.style.fontFamily = this.parent.fontFamily.default;\n        }\n        if (!isNOU(this.parent.fontSize.default)) {\n            this.editableElement.style.fontSize = this.parent.fontSize.default;\n        }\n        this.editableElement.innerHTML = rteContent;\n        div.appendChild(this.editableElement);\n        this.setPanel(div);\n        rteObj.rootContainer.appendChild(div);\n    };\n    /**\n     * Get the content div element of RichTextEditor\n     *\n     * @returns {Element} - specifies the element.\n     * @hidden\n\n     */\n    ContentRender.prototype.getPanel = function () {\n        return this.contentPanel;\n    };\n    /**\n     * Get the editable element of RichTextEditor\n     *\n     * @returns {Element} - specifies the return element.\n     * @hidden\n\n     */\n    ContentRender.prototype.getEditPanel = function () {\n        return this.editableElement;\n    };\n    /**\n     * Returns the text content as string.\n     *\n     * @returns {string} - specifies the string element.\n     */\n    ContentRender.prototype.getText = function () {\n        var textString = this.getEditPanel().innerText;\n        return textString === '\\n' ? '' : textString;\n    };\n    /**\n     * Set the content div element of RichTextEditor\n     *\n     * @param {Element} panel - specifies the panel element.\n     * @returns {void}\n     * @hidden\n\n     */\n    ContentRender.prototype.setPanel = function (panel) {\n        this.contentPanel = panel;\n    };\n    /**\n     * Get the document of RichTextEditor\n     *\n     * @returns {Document} - specifies the document.\n     * @hidden\n\n     */\n    ContentRender.prototype.getDocument = function () {\n        return this.getEditPanel().ownerDocument;\n    };\n    return ContentRender;\n}());\nexport { ContentRender };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,cAAc;AAC3C,SAASC,iBAAiB,IAAIC,KAAK,QAAQ,sBAAsB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,aAAa,GAAG,aAAe,YAAY;EAC3C;AACJ;AACA;AACA;AACA;EACI,SAASA,aAAaA,CAACC,MAAM,EAAE;IAC3B,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;EAEID,aAAa,CAACE,SAAS,CAACC,WAAW,GAAG,YAAY;IAC9C,IAAIC,MAAM,GAAG,IAAI,CAACH,MAAM;IACxB,IAAII,GAAG,GAAG,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,KAAK,EAAE;MAAEC,SAAS,EAAE,eAAe;MAAEC,EAAE,EAAE,IAAI,CAACP,MAAM,CAACQ,KAAK,CAAC,CAAC,GAAG;IAAW,CAAC,CAAC;IAChH,IAAIC,UAAU,GAAGb,YAAY,CAACO,MAAM,CAACO,KAAK,EAAEP,MAAM,CAAC;IACnD,IAAI,CAACQ,eAAe,GAAG,IAAI,CAACX,MAAM,CAACK,aAAa,CAAC,KAAK,EAAE;MACpDC,SAAS,EAAE,WAAW;MACtBC,EAAE,EAAE,IAAI,CAACP,MAAM,CAACQ,KAAK,CAAC,CAAC,GAAG,gBAAgB;MAC1CI,KAAK,EAAE;QACH,iBAAiB,EAAE;MACvB;IACJ,CAAC,CAAC;IACF,IAAI,CAACd,KAAK,CAAC,IAAI,CAACE,MAAM,CAACa,UAAU,CAACC,OAAO,CAAC,EAAE;MACxC,IAAI,CAACH,eAAe,CAACI,KAAK,CAACF,UAAU,GAAG,IAAI,CAACb,MAAM,CAACa,UAAU,CAACC,OAAO;IAC1E;IACA,IAAI,CAAChB,KAAK,CAAC,IAAI,CAACE,MAAM,CAACgB,QAAQ,CAACF,OAAO,CAAC,EAAE;MACtC,IAAI,CAACH,eAAe,CAACI,KAAK,CAACC,QAAQ,GAAG,IAAI,CAAChB,MAAM,CAACgB,QAAQ,CAACF,OAAO;IACtE;IACA,IAAI,CAACH,eAAe,CAACM,SAAS,GAAGR,UAAU;IAC3CL,GAAG,CAACc,WAAW,CAAC,IAAI,CAACP,eAAe,CAAC;IACrC,IAAI,CAACQ,QAAQ,CAACf,GAAG,CAAC;IAClBD,MAAM,CAACiB,aAAa,CAACF,WAAW,CAACd,GAAG,CAAC;EACzC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EAEIL,aAAa,CAACE,SAAS,CAACoB,QAAQ,GAAG,YAAY;IAC3C,OAAO,IAAI,CAACC,YAAY;EAC5B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EAEIvB,aAAa,CAACE,SAAS,CAACsB,YAAY,GAAG,YAAY;IAC/C,OAAO,IAAI,CAACZ,eAAe;EAC/B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIZ,aAAa,CAACE,SAAS,CAACuB,OAAO,GAAG,YAAY;IAC1C,IAAIC,UAAU,GAAG,IAAI,CAACF,YAAY,CAAC,CAAC,CAACG,SAAS;IAC9C,OAAOD,UAAU,KAAK,IAAI,GAAG,EAAE,GAAGA,UAAU;EAChD,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EAEI1B,aAAa,CAACE,SAAS,CAACkB,QAAQ,GAAG,UAAUQ,KAAK,EAAE;IAChD,IAAI,CAACL,YAAY,GAAGK,KAAK;EAC7B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EAEI5B,aAAa,CAACE,SAAS,CAAC2B,WAAW,GAAG,YAAY;IAC9C,OAAO,IAAI,CAACL,YAAY,CAAC,CAAC,CAACM,aAAa;EAC5C,CAAC;EACD,OAAO9B,aAAa;AACxB,CAAC,CAAC,CAAE;AACJ,SAASA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}