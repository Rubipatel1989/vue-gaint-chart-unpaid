{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { Ajax, Fetch, createElement, select, extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { createDialog, createExtDialog } from '../pop-up/dialog';\nimport { fileType, setNodeId, getLocaleText, setDateObject, doPasteUpdate, getPathObject } from '../common/utility';\nimport { generatePath, getAccessDetails } from '../common/utility';\nimport { getUid } from '@syncfusion/ej2-grids';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Function to read the content from given path in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} event - specifies the event.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nexport function read(parent, event, path) {\n  var itemData = parent.itemData;\n  for (var i = 0; i < itemData.length; i++) {\n    if (isNOU(getValue('hasChild', itemData[i]))) {\n      setValue('hasChild', false, itemData[i]);\n    }\n  }\n  var data = {\n    action: 'read',\n    path: path,\n    showHiddenItems: parent.showHiddenItems,\n    data: itemData\n  };\n  createAjax(parent, data, readSuccess, event);\n}\n/**\n * Function to create new folder in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nexport function createFolder(parent, itemName) {\n  var data = {\n    action: 'create',\n    path: parent.path,\n    name: itemName,\n    data: parent.itemData\n  };\n  createAjax(parent, data, createSuccess, itemName);\n}\n/**\n * Function to filter the files in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string}  event - specifies the event.\n * @returns {void}\n * @private\n */\nexport function filter(parent, event) {\n  var data = {\n    action: 'filter',\n    path: parent.path,\n    showHiddenItems: parent.showHiddenItems,\n    data: [getPathObject(parent)]\n  };\n  var filterData;\n  var filterDataVal = parent.filterData ? extend(filterData, data, parent.filterData) : data;\n  createAjax(parent, filterDataVal, filterSuccess, event, getValue('action', filterDataVal));\n}\n/**\n * Function to rename the folder/file in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string} itemNewName - specifies the item's new name.\n * @returns {void}\n * @private\n */\nexport function rename(parent, path, itemNewName) {\n  var name;\n  var newName;\n  if (parent.breadcrumbbarModule.searchObj.element.value === '' && !parent.isFiltered) {\n    name = parent.currentItemText;\n    newName = itemNewName;\n  } else {\n    var fPath = parent.filterPath;\n    if (parent.hasId) {\n      name = parent.currentItemText;\n      newName = itemNewName;\n    } else {\n      fPath = fPath.replace(/\\\\/g, '/');\n      name = fPath.replace(path, '') + parent.currentItemText;\n      newName = fPath.replace(path, '') + itemNewName;\n    }\n  }\n  var data = {\n    action: 'rename',\n    path: path,\n    name: name,\n    newName: newName,\n    data: parent.itemData,\n    showFileExtension: parent.showFileExtension\n  };\n  createAjax(parent, data, renameSuccess, path);\n}\n/**\n * Function to paste file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string[]} names - specifies the names.\n * @param {string} targetPath - specifies the target path.\n * @param {string} pasteOperation - specifies the paste operation.\n * @param {string[]} renameItems - specifies the rename items.\n * @param {Object[]} actionRecords - specifies the action records.\n * @returns {void}\n * @private\n */\nexport function paste(parent, path, names, targetPath, pasteOperation, renameItems, actionRecords) {\n  var data = {\n    action: pasteOperation,\n    path: path,\n    targetData: parent.itemData[0],\n    targetPath: targetPath,\n    names: names,\n    renameFiles: renameItems,\n    data: actionRecords\n  };\n  parent.destinationPath = targetPath;\n  createAjax(parent, data, pasteSuccess, path, pasteOperation, targetPath);\n}\n/**\n * Function to delete file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string[]} items - specifies the items.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nexport function Delete(parent, items, path, operation) {\n  var data = {\n    action: operation,\n    path: path,\n    names: items,\n    data: parent.itemData\n  };\n  createAjax(parent, data, deleteSuccess, path);\n}\n/* istanbul ignore next */\n/**\n * Function to get details of file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string[]} names - specifies the names.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation data.\n * @returns {void}\n * @private\n */\nexport function GetDetails(parent, names, path, operation) {\n  var data = {\n    action: operation,\n    path: path,\n    names: names,\n    data: parent.itemData\n  };\n  createAjax(parent, data, detailsSuccess, path, operation);\n}\n/**\n * Function for getDateFormat in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nfunction getDateFormat(parent) {\n  var columns = parent.detailsViewSettings.columns;\n  var dateFormat;\n  if (!columns) {\n    return null;\n  }\n  for (var i = 0; i < columns.length; i++) {\n    if (columns[i].field === '_fm_modified') {\n      if (!isNOU(columns[i].format)) {\n        dateFormat = columns[i].format.toString();\n      }\n      break;\n    }\n  }\n  return dateFormat;\n}\n/**\n * Checks whether fileSystemData is enabled.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {boolean} - returns the boolean value.\n */\nexport function isFileSystemData(parent) {\n  var isFileSystemData = parent.fileSystemData.length >= 0 && isNOU(parent.ajaxSettings.url);\n  return isFileSystemData;\n}\n/**\n * Function to check whether file already exist or not.\n *\n * @param {Record<string, any>} fileSystemData - specifies the file data.\n * @param {string} name - specifies the name.\n * @returns {boolean} - returns the boolean value.\n * @private\n */\nfunction isFileExists(fileSystemData, name) {\n  var isExists = fileSystemData.some(function (item) {\n    return item.name === name;\n  });\n  return isExists;\n}\n/**\n * Function to find the index value of a file or folder.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number} id - specifies the id.\n * @returns {number} - returns the index value.\n * @private\n */\nfunction findIndexById(parent, id) {\n  var index = parent.fileSystemData.findIndex(function (item) {\n    return !isNOU(item) && String(item.id) === String(id);\n  });\n  return index;\n}\n/**\n * Function to get the entire data of a file or folder using id value.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number | string} id - specifies the id.\n * @returns {Object} - returns the data.\n * @private\n */\nfunction filterById(parent, id) {\n  var data = parent.fileSystemData.filter(function (item) {\n    return String(item.id) === String(id);\n  })[0];\n  return data;\n}\n/**\n * Function to get the entire data of a file or folder for a parent.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number | string} parentId - specifies the parent id.\n * @returns {Object[]} - returns the data.\n * @private\n */\nfunction filterByParent(parent, parentId) {\n  var data = parent.fileSystemData.filter(function (item) {\n    return String(item.parentId) === String(parentId);\n  });\n  return data;\n}\n/**\n * Function to create a new copied file or folder.\n *\n * @param {Record<string, any>} data - specifies the file or folder data.\n * @param {Record<string, any>} target - specifies the target data.\n * @param {string} itemName - specifies the item name.\n * @param {boolean} isCopy - specifies the copy operation.\n * @returns {Record<string, Object>} - returns the data.\n * @private\n */\nfunction createNewItem(data, target, itemName, isCopy) {\n  var newItem = {};\n  //Construct the new folder details.\n  for (var key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      newItem[key] = null;\n    }\n  }\n  var currentDate = new Date();\n  var folderPath = target.id !== 0 ? target.filterPath + target.name : '\\\\';\n  Object.assign(newItem, {\n    dateCreated: currentDate,\n    dateModified: currentDate,\n    filterPath: folderPath,\n    hasChild: isCopy ? data.hasChild : false,\n    id: getUid(itemName === null ? data.name : itemName),\n    isFile: isCopy ? data.isFile : false,\n    name: itemName === null ? data.name : itemName,\n    parentId: target.id,\n    size: isCopy ? data.size : 0,\n    type: isCopy ? data.type : ''\n  });\n  return newItem;\n}\n/**\n * Function to create an error response.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} message - specifies the error message.\n * @param {string} code - specifies the error code.\n * @param {Object[]} fileName - specifies the file name.\n * @returns {void}\n * @private\n */\nfunction createErrorObject(parent, message, code, fileName) {\n  parent.responseData = {\n    cwd: null,\n    details: null,\n    error: {\n      code: code,\n      message: message,\n      fileExists: fileName != null ? fileName : null\n    },\n    files: null\n  };\n}\n/**\n * Function to trigger folder creation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerFolderCreation(parent, data, eventArgs) {\n  var createEventArgs = {\n    folderName: getValue('name', data),\n    cancel: false,\n    path: getValue('path', data),\n    parentFolder: getValue('data', data)\n  };\n  parent.trigger('beforeFolderCreate', createEventArgs, function (args) {\n    if (args.cancel) {\n      eventArgs.cancel = true;\n      return;\n    }\n    if (isFileSystemData(parent)) {\n      if (!isFileExists(parent.fileSystemData, args.folderName)) {\n        var data_1 = args.parentFolder[0];\n        var newObject = createNewItem(data_1, data_1, args.folderName, false);\n        parent.fileSystemData.push(newObject);\n      } else {\n        var message = 'A file or folder with the name ' + args.folderName + ' already exists.';\n        createErrorObject(parent, message, '400', null);\n      }\n    }\n  });\n}\n/**\n * Function to trigger delete operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerDeleteOperation(parent, data, eventArgs) {\n  var deleteEventArgs = {\n    cancel: false,\n    itemData: getValue('data', data),\n    path: getValue('path', data)\n  };\n  parent.trigger('beforeDelete', deleteEventArgs, function (args) {\n    if (args.cancel) {\n      eventArgs.cancel = true;\n      return;\n    }\n    if (isFileSystemData(parent)) {\n      args.itemData.forEach(function (itemData) {\n        var index = findIndexById(parent, itemData.id);\n        if (index !== -1) {\n          parent.fileSystemData.splice(index, 1);\n        }\n        if (!itemData.isFile) {\n          var subItems = parent.fileSystemData.filter(function (obj) {\n            return obj.filterPath.includes(itemData.name);\n          });\n          subItems.forEach(function (subItem) {\n            var index = findIndexById(parent, subItem.id);\n            if (index !== -1) {\n              parent.fileSystemData.splice(index, 1);\n            }\n          });\n        }\n      });\n    }\n  });\n}\n/**\n * Function to trigger rename operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerRenameOperation(parent, data, eventArgs) {\n  var renameEventArgs = {\n    cancel: false,\n    newName: getValue('newName', data),\n    itemData: getValue('data', data),\n    path: getValue('path', data)\n  };\n  parent.trigger('beforeRename', renameEventArgs, function (args) {\n    if (args.cancel) {\n      eventArgs.cancel = true;\n      return;\n    }\n    if (isFileSystemData(parent)) {\n      if (!isFileExists(parent.fileSystemData, args.newName)) {\n        var fileData = filterById(parent, args.itemData[0].id);\n        fileData.name = args.newName;\n      } else {\n        var message = 'Cannot rename' + args.itemData[0].name + 'to' + args.newName + ': destination already exists.';\n        createErrorObject(parent, message, '400', null);\n      }\n    }\n  });\n}\n/**\n * Function to trigger move or copy operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerMoveOrCopyOperation(parent, data, eventArgs) {\n  var moveEventArgs = {\n    cancel: false,\n    itemData: getValue('data', data),\n    isCopy: getValue('action', data) === 'copy' ? true : false,\n    path: getValue('path', data),\n    targetData: getValue('targetData', data),\n    targetPath: getValue('targetPath', data)\n  };\n  parent.trigger('beforeMove', moveEventArgs, function (args) {\n    if (args.cancel) {\n      eventArgs.cancel = true;\n      return;\n    }\n    if (isFileSystemData(parent)) {\n      var message = 'File Already Exists';\n      var action = getValue('action', data);\n      var itemPermission = getAccessDetails(parent, args.itemData, action, false);\n      var pathPermission = getAccessDetails(parent, [args.targetData], action, true);\n      var file_1 = [];\n      parent.pasteNodes = [];\n      if (itemPermission === '' && pathPermission === '') {\n        if (args.isCopy) {\n          var folderSubItems_1 = filterByParent(parent, args.targetData.id);\n          var copiedFolders = args.itemData;\n          copiedFolders.forEach(function (itemData) {\n            if (!isFileExists(folderSubItems_1, itemData.name) || getValue('renameFiles', data).length > 0) {\n              if (getValue('renameFiles', data).length > 0) {\n                var names = itemData.name.split('.');\n                var name_1 = itemData.name.includes('.') ? names[0] + '(' + parent.existingFileCount + ').' + names[1] : names[0] + '(' + parent.existingFileCount + ')';\n                copyFolderItems(parent, itemData, args.targetData, name_1);\n                parent.responseData.error = null;\n                parent.existingFileCount++;\n                return;\n              }\n              copyFolderItems(parent, itemData, args.targetData, null);\n            } else {\n              file_1.push(itemData.name);\n            }\n          });\n          if (file_1.length > 0) {\n            createErrorObject(parent, message, '400', file_1);\n          }\n          return;\n        }\n        var target = args.targetData;\n        var getTargetFiles = filterByParent(parent, target.id);\n        for (var i = 0; i < args.itemData.length; i++) {\n          var currItem = args.itemData[i];\n          if (!isFileExists(getTargetFiles, currItem.name) || getValue('renameFiles', data).length > 0) {\n            if (!target.hasChild) {\n              target.hasChild = !currItem.isFile;\n            }\n            if (!currItem.isFile) {\n              //Check whether the source folder include other sub folders or not.\n              var subItems = currItem.parentId !== 0 ? filterByParent(parent, currItem.parentID) : [];\n              var itemData = filterById(parent, currItem.parentId);\n              itemData.hasChild = subItems.length > 1 ? true : false;\n            }\n            var fileData = filterById(parent, currItem.id);\n            if (getValue('renameFiles', data).length > 0) {\n              var names = currItem.name.split('.');\n              currItem.name = currItem.name.includes('.') ? names[0] + '(' + parent.existingFileCount + ').' + names[1] : names[0] + '(' + parent.existingFileCount + ')';\n              fileData.name = currItem.name;\n              parent.responseData.error = null;\n              parent.existingFileCount++;\n              parent.dropData = target;\n              parent.dropPath = args.path;\n              var pathArray = args.targetPath.replace(/^\\/|\\/$/g, '').split('/');\n              target = filterById(parent, pathArray[pathArray.length - 1]);\n            }\n            fileData.parentId = target.id;\n            fileData.filterPath = target.id === 0 ? '\\\\' : target.filterPath + target.name + '\\\\';\n          } else {\n            file_1.push(currItem.name);\n          }\n        }\n        if (file_1.length > 0) {\n          createErrorObject(parent, message, '400', file_1);\n        }\n      }\n    }\n  });\n}\n/**\n * Function to trigger search operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerSearchOperation(parent, data, eventArgs) {\n  var searchEventArgs = {\n    searchResults: getValue('data', data),\n    cancel: false,\n    path: getValue('path', data),\n    searchText: getValue('searchString', data),\n    caseSensitive: getValue('caseSensitive', data),\n    showHiddenItems: getValue('showHiddenItems', data)\n  };\n  parent.trigger('search', searchEventArgs, function (args) {\n    setValue('data', args.searchResults, data);\n    if (args.cancel) {\n      eventArgs.cancel = true;\n    }\n  });\n}\n/**\n * Function to trigger client side events.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerClientEvents(parent, data, eventArgs) {\n  switch (getValue('action', data)) {\n    case 'create':\n      {\n        triggerFolderCreation(parent, data, eventArgs);\n        break;\n      }\n    case 'delete':\n      {\n        triggerDeleteOperation(parent, data, eventArgs);\n        break;\n      }\n    case 'rename':\n      {\n        triggerRenameOperation(parent, data, eventArgs);\n        break;\n      }\n    case 'move':\n    case 'copy':\n      {\n        triggerMoveOrCopyOperation(parent, data, eventArgs);\n        break;\n      }\n    case 'search':\n      {\n        triggerSearchOperation(parent, data, eventArgs);\n        break;\n      }\n  }\n}\n/**\n * Creates an AJAX request for the file manager.\n *\n * @param {IFileManager} parent - The parent file manager instance.\n * @param {Object} data - The data object for the AJAX request.\n * @param {Function} fn - The callback function to be executed after the AJAX request.\n * @param {string} [event] - The event type for the AJAX request.\n * @param {string} [operation] - The operation type for the AJAX request.\n * @param {string} [targetPath] - The target path for the AJAX request.\n * @returns {void}\n * @private\n */\nfunction createAjax(parent, data, fn, event, operation, targetPath) {\n  var ajaxSettings = {\n    url: parent.ajaxSettings.url,\n    type: 'POST',\n    mode: true,\n    dataType: 'json',\n    contentType: 'application/json',\n    data: JSON.stringify(data),\n    onSuccess: null,\n    onFailure: null,\n    beforeSend: null\n  };\n  var eventArgs = {\n    action: getValue('action', data),\n    ajaxSettings: ajaxSettings,\n    cancel: false\n  };\n  triggerClientEvents(parent, data, eventArgs);\n  parent.trigger('beforeSend', eventArgs, function (beforeSendArgs) {\n    if (!beforeSendArgs.cancel) {\n      parent.notify(events.beforeRequest, {});\n      if (isFileSystemData(parent)) {\n        var filePath = event === 'node-expand' || event === 'finalize-end' || event === 'rename-end-parent' ? getValue('path', data) : parent.path;\n        var pathArray = filePath.replace(/^\\/|\\/$/g, '').split('/');\n        var idValue = event === 'rename-end-parent' || event === 'path-changed' && getValue('data', data).length !== 0 && isNOU(parent.renamedItem) || event === 'paste-end' && (parent.targetModule === 'largeiconsview' || parent.targetModule === 'detailsview') ? getValue('data', data)[0].id : pathArray[pathArray.length - 1];\n        var action = getValue('action', data);\n        var isFileOperation = (action === 'move' || action === 'rename' || action === 'copy' || action === 'delete' || action === 'search') && event !== 'rename-end';\n        if (action === 'read' || action === 'create' || event === 'rename-end') {\n          var rootId = parent.fileSystemData.filter(function (item) {\n            return isNOU(item.parentId);\n          }).length > 0 ? parent.fileSystemData.filter(function (item) {\n            return isNOU(item.parentId);\n          })[0].id : 0;\n          parent.responseData = {\n            cwd: filterById(parent, parent.path === '/' && event !== 'node-expand' && event !== 'rename-end-parent' ? rootId : idValue),\n            details: null,\n            error: null,\n            files: filterByParent(parent, parent.path === '/' && event !== 'node-expand' && event !== 'rename-end-parent' ? rootId : idValue)\n          };\n          if (isNOU(parent.responseData.cwd)) {\n            var message = 'Cannot load empty data within the File Manager.';\n            createErrorObject(parent, message, '400', null);\n          }\n        } else if (isFileOperation && parent.responseData.error === null) {\n          var itemData = action === 'search' || action === 'delete' ? getValue('data', data) : [];\n          if (itemData.length === 0) {\n            if (action === 'copy') {\n              itemData = parent.pasteNodes.map(function (item) {\n                return filterById(parent, item);\n              });\n            } else {\n              itemData = getValue('data', data).map(function (item) {\n                return filterById(parent, item.id);\n              });\n            }\n          }\n          parent.responseData = {\n            cwd: null,\n            details: null,\n            error: null,\n            files: itemData\n          };\n        } else if (getValue('action', data) === 'details') {\n          var itemData = getValue('data', data);\n          var details = itemData[0];\n          var isMultipleFiles = itemData.length > 1;\n          var itemNames = itemData.map(function (item) {\n            return item.name;\n          });\n          var totalSize = isMultipleFiles ? getSize(itemData.reduce(function (accumulator, currentObject) {\n            return accumulator + (currentObject.size || 0);\n          }, 0)) : getSize(details.size);\n          var path = parent.pathNames.includes(details.name) ? parent.pathNames.join('/') : parent.pathNames.join('/') + '/' + details.name;\n          parent.responseData.details = Object.assign({\n            location: isMultipleFiles ? null : path,\n            multipleFiles: isMultipleFiles,\n            name: itemNames.join(', '),\n            size: totalSize\n          }, isMultipleFiles ? {} : {\n            created: details.dateCreated,\n            isFile: details.isFile,\n            modified: details.dateModified,\n            permission: details.permission\n          });\n        }\n        performReadOperation(parent, parent.responseData, fn, data, event, operation, targetPath, beforeSendArgs);\n        return;\n      }\n      var ajax = new Ajax({\n        url: getValue('url', beforeSendArgs.ajaxSettings),\n        type: getValue('type', beforeSendArgs.ajaxSettings),\n        mode: getValue('mode', beforeSendArgs.ajaxSettings),\n        dataType: getValue('dataType', beforeSendArgs.ajaxSettings),\n        contentType: getValue('contentType', beforeSendArgs.ajaxSettings),\n        data: getValue('data', beforeSendArgs.ajaxSettings),\n        beforeSend: getValue('beforeSend', beforeSendArgs.ajaxSettings),\n        onSuccess: function (result) {\n          if (isNOU(result)) {\n            var result_1 = {\n              error: {\n                fileExists: null,\n                message: getLocaleText(parent, 'Server-Error') + ' ' + parent.ajaxSettings.url,\n                code: '406'\n              },\n              files: null\n            };\n            triggerAjaxFailure(parent, beforeSendArgs, fn, result_1, event, operation, targetPath);\n            return;\n          }\n          if (typeof result === 'string') {\n            result = JSON.parse(result);\n          }\n          performReadOperation(parent, result, fn, data, event, operation, targetPath, beforeSendArgs);\n        },\n        onFailure: function () {\n          var result = {\n            files: null,\n            error: {\n              code: '404',\n              message: getLocaleText(parent, 'Network-Error') + ' ' + parent.ajaxSettings.url,\n              fileExists: null\n            }\n          };\n          triggerAjaxFailure(parent, beforeSendArgs, fn, result, event, operation, targetPath);\n        }\n      });\n      ajax.send();\n    }\n  });\n}\n/**\n * Function to get file size.\n *\n * @param {number} size - specifies the size.\n * @returns {string} - returns the size.\n * @private\n */\nfunction getSize(size) {\n  var hz;\n  if (size < 1024) {\n    hz = size + ' B';\n  } else if (size < 1024 * 1024) {\n    hz = (size / 1024).toFixed(2) + ' KB';\n  } else if (size < 1024 * 1024 * 1024) {\n    hz = (size / 1024 / 1024).toFixed(2) + ' MB';\n  } else {\n    hz = (size / 1024 / 1024 / 1024).toFixed(2) + ' GB';\n  }\n  return hz;\n}\n/**\n * Function to perform read operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {Function} fn - specifies the function.\n * @param {Object} data - specifies the data.\n * @param {string} event - specifies the event.\n * @param {string} operation - specifies the operation.\n * @param {string} targetPath - specifies the targetPath.\n * @param {BeforeSendEventArgs} beforeSendArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction performReadOperation(parent, result, fn, data, event, operation, targetPath, beforeSendArgs) {\n  parent.notify(events.afterRequest, {\n    action: 'success'\n  });\n  var id = parent.expandedId ? parent.expandedId : parent.pathId[parent.pathId.length - 1];\n  if (!isNOU(result.cwd) && getValue('action', data) === 'read') {\n    result.cwd.name = parent.pathId.length === 1 ? parent.rootAliasName || result.cwd.name : result.cwd.name;\n    setValue('_fm_id', id, result.cwd);\n    setValue(id, result.cwd, parent.feParent);\n    if (!isNOU(result.files) || result.error.code === '401') {\n      if ((event === 'finalize-end' || event === 'initial-end') && parent.pathNames.length === 0) {\n        var root = getValue(parent.pathId[0], parent.feParent);\n        parent.pathNames[0] = getValue('name', root);\n        parent.hasId = !isNOU(getValue('id', root));\n      }\n      if (event === 'finalize-end') {\n        generatePath(parent);\n      }\n    }\n  }\n  var intl = new Internationalization(parent.locale);\n  if (!isNOU(result.files)) {\n    setDateObject(result.files, intl, getDateFormat(parent));\n    for (var i = 0, len = result.files.length; i < len; i++) {\n      var item = result.files[i];\n      setValue('_fm_iconClass', fileType(item), item);\n    }\n    if (getValue('action', data) === 'read') {\n      setNodeId(result, id);\n      setValue(id, result.files, parent.feFiles);\n    }\n  }\n  if (!isNOU(result.details) && !isNOU(parent.rootAliasName)) {\n    var rootName = parent.rootAliasName || getValue('name', result.details);\n    var location_1 = getValue('location', result.details).replace(new RegExp('/', 'g'), '\\\\');\n    if (getValue('path', data) === '/' || parent.hasId && getValue('path', data).match(/[/]/g).length === 1) {\n      if (getValue('names', data).length === 0) {\n        setValue('name', rootName, result.details);\n        location_1 = rootName;\n      } else {\n        location_1 = location_1.replace(location_1.substring(0, location_1.indexOf('\\\\')), rootName);\n      }\n    } else {\n      location_1 = location_1.replace(location_1.substring(0, location_1.indexOf('\\\\')), rootName);\n    }\n    setValue('location', location_1, result.details);\n  }\n  fn(parent, result, event, operation, targetPath);\n  if (!isNOU(result.files) && (event === 'path-changed' || event === 'finalize-end' || event === 'open-end' || event === 'drop-path')) {\n    parent.notify(events.searchTextChange, result);\n  }\n  if (typeof getValue('onSuccess', beforeSendArgs.ajaxSettings) === 'function') {\n    getValue('onSuccess', beforeSendArgs.ajaxSettings)();\n  }\n}\n/**\n * Function to copy operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {string} target - specifies the target.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nfunction copyFolderItems(parent, data, target, itemName) {\n  var newObject = createNewItem(data, target, itemName, true);\n  parent.fileSystemData.push(newObject);\n  parent.pasteNodes.push(newObject.id);\n  var copiedItems = filterByParent(parent, data.id);\n  for (var i = 0; i < copiedItems.length; i++) {\n    copyFolderItems(parent, copiedItems[i], newObject, null);\n  }\n}\n/**\n * Function for trigger Ajax failure in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {BeforeSendEventArgs} beforeSendArgs - specifies the beforeSendArgs.\n * @param {Function} fn - specifies the function.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @param {string} operation - specifies the operation.\n * @param {string} targetPath - specifies the targetPath.\n * @returns {void}\n * @private\n */\nfunction triggerAjaxFailure(parent, beforeSendArgs, fn, result, event, operation, targetPath) {\n  parent.notify(events.afterRequest, {\n    action: 'failure'\n  });\n  fn(parent, result, event, operation, targetPath);\n  if (typeof getValue('onFailure', beforeSendArgs.ajaxSettings) === 'function') {\n    getValue('onFailure', beforeSendArgs.ajaxSettings)();\n  }\n}\n/**\n * Function for read success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @returns {void}\n * @private\n */\nfunction readSuccess(parent, result, event) {\n  try {\n    if (!isNOU(result.files)) {\n      parent.notify(event, result);\n      parent.notify(events.selectionChanged, {});\n      var args = {\n        action: 'read',\n        result: result\n      };\n      parent.trigger('success', args);\n    } else {\n      if (!isNOU(result.error) && result.error.code === '401') {\n        result.files = [];\n        parent.notify(event, result);\n        parent.notify(events.selectionChanged, {});\n      }\n      onFailure(parent, result, 'read');\n      parent.setProperties({\n        path: parent.oldPath\n      }, true);\n      parent.pathNames.pop();\n    }\n  } catch (error) {\n    handleCatchError(parent, error, 'read');\n    parent.setProperties({\n      path: parent.oldPath\n    }, true);\n    parent.pathNames.pop();\n  }\n  if (parent.isDragDrop && parent.isDropEnd) {\n    if (parent.droppedObjects.length !== 0) {\n      var args = {\n        fileDetails: parent.droppedObjects\n      };\n      parent.trigger('fileDropped', args);\n    }\n    parent.isDropEnd = parent.isDragDrop = false;\n  }\n}\n/**\n * Function for filter success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction filterSuccess(parent, result, event, action) {\n  try {\n    if (!isNOU(result.files)) {\n      parent.notify(event, result);\n      var args = {\n        action: action,\n        result: result\n      };\n      parent.trigger('success', args);\n    } else {\n      onFailure(parent, result, action);\n    }\n  } catch (error) {\n    handleCatchError(parent, error, action);\n  }\n}\n/* istanbul ignore next */\n/**\n * Function for create success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nfunction createSuccess(parent, result, itemName) {\n  try {\n    if (!isNOU(result.files)) {\n      if (parent.dialogObj && parent.dialogObj.visible) {\n        parent.dialogObj.hide();\n      }\n      parent.createdItem = isFileSystemData(parent) ? result.files[result.files.length - 1] : result.files[0];\n      parent.breadcrumbbarModule.searchObj.value = '';\n      var createEventArgs = {\n        folderName: itemName,\n        path: parent.path,\n        parentFolder: parent.itemData\n      };\n      parent.trigger('folderCreate', createEventArgs);\n      var args = {\n        action: 'create',\n        result: result\n      };\n      parent.trigger('success', args);\n      parent.itemData = [getPathObject(parent)];\n      read(parent, events.createEnd, parent.path);\n    } else {\n      if (result.error.code === '400') {\n        if (parent.dialogObj && parent.dialogObj.visible) {\n          var ele = select('#newname', parent.dialogObj.element);\n          var error = getLocaleText(parent, 'Validation-NewFolder-Exists').replace('{0}', '\"' + ele.value + '\"');\n          ele.parentElement.nextElementSibling.innerHTML = error;\n        } else {\n          var result_2 = {\n            files: null,\n            error: {\n              code: '400',\n              message: getLocaleText(parent, 'Validation-NewFolder-Exists').replace('{0}', '\"' + itemName + '\"'),\n              fileExists: null\n            }\n          };\n          createDialog(parent, 'Error', result_2);\n        }\n        var args = {\n          action: 'create',\n          error: result.error\n        };\n        parent.trigger('failure', args);\n      } else {\n        if (parent.dialogObj && parent.dialogObj.visible) {\n          parent.dialogObj.hide();\n        }\n        onFailure(parent, result, 'create');\n      }\n    }\n  } catch (error) {\n    if (parent.dialogObj && parent.dialogObj.visible) {\n      parent.dialogObj.hide();\n    }\n    handleCatchError(parent, error, 'create');\n  }\n}\n/* istanbul ignore next */\n/**\n * Function to rename the folder/file in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @returns {void}\n * @private\n */\nfunction renameSuccess(parent, result) {\n  try {\n    if (!isNOU(result.files)) {\n      if (!isNOU(parent.dialogObj)) {\n        parent.dialogObj.hide();\n      }\n      var args = {\n        action: 'rename',\n        result: result\n      };\n      parent.trigger('success', args);\n      parent.renamedItem = Array.isArray(result.files) ? result.files[0] : result.files;\n      var renameEventArgs = {\n        newName: parent.renamedItem.name,\n        itemData: [parent.renamedItem],\n        path: parent.path\n      };\n      parent.trigger('rename', renameEventArgs);\n      if (parent.activeModule === 'navigationpane') {\n        var pathObject = getPathObject(parent);\n        var pathLevel = parent.pathId[parent.pathId.length - 1].split('_').length - 2;\n        parent.pathId.pop();\n        parent.itemData = [getValue(parent.pathId[parent.pathId.length - 1], parent.feParent)];\n        read(parent, events.renameEndParent, getValue('filterPath', parent.renamedItem).replace(/\\\\/g, '/'));\n        if (!isNOU(pathObject) && parent.pathNames.length > 1 && pathLevel <= parent.pathNames.length - 1) {\n          parent.pathNames[pathLevel] = parent.renameText;\n          if (!parent.hasId) {\n            parent.setProperties({\n              path: \"/\" + parent.pathNames.slice(1).join('/') + \"/\"\n            }, true);\n          }\n        }\n        parent.itemData = parent.navigationpaneModule.previousSelected.length > 0 ? parent.navigationpaneModule.treeObj.getTreeData(parent.navigationpaneModule.previousSelected[0]) : parent.itemData;\n        read(parent, events.pathChanged, parent.path);\n        parent.itemData[0] = parent.renamedItem;\n        parent.renamedItem = null;\n      } else {\n        parent.itemData = [getPathObject(parent)];\n        if (parent.breadcrumbbarModule.searchObj.value !== '') {\n          Search(parent, events.renameEnd, parent.path, parent.searchWord, parent.showHiddenItems, !parent.searchSettings.ignoreCase);\n        } else {\n          if (parent.isFiltered) {\n            filter(parent, events.renameEnd);\n          } else {\n            read(parent, events.renameEnd, parent.path);\n          }\n        }\n      }\n    } else {\n      if (result.error.code === '400' && parent.dialogObj && parent.dialogObj.visible) {\n        var ele = select('#rename', parent.dialogObj.element);\n        var error = getLocaleText(parent, 'Validation-Rename-Exists').replace('{0}', '\"' + parent.currentItemText + '\"');\n        error = error.replace('{1}', '\"' + ele.value + '\"');\n        ele.parentElement.nextElementSibling.innerHTML = error;\n        var args = {\n          action: 'rename',\n          error: result.error\n        };\n        parent.trigger('failure', args);\n      } else {\n        if (!isNOU(parent.dialogObj)) {\n          parent.dialogObj.hide();\n        }\n        onFailure(parent, result, 'rename');\n      }\n    }\n  } catch (error) {\n    if (!isNOU(parent.dialogObj)) {\n      parent.dialogObj.hide();\n    }\n    handleCatchError(parent, error, 'rename');\n  }\n}\n/* istanbul ignore next */\n/**\n * Function to create new folder in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nfunction pasteSuccess(parent, result, path, operation) {\n  try {\n    var moveorcopyEventArgs = {\n      itemData: result.files,\n      isCopy: operation === 'copy' ? true : false,\n      path: path,\n      targetData: parent.itemData[0],\n      targetPath: parent.path\n    };\n    parent.trigger('move', moveorcopyEventArgs);\n    if (result.error && result.error.fileExists) {\n      parent.fileLength = 0;\n      if (!isNOU(result.files)) {\n        parent.isPasteError = true;\n        doPasteUpdate(parent, operation, result);\n      }\n      createExtDialog(parent, 'DuplicateItems', result.error.fileExists);\n      if (result.error.code === '404') {\n        createDialog(parent, 'Error', result);\n      }\n    } else if (!result.error && !isNOU(result.files)) {\n      parent.isPasteError = false;\n      doPasteUpdate(parent, operation, result);\n    } else if (result.error && !isNOU(result.files)) {\n      parent.isPasteError = true;\n      doPasteUpdate(parent, operation, result);\n      createDialog(parent, 'Error', result);\n    } else {\n      onFailure(parent, result, operation);\n    }\n  } catch (error) {\n    handleCatchError(parent, error, operation);\n  }\n}\n/**\n * Function to delete success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nfunction deleteSuccess(parent, result, path) {\n  try {\n    var deleteEventArgs = {\n      itemData: result.files,\n      path: path\n    };\n    parent.trigger('delete', deleteEventArgs);\n    if (!isNOU(result.files)) {\n      parent.setProperties({\n        path: path\n      }, true);\n      parent.itemData = [getPathObject(parent)];\n      read(parent, events.deleteEnd, parent.path);\n      if (result.error) {\n        onFailure(parent, result, 'delete');\n      } else {\n        var args = {\n          action: 'delete',\n          result: result\n        };\n        parent.trigger('success', args);\n      }\n    } else {\n      onFailure(parent, result, 'delete');\n    }\n  } catch (error) {\n    handleCatchError(parent, error, 'delete');\n  }\n}\n/**\n * Function for details success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nfunction detailsSuccess(\n// eslint:disable-next-line\nparent, result, path, operation) {\n  try {\n    if (!isNOU(result.details)) {\n      createDialog(parent, operation, null, result.details);\n      var args = {\n        action: 'details',\n        result: result\n      };\n      parent.trigger('success', args);\n    } else {\n      onFailure(parent, result, 'details');\n    }\n  } catch (error) {\n    handleCatchError(parent, error, 'details');\n  }\n}\n/**\n * Function for on failure event in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction onFailure(parent, result, action) {\n  createDialog(parent, 'Error', result);\n  var args = {\n    action: action,\n    error: result.error\n  };\n  parent.trigger('failure', args);\n}\n/**\n * Function for search in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} event - specifies the event.\n * @param {string} path - specifies the path.\n * @param {string} searchString - specifies the search string.\n * @param {boolean} showHiddenItems - specifies the hidden items.\n * @param {boolean} caseSensitive - specifies the casing of search text.\n * @returns {void}\n * @private\n */\nexport function Search(parent, event, path, searchString, showHiddenItems, caseSensitive) {\n  var data = {\n    action: 'search',\n    path: path,\n    searchString: searchString,\n    showHiddenItems: showHiddenItems,\n    caseSensitive: caseSensitive,\n    data: parent.itemData\n  };\n  createAjax(parent, data, searchSuccess, event);\n}\n/* istanbul ignore next */\n/**\n * Function for search success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @returns {void}\n * @private\n */\nfunction searchSuccess(parent, result, event) {\n  try {\n    if (!isNOU(result.files)) {\n      parent.notify(event, result);\n      var args = {\n        action: 'search',\n        result: result\n      };\n      parent.trigger('success', args);\n    } else {\n      onFailure(parent, result, 'search');\n    }\n  } catch (error) {\n    handleCatchError(parent, error, 'search');\n  }\n}\n/* istanbul ignore next */\n/**\n * Function for download in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string[]} items - specifies the items.\n * @returns {void}\n * @private\n */\nexport function Download(parent, path, items) {\n  var downloadUrl = parent.ajaxSettings.downloadUrl ? parent.ajaxSettings.downloadUrl : parent.ajaxSettings.url;\n  var data = {\n    'action': 'download',\n    'path': path,\n    'names': items,\n    'data': parent.itemData\n  };\n  var ajaxSettings = {\n    url: downloadUrl,\n    type: 'POST',\n    contentType: 'application/json',\n    responseType: 'blob',\n    data: JSON.stringify(data),\n    onSuccess: null,\n    onFailure: null,\n    beforeSend: null\n  };\n  var eventArgs = {\n    data: data,\n    cancel: false,\n    useFormPost: true,\n    ajaxSettings: ajaxSettings\n  };\n  parent.trigger('beforeDownload', eventArgs, function (downloadArgs) {\n    if (!downloadArgs.cancel) {\n      if (downloadArgs.useFormPost) {\n        var form = createElement('form', {\n          id: parent.element.id + '_downloadForm',\n          attrs: {\n            action: downloadUrl,\n            method: 'post',\n            name: 'downloadForm',\n            'download': ''\n          }\n        });\n        var input = createElement('input', {\n          id: parent.element.id + '_hiddenForm',\n          attrs: {\n            name: 'downloadInput',\n            value: JSON.stringify(downloadArgs.data),\n            type: 'hidden'\n          }\n        });\n        form.appendChild(input);\n        parent.element.appendChild(form);\n        document.forms.namedItem('downloadForm').submit();\n        parent.element.removeChild(form);\n      } else {\n        try {\n          var contentDisposition_1;\n          var fileName_1;\n          var fetch_1 = new Fetch({\n            url: getValue('url', downloadArgs.ajaxSettings),\n            type: getValue('type', downloadArgs.ajaxSettings),\n            contentType: getValue('contentType', downloadArgs.ajaxSettings),\n            responseType: getValue('responseType', downloadArgs.ajaxSettings),\n            beforeSend: getValue('beforeSend', downloadArgs.ajaxSettings),\n            onLoad: function (e) {\n              contentDisposition_1 = e.headers.get('Content-Disposition');\n              if (contentDisposition_1) {\n                var filenameMatch = contentDisposition_1.match(/filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/);\n                var extractedFilename = filenameMatch && filenameMatch[1];\n                fileName_1 = extractedFilename ? extractedFilename.replace(/['\"]/g, '') : fileName_1;\n              } else {\n                fileName_1 = parent.itemData.length > 1 ? 'files.zip' : getValue('isFile', parent.itemData[0]) ? getValue('name', parent.itemData[0]) : getValue('name', parent.itemData[0]) + '.zip';\n              }\n            },\n            onSuccess: function (e) {\n              parent.trigger('success', downloadArgs);\n              var blob = e;\n              var blobUrl = URL.createObjectURL(blob);\n              var link = document.createElement('a');\n              link.href = blobUrl;\n              link.download = fileName_1;\n              document.body.appendChild(link);\n              link.click();\n              document.body.removeChild(link);\n            },\n            onFailure: function (e) {\n              var result = {\n                error: {\n                  code: e.status.toString(),\n                  message: getLocaleText(parent, 'Network-Error') + ' ' + parent.ajaxSettings.downloadUrl\n                }\n              };\n              createDialog(parent, 'Error', result);\n              parent.trigger('failure', downloadArgs);\n            }\n          });\n          fetch_1.send(JSON.stringify(downloadArgs.data));\n        } catch (error) {\n          handleCatchError(parent, error, 'download');\n        }\n      }\n    }\n  });\n}\n/**\n * Function for on catch handler in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {any} error - specifies the catch error.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction handleCatchError(parent, error, action) {\n  var errorResult = {\n    files: null,\n    error: {\n      message: error.message,\n      fileExists: null\n    }\n  };\n  onFailure(parent, errorResult, action);\n}","map":{"version":3,"names":["Ajax","Fetch","createElement","select","extend","Internationalization","isNullOrUndefined","isNOU","setValue","getValue","events","createDialog","createExtDialog","fileType","setNodeId","getLocaleText","setDateObject","doPasteUpdate","getPathObject","generatePath","getAccessDetails","getUid","read","parent","event","path","itemData","i","length","data","action","showHiddenItems","createAjax","readSuccess","createFolder","itemName","name","createSuccess","filter","filterData","filterDataVal","filterSuccess","rename","itemNewName","newName","breadcrumbbarModule","searchObj","element","value","isFiltered","currentItemText","fPath","filterPath","hasId","replace","showFileExtension","renameSuccess","paste","names","targetPath","pasteOperation","renameItems","actionRecords","targetData","renameFiles","destinationPath","pasteSuccess","Delete","items","operation","deleteSuccess","GetDetails","detailsSuccess","getDateFormat","columns","detailsViewSettings","dateFormat","field","format","toString","isFileSystemData","fileSystemData","ajaxSettings","url","isFileExists","isExists","some","item","findIndexById","id","index","findIndex","String","filterById","filterByParent","parentId","createNewItem","target","isCopy","newItem","key","Object","prototype","hasOwnProperty","call","currentDate","Date","folderPath","assign","dateCreated","dateModified","hasChild","isFile","size","type","createErrorObject","message","code","fileName","responseData","cwd","details","error","fileExists","files","triggerFolderCreation","eventArgs","createEventArgs","folderName","cancel","parentFolder","trigger","args","data_1","newObject","push","triggerDeleteOperation","deleteEventArgs","forEach","splice","subItems","obj","includes","subItem","triggerRenameOperation","renameEventArgs","fileData","triggerMoveOrCopyOperation","moveEventArgs","itemPermission","pathPermission","file_1","pasteNodes","folderSubItems_1","copiedFolders","split","name_1","existingFileCount","copyFolderItems","getTargetFiles","currItem","parentID","dropData","dropPath","pathArray","triggerSearchOperation","searchEventArgs","searchResults","searchText","caseSensitive","triggerClientEvents","fn","mode","dataType","contentType","JSON","stringify","onSuccess","onFailure","beforeSend","beforeSendArgs","notify","beforeRequest","filePath","idValue","renamedItem","targetModule","isFileOperation","rootId","map","isMultipleFiles","itemNames","totalSize","getSize","reduce","accumulator","currentObject","pathNames","join","location","multipleFiles","created","modified","permission","performReadOperation","ajax","result","result_1","triggerAjaxFailure","parse","send","hz","toFixed","afterRequest","expandedId","pathId","rootAliasName","feParent","root","intl","locale","len","feFiles","rootName","location_1","RegExp","match","substring","indexOf","searchTextChange","copiedItems","selectionChanged","setProperties","oldPath","pop","handleCatchError","isDragDrop","isDropEnd","droppedObjects","fileDetails","dialogObj","visible","hide","createdItem","createEnd","ele","parentElement","nextElementSibling","innerHTML","result_2","Array","isArray","activeModule","pathObject","pathLevel","renameEndParent","renameText","slice","navigationpaneModule","previousSelected","treeObj","getTreeData","pathChanged","Search","renameEnd","searchWord","searchSettings","ignoreCase","moveorcopyEventArgs","fileLength","isPasteError","deleteEnd","searchString","searchSuccess","Download","downloadUrl","responseType","useFormPost","downloadArgs","form","attrs","method","input","appendChild","document","forms","namedItem","submit","removeChild","contentDisposition_1","fileName_1","fetch_1","onLoad","e","headers","get","filenameMatch","extractedFilename","blob","blobUrl","URL","createObjectURL","link","href","download","body","click","status","errorResult"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-filemanager/src/file-manager/common/operations.js"],"sourcesContent":["import { Ajax, Fetch, createElement, select, extend, Internationalization } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined as isNOU, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { createDialog, createExtDialog } from '../pop-up/dialog';\nimport { fileType, setNodeId, getLocaleText, setDateObject, doPasteUpdate, getPathObject } from '../common/utility';\nimport { generatePath, getAccessDetails } from '../common/utility';\nimport { getUid } from '@syncfusion/ej2-grids';\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Function to read the content from given path in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} event - specifies the event.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nexport function read(parent, event, path) {\n    var itemData = parent.itemData;\n    for (var i = 0; i < itemData.length; i++) {\n        if (isNOU(getValue('hasChild', itemData[i]))) {\n            setValue('hasChild', false, itemData[i]);\n        }\n    }\n    var data = { action: 'read', path: path, showHiddenItems: parent.showHiddenItems, data: itemData };\n    createAjax(parent, data, readSuccess, event);\n}\n/**\n * Function to create new folder in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nexport function createFolder(parent, itemName) {\n    var data = { action: 'create', path: parent.path, name: itemName, data: parent.itemData };\n    createAjax(parent, data, createSuccess, itemName);\n}\n/**\n * Function to filter the files in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string}  event - specifies the event.\n * @returns {void}\n * @private\n */\nexport function filter(parent, event) {\n    var data = { action: 'filter', path: parent.path, showHiddenItems: parent.showHiddenItems, data: [getPathObject(parent)] };\n    var filterData;\n    var filterDataVal = parent.filterData ? extend(filterData, data, parent.filterData) : data;\n    createAjax(parent, filterDataVal, filterSuccess, event, getValue('action', filterDataVal));\n}\n/**\n * Function to rename the folder/file in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string} itemNewName - specifies the item's new name.\n * @returns {void}\n * @private\n */\nexport function rename(parent, path, itemNewName) {\n    var name;\n    var newName;\n    if (parent.breadcrumbbarModule.searchObj.element.value === '' && !parent.isFiltered) {\n        name = parent.currentItemText;\n        newName = itemNewName;\n    }\n    else {\n        var fPath = parent.filterPath;\n        if (parent.hasId) {\n            name = parent.currentItemText;\n            newName = itemNewName;\n        }\n        else {\n            fPath = fPath.replace(/\\\\/g, '/');\n            name = fPath.replace(path, '') + parent.currentItemText;\n            newName = fPath.replace(path, '') + itemNewName;\n        }\n    }\n    var data = {\n        action: 'rename', path: path, name: name, newName: newName, data: parent.itemData, showFileExtension: parent.showFileExtension\n    };\n    createAjax(parent, data, renameSuccess, path);\n}\n/**\n * Function to paste file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string[]} names - specifies the names.\n * @param {string} targetPath - specifies the target path.\n * @param {string} pasteOperation - specifies the paste operation.\n * @param {string[]} renameItems - specifies the rename items.\n * @param {Object[]} actionRecords - specifies the action records.\n * @returns {void}\n * @private\n */\nexport function paste(parent, path, names, targetPath, pasteOperation, renameItems, actionRecords) {\n    var data = {\n        action: pasteOperation, path: path, targetData: parent.itemData[0],\n        targetPath: targetPath, names: names, renameFiles: renameItems, data: actionRecords\n    };\n    parent.destinationPath = targetPath;\n    createAjax(parent, data, pasteSuccess, path, pasteOperation, targetPath);\n}\n/**\n * Function to delete file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string[]} items - specifies the items.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nexport function Delete(parent, items, path, operation) {\n    var data = { action: operation, path: path, names: items, data: parent.itemData };\n    createAjax(parent, data, deleteSuccess, path);\n}\n/* istanbul ignore next */\n/**\n * Function to get details of file's and folder's in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string[]} names - specifies the names.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation data.\n * @returns {void}\n * @private\n */\nexport function GetDetails(parent, names, path, operation) {\n    var data = { action: operation, path: path, names: names, data: parent.itemData };\n    createAjax(parent, data, detailsSuccess, path, operation);\n}\n/**\n * Function for getDateFormat in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nfunction getDateFormat(parent) {\n    var columns = parent.detailsViewSettings.columns;\n    var dateFormat;\n    if (!columns) {\n        return null;\n    }\n    for (var i = 0; i < columns.length; i++) {\n        if (columns[i].field === '_fm_modified') {\n            if (!isNOU(columns[i].format)) {\n                dateFormat = columns[i].format.toString();\n            }\n            break;\n        }\n    }\n    return dateFormat;\n}\n/**\n * Checks whether fileSystemData is enabled.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {boolean} - returns the boolean value.\n */\nexport function isFileSystemData(parent) {\n    var isFileSystemData = parent.fileSystemData.length >= 0 && isNOU(parent.ajaxSettings.url);\n    return isFileSystemData;\n}\n/**\n * Function to check whether file already exist or not.\n *\n * @param {Record<string, any>} fileSystemData - specifies the file data.\n * @param {string} name - specifies the name.\n * @returns {boolean} - returns the boolean value.\n * @private\n */\nfunction isFileExists(fileSystemData, name) {\n    var isExists = fileSystemData.some(function (item) { return item.name === name; });\n    return isExists;\n}\n/**\n * Function to find the index value of a file or folder.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number} id - specifies the id.\n * @returns {number} - returns the index value.\n * @private\n */\nfunction findIndexById(parent, id) {\n    var index = parent.fileSystemData.findIndex(function (item) {\n        return !isNOU(item) && String(item.id) === String(id);\n    });\n    return index;\n}\n/**\n * Function to get the entire data of a file or folder using id value.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number | string} id - specifies the id.\n * @returns {Object} - returns the data.\n * @private\n */\nfunction filterById(parent, id) {\n    var data = parent.fileSystemData.filter(function (item) { return String(item.id) === String(id); })[0];\n    return data;\n}\n/**\n * Function to get the entire data of a file or folder for a parent.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {number | string} parentId - specifies the parent id.\n * @returns {Object[]} - returns the data.\n * @private\n */\nfunction filterByParent(parent, parentId) {\n    var data = parent.fileSystemData.filter(function (item) { return String(item.parentId) === String(parentId); });\n    return data;\n}\n/**\n * Function to create a new copied file or folder.\n *\n * @param {Record<string, any>} data - specifies the file or folder data.\n * @param {Record<string, any>} target - specifies the target data.\n * @param {string} itemName - specifies the item name.\n * @param {boolean} isCopy - specifies the copy operation.\n * @returns {Record<string, Object>} - returns the data.\n * @private\n */\nfunction createNewItem(data, target, itemName, isCopy) {\n    var newItem = {};\n    //Construct the new folder details.\n    for (var key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            newItem[key] = null;\n        }\n    }\n    var currentDate = new Date();\n    var folderPath = target.id !== 0 ? target.filterPath + target.name : '\\\\';\n    Object.assign(newItem, {\n        dateCreated: currentDate,\n        dateModified: currentDate,\n        filterPath: folderPath,\n        hasChild: isCopy ? data.hasChild : false,\n        id: getUid(itemName === null ? data.name : itemName),\n        isFile: isCopy ? data.isFile : false,\n        name: itemName === null ? data.name : itemName,\n        parentId: target.id,\n        size: isCopy ? data.size : 0,\n        type: isCopy ? data.type : ''\n    });\n    return newItem;\n}\n/**\n * Function to create an error response.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} message - specifies the error message.\n * @param {string} code - specifies the error code.\n * @param {Object[]} fileName - specifies the file name.\n * @returns {void}\n * @private\n */\nfunction createErrorObject(parent, message, code, fileName) {\n    parent.responseData = {\n        cwd: null,\n        details: null,\n        error: {\n            code: code,\n            message: message,\n            fileExists: fileName != null ? fileName : null\n        },\n        files: null\n    };\n}\n/**\n * Function to trigger folder creation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerFolderCreation(parent, data, eventArgs) {\n    var createEventArgs = {\n        folderName: getValue('name', data),\n        cancel: false,\n        path: getValue('path', data),\n        parentFolder: getValue('data', data)\n    };\n    parent.trigger('beforeFolderCreate', createEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            if (!isFileExists(parent.fileSystemData, args.folderName)) {\n                var data_1 = args.parentFolder[0];\n                var newObject = createNewItem(data_1, data_1, args.folderName, false);\n                parent.fileSystemData.push(newObject);\n            }\n            else {\n                var message = 'A file or folder with the name ' + args.folderName + ' already exists.';\n                createErrorObject(parent, message, '400', null);\n            }\n        }\n    });\n}\n/**\n * Function to trigger delete operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerDeleteOperation(parent, data, eventArgs) {\n    var deleteEventArgs = {\n        cancel: false,\n        itemData: getValue('data', data),\n        path: getValue('path', data)\n    };\n    parent.trigger('beforeDelete', deleteEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            args.itemData.forEach(function (itemData) {\n                var index = findIndexById(parent, itemData.id);\n                if (index !== -1) {\n                    parent.fileSystemData.splice(index, 1);\n                }\n                if (!itemData.isFile) {\n                    var subItems = parent.fileSystemData.filter(function (obj) { return obj.filterPath.includes(itemData.name); });\n                    subItems.forEach(function (subItem) {\n                        var index = findIndexById(parent, subItem.id);\n                        if (index !== -1) {\n                            parent.fileSystemData.splice(index, 1);\n                        }\n                    });\n                }\n            });\n        }\n    });\n}\n/**\n * Function to trigger rename operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerRenameOperation(parent, data, eventArgs) {\n    var renameEventArgs = {\n        cancel: false,\n        newName: getValue('newName', data),\n        itemData: getValue('data', data),\n        path: getValue('path', data)\n    };\n    parent.trigger('beforeRename', renameEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            if (!isFileExists(parent.fileSystemData, args.newName)) {\n                var fileData = filterById(parent, args.itemData[0].id);\n                fileData.name = args.newName;\n            }\n            else {\n                var message = 'Cannot rename' + args.itemData[0].name + 'to' + args.newName + ': destination already exists.';\n                createErrorObject(parent, message, '400', null);\n            }\n        }\n    });\n}\n/**\n * Function to trigger move or copy operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerMoveOrCopyOperation(parent, data, eventArgs) {\n    var moveEventArgs = {\n        cancel: false,\n        itemData: getValue('data', data),\n        isCopy: getValue('action', data) === 'copy' ? true : false,\n        path: getValue('path', data),\n        targetData: getValue('targetData', data),\n        targetPath: getValue('targetPath', data)\n    };\n    parent.trigger('beforeMove', moveEventArgs, function (args) {\n        if (args.cancel) {\n            eventArgs.cancel = true;\n            return;\n        }\n        if (isFileSystemData(parent)) {\n            var message = 'File Already Exists';\n            var action = getValue('action', data);\n            var itemPermission = getAccessDetails(parent, args.itemData, action, false);\n            var pathPermission = getAccessDetails(parent, [args.targetData], action, true);\n            var file_1 = [];\n            parent.pasteNodes = [];\n            if (itemPermission === '' && pathPermission === '') {\n                if (args.isCopy) {\n                    var folderSubItems_1 = filterByParent(parent, args.targetData.id);\n                    var copiedFolders = args.itemData;\n                    copiedFolders.forEach(function (itemData) {\n                        if (!isFileExists(folderSubItems_1, itemData.name) || getValue('renameFiles', data).length > 0) {\n                            if (getValue('renameFiles', data).length > 0) {\n                                var names = itemData.name.split('.');\n                                var name_1 = itemData.name.includes('.') ? names[0] + '(' + parent.existingFileCount + ').' + names[1] : names[0] + '(' + parent.existingFileCount + ')';\n                                copyFolderItems(parent, itemData, args.targetData, name_1);\n                                parent.responseData.error = null;\n                                parent.existingFileCount++;\n                                return;\n                            }\n                            copyFolderItems(parent, itemData, args.targetData, null);\n                        }\n                        else {\n                            file_1.push(itemData.name);\n                        }\n                    });\n                    if (file_1.length > 0) {\n                        createErrorObject(parent, message, '400', file_1);\n                    }\n                    return;\n                }\n                var target = args.targetData;\n                var getTargetFiles = filterByParent(parent, target.id);\n                for (var i = 0; i < args.itemData.length; i++) {\n                    var currItem = args.itemData[i];\n                    if (!isFileExists(getTargetFiles, currItem.name) || getValue('renameFiles', data).length > 0) {\n                        if (!target.hasChild) {\n                            target.hasChild = !currItem.isFile;\n                        }\n                        if (!currItem.isFile) {\n                            //Check whether the source folder include other sub folders or not.\n                            var subItems = currItem.parentId !== 0\n                                ? filterByParent(parent, currItem.parentID) : [];\n                            var itemData = filterById(parent, currItem.parentId);\n                            itemData.hasChild = subItems.length > 1 ? true : false;\n                        }\n                        var fileData = filterById(parent, currItem.id);\n                        if (getValue('renameFiles', data).length > 0) {\n                            var names = currItem.name.split('.');\n                            currItem.name = currItem.name.includes('.') ? names[0] + '(' + parent.existingFileCount + ').' + names[1] : names[0] + '(' + parent.existingFileCount + ')';\n                            fileData.name = currItem.name;\n                            parent.responseData.error = null;\n                            parent.existingFileCount++;\n                            parent.dropData = target;\n                            parent.dropPath = args.path;\n                            var pathArray = args.targetPath.replace(/^\\/|\\/$/g, '').split('/');\n                            target = filterById(parent, pathArray[pathArray.length - 1]);\n                        }\n                        fileData.parentId = target.id;\n                        fileData.filterPath = target.id === 0 ? '\\\\' : target.filterPath + target.name + '\\\\';\n                    }\n                    else {\n                        file_1.push(currItem.name);\n                    }\n                }\n                if (file_1.length > 0) {\n                    createErrorObject(parent, message, '400', file_1);\n                }\n            }\n        }\n    });\n}\n/**\n * Function to trigger search operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerSearchOperation(parent, data, eventArgs) {\n    var searchEventArgs = {\n        searchResults: getValue('data', data),\n        cancel: false,\n        path: getValue('path', data),\n        searchText: getValue('searchString', data),\n        caseSensitive: getValue('caseSensitive', data),\n        showHiddenItems: getValue('showHiddenItems', data)\n    };\n    parent.trigger('search', searchEventArgs, function (args) {\n        setValue('data', args.searchResults, data);\n        if (args.cancel) {\n            eventArgs.cancel = true;\n        }\n    });\n}\n/**\n * Function to trigger client side events.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {BeforeSendEventArgs} eventArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction triggerClientEvents(parent, data, eventArgs) {\n    switch (getValue('action', data)) {\n        case 'create': {\n            triggerFolderCreation(parent, data, eventArgs);\n            break;\n        }\n        case 'delete': {\n            triggerDeleteOperation(parent, data, eventArgs);\n            break;\n        }\n        case 'rename': {\n            triggerRenameOperation(parent, data, eventArgs);\n            break;\n        }\n        case 'move':\n        case 'copy': {\n            triggerMoveOrCopyOperation(parent, data, eventArgs);\n            break;\n        }\n        case 'search': {\n            triggerSearchOperation(parent, data, eventArgs);\n            break;\n        }\n    }\n}\n/**\n * Creates an AJAX request for the file manager.\n *\n * @param {IFileManager} parent - The parent file manager instance.\n * @param {Object} data - The data object for the AJAX request.\n * @param {Function} fn - The callback function to be executed after the AJAX request.\n * @param {string} [event] - The event type for the AJAX request.\n * @param {string} [operation] - The operation type for the AJAX request.\n * @param {string} [targetPath] - The target path for the AJAX request.\n * @returns {void}\n * @private\n */\nfunction createAjax(parent, data, fn, event, operation, targetPath) {\n    var ajaxSettings = {\n        url: parent.ajaxSettings.url,\n        type: 'POST',\n        mode: true,\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify(data),\n        onSuccess: null,\n        onFailure: null,\n        beforeSend: null\n    };\n    var eventArgs = { action: getValue('action', data), ajaxSettings: ajaxSettings, cancel: false };\n    triggerClientEvents(parent, data, eventArgs);\n    parent.trigger('beforeSend', eventArgs, function (beforeSendArgs) {\n        if (!beforeSendArgs.cancel) {\n            parent.notify(events.beforeRequest, {});\n            if (isFileSystemData(parent)) {\n                var filePath = event === 'node-expand' || event === 'finalize-end' || event === 'rename-end-parent'\n                    ? getValue('path', data) : parent.path;\n                var pathArray = filePath.replace(/^\\/|\\/$/g, '').split('/');\n                var idValue = event === 'rename-end-parent' || (event === 'path-changed' && getValue('data', data).length !== 0 && isNOU(parent.renamedItem))\n                    || (event === 'paste-end' && (parent.targetModule === 'largeiconsview' || parent.targetModule === 'detailsview'))\n                    ? getValue('data', data)[0].id : pathArray[pathArray.length - 1];\n                var action = getValue('action', data);\n                var isFileOperation = (action === 'move' || action === 'rename' || action === 'copy' || action === 'delete' || action === 'search') && event !== 'rename-end';\n                if (action === 'read' || action === 'create' || event === 'rename-end') {\n                    var rootId = parent.fileSystemData\n                        .filter(function (item) { return isNOU(item.parentId); })\n                        .length > 0\n                        ? parent.fileSystemData\n                            .filter(function (item) { return isNOU(item.parentId); })[0].id\n                        : 0;\n                    parent.responseData = {\n                        cwd: filterById(parent, parent.path === '/' && event !== 'node-expand' && event !== 'rename-end-parent' ? rootId : idValue),\n                        details: null,\n                        error: null,\n                        files: filterByParent(parent, parent.path === '/' && event !== 'node-expand' && event !== 'rename-end-parent' ? rootId : idValue)\n                    };\n                    if (isNOU(parent.responseData.cwd)) {\n                        var message = 'Cannot load empty data within the File Manager.';\n                        createErrorObject(parent, message, '400', null);\n                    }\n                }\n                else if (isFileOperation && parent.responseData.error === null) {\n                    var itemData = action === 'search' || action === 'delete' ? getValue('data', data) : [];\n                    if (itemData.length === 0) {\n                        if (action === 'copy') {\n                            itemData = parent.pasteNodes.map(function (item) { return filterById(parent, item); });\n                        }\n                        else {\n                            itemData = getValue('data', data).map(function (item) { return filterById(parent, item.id); });\n                        }\n                    }\n                    parent.responseData = {\n                        cwd: null,\n                        details: null,\n                        error: null,\n                        files: itemData\n                    };\n                }\n                else if (getValue('action', data) === 'details') {\n                    var itemData = getValue('data', data);\n                    var details = itemData[0];\n                    var isMultipleFiles = itemData.length > 1;\n                    var itemNames = itemData.map(function (item) { return item.name; });\n                    var totalSize = isMultipleFiles ? getSize(itemData.reduce(function (accumulator, currentObject) { return accumulator + (currentObject.size || 0); }, 0)) : getSize(details.size);\n                    var path = (parent.pathNames.includes(details.name) ? parent.pathNames.join('/') : parent.pathNames.join('/') + '/' + details.name);\n                    parent.responseData.details = Object.assign({\n                        location: isMultipleFiles ? null : path,\n                        multipleFiles: isMultipleFiles,\n                        name: itemNames.join(', '),\n                        size: totalSize\n                    }, isMultipleFiles ? {} : {\n                        created: details.dateCreated,\n                        isFile: details.isFile,\n                        modified: details.dateModified,\n                        permission: details.permission\n                    });\n                }\n                performReadOperation(parent, parent.responseData, fn, data, event, operation, targetPath, beforeSendArgs);\n                return;\n            }\n            var ajax = new Ajax({\n                url: getValue('url', beforeSendArgs.ajaxSettings),\n                type: getValue('type', beforeSendArgs.ajaxSettings),\n                mode: getValue('mode', beforeSendArgs.ajaxSettings),\n                dataType: getValue('dataType', beforeSendArgs.ajaxSettings),\n                contentType: getValue('contentType', beforeSendArgs.ajaxSettings),\n                data: getValue('data', beforeSendArgs.ajaxSettings),\n                beforeSend: getValue('beforeSend', beforeSendArgs.ajaxSettings),\n                onSuccess: function (result) {\n                    if (isNOU(result)) {\n                        var result_1 = {\n                            error: {\n                                fileExists: null,\n                                message: getLocaleText(parent, 'Server-Error') + ' ' + parent.ajaxSettings.url,\n                                code: '406'\n                            },\n                            files: null\n                        };\n                        triggerAjaxFailure(parent, beforeSendArgs, fn, result_1, event, operation, targetPath);\n                        return;\n                    }\n                    if (typeof (result) === 'string') {\n                        result = JSON.parse(result);\n                    }\n                    performReadOperation(parent, result, fn, data, event, operation, targetPath, beforeSendArgs);\n                },\n                onFailure: function () {\n                    var result = {\n                        files: null,\n                        error: {\n                            code: '404',\n                            message: getLocaleText(parent, 'Network-Error') + ' ' + parent.ajaxSettings.url,\n                            fileExists: null\n                        }\n                    };\n                    triggerAjaxFailure(parent, beforeSendArgs, fn, result, event, operation, targetPath);\n                }\n            });\n            ajax.send();\n        }\n    });\n}\n/**\n * Function to get file size.\n *\n * @param {number} size - specifies the size.\n * @returns {string} - returns the size.\n * @private\n */\nfunction getSize(size) {\n    var hz;\n    if (size < 1024) {\n        hz = size + ' B';\n    }\n    else if (size < 1024 * 1024) {\n        hz = (size / 1024).toFixed(2) + ' KB';\n    }\n    else if (size < 1024 * 1024 * 1024) {\n        hz = (size / 1024 / 1024).toFixed(2) + ' MB';\n    }\n    else {\n        hz = (size / 1024 / 1024 / 1024).toFixed(2) + ' GB';\n    }\n    return hz;\n}\n/**\n * Function to perform read operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {Function} fn - specifies the function.\n * @param {Object} data - specifies the data.\n * @param {string} event - specifies the event.\n * @param {string} operation - specifies the operation.\n * @param {string} targetPath - specifies the targetPath.\n * @param {BeforeSendEventArgs} beforeSendArgs - specifies the eventArgs.\n * @returns {void}\n * @private\n */\nfunction performReadOperation(parent, result, fn, data, event, operation, targetPath, beforeSendArgs) {\n    parent.notify(events.afterRequest, { action: 'success' });\n    var id = parent.expandedId ? parent.expandedId : parent.pathId[parent.pathId.length - 1];\n    if (!isNOU(result.cwd) && (getValue('action', data) === 'read')) {\n        result.cwd.name = (parent.pathId.length === 1) ? (parent.rootAliasName || result.cwd.name) : result.cwd.name;\n        setValue('_fm_id', id, result.cwd);\n        setValue(id, result.cwd, parent.feParent);\n        if (!isNOU(result.files) || result.error.code === '401') {\n            if ((event === 'finalize-end' || event === 'initial-end') && parent.pathNames.length === 0) {\n                var root = getValue(parent.pathId[0], parent.feParent);\n                parent.pathNames[0] = getValue('name', root);\n                parent.hasId = !isNOU(getValue('id', root));\n            }\n            if (event === 'finalize-end') {\n                generatePath(parent);\n            }\n        }\n    }\n    var intl = new Internationalization(parent.locale);\n    if (!isNOU(result.files)) {\n        setDateObject(result.files, intl, getDateFormat(parent));\n        for (var i = 0, len = result.files.length; i < len; i++) {\n            var item = result.files[i];\n            setValue('_fm_iconClass', fileType(item), item);\n        }\n        if (getValue('action', data) === 'read') {\n            setNodeId(result, id);\n            setValue(id, result.files, parent.feFiles);\n        }\n    }\n    if (!isNOU(result.details) && !isNOU(parent.rootAliasName)) {\n        var rootName = parent.rootAliasName || getValue('name', result.details);\n        var location_1 = getValue('location', result.details).replace(new RegExp('/', 'g'), '\\\\');\n        if ((getValue('path', data) === '/') || (parent.hasId && getValue('path', data).match(/[/]/g).length === 1)) {\n            if (getValue('names', data).length === 0) {\n                setValue('name', rootName, result.details);\n                location_1 = rootName;\n            }\n            else {\n                location_1 = location_1.replace(location_1.substring(0, location_1.indexOf('\\\\')), rootName);\n            }\n        }\n        else {\n            location_1 = location_1.replace(location_1.substring(0, location_1.indexOf('\\\\')), rootName);\n        }\n        setValue('location', location_1, result.details);\n    }\n    fn(parent, result, event, operation, targetPath);\n    if (!isNOU(result.files) && (event === 'path-changed' || event === 'finalize-end' || event === 'open-end' || event === 'drop-path')) {\n        parent.notify(events.searchTextChange, result);\n    }\n    if (typeof getValue('onSuccess', beforeSendArgs.ajaxSettings) === 'function') {\n        getValue('onSuccess', beforeSendArgs.ajaxSettings)();\n    }\n}\n/**\n * Function to copy operation.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {string} target - specifies the target.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nfunction copyFolderItems(parent, data, target, itemName) {\n    var newObject = createNewItem(data, target, itemName, true);\n    parent.fileSystemData.push(newObject);\n    parent.pasteNodes.push(newObject.id);\n    var copiedItems = filterByParent(parent, data.id);\n    for (var i = 0; i < copiedItems.length; i++) {\n        copyFolderItems(parent, copiedItems[i], newObject, null);\n    }\n}\n/**\n * Function for trigger Ajax failure in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {BeforeSendEventArgs} beforeSendArgs - specifies the beforeSendArgs.\n * @param {Function} fn - specifies the function.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @param {string} operation - specifies the operation.\n * @param {string} targetPath - specifies the targetPath.\n * @returns {void}\n * @private\n */\nfunction triggerAjaxFailure(parent, beforeSendArgs, fn, result, event, operation, targetPath) {\n    parent.notify(events.afterRequest, { action: 'failure' });\n    fn(parent, result, event, operation, targetPath);\n    if (typeof getValue('onFailure', beforeSendArgs.ajaxSettings) === 'function') {\n        getValue('onFailure', beforeSendArgs.ajaxSettings)();\n    }\n}\n/**\n * Function for read success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @returns {void}\n * @private\n */\nfunction readSuccess(parent, result, event) {\n    try {\n        if (!isNOU(result.files)) {\n            parent.notify(event, result);\n            parent.notify(events.selectionChanged, {});\n            var args = { action: 'read', result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            if (!isNOU(result.error) && result.error.code === '401') {\n                result.files = [];\n                parent.notify(event, result);\n                parent.notify(events.selectionChanged, {});\n            }\n            onFailure(parent, result, 'read');\n            parent.setProperties({ path: parent.oldPath }, true);\n            parent.pathNames.pop();\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'read');\n        parent.setProperties({ path: parent.oldPath }, true);\n        parent.pathNames.pop();\n    }\n    if (parent.isDragDrop && parent.isDropEnd) {\n        if (parent.droppedObjects.length !== 0) {\n            var args = { fileDetails: parent.droppedObjects };\n            parent.trigger('fileDropped', args);\n        }\n        parent.isDropEnd = parent.isDragDrop = false;\n    }\n}\n/**\n * Function for filter success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction filterSuccess(parent, result, event, action) {\n    try {\n        if (!isNOU(result.files)) {\n            parent.notify(event, result);\n            var args = { action: action, result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            onFailure(parent, result, action);\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, action);\n    }\n}\n/* istanbul ignore next */\n/**\n * Function for create success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} itemName - specifies the item name.\n * @returns {void}\n * @private\n */\nfunction createSuccess(parent, result, itemName) {\n    try {\n        if (!isNOU(result.files)) {\n            if (parent.dialogObj && parent.dialogObj.visible) {\n                parent.dialogObj.hide();\n            }\n            parent.createdItem = isFileSystemData(parent) ? result.files[result.files.length - 1] : result.files[0];\n            parent.breadcrumbbarModule.searchObj.value = '';\n            var createEventArgs = {\n                folderName: itemName,\n                path: parent.path,\n                parentFolder: parent.itemData\n            };\n            parent.trigger('folderCreate', createEventArgs);\n            var args = { action: 'create', result: result };\n            parent.trigger('success', args);\n            parent.itemData = [getPathObject(parent)];\n            read(parent, events.createEnd, parent.path);\n        }\n        else {\n            if (result.error.code === '400') {\n                if (parent.dialogObj && parent.dialogObj.visible) {\n                    var ele = select('#newname', parent.dialogObj.element);\n                    var error = getLocaleText(parent, 'Validation-NewFolder-Exists').replace('{0}', '\"' + ele.value + '\"');\n                    ele.parentElement.nextElementSibling.innerHTML = error;\n                }\n                else {\n                    var result_2 = {\n                        files: null,\n                        error: {\n                            code: '400',\n                            message: getLocaleText(parent, 'Validation-NewFolder-Exists').replace('{0}', '\"' + itemName + '\"'),\n                            fileExists: null\n                        }\n                    };\n                    createDialog(parent, 'Error', result_2);\n                }\n                var args = { action: 'create', error: result.error };\n                parent.trigger('failure', args);\n            }\n            else {\n                if (parent.dialogObj && parent.dialogObj.visible) {\n                    parent.dialogObj.hide();\n                }\n                onFailure(parent, result, 'create');\n            }\n        }\n    }\n    catch (error) {\n        if (parent.dialogObj && parent.dialogObj.visible) {\n            parent.dialogObj.hide();\n        }\n        handleCatchError(parent, error, 'create');\n    }\n}\n/* istanbul ignore next */\n/**\n * Function to rename the folder/file in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @returns {void}\n * @private\n */\nfunction renameSuccess(parent, result) {\n    try {\n        if (!isNOU(result.files)) {\n            if (!isNOU(parent.dialogObj)) {\n                parent.dialogObj.hide();\n            }\n            var args = { action: 'rename', result: result };\n            parent.trigger('success', args);\n            parent.renamedItem = Array.isArray(result.files) ? result.files[0] : result.files;\n            var renameEventArgs = {\n                newName: parent.renamedItem.name,\n                itemData: [parent.renamedItem],\n                path: parent.path\n            };\n            parent.trigger('rename', renameEventArgs);\n            if (parent.activeModule === 'navigationpane') {\n                var pathObject = getPathObject(parent);\n                var pathLevel = parent.pathId[parent.pathId.length - 1].split('_').length - 2;\n                parent.pathId.pop();\n                parent.itemData = [getValue(parent.pathId[parent.pathId.length - 1], parent.feParent)];\n                read(parent, events.renameEndParent, getValue('filterPath', parent.renamedItem).replace(/\\\\/g, '/'));\n                if (!isNOU(pathObject) && parent.pathNames.length > 1 && pathLevel <= parent.pathNames.length - 1) {\n                    parent.pathNames[pathLevel] = parent.renameText;\n                    if (!parent.hasId) {\n                        parent.setProperties({ path: \"/\" + parent.pathNames.slice(1).join('/') + \"/\" }, true);\n                    }\n                }\n                parent.itemData = parent.navigationpaneModule.previousSelected.length > 0\n                    ? parent.navigationpaneModule.treeObj.getTreeData(parent.navigationpaneModule.previousSelected[0]) : parent.itemData;\n                read(parent, events.pathChanged, parent.path);\n                parent.itemData[0] = parent.renamedItem;\n                parent.renamedItem = null;\n            }\n            else {\n                parent.itemData = [getPathObject(parent)];\n                if (parent.breadcrumbbarModule.searchObj.value !== '') {\n                    Search(parent, events.renameEnd, parent.path, parent.searchWord, parent.showHiddenItems, !parent.searchSettings.ignoreCase);\n                }\n                else {\n                    if (parent.isFiltered) {\n                        filter(parent, events.renameEnd);\n                    }\n                    else {\n                        read(parent, events.renameEnd, parent.path);\n                    }\n                }\n            }\n        }\n        else {\n            if (result.error.code === '400' && parent.dialogObj && parent.dialogObj.visible) {\n                var ele = select('#rename', parent.dialogObj.element);\n                var error = getLocaleText(parent, 'Validation-Rename-Exists').replace('{0}', '\"' + parent.currentItemText + '\"');\n                error = error.replace('{1}', '\"' + ele.value + '\"');\n                ele.parentElement.nextElementSibling.innerHTML = error;\n                var args = { action: 'rename', error: result.error };\n                parent.trigger('failure', args);\n            }\n            else {\n                if (!isNOU(parent.dialogObj)) {\n                    parent.dialogObj.hide();\n                }\n                onFailure(parent, result, 'rename');\n            }\n        }\n    }\n    catch (error) {\n        if (!isNOU(parent.dialogObj)) {\n            parent.dialogObj.hide();\n        }\n        handleCatchError(parent, error, 'rename');\n    }\n}\n/* istanbul ignore next */\n/**\n * Function to create new folder in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nfunction pasteSuccess(parent, result, path, operation) {\n    try {\n        var moveorcopyEventArgs = {\n            itemData: result.files,\n            isCopy: operation === 'copy' ? true : false,\n            path: path,\n            targetData: parent.itemData[0],\n            targetPath: parent.path\n        };\n        parent.trigger('move', moveorcopyEventArgs);\n        if (result.error && result.error.fileExists) {\n            parent.fileLength = 0;\n            if (!isNOU(result.files)) {\n                parent.isPasteError = true;\n                doPasteUpdate(parent, operation, result);\n            }\n            createExtDialog(parent, 'DuplicateItems', result.error.fileExists);\n            if (result.error.code === '404') {\n                createDialog(parent, 'Error', result);\n            }\n        }\n        else if (!result.error && !isNOU(result.files)) {\n            parent.isPasteError = false;\n            doPasteUpdate(parent, operation, result);\n        }\n        else if (result.error && !isNOU(result.files)) {\n            parent.isPasteError = true;\n            doPasteUpdate(parent, operation, result);\n            createDialog(parent, 'Error', result);\n        }\n        else {\n            onFailure(parent, result, operation);\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, operation);\n    }\n}\n/**\n * Function to delete success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nfunction deleteSuccess(parent, result, path) {\n    try {\n        var deleteEventArgs = {\n            itemData: result.files,\n            path: path\n        };\n        parent.trigger('delete', deleteEventArgs);\n        if (!isNOU(result.files)) {\n            parent.setProperties({ path: path }, true);\n            parent.itemData = [getPathObject(parent)];\n            read(parent, events.deleteEnd, parent.path);\n            if (result.error) {\n                onFailure(parent, result, 'delete');\n            }\n            else {\n                var args = { action: 'delete', result: result };\n                parent.trigger('success', args);\n            }\n        }\n        else {\n            onFailure(parent, result, 'delete');\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'delete');\n    }\n}\n/**\n * Function for details success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} path - specifies the path.\n * @param {string} operation - specifies the operation.\n * @returns {void}\n * @private\n */\nfunction detailsSuccess(\n// eslint:disable-next-line\nparent, result, path, operation) {\n    try {\n        if (!isNOU(result.details)) {\n            createDialog(parent, operation, null, result.details);\n            var args = { action: 'details', result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            onFailure(parent, result, 'details');\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'details');\n    }\n}\n/**\n * Function for on failure event in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction onFailure(parent, result, action) {\n    createDialog(parent, 'Error', result);\n    var args = { action: action, error: result.error };\n    parent.trigger('failure', args);\n}\n/**\n * Function for search in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} event - specifies the event.\n * @param {string} path - specifies the path.\n * @param {string} searchString - specifies the search string.\n * @param {boolean} showHiddenItems - specifies the hidden items.\n * @param {boolean} caseSensitive - specifies the casing of search text.\n * @returns {void}\n * @private\n */\nexport function Search(parent, event, path, searchString, showHiddenItems, caseSensitive) {\n    var data = {\n        action: 'search', path: path, searchString: searchString, showHiddenItems: showHiddenItems, caseSensitive: caseSensitive,\n        data: parent.itemData\n    };\n    createAjax(parent, data, searchSuccess, event);\n}\n/* istanbul ignore next */\n/**\n * Function for search success in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {ReadArgs} result - specifies the result.\n * @param {string} event - specifies the event.\n * @returns {void}\n * @private\n */\nfunction searchSuccess(parent, result, event) {\n    try {\n        if (!isNOU(result.files)) {\n            parent.notify(event, result);\n            var args = { action: 'search', result: result };\n            parent.trigger('success', args);\n        }\n        else {\n            onFailure(parent, result, 'search');\n        }\n    }\n    catch (error) {\n        handleCatchError(parent, error, 'search');\n    }\n}\n/* istanbul ignore next */\n/**\n * Function for download in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @param {string[]} items - specifies the items.\n * @returns {void}\n * @private\n */\nexport function Download(parent, path, items) {\n    var downloadUrl = parent.ajaxSettings.downloadUrl ? parent.ajaxSettings.downloadUrl : parent.ajaxSettings.url;\n    var data = { 'action': 'download', 'path': path, 'names': items, 'data': parent.itemData };\n    var ajaxSettings = {\n        url: downloadUrl,\n        type: 'POST',\n        contentType: 'application/json',\n        responseType: 'blob',\n        data: JSON.stringify(data),\n        onSuccess: null,\n        onFailure: null,\n        beforeSend: null\n    };\n    var eventArgs = { data: data, cancel: false, useFormPost: true, ajaxSettings: ajaxSettings };\n    parent.trigger('beforeDownload', eventArgs, function (downloadArgs) {\n        if (!downloadArgs.cancel) {\n            if (downloadArgs.useFormPost) {\n                var form = createElement('form', {\n                    id: parent.element.id + '_downloadForm',\n                    attrs: { action: downloadUrl, method: 'post', name: 'downloadForm', 'download': '' }\n                });\n                var input = createElement('input', {\n                    id: parent.element.id + '_hiddenForm',\n                    attrs: { name: 'downloadInput', value: JSON.stringify(downloadArgs.data), type: 'hidden' }\n                });\n                form.appendChild(input);\n                parent.element.appendChild(form);\n                document.forms.namedItem('downloadForm').submit();\n                parent.element.removeChild(form);\n            }\n            else {\n                try {\n                    var contentDisposition_1;\n                    var fileName_1;\n                    var fetch_1 = new Fetch({\n                        url: getValue('url', downloadArgs.ajaxSettings),\n                        type: getValue('type', downloadArgs.ajaxSettings),\n                        contentType: getValue('contentType', downloadArgs.ajaxSettings),\n                        responseType: getValue('responseType', downloadArgs.ajaxSettings),\n                        beforeSend: getValue('beforeSend', downloadArgs.ajaxSettings),\n                        onLoad: function (e) {\n                            contentDisposition_1 = e.headers.get('Content-Disposition');\n                            if (contentDisposition_1) {\n                                var filenameMatch = contentDisposition_1.match(/filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/);\n                                var extractedFilename = filenameMatch && filenameMatch[1];\n                                fileName_1 = extractedFilename ? extractedFilename.replace(/['\"]/g, '') : fileName_1;\n                            }\n                            else {\n                                fileName_1 = parent.itemData.length > 1 ? 'files.zip' : getValue('isFile', parent.itemData[0]) ? getValue('name', parent.itemData[0]) : getValue('name', parent.itemData[0]) + '.zip';\n                            }\n                        },\n                        onSuccess: function (e) {\n                            parent.trigger('success', downloadArgs);\n                            var blob = e;\n                            var blobUrl = URL.createObjectURL(blob);\n                            var link = document.createElement('a');\n                            link.href = blobUrl;\n                            link.download = fileName_1;\n                            document.body.appendChild(link);\n                            link.click();\n                            document.body.removeChild(link);\n                        },\n                        onFailure: function (e) {\n                            var result = {\n                                error: {\n                                    code: e.status.toString(),\n                                    message: getLocaleText(parent, 'Network-Error') + ' ' + parent.ajaxSettings.downloadUrl\n                                }\n                            };\n                            createDialog(parent, 'Error', result);\n                            parent.trigger('failure', downloadArgs);\n                        }\n                    });\n                    fetch_1.send(JSON.stringify(downloadArgs.data));\n                }\n                catch (error) {\n                    handleCatchError(parent, error, 'download');\n                }\n            }\n        }\n    });\n}\n/**\n * Function for on catch handler in File Manager.\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {any} error - specifies the catch error.\n * @param {string} action - specifies the action.\n * @returns {void}\n * @private\n */\nfunction handleCatchError(parent, error, action) {\n    var errorResult = {\n        files: null,\n        error: {\n            message: error.message,\n            fileExists: null\n        }\n    };\n    onFailure(parent, errorResult, action);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}