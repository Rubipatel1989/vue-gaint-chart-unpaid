{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { TreeGrid } from '@syncfusion/ej2-treegrid';\nimport { createElement, isNullOrUndefined, getValue, extend, EventHandler, deleteObject, remove } from '@syncfusion/ej2-base';\nimport { setValue } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { Column as GanttColumn } from '../models/column';\nimport { isCountRequired } from './utils';\nimport { AutoComplete } from '@syncfusion/ej2-dropdowns';\n/** @hidden */\nvar GanttTreeGrid = /** @class */function () {\n  function GanttTreeGrid(parent) {\n    var _this = this;\n    this.isPersist = false;\n    this.previousScroll = {\n      top: 0,\n      left: 0\n    };\n    this.queryCellInfo = function (args) {\n      _this.parent.trigger('queryCellInfo', args);\n    };\n    this.headerCellInfo = function (args) {\n      _this.parent.trigger('headerCellInfo', args);\n    };\n    this.rowDataBound = function (args) {\n      _this.parent.trigger('rowDataBound', args);\n    };\n    this.columnMenuOpen = function (args) {\n      _this.parent.notify('columnMenuOpen', args);\n      _this.parent.trigger('columnMenuOpen', args);\n      document.querySelector('.e-colmenu').addEventListener('mousemove', function () {\n        var filPopOptions = document.querySelector('.e-filter-popup');\n        var filOptions = document.querySelector('.e-filter-item');\n        if (!isNullOrUndefined(filPopOptions)) {\n          if (!filOptions.classList.contains('e-focused')) {\n            remove(_this.parent.filterModule.filterMenuElement);\n          }\n        }\n      });\n    };\n    this.columnMenuClick = function (args) {\n      _this.parent.trigger('columnMenuClick', args);\n    };\n    this.objectEqualityChecker = function (old, current) {\n      if (old) {\n        var keys = Object.keys(old);\n        var isEqual = true;\n        var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'ganttProperties'];\n        for (var i = 0; i < keys.length; i++) {\n          var oldKey = old[keys[parseInt(i.toString(), 10)]] instanceof Date ? new Date(old[keys[parseInt(i.toString(), 10)]]).getTime() : old[keys[parseInt(i.toString(), 10)]];\n          var currentKey = current[keys[parseInt(i.toString(), 10)]] instanceof Date ? new Date(current[keys[parseInt(i.toString(), 10)]]).getTime() : current[keys[parseInt(i.toString(), 10)]];\n          if (oldKey !== currentKey && excludeKeys.indexOf(keys[i]) === -1) {\n            _this.parent.modifiedRecords.push(current);\n            isEqual = false;\n            break;\n          }\n        }\n        return isEqual;\n      } else {\n        return false;\n      }\n    };\n    this.parent = parent;\n    this.parent.treeGrid = new TreeGrid();\n    this.parent.treeGrid.allowSelection = false;\n    this.parent.treeGrid.allowKeyboard = this.parent.allowKeyboard;\n    this.parent.treeGrid['${enableHtmlSanitizer}'] = this.parent.enableHtmlSanitizer;\n    this.parent.treeGrid.enableImmutableMode = this.parent.enableImmutableMode;\n    this.treeGridColumns = [];\n    if (!this.parent.isLocaleChanged && this.parent.isLoad) {\n      this.parent.previousGanttColumns = extend([], [], this.parent.columns, true);\n    }\n    this.validateGanttColumns();\n    if (this.parent.isLocaleChanged) {\n      this.parent.isLocaleChanged = false;\n    }\n    this.addEventListener();\n  }\n  GanttTreeGrid.prototype.addEventListener = function () {\n    this.parent.on('renderPanels', this.createContainer, this);\n    this.parent.on('chartScroll', this.updateScrollTop, this);\n    this.parent.on('destroy', this.destroy, this);\n    this.parent.treeGrid.on('renderReactTemplate', this.renderReactTemplate, this);\n  };\n  GanttTreeGrid.prototype.renderReactTemplate = function (args) {\n    var portals = 'portals';\n    for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {\n      var portal = args_1[_i];\n      if (this.parent[portals].indexOf(portal) === -1) {\n        this.parent[portals].push(portal);\n      }\n    }\n    this.parent.renderTemplates();\n  };\n  GanttTreeGrid.prototype.createContainer = function () {\n    //let height: number = this.parent.ganttHeight - this.parent.toolbarModule.element.offsetHeight - 46;\n    this.treeGridElement = createElement('div', {\n      id: 'treeGrid' + this.parent.element.id,\n      className: 'e-gantt-tree-grid'\n      //  styles: 'height:' + height + 'px;'\n    });\n    var tempHeader = createElement('div', {\n      className: 'e-gantt-temp-header'\n    });\n    this.parent.treeGridPane.appendChild(this.treeGridElement);\n    this.treeGridElement.appendChild(tempHeader);\n    this.parent.treeGridPane.classList.add('e-temp-content');\n  };\n  /**\n   * Method to initiate TreeGrid\n   *\n   * @returns {void} .\n   */\n  GanttTreeGrid.prototype.renderTreeGrid = function () {\n    this.composeProperties();\n    this.bindEvents();\n    var root = 'root';\n    this.parent.treeGrid[root] = this.parent[root] ? this.parent[root] : this.parent;\n    setValue('registeredTemplate', this.registeredTemplate, this.parent.treeGrid);\n    var ref = 'viewContainerRef';\n    setValue('viewContainerRef', this.parent[\"\" + ref], this.parent.treeGrid);\n    this.parent.treeGrid.appendTo(this.treeGridElement);\n    if (this.parent.treeGrid.grid && this.parent.toolbarModule && this.parent.isReact) {\n      this.parent.treeGrid.grid.portals = this.parent.portals;\n    }\n    this.wireEvents();\n  };\n  GanttTreeGrid.prototype.composeProperties = function () {\n    this.parent.treeGrid.enableAdaptiveUI = this.parent.enableAdaptiveUI;\n    this.parent.treeGrid.hasChildMapping = this.parent.taskFields.hasChildMapping;\n    this.parent.treeGrid.query = this.parent.query;\n    this.parent.treeGrid.loadChildOnDemand = this.parent.loadChildOnDemand;\n    this.parent.treeGrid['isFromGantt'] = true;\n    this.parent.treeGrid.parentIdMapping = this.parent.taskFields.parentID;\n    if (this.parent.taskFields.parentID) {\n      this.parent.treeGrid.idMapping = this.parent.taskFields.id;\n    }\n    this.parent.treeGrid.showColumnMenu = this.parent.showColumnMenu;\n    this.parent.treeGrid.enableCollapseAll = this.parent.collapseAllParentTasks;\n    this.parent.treeGrid.columnMenuItems = this.parent.columnMenuItems;\n    this.parent.treeGrid.enableRtl = this.parent.enableRtl;\n    this.parent.treeGrid.childMapping = isNullOrUndefined(this.parent.taskFields.child) ? '' : this.parent.taskFields.child;\n    this.parent.treeGrid.treeColumnIndex = this.parent.treeColumnIndex;\n    this.parent.treeGrid.columns = this.treeGridColumns;\n    this.parent.treeGrid.loadingIndicator = this.parent.loadingIndicator;\n    this.parent.treeGrid.enableVirtualMaskRow = this.parent.enableVirtualMaskRow;\n    if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n      // In order to bind the observable data at load time, hasChildMapping is necessary to be mapped.\n      this.parent.treeGrid.hasChildMapping = 'isParent';\n      var count = getValue('count', this.parent.dataSource);\n      this.parent.treeGrid.dataSource = {\n        result: this.parent.flatData,\n        count: count\n      };\n    } else {\n      if (this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n        this.parent.treeGrid.dataSource = this.parent.dataSource;\n      } else {\n        this.parent.treeGrid.hasChildMapping = null;\n        this.parent.treeGrid.dataSource = this.parent.flatData;\n      }\n    }\n    this.parent.treeGrid.expandStateMapping = this.parent.taskFields.expandState;\n    var isGantt = 'isGantt';\n    this.parent.treeGrid[isGantt] = true;\n    this.parent.treeGrid.rowHeight = this.parent.rowHeight;\n    this.parent.treeGrid.gridLines = this.parent.gridLines;\n    if (this.parent.searchSettings.fields.length !== 0 || this.parent.searchSettings.key !== '') {\n      this.parent.treeGrid.searchSettings = this.parent.searchSettings;\n    }\n    var isJsComponent = 'isJsComponent';\n    this.parent.treeGrid[isJsComponent] = true;\n    this.parent.treeGrid.height = this.parent.element.getElementsByClassName('e-chart-scroll-container e-content')[0]['offsetHeight'] - (this.parent.flatData.length === 0 ? 0 : 19);\n  };\n  GanttTreeGrid.prototype.getContentDiv = function () {\n    return this.treeGridElement.querySelector('.e-content');\n  };\n  GanttTreeGrid.prototype.getHeaderDiv = function () {\n    return this.treeGridElement.querySelector('.e-headercontent');\n  };\n  GanttTreeGrid.prototype.getScrollbarWidth = function () {\n    var outer = document.createElement('div');\n    outer.style.visibility = 'hidden';\n    outer.style.overflow = 'scroll';\n    outer.style.msOverflowStyle = 'scrollbar';\n    var inner = document.createElement('div');\n    outer.appendChild(inner);\n    this.parent.element.appendChild(outer);\n    var scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  GanttTreeGrid.prototype.ensureScrollBar = function () {\n    var content = this.getContentDiv();\n    var headerDiv = this.getHeaderDiv();\n    var scrollWidth = this.getScrollbarWidth();\n    var isMobile = /Android|Mac|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    if (scrollWidth !== 0) {\n      content.style.cssText += 'width: calc(100% + ' + (scrollWidth + 1) + 'px);'; //actual scrollbar width 17 px but here scrollbar width set to 16px hence adding increment of 1\n    } else {\n      content.classList.add('e-gantt-scroll-padding');\n    }\n    if (scrollWidth === 0 && isMobile) {\n      headerDiv.style.cssText += 'width: calc(100% + 17px);';\n    }\n  };\n  GanttTreeGrid.prototype.bindEvents = function () {\n    this.parent.treeGrid.dataBound = this.dataBound.bind(this);\n    this.parent.treeGrid.collapsing = this.collapsing.bind(this);\n    this.parent.treeGrid.collapsed = this.collapsed.bind(this);\n    this.parent.treeGrid.expanding = this.expanding.bind(this);\n    this.parent.treeGrid.expanded = this.expanded.bind(this);\n    this.parent.treeGrid.actionBegin = this.actionBegin.bind(this);\n    this.parent.treeGrid.actionComplete = this.treeActionComplete.bind(this);\n    this.parent.treeGrid.created = this.created.bind(this);\n    this.parent.treeGrid.actionFailure = this.actionFailure.bind(this);\n    this.parent.treeGrid.queryCellInfo = this.queryCellInfo.bind(this);\n    this.parent.treeGrid.headerCellInfo = this.headerCellInfo.bind(this);\n    this.parent.treeGrid.rowDataBound = this.rowDataBound.bind(this);\n    this.parent.treeGrid.columnMenuOpen = this.columnMenuOpen.bind(this);\n    this.parent.treeGrid.columnMenuClick = this.columnMenuClick.bind(this);\n    this.parent.treeGrid.beforeDataBound = this.beforeDataBound.bind(this);\n    this.parent.treeGrid.dataStateChange = this.dataStateChange.bind(this);\n  };\n  GanttTreeGrid.prototype.beforeDataBound = function (args) {\n    if (!isNullOrUndefined(this.parent.selectionModule) && this.parent.selectionSettings && this.parent.selectionSettings.persistSelection && this.parent.selectionModule.getSelectedRowIndexes().length > 0 && args['actionArgs']['requestType'] === 'sorting') {\n      this.isPersist = true;\n    }\n    this.parent.updatedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? getValue('virtualScrollModule.visualData', this.parent.treeGrid) : getValue('result', args);\n    if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n      this.parent.updateContentHeight(args);\n    }\n    setValue('contentModule.objectEqualityChecker', this.objectEqualityChecker, this.parent.treeGrid.grid);\n  };\n  GanttTreeGrid.prototype.dataBound = function (args) {\n    this.ensureScrollBar();\n    this.parent.treeDataBound(args);\n    if (this.parent.isVirtualScroll) {\n      if (this.parent.enableVirtualMaskRow && this.parent.enableVirtualization || this.parent.enableVirtualization && !this.parent.enableVirtualMaskRow && this.parent.loadingIndicator.indicatorType === 'Shimmer' || this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n        this.parent.hideMaskRow();\n      }\n      this.parent.isVirtualScroll = false;\n      if (!isNullOrUndefined(this.parent.selectionModule) && !isNullOrUndefined(this.parent.toolbarModule)) {\n        this.parent.toolbarModule.refreshToolbarItems();\n      }\n    }\n    this.prevCurrentView = extend([], [], this.parent.currentViewData, true);\n  };\n  GanttTreeGrid.prototype.dataStateChange = function (args) {\n    if (args.action && args.action.requestType === 'refresh') {\n      this.parent.treeGrid.dataSource = {\n        result: getValue('result', this.parent.treeGrid.dataSource),\n        count: getValue('count', this.parent.treeGrid.dataSource)\n      };\n    }\n    this.parent.trigger('dataStateChange', args);\n  };\n  GanttTreeGrid.prototype.collapsing = function (args) {\n    // Collapsing event\n    var collapsingArgs;\n    var record = getValue('data', args);\n    var recordLength = record.length;\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n      if (!isNullOrUndefined(recordLength)) {\n        for (var i = 0; i < recordLength; i++) {\n          collapsingArgs = this.createExpandCollapseArgs(args, record[i]);\n          this.parent.ganttChartModule.collapseGanttRow(collapsingArgs);\n        }\n        setValue('cancel', getValue('cancel', collapsingArgs), args);\n      } else {\n        collapsingArgs = this.createExpandCollapseArgs(args, null);\n        this.parent.ganttChartModule.collapseGanttRow(collapsingArgs);\n        setValue('cancel', getValue('cancel', collapsingArgs), args);\n      }\n    }\n  };\n  GanttTreeGrid.prototype.expanding = function (args) {\n    // Expanding event\n    var expandingArgs;\n    var record = getValue('data', args);\n    var recordLength = record.length;\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n      if (!isNullOrUndefined(recordLength)) {\n        for (var i = 0; i < recordLength; i++) {\n          expandingArgs = this.createExpandCollapseArgs(args, record[i]);\n          this.parent.ganttChartModule.expandGanttRow(expandingArgs);\n        }\n        setValue('cancel', getValue('cancel', expandingArgs), args);\n      } else {\n        expandingArgs = this.createExpandCollapseArgs(args, null);\n        this.parent.ganttChartModule.expandGanttRow(expandingArgs);\n        setValue('cancel', getValue('cancel', expandingArgs), args);\n      }\n    }\n  };\n  GanttTreeGrid.prototype.collapsed = function (args) {\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n      var collapsedArgs = void 0;\n      var record = getValue('data', args);\n      var recordLength = record.length;\n      if (!isNullOrUndefined(recordLength)) {\n        for (var i = 0; i < recordLength; i++) {\n          collapsedArgs = this.createExpandCollapseArgs(args, record[i]);\n          this.parent.ganttChartModule.collapsedGanttRow(collapsedArgs);\n        }\n      } else {\n        collapsedArgs = this.createExpandCollapseArgs(args, null);\n        this.parent.ganttChartModule.collapsedGanttRow(collapsedArgs);\n      }\n      if (!this.parent.ganttChartModule.isCollapseAll && collapsedArgs['gridRow'] && !this.parent.allowTaskbarOverlap) {\n        collapsedArgs['gridRow'].style.height = collapsedArgs['chartRow'].style.height;\n        this.parent.contentHeight = this.parent.enableRtl ? this.parent['element'].getElementsByClassName('e-content')[2].children[0]['offsetHeight'] : this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n        document.getElementsByClassName('e-chart-rows-container')[0]['style'].height = this.parent.contentHeight + 'px';\n      }\n    }\n    if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n      this.parent.hideMaskRow();\n    } else {\n      this.parent.hideSpinner();\n    }\n    this.parent.trigger('collapsed', args);\n  };\n  GanttTreeGrid.prototype.expanded = function (args) {\n    if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n      var expandedArgs = void 0;\n      var record = getValue('data', args);\n      var recordLength = record.length;\n      if (!isNullOrUndefined(recordLength)) {\n        for (var i = 0; i < recordLength; i++) {\n          expandedArgs = this.createExpandCollapseArgs(args, record[i]);\n          this.parent.ganttChartModule.expandedGanttRow(expandedArgs);\n        }\n      } else {\n        expandedArgs = this.createExpandCollapseArgs(args, null);\n        this.parent.ganttChartModule.expandedGanttRow(expandedArgs);\n      }\n      if (!this.parent.ganttChartModule.isExpandAll && args['row'] && !this.parent.allowTaskbarOverlap) {\n        args['row'].style.height = this.parent.rowHeight + 'px';\n        this.parent.contentHeight = this.parent.enableRtl ? this.parent['element'].getElementsByClassName('e-content')[2].children[0]['offsetHeight'] : this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n        document.getElementsByClassName('e-chart-rows-container')[0]['style'].height = this.parent.contentHeight + 'px';\n      }\n    }\n    if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n      this.parent.hideMaskRow();\n    } else {\n      this.parent.hideSpinner();\n    }\n    this.parent.isCollapseAll = false;\n    this.parent.trigger('expanded', args);\n  };\n  GanttTreeGrid.prototype.actionBegin = function (args) {\n    if (this.parent.undoRedoModule && (args.requestType === 'filtering' || args.requestType === 'searching' || args.requestType === 'sorting' || args.requestType === 'filterAfterOpen')) {\n      this.parent.undoRedoModule['canUpdateIndex'] = false;\n    }\n    this.parent.notify('actionBegin', args);\n    var flag = getValue('doubleClickTarget', this.parent.treeGrid.editModule);\n    if (flag !== null) {\n      setValue('doubleClickTarget', null, this.parent.treeGrid.editModule);\n    }\n    this.parent.trigger('actionBegin', args);\n    if (args.requestType !== 'virtualscroll' && args.type !== 'edit' && args.requestType !== 'beginEdit' && !args.cancel) {\n      if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n        this.parent.showMaskRow();\n      } else {\n        this.parent.showSpinner();\n      }\n    }\n  }; // eslint-disable-next-line\n  GanttTreeGrid.prototype.created = function (args) {\n    this.updateKeyConfigSettings();\n  };\n  GanttTreeGrid.prototype.actionFailure = function (args) {\n    this.parent.trigger('actionFailure', args);\n  };\n  GanttTreeGrid.prototype.createExpandCollapseArgs = function (args, currentRecord) {\n    var chartRow;\n    var record = getValue('data', args);\n    var recordLength = record.length;\n    if (!isNullOrUndefined(recordLength)) {\n      var gridRow = getValue('row', args);\n      chartRow = this.parent.ganttChartModule.getChartRows()[this.parent.currentViewData.indexOf(currentRecord)];\n      var eventArgs = {\n        data: currentRecord,\n        gridRow: gridRow,\n        chartRow: chartRow,\n        cancel: false\n      };\n      return eventArgs;\n    } else {\n      var recordOne = getValue('data', args);\n      var gridRow = getValue('row', args);\n      chartRow = this.parent.ganttChartModule.getChartRows()[this.parent.currentViewData.indexOf(recordOne)];\n      var eventArgs = {\n        data: recordOne,\n        gridRow: gridRow,\n        chartRow: chartRow,\n        cancel: false\n      };\n      return eventArgs;\n    }\n  };\n  GanttTreeGrid.prototype.treeActionComplete = function (args) {\n    var _this = this;\n    var updatedArgs = extend({}, args);\n    if (getValue('requestType', args) === 'reorder') {\n      if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isFromUndoRedo'] && this.parent['isUndoRedoItemPresent']('ColumnReorder')) {\n        if (this.parent.undoRedoModule['redoEnabled']) {\n          this.parent.undoRedoModule['disableRedo']();\n        }\n        this.parent.undoRedoModule['createUndoCollection']();\n        var record = {};\n        record['action'] = 'ColumnReorder';\n        record['fromIndex'] = extend([], [], [args['fromIndex']], true)[0];\n        record['toIndex'] = extend([], [], [args['toIndex']], true)[0];\n        record['toColumn'] = extend([], [], [this.parent.treeGrid.columns[args['toIndex']]['field']], true)[0];\n        record['fromColumn'] = extend([], [], [this.parent.treeGrid.columns[args['fromIndex']]['field']], true)[0];\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n      }\n    }\n    if (getValue('requestType', args) === 'columnstate') {\n      if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isFromUndoRedo'] && this.parent['isUndoRedoItemPresent']('ColumnState')) {\n        if (this.parent.undoRedoModule['redoEnabled']) {\n          this.parent.undoRedoModule['disableRedo']();\n        }\n        this.parent.undoRedoModule['createUndoCollection']();\n        var record = {\n          action: 'ColumnState'\n        };\n        record['showhideColumns'] = extend([], [], args['columns'], true);\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n      }\n    }\n    if (getValue('requestType', args) === 'sorting') {\n      if (this.parent.undoRedoModule && this.parent['isUndoRedoItemPresent']('Sorting')) {\n        if (this.parent.undoRedoModule['currentAction'] && this.parent.undoRedoModule['currentAction']['sortColumns'].length > 1) {\n          this.parent.undoRedoModule['sortedColumnsLength']++;\n        }\n        if ((!this.parent.undoRedoModule['currentAction'] || this.parent.undoRedoModule['sortedColumnsLength'] !== this.parent.undoRedoModule['currentAction']['sortColumns'].length) && !this.parent.undoRedoModule['isFromUndoRedo']) {\n          if (this.parent.undoRedoModule['redoEnabled']) {\n            this.parent.undoRedoModule['disableRedo']();\n          }\n          this.parent.undoRedoModule['createUndoCollection']();\n          var record = {\n            action: 'Sorting'\n          };\n          record['sortColumns'] = [];\n          record['sortColumns'] = this.parent.undoRedoModule['previousSortedColumns'];\n          this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n        }\n        this.parent.undoRedoModule['previousSortedColumns'] = this.parent.treeGrid.sortSettings.columns;\n      }\n      this.parent.notify('updateModel', {});\n      deleteObject(updatedArgs, 'isFrozen');\n    } else if (getValue('requestType', args) === 'filtering') {\n      if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isFromUndoRedo'] && this.parent['isUndoRedoItemPresent']('Filtering')) {\n        if (this.parent.undoRedoModule['redoEnabled']) {\n          this.parent.undoRedoModule['disableRedo']();\n        }\n        this.parent.undoRedoModule['createUndoCollection']();\n        var record = {\n          action: 'Filtering'\n        };\n        record['filteredColumns'] = extend([], [], args['columns'], true);\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n      }\n      this.parent.notify('updateModel', {});\n      var focussedElement = this.parent.element.querySelector('.e-treegrid');\n      focussedElement.focus();\n    } else if (getValue('type', args) === 'save') {\n      if (this.parent.editModule && this.parent.editModule.cellEditModule) {\n        var data = getValue('data', args);\n        if (!isNullOrUndefined(data) && !isNullOrUndefined(this.parent.getTaskByUniqueID(data.uniqueID))) {\n          /* eslint-disable-next-line */\n          this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.duration] = data.taskData[this.parent.taskFields.duration];\n          if (!isNullOrUndefined(data.taskData[this.parent.taskFields.resourceInfo])) {\n            /* eslint-disable-next-line */\n            this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.resourceInfo] = data.taskData[this.parent.taskFields.resourceInfo];\n          }\n        }\n        this.parent.editModule.cellEditModule.initiateCellEdit(args, this.currentEditRow);\n        this.parent.editModule.cellEditModule.isCellEdit = false;\n        this.currentEditRow = {};\n      }\n    }\n    if (getValue('requestType', args) === 'filterAfterOpen') {\n      this.parent.notify('actionComplete', args);\n    }\n    if (getValue('requestType', args) === 'searching') {\n      if (this.parent.undoRedoModule && this.parent['isUndoRedoItemPresent']('Search')) {\n        if (!this.parent.undoRedoModule['isFromUndoRedo']) {\n          if (this.parent.undoRedoModule['redoEnabled']) {\n            this.parent.undoRedoModule['disableRedo']();\n          }\n          this.parent.undoRedoModule['createUndoCollection']();\n          var record = {\n            'action': 'Search'\n          };\n          record['searchString'] = this.parent.undoRedoModule['searchString'];\n          this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n        }\n        this.parent.undoRedoModule['searchString'] = this.parent.treeGrid.searchSettings.key;\n      }\n      this.parent.notify('actionComplete', args);\n    }\n    if (!isNullOrUndefined(this.parent.toolbarModule) && !isNullOrUndefined(getValue('batchChanges', args))) {\n      this.parent.toolbarModule.refreshToolbarItems();\n    }\n    if (this.parent.isCancelled) {\n      setValue('requestType', 'cancel', updatedArgs);\n      setValue('action', 'CellEditing', updatedArgs);\n      this.parent.isCancelled = false;\n    }\n    if (getValue('requestType', args) === 'refresh' && isNullOrUndefined(getValue('type', args)) && this.parent.addDeleteRecord) {\n      if (this.parent.selectedRowIndex !== -1) {\n        if (!isNullOrUndefined(this.parent.selectionModule) && this.parent.selectionSettings && this.parent.selectionSettings.persistSelection && this.parent.editModule.isAdded) {\n          var selectedIndexes = this.parent.selectionModule.selectedRowIndexes;\n          if (selectedIndexes.length > 1 && this.parent.selectionSettings.persistSelection) {\n            for (var i = 0; i < selectedIndexes.length; i++) {\n              var records = this.parent.flatData[selectedIndexes[i].toString()];\n              this.parent.selectRows(records);\n            }\n          }\n        } else {\n          this.parent.selectRow(this.parent.selectedRowIndex);\n          if (this.parent.selectedRowIndex > this.parent.currentViewData.length - 1) {\n            this.parent.selectedRowIndex = -1;\n          }\n        }\n      } else {\n        if (!isNullOrUndefined(this.parent.selectionModule) && this.parent.selectionSettings && this.parent.selectionSettings.persistSelection && this.parent.editModule && !this.parent.editModule.isAdded) {\n          var selectedRecords = this.parent.selectionModule.getSelectedRecords();\n          var _loop_1 = function (i) {\n            var selectedTaskId = selectedRecords[i][this_1.parent.taskFields.id];\n            var existIndeletedRecords = this_1.parent.editModule.deletedRecord.some(function (item) {\n              return item.ganttProperties.taskId === selectedTaskId;\n            });\n            if (existIndeletedRecords) {\n              selectedRecords.splice(i, 1);\n            }\n          };\n          var this_1 = this;\n          for (var i = selectedRecords.length - 1; i >= 0; i--) {\n            _loop_1(i);\n          }\n        }\n        var indexvalue_1 = 0;\n        var dataCollection = this.parent.enableVirtualization ? this.parent.flatData : this.parent.currentViewData;\n        // To maintain 1st record selection, while deleting the last parent record at Virtual mode\n        dataCollection.map(function (data, index) {\n          if (!isNullOrUndefined(_this.parent.currentSelection) && data['ganttProperties'].taskId === _this.parent.currentSelection[_this.parent.taskFields.id]) {\n            indexvalue_1 = index;\n          }\n        });\n        this.addedRecord = true;\n        this.parent.selectRow(isNullOrUndefined(indexvalue_1) ? 0 : indexvalue_1);\n      }\n      if (!this.parent['isExpandPerformed']) {\n        this.parent.addDeleteRecord = false;\n      }\n      this.parent['isExpandPerformed'] = false;\n    }\n    if (this.parent.undoRedoModule) {\n      this.parent.undoRedoModule['isFromUndoRedo'] = false;\n    }\n    this.parent.trigger('actionComplete', updatedArgs);\n    if (this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n      for (var i = 0; i < this.parent.currentViewData.length; i++) {\n        if (this.parent.currentViewData[i].hasChildRecords && !this.parent.currentViewData[i].expanded) {\n          this.parent.chartRowsModule.updateDragDropRecords(this.parent.currentViewData[i]);\n        }\n      }\n      this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n    }\n    if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n      this.parent.hideMaskRow();\n    } else {\n      this.parent.hideSpinner();\n    }\n  };\n  GanttTreeGrid.prototype.updateKeyConfigSettings = function () {\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.delete;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.insert;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.upArrow;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.downArrow;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlHome;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlEnd;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.enter;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.tab;\n    delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.shiftTab;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.enter;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.upArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.downArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftUpArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftDownArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlUpArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlDownArrow;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.tab;\n    delete this.parent.treeGrid.keyboardModule.keyConfigs.shiftTab;\n  };\n  /**\n   * Method to bind internal events on TreeGrid element\n   *\n   * @returns {void} .\n   */\n  GanttTreeGrid.prototype.wireEvents = function () {\n    var content = this.parent.treeGrid.element.querySelector('.e-content');\n    if (content) {\n      EventHandler.add(content, 'scroll', this.scrollHandler, this);\n    }\n    if (this.parent.isAdaptive) {\n      EventHandler.add(this.parent.treeGridPane, 'click', this.treeGridClickHandler, this);\n    }\n  };\n  GanttTreeGrid.prototype.unWireEvents = function () {\n    var content = this.parent.treeGrid.element && this.parent.treeGrid.element.querySelector('.e-content');\n    if (content) {\n      EventHandler.remove(content, 'scroll', this.scrollHandler);\n    }\n    if (this.parent.isAdaptive) {\n      EventHandler.remove(this.parent.treeGridPane, 'click', this.treeGridClickHandler);\n    }\n  };\n  // eslint-disable-next-line\n  GanttTreeGrid.prototype.scrollHandler = function (e) {\n    var content = this.parent.treeGrid.element.querySelector('.e-content');\n    if (content.scrollTop !== this.previousScroll.top) {\n      this.parent.notify('grid-scroll', {\n        top: content.scrollTop\n      });\n    }\n    this.previousScroll.top = content.scrollTop;\n    if (this.parent.contextMenuModule && this.parent.contextMenuModule.isOpen) {\n      this.parent.contextMenuModule.contextMenu.close();\n    }\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  GanttTreeGrid.prototype.validateGanttColumns = function () {\n    var ganttObj = this.parent;\n    var length = ganttObj.columns.length;\n    var tasks = this.parent.taskFields;\n    this.parent.columnMapping = {};\n    this.parent.columnByField = {};\n    this.parent.customColumns = [];\n    var tasksMapping = ['id', 'name', 'startDate', 'endDate', 'duration', 'dependency', 'progress', 'baselineStartDate', 'baselineEndDate', 'resourceInfo', 'notes', 'work', 'manual', 'type', 'milestone', 'segments'];\n    var _loop_2 = function (i) {\n      var column = {};\n      if (typeof ganttObj.columns[i] === 'string') {\n        column.field = ganttObj.columns[i];\n      } else {\n        column = ganttObj.columns[i];\n      }\n      var columnName = [];\n      if (tasksMapping.length > 0) {\n        columnName = tasksMapping.filter(function (name) {\n          return column.field === tasks[name];\n        });\n      }\n      if (columnName.length === 0) {\n        if (column.field === this_2.parent.resourceFields.group) {\n          return \"continue\";\n        }\n        this_2.parent.customColumns.push(column.field);\n        column.headerText = column.headerText ? column.headerText : column.field;\n        column.width = column.width ? column.width : 150;\n        column.editType = column.editType ? column.editType : 'stringedit';\n        column.type = column.type ? column.type : 'string';\n        this_2.bindTreeGridColumnProperties(column, true);\n        return \"continue\";\n      } else {\n        var index = tasksMapping.indexOf(columnName[0]);\n        tasksMapping.splice(index, 1);\n        this_2.createTreeGridColumn(column, true);\n        this_2.parent.columnMapping[columnName[0]] = column.field;\n      }\n    };\n    var this_2 = this;\n    for (var i = 0; i < length; i++) {\n      _loop_2(i);\n    }\n    /** Create default columns with task settings property */\n    for (var j = 0; j < tasksMapping.length; j++) {\n      var column = {};\n      if (!isNullOrUndefined(tasks[tasksMapping[j]])) {\n        column.field = tasks[tasksMapping[j]];\n        this.createTreeGridColumn(column, length === 0);\n        this.parent.columnMapping[tasksMapping[j]] = column.field;\n      }\n    }\n    if (this.parent.viewType !== 'ProjectView') {\n      var column = {};\n      this.composeUniqueIDColumn(column);\n      this.createTreeGridColumn(column, true);\n    }\n  };\n  /**\n   *\n   * @param {GanttColumnModel} column .\n   * @param {boolean} isDefined .\n   * @returns {void} .\n   */\n  GanttTreeGrid.prototype.createTreeGridColumn = function (column, isDefined) {\n    var _this = this;\n    var taskSettings = this.parent.taskFields;\n    var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n      return column.field === prevcolumn.field;\n    })[0];\n    column.disableHtmlEncode = !isNullOrUndefined(column.disableHtmlEncode) ? column.disableHtmlEncode : this.parent.disableHtmlEncode;\n    if (taskSettings.id !== column.field) {\n      column.clipMode = column.clipMode ? column.clipMode : 'EllipsisWithTooltip';\n    }\n    if (taskSettings.id === column.field) {\n      /** Id column */\n      this.composeIDColumn(column);\n    } else if (taskSettings.name === column.field) {\n      /** Name column */\n      if (this.parent.isLocaleChanged && previousColumn) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('name');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('name');\n      }\n      column.width = column.width ? column.width : 150;\n      column.editType = column.editType ? column.editType : 'stringedit';\n      column.type = column.type ? column.type : 'string';\n    } else if (taskSettings.startDate === column.field) {\n      /** Name column */\n      if (this.parent.isLocaleChanged && previousColumn) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('startDate');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('startDate');\n      }\n      column.editType = column.editType ? column.editType : this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n      column.format = column.format ? column.format : {\n        type: 'date',\n        format: this.parent.getDateFormat()\n      };\n      column.width = column.width ? column.width : 150;\n      if (column.edit && column.edit.params) {\n        column.edit.params['renderDayCell'] = this.parent.renderWorkingDayCell.bind(this.parent);\n      } else {\n        if (column.edit) {\n          column.edit.params = {\n            renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent)\n          };\n        } else {\n          column.edit = {\n            params: {\n              renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent)\n            }\n          };\n        }\n      }\n    } else if (taskSettings.endDate === column.field) {\n      if (this.parent.isLocaleChanged && previousColumn) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('endDate');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('endDate');\n      }\n      column.format = column.format ? column.format : {\n        type: 'date',\n        format: this.parent.getDateFormat()\n      };\n      column.editType = column.editType ? column.editType : this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n      column.width = column.width ? column.width : 150;\n      if (column.edit && column.edit.params) {\n        column.edit.params['renderDayCell'] = this.parent.renderWorkingDayCell.bind(this.parent);\n      } else {\n        if (column.edit) {\n          column.edit.params = {\n            renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent)\n          };\n        } else {\n          column.edit = {\n            params: {\n              renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent)\n            }\n          };\n        }\n      }\n    } else if (taskSettings.duration === column.field) {\n      column.width = column.width ? column.width : 150;\n      if (this.parent.isLocaleChanged && previousColumn) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('duration');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('duration');\n      }\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : !isNullOrUndefined(column.edit) && !isNullOrUndefined(column.edit.read) ? null : this.durationValueAccessor.bind(this);\n      column.editType = column.editType ? column.editType : 'stringedit';\n      column.type = column.type ? column.type : 'string';\n    } else if (taskSettings.progress === column.field) {\n      this.composeProgressColumn(column);\n    } else if (taskSettings.dependency === column.field) {\n      if (this.parent.isLocaleChanged && previousColumn) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('dependency');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('dependency');\n      }\n      column.width = column.width ? column.width : 150;\n      column.editType = column.editType ? column.editType : 'stringedit';\n      column.type = 'string';\n      column.allowFiltering = column.allowFiltering === false ? false : true;\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.dependencyValueAccessor.bind(this);\n      if (isNullOrUndefined(column.filter) && this.parent.locale !== 'en-US') {\n        column.filter = {\n          'ui': {\n            create: function (args) {\n              var flValInput = createElement('input', {\n                className: 'flm-input'\n              });\n              args.target.appendChild(flValInput);\n              _this.dropInstance = new AutoComplete({\n                dataSource: _this.changeLocale(_this.parent.treeGrid.grid.dataSource),\n                fields: {\n                  text: _this.parent.taskFields.dependency,\n                  value: _this.parent.taskFields.dependency\n                },\n                placeholder: _this.parent.localeObj.getConstant('enterValue'),\n                popupHeight: '200px'\n              });\n              _this.dropInstance.appendTo(flValInput);\n            },\n            write: function (args) {\n              _this.dropInstance.value = args.filteredValue;\n            },\n            read: function (args) {\n              args.fltrObj.filterByColumn(args.column.field, args.operator, _this.changeDelocale(_this.dropInstance.value));\n            }\n          }\n        };\n      }\n    } else if (taskSettings.resourceInfo === column.field) {\n      this.composeResourceColumn(column);\n    } else if (taskSettings.notes === column.field) {\n      if (previousColumn && this.parent.isLocaleChanged) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('notes');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('notes');\n      }\n      column.width = column.width ? column.width : 150;\n      column.editType = column.editType ? column.editType : 'stringedit';\n      if (!this.parent.showInlineNotes) {\n        if (!column.template) {\n          column.template = '<div class=\"e-ganttnotes-info\">' + '<span class=\"e-icons e-notes-info\"></span></div>';\n        }\n      }\n    } else if (taskSettings.baselineStartDate === column.field || taskSettings.baselineEndDate === column.field) {\n      var colName = taskSettings.baselineEndDate === column.field ? 'baselineEndDate' : 'baselineStartDate';\n      column.width = column.width ? column.width : 150;\n      if (this.parent.isLocaleChanged && previousColumn) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant(colName);\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant(colName);\n      }\n      column.format = column.format ? column.format : {\n        type: 'date',\n        format: this.parent.getDateFormat()\n      };\n      column.editType = column.editType ? column.editType : this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n    } else if (taskSettings.work === column.field) {\n      if (previousColumn && this.parent.isLocaleChanged) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('work');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('work');\n      }\n      column.width = column.width ? column.width : 150;\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.workValueAccessor.bind(this);\n      column.editType = column.editType ? column.editType : 'numericedit';\n    } else if (taskSettings.type === column.field) {\n      if (previousColumn && this.parent.isLocaleChanged) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('taskType');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskType');\n      }\n      column.width = column.width ? column.width : 150;\n      //column.type = 'string';\n      column.editType = 'dropdownedit';\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.taskTypeValueAccessor.bind(this);\n    } else if (taskSettings.manual === column.field && this.parent.taskMode === 'Custom') {\n      if (previousColumn && this.parent.isLocaleChanged) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('taskMode');\n      } else {\n        column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskMode');\n      }\n      column.width = column.width ? column.width : 120;\n      column.editType = column.editType ? column.editType : 'dropdownedit';\n      column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.modeValueAccessor.bind(this);\n      column.edit = {\n        params: {\n          query: new Query(),\n          dataSource: [{\n            id: 1,\n            text: this.parent.localeObj.getConstant('manual'),\n            value: true\n          }, {\n            id: 2,\n            text: this.parent.localeObj.getConstant('auto'),\n            value: false\n          }],\n          fields: {\n            text: 'text',\n            value: 'value'\n          }\n        }\n      };\n    }\n    this.bindTreeGridColumnProperties(column, isDefined);\n  };\n  GanttTreeGrid.prototype.changeLocale = function (data) {\n    var _this = this;\n    var filter = [];\n    var flatdatas = data.map(function (task) {\n      return task.ganttProperties.predecessorsName;\n    });\n    flatdatas.map(function (predecessorsName) {\n      if (!isNullOrUndefined(predecessorsName)) {\n        var value_1 = '';\n        var splitString_1 = predecessorsName.split(',');\n        splitString_1.map(function (splitvalue, index) {\n          if (splitvalue.includes('FS')) {\n            value_1 += splitvalue.replace('FS', _this.parent.localeObj.getConstant('FS'));\n            value_1 += splitString_1.length !== index + 1 ? ',' : '';\n          } else if (splitvalue.includes('FF')) {\n            value_1 += splitvalue.replace('FF', _this.parent.localeObj.getConstant('FF'));\n            value_1 += splitString_1.length !== index + 1 ? ',' : '';\n          } else if (splitvalue.includes('SS')) {\n            value_1 += splitvalue.replace('SS', _this.parent.localeObj.getConstant('SS'));\n            value_1 += splitString_1.length !== index + 1 ? ',' : '';\n          } else if (splitvalue.includes('SF')) {\n            value_1 += splitvalue.replace('SF', _this.parent.localeObj.getConstant('SF'));\n            value_1 += splitString_1.length !== index + 1 ? ',' : '';\n          }\n        });\n        filter.push(value_1);\n      }\n    });\n    return filter;\n  };\n  GanttTreeGrid.prototype.changeDelocale = function (dependency) {\n    var FF = this.parent.localeObj.getConstant('FF');\n    var FS = this.parent.localeObj.getConstant('FS');\n    var SS = this.parent.localeObj.getConstant('SS');\n    var SF = this.parent.localeObj.getConstant('SF');\n    if (!isNullOrUndefined(dependency)) {\n      var splitString_2 = dependency.split(',');\n      var value_2 = '';\n      splitString_2.map(function (splitvalue, index) {\n        if (splitvalue.includes(FF)) {\n          value_2 += splitvalue.replace(FF, 'FF');\n          value_2 += splitString_2.length !== index + 1 ? ',' : '';\n        } else if (splitvalue.includes(FS)) {\n          value_2 += splitvalue.replace(FS, 'FS');\n          value_2 += splitString_2.length !== index + 1 ? ',' : '';\n        } else if (splitvalue.includes(SS)) {\n          value_2 += splitvalue.replace(SS, 'SS');\n          value_2 += splitString_2.length !== index + 1 ? ',' : '';\n        } else if (splitvalue.includes(SF)) {\n          value_2 += splitvalue.replace(SF, 'SF');\n          value_2 += splitString_2.length !== index + 1 ? ',' : '';\n        } else {\n          value_2 += splitvalue;\n          value_2 += splitString_2.length !== index + 1 ? ',' : '';\n        }\n      });\n      return value_2;\n    }\n    return null;\n  };\n  /**\n   * Compose Resource columns\n   *\n   * @param {GanttColumnModel} column .\n   * @returns {void} .\n   */\n  GanttTreeGrid.prototype.composeResourceColumn = function (column) {\n    var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n      return column.field === prevcolumn.field;\n    })[0];\n    if (previousColumn && this.parent.isLocaleChanged) {\n      column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('resourceName');\n    } else {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('resourceName');\n    }\n    column.width = column.width ? column.width : 150;\n    column.type = 'string';\n    column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.resourceValueAccessor.bind(this);\n    column.allowFiltering = column.allowFiltering === false ? false : true;\n  };\n  /**\n   * @param {IGanttData} data .\n   * @returns {object} .\n   * @private\n   */\n  GanttTreeGrid.prototype.getResourceIds = function (data) {\n    var value = getValue(this.parent.taskFields.resourceInfo, data.taskData);\n    var id = [];\n    if (!isNullOrUndefined(value)) {\n      for (var i = 0; i < value.length; i++) {\n        id.push(typeof value[i] === 'object' ? value[i][this.parent.resourceFields.id] : value[i]);\n      }\n      return id;\n    } else {\n      return value;\n    }\n  };\n  /**\n   * Create Id column\n   *\n   * @param {GanttColumnModel} column .\n   * @returns {void} .\n   */\n  GanttTreeGrid.prototype.composeIDColumn = function (column) {\n    var isProjectView = this.parent.viewType === 'ProjectView';\n    var lengthDataSource = this.parent.dataSource ? this.parent.dataSource['length'] : 0;\n    var taskIDName;\n    column.isPrimaryKey = isProjectView ? true : false;\n    if (this.parent.isLocaleChanged) {\n      var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n        return column.field === prevcolumn.field;\n      })[0];\n      if (previousColumn) {\n        column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('id');\n      }\n    } else {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('id');\n    }\n    column.width = column.width ? column.width : 100;\n    for (var i = 0; i < lengthDataSource; i++) {\n      if (!isNullOrUndefined(this.parent.dataSource[i][this.parent.taskFields.id])) {\n        taskIDName = this.parent.dataSource[i][this.parent.taskFields.id];\n        break;\n      }\n    }\n    if (typeof taskIDName === 'string' || isNullOrUndefined(taskIDName)) {\n      if (this.parent.viewType === 'ResourceView') {\n        column.allowEditing = column.allowEditing ? column.allowEditing : false;\n      } else {\n        column.allowEditing = column.allowEditing ? column.allowEditing : true;\n      }\n      column.editType = column.editType ? column.editType : 'stringedit';\n    } else {\n      column.allowEditing = column.allowEditing ? column.allowEditing : false;\n      column.editType = column.editType ? column.editType : 'numericedit';\n    }\n    column.valueAccessor = isProjectView ? null : this.idValueAccessor.bind(this);\n  };\n  GanttTreeGrid.prototype.composeUniqueIDColumn = function (column) {\n    column.field = 'rowUniqueID';\n    column.isPrimaryKey = true;\n    column.headerText = 'UniqueID';\n    column.allowEditing = false;\n    column.visible = false;\n  };\n  /**\n   * Create progress column\n   *\n   * @param {GanttColumnModel} column .\n   * @returns {void} .\n   */\n  GanttTreeGrid.prototype.composeProgressColumn = function (column) {\n    var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n      return column.field === prevcolumn.field;\n    })[0];\n    if (this.parent.isLocaleChanged && previousColumn) {\n      column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('progress');\n    } else {\n      column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('progress');\n    }\n    column.width = column.width ? column.width : 150;\n    column.editType = column.editType ? column.editType : 'numericedit';\n  };\n  /**\n   * @param {GanttColumnModel} newGanttColumn .\n   * @param {boolean} isDefined .\n   * @returns {void} .\n   */\n  GanttTreeGrid.prototype.bindTreeGridColumnProperties = function (newGanttColumn, isDefined) {\n    var treeGridColumn = {};\n    var ganttColumn = {};\n    for (var _i = 0, _a = Object.keys(newGanttColumn); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      treeGridColumn[prop] = ganttColumn[prop] = newGanttColumn[prop];\n    }\n    this.parent.columnByField[ganttColumn.field] = ganttColumn;\n    this.parent.ganttColumns.push(new GanttColumn(ganttColumn));\n    if (isDefined) {\n      this.treeGridColumns.push(treeGridColumn);\n    }\n  }; // eslint-disable-next-line\n  GanttTreeGrid.prototype.durationValueAccessor = function (field, data, column) {\n    if (!isNullOrUndefined(data) && !isNullOrUndefined(data.ganttProperties)) {\n      var ganttProp = data.ganttProperties;\n      return this.parent.dataOperation.getDurationString(ganttProp.duration, ganttProp.durationUnit);\n    } else if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      return this.parent.dataOperation.getDurationString(parseInt(data[this.parent.taskFields.duration], 10), this.parent.durationUnit);\n    }\n    return '';\n  }; // eslint-disable-next-line\n  GanttTreeGrid.prototype.dependencyValueAccessor = function (field, data, column) {\n    var _this = this;\n    if (data && data.ganttProperties && !isNullOrUndefined(data.ganttProperties.predecessorsName)) {\n      var value_3 = '';\n      var predecessorsName = data.ganttProperties.predecessorsName;\n      var splitString_3 = predecessorsName.split(',');\n      splitString_3.map(function (splitvalue, index) {\n        if (splitvalue.includes('FS')) {\n          value_3 += splitvalue.replace('FS', _this.parent.localeObj.getConstant('FS'));\n          value_3 += splitString_3.length !== index + 1 ? ',' : '';\n        } else if (splitvalue.includes('FF')) {\n          value_3 += splitvalue.replace('FF', _this.parent.localeObj.getConstant('FF'));\n          value_3 += splitString_3.length !== index + 1 ? ',' : '';\n        } else if (splitvalue.includes('SS')) {\n          value_3 += splitvalue.replace('SS', _this.parent.localeObj.getConstant('SS'));\n          value_3 += splitString_3.length !== index + 1 ? ',' : '';\n        } else if (splitvalue.includes('SF')) {\n          value_3 += splitvalue.replace('SF', _this.parent.localeObj.getConstant('SF'));\n          value_3 += splitString_3.length !== index + 1 ? ',' : '';\n        }\n      });\n      return value_3;\n    }\n    return '';\n  };\n  GanttTreeGrid.prototype.resourceValueAccessor = function (field, data, column) {\n    var ganttProp = data.ganttProperties;\n    if (!isNullOrUndefined(ganttProp)) {\n      return ganttProp.resourceNames;\n    }\n    return '';\n  };\n  GanttTreeGrid.prototype.workValueAccessor = function (field, data, column) {\n    var ganttProp = data.ganttProperties;\n    if (!isNullOrUndefined(ganttProp)) {\n      return this.parent.dataOperation.getWorkString(ganttProp.work, ganttProp.workUnit);\n    }\n    return '';\n  };\n  GanttTreeGrid.prototype.taskTypeValueAccessor = function (field, data, column) {\n    var ganttProp = data.ganttProperties;\n    if (!isNullOrUndefined(ganttProp)) {\n      return ganttProp.taskType;\n    }\n    return '';\n  };\n  GanttTreeGrid.prototype.modeValueAccessor = function (field, data, column) {\n    if (data[field]) {\n      return 'Manual';\n    } else {\n      return 'Auto';\n    }\n  };\n  GanttTreeGrid.prototype.idValueAccessor = function (field, data, column) {\n    return data.level === 0 ? 'R-' + data.ganttProperties.taskId : 'T-' + data.ganttProperties.taskId;\n  };\n  GanttTreeGrid.prototype.updateScrollTop = function (args) {\n    var newScrollTop = getValue('top', args);\n    this.treeGridElement.querySelector('.e-content').scrollTop = newScrollTop;\n    this.previousScroll.top = this.treeGridElement.querySelector('.e-content').scrollTop;\n  };\n  GanttTreeGrid.prototype.treeGridClickHandler = function (e) {\n    this.parent.notify('treeGridClick', e);\n  };\n  GanttTreeGrid.prototype.removeEventListener = function () {\n    this.parent.off('renderPanels', this.createContainer);\n    this.parent.off('chartScroll', this.updateScrollTop);\n    this.parent.off('destroy', this.destroy);\n    this.parent.treeGrid.off('reactTemplateRender', this.renderReactTemplate);\n  };\n  GanttTreeGrid.prototype.destroy = function () {\n    this.removeEventListener();\n    this.unWireEvents();\n    if (this.parent.treeGrid.element) {\n      this.parent.treeGrid.destroy();\n    }\n  };\n  return GanttTreeGrid;\n}();\nexport { GanttTreeGrid };","map":{"version":3,"names":["TreeGrid","createElement","isNullOrUndefined","getValue","extend","EventHandler","deleteObject","remove","setValue","Query","Column","GanttColumn","isCountRequired","AutoComplete","GanttTreeGrid","parent","_this","isPersist","previousScroll","top","left","queryCellInfo","args","trigger","headerCellInfo","rowDataBound","columnMenuOpen","notify","document","querySelector","addEventListener","filPopOptions","filOptions","classList","contains","filterModule","filterMenuElement","columnMenuClick","objectEqualityChecker","old","current","keys","Object","isEqual","excludeKeys","i","length","oldKey","parseInt","toString","Date","getTime","currentKey","indexOf","modifiedRecords","push","treeGrid","allowSelection","allowKeyboard","enableHtmlSanitizer","enableImmutableMode","treeGridColumns","isLocaleChanged","isLoad","previousGanttColumns","columns","validateGanttColumns","prototype","on","createContainer","updateScrollTop","destroy","renderReactTemplate","portals","_i","args_1","portal","renderTemplates","treeGridElement","id","element","className","tempHeader","treeGridPane","appendChild","add","renderTreeGrid","composeProperties","bindEvents","root","registeredTemplate","ref","appendTo","grid","toolbarModule","isReact","wireEvents","enableAdaptiveUI","hasChildMapping","taskFields","query","loadChildOnDemand","parentIdMapping","parentID","idMapping","showColumnMenu","enableCollapseAll","collapseAllParentTasks","columnMenuItems","enableRtl","childMapping","child","treeColumnIndex","loadingIndicator","enableVirtualMaskRow","dataSource","count","result","flatData","expandStateMapping","expandState","isGantt","rowHeight","gridLines","searchSettings","fields","key","isJsComponent","height","getElementsByClassName","getContentDiv","getHeaderDiv","getScrollbarWidth","outer","style","visibility","overflow","msOverflowStyle","inner","scrollbarWidth","offsetWidth","parentNode","removeChild","ensureScrollBar","content","headerDiv","scrollWidth","isMobile","test","navigator","userAgent","cssText","dataBound","bind","collapsing","collapsed","expanding","expanded","actionBegin","actionComplete","treeActionComplete","created","actionFailure","beforeDataBound","dataStateChange","selectionModule","selectionSettings","persistSelection","getSelectedRowIndexes","updatedRecords","virtualScrollModule","enableVirtualization","updateContentHeight","treeDataBound","isVirtualScroll","indicatorType","hideMaskRow","refreshToolbarItems","prevCurrentView","currentViewData","action","requestType","collapsingArgs","record","recordLength","ganttChartModule","isExpandCollapseFromChart","createExpandCollapseArgs","collapseGanttRow","expandingArgs","expandGanttRow","isExpandCollapseLevelMethod","collapsedArgs","collapsedGanttRow","isCollapseAll","allowTaskbarOverlap","contentHeight","children","hideSpinner","expandedArgs","expandedGanttRow","isExpandAll","undoRedoModule","flag","editModule","type","cancel","showMaskRow","showSpinner","updateKeyConfigSettings","currentRecord","chartRow","gridRow","getChartRows","eventArgs","data","recordOne","updatedArgs","sortSettings","focussedElement","focus","cellEditModule","getTaskByUniqueID","uniqueID","taskData","duration","resourceInfo","initiateCellEdit","currentEditRow","isCellEdit","isCancelled","addDeleteRecord","selectedRowIndex","isAdded","selectedIndexes","selectedRowIndexes","records","selectRows","selectRow","selectedRecords","getSelectedRecords","_loop_1","selectedTaskId","this_1","existIndeletedRecords","deletedRecord","some","item","ganttProperties","taskId","splice","indexvalue_1","dataCollection","map","index","currentSelection","addedRecord","showOverAllocation","hasChildRecords","chartRowsModule","updateDragDropRecords","renderRangeContainer","keyboardModule","keyConfigs","delete","insert","upArrow","downArrow","ctrlHome","ctrlEnd","enter","tab","shiftTab","ctrlShiftUpArrow","ctrlShiftDownArrow","ctrlUpArrow","ctrlDownArrow","scrollHandler","isAdaptive","treeGridClickHandler","unWireEvents","e","scrollTop","contextMenuModule","isOpen","contextMenu","close","ganttObj","tasks","columnMapping","columnByField","customColumns","tasksMapping","_loop_2","column","field","columnName","filter","name","this_2","resourceFields","group","headerText","width","editType","bindTreeGridColumnProperties","createTreeGridColumn","j","viewType","composeUniqueIDColumn","isDefined","taskSettings","previousColumn","prevcolumn","disableHtmlEncode","clipMode","composeIDColumn","localeObj","getConstant","startDate","getDateFormat","toLowerCase","format","edit","params","renderWorkingDayCell","renderDayCell","endDate","valueAccessor","read","durationValueAccessor","progress","composeProgressColumn","dependency","allowFiltering","dependencyValueAccessor","locale","create","flValInput","target","dropInstance","changeLocale","text","value","placeholder","popupHeight","write","filteredValue","fltrObj","filterByColumn","operator","changeDelocale","composeResourceColumn","notes","showInlineNotes","template","baselineStartDate","baselineEndDate","colName","work","workValueAccessor","taskTypeValueAccessor","manual","taskMode","modeValueAccessor","flatdatas","task","predecessorsName","value_1","splitString_1","split","splitvalue","includes","replace","FF","FS","SS","SF","splitString_2","value_2","resourceValueAccessor","getResourceIds","isProjectView","lengthDataSource","taskIDName","isPrimaryKey","allowEditing","idValueAccessor","visible","newGanttColumn","treeGridColumn","ganttColumn","_a","prop","ganttColumns","ganttProp","dataOperation","getDurationString","durationUnit","value_3","splitString_3","resourceNames","getWorkString","workUnit","taskType","level","newScrollTop","removeEventListener","off"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/base/tree-grid.js"],"sourcesContent":["import { TreeGrid } from '@syncfusion/ej2-treegrid';\nimport { createElement, isNullOrUndefined, getValue, extend, EventHandler, deleteObject, remove } from '@syncfusion/ej2-base';\nimport { setValue } from '@syncfusion/ej2-base';\nimport { Query } from '@syncfusion/ej2-data';\nimport { Column as GanttColumn } from '../models/column';\nimport { isCountRequired } from './utils';\nimport { AutoComplete } from '@syncfusion/ej2-dropdowns';\n/** @hidden */\nvar GanttTreeGrid = /** @class */ (function () {\n    function GanttTreeGrid(parent) {\n        var _this = this;\n        this.isPersist = false;\n        this.previousScroll = { top: 0, left: 0 };\n        this.queryCellInfo = function (args) {\n            _this.parent.trigger('queryCellInfo', args);\n        };\n        this.headerCellInfo = function (args) {\n            _this.parent.trigger('headerCellInfo', args);\n        };\n        this.rowDataBound = function (args) {\n            _this.parent.trigger('rowDataBound', args);\n        };\n        this.columnMenuOpen = function (args) {\n            _this.parent.notify('columnMenuOpen', args);\n            _this.parent.trigger('columnMenuOpen', args);\n            document.querySelector('.e-colmenu').addEventListener('mousemove', function () {\n                var filPopOptions = document.querySelector('.e-filter-popup');\n                var filOptions = document.querySelector('.e-filter-item');\n                if (!isNullOrUndefined(filPopOptions)) {\n                    if (!filOptions.classList.contains('e-focused')) {\n                        remove(_this.parent.filterModule.filterMenuElement);\n                    }\n                }\n            });\n        };\n        this.columnMenuClick = function (args) {\n            _this.parent.trigger('columnMenuClick', args);\n        };\n        this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                var excludeKeys = ['Children', 'childRecords', 'taskData', 'uniqueID', 'parentItem', 'parentUniqueID', 'ganttProperties'];\n                for (var i = 0; i < keys.length; i++) {\n                    var oldKey = old[keys[parseInt(i.toString(), 10)]] instanceof Date ?\n                        new Date(old[keys[parseInt(i.toString(), 10)]]).getTime() : old[keys[parseInt(i.toString(), 10)]];\n                    var currentKey = current[keys[parseInt(i.toString(), 10)]] instanceof Date ?\n                        new Date(current[keys[parseInt(i.toString(), 10)]]).getTime() : current[keys[parseInt(i.toString(), 10)]];\n                    if (oldKey !== currentKey && excludeKeys.indexOf(keys[i]) === -1) {\n                        _this.parent.modifiedRecords.push(current);\n                        isEqual = false;\n                        break;\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        this.parent = parent;\n        this.parent.treeGrid = new TreeGrid();\n        this.parent.treeGrid.allowSelection = false;\n        this.parent.treeGrid.allowKeyboard = this.parent.allowKeyboard;\n        this.parent.treeGrid['${enableHtmlSanitizer}'] = this.parent.enableHtmlSanitizer;\n        this.parent.treeGrid.enableImmutableMode = this.parent.enableImmutableMode;\n        this.treeGridColumns = [];\n        if (!this.parent.isLocaleChanged && this.parent.isLoad) {\n            this.parent.previousGanttColumns = extend([], [], this.parent.columns, true);\n        }\n        this.validateGanttColumns();\n        if (this.parent.isLocaleChanged) {\n            this.parent.isLocaleChanged = false;\n        }\n        this.addEventListener();\n    }\n    GanttTreeGrid.prototype.addEventListener = function () {\n        this.parent.on('renderPanels', this.createContainer, this);\n        this.parent.on('chartScroll', this.updateScrollTop, this);\n        this.parent.on('destroy', this.destroy, this);\n        this.parent.treeGrid.on('renderReactTemplate', this.renderReactTemplate, this);\n    };\n    GanttTreeGrid.prototype.renderReactTemplate = function (args) {\n        var portals = 'portals';\n        for (var _i = 0, args_1 = args; _i < args_1.length; _i++) {\n            var portal = args_1[_i];\n            if (this.parent[portals].indexOf(portal) === -1) {\n                this.parent[portals].push(portal);\n            }\n        }\n        this.parent.renderTemplates();\n    };\n    GanttTreeGrid.prototype.createContainer = function () {\n        //let height: number = this.parent.ganttHeight - this.parent.toolbarModule.element.offsetHeight - 46;\n        this.treeGridElement = createElement('div', {\n            id: 'treeGrid' + this.parent.element.id, className: 'e-gantt-tree-grid'\n            //  styles: 'height:' + height + 'px;'\n        });\n        var tempHeader = createElement('div', { className: 'e-gantt-temp-header' });\n        this.parent.treeGridPane.appendChild(this.treeGridElement);\n        this.treeGridElement.appendChild(tempHeader);\n        this.parent.treeGridPane.classList.add('e-temp-content');\n    };\n    /**\n     * Method to initiate TreeGrid\n     *\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.renderTreeGrid = function () {\n        this.composeProperties();\n        this.bindEvents();\n        var root = 'root';\n        this.parent.treeGrid[root] = this.parent[root] ? this.parent[root] : this.parent;\n        setValue('registeredTemplate', this.registeredTemplate, this.parent.treeGrid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this.parent[\"\" + ref], this.parent.treeGrid);\n        this.parent.treeGrid.appendTo(this.treeGridElement);\n        if (this.parent.treeGrid.grid && this.parent.toolbarModule && this.parent.isReact) {\n            this.parent.treeGrid.grid.portals = this.parent.portals;\n        }\n        this.wireEvents();\n    };\n    GanttTreeGrid.prototype.composeProperties = function () {\n        this.parent.treeGrid.enableAdaptiveUI = this.parent.enableAdaptiveUI;\n        this.parent.treeGrid.hasChildMapping = this.parent.taskFields.hasChildMapping;\n        this.parent.treeGrid.query = this.parent.query;\n        this.parent.treeGrid.loadChildOnDemand = this.parent.loadChildOnDemand;\n        this.parent.treeGrid['isFromGantt'] = true;\n        this.parent.treeGrid.parentIdMapping = this.parent.taskFields.parentID;\n        if (this.parent.taskFields.parentID) {\n            this.parent.treeGrid.idMapping = this.parent.taskFields.id;\n        }\n        this.parent.treeGrid.showColumnMenu = this.parent.showColumnMenu;\n        this.parent.treeGrid.enableCollapseAll = this.parent.collapseAllParentTasks;\n        this.parent.treeGrid.columnMenuItems = this.parent.columnMenuItems;\n        this.parent.treeGrid.enableRtl = this.parent.enableRtl;\n        this.parent.treeGrid.childMapping = isNullOrUndefined(this.parent.taskFields.child) ? '' : this.parent.taskFields.child;\n        this.parent.treeGrid.treeColumnIndex = this.parent.treeColumnIndex;\n        this.parent.treeGrid.columns = this.treeGridColumns;\n        this.parent.treeGrid.loadingIndicator = this.parent.loadingIndicator;\n        this.parent.treeGrid.enableVirtualMaskRow = this.parent.enableVirtualMaskRow;\n        if (this.parent.dataSource instanceof Object && isCountRequired(this.parent)) {\n            // In order to bind the observable data at load time, hasChildMapping is necessary to be mapped.\n            this.parent.treeGrid.hasChildMapping = 'isParent';\n            var count = getValue('count', this.parent.dataSource);\n            this.parent.treeGrid.dataSource = { result: this.parent.flatData, count: count };\n        }\n        else {\n            if (this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n                this.parent.treeGrid.dataSource = this.parent.dataSource;\n            }\n            else {\n                this.parent.treeGrid.hasChildMapping = null;\n                this.parent.treeGrid.dataSource = this.parent.flatData;\n            }\n        }\n        this.parent.treeGrid.expandStateMapping = this.parent.taskFields.expandState;\n        var isGantt = 'isGantt';\n        this.parent.treeGrid[isGantt] = true;\n        this.parent.treeGrid.rowHeight = this.parent.rowHeight;\n        this.parent.treeGrid.gridLines = this.parent.gridLines;\n        if (this.parent.searchSettings.fields.length !== 0 || this.parent.searchSettings.key !== '') {\n            this.parent.treeGrid.searchSettings = this.parent.searchSettings;\n        }\n        var isJsComponent = 'isJsComponent';\n        this.parent.treeGrid[isJsComponent] = true;\n        this.parent.treeGrid.height =\n            this.parent.element.getElementsByClassName('e-chart-scroll-container e-content')[0]['offsetHeight'] - (this.parent.flatData.length === 0 ? 0 : 19);\n    };\n    GanttTreeGrid.prototype.getContentDiv = function () {\n        return this.treeGridElement.querySelector('.e-content');\n    };\n    GanttTreeGrid.prototype.getHeaderDiv = function () {\n        return this.treeGridElement.querySelector('.e-headercontent');\n    };\n    GanttTreeGrid.prototype.getScrollbarWidth = function () {\n        var outer = document.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.overflow = 'scroll';\n        outer.style.msOverflowStyle = 'scrollbar';\n        var inner = document.createElement('div');\n        outer.appendChild(inner);\n        this.parent.element.appendChild(outer);\n        var scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n        outer.parentNode.removeChild(outer);\n        return scrollbarWidth;\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttTreeGrid.prototype.ensureScrollBar = function () {\n        var content = this.getContentDiv();\n        var headerDiv = this.getHeaderDiv();\n        var scrollWidth = this.getScrollbarWidth();\n        var isMobile = /Android|Mac|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        if (scrollWidth !== 0) {\n            content.style.cssText += 'width: calc(100% + ' + (scrollWidth + 1) + 'px);'; //actual scrollbar width 17 px but here scrollbar width set to 16px hence adding increment of 1\n        }\n        else {\n            content.classList.add('e-gantt-scroll-padding');\n        }\n        if (scrollWidth === 0 && isMobile) {\n            headerDiv.style.cssText += 'width: calc(100% + 17px);';\n        }\n    };\n    GanttTreeGrid.prototype.bindEvents = function () {\n        this.parent.treeGrid.dataBound = this.dataBound.bind(this);\n        this.parent.treeGrid.collapsing = this.collapsing.bind(this);\n        this.parent.treeGrid.collapsed = this.collapsed.bind(this);\n        this.parent.treeGrid.expanding = this.expanding.bind(this);\n        this.parent.treeGrid.expanded = this.expanded.bind(this);\n        this.parent.treeGrid.actionBegin = this.actionBegin.bind(this);\n        this.parent.treeGrid.actionComplete = this.treeActionComplete.bind(this);\n        this.parent.treeGrid.created = this.created.bind(this);\n        this.parent.treeGrid.actionFailure = this.actionFailure.bind(this);\n        this.parent.treeGrid.queryCellInfo = this.queryCellInfo.bind(this);\n        this.parent.treeGrid.headerCellInfo = this.headerCellInfo.bind(this);\n        this.parent.treeGrid.rowDataBound = this.rowDataBound.bind(this);\n        this.parent.treeGrid.columnMenuOpen = this.columnMenuOpen.bind(this);\n        this.parent.treeGrid.columnMenuClick = this.columnMenuClick.bind(this);\n        this.parent.treeGrid.beforeDataBound = this.beforeDataBound.bind(this);\n        this.parent.treeGrid.dataStateChange = this.dataStateChange.bind(this);\n    };\n    GanttTreeGrid.prototype.beforeDataBound = function (args) {\n        if (!isNullOrUndefined(this.parent.selectionModule) && this.parent.selectionSettings &&\n            this.parent.selectionSettings.persistSelection && this.parent.selectionModule.getSelectedRowIndexes().length > 0 &&\n            args['actionArgs']['requestType'] === 'sorting') {\n            this.isPersist = true;\n        }\n        this.parent.updatedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n            getValue('virtualScrollModule.visualData', this.parent.treeGrid) : getValue('result', args);\n        if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n            this.parent.updateContentHeight(args);\n        }\n        setValue('contentModule.objectEqualityChecker', this.objectEqualityChecker, this.parent.treeGrid.grid);\n    };\n    GanttTreeGrid.prototype.dataBound = function (args) {\n        this.ensureScrollBar();\n        this.parent.treeDataBound(args);\n        if (this.parent.isVirtualScroll) {\n            if ((this.parent.enableVirtualMaskRow && this.parent.enableVirtualization) ||\n                (this.parent.enableVirtualization && !this.parent.enableVirtualMaskRow && this.parent.loadingIndicator.indicatorType === 'Shimmer') ||\n                (this.parent.loadingIndicator.indicatorType === 'Shimmer')) {\n                this.parent.hideMaskRow();\n            }\n            this.parent.isVirtualScroll = false;\n            if (!isNullOrUndefined(this.parent.selectionModule) && !isNullOrUndefined(this.parent.toolbarModule)) {\n                this.parent.toolbarModule.refreshToolbarItems();\n            }\n        }\n        this.prevCurrentView = extend([], [], this.parent.currentViewData, true);\n    };\n    GanttTreeGrid.prototype.dataStateChange = function (args) {\n        if (args.action && args.action.requestType === 'refresh') {\n            this.parent.treeGrid.dataSource = {\n                result: getValue('result', this.parent.treeGrid.dataSource),\n                count: getValue('count', this.parent.treeGrid.dataSource)\n            };\n        }\n        this.parent.trigger('dataStateChange', args);\n    };\n    GanttTreeGrid.prototype.collapsing = function (args) {\n        // Collapsing event\n        var collapsingArgs;\n        var record = getValue('data', args);\n        var recordLength = record.length;\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n            if (!isNullOrUndefined(recordLength)) {\n                for (var i = 0; i < recordLength; i++) {\n                    collapsingArgs = this.createExpandCollapseArgs(args, record[i]);\n                    this.parent.ganttChartModule.collapseGanttRow(collapsingArgs);\n                }\n                setValue('cancel', getValue('cancel', collapsingArgs), args);\n            }\n            else {\n                collapsingArgs = this.createExpandCollapseArgs(args, null);\n                this.parent.ganttChartModule.collapseGanttRow(collapsingArgs);\n                setValue('cancel', getValue('cancel', collapsingArgs), args);\n            }\n        }\n    };\n    GanttTreeGrid.prototype.expanding = function (args) {\n        // Expanding event\n        var expandingArgs;\n        var record = getValue('data', args);\n        var recordLength = record.length;\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart) {\n            if (!isNullOrUndefined(recordLength)) {\n                for (var i = 0; i < recordLength; i++) {\n                    expandingArgs = this.createExpandCollapseArgs(args, record[i]);\n                    this.parent.ganttChartModule.expandGanttRow(expandingArgs);\n                }\n                setValue('cancel', getValue('cancel', expandingArgs), args);\n            }\n            else {\n                expandingArgs = this.createExpandCollapseArgs(args, null);\n                this.parent.ganttChartModule.expandGanttRow(expandingArgs);\n                setValue('cancel', getValue('cancel', expandingArgs), args);\n            }\n        }\n    };\n    GanttTreeGrid.prototype.collapsed = function (args) {\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n            var collapsedArgs = void 0;\n            var record = getValue('data', args);\n            var recordLength = record.length;\n            if (!isNullOrUndefined(recordLength)) {\n                for (var i = 0; i < recordLength; i++) {\n                    collapsedArgs = this.createExpandCollapseArgs(args, record[i]);\n                    this.parent.ganttChartModule.collapsedGanttRow(collapsedArgs);\n                }\n            }\n            else {\n                collapsedArgs = this.createExpandCollapseArgs(args, null);\n                this.parent.ganttChartModule.collapsedGanttRow(collapsedArgs);\n            }\n            if (!this.parent.ganttChartModule.isCollapseAll && collapsedArgs['gridRow'] && !this.parent.allowTaskbarOverlap) {\n                collapsedArgs['gridRow'].style.height = collapsedArgs['chartRow'].style.height;\n                this.parent.contentHeight = this.parent.enableRtl ? this.parent['element'].getElementsByClassName('e-content')[2].children[0]['offsetHeight'] :\n                    this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n                document.getElementsByClassName('e-chart-rows-container')[0]['style'].height = this.parent.contentHeight + 'px';\n            }\n        }\n        if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n            this.parent.hideMaskRow();\n        }\n        else {\n            this.parent.hideSpinner();\n        }\n        this.parent.trigger('collapsed', args);\n    };\n    GanttTreeGrid.prototype.expanded = function (args) {\n        if (!this.parent.ganttChartModule.isExpandCollapseFromChart && !this.parent.isExpandCollapseLevelMethod) {\n            var expandedArgs = void 0;\n            var record = getValue('data', args);\n            var recordLength = record.length;\n            if (!isNullOrUndefined(recordLength)) {\n                for (var i = 0; i < recordLength; i++) {\n                    expandedArgs = this.createExpandCollapseArgs(args, record[i]);\n                    this.parent.ganttChartModule.expandedGanttRow(expandedArgs);\n                }\n            }\n            else {\n                expandedArgs = this.createExpandCollapseArgs(args, null);\n                this.parent.ganttChartModule.expandedGanttRow(expandedArgs);\n            }\n            if (!this.parent.ganttChartModule.isExpandAll && args['row'] && !this.parent.allowTaskbarOverlap) {\n                args['row'].style.height = this.parent.rowHeight + 'px';\n                this.parent.contentHeight = this.parent.enableRtl ? this.parent['element'].getElementsByClassName('e-content')[2].children[0]['offsetHeight'] :\n                    this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n                document.getElementsByClassName('e-chart-rows-container')[0]['style'].height = this.parent.contentHeight + 'px';\n            }\n        }\n        if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n            this.parent.hideMaskRow();\n        }\n        else {\n            this.parent.hideSpinner();\n        }\n        this.parent.isCollapseAll = false;\n        this.parent.trigger('expanded', args);\n    };\n    GanttTreeGrid.prototype.actionBegin = function (args) {\n        if (this.parent.undoRedoModule && (args.requestType === 'filtering' || args.requestType === 'searching' || args.requestType === 'sorting' || args.requestType === 'filterAfterOpen')) {\n            this.parent.undoRedoModule['canUpdateIndex'] = false;\n        }\n        this.parent.notify('actionBegin', args);\n        var flag = getValue('doubleClickTarget', this.parent.treeGrid.editModule);\n        if (flag !== null) {\n            setValue('doubleClickTarget', null, this.parent.treeGrid.editModule);\n        }\n        this.parent.trigger('actionBegin', args);\n        if (args.requestType !== 'virtualscroll' && args.type !== 'edit' && args.requestType !== 'beginEdit' && !args.cancel) {\n            if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                this.parent.showMaskRow();\n            }\n            else {\n                this.parent.showSpinner();\n            }\n        }\n    }; // eslint-disable-next-line\n    GanttTreeGrid.prototype.created = function (args) {\n        this.updateKeyConfigSettings();\n    };\n    GanttTreeGrid.prototype.actionFailure = function (args) {\n        this.parent.trigger('actionFailure', args);\n    };\n    GanttTreeGrid.prototype.createExpandCollapseArgs = function (args, currentRecord) {\n        var chartRow;\n        var record = getValue('data', args);\n        var recordLength = record.length;\n        if (!isNullOrUndefined(recordLength)) {\n            var gridRow = getValue('row', args);\n            chartRow = this.parent.ganttChartModule.getChartRows()[this.parent.currentViewData.indexOf(currentRecord)];\n            var eventArgs = { data: currentRecord, gridRow: gridRow, chartRow: chartRow, cancel: false };\n            return eventArgs;\n        }\n        else {\n            var recordOne = getValue('data', args);\n            var gridRow = getValue('row', args);\n            chartRow = this.parent.ganttChartModule.getChartRows()[this.parent.currentViewData.indexOf(recordOne)];\n            var eventArgs = { data: recordOne, gridRow: gridRow, chartRow: chartRow, cancel: false };\n            return eventArgs;\n        }\n    };\n    GanttTreeGrid.prototype.treeActionComplete = function (args) {\n        var _this = this;\n        var updatedArgs = extend({}, args);\n        if (getValue('requestType', args) === 'reorder') {\n            if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isFromUndoRedo'] && this.parent['isUndoRedoItemPresent']('ColumnReorder')) {\n                if (this.parent.undoRedoModule['redoEnabled']) {\n                    this.parent.undoRedoModule['disableRedo']();\n                }\n                this.parent.undoRedoModule['createUndoCollection']();\n                var record = {};\n                record['action'] = 'ColumnReorder';\n                record['fromIndex'] = extend([], [], [args['fromIndex']], true)[0];\n                record['toIndex'] = extend([], [], [args['toIndex']], true)[0];\n                record['toColumn'] = extend([], [], [this.parent.treeGrid.columns[args['toIndex']]['field']], true)[0];\n                record['fromColumn'] = extend([], [], [this.parent.treeGrid.columns[args['fromIndex']]['field']], true)[0];\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n            }\n        }\n        if (getValue('requestType', args) === 'columnstate') {\n            if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isFromUndoRedo'] && this.parent['isUndoRedoItemPresent']('ColumnState')) {\n                if (this.parent.undoRedoModule['redoEnabled']) {\n                    this.parent.undoRedoModule['disableRedo']();\n                }\n                this.parent.undoRedoModule['createUndoCollection']();\n                var record = { action: 'ColumnState' };\n                record['showhideColumns'] = extend([], [], args['columns'], true);\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n            }\n        }\n        if (getValue('requestType', args) === 'sorting') {\n            if (this.parent.undoRedoModule && this.parent['isUndoRedoItemPresent']('Sorting')) {\n                if (this.parent.undoRedoModule['currentAction'] && this.parent.undoRedoModule['currentAction']['sortColumns'].length > 1) {\n                    this.parent.undoRedoModule['sortedColumnsLength']++;\n                }\n                if ((!this.parent.undoRedoModule['currentAction'] || (this.parent.undoRedoModule['sortedColumnsLength'] !== this.parent.undoRedoModule['currentAction']['sortColumns'].length)) && !this.parent.undoRedoModule['isFromUndoRedo']) {\n                    if (this.parent.undoRedoModule['redoEnabled']) {\n                        this.parent.undoRedoModule['disableRedo']();\n                    }\n                    this.parent.undoRedoModule['createUndoCollection']();\n                    var record = { action: 'Sorting' };\n                    record['sortColumns'] = [];\n                    record['sortColumns'] = this.parent.undoRedoModule['previousSortedColumns'];\n                    this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n                }\n                this.parent.undoRedoModule['previousSortedColumns'] = this.parent.treeGrid.sortSettings.columns;\n            }\n            this.parent.notify('updateModel', {});\n            deleteObject(updatedArgs, 'isFrozen');\n        }\n        else if (getValue('requestType', args) === 'filtering') {\n            if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isFromUndoRedo'] && this.parent['isUndoRedoItemPresent']('Filtering')) {\n                if (this.parent.undoRedoModule['redoEnabled']) {\n                    this.parent.undoRedoModule['disableRedo']();\n                }\n                this.parent.undoRedoModule['createUndoCollection']();\n                var record = { action: 'Filtering' };\n                record['filteredColumns'] = extend([], [], args['columns'], true);\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n            }\n            this.parent.notify('updateModel', {});\n            var focussedElement = this.parent.element.querySelector('.e-treegrid');\n            focussedElement.focus();\n        }\n        else if (getValue('type', args) === 'save') {\n            if (this.parent.editModule && this.parent.editModule.cellEditModule) {\n                var data = getValue('data', args);\n                if (!isNullOrUndefined(data) && !isNullOrUndefined(this.parent.getTaskByUniqueID(data.uniqueID))) {\n                    /* eslint-disable-next-line */\n                    this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.duration] = data.taskData[this.parent.taskFields.duration];\n                    if (!isNullOrUndefined(data.taskData[this.parent.taskFields.resourceInfo])) {\n                        /* eslint-disable-next-line */\n                        this.parent.getTaskByUniqueID(data.uniqueID).taskData[this.parent.taskFields.resourceInfo] = data.taskData[this.parent.taskFields.resourceInfo];\n                    }\n                }\n                this.parent.editModule.cellEditModule.initiateCellEdit(args, this.currentEditRow);\n                this.parent.editModule.cellEditModule.isCellEdit = false;\n                this.currentEditRow = {};\n            }\n        }\n        if (getValue('requestType', args) === 'filterAfterOpen') {\n            this.parent.notify('actionComplete', args);\n        }\n        if (getValue('requestType', args) === 'searching') {\n            if (this.parent.undoRedoModule && this.parent['isUndoRedoItemPresent']('Search')) {\n                if (!this.parent.undoRedoModule['isFromUndoRedo']) {\n                    if (this.parent.undoRedoModule['redoEnabled']) {\n                        this.parent.undoRedoModule['disableRedo']();\n                    }\n                    this.parent.undoRedoModule['createUndoCollection']();\n                    var record = { 'action': 'Search' };\n                    record['searchString'] = this.parent.undoRedoModule['searchString'];\n                    this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n                }\n                this.parent.undoRedoModule['searchString'] = this.parent.treeGrid.searchSettings.key;\n            }\n            this.parent.notify('actionComplete', args);\n        }\n        if (!isNullOrUndefined(this.parent.toolbarModule) && !isNullOrUndefined(getValue('batchChanges', args))) {\n            this.parent.toolbarModule.refreshToolbarItems();\n        }\n        if (this.parent.isCancelled) {\n            setValue('requestType', 'cancel', updatedArgs);\n            setValue('action', 'CellEditing', updatedArgs);\n            this.parent.isCancelled = false;\n        }\n        if (getValue('requestType', args) === 'refresh' && isNullOrUndefined(getValue('type', args)) && this.parent.addDeleteRecord) {\n            if (this.parent.selectedRowIndex !== -1) {\n                if (!isNullOrUndefined(this.parent.selectionModule) &&\n                    this.parent.selectionSettings &&\n                    this.parent.selectionSettings.persistSelection &&\n                    this.parent.editModule.isAdded) {\n                    var selectedIndexes = this.parent.selectionModule.selectedRowIndexes;\n                    if (selectedIndexes.length > 1 && this.parent.selectionSettings.persistSelection) {\n                        for (var i = 0; i < selectedIndexes.length; i++) {\n                            var records = this.parent.flatData[selectedIndexes[i].toString()];\n                            this.parent.selectRows(records);\n                        }\n                    }\n                }\n                else {\n                    this.parent.selectRow(this.parent.selectedRowIndex);\n                    if (this.parent.selectedRowIndex > this.parent.currentViewData.length - 1) {\n                        this.parent.selectedRowIndex = -1;\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(this.parent.selectionModule) && this.parent.selectionSettings &&\n                    this.parent.selectionSettings.persistSelection\n                    && this.parent.editModule && !this.parent.editModule.isAdded) {\n                    var selectedRecords = this.parent.selectionModule.getSelectedRecords();\n                    var _loop_1 = function (i) {\n                        var selectedTaskId = selectedRecords[i][this_1.parent.taskFields.id];\n                        var existIndeletedRecords = this_1.parent.editModule.deletedRecord.some(function (item) {\n                            return item.ganttProperties.taskId === selectedTaskId;\n                        });\n                        if (existIndeletedRecords) {\n                            selectedRecords.splice(i, 1);\n                        }\n                    };\n                    var this_1 = this;\n                    for (var i = selectedRecords.length - 1; i >= 0; i--) {\n                        _loop_1(i);\n                    }\n                }\n                var indexvalue_1 = 0;\n                var dataCollection = this.parent.enableVirtualization ? this.parent.flatData : this.parent.currentViewData;\n                // To maintain 1st record selection, while deleting the last parent record at Virtual mode\n                dataCollection.map(function (data, index) {\n                    if (!isNullOrUndefined(_this.parent.currentSelection)\n                        && (data['ganttProperties'].taskId === _this.parent.currentSelection[_this.parent.taskFields.id])) {\n                        indexvalue_1 = index;\n                    }\n                });\n                this.addedRecord = true;\n                this.parent.selectRow((isNullOrUndefined(indexvalue_1) ? 0 : indexvalue_1));\n            }\n            if (!this.parent['isExpandPerformed']) {\n                this.parent.addDeleteRecord = false;\n            }\n            this.parent['isExpandPerformed'] = false;\n        }\n        if (this.parent.undoRedoModule) {\n            this.parent.undoRedoModule['isFromUndoRedo'] = false;\n        }\n        this.parent.trigger('actionComplete', updatedArgs);\n        if (this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n            for (var i = 0; i < this.parent.currentViewData.length; i++) {\n                if (this.parent.currentViewData[i].hasChildRecords && !this.parent.currentViewData[i].expanded) {\n                    this.parent.chartRowsModule.updateDragDropRecords(this.parent.currentViewData[i]);\n                }\n            }\n            this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n        }\n        if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n            this.parent.hideMaskRow();\n        }\n        else {\n            this.parent.hideSpinner();\n        }\n    };\n    GanttTreeGrid.prototype.updateKeyConfigSettings = function () {\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.delete;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.insert;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.upArrow;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.downArrow;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlHome;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.ctrlEnd;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.enter;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.tab;\n        delete this.parent.treeGrid.grid.keyboardModule.keyConfigs.shiftTab;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.enter;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.upArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.downArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftUpArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlShiftDownArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlUpArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.ctrlDownArrow;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.tab;\n        delete this.parent.treeGrid.keyboardModule.keyConfigs.shiftTab;\n    };\n    /**\n     * Method to bind internal events on TreeGrid element\n     *\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.wireEvents = function () {\n        var content = this.parent.treeGrid.element.querySelector('.e-content');\n        if (content) {\n            EventHandler.add(content, 'scroll', this.scrollHandler, this);\n        }\n        if (this.parent.isAdaptive) {\n            EventHandler.add(this.parent.treeGridPane, 'click', this.treeGridClickHandler, this);\n        }\n    };\n    GanttTreeGrid.prototype.unWireEvents = function () {\n        var content = this.parent.treeGrid.element &&\n            this.parent.treeGrid.element.querySelector('.e-content');\n        if (content) {\n            EventHandler.remove(content, 'scroll', this.scrollHandler);\n        }\n        if (this.parent.isAdaptive) {\n            EventHandler.remove(this.parent.treeGridPane, 'click', this.treeGridClickHandler);\n        }\n    };\n    // eslint-disable-next-line\n    GanttTreeGrid.prototype.scrollHandler = function (e) {\n        var content = this.parent.treeGrid.element.querySelector('.e-content');\n        if (content.scrollTop !== this.previousScroll.top) {\n            this.parent.notify('grid-scroll', { top: content.scrollTop });\n        }\n        this.previousScroll.top = content.scrollTop;\n        if (this.parent.contextMenuModule && this.parent.contextMenuModule.isOpen) {\n            this.parent.contextMenuModule.contextMenu.close();\n        }\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    GanttTreeGrid.prototype.validateGanttColumns = function () {\n        var ganttObj = this.parent;\n        var length = ganttObj.columns.length;\n        var tasks = this.parent.taskFields;\n        this.parent.columnMapping = {};\n        this.parent.columnByField = {};\n        this.parent.customColumns = [];\n        var tasksMapping = ['id', 'name', 'startDate', 'endDate', 'duration', 'dependency',\n            'progress', 'baselineStartDate', 'baselineEndDate', 'resourceInfo', 'notes', 'work', 'manual', 'type', 'milestone', 'segments'];\n        var _loop_2 = function (i) {\n            var column = {};\n            if (typeof ganttObj.columns[i] === 'string') {\n                column.field = ganttObj.columns[i];\n            }\n            else {\n                column = ganttObj.columns[i];\n            }\n            var columnName = [];\n            if (tasksMapping.length > 0) {\n                columnName = tasksMapping.filter(function (name) {\n                    return column.field === tasks[name];\n                });\n            }\n            if (columnName.length === 0) {\n                if (column.field === this_2.parent.resourceFields.group) {\n                    return \"continue\";\n                }\n                this_2.parent.customColumns.push(column.field);\n                column.headerText = column.headerText ? column.headerText : column.field;\n                column.width = column.width ? column.width : 150;\n                column.editType = column.editType ? column.editType : 'stringedit';\n                column.type = column.type ? column.type : 'string';\n                this_2.bindTreeGridColumnProperties(column, true);\n                return \"continue\";\n            }\n            else {\n                var index = tasksMapping.indexOf(columnName[0]);\n                tasksMapping.splice(index, 1);\n                this_2.createTreeGridColumn(column, true);\n                this_2.parent.columnMapping[columnName[0]] = column.field;\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < length; i++) {\n            _loop_2(i);\n        }\n        /** Create default columns with task settings property */\n        for (var j = 0; j < tasksMapping.length; j++) {\n            var column = {};\n            if (!isNullOrUndefined(tasks[tasksMapping[j]])) {\n                column.field = tasks[tasksMapping[j]];\n                this.createTreeGridColumn(column, length === 0);\n                this.parent.columnMapping[tasksMapping[j]] = column.field;\n            }\n        }\n        if (this.parent.viewType !== 'ProjectView') {\n            var column = {};\n            this.composeUniqueIDColumn(column);\n            this.createTreeGridColumn(column, true);\n        }\n    };\n    /**\n     *\n     * @param {GanttColumnModel} column .\n     * @param {boolean} isDefined .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.createTreeGridColumn = function (column, isDefined) {\n        var _this = this;\n        var taskSettings = this.parent.taskFields;\n        var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n            return column.field === prevcolumn.field;\n        })[0];\n        column.disableHtmlEncode = !isNullOrUndefined(column.disableHtmlEncode) ? column.disableHtmlEncode : this.parent.disableHtmlEncode;\n        if (taskSettings.id !== column.field) {\n            column.clipMode = column.clipMode ? column.clipMode : 'EllipsisWithTooltip';\n        }\n        if (taskSettings.id === column.field) {\n            /** Id column */\n            this.composeIDColumn(column);\n        }\n        else if (taskSettings.name === column.field) {\n            /** Name column */\n            if (this.parent.isLocaleChanged && previousColumn) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('name');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('name');\n            }\n            column.width = column.width ? column.width : 150;\n            column.editType = column.editType ? column.editType : 'stringedit';\n            column.type = column.type ? column.type : 'string';\n        }\n        else if (taskSettings.startDate === column.field) {\n            /** Name column */\n            if (this.parent.isLocaleChanged && previousColumn) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('startDate');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('startDate');\n            }\n            column.editType = column.editType ? column.editType :\n                this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n            column.format = column.format ? column.format : { type: 'date', format: this.parent.getDateFormat() };\n            column.width = column.width ? column.width : 150;\n            if (column.edit && column.edit.params) {\n                column.edit.params['renderDayCell'] = this.parent.renderWorkingDayCell.bind(this.parent);\n            }\n            else {\n                if (column.edit) {\n                    column.edit.params = { renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent) };\n                }\n                else {\n                    column.edit = { params: { renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent) } };\n                }\n            }\n        }\n        else if (taskSettings.endDate === column.field) {\n            if (this.parent.isLocaleChanged && previousColumn) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('endDate');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('endDate');\n            }\n            column.format = column.format ? column.format : { type: 'date', format: this.parent.getDateFormat() };\n            column.editType = column.editType ? column.editType :\n                this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n            column.width = column.width ? column.width : 150;\n            if (column.edit && column.edit.params) {\n                column.edit.params['renderDayCell'] = this.parent.renderWorkingDayCell.bind(this.parent);\n            }\n            else {\n                if (column.edit) {\n                    column.edit.params = { renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent) };\n                }\n                else {\n                    column.edit = { params: { renderDayCell: this.parent.renderWorkingDayCell.bind(this.parent) } };\n                }\n            }\n        }\n        else if (taskSettings.duration === column.field) {\n            column.width = column.width ? column.width : 150;\n            if (this.parent.isLocaleChanged && previousColumn) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('duration');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('duration');\n            }\n            column.valueAccessor = column.valueAccessor ?\n                column.valueAccessor : !isNullOrUndefined(column.edit) && !isNullOrUndefined(column.edit.read) ? null :\n                this.durationValueAccessor.bind(this);\n            column.editType = column.editType ? column.editType : 'stringedit';\n            column.type = column.type ? column.type : 'string';\n        }\n        else if (taskSettings.progress === column.field) {\n            this.composeProgressColumn(column);\n        }\n        else if (taskSettings.dependency === column.field) {\n            if (this.parent.isLocaleChanged && previousColumn) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('dependency');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('dependency');\n            }\n            column.width = column.width ? column.width : 150;\n            column.editType = column.editType ? column.editType : 'stringedit';\n            column.type = 'string';\n            column.allowFiltering = column.allowFiltering === false ? false : true;\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.dependencyValueAccessor.bind(this);\n            if (isNullOrUndefined(column.filter) && this.parent.locale !== 'en-US') {\n                column.filter = {\n                    'ui': {\n                        create: function (args) {\n                            var flValInput = createElement('input', { className: 'flm-input' });\n                            args.target.appendChild(flValInput);\n                            _this.dropInstance = new AutoComplete({\n                                dataSource: _this.changeLocale(_this.parent.treeGrid.grid.dataSource),\n                                fields: { text: _this.parent.taskFields.dependency, value: _this.parent.taskFields.dependency },\n                                placeholder: _this.parent.localeObj.getConstant('enterValue'),\n                                popupHeight: '200px'\n                            });\n                            _this.dropInstance.appendTo(flValInput);\n                        },\n                        write: function (args) {\n                            _this.dropInstance.value = args.filteredValue;\n                        },\n                        read: function (args) {\n                            args.fltrObj.filterByColumn(args.column.field, args.operator, _this.changeDelocale((_this.dropInstance.value)));\n                        }\n                    }\n                };\n            }\n        }\n        else if (taskSettings.resourceInfo === column.field) {\n            this.composeResourceColumn(column);\n        }\n        else if (taskSettings.notes === column.field) {\n            if (previousColumn && this.parent.isLocaleChanged) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('notes');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('notes');\n            }\n            column.width = column.width ? column.width : 150;\n            column.editType = column.editType ? column.editType : 'stringedit';\n            if (!this.parent.showInlineNotes) {\n                if (!column.template) {\n                    column.template = '<div class=\"e-ganttnotes-info\">' +\n                        '<span class=\"e-icons e-notes-info\"></span></div>';\n                }\n            }\n        }\n        else if (taskSettings.baselineStartDate === column.field ||\n            taskSettings.baselineEndDate === column.field) {\n            var colName = (taskSettings.baselineEndDate === column.field) ? 'baselineEndDate' :\n                'baselineStartDate';\n            column.width = column.width ? column.width : 150;\n            if (this.parent.isLocaleChanged && previousColumn) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant(colName);\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant(colName);\n            }\n            column.format = column.format ? column.format : { type: 'date', format: this.parent.getDateFormat() };\n            column.editType = column.editType ? column.editType :\n                this.parent.getDateFormat().toLowerCase().indexOf('hh') !== -1 ? 'datetimepickeredit' : 'datepickeredit';\n        }\n        else if (taskSettings.work === column.field) {\n            if (previousColumn && this.parent.isLocaleChanged) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('work');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('work');\n            }\n            column.width = column.width ? column.width : 150;\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.workValueAccessor.bind(this);\n            column.editType = column.editType ? column.editType : 'numericedit';\n        }\n        else if (taskSettings.type === column.field) {\n            if (previousColumn && this.parent.isLocaleChanged) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('taskType');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskType');\n            }\n            column.width = column.width ? column.width : 150;\n            //column.type = 'string';\n            column.editType = 'dropdownedit';\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.taskTypeValueAccessor.bind(this);\n        }\n        else if (taskSettings.manual === column.field && this.parent.taskMode === 'Custom') {\n            if (previousColumn && this.parent.isLocaleChanged) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('taskMode');\n            }\n            else {\n                column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('taskMode');\n            }\n            column.width = column.width ? column.width : 120;\n            column.editType = column.editType ? column.editType : 'dropdownedit';\n            column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.modeValueAccessor.bind(this);\n            column.edit = {\n                params: {\n                    query: new Query(),\n                    dataSource: [\n                        { id: 1, text: this.parent.localeObj.getConstant('manual'), value: true },\n                        { id: 2, text: this.parent.localeObj.getConstant('auto'), value: false }\n                    ],\n                    fields: { text: 'text', value: 'value' }\n                }\n            };\n        }\n        this.bindTreeGridColumnProperties(column, isDefined);\n    };\n    GanttTreeGrid.prototype.changeLocale = function (data) {\n        var _this = this;\n        var filter = [];\n        var flatdatas = data.map(function (task) { return task.ganttProperties.predecessorsName; });\n        flatdatas.map(function (predecessorsName) {\n            if (!isNullOrUndefined(predecessorsName)) {\n                var value_1 = '';\n                var splitString_1 = predecessorsName.split(',');\n                splitString_1.map(function (splitvalue, index) {\n                    if (splitvalue.includes('FS')) {\n                        value_1 += splitvalue.replace('FS', _this.parent.localeObj.getConstant('FS'));\n                        value_1 += (splitString_1.length !== index + 1) ? ',' : '';\n                    }\n                    else if (splitvalue.includes('FF')) {\n                        value_1 += splitvalue.replace('FF', _this.parent.localeObj.getConstant('FF'));\n                        value_1 += (splitString_1.length !== index + 1) ? ',' : '';\n                    }\n                    else if (splitvalue.includes('SS')) {\n                        value_1 += splitvalue.replace('SS', _this.parent.localeObj.getConstant('SS'));\n                        value_1 += (splitString_1.length !== index + 1) ? ',' : '';\n                    }\n                    else if (splitvalue.includes('SF')) {\n                        value_1 += splitvalue.replace('SF', _this.parent.localeObj.getConstant('SF'));\n                        value_1 += (splitString_1.length !== index + 1) ? ',' : '';\n                    }\n                });\n                filter.push(value_1);\n            }\n        });\n        return filter;\n    };\n    GanttTreeGrid.prototype.changeDelocale = function (dependency) {\n        var FF = this.parent.localeObj.getConstant('FF');\n        var FS = this.parent.localeObj.getConstant('FS');\n        var SS = this.parent.localeObj.getConstant('SS');\n        var SF = this.parent.localeObj.getConstant('SF');\n        if (!isNullOrUndefined(dependency)) {\n            var splitString_2 = dependency.split(',');\n            var value_2 = '';\n            splitString_2.map(function (splitvalue, index) {\n                if (splitvalue.includes(FF)) {\n                    value_2 += splitvalue.replace(FF, 'FF');\n                    value_2 += (splitString_2.length !== index + 1) ? ',' : '';\n                }\n                else if (splitvalue.includes(FS)) {\n                    value_2 += splitvalue.replace(FS, 'FS');\n                    value_2 += (splitString_2.length !== index + 1) ? ',' : '';\n                }\n                else if (splitvalue.includes(SS)) {\n                    value_2 += splitvalue.replace(SS, 'SS');\n                    value_2 += (splitString_2.length !== index + 1) ? ',' : '';\n                }\n                else if (splitvalue.includes(SF)) {\n                    value_2 += splitvalue.replace(SF, 'SF');\n                    value_2 += (splitString_2.length !== index + 1) ? ',' : '';\n                }\n                else {\n                    value_2 += splitvalue;\n                    value_2 += (splitString_2.length !== index + 1) ? ',' : '';\n                }\n            });\n            return value_2;\n        }\n        return null;\n    };\n    /**\n     * Compose Resource columns\n     *\n     * @param {GanttColumnModel} column .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.composeResourceColumn = function (column) {\n        var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n            return column.field === prevcolumn.field;\n        })[0];\n        if (previousColumn && this.parent.isLocaleChanged) {\n            column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('resourceName');\n        }\n        else {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('resourceName');\n        }\n        column.width = column.width ? column.width : 150;\n        column.type = 'string';\n        column.valueAccessor = column.valueAccessor ? column.valueAccessor : this.resourceValueAccessor.bind(this);\n        column.allowFiltering = column.allowFiltering === false ? false : true;\n    };\n    /**\n     * @param {IGanttData} data .\n     * @returns {object} .\n     * @private\n     */\n    GanttTreeGrid.prototype.getResourceIds = function (data) {\n        var value = getValue(this.parent.taskFields.resourceInfo, data.taskData);\n        var id = [];\n        if (!isNullOrUndefined(value)) {\n            for (var i = 0; i < value.length; i++) {\n                id.push(typeof value[i] === 'object' ? value[i][this.parent.resourceFields.id] : value[i]);\n            }\n            return id;\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Create Id column\n     *\n     * @param {GanttColumnModel} column .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.composeIDColumn = function (column) {\n        var isProjectView = this.parent.viewType === 'ProjectView';\n        var lengthDataSource = this.parent.dataSource ? this.parent.dataSource['length'] : 0;\n        var taskIDName;\n        column.isPrimaryKey = isProjectView ? true : false;\n        if (this.parent.isLocaleChanged) {\n            var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n                return column.field === prevcolumn.field;\n            })[0];\n            if (previousColumn) {\n                column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('id');\n            }\n        }\n        else {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('id');\n        }\n        column.width = column.width ? column.width : 100;\n        for (var i = 0; i < lengthDataSource; i++) {\n            if (!isNullOrUndefined(this.parent.dataSource[i][this.parent.taskFields.id])) {\n                taskIDName = this.parent.dataSource[i][this.parent.taskFields.id];\n                break;\n            }\n        }\n        if (typeof (taskIDName) === 'string' || isNullOrUndefined(taskIDName)) {\n            if (this.parent.viewType === 'ResourceView') {\n                column.allowEditing = column.allowEditing ? column.allowEditing : false;\n            }\n            else {\n                column.allowEditing = column.allowEditing ? column.allowEditing : true;\n            }\n            column.editType = column.editType ? column.editType : 'stringedit';\n        }\n        else {\n            column.allowEditing = column.allowEditing ? column.allowEditing : false;\n            column.editType = column.editType ? column.editType : 'numericedit';\n        }\n        column.valueAccessor = isProjectView ? null : this.idValueAccessor.bind(this);\n    };\n    GanttTreeGrid.prototype.composeUniqueIDColumn = function (column) {\n        column.field = 'rowUniqueID';\n        column.isPrimaryKey = true;\n        column.headerText = 'UniqueID';\n        column.allowEditing = false;\n        column.visible = false;\n    };\n    /**\n     * Create progress column\n     *\n     * @param {GanttColumnModel} column .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.composeProgressColumn = function (column) {\n        var previousColumn = this.parent.previousGanttColumns.filter(function (prevcolumn) {\n            return column.field === prevcolumn.field;\n        })[0];\n        if (this.parent.isLocaleChanged && previousColumn) {\n            column.headerText = previousColumn.headerText ? previousColumn.headerText : this.parent.localeObj.getConstant('progress');\n        }\n        else {\n            column.headerText = column.headerText ? column.headerText : this.parent.localeObj.getConstant('progress');\n        }\n        column.width = column.width ? column.width : 150;\n        column.editType = column.editType ? column.editType : 'numericedit';\n    };\n    /**\n     * @param {GanttColumnModel} newGanttColumn .\n     * @param {boolean} isDefined .\n     * @returns {void} .\n     */\n    GanttTreeGrid.prototype.bindTreeGridColumnProperties = function (newGanttColumn, isDefined) {\n        var treeGridColumn = {};\n        var ganttColumn = {};\n        for (var _i = 0, _a = Object.keys(newGanttColumn); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            treeGridColumn[prop] = ganttColumn[prop] = newGanttColumn[prop];\n        }\n        this.parent.columnByField[ganttColumn.field] = ganttColumn;\n        this.parent.ganttColumns.push(new GanttColumn(ganttColumn));\n        if (isDefined) {\n            this.treeGridColumns.push(treeGridColumn);\n        }\n    }; // eslint-disable-next-line\n    GanttTreeGrid.prototype.durationValueAccessor = function (field, data, column) {\n        if (!isNullOrUndefined(data) && !isNullOrUndefined(data.ganttProperties)) {\n            var ganttProp = data.ganttProperties;\n            return this.parent.dataOperation.getDurationString(ganttProp.duration, ganttProp.durationUnit);\n        }\n        else if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n            return this.parent.dataOperation.getDurationString(parseInt(data[this.parent.taskFields.duration], 10), this.parent.durationUnit);\n        }\n        return '';\n    }; // eslint-disable-next-line\n    GanttTreeGrid.prototype.dependencyValueAccessor = function (field, data, column) {\n        var _this = this;\n        if (data && data.ganttProperties && !isNullOrUndefined(data.ganttProperties.predecessorsName)) {\n            var value_3 = '';\n            var predecessorsName = data.ganttProperties.predecessorsName;\n            var splitString_3 = predecessorsName.split(',');\n            splitString_3.map(function (splitvalue, index) {\n                if (splitvalue.includes('FS')) {\n                    value_3 += splitvalue.replace('FS', _this.parent.localeObj.getConstant('FS'));\n                    value_3 += (splitString_3.length !== index + 1) ? ',' : '';\n                }\n                else if (splitvalue.includes('FF')) {\n                    value_3 += splitvalue.replace('FF', _this.parent.localeObj.getConstant('FF'));\n                    value_3 += (splitString_3.length !== index + 1) ? ',' : '';\n                }\n                else if (splitvalue.includes('SS')) {\n                    value_3 += splitvalue.replace('SS', _this.parent.localeObj.getConstant('SS'));\n                    value_3 += (splitString_3.length !== index + 1) ? ',' : '';\n                }\n                else if (splitvalue.includes('SF')) {\n                    value_3 += splitvalue.replace('SF', _this.parent.localeObj.getConstant('SF'));\n                    value_3 += (splitString_3.length !== index + 1) ? ',' : '';\n                }\n            });\n            return value_3;\n        }\n        return '';\n    };\n    GanttTreeGrid.prototype.resourceValueAccessor = function (field, data, column) {\n        var ganttProp = data.ganttProperties;\n        if (!isNullOrUndefined(ganttProp)) {\n            return ganttProp.resourceNames;\n        }\n        return '';\n    };\n    GanttTreeGrid.prototype.workValueAccessor = function (field, data, column) {\n        var ganttProp = data.ganttProperties;\n        if (!isNullOrUndefined(ganttProp)) {\n            return this.parent.dataOperation.getWorkString(ganttProp.work, ganttProp.workUnit);\n        }\n        return '';\n    };\n    GanttTreeGrid.prototype.taskTypeValueAccessor = function (field, data, column) {\n        var ganttProp = data.ganttProperties;\n        if (!isNullOrUndefined(ganttProp)) {\n            return ganttProp.taskType;\n        }\n        return '';\n    };\n    GanttTreeGrid.prototype.modeValueAccessor = function (field, data, column) {\n        if (data[field]) {\n            return 'Manual';\n        }\n        else {\n            return 'Auto';\n        }\n    };\n    GanttTreeGrid.prototype.idValueAccessor = function (field, data, column) {\n        return data.level === 0 ? 'R-' + data.ganttProperties.taskId : 'T-' + data.ganttProperties.taskId;\n    };\n    GanttTreeGrid.prototype.updateScrollTop = function (args) {\n        var newScrollTop = getValue('top', args);\n        this.treeGridElement.querySelector('.e-content').scrollTop = newScrollTop;\n        this.previousScroll.top = this.treeGridElement.querySelector('.e-content').scrollTop;\n    };\n    GanttTreeGrid.prototype.treeGridClickHandler = function (e) {\n        this.parent.notify('treeGridClick', e);\n    };\n    GanttTreeGrid.prototype.removeEventListener = function () {\n        this.parent.off('renderPanels', this.createContainer);\n        this.parent.off('chartScroll', this.updateScrollTop);\n        this.parent.off('destroy', this.destroy);\n        this.parent.treeGrid.off('reactTemplateRender', this.renderReactTemplate);\n    };\n    GanttTreeGrid.prototype.destroy = function () {\n        this.removeEventListener();\n        this.unWireEvents();\n        if (this.parent.treeGrid.element) {\n            this.parent.treeGrid.destroy();\n        }\n    };\n    return GanttTreeGrid;\n}());\nexport { GanttTreeGrid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}