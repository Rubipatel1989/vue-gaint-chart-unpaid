{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport * as EVENTS from '../../common/constant';\nimport { createElement, isNullOrUndefined as isNOU, detach, addClass, Browser } from '@syncfusion/ej2-base';\nimport { PASTE_SOURCE } from '../base/constant';\nimport { InsertMethods } from './insert-methods';\n/**\n * PasteCleanup for MsWord content\n *\n * @hidden\n\n */\nvar MsWordPaste = /** @class */function () {\n  function MsWordPaste(parent) {\n    this.olData = ['decimal', 'decimal-leading-zero', 'lower-alpha', 'lower-roman', 'upper-alpha', 'upper-roman', 'lower-greek'];\n    this.ulData = ['disc', 'square', 'circle', 'disc', 'square', 'circle'];\n    this.ignorableNodes = ['A', 'APPLET', 'B', 'BLOCKQUOTE', 'BR', 'BUTTON', 'CENTER', 'CODE', 'COL', 'COLGROUP', 'DD', 'DEL', 'DFN', 'DIR', 'DIV', 'DL', 'DT', 'EM', 'FIELDSET', 'FONT', 'FORM', 'FRAME', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HR', 'I', 'IMG', 'IFRAME', 'INPUT', 'INS', 'LABEL', 'LI', 'OL', 'OPTION', 'P', 'PARAM', 'PRE', 'Q', 'S', 'SELECT', 'SPAN', 'STRIKE', 'STRONG', 'SUB', 'SUP', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH', 'THEAD', 'TITLE', 'TR', 'TT', 'U', 'UL'];\n    this.blockNode = ['div', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'address', 'blockquote', 'button', 'center', 'dd', 'dir', 'dl', 'dt', 'fieldset', 'frameset', 'hr', 'iframe', 'isindex', 'li', 'map', 'menu', 'noframes', 'noscript', 'object', 'ol', 'pre', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul', 'header', 'article', 'nav', 'footer', 'section', 'aside', 'main', 'figure', 'figcaption'];\n    this.borderStyle = ['border-top', 'border-right', 'border-bottom', 'border-left'];\n    this.upperRomanNumber = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX'];\n    this.lowerRomanNumber = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix', 'x', 'xi', 'xii', 'xiii', 'xiv', 'xv', 'xvi', 'xvii', 'xviii', 'xix', 'xx'];\n    this.lowerGreekNumber = ['α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ', 'ι', 'κ', 'λ', 'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω'];\n    this.removableElements = ['o:p', 'style', 'w:sdt'];\n    this.listContents = [];\n    this.cropImageDimensions = [];\n    this.parent = parent;\n    this.addEventListener();\n  }\n  MsWordPaste.prototype.addEventListener = function () {\n    this.parent.observer.on(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup, this);\n    this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n  };\n  MsWordPaste.prototype.removeEventListener = function () {\n    this.parent.observer.off(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup);\n    this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n  };\n  MsWordPaste.prototype.wordCleanup = function (e) {\n    var wordPasteStyleConfig = !isNOU(e.allowedStylePropertiesArray) ? e.allowedStylePropertiesArray : [];\n    var listNodes = [];\n    var tempHTMLContent = e.args.clipboardData.getData('text/HTML');\n    var rtfData = e.args.clipboardData.getData('text/rtf');\n    var elm = createElement('p');\n    elm.setAttribute('id', 'MSWord-Content');\n    elm.innerHTML = tempHTMLContent;\n    this.addDoubleBr(elm);\n    var patern = /class='?Mso|style='[^ ]*\\bmso-/i;\n    var patern2 = /class=\"?Mso|style=\"[^ ]*\\bmso-/i;\n    var patern3 = /(class=\"?Mso|class='?Mso|class=\"?Xl|class='?Xl|class=Xl|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument)/gi;\n    var pattern4 = /style='mso-width-source:/i;\n    var source = this.findSource(elm);\n    if (patern.test(tempHTMLContent) || patern2.test(tempHTMLContent) || patern3.test(tempHTMLContent) || pattern4.test(tempHTMLContent)) {\n      tempHTMLContent = tempHTMLContent.replace(/<img[^>]+>/i, '');\n      this.addListClass(elm);\n      listNodes = this.cleanUp(elm, listNodes);\n      if (!isNOU(listNodes[0]) && listNodes[0].parentElement.tagName !== 'UL' && listNodes[0].parentElement.tagName !== 'OL') {\n        this.listConverter(listNodes);\n      }\n      this.imageConversion(elm, rtfData);\n      this.cleanList(elm, 'UL');\n      this.cleanList(elm, 'OL');\n      this.styleCorrection(elm, wordPasteStyleConfig);\n      this.removingComments(elm);\n      this.removeUnwantedElements(elm);\n      this.removeEmptyElements(elm);\n      this.removeEmptyAnchorTag(elm);\n      this.breakLineAddition(elm);\n      this.processMargin(elm);\n      this.removeClassName(elm);\n      if (pattern4.test(tempHTMLContent)) {\n        this.addTableBorderClass(elm);\n      }\n      e.callBack(elm.innerHTML, this.cropImageDimensions, source);\n    } else {\n      if (source === PASTE_SOURCE[2]) {\n        this.handleOneNoteContent(elm);\n      }\n      e.callBack(elm.innerHTML, null, source);\n    }\n  };\n  MsWordPaste.prototype.addDoubleBr = function (elm) {\n    var newline = elm.querySelector('.Apple-interchange-newline');\n    if (!isNOU(newline) && Browser.userAgent.indexOf('Chrome') !== -1 && newline.parentElement.nodeName === 'P' && elm !== newline.parentElement) {\n      for (var i = 0; i < elm.childNodes.length; i++) {\n        var node = elm.childNodes[i];\n        if (node.nodeType === Node.COMMENT_NODE && node.nodeValue.includes('StartFragment')) {\n          var newElement = document.createElement('p');\n          newElement.innerHTML = '<br>';\n          var cssText = newline.parentElement.style.cssText;\n          var currentStyle = newElement.getAttribute('style') || '';\n          var newStyle = currentStyle + cssText;\n          newElement.setAttribute('style', newStyle);\n          elm.insertBefore(newElement, node.nextSibling);\n          detach(newline);\n          break;\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.cleanList = function (elm, listTag) {\n    var replacableElem = elm.querySelectorAll(listTag + ' div');\n    for (var j = replacableElem.length - 1; j >= 0; j--) {\n      var parentElem = replacableElem[j].parentNode;\n      while (replacableElem[j].firstChild) {\n        parentElem.insertBefore(replacableElem[j].firstChild, replacableElem[j]);\n      }\n      var closestListElem = this.findClosestListElem(replacableElem[j]);\n      if (closestListElem) {\n        this.insertAfter(replacableElem[j], closestListElem);\n      }\n    }\n  };\n  MsWordPaste.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  MsWordPaste.prototype.findClosestListElem = function (listElem) {\n    var closestListElem;\n    while (!isNOU(listElem)) {\n      listElem = !isNOU(listElem.closest('ul')) && listElem.tagName !== 'UL' ? listElem.closest('ul') : listElem.tagName !== 'OL' ? listElem.closest('ol') : null;\n      closestListElem = !isNOU(listElem) ? listElem : closestListElem;\n    }\n    return closestListElem;\n  };\n  MsWordPaste.prototype.addListClass = function (elm) {\n    var allNodes = elm.querySelectorAll('*');\n    for (var index = 0; index < allNodes.length; index++) {\n      if (!isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').replace(/ /g, '').replace('\\n', '').indexOf('mso-list:l') >= 0 && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') === -1 && allNodes[index].tagName.charAt(0) !== 'H' && allNodes[index].tagName !== 'LI' && allNodes[index].tagName !== 'OL' && allNodes[index].tagName !== 'UL') {\n        allNodes[index].classList.add('msolistparagraph');\n      }\n    }\n  };\n  MsWordPaste.prototype.addTableBorderClass = function (elm) {\n    var allTableElm = elm.querySelectorAll('table');\n    var hasTableBorder = false;\n    for (var i = 0; i < allTableElm.length; i++) {\n      for (var j = 0; j < this.borderStyle.length; j++) {\n        if (allTableElm[i].innerHTML.indexOf(this.borderStyle[j]) >= 0) {\n          hasTableBorder = true;\n          break;\n        }\n      }\n      if (hasTableBorder) {\n        allTableElm[i].classList.add('e-rte-table-border');\n        hasTableBorder = false;\n      }\n    }\n  };\n  MsWordPaste.prototype.imageConversion = function (elm, rtfData) {\n    this.checkVShape(elm);\n    var imgElem = elm.querySelectorAll('img');\n    for (var i = 0; i < imgElem.length; i++) {\n      if (!isNOU(imgElem[i].getAttribute('v:shapes')) && imgElem[i].getAttribute('v:shapes').indexOf('Picture') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('圖片') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('Grafik') < 0 && imgElem[i].getAttribute('v:shapes').toLowerCase().indexOf('image') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('Graphic') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('_x0000_s') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('_x0000_i') < 0 && imgElem[i].getAttribute('v:shapes').indexOf('img1') < 0) {\n        imgElem[i].classList.add('e-rte-image-unsupported');\n      }\n      imgElem[i].removeAttribute('v:shapes');\n    }\n    imgElem = elm.querySelectorAll('img');\n    var imgSrc = [];\n    var base64Src = [];\n    var imgName = [];\n    // eslint-disable-next-line\n    var linkRegex = new RegExp(/([^\\S]|^)(((https?\\:\\/\\/)|(www\\.)|(blob\\:))(\\S+))/gi);\n    if (imgElem.length > 0) {\n      for (var i = 0; i < imgElem.length; i++) {\n        imgSrc.push(imgElem[i].getAttribute('src'));\n        imgName.push(imgElem[i].getAttribute('src').split('/')[imgElem[i].getAttribute('src').split('/').length - 1].split('.')[0]);\n        if (!isNOU(imgSrc) && imgSrc[i] !== '') {\n          var imgType = imgSrc[i].split('.').pop().toLowerCase();\n          imgElem[i].setAttribute('data-image-type', imgType);\n        }\n      }\n      var hexValue = this.hexConversion(rtfData);\n      for (var i = 0; i < hexValue.length; i++) {\n        base64Src.push({\n          base64Data: !isNOU(hexValue[i].hex) ? this.convertToBase64(hexValue[i]) : null,\n          isCroppedImage: hexValue[i].isCroppedImage\n        });\n        if (hexValue[i].isCroppedImage) {\n          this.cropImageDimensions.push({\n            goalWidth: hexValue[i].goalWidth,\n            goalHeight: hexValue[i].goalHeight,\n            cropLength: hexValue[i].cropLength,\n            cropTop: hexValue[i].cropTop,\n            cropR: hexValue[i].cropR,\n            cropB: hexValue[i].cropB\n          });\n        }\n      }\n      imgElem = elm.querySelectorAll('img:not(.e-rte-image-unsupported');\n      for (var i = 0; i < imgElem.length; i++) {\n        if (imgSrc[i].match(linkRegex)) {\n          imgElem[i].setAttribute('src', imgSrc[i]);\n        } else {\n          if (!isNOU(base64Src[i]) && !isNOU(base64Src[i].base64Data)) {\n            imgElem[i].setAttribute('src', base64Src[i].base64Data);\n          } else {\n            imgElem[i].removeAttribute('src');\n            imgElem[i].classList.add('e-rte-image-unsupported');\n          }\n          if (!isNOU(base64Src[i]) && base64Src[i].isCroppedImage) {\n            imgElem[i].classList.add('e-img-cropped');\n          }\n        }\n        imgElem[i].setAttribute('id', 'msWordImg-' + imgName[i]);\n      }\n      imgElem = elm.querySelectorAll('.e-rte-image-unsupported');\n      for (var i = 0; i < imgElem.length; i++) {\n        imgElem[i].removeAttribute('src');\n      }\n    }\n  };\n  MsWordPaste.prototype.checkVShape = function (elm) {\n    var allNodes = elm.querySelectorAll('*');\n    for (var i = 0; i < allNodes.length; i++) {\n      switch (allNodes[i].nodeName) {\n        case 'V:SHAPETYPE':\n          detach(allNodes[i]);\n          break;\n        case 'V:SHAPE':\n          if (allNodes[i].firstElementChild.nodeName === 'V:IMAGEDATA') {\n            var src = allNodes[i].firstElementChild.getAttribute('src');\n            var imgElement = createElement('img');\n            imgElement.setAttribute('src', src);\n            allNodes[i].parentElement.insertBefore(imgElement, allNodes[i]);\n            detach(allNodes[i]);\n          }\n          break;\n      }\n    }\n  };\n  MsWordPaste.prototype.convertToBase64 = function (hexValue) {\n    var byteArr = this.conHexStringToBytes(hexValue.hex);\n    var base64String = this.conBytesToBase64(byteArr);\n    var base64 = hexValue.type ? 'data:' + hexValue.type + ';base64,' + base64String : null;\n    return base64;\n  };\n  MsWordPaste.prototype.conBytesToBase64 = function (byteArr) {\n    var base64Str = '';\n    var base64Char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var byteArrLen = byteArr.length;\n    for (var i = 0; i < byteArrLen; i += 3) {\n      var array3 = byteArr.slice(i, i + 3);\n      var array3length = array3.length;\n      var array4 = [];\n      if (array3length < 3) {\n        for (var j = array3length; j < 3; j++) {\n          array3[j] = 0;\n        }\n      }\n      array4[0] = (array3[0] & 0xFC) >> 2;\n      array4[1] = (array3[0] & 0x03) << 4 | array3[1] >> 4;\n      array4[2] = (array3[1] & 0x0F) << 2 | (array3[2] & 0xC0) >> 6;\n      array4[3] = array3[2] & 0x3F;\n      for (var j = 0; j < 4; j++) {\n        if (j <= array3length) {\n          base64Str += base64Char.charAt(array4[j]);\n        } else {\n          base64Str += '=';\n        }\n      }\n    }\n    return base64Str;\n  };\n  MsWordPaste.prototype.conHexStringToBytes = function (hex) {\n    var byteArr = [];\n    var byteArrLen = hex.length / 2;\n    for (var i = 0; i < byteArrLen; i++) {\n      byteArr.push(parseInt(hex.substr(i * 2, 2), 16));\n    }\n    return byteArr;\n  };\n  MsWordPaste.prototype.hexConversion = function (rtfData) {\n    var regExp = RegExp;\n    var picHead = new regExp('\\\\{\\\\\\\\pict[\\\\s\\\\S]+?\\\\\\\\bliptag-?\\\\d+(\\\\\\\\blipupi-?\\\\d+)?(\\\\{\\\\\\\\\\\\*\\\\\\\\blipuid\\\\s?[\\\\da-fA-F]+)?[\\\\s\\\\}]*?');\n    var pic = new regExp('(?:(' + picHead.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g');\n    var fullImg = rtfData.match(pic);\n    var imgType;\n    var result = [];\n    if (!isNOU(fullImg)) {\n      for (var i = 0; i < fullImg.length; i++) {\n        if (fullImg[i].indexOf('fIsBullet') !== -1 && fullImg[i].indexOf('wzName') === -1) {\n          continue;\n        }\n        var isCroppedImage = false;\n        var goalWidth = 0;\n        var goalHeight = 0;\n        var cropLength = 0;\n        var cropTop = 0;\n        var cropR = 0;\n        var cropB = 0;\n        if (picHead.test(fullImg[i])) {\n          if (fullImg[i].indexOf('\\\\pngblip') !== -1) {\n            imgType = 'image/png';\n          } else if (fullImg[i].indexOf('\\\\jpegblip') !== -1) {\n            imgType = 'image/jpeg';\n          } else if (fullImg[i].indexOf('\\\\emfblip') !== -1) {\n            imgType = null;\n          } else {\n            continue;\n          }\n          isCroppedImage = this.extractCropValue('cropl', fullImg[i]) > 0 && this.extractCropValue('cropt', fullImg[i]) > 0 || this.extractCropValue('cropr', fullImg[i]) > 0 || this.extractCropValue('cropb', fullImg[i]) ? true : false;\n          if (isCroppedImage) {\n            goalWidth = this.extractCropValue('wgoal', fullImg[i]);\n            goalHeight = this.extractCropValue('hgoal', fullImg[i]);\n            cropLength = this.extractCropValue('cropl', fullImg[i]);\n            cropTop = this.extractCropValue('cropt', fullImg[i]);\n            cropR = this.extractCropValue('cropr', fullImg[i]);\n            cropB = this.extractCropValue('cropb', fullImg[i]);\n          }\n          result.push({\n            hex: imgType ? fullImg[i].replace(picHead, '').replace(/[^\\da-fA-F]/g, '') : null,\n            type: imgType,\n            isCroppedImage: isCroppedImage,\n            goalWidth: goalWidth,\n            goalHeight: goalHeight,\n            cropLength: cropLength,\n            cropTop: cropTop,\n            cropR: cropR,\n            cropB: cropB\n          });\n        }\n      }\n    }\n    return result;\n  };\n  MsWordPaste.prototype.extractCropValue = function (crop, rtfData) {\n    var regExp = RegExp;\n    var result = new regExp('\\\\\\\\pic' + crop + '(\\\\-?\\\\d+)\\\\\\\\').exec(rtfData.replace(/\\r\\n\\\\/g, '\\\\').replace(/\\n/g, '\\\\'))[1];\n    return parseInt(result, 10);\n  };\n  MsWordPaste.prototype.removeClassName = function (elm) {\n    var elmWithClass = elm.querySelectorAll('*[class]:not(.e-img-cropped):not(.e-rte-image-unsupported)');\n    for (var i = 0; i < elmWithClass.length; i++) {\n      elmWithClass[i].removeAttribute('class');\n    }\n  };\n  MsWordPaste.prototype.breakLineAddition = function (elm) {\n    var allElements = elm.querySelectorAll('*');\n    for (var i = 0; i < allElements.length; i++) {\n      if (allElements[i].children.length === 0 && allElements[i].innerHTML === '&nbsp;' && allElements[i].innerHTML === '&nbsp;' && !allElements[i].closest('li') && !allElements[i].closest('td') && (allElements[i].nodeName !== 'SPAN' || allElements[i].nodeName === 'SPAN' && isNOU(allElements[i].previousElementSibling) && isNOU(allElements[i].nextElementSibling))) {\n        var detachableElement = this.findDetachElem(allElements[i]);\n        var brElement = createElement('br');\n        var hasNbsp = detachableElement.textContent.length > 0 && detachableElement.textContent.match(/\\u00a0/g) && detachableElement.textContent.match(/\\u00a0/g).length > 0;\n        if (!hasNbsp && !isNOU(detachableElement.parentElement)) {\n          detachableElement.parentElement.insertBefore(brElement, detachableElement);\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.findDetachElem = function (element) {\n    var removableElement;\n    if (!isNOU(element.parentElement) && element.parentElement.textContent.trim() === '' && element.parentElement.tagName !== 'TD' && isNOU(element.parentElement.querySelector('img'))) {\n      removableElement = this.findDetachElem(element.parentElement);\n    } else {\n      removableElement = element;\n    }\n    return removableElement;\n  };\n  MsWordPaste.prototype.removeUnwantedElements = function (elm) {\n    var styleElm = elm.querySelector('style');\n    if (!isNOU(styleElm)) {\n      detach(styleElm);\n    }\n    var innerElement = elm.innerHTML;\n    for (var i = 0; i < this.removableElements.length; i++) {\n      var regExp = RegExp;\n      var regExpStartElem = new regExp('<' + this.removableElements[i] + '\\\\s*[^>]*>', 'g');\n      var regExpEndElem = new regExp('</' + this.removableElements[i] + '>', 'g');\n      innerElement = innerElement.replace(regExpStartElem, '');\n      innerElement = innerElement.replace(regExpEndElem, '');\n    }\n    elm.innerHTML = innerElement;\n    elm.querySelectorAll(':empty');\n  };\n  MsWordPaste.prototype.findDetachEmptyElem = function (element) {\n    var removableElement;\n    if (!isNOU(element.parentElement)) {\n      var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g) && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n      if (!hasNbsp && element.parentElement.textContent.trim() === '' && element.parentElement.getAttribute('id') !== 'MSWord-Content' && !this.hasParentWithClass(element, 'MsoListParagraph') && isNOU(element.parentElement.querySelector('img'))) {\n        removableElement = this.findDetachEmptyElem(element.parentElement);\n      } else {\n        removableElement = element;\n      }\n    } else {\n      removableElement = null;\n    }\n    return removableElement;\n  };\n  MsWordPaste.prototype.hasParentWithClass = function (element, className) {\n    var currentParentElem = element.parentElement;\n    while (!isNOU(currentParentElem)) {\n      if (currentParentElem.classList.contains(className)) {\n        return true;\n      }\n      currentParentElem = currentParentElem.parentElement;\n    }\n    return false;\n  };\n  MsWordPaste.prototype.removeEmptyElements = function (element) {\n    var emptyElements = element.querySelectorAll(':empty');\n    for (var i = 0; i < emptyElements.length; i++) {\n      if (!isNOU(emptyElements[i].closest('td')) && !isNOU(emptyElements[i].closest('td').querySelector('.MsoNormal'))) {\n        emptyElements[i].innerHTML = '-';\n      }\n      var lineWithDiv = true;\n      if (emptyElements[i].tagName === 'DIV') {\n        lineWithDiv = emptyElements[i].style.borderBottom === 'none' || emptyElements[i].style.borderBottom === '' ? true : false;\n      }\n      if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' && emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' && emptyElements[i].tagName !== 'HR' && lineWithDiv) {\n        var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n        if (!isNOU(detachableElement)) {\n          detach(detachableElement);\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.styleCorrection = function (elm, wordPasteStyleConfig) {\n    var styleElement = elm.querySelectorAll('style');\n    var styles = [];\n    if (styleElement.length > 0) {\n      if (!isNOU(styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi))) {\n        styles = styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n      } else if (styleElement.length > 1) {\n        styles = styleElement[1].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n      }\n      var styleClassObject_1 = !isNOU(styles) ? this.findStyleObject(styles) : null;\n      if (!isNOU(styleClassObject_1)) {\n        var keys = Object.keys(styleClassObject_1);\n        var values = keys.map(function (key) {\n          return styleClassObject_1[\"\" + key];\n        });\n        values = this.removeUnwantedStyle(values, wordPasteStyleConfig);\n        this.filterStyles(elm, wordPasteStyleConfig);\n        var resultElem = void 0;\n        var fromClass = false;\n        var regex = /^(p|div|li)\\.(1|10|11)$/;\n        for (var i = 0; i < keys.length; i++) {\n          if (keys[i].split('.')[0] === '') {\n            resultElem = elm.getElementsByClassName(keys[i].split('.')[1]);\n            fromClass = true;\n          } else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') >= 0 || regex.test(keys[i])) {\n            continue;\n          } else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') < 0) {\n            resultElem = elm.getElementsByTagName(keys[i]);\n          } else {\n            resultElem = elm.querySelectorAll(keys[i]);\n          }\n          for (var j = 0; j < resultElem.length; j++) {\n            if (resultElem[j].closest('li') && keys[i] === 'p') {\n              continue;\n            }\n            var styleProperty = resultElem[j].getAttribute('style');\n            if (!isNOU(styleProperty) && styleProperty.trim() !== '') {\n              var valueSplit = values[i].split(';');\n              for (var q = 0; q < valueSplit.length; q++) {\n                if (valueSplit[q].split(':')[0] === 'border' && valueSplit[q].split(':')[1] === 'none') {\n                  valueSplit.splice(q, 1);\n                  q--;\n                }\n              }\n              if (!fromClass) {\n                for (var k = 0; k < valueSplit.length; k++) {\n                  var propertyName = valueSplit[k].split(':')[0];\n                  if (styleProperty.includes(propertyName + ':')) {\n                    valueSplit.splice(k, 1);\n                    k--;\n                  }\n                }\n              }\n              var changedValue = valueSplit.join(';') + ';' + styleProperty;\n              resultElem[j].setAttribute('style', changedValue);\n            } else {\n              values[i] = values[i].replace(/text-indent:-(.*?)(?=;|$)/gm, '');\n              resultElem[j].setAttribute('style', values[i]);\n            }\n          }\n          fromClass = false;\n        }\n        var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n        for (var i = 0; i < listClass.length; i++) {\n          if (keys.indexOf('li.' + listClass[i]) > -1) {\n            var olULElems = elm.querySelectorAll('ol.' + listClass[i] + ', ul.' + listClass[i]);\n            for (var j = 0; j < olULElems.length; j++) {\n              var styleProperty = olULElems[j].getAttribute('style');\n              if (!isNOU(styleProperty) && styleProperty.trim() !== '' && olULElems[j].style.marginLeft !== '') {\n                var valueSplit = values[keys.indexOf('li.' + listClass[i])].split(';');\n                for (var k = 0; k < valueSplit.length; k++) {\n                  if ('margin-left'.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                    if (!isNOU(valueSplit[k].split(':')[1]) && valueSplit[k].split(':')[1].indexOf('in') >= 0 && olULElems[j].style.marginLeft.indexOf('in') >= 0) {\n                      var classStyle = parseFloat(valueSplit[k].split(':')[1].split('in')[0]);\n                      var inlineStyle = parseFloat(olULElems[j].style.marginLeft.split('in')[0]);\n                      olULElems[j].style.marginLeft = inlineStyle - classStyle + 'in';\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.filterStyles = function (elm, wordPasteStyleConfig) {\n    var elmWithStyles = elm.querySelectorAll('*[style]');\n    for (var i = 0; i < elmWithStyles.length; i++) {\n      var elemStyleProperty = elmWithStyles[i].getAttribute('style').split(';');\n      var styleValue = '';\n      for (var j = 0; j < elemStyleProperty.length; j++) {\n        if (wordPasteStyleConfig.indexOf(elemStyleProperty[j].split(':')[0].trim()) >= 0) {\n          styleValue += elemStyleProperty[j] + ';';\n        }\n      }\n      elmWithStyles[i].setAttribute('style', styleValue);\n    }\n  };\n  MsWordPaste.prototype.removeUnwantedStyle = function (values, wordPasteStyleConfig) {\n    for (var i = 0; i < values.length; i++) {\n      var styleValues = values[i].split(';');\n      values[i] = '';\n      for (var j = 0; j < styleValues.length; j++) {\n        if (wordPasteStyleConfig.indexOf(styleValues[j].split(':')[0]) >= 0) {\n          values[i] += styleValues[j] + ';';\n        }\n      }\n    }\n    return values;\n  };\n  MsWordPaste.prototype.findStyleObject = function (styles) {\n    var styleClassObject = {};\n    for (var i = 0; i < styles.length; i++) {\n      var tempStyle = styles[i];\n      var classNameCollection = tempStyle.replace(/([\\S ]+\\s+){[\\s\\S]+?}/gi, '$1');\n      var stylesCollection = tempStyle.replace(/[\\S ]+\\s+{([\\s\\S]+?)}/gi, '$1');\n      classNameCollection = classNameCollection.replace(/^[\\s]|[\\s]$/gm, '');\n      stylesCollection = stylesCollection.replace(/^[\\s]|[\\s]$/gm, '');\n      classNameCollection = classNameCollection.replace(/\\n|\\r|\\n\\r/g, '');\n      stylesCollection = stylesCollection.replace(/\\n|\\r|\\n\\r/g, '');\n      for (var classNames = classNameCollection.split(', '), j = 0; j < classNames.length; j++) {\n        styleClassObject[classNames[j]] = stylesCollection;\n      }\n    }\n    return styleClassObject;\n  };\n  MsWordPaste.prototype.removingComments = function (elm) {\n    var innerElement = elm.innerHTML;\n    innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n    elm.innerHTML = innerElement;\n  };\n  MsWordPaste.prototype.cleanUp = function (node, listNodes) {\n    var tempCleaner = [];\n    var prevflagState;\n    var allNodes = node.querySelectorAll('*');\n    for (var index = 0; index < allNodes.length; index++) {\n      if (this.ignorableNodes.indexOf(allNodes[index].nodeName) === -1 || allNodes[index].nodeType === 3 && allNodes[index].textContent.trim() === '') {\n        tempCleaner.push(allNodes[index]);\n        continue;\n      } else if (allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n        if (allNodes[index].className.indexOf('MsoListParagraphCxSpFirst') >= 0 && listNodes.length > 0 && listNodes[listNodes.length - 1] !== null) {\n          listNodes.push(null);\n        }\n        listNodes.push(allNodes[index]);\n      }\n      if (prevflagState && this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1 && !(allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0)) {\n        listNodes.push(null);\n      }\n      if (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) {\n        if (allNodes[index].className && allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n          prevflagState = true;\n        } else {\n          prevflagState = false;\n        }\n      }\n    }\n    if (listNodes.length && listNodes[listNodes.length - 1] !== null) {\n      listNodes.push(null);\n    }\n    return listNodes;\n  };\n  MsWordPaste.prototype.listConverter = function (listNodes) {\n    var level;\n    var data = [];\n    var listFormatOverride;\n    var collection = [];\n    var content = '';\n    var stNode;\n    var currentListStyle = '';\n    for (var i = 0; i < listNodes.length; i++) {\n      if (listNodes[i] === null) {\n        data.push({\n          content: this.makeConversion(collection),\n          node: listNodes[i - 1]\n        });\n        collection = [];\n        continue;\n      }\n      if (listNodes[i].getAttribute('style') && listNodes[i].getAttribute('style').indexOf('mso-outline-level') !== -1) {\n        listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('mso-outline-level', 'mso-outline'));\n      }\n      content = listNodes[i].getAttribute('style');\n      if (content && content.indexOf('level') !== -1) {\n        // eslint-disable-next-line\n        level = parseInt(content.charAt(content.indexOf('level') + 5), null);\n      } else {\n        level = 1;\n      }\n      if (content && content.indexOf('mso-list:') !== -1) {\n        var msoListValue = void 0;\n        if (content.match(/mso-list:[^;]+;?/)) {\n          var changedContent = content.replace(new RegExp('\\\\n', 'g'), '').split(' ').join('');\n          msoListValue = changedContent.match(/mso-list:[^;]+;?/)[0].split(':l');\n          listFormatOverride = isNOU(msoListValue) ? null : parseInt(msoListValue[1].split('level')[0], 10);\n        } else {\n          listFormatOverride = null;\n        }\n      }\n      this.listContents = [];\n      this.getListContent(listNodes[i]);\n      var type = void 0;\n      var listStyleType = void 0;\n      var startAttr = void 0;\n      var styleMarginLeft = void 0;\n      if (!isNOU(this.listContents[0])) {\n        type = this.listContents[0].trim().length > 1 ? 'ol' : 'ul';\n        listStyleType = this.getlistStyleType(this.listContents[0], type);\n        if (type === 'ol' && (i === 0 || listNodes[i - 1] === null)) {\n          var startString = this.listContents[0].split('.')[0];\n          var listTypes = ['A', 'a', 'I', 'i', 'α', '1', '01', '1-']; // Add '1-' for rare list type.\n          if (listTypes.indexOf(startString) === -1) {\n            if (listStyleType === 'decimal') {\n              // Bug in getlistStyleType() list style stype is returned as decimal for nested list with start attribute\n              if (!isNaN(parseInt(startString, 10))) {\n                startAttr = parseInt(startString, 10);\n              }\n            } else if (listStyleType === 'decimal-leading-zero') {\n              if (!isNaN(parseInt(startString, 10))) {\n                startAttr = parseInt(startString, 10);\n              }\n            } else if (listStyleType === 'upper-alpha') {\n              startAttr = startString.split('.')[0].charCodeAt(0) - 64;\n            } else if (listStyleType === 'lower-alpha') {\n              startAttr = startString.split('.')[0].charCodeAt(0) - 96;\n            } else if (listStyleType === 'upper-roman') {\n              startAttr = this.upperRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n            } else if (listStyleType === 'lower-roman') {\n              startAttr = this.lowerRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n            } else if (listStyleType === 'lower-greek') {\n              startAttr = this.lowerGreekNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n            }\n          }\n        }\n        if (listNodes[i].style.marginLeft !== '') {\n          styleMarginLeft = listNodes[i].style.marginLeft;\n        }\n        var tempNode = [];\n        for (var j = 1; j < this.listContents.length; j++) {\n          tempNode.push(this.listContents[j]);\n        }\n        var currentClassName = void 0;\n        if (!isNOU(listNodes[i].className)) {\n          currentClassName = listNodes[i].className;\n        }\n        if (!isNOU(listNodes[i].getAttribute('style'))) {\n          listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('text-align:start;', ''));\n          listNodes[i].style.textIndent = '';\n          currentListStyle = listNodes[i].getAttribute('style');\n        }\n        collection.push({\n          listType: type,\n          content: tempNode,\n          nestedLevel: level,\n          listFormatOverride: listFormatOverride,\n          class: currentClassName,\n          listStyle: currentListStyle,\n          listStyleTypeName: listStyleType,\n          start: startAttr,\n          styleMarginLeft: styleMarginLeft\n        });\n      }\n    }\n    stNode = listNodes.shift();\n    while (stNode) {\n      var elemColl = [];\n      for (var temp1 = 0; temp1 < data.length; temp1++) {\n        if (data[temp1].node === stNode) {\n          for (var index = 0; index < data[temp1].content.childNodes.length; index++) {\n            elemColl.push(data[temp1].content.childNodes[index]);\n          }\n          for (var index = 0; index < elemColl.length; index++) {\n            stNode.parentElement.insertBefore(elemColl[index], stNode);\n          }\n          break;\n        }\n      }\n      stNode.remove();\n      stNode = listNodes.shift();\n      if (!stNode) {\n        stNode = listNodes.shift();\n      }\n    }\n  };\n  MsWordPaste.prototype.getlistStyleType = function (listContent, type) {\n    var currentListClass;\n    if (type === 'ol') {\n      var charCode = listContent.split('.')[0].charCodeAt(0);\n      switch (true) {\n        case this.upperRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n          currentListClass = 'upper-roman';\n          break;\n        case this.lowerRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n          currentListClass = 'lower-roman';\n          break;\n        case this.lowerGreekNumber.indexOf(listContent.split('.')[0]) > -1:\n          currentListClass = 'lower-greek';\n          break;\n        case charCode > 64 && charCode < 91:\n          currentListClass = 'upper-alpha';\n          break;\n        case charCode > 96 && charCode < 123:\n          currentListClass = 'lower-alpha';\n          break;\n        case listContent.split('.')[0].length > 1 && listContent.split('.')[0][0] === '0' && !isNaN(Number(listContent.split('.')[0])):\n          currentListClass = 'decimal-leading-zero';\n          break;\n        default:\n          currentListClass = 'decimal';\n          break;\n      }\n    } else {\n      switch (listContent.split('.')[0]) {\n        case 'o':\n          currentListClass = 'circle';\n          break;\n        case '§':\n          currentListClass = 'square';\n          break;\n        default:\n          currentListClass = 'disc';\n          break;\n      }\n    }\n    return currentListClass;\n  };\n  MsWordPaste.prototype.makeConversion = function (collection) {\n    var root = createElement('div');\n    var temp;\n    var pLevel = 1;\n    var prevList;\n    var listCount = 0;\n    var elem;\n    var lfo = collection[0].listFormatOverride;\n    for (var index = 0; index < collection.length; index++) {\n      var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n      var isNormalList = false;\n      for (var i = 0; i < listClass.length; i++) {\n        if (listClass[i].indexOf(collection[index].class) >= 0) {\n          isNormalList = true;\n          break;\n        }\n      }\n      if (!isNOU(prevList) && index !== 0 && collection[index - 1].listType !== collection[index].listType && !isNormalList) {\n        prevList = null;\n      }\n      var pElement = createElement('p', {\n        className: 'MsoNoSpacing'\n      });\n      pElement.innerHTML = collection[index].content.join(' ');\n      if (collection[index].nestedLevel === 1 && (listCount === 0 || lfo !== collection[index].listFormatOverride) && collection[index].content) {\n        root.appendChild(temp = createElement(collection[index].listType, {\n          className: collection[index].class\n        }));\n        prevList = createElement('li');\n        prevList.appendChild(pElement);\n        temp.appendChild(prevList);\n        temp.setAttribute('level', collection[index].nestedLevel.toString());\n        if (collection[index].class !== 'msolistparagraph') {\n          temp.style.marginLeft = collection[index].styleMarginLeft;\n        } else {\n          addClass([temp], 'marginLeftIgnore');\n        }\n        temp.style.listStyleType = collection[index].listStyleTypeName;\n      } else if (collection[index].nestedLevel === pLevel && lfo === collection[index].listFormatOverride) {\n        if (!isNOU(prevList) && !isNOU(prevList.parentElement) && prevList.parentElement.tagName.toLowerCase() === collection[index].listType) {\n          prevList.parentElement.appendChild(prevList = createElement('li'));\n          prevList.appendChild(pElement);\n        } else if (isNOU(prevList)) {\n          temp = createElement(collection[index].listType);\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n          prevList = createElement('li');\n          prevList.appendChild(pElement);\n          temp.appendChild(prevList);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n          root.appendChild(temp);\n        } else {\n          temp = createElement(collection[index].listType);\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n          prevList.parentElement.parentElement.appendChild(temp);\n          prevList = createElement('li');\n          prevList.appendChild(pElement);\n          temp.appendChild(prevList);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n        }\n      } else if (collection[index].nestedLevel > pLevel) {\n        if (!isNOU(prevList)) {\n          for (var j = 0; j < collection[index].nestedLevel - pLevel; j++) {\n            prevList.appendChild(temp = createElement(collection[index].listType));\n            prevList = createElement('li');\n            if (j !== collection[index].nestedLevel - pLevel - 1 && collection[index].nestedLevel - pLevel > 1) {\n              prevList.style.listStyleType = 'none';\n            }\n            temp.appendChild(prevList);\n          }\n          prevList.appendChild(pElement);\n          temp.setAttribute('level', collection[index].nestedLevel.toString());\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n        } else {\n          if (collection[index].nestedLevel > pLevel && isNormalList) {\n            var initialNode = createElement(collection[index].listType);\n            prevList = createElement('li');\n            initialNode.appendChild(prevList);\n            initialNode.style.listStyleType = 'none';\n            for (var j = 0; j < collection[index].nestedLevel - 1; j++) {\n              prevList.appendChild(temp = createElement(collection[index].listType));\n              prevList = createElement('li');\n              temp.appendChild(prevList);\n              temp.style.listStyleType = 'none';\n            }\n            prevList.appendChild(pElement);\n            root.appendChild(initialNode);\n            temp.setAttribute('level', collection[index].nestedLevel.toString());\n            temp.style.listStyleType = collection[index].listStyleTypeName;\n          } else {\n            root.appendChild(temp = createElement(collection[index].listType));\n            prevList = createElement('li');\n            prevList.appendChild(pElement);\n            temp.appendChild(prevList);\n            temp.setAttribute('level', collection[index].nestedLevel.toString());\n            if (collection[index].class !== 'msolistparagraph') {\n              temp.style.marginLeft = collection[index].styleMarginLeft;\n            } else {\n              addClass([temp], 'marginLeftIgnore');\n            }\n            temp.style.listStyleType = collection[index].listStyleTypeName;\n          }\n        }\n      } else if (collection[index].nestedLevel === 1) {\n        if (root.lastChild.tagName.toLowerCase() === collection[index].listType) {\n          temp = root.lastChild;\n        } else {\n          root.appendChild(temp = createElement(collection[index].listType));\n          temp.style.listStyleType = collection[index].listStyleTypeName;\n        }\n        prevList = createElement('li');\n        prevList.appendChild(pElement);\n        temp.appendChild(prevList);\n        temp.setAttribute('level', collection[index].nestedLevel.toString());\n      } else {\n        elem = prevList;\n        while (elem.parentElement) {\n          elem = elem.parentElement;\n          if (elem.attributes.getNamedItem('level')) {\n            if (parseInt(elem.attributes.getNamedItem('level').textContent, 10) === collection[index].nestedLevel && lfo === collection[index].listFormatOverride) {\n              prevList = createElement('li');\n              prevList.appendChild(pElement);\n              elem.appendChild(prevList);\n              break;\n              // eslint-disable-next-line\n            } else if (parseInt(elem.attributes.getNamedItem('level').textContent, null) === collection[index].nestedLevel && lfo !== collection[index].listFormatOverride) {\n              temp = createElement(collection[index].listType);\n              prevList = createElement('li');\n              temp.appendChild(prevList);\n              if (collection[index].nestedLevel > 1) {\n                for (var k = 0; k < collection[index].nestedLevel - 1; k++) {\n                  prevList.appendChild(temp = createElement(collection[index].listType));\n                  prevList = createElement('li');\n                  temp.appendChild(prevList);\n                  temp.style.listStyleType = 'none';\n                }\n              }\n              prevList.appendChild(pElement);\n              elem.appendChild(temp);\n              temp.setAttribute('level', collection[index].nestedLevel.toString());\n              temp.style.listStyleType = collection[index].listStyleTypeName;\n              break;\n            } else if (collection[index].nestedLevel > parseInt(elem.attributes.getNamedItem('level').textContent, 10)) {\n              elem.appendChild(temp = createElement(collection[index].listType));\n              prevList = createElement('li');\n              prevList.appendChild(pElement);\n              temp.appendChild(prevList);\n              temp.setAttribute('level', collection[index].nestedLevel.toString());\n              temp.style.listStyleType = collection[index].listStyleTypeName;\n              break;\n            }\n          }\n          continue;\n        }\n      }\n      prevList.setAttribute('class', collection[index].class);\n      prevList.setAttribute('style', !isNOU(collection[index].listStyle) ? collection[index].listStyle : '');\n      pLevel = collection[index].nestedLevel;\n      lfo = collection[index].listFormatOverride;\n      listCount++;\n      if (!isNOU(collection[index].start && collection[index].start !== 1 && collection[index].listType === 'ol')) {\n        temp.setAttribute('start', collection[index].start.toString());\n      }\n    }\n    return root;\n  };\n  MsWordPaste.prototype.getListContent = function (elem) {\n    var pushContent = '';\n    var firstChild = elem.firstElementChild;\n    if (firstChild.textContent.trim() === '' && !isNOU(firstChild.firstElementChild) && firstChild.firstElementChild.nodeName === 'IMG') {\n      pushContent = elem.innerHTML.trim();\n      this.listContents.push('');\n      this.listContents.push(pushContent);\n    } else {\n      //Add to support separate list which looks like same list and also to add all tags as it is inside list\n      if (firstChild.childNodes.length > 0) {\n        var listIgnoreTag = firstChild.querySelectorAll('[style*=\"mso-list\"]');\n        for (var i = 0; i < listIgnoreTag.length; i++) {\n          listIgnoreTag[i].setAttribute('style', listIgnoreTag[i].getAttribute('style').replace(/\\n/g, ''));\n        }\n        var listOrderCleanup = firstChild.querySelector('span[style*=\"mso-list\"]');\n        if (listOrderCleanup) {\n          var style = listOrderCleanup.getAttribute('style');\n          if (style) {\n            style = style.replace(/\\s*:\\s*/g, ':');\n            listOrderCleanup.setAttribute('style', style);\n          }\n        }\n        var listOrder = firstChild.querySelector('span[style=\"mso-list:Ignore\"]');\n        var isEmptyMarkerSpan = isNOU(listOrder);\n        listOrder = isEmptyMarkerSpan ? firstChild : listOrder;\n        if (!isNOU(listOrder)) {\n          var textContent = listOrder.textContent.trim();\n          if (isEmptyMarkerSpan) {\n            var bulletPattern = /^(\\d{1,2}|[a-zA-Z]|[*#~•○■])(\\.|\\)|-)\\s*/;\n            var textContentMatch = textContent.match(bulletPattern);\n            if (!isNOU(textContentMatch)) {\n              textContent = textContentMatch[0].trim();\n              listOrder.textContent = listOrder.textContent.trim().substring(textContent.length).trim();\n            }\n          }\n          this.listContents.push(textContent);\n          if (!isEmptyMarkerSpan) {\n            detach(listOrder);\n          }\n          this.removingComments(elem);\n          this.removeUnwantedElements(elem);\n        }\n      }\n    }\n    this.listContents.push(elem.innerHTML);\n  };\n  MsWordPaste.prototype.processMargin = function (element) {\n    var liChildren = element.querySelectorAll('li');\n    if (liChildren.length > 0) {\n      for (var i = 0; i < liChildren.length; i++) {\n        if (!isNOU(liChildren[i].style.marginLeft) && !liChildren[i].parentElement.classList.contains('marginLeftIgnore')) {\n          liChildren[i].style.marginLeft = '';\n        }\n      }\n    }\n    var tableChildren = element.querySelectorAll('table');\n    if (tableChildren.length > 0) {\n      for (var i = 0; i < tableChildren.length; i++) {\n        if (!isNOU(tableChildren[i].style.marginLeft) && tableChildren[i].style.marginLeft.indexOf('-') >= 0) {\n          tableChildren[i].style.marginLeft = '';\n        }\n      }\n    }\n    var ignoredNode = element.querySelectorAll('.marginLeftIgnore li');\n    if (ignoredNode.length > 0) {\n      for (var i = 0; i < ignoredNode.length; i++) {\n        if (!isNOU(ignoredNode[i].style.marginLeft) && ignoredNode[i].style.marginLeft !== '') {\n          var marginLeft = ignoredNode[i].style.marginLeft;\n          var marginLeftValue = parseFloat(marginLeft.split('in')[0]);\n          var result = marginLeftValue - 0.5;\n          ignoredNode[i].style.marginLeft = result.toString() + 'in';\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.removeEmptyAnchorTag = function (element) {\n    var removableElement = element.querySelectorAll('a:not([href])');\n    for (var j = removableElement.length - 1; j >= 0; j--) {\n      var parentElem = removableElement[j].parentNode;\n      while (removableElement[j].firstChild) {\n        parentElem.insertBefore(removableElement[j].firstChild, removableElement[j]);\n      }\n      parentElem.removeChild(removableElement[j]);\n    }\n  };\n  MsWordPaste.prototype.findSource = function (element) {\n    var metaNodes = element.querySelectorAll('meta');\n    for (var i = 0; i < metaNodes.length; i++) {\n      var metaNode = metaNodes[i];\n      var content = metaNode.getAttribute('content');\n      var name_1 = metaNode.getAttribute('name');\n      if (name_1 && name_1.toLowerCase().indexOf('generator') >= 0 && content && content.toLowerCase().indexOf('microsoft') >= 0) {\n        for (var j = 0; j < PASTE_SOURCE.length; j++) {\n          if (content.toLowerCase().indexOf(PASTE_SOURCE[j]) >= 0) {\n            return PASTE_SOURCE[j];\n          }\n        }\n      }\n    }\n    return 'html';\n  };\n  MsWordPaste.prototype.handleOneNoteContent = function (element) {\n    var allListElements = element.querySelectorAll('ul, ol');\n    if (allListElements.length > 0) {\n      for (var i = 0; i < allListElements.length; i++) {\n        // Removing the ul and ol parent node for the p tag\n        var currentList = allListElements[i];\n        if (currentList.querySelectorAll('li').length === 0 && currentList.childNodes.length > 0) {\n          InsertMethods.unwrap(currentList);\n        }\n      }\n    }\n  };\n  MsWordPaste.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return MsWordPaste;\n}();\nexport { MsWordPaste };","map":{"version":3,"names":["EVENTS","createElement","isNullOrUndefined","isNOU","detach","addClass","Browser","PASTE_SOURCE","InsertMethods","MsWordPaste","parent","olData","ulData","ignorableNodes","blockNode","borderStyle","upperRomanNumber","lowerRomanNumber","lowerGreekNumber","removableElements","listContents","cropImageDimensions","addEventListener","prototype","observer","on","MS_WORD_CLEANUP_PLUGIN","wordCleanup","INTERNAL_DESTROY","destroy","removeEventListener","off","e","wordPasteStyleConfig","allowedStylePropertiesArray","listNodes","tempHTMLContent","args","clipboardData","getData","rtfData","elm","setAttribute","innerHTML","addDoubleBr","patern","patern2","patern3","pattern4","source","findSource","test","replace","addListClass","cleanUp","parentElement","tagName","listConverter","imageConversion","cleanList","styleCorrection","removingComments","removeUnwantedElements","removeEmptyElements","removeEmptyAnchorTag","breakLineAddition","processMargin","removeClassName","addTableBorderClass","callBack","handleOneNoteContent","newline","querySelector","userAgent","indexOf","nodeName","i","childNodes","length","node","nodeType","Node","COMMENT_NODE","nodeValue","includes","newElement","document","cssText","style","currentStyle","getAttribute","newStyle","insertBefore","nextSibling","listTag","replacableElem","querySelectorAll","j","parentElem","parentNode","firstChild","closestListElem","findClosestListElem","insertAfter","newNode","referenceNode","listElem","closest","allNodes","index","className","toLowerCase","charAt","classList","add","allTableElm","hasTableBorder","checkVShape","imgElem","removeAttribute","imgSrc","base64Src","imgName","linkRegex","RegExp","push","split","imgType","pop","hexValue","hexConversion","base64Data","hex","convertToBase64","isCroppedImage","goalWidth","goalHeight","cropLength","cropTop","cropR","cropB","match","firstElementChild","src","imgElement","byteArr","conHexStringToBytes","base64String","conBytesToBase64","base64","type","base64Str","base64Char","byteArrLen","array3","slice","array3length","array4","parseInt","substr","regExp","picHead","pic","fullImg","result","extractCropValue","crop","exec","elmWithClass","allElements","children","previousElementSibling","nextElementSibling","detachableElement","findDetachElem","brElement","hasNbsp","textContent","element","removableElement","trim","styleElm","innerElement","regExpStartElem","regExpEndElem","findDetachEmptyElem","hasParentWithClass","currentParentElem","contains","emptyElements","lineWithDiv","borderBottom","styleElement","styles","styleClassObject_1","findStyleObject","keys","Object","values","map","key","removeUnwantedStyle","filterStyles","resultElem","fromClass","regex","getElementsByClassName","getElementsByTagName","styleProperty","valueSplit","q","splice","k","propertyName","changedValue","join","listClass","olULElems","marginLeft","classStyle","parseFloat","inlineStyle","elmWithStyles","elemStyleProperty","styleValue","styleValues","styleClassObject","tempStyle","classNameCollection","stylesCollection","classNames","tempCleaner","prevflagState","level","data","listFormatOverride","collection","content","stNode","currentListStyle","makeConversion","msoListValue","changedContent","getListContent","listStyleType","startAttr","styleMarginLeft","getlistStyleType","startString","listTypes","isNaN","charCodeAt","tempNode","currentClassName","textIndent","listType","nestedLevel","class","listStyle","listStyleTypeName","start","shift","elemColl","temp1","remove","listContent","currentListClass","charCode","Number","root","temp","pLevel","prevList","listCount","elem","lfo","isNormalList","pElement","appendChild","toString","initialNode","lastChild","attributes","getNamedItem","pushContent","listIgnoreTag","listOrderCleanup","listOrder","isEmptyMarkerSpan","bulletPattern","textContentMatch","substring","liChildren","tableChildren","ignoredNode","marginLeftValue","removeChild","metaNodes","metaNode","name_1","allListElements","currentList","unwrap"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/ms-word-clean-up.js"],"sourcesContent":["import * as EVENTS from '../../common/constant';\nimport { createElement, isNullOrUndefined as isNOU, detach, addClass, Browser } from '@syncfusion/ej2-base';\nimport { PASTE_SOURCE } from '../base/constant';\nimport { InsertMethods } from './insert-methods';\n/**\n * PasteCleanup for MsWord content\n *\n * @hidden\n\n */\nvar MsWordPaste = /** @class */ (function () {\n    function MsWordPaste(parent) {\n        this.olData = [\n            'decimal',\n            'decimal-leading-zero',\n            'lower-alpha',\n            'lower-roman',\n            'upper-alpha',\n            'upper-roman',\n            'lower-greek'\n        ];\n        this.ulData = [\n            'disc',\n            'square',\n            'circle',\n            'disc',\n            'square',\n            'circle'\n        ];\n        this.ignorableNodes = ['A', 'APPLET', 'B', 'BLOCKQUOTE', 'BR',\n            'BUTTON', 'CENTER', 'CODE', 'COL', 'COLGROUP', 'DD', 'DEL', 'DFN', 'DIR', 'DIV',\n            'DL', 'DT', 'EM', 'FIELDSET', 'FONT', 'FORM', 'FRAME', 'FRAMESET', 'H1', 'H2',\n            'H3', 'H4', 'H5', 'H6', 'HR', 'I', 'IMG', 'IFRAME', 'INPUT', 'INS', 'LABEL',\n            'LI', 'OL', 'OPTION', 'P', 'PARAM', 'PRE', 'Q', 'S', 'SELECT', 'SPAN', 'STRIKE',\n            'STRONG', 'SUB', 'SUP', 'TABLE', 'TBODY', 'TD', 'TEXTAREA', 'TFOOT', 'TH',\n            'THEAD', 'TITLE', 'TR', 'TT', 'U', 'UL'];\n        this.blockNode = ['div', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n            'address', 'blockquote', 'button', 'center', 'dd', 'dir', 'dl', 'dt', 'fieldset',\n            'frameset', 'hr', 'iframe', 'isindex', 'li', 'map', 'menu', 'noframes', 'noscript',\n            'object', 'ol', 'pre', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul',\n            'header', 'article', 'nav', 'footer', 'section', 'aside', 'main', 'figure', 'figcaption'];\n        this.borderStyle = ['border-top', 'border-right', 'border-bottom', 'border-left'];\n        this.upperRomanNumber = ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX',\n            'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX'];\n        this.lowerRomanNumber = ['i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix',\n            'x', 'xi', 'xii', 'xiii', 'xiv', 'xv', 'xvi', 'xvii', 'xviii', 'xix', 'xx'];\n        this.lowerGreekNumber = ['α', 'β', 'γ', 'δ', 'ε', 'ζ', 'η', 'θ', 'ι', 'κ', 'λ',\n            'μ', 'ν', 'ξ', 'ο', 'π', 'ρ', 'σ', 'τ', 'υ', 'φ', 'χ', 'ψ', 'ω'];\n        this.removableElements = ['o:p', 'style', 'w:sdt'];\n        this.listContents = [];\n        this.cropImageDimensions = [];\n        this.parent = parent;\n        this.addEventListener();\n    }\n    MsWordPaste.prototype.addEventListener = function () {\n        this.parent.observer.on(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup, this);\n        this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n    };\n    MsWordPaste.prototype.removeEventListener = function () {\n        this.parent.observer.off(EVENTS.MS_WORD_CLEANUP_PLUGIN, this.wordCleanup);\n        this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n    };\n    MsWordPaste.prototype.wordCleanup = function (e) {\n        var wordPasteStyleConfig = !isNOU(e.allowedStylePropertiesArray) ? e.allowedStylePropertiesArray : [];\n        var listNodes = [];\n        var tempHTMLContent = e.args.clipboardData.getData('text/HTML');\n        var rtfData = e.args.clipboardData.getData('text/rtf');\n        var elm = createElement('p');\n        elm.setAttribute('id', 'MSWord-Content');\n        elm.innerHTML = tempHTMLContent;\n        this.addDoubleBr(elm);\n        var patern = /class='?Mso|style='[^ ]*\\bmso-/i;\n        var patern2 = /class=\"?Mso|style=\"[^ ]*\\bmso-/i;\n        var patern3 = /(class=\"?Mso|class='?Mso|class=\"?Xl|class='?Xl|class=Xl|style=\"[^\"]*\\bmso-|style='[^']*\\bmso-|w:WordDocument)/gi;\n        var pattern4 = /style='mso-width-source:/i;\n        var source = this.findSource(elm);\n        if (patern.test(tempHTMLContent) || patern2.test(tempHTMLContent) || patern3.test(tempHTMLContent) ||\n            pattern4.test(tempHTMLContent)) {\n            tempHTMLContent = tempHTMLContent.replace(/<img[^>]+>/i, '');\n            this.addListClass(elm);\n            listNodes = this.cleanUp(elm, listNodes);\n            if (!isNOU(listNodes[0]) && listNodes[0].parentElement.tagName !== 'UL' &&\n                listNodes[0].parentElement.tagName !== 'OL') {\n                this.listConverter(listNodes);\n            }\n            this.imageConversion(elm, rtfData);\n            this.cleanList(elm, 'UL');\n            this.cleanList(elm, 'OL');\n            this.styleCorrection(elm, wordPasteStyleConfig);\n            this.removingComments(elm);\n            this.removeUnwantedElements(elm);\n            this.removeEmptyElements(elm);\n            this.removeEmptyAnchorTag(elm);\n            this.breakLineAddition(elm);\n            this.processMargin(elm);\n            this.removeClassName(elm);\n            if (pattern4.test(tempHTMLContent)) {\n                this.addTableBorderClass(elm);\n            }\n            e.callBack(elm.innerHTML, this.cropImageDimensions, source);\n        }\n        else {\n            if (source === PASTE_SOURCE[2]) {\n                this.handleOneNoteContent(elm);\n            }\n            e.callBack(elm.innerHTML, null, source);\n        }\n    };\n    MsWordPaste.prototype.addDoubleBr = function (elm) {\n        var newline = elm.querySelector('.Apple-interchange-newline');\n        if (!isNOU(newline) && Browser.userAgent.indexOf('Chrome') !== -1 && newline.parentElement.nodeName === 'P' && elm !== newline.parentElement) {\n            for (var i = 0; i < elm.childNodes.length; i++) {\n                var node = elm.childNodes[i];\n                if (node.nodeType === Node.COMMENT_NODE && node.nodeValue.includes('StartFragment')) {\n                    var newElement = document.createElement('p');\n                    newElement.innerHTML = '<br>';\n                    var cssText = newline.parentElement.style.cssText;\n                    var currentStyle = newElement.getAttribute('style') || '';\n                    var newStyle = currentStyle + cssText;\n                    newElement.setAttribute('style', newStyle);\n                    elm.insertBefore(newElement, node.nextSibling);\n                    detach(newline);\n                    break;\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.cleanList = function (elm, listTag) {\n        var replacableElem = elm.querySelectorAll(listTag + ' div');\n        for (var j = replacableElem.length - 1; j >= 0; j--) {\n            var parentElem = replacableElem[j].parentNode;\n            while (replacableElem[j].firstChild) {\n                parentElem.insertBefore(replacableElem[j].firstChild, replacableElem[j]);\n            }\n            var closestListElem = this.findClosestListElem(replacableElem[j]);\n            if (closestListElem) {\n                this.insertAfter(replacableElem[j], closestListElem);\n            }\n        }\n    };\n    MsWordPaste.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    MsWordPaste.prototype.findClosestListElem = function (listElem) {\n        var closestListElem;\n        while (!isNOU(listElem)) {\n            listElem = !isNOU(listElem.closest('ul')) && listElem.tagName !== 'UL' ?\n                listElem.closest('ul') : (listElem.tagName !== 'OL' ? listElem.closest('ol') : null);\n            closestListElem = !isNOU(listElem) ? listElem : closestListElem;\n        }\n        return closestListElem;\n    };\n    MsWordPaste.prototype.addListClass = function (elm) {\n        var allNodes = elm.querySelectorAll('*');\n        for (var index = 0; index < allNodes.length; index++) {\n            if (!isNOU(allNodes[index].getAttribute('style')) && allNodes[index].getAttribute('style').replace(/ /g, '').replace('\\n', '').indexOf('mso-list:l') >= 0 &&\n                allNodes[index].className.toLowerCase().indexOf('msolistparagraph') === -1 &&\n                allNodes[index].tagName.charAt(0) !== 'H' && allNodes[index].tagName !== 'LI' &&\n                allNodes[index].tagName !== 'OL' && allNodes[index].tagName !== 'UL') {\n                allNodes[index].classList.add('msolistparagraph');\n            }\n        }\n    };\n    MsWordPaste.prototype.addTableBorderClass = function (elm) {\n        var allTableElm = elm.querySelectorAll('table');\n        var hasTableBorder = false;\n        for (var i = 0; i < allTableElm.length; i++) {\n            for (var j = 0; j < this.borderStyle.length; j++) {\n                if (allTableElm[i].innerHTML.indexOf(this.borderStyle[j]) >= 0) {\n                    hasTableBorder = true;\n                    break;\n                }\n            }\n            if (hasTableBorder) {\n                allTableElm[i].classList.add('e-rte-table-border');\n                hasTableBorder = false;\n            }\n        }\n    };\n    MsWordPaste.prototype.imageConversion = function (elm, rtfData) {\n        this.checkVShape(elm);\n        var imgElem = elm.querySelectorAll('img');\n        for (var i = 0; i < imgElem.length; i++) {\n            if (!isNOU(imgElem[i].getAttribute('v:shapes')) &&\n                imgElem[i].getAttribute('v:shapes').indexOf('Picture') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('圖片') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('Grafik') < 0 &&\n                imgElem[i].getAttribute('v:shapes').toLowerCase().indexOf('image') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('Graphic') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('_x0000_s') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('_x0000_i') < 0 &&\n                imgElem[i].getAttribute('v:shapes').indexOf('img1') < 0) {\n                imgElem[i].classList.add('e-rte-image-unsupported');\n            }\n            imgElem[i].removeAttribute('v:shapes');\n        }\n        imgElem = elm.querySelectorAll('img');\n        var imgSrc = [];\n        var base64Src = [];\n        var imgName = [];\n        // eslint-disable-next-line\n        var linkRegex = new RegExp(/([^\\S]|^)(((https?\\:\\/\\/)|(www\\.)|(blob\\:))(\\S+))/gi);\n        if (imgElem.length > 0) {\n            for (var i = 0; i < imgElem.length; i++) {\n                imgSrc.push(imgElem[i].getAttribute('src'));\n                imgName.push(imgElem[i].getAttribute('src').split('/')[imgElem[i].getAttribute('src').split('/').length - 1].split('.')[0]);\n                if (!isNOU(imgSrc) && imgSrc[i] !== '') {\n                    var imgType = imgSrc[i].split('.').pop().toLowerCase();\n                    imgElem[i].setAttribute('data-image-type', imgType);\n                }\n            }\n            var hexValue = this.hexConversion(rtfData);\n            for (var i = 0; i < hexValue.length; i++) {\n                base64Src.push({\n                    base64Data: !isNOU(hexValue[i].hex) ? this.convertToBase64(hexValue[i]) : null,\n                    isCroppedImage: hexValue[i].isCroppedImage\n                });\n                if (hexValue[i].isCroppedImage) {\n                    this.cropImageDimensions.push({\n                        goalWidth: hexValue[i].goalWidth,\n                        goalHeight: hexValue[i].goalHeight,\n                        cropLength: hexValue[i].cropLength,\n                        cropTop: hexValue[i].cropTop,\n                        cropR: hexValue[i].cropR,\n                        cropB: hexValue[i].cropB\n                    });\n                }\n            }\n            imgElem = elm.querySelectorAll('img:not(.e-rte-image-unsupported');\n            for (var i = 0; i < imgElem.length; i++) {\n                if (imgSrc[i].match(linkRegex)) {\n                    imgElem[i].setAttribute('src', imgSrc[i]);\n                }\n                else {\n                    if (!isNOU(base64Src[i]) && !isNOU(base64Src[i].base64Data)) {\n                        imgElem[i].setAttribute('src', base64Src[i].base64Data);\n                    }\n                    else {\n                        imgElem[i].removeAttribute('src');\n                        imgElem[i].classList.add('e-rte-image-unsupported');\n                    }\n                    if (!isNOU(base64Src[i]) && base64Src[i].isCroppedImage) {\n                        imgElem[i].classList.add('e-img-cropped');\n                    }\n                }\n                imgElem[i].setAttribute('id', 'msWordImg-' + imgName[i]);\n            }\n            imgElem = elm.querySelectorAll('.e-rte-image-unsupported');\n            for (var i = 0; i < imgElem.length; i++) {\n                imgElem[i].removeAttribute('src');\n            }\n        }\n    };\n    MsWordPaste.prototype.checkVShape = function (elm) {\n        var allNodes = elm.querySelectorAll('*');\n        for (var i = 0; i < allNodes.length; i++) {\n            switch (allNodes[i].nodeName) {\n                case 'V:SHAPETYPE':\n                    detach(allNodes[i]);\n                    break;\n                case 'V:SHAPE':\n                    if (allNodes[i].firstElementChild.nodeName === 'V:IMAGEDATA') {\n                        var src = allNodes[i].firstElementChild.getAttribute('src');\n                        var imgElement = createElement('img');\n                        imgElement.setAttribute('src', src);\n                        allNodes[i].parentElement.insertBefore(imgElement, allNodes[i]);\n                        detach(allNodes[i]);\n                    }\n                    break;\n            }\n        }\n    };\n    MsWordPaste.prototype.convertToBase64 = function (hexValue) {\n        var byteArr = this.conHexStringToBytes(hexValue.hex);\n        var base64String = this.conBytesToBase64(byteArr);\n        var base64 = hexValue.type ? 'data:' + hexValue.type + ';base64,' + base64String : null;\n        return base64;\n    };\n    MsWordPaste.prototype.conBytesToBase64 = function (byteArr) {\n        var base64Str = '';\n        var base64Char = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n        var byteArrLen = byteArr.length;\n        for (var i = 0; i < byteArrLen; i += 3) {\n            var array3 = byteArr.slice(i, i + 3);\n            var array3length = array3.length;\n            var array4 = [];\n            if (array3length < 3) {\n                for (var j = array3length; j < 3; j++) {\n                    array3[j] = 0;\n                }\n            }\n            array4[0] = (array3[0] & 0xFC) >> 2;\n            array4[1] = ((array3[0] & 0x03) << 4) | (array3[1] >> 4);\n            array4[2] = ((array3[1] & 0x0F) << 2) | ((array3[2] & 0xC0) >> 6);\n            array4[3] = array3[2] & 0x3F;\n            for (var j = 0; j < 4; j++) {\n                if (j <= array3length) {\n                    base64Str += base64Char.charAt(array4[j]);\n                }\n                else {\n                    base64Str += '=';\n                }\n            }\n        }\n        return base64Str;\n    };\n    MsWordPaste.prototype.conHexStringToBytes = function (hex) {\n        var byteArr = [];\n        var byteArrLen = hex.length / 2;\n        for (var i = 0; i < byteArrLen; i++) {\n            byteArr.push(parseInt(hex.substr(i * 2, 2), 16));\n        }\n        return byteArr;\n    };\n    MsWordPaste.prototype.hexConversion = function (rtfData) {\n        var regExp = RegExp;\n        var picHead = new regExp('\\\\{\\\\\\\\pict[\\\\s\\\\S]+?\\\\\\\\bliptag-?\\\\d+(\\\\\\\\blipupi-?\\\\d+)?(\\\\{\\\\\\\\\\\\*\\\\\\\\blipuid\\\\s?[\\\\da-fA-F]+)?[\\\\s\\\\}]*?');\n        var pic = new regExp('(?:(' + picHead.source + '))([\\\\da-fA-F\\\\s]+)\\\\}', 'g');\n        var fullImg = rtfData.match(pic);\n        var imgType;\n        var result = [];\n        if (!isNOU(fullImg)) {\n            for (var i = 0; i < fullImg.length; i++) {\n                if (fullImg[i].indexOf('fIsBullet') !== -1 && fullImg[i].indexOf('wzName') === -1) {\n                    continue;\n                }\n                var isCroppedImage = false;\n                var goalWidth = 0;\n                var goalHeight = 0;\n                var cropLength = 0;\n                var cropTop = 0;\n                var cropR = 0;\n                var cropB = 0;\n                if (picHead.test(fullImg[i])) {\n                    if (fullImg[i].indexOf('\\\\pngblip') !== -1) {\n                        imgType = 'image/png';\n                    }\n                    else if (fullImg[i].indexOf('\\\\jpegblip') !== -1) {\n                        imgType = 'image/jpeg';\n                    }\n                    else if (fullImg[i].indexOf('\\\\emfblip') !== -1) {\n                        imgType = null;\n                    }\n                    else {\n                        continue;\n                    }\n                    isCroppedImage = ((this.extractCropValue('cropl', fullImg[i]) > 0 &&\n                        this.extractCropValue('cropt', fullImg[i]) > 0) ||\n                        this.extractCropValue('cropr', fullImg[i]) > 0 ||\n                        this.extractCropValue('cropb', fullImg[i])) ? true : false;\n                    if (isCroppedImage) {\n                        goalWidth = this.extractCropValue('wgoal', fullImg[i]);\n                        goalHeight = this.extractCropValue('hgoal', fullImg[i]);\n                        cropLength = this.extractCropValue('cropl', fullImg[i]);\n                        cropTop = this.extractCropValue('cropt', fullImg[i]);\n                        cropR = this.extractCropValue('cropr', fullImg[i]);\n                        cropB = this.extractCropValue('cropb', fullImg[i]);\n                    }\n                    result.push({\n                        hex: imgType ? fullImg[i].replace(picHead, '').replace(/[^\\da-fA-F]/g, '') : null,\n                        type: imgType,\n                        isCroppedImage: isCroppedImage,\n                        goalWidth: goalWidth,\n                        goalHeight: goalHeight,\n                        cropLength: cropLength,\n                        cropTop: cropTop,\n                        cropR: cropR,\n                        cropB: cropB\n                    });\n                }\n            }\n        }\n        return result;\n    };\n    MsWordPaste.prototype.extractCropValue = function (crop, rtfData) {\n        var regExp = RegExp;\n        var result = new regExp('\\\\\\\\pic' + crop + '(\\\\-?\\\\d+)\\\\\\\\').exec(rtfData.replace(/\\r\\n\\\\/g, '\\\\').replace(/\\n/g, '\\\\'))[1];\n        return parseInt(result, 10);\n    };\n    MsWordPaste.prototype.removeClassName = function (elm) {\n        var elmWithClass = elm.querySelectorAll('*[class]:not(.e-img-cropped):not(.e-rte-image-unsupported)');\n        for (var i = 0; i < elmWithClass.length; i++) {\n            elmWithClass[i].removeAttribute('class');\n        }\n    };\n    MsWordPaste.prototype.breakLineAddition = function (elm) {\n        var allElements = elm.querySelectorAll('*');\n        for (var i = 0; i < allElements.length; i++) {\n            if (allElements[i].children.length === 0 && allElements[i].innerHTML === '&nbsp;' &&\n                (allElements[i].innerHTML === '&nbsp;' && !allElements[i].closest('li')) &&\n                !allElements[i].closest('td') && (allElements[i].nodeName !== 'SPAN' ||\n                allElements[i].nodeName === 'SPAN' && (isNOU(allElements[i].previousElementSibling) &&\n                    isNOU(allElements[i].nextElementSibling)))) {\n                var detachableElement = this.findDetachElem(allElements[i]);\n                var brElement = createElement('br');\n                var hasNbsp = detachableElement.textContent.length > 0 && detachableElement.textContent.match(/\\u00a0/g)\n                    && detachableElement.textContent.match(/\\u00a0/g).length > 0;\n                if (!hasNbsp && !isNOU(detachableElement.parentElement)) {\n                    detachableElement.parentElement.insertBefore(brElement, detachableElement);\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.findDetachElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement) &&\n            element.parentElement.textContent.trim() === '' && element.parentElement.tagName !== 'TD' &&\n            isNOU(element.parentElement.querySelector('img'))) {\n            removableElement = this.findDetachElem(element.parentElement);\n        }\n        else {\n            removableElement = element;\n        }\n        return removableElement;\n    };\n    MsWordPaste.prototype.removeUnwantedElements = function (elm) {\n        var styleElm = elm.querySelector('style');\n        if (!isNOU(styleElm)) {\n            detach(styleElm);\n        }\n        var innerElement = elm.innerHTML;\n        for (var i = 0; i < this.removableElements.length; i++) {\n            var regExp = RegExp;\n            var regExpStartElem = new regExp('<' + this.removableElements[i] + '\\\\s*[^>]*>', 'g');\n            var regExpEndElem = new regExp('</' + this.removableElements[i] + '>', 'g');\n            innerElement = innerElement.replace(regExpStartElem, '');\n            innerElement = innerElement.replace(regExpEndElem, '');\n        }\n        elm.innerHTML = innerElement;\n        elm.querySelectorAll(':empty');\n    };\n    MsWordPaste.prototype.findDetachEmptyElem = function (element) {\n        var removableElement;\n        if (!isNOU(element.parentElement)) {\n            var hasNbsp = element.parentElement.textContent.length > 0 && element.parentElement.textContent.match(/\\u00a0/g)\n                && element.parentElement.textContent.match(/\\u00a0/g).length > 0;\n            if (!hasNbsp && element.parentElement.textContent.trim() === '' &&\n                element.parentElement.getAttribute('id') !== 'MSWord-Content' &&\n                !(this.hasParentWithClass(element, 'MsoListParagraph')) &&\n                isNOU(element.parentElement.querySelector('img'))) {\n                removableElement = this.findDetachEmptyElem(element.parentElement);\n            }\n            else {\n                removableElement = element;\n            }\n        }\n        else {\n            removableElement = null;\n        }\n        return removableElement;\n    };\n    MsWordPaste.prototype.hasParentWithClass = function (element, className) {\n        var currentParentElem = element.parentElement;\n        while (!isNOU(currentParentElem)) {\n            if (currentParentElem.classList.contains(className)) {\n                return true;\n            }\n            currentParentElem = currentParentElem.parentElement;\n        }\n        return false;\n    };\n    MsWordPaste.prototype.removeEmptyElements = function (element) {\n        var emptyElements = element.querySelectorAll(':empty');\n        for (var i = 0; i < emptyElements.length; i++) {\n            if (!isNOU(emptyElements[i].closest('td')) &&\n                !isNOU(emptyElements[i].closest('td').querySelector('.MsoNormal'))) {\n                emptyElements[i].innerHTML = '-';\n            }\n            var lineWithDiv = true;\n            if (emptyElements[i].tagName === 'DIV') {\n                lineWithDiv = emptyElements[i].style.borderBottom === 'none' ||\n                    emptyElements[i].style.borderBottom === '' ? true : false;\n            }\n            if (emptyElements[i].tagName !== 'IMG' && emptyElements[i].tagName !== 'BR' &&\n                emptyElements[i].tagName !== 'IFRAME' && emptyElements[i].tagName !== 'TD' &&\n                emptyElements[i].tagName !== 'HR' && lineWithDiv) {\n                var detachableElement = this.findDetachEmptyElem(emptyElements[i]);\n                if (!isNOU(detachableElement)) {\n                    detach(detachableElement);\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.styleCorrection = function (elm, wordPasteStyleConfig) {\n        var styleElement = elm.querySelectorAll('style');\n        var styles = [];\n        if (styleElement.length > 0) {\n            if (!isNOU(styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi))) {\n                styles = styleElement[0].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n            }\n            else if (styleElement.length > 1) {\n                styles = styleElement[1].innerHTML.match(/[\\S ]+\\s+{[\\s\\S]+?}/gi);\n            }\n            var styleClassObject_1 = !isNOU(styles) ? this.findStyleObject(styles) : null;\n            if (!isNOU(styleClassObject_1)) {\n                var keys = Object.keys(styleClassObject_1);\n                var values = keys.map(function (key) {\n                    return styleClassObject_1[\"\" + key];\n                });\n                values = this.removeUnwantedStyle(values, wordPasteStyleConfig);\n                this.filterStyles(elm, wordPasteStyleConfig);\n                var resultElem = void 0;\n                var fromClass = false;\n                var regex = /^(p|div|li)\\.(1|10|11)$/;\n                for (var i = 0; i < keys.length; i++) {\n                    if (keys[i].split('.')[0] === '') {\n                        resultElem = elm.getElementsByClassName(keys[i].split('.')[1]);\n                        fromClass = true;\n                    }\n                    else if ((keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') >= 0) || (regex.test(keys[i]))) {\n                        continue;\n                    }\n                    else if (keys[i].split('.').length === 1 && keys[i].split('.')[0].indexOf('@') < 0) {\n                        resultElem = elm.getElementsByTagName(keys[i]);\n                    }\n                    else {\n                        resultElem = elm.querySelectorAll(keys[i]);\n                    }\n                    for (var j = 0; j < resultElem.length; j++) {\n                        if (resultElem[j].closest('li') && keys[i] === 'p') {\n                            continue;\n                        }\n                        var styleProperty = resultElem[j].getAttribute('style');\n                        if (!isNOU(styleProperty) && styleProperty.trim() !== '') {\n                            var valueSplit = values[i].split(';');\n                            for (var q = 0; q < valueSplit.length; q++) {\n                                if (valueSplit[q].split(':')[0] === 'border' && valueSplit[q].split(':')[1] === 'none') {\n                                    valueSplit.splice(q, 1);\n                                    q--;\n                                }\n                            }\n                            if (!fromClass) {\n                                for (var k = 0; k < valueSplit.length; k++) {\n                                    var propertyName = valueSplit[k].split(':')[0];\n                                    if (styleProperty.includes(propertyName + ':')) {\n                                        valueSplit.splice(k, 1);\n                                        k--;\n                                    }\n                                }\n                            }\n                            var changedValue = valueSplit.join(';') + ';' + styleProperty;\n                            resultElem[j].setAttribute('style', changedValue);\n                        }\n                        else {\n                            values[i] = values[i].replace(/text-indent:-(.*?)(?=;|$)/gm, '');\n                            resultElem[j].setAttribute('style', values[i]);\n                        }\n                    }\n                    fromClass = false;\n                }\n                var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n                for (var i = 0; i < listClass.length; i++) {\n                    if (keys.indexOf('li.' + listClass[i]) > -1) {\n                        var olULElems = elm.querySelectorAll('ol.' + listClass[i] + ', ul.' + listClass[i]);\n                        for (var j = 0; j < olULElems.length; j++) {\n                            var styleProperty = olULElems[j].getAttribute('style');\n                            if (!isNOU(styleProperty) && styleProperty.trim() !== '' && olULElems[j].style.marginLeft !== '') {\n                                var valueSplit = values[keys.indexOf('li.' + listClass[i])].split(';');\n                                for (var k = 0; k < valueSplit.length; k++) {\n                                    if ('margin-left'.indexOf(valueSplit[k].split(':')[0]) >= 0) {\n                                        if (!isNOU(valueSplit[k].split(':')[1]) &&\n                                            valueSplit[k].split(':')[1].indexOf('in') >= 0 &&\n                                            olULElems[j].style.marginLeft.indexOf('in') >= 0) {\n                                            var classStyle = parseFloat(valueSplit[k].split(':')[1].split('in')[0]);\n                                            var inlineStyle = parseFloat(olULElems[j].style.marginLeft.split('in')[0]);\n                                            olULElems[j].style.marginLeft = (inlineStyle - classStyle) + 'in';\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.filterStyles = function (elm, wordPasteStyleConfig) {\n        var elmWithStyles = elm.querySelectorAll('*[style]');\n        for (var i = 0; i < elmWithStyles.length; i++) {\n            var elemStyleProperty = elmWithStyles[i].getAttribute('style').split(';');\n            var styleValue = '';\n            for (var j = 0; j < elemStyleProperty.length; j++) {\n                if (wordPasteStyleConfig.indexOf(elemStyleProperty[j].split(':')[0].trim()) >= 0) {\n                    styleValue += elemStyleProperty[j] + ';';\n                }\n            }\n            elmWithStyles[i].setAttribute('style', styleValue);\n        }\n    };\n    MsWordPaste.prototype.removeUnwantedStyle = function (values, wordPasteStyleConfig) {\n        for (var i = 0; i < values.length; i++) {\n            var styleValues = values[i].split(';');\n            values[i] = '';\n            for (var j = 0; j < styleValues.length; j++) {\n                if (wordPasteStyleConfig.indexOf(styleValues[j].split(':')[0]) >= 0) {\n                    values[i] += styleValues[j] + ';';\n                }\n            }\n        }\n        return values;\n    };\n    MsWordPaste.prototype.findStyleObject = function (styles) {\n        var styleClassObject = {};\n        for (var i = 0; i < styles.length; i++) {\n            var tempStyle = styles[i];\n            var classNameCollection = tempStyle.replace(/([\\S ]+\\s+){[\\s\\S]+?}/gi, '$1');\n            var stylesCollection = tempStyle.replace(/[\\S ]+\\s+{([\\s\\S]+?)}/gi, '$1');\n            classNameCollection = classNameCollection.replace(/^[\\s]|[\\s]$/gm, '');\n            stylesCollection = stylesCollection.replace(/^[\\s]|[\\s]$/gm, '');\n            classNameCollection = classNameCollection.replace(/\\n|\\r|\\n\\r/g, '');\n            stylesCollection = stylesCollection.replace(/\\n|\\r|\\n\\r/g, '');\n            for (var classNames = classNameCollection.split(', '), j = 0; j < classNames.length; j++) {\n                styleClassObject[classNames[j]] = stylesCollection;\n            }\n        }\n        return styleClassObject;\n    };\n    MsWordPaste.prototype.removingComments = function (elm) {\n        var innerElement = elm.innerHTML;\n        innerElement = innerElement.replace(/<!--[\\s\\S]*?-->/g, '');\n        elm.innerHTML = innerElement;\n    };\n    MsWordPaste.prototype.cleanUp = function (node, listNodes) {\n        var tempCleaner = [];\n        var prevflagState;\n        var allNodes = node.querySelectorAll('*');\n        for (var index = 0; index < allNodes.length; index++) {\n            if (this.ignorableNodes.indexOf(allNodes[index].nodeName) === -1 ||\n                (allNodes[index].nodeType === 3 && allNodes[index].textContent.trim() === '')) {\n                tempCleaner.push(allNodes[index]);\n                continue;\n            }\n            else if (allNodes[index].className &&\n                allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 &&\n                !isNOU(allNodes[index].getAttribute('style')) &&\n                allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n                if (allNodes[index].className.indexOf('MsoListParagraphCxSpFirst') >= 0 && listNodes.length > 0 &&\n                    listNodes[listNodes.length - 1] !== null) {\n                    listNodes.push(null);\n                }\n                listNodes.push(allNodes[index]);\n            }\n            if (prevflagState && (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) &&\n                !(allNodes[index].className &&\n                    allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) &&\n                    allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0)) {\n                listNodes.push(null);\n            }\n            if (this.blockNode.indexOf(allNodes[index].nodeName.toLowerCase()) !== -1) {\n                if (allNodes[index].className &&\n                    allNodes[index].className.toLowerCase().indexOf('msolistparagraph') !== -1 && !isNOU(allNodes[index].getAttribute('style')) &&\n                    allNodes[index].getAttribute('style').indexOf('mso-list:') >= 0) {\n                    prevflagState = true;\n                }\n                else {\n                    prevflagState = false;\n                }\n            }\n        }\n        if (listNodes.length && (listNodes[listNodes.length - 1] !== null)) {\n            listNodes.push(null);\n        }\n        return listNodes;\n    };\n    MsWordPaste.prototype.listConverter = function (listNodes) {\n        var level;\n        var data = [];\n        var listFormatOverride;\n        var collection = [];\n        var content = '';\n        var stNode;\n        var currentListStyle = '';\n        for (var i = 0; i < listNodes.length; i++) {\n            if (listNodes[i] === null) {\n                data.push({ content: this.makeConversion(collection), node: listNodes[i - 1] });\n                collection = [];\n                continue;\n            }\n            if (listNodes[i].getAttribute('style') && listNodes[i].getAttribute('style').indexOf('mso-outline-level') !== -1) {\n                listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('mso-outline-level', 'mso-outline'));\n            }\n            content = listNodes[i].getAttribute('style');\n            if (content && content.indexOf('level') !== -1) {\n                // eslint-disable-next-line\n                level = parseInt(content.charAt(content.indexOf('level') + 5), null);\n            }\n            else {\n                level = 1;\n            }\n            if (content && content.indexOf('mso-list:') !== -1) {\n                var msoListValue = void 0;\n                if (content.match(/mso-list:[^;]+;?/)) {\n                    var changedContent = content.replace(new RegExp('\\\\n', 'g'), '').split(' ').join('');\n                    msoListValue = changedContent.match(/mso-list:[^;]+;?/)[0].split(':l');\n                    listFormatOverride = isNOU(msoListValue) ? null : parseInt(msoListValue[1].split('level')[0], 10);\n                }\n                else {\n                    listFormatOverride = null;\n                }\n            }\n            this.listContents = [];\n            this.getListContent(listNodes[i]);\n            var type = void 0;\n            var listStyleType = void 0;\n            var startAttr = void 0;\n            var styleMarginLeft = void 0;\n            if (!isNOU(this.listContents[0])) {\n                type = this.listContents[0].trim().length > 1 ? 'ol' : 'ul';\n                listStyleType = this.getlistStyleType(this.listContents[0], type);\n                if (type === 'ol' && (i === 0 || listNodes[i - 1] === null)) {\n                    var startString = this.listContents[0].split('.')[0];\n                    var listTypes = ['A', 'a', 'I', 'i', 'α', '1', '01', '1-']; // Add '1-' for rare list type.\n                    if (listTypes.indexOf(startString) === -1) {\n                        if (listStyleType === 'decimal') {\n                            // Bug in getlistStyleType() list style stype is returned as decimal for nested list with start attribute\n                            if (!isNaN(parseInt(startString, 10))) {\n                                startAttr = parseInt(startString, 10);\n                            }\n                        }\n                        else if (listStyleType === 'decimal-leading-zero') {\n                            if (!isNaN(parseInt(startString, 10))) {\n                                startAttr = parseInt(startString, 10);\n                            }\n                        }\n                        else if (listStyleType === 'upper-alpha') {\n                            startAttr = (startString.split('.')[0].charCodeAt(0) - 64);\n                        }\n                        else if (listStyleType === 'lower-alpha') {\n                            startAttr = (startString.split('.')[0].charCodeAt(0) - 96);\n                        }\n                        else if (listStyleType === 'upper-roman') {\n                            startAttr = this.upperRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n                        }\n                        else if (listStyleType === 'lower-roman') {\n                            startAttr = this.lowerRomanNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n                        }\n                        else if (listStyleType === 'lower-greek') {\n                            startAttr = this.lowerGreekNumber.indexOf(this.listContents[0].split('.')[0]) + 1;\n                        }\n                    }\n                }\n                if (listNodes[i].style.marginLeft !== '') {\n                    styleMarginLeft = listNodes[i].style.marginLeft;\n                }\n                var tempNode = [];\n                for (var j = 1; j < this.listContents.length; j++) {\n                    tempNode.push(this.listContents[j]);\n                }\n                var currentClassName = void 0;\n                if (!isNOU(listNodes[i].className)) {\n                    currentClassName = listNodes[i].className;\n                }\n                if (!isNOU(listNodes[i].getAttribute('style'))) {\n                    listNodes[i].setAttribute('style', listNodes[i].getAttribute('style').replace('text-align:start;', ''));\n                    listNodes[i].style.textIndent = '';\n                    currentListStyle = listNodes[i].getAttribute('style');\n                }\n                collection.push({\n                    listType: type, content: tempNode, nestedLevel: level,\n                    listFormatOverride: listFormatOverride, class: currentClassName,\n                    listStyle: currentListStyle, listStyleTypeName: listStyleType, start: startAttr, styleMarginLeft: styleMarginLeft\n                });\n            }\n        }\n        stNode = listNodes.shift();\n        while (stNode) {\n            var elemColl = [];\n            for (var temp1 = 0; temp1 < data.length; temp1++) {\n                if (data[temp1].node === stNode) {\n                    for (var index = 0; index < data[temp1].content.childNodes.length; index++) {\n                        elemColl.push(data[temp1].content.childNodes[index]);\n                    }\n                    for (var index = 0; index < elemColl.length; index++) {\n                        stNode.parentElement.insertBefore(elemColl[index], stNode);\n                    }\n                    break;\n                }\n            }\n            stNode.remove();\n            stNode = listNodes.shift();\n            if (!stNode) {\n                stNode = listNodes.shift();\n            }\n        }\n    };\n    MsWordPaste.prototype.getlistStyleType = function (listContent, type) {\n        var currentListClass;\n        if (type === 'ol') {\n            var charCode = listContent.split('.')[0].charCodeAt(0);\n            switch (true) {\n                case this.upperRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n                    currentListClass = 'upper-roman';\n                    break;\n                case this.lowerRomanNumber.indexOf(listContent.split('.')[0]) > -1:\n                    currentListClass = 'lower-roman';\n                    break;\n                case this.lowerGreekNumber.indexOf(listContent.split('.')[0]) > -1:\n                    currentListClass = 'lower-greek';\n                    break;\n                case (charCode > 64 && charCode < 91):\n                    currentListClass = 'upper-alpha';\n                    break;\n                case (charCode > 96 && charCode < 123):\n                    currentListClass = 'lower-alpha';\n                    break;\n                case (listContent.split('.')[0].length > 1 && listContent.split('.')[0][0] === '0' && !isNaN(Number(listContent.split('.')[0]))):\n                    currentListClass = 'decimal-leading-zero';\n                    break;\n                default:\n                    currentListClass = 'decimal';\n                    break;\n            }\n        }\n        else {\n            switch (listContent.split('.')[0]) {\n                case 'o':\n                    currentListClass = 'circle';\n                    break;\n                case '§':\n                    currentListClass = 'square';\n                    break;\n                default:\n                    currentListClass = 'disc';\n                    break;\n            }\n        }\n        return currentListClass;\n    };\n    MsWordPaste.prototype.makeConversion = function (collection) {\n        var root = createElement('div');\n        var temp;\n        var pLevel = 1;\n        var prevList;\n        var listCount = 0;\n        var elem;\n        var lfo = collection[0].listFormatOverride;\n        for (var index = 0; index < collection.length; index++) {\n            var listClass = ['MsoListParagraphCxSpFirst', 'MsoListParagraphCxSpMiddle', 'MsoListParagraphCxSpLast'];\n            var isNormalList = false;\n            for (var i = 0; i < listClass.length; i++) {\n                if (listClass[i].indexOf(collection[index].class) >= 0) {\n                    isNormalList = true;\n                    break;\n                }\n            }\n            if (!isNOU(prevList) && index !== 0 &&\n                collection[index - 1].listType !== collection[index].listType &&\n                !isNormalList) {\n                prevList = null;\n            }\n            var pElement = createElement('p', { className: 'MsoNoSpacing' });\n            pElement.innerHTML = collection[index].content.join(' ');\n            if ((collection[index].nestedLevel === 1) &&\n                (listCount === 0 || lfo !== collection[index].listFormatOverride) &&\n                collection[index].content) {\n                root.appendChild(temp = createElement(collection[index].listType, { className: collection[index].class }));\n                prevList = createElement('li');\n                prevList.appendChild(pElement);\n                temp.appendChild(prevList);\n                temp.setAttribute('level', collection[index].nestedLevel.toString());\n                if (collection[index].class !== 'msolistparagraph') {\n                    temp.style.marginLeft = collection[index].styleMarginLeft;\n                }\n                else {\n                    addClass([temp], 'marginLeftIgnore');\n                }\n                temp.style.listStyleType = collection[index].listStyleTypeName;\n            }\n            else if (collection[index].nestedLevel === pLevel &&\n                lfo === collection[index].listFormatOverride) {\n                if (!isNOU(prevList) && !isNOU(prevList.parentElement)\n                    && prevList.parentElement.tagName.toLowerCase() === collection[index].listType) {\n                    prevList.parentElement.appendChild(prevList = createElement('li'));\n                    prevList.appendChild(pElement);\n                }\n                else if (isNOU(prevList)) {\n                    temp = createElement(collection[index].listType);\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                    prevList = createElement('li');\n                    prevList.appendChild(pElement);\n                    temp.appendChild(prevList);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                    root.appendChild(temp);\n                }\n                else {\n                    temp = createElement(collection[index].listType);\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                    prevList.parentElement.parentElement.appendChild(temp);\n                    prevList = createElement('li');\n                    prevList.appendChild(pElement);\n                    temp.appendChild(prevList);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                }\n            }\n            else if (collection[index].nestedLevel > pLevel) {\n                if (!isNOU(prevList)) {\n                    for (var j = 0; j < collection[index].nestedLevel - pLevel; j++) {\n                        prevList.appendChild(temp = createElement(collection[index].listType));\n                        prevList = createElement('li');\n                        if (j !== collection[index].nestedLevel - pLevel - 1 &&\n                            collection[index].nestedLevel - pLevel > 1) {\n                            prevList.style.listStyleType = 'none';\n                        }\n                        temp.appendChild(prevList);\n                    }\n                    prevList.appendChild(pElement);\n                    temp.setAttribute('level', collection[index].nestedLevel.toString());\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                }\n                else {\n                    if (collection[index].nestedLevel > pLevel && isNormalList) {\n                        var initialNode = createElement(collection[index].listType);\n                        prevList = createElement('li');\n                        initialNode.appendChild(prevList);\n                        initialNode.style.listStyleType = 'none';\n                        for (var j = 0; j < collection[index].nestedLevel - 1; j++) {\n                            prevList.appendChild(temp = createElement(collection[index].listType));\n                            prevList = createElement('li');\n                            temp.appendChild(prevList);\n                            temp.style.listStyleType = 'none';\n                        }\n                        prevList.appendChild(pElement);\n                        root.appendChild(initialNode);\n                        temp.setAttribute('level', collection[index].nestedLevel.toString());\n                        temp.style.listStyleType = collection[index].listStyleTypeName;\n                    }\n                    else {\n                        root.appendChild(temp = createElement(collection[index].listType));\n                        prevList = createElement('li');\n                        prevList.appendChild(pElement);\n                        temp.appendChild(prevList);\n                        temp.setAttribute('level', collection[index].nestedLevel.toString());\n                        if (collection[index].class !== 'msolistparagraph') {\n                            temp.style.marginLeft = collection[index].styleMarginLeft;\n                        }\n                        else {\n                            addClass([temp], 'marginLeftIgnore');\n                        }\n                        temp.style.listStyleType = collection[index].listStyleTypeName;\n                    }\n                }\n            }\n            else if (collection[index].nestedLevel === 1) {\n                if (root.lastChild.tagName.toLowerCase() === collection[index].listType) {\n                    temp = root.lastChild;\n                }\n                else {\n                    root.appendChild(temp = createElement(collection[index].listType));\n                    temp.style.listStyleType = collection[index].listStyleTypeName;\n                }\n                prevList = createElement('li');\n                prevList.appendChild(pElement);\n                temp.appendChild(prevList);\n                temp.setAttribute('level', collection[index].nestedLevel.toString());\n            }\n            else {\n                elem = prevList;\n                while (elem.parentElement) {\n                    elem = elem.parentElement;\n                    if (elem.attributes.getNamedItem('level')) {\n                        if (parseInt(elem.attributes.getNamedItem('level').textContent, 10) === collection[index].nestedLevel &&\n                            lfo === collection[index].listFormatOverride) {\n                            prevList = createElement('li');\n                            prevList.appendChild(pElement);\n                            elem.appendChild(prevList);\n                            break;\n                            // eslint-disable-next-line\n                        }\n                        else if (parseInt(elem.attributes.getNamedItem('level').textContent, null) === collection[index].nestedLevel &&\n                            lfo !== collection[index].listFormatOverride) {\n                            temp = createElement(collection[index].listType);\n                            prevList = createElement('li');\n                            temp.appendChild(prevList);\n                            if (collection[index].nestedLevel > 1) {\n                                for (var k = 0; k < collection[index].nestedLevel - 1; k++) {\n                                    prevList.appendChild(temp = createElement(collection[index].listType));\n                                    prevList = createElement('li');\n                                    temp.appendChild(prevList);\n                                    temp.style.listStyleType = 'none';\n                                }\n                            }\n                            prevList.appendChild(pElement);\n                            elem.appendChild(temp);\n                            temp.setAttribute('level', collection[index].nestedLevel.toString());\n                            temp.style.listStyleType = collection[index].listStyleTypeName;\n                            break;\n                        }\n                        else if (collection[index].nestedLevel > parseInt(elem.attributes.getNamedItem('level').textContent, 10)) {\n                            elem.appendChild(temp = createElement(collection[index].listType));\n                            prevList = createElement('li');\n                            prevList.appendChild(pElement);\n                            temp.appendChild(prevList);\n                            temp.setAttribute('level', collection[index].nestedLevel.toString());\n                            temp.style.listStyleType = collection[index].listStyleTypeName;\n                            break;\n                        }\n                    }\n                    continue;\n                }\n            }\n            prevList.setAttribute('class', collection[index].class);\n            prevList.setAttribute('style', (!isNOU(collection[index].listStyle) ? collection[index].listStyle : ''));\n            pLevel = collection[index].nestedLevel;\n            lfo = collection[index].listFormatOverride;\n            listCount++;\n            if (!isNOU(collection[index].start && collection[index].start !== 1 && collection[index].listType === 'ol')) {\n                temp.setAttribute('start', collection[index].start.toString());\n            }\n        }\n        return root;\n    };\n    MsWordPaste.prototype.getListContent = function (elem) {\n        var pushContent = '';\n        var firstChild = elem.firstElementChild;\n        if (firstChild.textContent.trim() === '' && !isNOU(firstChild.firstElementChild) &&\n            firstChild.firstElementChild.nodeName === 'IMG') {\n            pushContent = elem.innerHTML.trim();\n            this.listContents.push('');\n            this.listContents.push(pushContent);\n        }\n        else {\n            //Add to support separate list which looks like same list and also to add all tags as it is inside list\n            if (firstChild.childNodes.length > 0) {\n                var listIgnoreTag = firstChild.querySelectorAll('[style*=\"mso-list\"]');\n                for (var i = 0; i < listIgnoreTag.length; i++) {\n                    listIgnoreTag[i].setAttribute('style', listIgnoreTag[i].getAttribute('style').replace(/\\n/g, ''));\n                }\n                var listOrderCleanup = firstChild.querySelector('span[style*=\"mso-list\"]');\n                if (listOrderCleanup) {\n                    var style = listOrderCleanup.getAttribute('style');\n                    if (style) {\n                        style = style.replace(/\\s*:\\s*/g, ':');\n                        listOrderCleanup.setAttribute('style', style);\n                    }\n                }\n                var listOrder = firstChild.querySelector('span[style=\"mso-list:Ignore\"]');\n                var isEmptyMarkerSpan = isNOU(listOrder);\n                listOrder = isEmptyMarkerSpan ? firstChild : listOrder;\n                if (!isNOU(listOrder)) {\n                    var textContent = listOrder.textContent.trim();\n                    if (isEmptyMarkerSpan) {\n                        var bulletPattern = /^(\\d{1,2}|[a-zA-Z]|[*#~•○■])(\\.|\\)|-)\\s*/;\n                        var textContentMatch = textContent.match(bulletPattern);\n                        if (!isNOU(textContentMatch)) {\n                            textContent = textContentMatch[0].trim();\n                            listOrder.textContent = listOrder.textContent.trim().substring(textContent.length).trim();\n                        }\n                    }\n                    this.listContents.push(textContent);\n                    if (!isEmptyMarkerSpan) {\n                        detach(listOrder);\n                    }\n                    this.removingComments(elem);\n                    this.removeUnwantedElements(elem);\n                }\n            }\n        }\n        this.listContents.push(elem.innerHTML);\n    };\n    MsWordPaste.prototype.processMargin = function (element) {\n        var liChildren = element.querySelectorAll('li');\n        if (liChildren.length > 0) {\n            for (var i = 0; i < liChildren.length; i++) {\n                if (!isNOU((liChildren[i]).style.marginLeft) && !liChildren[i].parentElement.classList.contains('marginLeftIgnore')) {\n                    (liChildren[i]).style.marginLeft = '';\n                }\n            }\n        }\n        var tableChildren = element.querySelectorAll('table');\n        if (tableChildren.length > 0) {\n            for (var i = 0; i < tableChildren.length; i++) {\n                if (!isNOU((tableChildren[i]).style.marginLeft) &&\n                    (tableChildren[i]).style.marginLeft.indexOf('-') >= 0) {\n                    (tableChildren[i]).style.marginLeft = '';\n                }\n            }\n        }\n        var ignoredNode = element.querySelectorAll('.marginLeftIgnore li');\n        if (ignoredNode.length > 0) {\n            for (var i = 0; i < ignoredNode.length; i++) {\n                if (!isNOU((ignoredNode[i]).style.marginLeft) && (ignoredNode[i]).style.marginLeft !== '') {\n                    var marginLeft = (ignoredNode[i]).style.marginLeft;\n                    var marginLeftValue = parseFloat(marginLeft.split('in')[0]);\n                    var result = marginLeftValue - 0.5;\n                    (ignoredNode[i]).style.marginLeft = result.toString() + 'in';\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.removeEmptyAnchorTag = function (element) {\n        var removableElement = element.querySelectorAll('a:not([href])');\n        for (var j = removableElement.length - 1; j >= 0; j--) {\n            var parentElem = removableElement[j].parentNode;\n            while (removableElement[j].firstChild) {\n                parentElem.insertBefore(removableElement[j].firstChild, removableElement[j]);\n            }\n            parentElem.removeChild(removableElement[j]);\n        }\n    };\n    MsWordPaste.prototype.findSource = function (element) {\n        var metaNodes = element.querySelectorAll('meta');\n        for (var i = 0; i < metaNodes.length; i++) {\n            var metaNode = metaNodes[i];\n            var content = metaNode.getAttribute('content');\n            var name_1 = metaNode.getAttribute('name');\n            if (name_1 && name_1.toLowerCase().indexOf('generator') >= 0 && content && content.toLowerCase().indexOf('microsoft') >= 0) {\n                for (var j = 0; j < PASTE_SOURCE.length; j++) {\n                    if (content.toLowerCase().indexOf(PASTE_SOURCE[j]) >= 0) {\n                        return PASTE_SOURCE[j];\n                    }\n                }\n            }\n        }\n        return 'html';\n    };\n    MsWordPaste.prototype.handleOneNoteContent = function (element) {\n        var allListElements = element.querySelectorAll('ul, ol');\n        if (allListElements.length > 0) {\n            for (var i = 0; i < allListElements.length; i++) {\n                // Removing the ul and ol parent node for the p tag\n                var currentList = allListElements[i];\n                if (currentList.querySelectorAll('li').length === 0 && currentList.childNodes.length > 0) {\n                    InsertMethods.unwrap(currentList);\n                }\n            }\n        }\n    };\n    MsWordPaste.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MsWordPaste;\n}());\nexport { MsWordPaste };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}