{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\n/** @hidden */\nvar CriticalPath = /** @class */function () {\n  function CriticalPath(parent) {\n    this.validatedids = [];\n    this.resourceCollectionIds = [];\n    this.criticalTasks = [];\n    this.parent = parent;\n  }\n  CriticalPath.prototype.getCriticalTasks = function () {\n    return this.criticalTasks;\n  };\n  CriticalPath.prototype.showCriticalPath = function (isCritical) {\n    var modelIds = this.parent.ids;\n    var totalRecords = this.parent.flatData;\n    if (isCritical && this.parent.flatData.length > 0) {\n      this.parent.enableCriticalPath = true;\n      var parentRecords = this.parent.treeGrid.parentData;\n      var checkEndDate = parentRecords[0].ganttProperties.endDate;\n      var dateDifference = 0;\n      /* eslint-disable-next-line */\n      var checkBeyondEnddate_1 = [];\n      var totalPredecessorsCollection = [];\n      var totalPredecessorsCollectionId = [];\n      var predecessorIndex = 0;\n      var taskBeyondEnddate = [];\n      var predecessorTaskBeyondEnddate = [];\n      var collection = [];\n      var collectionTaskId = [];\n      var fromDataObject = [];\n      var criticalPathIds = [];\n      this.criticalTasks = [];\n      /* eslint-disable-next-line */\n      if (parentRecords[0].ganttProperties.autoEndDate > parentRecords[0].ganttProperties.endDate && !parentRecords[0].ganttProperties.isAutoSchedule) {\n        checkEndDate = parentRecords[0].ganttProperties.autoEndDate;\n      }\n      // Find the total project endDate\n      for (var i = 1; i < parentRecords.length; i++) {\n        if (parentRecords[i].ganttProperties.endDate >= checkEndDate) {\n          checkEndDate = parentRecords[i].ganttProperties.endDate;\n        }\n        if (!parentRecords[i].ganttProperties.isAutoSchedule) {\n          if (parentRecords[i].ganttProperties.autoEndDate >= checkEndDate) {\n            checkEndDate = parentRecords[i].ganttProperties.autoEndDate;\n          }\n        }\n      }\n      this.maxEndDate = checkEndDate;\n      // find the tasks that ends on total project end date that stored in checkBeyondEnddate\n      // find the tasks with predecessor that stored in totalPredecessorsCollectionId.\n      for (var j = 0; j < totalRecords.length; j++) {\n        totalRecords[j].isCritical = false;\n        totalRecords[j].ganttProperties.isCritical = false;\n        /* eslint-disable-next-line */\n        dateDifference = this.parent.dataOperation.getDuration(totalRecords[j].ganttProperties.endDate, checkEndDate, totalRecords[j].ganttProperties.durationUnit, totalRecords[j].ganttProperties.isAutoSchedule, totalRecords[j].ganttProperties.isMilestone);\n        totalRecords[j].slack = dateDifference + ' ' + totalRecords[j].ganttProperties.durationUnit;\n        totalRecords[j].ganttProperties.slack = dateDifference + ' ' + totalRecords[j].ganttProperties.durationUnit;\n        if (totalRecords[j].ganttProperties.endDate >= checkEndDate) {\n          checkBeyondEnddate_1.push(totalRecords[j].ganttProperties.taskId);\n        }\n        if (totalRecords[j].ganttProperties.predecessor) {\n          if (totalRecords[j].ganttProperties.predecessor.length !== 0) {\n            totalPredecessorsCollection.push(totalRecords[j]);\n            totalPredecessorsCollectionId.push(totalRecords[j].ganttProperties.taskId);\n          }\n        }\n      }\n      if (this.parent.viewType === 'ResourceView') {\n        for (var i = 0; i < this.parent.taskIds.length; i++) {\n          this.resourceCollectionIds[i] = this.parent.taskIds[i].slice(1);\n        }\n      }\n      var _loop_1 = function (k) {\n        if (totalPredecessorsCollectionId.indexOf(checkBeyondEnddate_1[k]) === -1) {\n          if (this_1.parent.viewType === 'ProjectView') {\n            predecessorIndex = modelIds.indexOf(checkBeyondEnddate_1[k].toString());\n          } else {\n            var currentRecords = this_1.parent.currentViewData.filter(function (data) {\n              return parseInt(data.ganttProperties.taskId, 10) === checkBeyondEnddate_1[k];\n            });\n            for (var i = 0; i < currentRecords.length; i++) {\n              if (!currentRecords[i].hasChildRecords && currentRecords[i].ganttProperties.endDate >= this_1.maxEndDate) {\n                predecessorIndex = currentRecords[i].index;\n              }\n            }\n          }\n          if (totalRecords[predecessorIndex].ganttProperties.progress < 100) {\n            totalRecords[predecessorIndex].isCritical = true;\n            totalRecords[predecessorIndex].ganttProperties.isCritical = true;\n          }\n          totalRecords[predecessorIndex]['slack'] = 0 + ' ' + totalRecords[predecessorIndex].ganttProperties.durationUnit;\n          taskBeyondEnddate.push(checkBeyondEnddate_1[k]);\n        } else {\n          predecessorTaskBeyondEnddate.push(checkBeyondEnddate_1[k]);\n        }\n      };\n      var this_1 = this;\n      // seperate the predecessor connected taskes from the individual taskes that ends on total project end date\n      for (var k = 0; k < checkBeyondEnddate_1.length; k++) {\n        _loop_1(k);\n      }\n      var predecessorLength = totalPredecessorsCollection.length;\n      var endTask = [];\n      // find the detail collection of predecessor for each taskes that stored in collection.\n      for (var x = 0; x < predecessorLength; x++) {\n        var to = -1;\n        var from = -1;\n        var toPredecessor = -1;\n        var fromPredecessor = -1;\n        var tempTaskId = void 0;\n        var currentIndex = x;\n        var predecessor = totalPredecessorsCollection[x].ganttProperties.predecessor;\n        var individualPredecessorLength = totalPredecessorsCollection[x].ganttProperties.predecessor.length;\n        /* eslint-disable-next-line */\n        var taskid = totalPredecessorsCollection[x].ganttProperties.taskId;\n        for (var y = 0; y < individualPredecessorLength; y++) {\n          if (!isNaN(Number(predecessor[y].from)) && typeof taskid !== 'string') {\n            tempTaskId = parseInt(predecessor[y].from, 10);\n          } else if (!isNaN(Number(predecessor[y].from)) && typeof taskid === 'string') {\n            tempTaskId = predecessor[y].from;\n          } else {\n            tempTaskId = predecessor[y].from;\n          }\n          if (tempTaskId === taskid) {\n            if (to === -1) {\n              if (!predecessor[y].offset) {\n                to = predecessor[y].to;\n                toPredecessor = predecessor[y].type;\n              } else {\n                to = predecessor[y].to + ':' + predecessor[y].offset + predecessor[y].offsetUnit;\n                toPredecessor = predecessor[y].type;\n              }\n            } else {\n              if (!predecessor[y].offset) {\n                to = to + ',' + predecessor[y].to;\n                toPredecessor = toPredecessor + ',' + predecessor[y].type;\n              } else {\n                to = to + ',' + predecessor[y].to + ':' + predecessor[y].offset + predecessor[y].offsetUnit;\n                toPredecessor = toPredecessor + ',' + predecessor[y].type;\n              }\n            }\n          }\n          if (!isNaN(Number(predecessor[y].to)) && typeof taskid !== 'string') {\n            tempTaskId = parseInt(predecessor[y].to, 10);\n          } else if (!isNaN(Number(predecessor[y].to)) && typeof taskid === 'string') {\n            tempTaskId = predecessor[y].to;\n          } else {\n            tempTaskId = predecessor[y].to;\n          }\n          if (tempTaskId === taskid) {\n            if (from === -1) {\n              if (!predecessor[y].offset) {\n                from = predecessor[y].from;\n                fromPredecessor = predecessor[y].type;\n              } else {\n                from = predecessor[y].from + ':' + predecessor[y].offset + predecessor[y].offsetUnit;\n                fromPredecessor = predecessor[y].type;\n              }\n            } else {\n              if (!predecessor[y].offset) {\n                from = from + ',' + predecessor[y].from;\n                fromPredecessor = fromPredecessor + ',' + predecessor[y].type;\n              } else {\n                from = from + ',' + predecessor[y].from + ':' + predecessor[y].offset + predecessor[y].offsetUnit;\n                fromPredecessor = fromPredecessor + ',' + predecessor[y].type;\n              }\n            }\n          }\n        }\n        if (from === -1) {\n          from = null;\n          fromPredecessor = null;\n        }\n        if (to === -1) {\n          to = null;\n          toPredecessor = null;\n        }\n        /* eslint-disable-next-line */\n        collection.push({\n          from: from,\n          fromPredecessor: fromPredecessor,\n          taskid: taskid,\n          to: to,\n          toPredecessor: toPredecessor,\n          currentIndex: currentIndex,\n          slack: null,\n          enddate: null\n        });\n        collectionTaskId.push(taskid);\n      }\n      var collectionLength = collection.length;\n      var indexEnddate = 0;\n      var num = void 0;\n      // find the predecessors connected taskes that does not contains any successor.\n      for (var z = 0; z < collectionLength; z++) {\n        if (!collection[z]['to']) {\n          num = collection[z]['taskid'];\n          if (this.parent.viewType === 'ProjectView') {\n            indexEnddate = modelIds.indexOf(num.toString());\n          } else {\n            indexEnddate = this.resourceCollectionIds.indexOf(num.toString());\n          }\n          var flatData = totalRecords[indexEnddate].ganttProperties;\n          dateDifference = this.parent.dataOperation.getDuration(flatData.endDate, checkEndDate, 'minute', flatData.isAutoSchedule, flatData.isMilestone);\n          collection[z]['slack'] = dateDifference;\n          collection[z]['fs'] = -1;\n          collection[z]['enddate'] = flatData.endDate;\n          endTask.push({\n            fromdata: collection[z]['from'],\n            todateID: collection[z]['taskid'],\n            fromDataPredecessor: collection[z]['fromPredecessor']\n          });\n        }\n      }\n      for (var k = 0; k < endTask.length; k++) {\n        fromDataObject.push(endTask[k]);\n        this.slackCalculation(fromDataObject, collection, collectionTaskId, checkEndDate, totalRecords, modelIds);\n      }\n      criticalPathIds = this.finalCriticalPath(collection, taskBeyondEnddate, totalRecords, modelIds, checkEndDate);\n      this.validatedids = [];\n      this.criticalPathCollection = criticalPathIds;\n      this.detailPredecessorCollection = collection;\n      this.predecessorCollectionTaskIds = collectionTaskId;\n    }\n    if (isCritical === false && this.parent.flatData.length > 0) {\n      var pathIndex = void 0;\n      this.parent.enableCriticalPath = false;\n      for (var z = 0; z < this.criticalPathCollection.length; z++) {\n        pathIndex = modelIds.indexOf(this.criticalPathCollection[z].toString());\n        totalRecords[pathIndex].isCritical = false;\n      }\n      this.criticalPathCollection = [];\n      this.detailPredecessorCollection = [];\n      this.predecessorCollectionTaskIds = [];\n    }\n  };\n  /* eslint-disable-next-line */\n  CriticalPath.prototype.slackCalculation = function (fromDataObject, collection, collectionTaskId, checkEndDate, flatRecords, modelRecordIds) {\n    var _this = this;\n    var fromDateArray = fromDataObject[0]['fromdata'].split(',');\n    var fromDataPredecessor = fromDataObject[0]['fromDataPredecessor'].split(',');\n    collectionTaskId = collectionTaskId.toString();\n    collectionTaskId = collectionTaskId.split(',');\n    var fromDateArray1 = [];\n    var fromTaskIdIndex;\n    var indexFromTaskId;\n    var indexToTaskId;\n    var totaskId;\n    var dateDifference;\n    var prevTaskEnddate;\n    var offsetInMillSec;\n    var ffslack;\n    for (var i = 0; i < fromDateArray.length; i++) {\n      fromDateArray1 = fromDateArray[i].split(':');\n      fromTaskIdIndex = collectionTaskId.indexOf(fromDateArray1[0].toString());\n      totaskId = collectionTaskId.indexOf(fromDataObject[0]['todateID'].toString());\n      if (this.parent.viewType === 'ProjectView') {\n        indexFromTaskId = modelRecordIds.indexOf(fromDateArray1[0].toString());\n        indexToTaskId = modelRecordIds.indexOf(fromDataObject[0]['todateID'].toString());\n      } else {\n        indexFromTaskId = this.resourceCollectionIds.indexOf(fromDateArray1[0].toString());\n        indexToTaskId = this.resourceCollectionIds.indexOf(fromDataObject[0]['todateID'].toString());\n      }\n      var fromIdFlatData = void 0;\n      if (indexFromTaskId !== -1) {\n        fromIdFlatData = flatRecords[indexFromTaskId].ganttProperties;\n      }\n      var toIdFlatData = flatRecords[indexToTaskId].ganttProperties;\n      if (fromDateArray1.length > 1) {\n        if (fromDateArray1[1].indexOf('hour') !== -1) {\n          offsetInMillSec = parseFloat(fromDateArray1[1]) * 60;\n        } else if (fromDateArray1[1].indexOf('day') !== -1) {\n          offsetInMillSec = parseFloat(fromDateArray1[1]) * (this.parent.secondsPerDay / 3600) * 60;\n        } else {\n          offsetInMillSec = parseFloat(fromDateArray1[1]);\n        }\n      }\n      if (fromIdFlatData) {\n        // calculate slack value for the task contains predecessor connection in \"finish to start\".\n        if (fromDataPredecessor[i] === 'FS') {\n          if (fromIdFlatData.endDate > toIdFlatData.startDate) {\n            dateDifference = -this.parent.dataOperation.getDuration(toIdFlatData.startDate, fromIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n          } else {\n            dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.endDate, toIdFlatData.startDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n          }\n          // execute if the slack value is not set initially.\n          if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n            // execute if the offset value is not given.\n            if (fromDateArray1.length <= 1) {\n              if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                collection[fromTaskIdIndex]['slack'] = 0;\n              } else {\n                collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n              }\n            }\n          }\n          // execute if the current calculated slack value is less than the previous slack value.\n          else if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n            // execute if the offset value is not given.\n            if (fromDateArray1.length <= 1) {\n              if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                collection[fromTaskIdIndex]['slack'] = 0;\n              } else {\n                collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n              }\n            }\n          }\n          // execute if the offset value is given.\n          if (fromDateArray1.length > 1) {\n            collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n            collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - offsetInMillSec;\n            if (collection[fromTaskIdIndex]['slack'] <= 0) {\n              collection[fromTaskIdIndex]['slack'] = 0;\n            }\n          }\n          collection[fromTaskIdIndex]['fs'] = 1;\n          collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n          collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n          if (fromIdFlatData.endDate >= checkEndDate) {\n            collection[fromTaskIdIndex]['slack'] = 0;\n          }\n        }\n        //  calculate slack value for the task contains predecessor connection in \"start to start\".\n        if (fromDataPredecessor[i] === 'SS') {\n          // It execute if the task is in auto mode.\n          if (fromIdFlatData.isAutoSchedule) {\n            if (fromIdFlatData.startDate > toIdFlatData.startDate) {\n              dateDifference = -this.parent.dataOperation.getDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n            } else {\n              dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.startDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n            }\n            // It execute while the slack value is not set to the corresponding task.\n            if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n              if (fromDateArray1.length <= 1) {\n                if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                  collection[fromTaskIdIndex]['slack'] = 0;\n                } else {\n                  collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                }\n              }\n            }\n            //It execute while already the slack value is set and it is higher than the datedifference.\n            else if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n              if (fromDateArray1.length <= 1) {\n                if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                  collection[fromTaskIdIndex]['slack'] = 0;\n                } else {\n                  collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                }\n              }\n            }\n            // execute if the offset value is given.\n            if (fromDateArray1.length > 1) {\n              collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n              collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - offsetInMillSec;\n              if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                collection[fromTaskIdIndex]['slack'] = 0;\n              }\n            }\n            collection[fromTaskIdIndex]['fs'] = 1;\n            collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n            collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n          }\n          // It execute if the task is in not an auto mode task.\n          else if (!fromIdFlatData.isAutoSchedule) {\n            dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n            if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n              collection[fromTaskIdIndex]['slack'] = dateDifference;\n            } else if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n              collection[fromTaskIdIndex]['slack'] = dateDifference;\n            }\n          }\n          if (fromIdFlatData.endDate >= checkEndDate && fromIdFlatData.endDate <= checkEndDate) {\n            collection[fromTaskIdIndex]['slack'] = 0;\n          }\n        }\n        //  calculate slack value for the task contains predecessor connection in \"finish to finish\".\n        if (fromDataPredecessor[i] === 'FF') {\n          // execute if the previous task is from finish to start or finish to finish state.\n          if (collection[totaskId]['fs'] === 1 || collection[totaskId]['ff'] === 1 || collection[totaskId]['fs'] === -1) {\n            if (collection[totaskId]['fs'] === 1 || collection[totaskId]['ff'] === 1) {\n              prevTaskEnddate = toIdFlatData.endDate;\n              ffslack = collection[totaskId]['slack'];\n            }\n            if (collection[totaskId]['fs'] === -1) {\n              prevTaskEnddate = collection[totaskId]['enddate'];\n              ffslack = collection[totaskId]['slack'];\n            }\n            if (prevTaskEnddate > fromIdFlatData.endDate) {\n              dateDifference = -this.getSlackDuration(fromIdFlatData.endDate, prevTaskEnddate, 'minute', flatRecords[indexFromTaskId]);\n            } else {\n              dateDifference = this.getSlackDuration(prevTaskEnddate, fromIdFlatData.endDate, 'minute', flatRecords[indexFromTaskId]);\n            }\n            // set the slack value if the slack value is not set initially.\n            if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n              // execute if the offset value is not given.\n              if (fromDateArray1.length <= 1) {\n                if (ffslack - dateDifference < 0) {\n                  collection[fromTaskIdIndex]['slack'] = 0;\n                } else {\n                  collection[fromTaskIdIndex]['slack'] = ffslack - dateDifference;\n                }\n              }\n            }\n            // overright the slack value if the current calculated slack value is less than the previous slack value.\n            else if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n              // execute if the offset value is not given.\n              if (fromDateArray1.length <= 1) {\n                if (ffslack - dateDifference < 0) {\n                  collection[fromTaskIdIndex]['slack'] = 0;\n                } else {\n                  collection[fromTaskIdIndex]['slack'] = ffslack - dateDifference;\n                }\n              }\n            }\n            // execute if the offset value is given.\n            if (fromDateArray1.length > 1) {\n              collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] - dateDifference;\n              collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - offsetInMillSec;\n              if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                collection[fromTaskIdIndex]['slack'] = 0;\n              }\n            }\n            collection[fromTaskIdIndex]['ff'] = 1;\n            collection[fromTaskIdIndex]['enddate'] = prevTaskEnddate;\n            collection[fromTaskIdIndex]['fsslack'] = ffslack;\n          }\n          if (fromIdFlatData.endDate >= checkEndDate && fromIdFlatData.endDate <= checkEndDate) {\n            collection[fromTaskIdIndex]['slack'] = 0;\n          }\n        }\n        //  calculate slack value for the task contains predecessor connection in \"start to finish\".\n        if (fromDataPredecessor[i] === 'SF') {\n          //It execute if the task is an auto mode task.\n          if (fromIdFlatData.isAutoSchedule) {\n            //execute if the slack value is not set initially.\n            if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n              // execute if the offset value is not given.\n              if (fromDateArray1.length <= 1) {\n                // execute if the previous task does no has sucessor.\n                if (isNullOrUndefined(collection[totaskId]['to'])) {\n                  dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                  collection[fromTaskIdIndex]['slack'] = dateDifference;\n                }\n                // execute if the previous task has sucessor.\n                else if (!isNullOrUndefined(collection[totaskId]['to'])) {\n                  if (toIdFlatData.endDate > fromIdFlatData.startDate) {\n                    dateDifference = -this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                  } else {\n                    dateDifference = this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]);\n                  }\n                  if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                    collection[fromTaskIdIndex]['slack'] = 0;\n                  } else {\n                    collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                  }\n                }\n              }\n              // execute if the offset value is given.\n              else if (fromDateArray1.length > 1) {\n                if (toIdFlatData.endDate >= fromIdFlatData.endDate) {\n                  if (fromIdFlatData.startDate > toIdFlatData.endDate) {\n                    dateDifference = -this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]);\n                  } else {\n                    dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                  }\n                } else {\n                  dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                }\n                collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - offsetInMillSec;\n                if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                  collection[fromTaskIdIndex]['slack'] = 0;\n                }\n              }\n              collection[fromTaskIdIndex]['fs'] = 1;\n              collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n              collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n            } else {\n              if (fromDateArray1.length <= 1) {\n                if (isNullOrUndefined(collection[totaskId]['to'])) {\n                  dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                } else if (!isNullOrUndefined(collection[totaskId]['to'])) {\n                  if (toIdFlatData.endDate > fromIdFlatData.startDate) {\n                    dateDifference = -this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                  } else {\n                    dateDifference = this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]);\n                  }\n                }\n                // execute if the current calculated slack value is less than the previous slack value.\n                if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n                  if (isNullOrUndefined(collection[totaskId]['to'])) {\n                    collection[fromTaskIdIndex]['slack'] = dateDifference;\n                  } else if (!isNullOrUndefined(collection[totaskId]['to'])) {\n                    if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                      collection[fromTaskIdIndex]['slack'] = 0;\n                    } else {\n                      collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                    }\n                  }\n                }\n              } else if (fromDateArray1.length > 1) {\n                if (toIdFlatData.endDate > fromIdFlatData.endDate) {\n                  if (fromIdFlatData.startDate > toIdFlatData.endDate) {\n                    dateDifference = -this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]);\n                  } else {\n                    dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                  }\n                } else {\n                  dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                }\n                // execute if the current calculated slack value is less than the previous slack value.\n                if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n                  collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                  collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - offsetInMillSec;\n                  if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                    collection[fromTaskIdIndex]['slack'] = 0;\n                  }\n                }\n              }\n              collection[fromTaskIdIndex]['fs'] = 1;\n              collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n              collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n            }\n          }\n          //It execute if the task is an auto mode task.\n          else if (!fromIdFlatData.isAutoSchedule) {\n            dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n            if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n              collection[fromTaskIdIndex]['slack'] = dateDifference;\n            } else if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n              collection[fromTaskIdIndex]['slack'] = dateDifference;\n            }\n          }\n          if (fromIdFlatData.endDate >= checkEndDate && fromIdFlatData.endDate <= checkEndDate) {\n            collection[fromTaskIdIndex]['slack'] = 0;\n          }\n        }\n        if (collection[fromTaskIdIndex]['from']) {\n          fromDataObject.push({\n            fromdata: collection[fromTaskIdIndex]['from'],\n            todateID: collection[fromTaskIdIndex]['taskid'],\n            fromDataPredecessor: collection[fromTaskIdIndex]['fromPredecessor']\n          });\n        }\n      }\n    }\n    if (fromDataObject) {\n      fromDataObject.splice(0, 1);\n      if (fromDataObject.length > 0) {\n        fromDataObject.forEach(function (item) {\n          _this.slackCalculation([item], collection, collectionTaskId, checkEndDate, flatRecords, modelRecordIds);\n        });\n      }\n    }\n  };\n  CriticalPath.prototype.getSlackDuration = function (sDate, eDate, durationUnit, record) {\n    var startDate = this.parent.dateValidationModule.checkStartDate(new Date(sDate));\n    var endDate = this.parent.dateValidationModule.checkEndDate(new Date(eDate));\n    if (this.parent.dataOperation['getTimeDifference'](startDate, endDate, true) <= 0) {\n      return 0;\n    } else {\n      return this.parent.dataOperation.getDuration(startDate, endDate, durationUnit, record.ganttProperties.isAutoSchedule, true);\n    }\n  };\n  /* eslint-disable-next-line */\n  CriticalPath.prototype.updateCriticalTasks = function (record, criticalPathIds) {\n    for (var i = 0; i < record.ganttProperties.predecessor.length; i++) {\n      var fromRecord = void 0;\n      if (this.parent.viewType === 'ProjectView') {\n        fromRecord = this.parent.getRecordByID(record.ganttProperties.predecessor[i].from);\n      } else {\n        var resourceIndex = this.resourceCollectionIds.indexOf(record.ganttProperties.predecessor[i].from.toString());\n        fromRecord = this.parent.flatData[resourceIndex];\n      }\n      var durationDiff = void 0;\n      if (record.ganttProperties.endDate.getTime() >= this.maxEndDate.getTime()) {\n        record.ganttProperties.slack = record.slack = 0 + ' ' + record.ganttProperties.durationUnit;\n        if (record.ganttProperties.progress < 100) {\n          record.isCritical = true;\n          record.ganttProperties.isCritical = true;\n          if (criticalPathIds.indexOf(record.ganttProperties.taskId) === -1) {\n            criticalPathIds.push(record.ganttProperties.taskId);\n          }\n        }\n      }\n      if (fromRecord) {\n        if (record.ganttProperties.predecessor[i].type === 'FS') {\n          durationDiff = this.parent.dataOperation.getDuration(fromRecord.ganttProperties.endDate, record.ganttProperties.startDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n        } else if (record.ganttProperties.predecessor[i].type === 'SS') {\n          durationDiff = this.parent.dataOperation.getDuration(fromRecord.ganttProperties.startDate, record.ganttProperties.startDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n        } else if (record.ganttProperties.predecessor[i].type === 'FF') {\n          durationDiff = this.parent.dataOperation.getDuration(fromRecord.ganttProperties.endDate, record.ganttProperties.endDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n        } else if (record.ganttProperties.predecessor[i].type === 'SF') {\n          durationDiff = this.parent.dataOperation.getDuration(record.ganttProperties.endDate, fromRecord.ganttProperties.startDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n        }\n        if (durationDiff >= 0 && this.validatedids.indexOf(parseInt(fromRecord.ganttProperties.taskId, 10)) === -1 && fromRecord.ganttProperties.taskId !== record.ganttProperties.taskId) {\n          fromRecord.ganttProperties.slack = record.ganttProperties.slack;\n          fromRecord.slack = record.slack;\n          fromRecord.isCritical = record.ganttProperties.isCritical;\n          fromRecord.ganttProperties.isCritical = record.ganttProperties.isCritical;\n          if (criticalPathIds.indexOf(fromRecord.ganttProperties.taskId) === -1 && fromRecord.ganttProperties.isCritical && fromRecord.ganttProperties.progress < 100) {\n            criticalPathIds.push(fromRecord.ganttProperties.taskId);\n            this.validatedids.push(parseInt(fromRecord.ganttProperties.taskId, 10));\n            if (this.criticalTasks.indexOf(fromRecord) === -1) {\n              this.criticalTasks.push(fromRecord);\n            }\n          }\n          if (fromRecord.ganttProperties.predecessorsName) {\n            this.updateCriticalTasks(fromRecord, criticalPathIds);\n          }\n        }\n      }\n    }\n  };\n  /* eslint-disable-next-line */\n  CriticalPath.prototype.finalCriticalPath = function (collection, taskBeyondEnddate, flatRecords, modelRecordIds, checkEndDate) {\n    /* eslint-disable-next-line */\n    var criticalPathIds = [];\n    var index;\n    var predecessorFrom;\n    for (var x = collection.length - 1; x >= 0; x--) {\n      if (this.parent.viewType === 'ProjectView') {\n        index = modelRecordIds.indexOf(collection[x]['taskid'].toString());\n      } else {\n        index = this.resourceCollectionIds.indexOf(collection[x]['taskid'].toString());\n      }\n      var predecessorLength = flatRecords[index].ganttProperties.predecessor;\n      var noSlackValue = 0 + ' ' + flatRecords[index].ganttProperties.durationUnit;\n      if (predecessorLength && predecessorLength.length > 0) {\n        for (var i = predecessorLength.length - 1; i >= 0; i--) {\n          var toID = void 0;\n          if (this.parent.viewType === 'ProjectView') {\n            toID = this.parent.ids.indexOf(predecessorLength[i].to);\n          } else {\n            toID = this.resourceCollectionIds.indexOf(predecessorLength[i].to);\n          }\n          var dateDifference = void 0;\n          var currentData = flatRecords[index].ganttProperties;\n          if (toID !== -1) {\n            if (predecessorLength[i].type === 'FS') {\n              if (predecessorLength[i].to !== currentData.taskId.toString() || this.parent.viewType === 'ResourceView') {\n                /* eslint-disable-next-line */\n                dateDifference = this.parent.dataOperation.getDuration(currentData.endDate, flatRecords[toID].ganttProperties.startDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n              } else {\n                toID = this.parent.ids.indexOf(predecessorLength[i].from);\n                if (toID !== -1) {\n                  dateDifference = this.parent.dataOperation.getDuration(flatRecords[toID].ganttProperties.endDate, currentData.startDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n                  if (dateDifference === 0 && index !== toID && flatRecords[index].slack === noSlackValue) {\n                    flatRecords[toID].slack = flatRecords[index].slack;\n                    flatRecords[toID].ganttProperties.slack = flatRecords[index].slack;\n                  }\n                }\n              }\n              if (toID !== -1) {\n                if (dateDifference === 0 && index !== toID && flatRecords[index].slack !== noSlackValue) {\n                  flatRecords[index].slack = flatRecords[toID].slack;\n                  flatRecords[index].ganttProperties.slack = flatRecords[toID].slack;\n                } else if (dateDifference !== 0 && index !== toID && flatRecords[toID].isCritical) {\n                  flatRecords[index].slack = dateDifference + ' ' + flatRecords[index].ganttProperties.durationUnit;\n                  flatRecords[index].ganttProperties.slack = dateDifference + ' ' + flatRecords[index].ganttProperties.durationUnit;\n                }\n              }\n            } else if (predecessorLength[i].type === 'SF') {\n              /* eslint-disable-next-line */\n              dateDifference = this.parent.dataOperation.getDuration(currentData.startDate, flatRecords[toID].ganttProperties.endDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n            } else if (predecessorLength[i].type === 'SS') {\n              /* eslint-disable-next-line */\n              dateDifference = this.parent.dataOperation.getDuration(currentData.startDate, flatRecords[toID].ganttProperties.startDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n            } else {\n              /* eslint-disable-next-line */\n              dateDifference = this.parent.dataOperation.getDuration(currentData.endDate, flatRecords[toID].ganttProperties.endDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n            }\n            if (typeof flatRecords[index][this.parent.taskFields.id] === 'number') {\n              predecessorFrom = parseInt(predecessorLength[i].from, 10);\n            } else {\n              predecessorFrom = predecessorLength[i].from;\n            }\n            if (predecessorFrom === flatRecords[index][this.parent.taskFields.id] && flatRecords[toID].slack === noSlackValue && dateDifference <= 0) {\n              flatRecords[index].slack = noSlackValue;\n              flatRecords[index].ganttProperties.slack = noSlackValue;\n            }\n          }\n        }\n      }\n      if (flatRecords[index].slack === noSlackValue) {\n        if (flatRecords[index].ganttProperties.progress < 100) {\n          flatRecords[index].isCritical = true;\n          flatRecords[index].ganttProperties.isCritical = true;\n          if (this.criticalTasks.indexOf(flatRecords[index]) === -1) {\n            this.criticalTasks.push(flatRecords[index]);\n          }\n          if (criticalPathIds.indexOf(collection[x]['taskid']) === -1) {\n            criticalPathIds.push(collection[x]['taskid']);\n          }\n        }\n      }\n      if (flatRecords[index].ganttProperties.predecessor && flatRecords[index].ganttProperties.predecessor.length > 0) {\n        this.updateCriticalTasks(flatRecords[index], criticalPathIds);\n      }\n    }\n    if (taskBeyondEnddate.length > 0) {\n      for (var i = 0; i < taskBeyondEnddate.length; i++) {\n        if (this.parent.viewType === 'ProjectView') {\n          index = modelRecordIds.indexOf(taskBeyondEnddate[i].toString());\n        } else {\n          index = this.resourceCollectionIds.indexOf(taskBeyondEnddate[i].toString());\n        }\n        if (index !== -1 && flatRecords[index].ganttProperties.progress < 100) {\n          this.criticalTasks.push(flatRecords[index]);\n          if (criticalPathIds.indexOf(taskBeyondEnddate[i]) === -1) {\n            criticalPathIds = criticalPathIds.concat(taskBeyondEnddate[i]);\n          }\n        }\n      }\n    }\n    return criticalPathIds;\n  };\n  /* eslint-disable-next-line */\n  CriticalPath.prototype.criticalConnectorLine = function (criticalPathIds, collection, condition, collectionTaskId) {\n    this.parent.removeCriticalPathStyles();\n    var _loop_2 = function (i) {\n      var criticalData;\n      if (this_2.parent.viewType === 'ProjectView') {\n        criticalData = this_2.parent.flatData[this_2.parent.ids.indexOf(criticalPathIds[i].toString())];\n      } else {\n        var currentRecords = this_2.parent.flatData.filter(function (data) {\n          return data.ganttProperties.taskId.toString() === criticalPathIds[i].toString();\n        });\n        for (var i_1 = 0; i_1 < currentRecords.length; i_1++) {\n          if (currentRecords[i_1].ganttProperties.isCritical || currentRecords[i_1].ganttProperties.endDate >= this_2.maxEndDate) {\n            criticalData = currentRecords[i_1];\n          }\n        }\n      }\n      var index = this_2.parent.currentViewData.indexOf(criticalData);\n      var element = this_2.parent.getRowByIndex(index);\n      var taskClass = void 0;\n      var columnFields = this_2.parent.taskFields;\n      if (criticalData && criticalData.parentItem) {\n        var parentRecord = this_2.parent.currentViewData.filter(function (data) {\n          return criticalData.parentItem.uniqueID === data.uniqueID;\n        });\n        var parentIndex = this_2.parent.flatData.indexOf(parentRecord[0]);\n        var parentElement = this_2.parent.getRowByIndex(parentIndex);\n        if (parentElement) {\n          var parentTaskbarElement = parentElement.querySelectorAll('.e-taskbar-main-container');\n          for (var i_2 = 0; i_2 < parentTaskbarElement.length; i_2++) {\n            if (parentTaskbarElement[i_2].getAttribute('rowuniqueid') === criticalData['rowUniqueID']) {\n              addClass(parentTaskbarElement[i_2].querySelectorAll('.e-gantt-child-taskbar-inner-div'), cls.criticalChildTaskBarInnerDiv);\n            }\n          }\n        }\n      }\n      /* eslint-disable-next-line */\n      if (this_2.parent.allowUnscheduledTasks && criticalData && !criticalData[columnFields.startDate] && !criticalData[columnFields.endDate] && criticalData[columnFields.duration]) {\n        taskClass = cls.criticalUnscheduledTask;\n      } else {\n        taskClass = cls.criticalChildProgressBarInnerDiv;\n      }\n      if (element && (this_2.parent.viewType === 'ProjectView' || this_2.parent.viewType === 'ResourceView' && !criticalData.hasChildRecords)) {\n        if (element.getElementsByClassName('e-gantt-milestone')[0]) {\n          addClass(element.querySelectorAll('.e-gantt-milestone'), cls.criticalMilestone);\n        }\n        if (element.getElementsByClassName('e-gantt-child-taskbar-inner-div').length > 0) {\n          addClass(element.querySelectorAll('.e-gantt-child-taskbar-inner-div'), cls.criticalChildTaskBarInnerDiv);\n        }\n        if (element.getElementsByClassName('e-gantt-child-progressbar-inner-div').length > 0) {\n          addClass(element.querySelectorAll('.e-gantt-child-progressbar-inner-div'), taskClass);\n        }\n      }\n    };\n    var this_2 = this;\n    for (var i = 0; i < criticalPathIds.length; i++) {\n      _loop_2(i);\n    }\n    if (collection.length !== 0) {\n      var index = 0;\n      var currentdata = void 0;\n      var checking = [];\n      /* eslint-disable-next-line */\n      var checkint = void 0;\n      var values = void 0;\n      for (var i = 0; i < this.criticalPathCollection.length; i++) {\n        index = collectionTaskId.indexOf(this.criticalPathCollection[i]);\n        currentdata = collection[index];\n        if (index !== -1 && currentdata['to']) {\n          checking = currentdata['to'].split(',');\n          for (var j = 0; j < checking.length; j++) {\n            values = checking[j].split('+');\n            if (checking[j].indexOf('-') >= 0) {\n              values = checking[j].split('-');\n            }\n            checkint = values[0].replace(':', '');\n            if (typeof criticalPathIds[j] === 'number') {\n              checkint = parseInt(values[0], 10);\n            }\n            if (criticalPathIds.indexOf(checkint) !== -1) {\n              var taskIdString = String(currentdata['taskid']);\n              var checkintString = String(checkint);\n              var lineElement = this.parent.element.querySelectorAll('#ConnectorLineparent' + taskIdString.replace(/([.])/g, '\\\\$1') + 'child' + checkintString.replace(/([.])/g, '\\\\$1'));\n              if (lineElement.length > 0) {\n                addClass(this.parent.element.querySelectorAll('#ConnectorLineparent' + taskIdString.replace(/([.])/g, '\\\\$1') + 'child' + checkintString.replace(/([.])/g, '\\\\$1'))[0].querySelectorAll('.e-connector-line'), cls.criticalConnectorLineSVG);\n                addClass(this.parent.element.querySelectorAll('#ConnectorLineparent' + taskIdString.replace(/([.])/g, '\\\\$1') + 'child' + checkintString.replace(/([.])/g, '\\\\$1'))[0].querySelectorAll('.e-connector-line-arrow'), cls.criticalConnectorArrowSVG);\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  CriticalPath.prototype.getModuleName = function () {\n    return 'criticalPath';\n  };\n  /**\n   * Destroys the Critical Path of Gantt.\n   *\n   * @returns {void} .\n   * @private\n   */\n  CriticalPath.prototype.destroy = function () {\n    if (!this.parent.enableCriticalPath && this.parent.criticalPathModule) {\n      this.parent.criticalPathModule = undefined;\n    }\n  };\n  return CriticalPath;\n}();\nexport { CriticalPath };","map":{"version":3,"names":["isNullOrUndefined","addClass","cls","CriticalPath","parent","validatedids","resourceCollectionIds","criticalTasks","prototype","getCriticalTasks","showCriticalPath","isCritical","modelIds","ids","totalRecords","flatData","length","enableCriticalPath","parentRecords","treeGrid","parentData","checkEndDate","ganttProperties","endDate","dateDifference","checkBeyondEnddate_1","totalPredecessorsCollection","totalPredecessorsCollectionId","predecessorIndex","taskBeyondEnddate","predecessorTaskBeyondEnddate","collection","collectionTaskId","fromDataObject","criticalPathIds","autoEndDate","isAutoSchedule","i","maxEndDate","j","dataOperation","getDuration","durationUnit","isMilestone","slack","push","taskId","predecessor","viewType","taskIds","slice","_loop_1","k","indexOf","this_1","toString","currentRecords","currentViewData","filter","data","parseInt","hasChildRecords","index","progress","predecessorLength","endTask","x","to","from","toPredecessor","fromPredecessor","tempTaskId","currentIndex","individualPredecessorLength","taskid","y","isNaN","Number","offset","type","offsetUnit","enddate","collectionLength","indexEnddate","num","z","fromdata","todateID","fromDataPredecessor","slackCalculation","finalCriticalPath","criticalPathCollection","detailPredecessorCollection","predecessorCollectionTaskIds","pathIndex","flatRecords","modelRecordIds","_this","fromDateArray","split","fromDateArray1","fromTaskIdIndex","indexFromTaskId","indexToTaskId","totaskId","prevTaskEnddate","offsetInMillSec","ffslack","fromIdFlatData","toIdFlatData","parseFloat","secondsPerDay","startDate","getSlackDuration","splice","forEach","item","sDate","eDate","record","dateValidationModule","checkStartDate","Date","updateCriticalTasks","fromRecord","getRecordByID","resourceIndex","durationDiff","getTime","predecessorsName","predecessorFrom","noSlackValue","toID","currentData","taskFields","id","concat","criticalConnectorLine","condition","removeCriticalPathStyles","_loop_2","criticalData","this_2","i_1","element","getRowByIndex","taskClass","columnFields","parentItem","parentRecord","uniqueID","parentIndex","parentElement","parentTaskbarElement","querySelectorAll","i_2","getAttribute","criticalChildTaskBarInnerDiv","allowUnscheduledTasks","duration","criticalUnscheduledTask","criticalChildProgressBarInnerDiv","getElementsByClassName","criticalMilestone","currentdata","checking","checkint","values","replace","taskIdString","String","checkintString","lineElement","criticalConnectorLineSVG","criticalConnectorArrowSVG","getModuleName","destroy","criticalPathModule","undefined"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/critical-path.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { addClass } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\n/** @hidden */\nvar CriticalPath = /** @class */ (function () {\n    function CriticalPath(parent) {\n        this.validatedids = [];\n        this.resourceCollectionIds = [];\n        this.criticalTasks = [];\n        this.parent = parent;\n    }\n    CriticalPath.prototype.getCriticalTasks = function () {\n        return this.criticalTasks;\n    };\n    CriticalPath.prototype.showCriticalPath = function (isCritical) {\n        var modelIds = this.parent.ids;\n        var totalRecords = this.parent.flatData;\n        if (isCritical && this.parent.flatData.length > 0) {\n            this.parent.enableCriticalPath = true;\n            var parentRecords = this.parent.treeGrid.parentData;\n            var checkEndDate = parentRecords[0].ganttProperties.endDate;\n            var dateDifference = 0;\n            /* eslint-disable-next-line */\n            var checkBeyondEnddate_1 = [];\n            var totalPredecessorsCollection = [];\n            var totalPredecessorsCollectionId = [];\n            var predecessorIndex = 0;\n            var taskBeyondEnddate = [];\n            var predecessorTaskBeyondEnddate = [];\n            var collection = [];\n            var collectionTaskId = [];\n            var fromDataObject = [];\n            var criticalPathIds = [];\n            this.criticalTasks = [];\n            /* eslint-disable-next-line */\n            if (parentRecords[0].ganttProperties.autoEndDate > parentRecords[0].ganttProperties.endDate && !parentRecords[0].ganttProperties.isAutoSchedule) {\n                checkEndDate = parentRecords[0].ganttProperties.autoEndDate;\n            }\n            // Find the total project endDate\n            for (var i = 1; i < parentRecords.length; i++) {\n                if (parentRecords[i].ganttProperties.endDate >= checkEndDate) {\n                    checkEndDate = parentRecords[i].ganttProperties.endDate;\n                }\n                if (!parentRecords[i].ganttProperties.isAutoSchedule) {\n                    if (parentRecords[i].ganttProperties.autoEndDate >= checkEndDate) {\n                        checkEndDate = parentRecords[i].ganttProperties.autoEndDate;\n                    }\n                }\n            }\n            this.maxEndDate = checkEndDate;\n            // find the tasks that ends on total project end date that stored in checkBeyondEnddate\n            // find the tasks with predecessor that stored in totalPredecessorsCollectionId.\n            for (var j = 0; j < totalRecords.length; j++) {\n                totalRecords[j].isCritical = false;\n                totalRecords[j].ganttProperties.isCritical = false;\n                /* eslint-disable-next-line */\n                dateDifference = this.parent.dataOperation.getDuration(totalRecords[j].ganttProperties.endDate, checkEndDate, totalRecords[j].ganttProperties.durationUnit, totalRecords[j].ganttProperties.isAutoSchedule, totalRecords[j].ganttProperties.isMilestone);\n                totalRecords[j].slack = dateDifference + ' ' + totalRecords[j].ganttProperties.durationUnit;\n                totalRecords[j].ganttProperties.slack = dateDifference + ' ' + totalRecords[j].ganttProperties.durationUnit;\n                if (totalRecords[j].ganttProperties.endDate >= checkEndDate) {\n                    checkBeyondEnddate_1.push(totalRecords[j].ganttProperties.taskId);\n                }\n                if (totalRecords[j].ganttProperties.predecessor) {\n                    if (totalRecords[j].ganttProperties.predecessor.length !== 0) {\n                        totalPredecessorsCollection.push(totalRecords[j]);\n                        totalPredecessorsCollectionId.push((totalRecords[j].ganttProperties.taskId));\n                    }\n                }\n            }\n            if (this.parent.viewType === 'ResourceView') {\n                for (var i = 0; i < this.parent.taskIds.length; i++) {\n                    this.resourceCollectionIds[i] = this.parent.taskIds[i].slice(1);\n                }\n            }\n            var _loop_1 = function (k) {\n                if (totalPredecessorsCollectionId.indexOf(checkBeyondEnddate_1[k]) === -1) {\n                    if (this_1.parent.viewType === 'ProjectView') {\n                        predecessorIndex = modelIds.indexOf(checkBeyondEnddate_1[k].toString());\n                    }\n                    else {\n                        var currentRecords = this_1.parent.currentViewData.filter(function (data) {\n                            return parseInt(data.ganttProperties.taskId, 10) === checkBeyondEnddate_1[k];\n                        });\n                        for (var i = 0; i < currentRecords.length; i++) {\n                            if (!currentRecords[i].hasChildRecords &&\n                                currentRecords[i].ganttProperties.endDate >= this_1.maxEndDate) {\n                                predecessorIndex = currentRecords[i].index;\n                            }\n                        }\n                    }\n                    if (totalRecords[predecessorIndex].ganttProperties.progress < 100) {\n                        totalRecords[predecessorIndex].isCritical = true;\n                        totalRecords[predecessorIndex].ganttProperties.isCritical = true;\n                    }\n                    totalRecords[predecessorIndex]['slack'] = 0 + ' ' + totalRecords[predecessorIndex].ganttProperties.durationUnit;\n                    taskBeyondEnddate.push(checkBeyondEnddate_1[k]);\n                }\n                else {\n                    predecessorTaskBeyondEnddate.push(checkBeyondEnddate_1[k]);\n                }\n            };\n            var this_1 = this;\n            // seperate the predecessor connected taskes from the individual taskes that ends on total project end date\n            for (var k = 0; k < checkBeyondEnddate_1.length; k++) {\n                _loop_1(k);\n            }\n            var predecessorLength = totalPredecessorsCollection.length;\n            var endTask = [];\n            // find the detail collection of predecessor for each taskes that stored in collection.\n            for (var x = 0; x < predecessorLength; x++) {\n                var to = -1;\n                var from = -1;\n                var toPredecessor = -1;\n                var fromPredecessor = -1;\n                var tempTaskId = void 0;\n                var currentIndex = x;\n                var predecessor = totalPredecessorsCollection[x].ganttProperties.predecessor;\n                var individualPredecessorLength = totalPredecessorsCollection[x].ganttProperties.predecessor.length;\n                /* eslint-disable-next-line */\n                var taskid = ((totalPredecessorsCollection[x].ganttProperties.taskId));\n                for (var y = 0; y < individualPredecessorLength; y++) {\n                    if (!isNaN(Number(predecessor[y].from)) && typeof (taskid) !== 'string') {\n                        tempTaskId = parseInt((predecessor[y].from), 10);\n                    }\n                    else if (!isNaN(Number(predecessor[y].from)) && typeof (taskid) === 'string') {\n                        tempTaskId = predecessor[y].from;\n                    }\n                    else {\n                        tempTaskId = predecessor[y].from;\n                    }\n                    if (tempTaskId === taskid) {\n                        if (to === -1) {\n                            if (!predecessor[y].offset) {\n                                to = predecessor[y].to;\n                                toPredecessor = predecessor[y].type;\n                            }\n                            else {\n                                to = predecessor[y].to + ':' + predecessor[y].offset + predecessor[y].offsetUnit;\n                                toPredecessor = predecessor[y].type;\n                            }\n                        }\n                        else {\n                            if (!predecessor[y].offset) {\n                                to = to + ',' + predecessor[y].to;\n                                toPredecessor = toPredecessor + ',' + predecessor[y].type;\n                            }\n                            else {\n                                to = to + ',' + predecessor[y].to + ':' + predecessor[y].offset +\n                                    predecessor[y].offsetUnit;\n                                toPredecessor = toPredecessor + ',' + predecessor[y].type;\n                            }\n                        }\n                    }\n                    if (!isNaN(Number(predecessor[y].to)) && typeof (taskid) !== 'string') {\n                        tempTaskId = parseInt((predecessor[y].to), 10);\n                    }\n                    else if (!isNaN(Number(predecessor[y].to)) && typeof (taskid) === 'string') {\n                        tempTaskId = predecessor[y].to;\n                    }\n                    else {\n                        tempTaskId = predecessor[y].to;\n                    }\n                    if (tempTaskId === taskid) {\n                        if (from === -1) {\n                            if (!predecessor[y].offset) {\n                                from = predecessor[y].from;\n                                fromPredecessor = predecessor[y].type;\n                            }\n                            else {\n                                from = predecessor[y].from + ':' + predecessor[y].offset +\n                                    predecessor[y].offsetUnit;\n                                fromPredecessor = predecessor[y].type;\n                            }\n                        }\n                        else {\n                            if (!predecessor[y].offset) {\n                                from = from + ',' + predecessor[y].from;\n                                fromPredecessor = fromPredecessor + ',' + predecessor[y].type;\n                            }\n                            else {\n                                from = from + ',' + predecessor[y].from + ':' + predecessor[y].offset +\n                                    predecessor[y].offsetUnit;\n                                fromPredecessor = fromPredecessor + ',' + predecessor[y].type;\n                            }\n                        }\n                    }\n                }\n                if (from === -1) {\n                    from = null;\n                    fromPredecessor = null;\n                }\n                if (to === -1) {\n                    to = null;\n                    toPredecessor = null;\n                }\n                /* eslint-disable-next-line */\n                collection.push({ from: from, fromPredecessor: fromPredecessor, taskid: taskid, to: to, toPredecessor: toPredecessor, currentIndex: currentIndex, slack: null, enddate: null });\n                collectionTaskId.push(taskid);\n            }\n            var collectionLength = collection.length;\n            var indexEnddate = 0;\n            var num = void 0;\n            // find the predecessors connected taskes that does not contains any successor.\n            for (var z = 0; z < collectionLength; z++) {\n                if (!collection[z]['to']) {\n                    num = collection[z]['taskid'];\n                    if (this.parent.viewType === 'ProjectView') {\n                        indexEnddate = modelIds.indexOf(num.toString());\n                    }\n                    else {\n                        indexEnddate = this.resourceCollectionIds.indexOf(num.toString());\n                    }\n                    var flatData = totalRecords[indexEnddate].ganttProperties;\n                    dateDifference = this.parent.dataOperation.getDuration(flatData.endDate, checkEndDate, 'minute', flatData.isAutoSchedule, flatData.isMilestone);\n                    collection[z]['slack'] = dateDifference;\n                    collection[z]['fs'] = -1;\n                    collection[z]['enddate'] = flatData.endDate;\n                    endTask.push({\n                        fromdata: collection[z]['from'], todateID: collection[z]['taskid'],\n                        fromDataPredecessor: collection[z]['fromPredecessor']\n                    });\n                }\n            }\n            for (var k = 0; k < endTask.length; k++) {\n                fromDataObject.push(endTask[k]);\n                this.slackCalculation(fromDataObject, collection, collectionTaskId, checkEndDate, totalRecords, modelIds);\n            }\n            criticalPathIds = this.finalCriticalPath(collection, taskBeyondEnddate, totalRecords, modelIds, checkEndDate);\n            this.validatedids = [];\n            this.criticalPathCollection = criticalPathIds;\n            this.detailPredecessorCollection = collection;\n            this.predecessorCollectionTaskIds = collectionTaskId;\n        }\n        if (isCritical === false && this.parent.flatData.length > 0) {\n            var pathIndex = void 0;\n            this.parent.enableCriticalPath = false;\n            for (var z = 0; z < this.criticalPathCollection.length; z++) {\n                pathIndex = modelIds.indexOf(this.criticalPathCollection[z].toString());\n                totalRecords[pathIndex].isCritical = false;\n            }\n            this.criticalPathCollection = [];\n            this.detailPredecessorCollection = [];\n            this.predecessorCollectionTaskIds = [];\n        }\n    };\n    /* eslint-disable-next-line */\n    CriticalPath.prototype.slackCalculation = function (fromDataObject, collection, collectionTaskId, checkEndDate, flatRecords, modelRecordIds) {\n        var _this = this;\n        var fromDateArray = fromDataObject[0]['fromdata'].split(',');\n        var fromDataPredecessor = fromDataObject[0]['fromDataPredecessor'].split(',');\n        collectionTaskId = collectionTaskId.toString();\n        collectionTaskId = collectionTaskId.split(',');\n        var fromDateArray1 = [];\n        var fromTaskIdIndex;\n        var indexFromTaskId;\n        var indexToTaskId;\n        var totaskId;\n        var dateDifference;\n        var prevTaskEnddate;\n        var offsetInMillSec;\n        var ffslack;\n        for (var i = 0; i < fromDateArray.length; i++) {\n            fromDateArray1 = fromDateArray[i].split(':');\n            fromTaskIdIndex = collectionTaskId.indexOf((fromDateArray1[0].toString()));\n            totaskId = collectionTaskId.indexOf((fromDataObject[0]['todateID'].toString()));\n            if (this.parent.viewType === 'ProjectView') {\n                indexFromTaskId = modelRecordIds.indexOf(fromDateArray1[0].toString());\n                indexToTaskId = modelRecordIds.indexOf(fromDataObject[0]['todateID'].toString());\n            }\n            else {\n                indexFromTaskId = this.resourceCollectionIds.indexOf(fromDateArray1[0].toString());\n                indexToTaskId = this.resourceCollectionIds.indexOf(fromDataObject[0]['todateID'].toString());\n            }\n            var fromIdFlatData = void 0;\n            if (indexFromTaskId !== -1) {\n                fromIdFlatData = flatRecords[indexFromTaskId].ganttProperties;\n            }\n            var toIdFlatData = flatRecords[indexToTaskId].ganttProperties;\n            if (fromDateArray1.length > 1) {\n                if (fromDateArray1[1].indexOf('hour') !== -1) {\n                    offsetInMillSec = parseFloat(fromDateArray1[1]) * 60;\n                }\n                else if (fromDateArray1[1].indexOf('day') !== -1) {\n                    offsetInMillSec = parseFloat(fromDateArray1[1]) * (this.parent.secondsPerDay / 3600) * 60;\n                }\n                else {\n                    offsetInMillSec = parseFloat(fromDateArray1[1]);\n                }\n            }\n            if (fromIdFlatData) {\n                // calculate slack value for the task contains predecessor connection in \"finish to start\".\n                if (fromDataPredecessor[i] === 'FS') {\n                    if (fromIdFlatData.endDate > toIdFlatData.startDate) {\n                        dateDifference = -(this.parent.dataOperation.getDuration(toIdFlatData.startDate, fromIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone));\n                    }\n                    else {\n                        dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.endDate, toIdFlatData.startDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                    }\n                    // execute if the slack value is not set initially.\n                    if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n                        // execute if the offset value is not given.\n                        if (fromDateArray1.length <= 1) {\n                            if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                                collection[fromTaskIdIndex]['slack'] = 0;\n                            }\n                            else {\n                                collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                            }\n                        }\n                    }\n                    // execute if the current calculated slack value is less than the previous slack value.\n                    else if (collection[fromTaskIdIndex]['slack'] > dateDifference &&\n                        collection[fromTaskIdIndex]['slack'] !== 0) {\n                        // execute if the offset value is not given.\n                        if (fromDateArray1.length <= 1) {\n                            if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                                collection[fromTaskIdIndex]['slack'] = 0;\n                            }\n                            else {\n                                collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                            }\n                        }\n                    }\n                    // execute if the offset value is given.\n                    if (fromDateArray1.length > 1) {\n                        collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                        collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - (offsetInMillSec);\n                        if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                            collection[fromTaskIdIndex]['slack'] = 0;\n                        }\n                    }\n                    collection[fromTaskIdIndex]['fs'] = 1;\n                    collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n                    collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n                    if (fromIdFlatData.endDate >= checkEndDate) {\n                        collection[fromTaskIdIndex]['slack'] = 0;\n                    }\n                }\n                //  calculate slack value for the task contains predecessor connection in \"start to start\".\n                if (fromDataPredecessor[i] === 'SS') {\n                    // It execute if the task is in auto mode.\n                    if (fromIdFlatData.isAutoSchedule) {\n                        if (fromIdFlatData.startDate > toIdFlatData.startDate) {\n                            dateDifference = -(this.parent.dataOperation.getDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone));\n                        }\n                        else {\n                            dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.startDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                        }\n                        // It execute while the slack value is not set to the corresponding task.\n                        if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n                            if (fromDateArray1.length <= 1) {\n                                if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                                    collection[fromTaskIdIndex]['slack'] = 0;\n                                }\n                                else {\n                                    collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                                }\n                            }\n                        }\n                        //It execute while already the slack value is set and it is higher than the datedifference.\n                        else if (collection[fromTaskIdIndex]['slack'] > dateDifference &&\n                            collection[fromTaskIdIndex]['slack'] !== 0) {\n                            if (fromDateArray1.length <= 1) {\n                                if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                                    collection[fromTaskIdIndex]['slack'] = 0;\n                                }\n                                else {\n                                    collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                                }\n                            }\n                        }\n                        // execute if the offset value is given.\n                        if (fromDateArray1.length > 1) {\n                            collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                            collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - (offsetInMillSec);\n                            if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                                collection[fromTaskIdIndex]['slack'] = 0;\n                            }\n                        }\n                        collection[fromTaskIdIndex]['fs'] = 1;\n                        collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n                        collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n                    }\n                    // It execute if the task is in not an auto mode task.\n                    else if (!fromIdFlatData.isAutoSchedule) {\n                        dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                        if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n                            collection[fromTaskIdIndex]['slack'] = dateDifference;\n                        }\n                        else if (collection[fromTaskIdIndex]['slack'] > dateDifference &&\n                            collection[fromTaskIdIndex]['slack'] !== 0) {\n                            collection[fromTaskIdIndex]['slack'] = dateDifference;\n                        }\n                    }\n                    if (fromIdFlatData.endDate >= checkEndDate && fromIdFlatData.endDate <= checkEndDate) {\n                        collection[fromTaskIdIndex]['slack'] = 0;\n                    }\n                }\n                //  calculate slack value for the task contains predecessor connection in \"finish to finish\".\n                if (fromDataPredecessor[i] === 'FF') {\n                    // execute if the previous task is from finish to start or finish to finish state.\n                    if (collection[totaskId]['fs'] === 1 || collection[totaskId]['ff'] === 1 ||\n                        collection[totaskId]['fs'] === -1) {\n                        if (collection[totaskId]['fs'] === 1 || collection[totaskId]['ff'] === 1) {\n                            prevTaskEnddate = toIdFlatData.endDate;\n                            ffslack = collection[totaskId]['slack'];\n                        }\n                        if (collection[totaskId]['fs'] === -1) {\n                            prevTaskEnddate = collection[totaskId]['enddate'];\n                            ffslack = collection[totaskId]['slack'];\n                        }\n                        if (prevTaskEnddate > fromIdFlatData.endDate) {\n                            dateDifference = -(this.getSlackDuration(fromIdFlatData.endDate, prevTaskEnddate, 'minute', flatRecords[indexFromTaskId]));\n                        }\n                        else {\n                            dateDifference = this.getSlackDuration(prevTaskEnddate, fromIdFlatData.endDate, 'minute', flatRecords[indexFromTaskId]);\n                        }\n                        // set the slack value if the slack value is not set initially.\n                        if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n                            // execute if the offset value is not given.\n                            if (fromDateArray1.length <= 1) {\n                                if (ffslack - dateDifference < 0) {\n                                    collection[fromTaskIdIndex]['slack'] = 0;\n                                }\n                                else {\n                                    collection[fromTaskIdIndex]['slack'] = ffslack - dateDifference;\n                                }\n                            }\n                        }\n                        // overright the slack value if the current calculated slack value is less than the previous slack value.\n                        else if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n                            // execute if the offset value is not given.\n                            if (fromDateArray1.length <= 1) {\n                                if (ffslack - dateDifference < 0) {\n                                    collection[fromTaskIdIndex]['slack'] = 0;\n                                }\n                                else {\n                                    collection[fromTaskIdIndex]['slack'] = ffslack - dateDifference;\n                                }\n                            }\n                        }\n                        // execute if the offset value is given.\n                        if (fromDateArray1.length > 1) {\n                            collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] - dateDifference;\n                            collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - (offsetInMillSec);\n                            if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                                collection[fromTaskIdIndex]['slack'] = 0;\n                            }\n                        }\n                        collection[fromTaskIdIndex]['ff'] = 1;\n                        collection[fromTaskIdIndex]['enddate'] = prevTaskEnddate;\n                        collection[fromTaskIdIndex]['fsslack'] = ffslack;\n                    }\n                    if (fromIdFlatData.endDate >= checkEndDate && fromIdFlatData.endDate <= checkEndDate) {\n                        collection[fromTaskIdIndex]['slack'] = 0;\n                    }\n                }\n                //  calculate slack value for the task contains predecessor connection in \"start to finish\".\n                if (fromDataPredecessor[i] === 'SF') {\n                    //It execute if the task is an auto mode task.\n                    if (fromIdFlatData.isAutoSchedule) {\n                        //execute if the slack value is not set initially.\n                        if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n                            // execute if the offset value is not given.\n                            if (fromDateArray1.length <= 1) {\n                                // execute if the previous task does no has sucessor.\n                                if (isNullOrUndefined(collection[totaskId]['to'])) {\n                                    dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                                    collection[fromTaskIdIndex]['slack'] = dateDifference;\n                                }\n                                // execute if the previous task has sucessor.\n                                else if (!isNullOrUndefined(collection[totaskId]['to'])) {\n                                    if (toIdFlatData.endDate > fromIdFlatData.startDate) {\n                                        dateDifference = -(this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone));\n                                    }\n                                    else {\n                                        dateDifference = this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]);\n                                    }\n                                    if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                                        collection[fromTaskIdIndex]['slack'] = 0;\n                                    }\n                                    else {\n                                        collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                                    }\n                                }\n                            }\n                            // execute if the offset value is given.\n                            else if (fromDateArray1.length > 1) {\n                                if (toIdFlatData.endDate >= fromIdFlatData.endDate) {\n                                    if (fromIdFlatData.startDate > toIdFlatData.endDate) {\n                                        dateDifference = -(this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]));\n                                    }\n                                    else {\n                                        dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                                    }\n                                }\n                                else {\n                                    dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                                }\n                                collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                                collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - (offsetInMillSec);\n                                if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                                    collection[fromTaskIdIndex]['slack'] = 0;\n                                }\n                            }\n                            collection[fromTaskIdIndex]['fs'] = 1;\n                            collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n                            collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n                        }\n                        else {\n                            if (fromDateArray1.length <= 1) {\n                                if (isNullOrUndefined(collection[totaskId]['to'])) {\n                                    dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                                }\n                                else if (!isNullOrUndefined(collection[totaskId]['to'])) {\n                                    if (toIdFlatData.endDate > fromIdFlatData.startDate) {\n                                        dateDifference = -(this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone));\n                                    }\n                                    else {\n                                        dateDifference = this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]);\n                                    }\n                                }\n                                // execute if the current calculated slack value is less than the previous slack value.\n                                if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n                                    if (isNullOrUndefined(collection[totaskId]['to'])) {\n                                        collection[fromTaskIdIndex]['slack'] = dateDifference;\n                                    }\n                                    else if (!isNullOrUndefined(collection[totaskId]['to'])) {\n                                        if (collection[totaskId]['slack'] + dateDifference <= 0) {\n                                            collection[fromTaskIdIndex]['slack'] = 0;\n                                        }\n                                        else {\n                                            collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                                        }\n                                    }\n                                }\n                            }\n                            else if (fromDateArray1.length > 1) {\n                                if (toIdFlatData.endDate > fromIdFlatData.endDate) {\n                                    if (fromIdFlatData.startDate > toIdFlatData.endDate) {\n                                        dateDifference = -(this.getSlackDuration(toIdFlatData.endDate, fromIdFlatData.startDate, 'minute', flatRecords[indexFromTaskId]));\n                                    }\n                                    else {\n                                        dateDifference = this.parent.dataOperation.getDuration(fromIdFlatData.startDate, toIdFlatData.endDate, 'minute', fromIdFlatData.isAutoSchedule, fromIdFlatData.isMilestone);\n                                    }\n                                }\n                                else {\n                                    dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                                }\n                                // execute if the current calculated slack value is less than the previous slack value.\n                                if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n                                    collection[fromTaskIdIndex]['slack'] = collection[totaskId]['slack'] + dateDifference;\n                                    collection[fromTaskIdIndex]['slack'] = collection[fromTaskIdIndex]['slack'] - (offsetInMillSec);\n                                    if (collection[fromTaskIdIndex]['slack'] <= 0) {\n                                        collection[fromTaskIdIndex]['slack'] = 0;\n                                    }\n                                }\n                            }\n                            collection[fromTaskIdIndex]['fs'] = 1;\n                            collection[fromTaskIdIndex]['fsslack'] = collection[fromTaskIdIndex]['slack'];\n                            collection[fromTaskIdIndex]['enddate'] = fromIdFlatData.startDate;\n                        }\n                    }\n                    //It execute if the task is an auto mode task.\n                    else if (!fromIdFlatData.isAutoSchedule) {\n                        dateDifference = this.getSlackDuration(fromIdFlatData.endDate, checkEndDate, 'minute', flatRecords[indexFromTaskId]);\n                        if (isNullOrUndefined(collection[fromTaskIdIndex]['slack'])) {\n                            collection[fromTaskIdIndex]['slack'] = dateDifference;\n                        }\n                        else if (collection[fromTaskIdIndex]['slack'] > dateDifference && collection[fromTaskIdIndex]['slack'] !== 0) {\n                            collection[fromTaskIdIndex]['slack'] = dateDifference;\n                        }\n                    }\n                    if (fromIdFlatData.endDate >= checkEndDate && fromIdFlatData.endDate <= checkEndDate) {\n                        collection[fromTaskIdIndex]['slack'] = 0;\n                    }\n                }\n                if (collection[fromTaskIdIndex]['from']) {\n                    fromDataObject.push({\n                        fromdata: collection[fromTaskIdIndex]['from'], todateID: collection[fromTaskIdIndex]['taskid'],\n                        fromDataPredecessor: collection[fromTaskIdIndex]['fromPredecessor']\n                    });\n                }\n            }\n        }\n        if (fromDataObject) {\n            fromDataObject.splice(0, 1);\n            if (fromDataObject.length > 0) {\n                fromDataObject.forEach(function (item) {\n                    _this.slackCalculation([item], collection, collectionTaskId, checkEndDate, flatRecords, modelRecordIds);\n                });\n            }\n        }\n    };\n    CriticalPath.prototype.getSlackDuration = function (sDate, eDate, durationUnit, record) {\n        var startDate = this.parent.dateValidationModule.checkStartDate(new Date(sDate));\n        var endDate = this.parent.dateValidationModule.checkEndDate(new Date(eDate));\n        if (this.parent.dataOperation['getTimeDifference'](startDate, endDate, true) <= 0) {\n            return 0;\n        }\n        else {\n            return this.parent.dataOperation.getDuration(startDate, endDate, durationUnit, record.ganttProperties.isAutoSchedule, true);\n        }\n    };\n    /* eslint-disable-next-line */\n    CriticalPath.prototype.updateCriticalTasks = function (record, criticalPathIds) {\n        for (var i = 0; i < record.ganttProperties.predecessor.length; i++) {\n            var fromRecord = void 0;\n            if (this.parent.viewType === 'ProjectView') {\n                fromRecord = this.parent.getRecordByID(record.ganttProperties.predecessor[i].from);\n            }\n            else {\n                var resourceIndex = this.resourceCollectionIds.indexOf(record.ganttProperties.predecessor[i].from.toString());\n                fromRecord = this.parent.flatData[resourceIndex];\n            }\n            var durationDiff = void 0;\n            if (record.ganttProperties.endDate.getTime() >= this.maxEndDate.getTime()) {\n                record.ganttProperties.slack = record.slack = 0 + ' ' + record.ganttProperties.durationUnit;\n                if (record.ganttProperties.progress < 100) {\n                    record.isCritical = true;\n                    record.ganttProperties.isCritical = true;\n                    if (criticalPathIds.indexOf(record.ganttProperties.taskId) === -1) {\n                        criticalPathIds.push(record.ganttProperties.taskId);\n                    }\n                }\n            }\n            if (fromRecord) {\n                if (record.ganttProperties.predecessor[i].type === 'FS') {\n                    durationDiff = this.parent.dataOperation.getDuration(fromRecord.ganttProperties.endDate, record.ganttProperties.startDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n                }\n                else if (record.ganttProperties.predecessor[i].type === 'SS') {\n                    durationDiff = this.parent.dataOperation.getDuration(fromRecord.ganttProperties.startDate, record.ganttProperties.startDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n                }\n                else if (record.ganttProperties.predecessor[i].type === 'FF') {\n                    durationDiff = this.parent.dataOperation.getDuration(fromRecord.ganttProperties.endDate, record.ganttProperties.endDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n                }\n                else if (record.ganttProperties.predecessor[i].type === 'SF') {\n                    durationDiff = this.parent.dataOperation.getDuration(record.ganttProperties.endDate, fromRecord.ganttProperties.startDate, fromRecord.ganttProperties.durationUnit, fromRecord.ganttProperties.isAutoSchedule, true);\n                }\n                if (durationDiff >= 0 && this.validatedids.indexOf(parseInt(fromRecord.ganttProperties.taskId, 10)) === -1 &&\n                    fromRecord.ganttProperties.taskId !== record.ganttProperties.taskId) {\n                    fromRecord.ganttProperties.slack = record.ganttProperties.slack;\n                    fromRecord.slack = record.slack;\n                    fromRecord.isCritical = record.ganttProperties.isCritical;\n                    fromRecord.ganttProperties.isCritical = record.ganttProperties.isCritical;\n                    if (criticalPathIds.indexOf(fromRecord.ganttProperties.taskId) === -1 && fromRecord.ganttProperties.isCritical &&\n                        fromRecord.ganttProperties.progress < 100) {\n                        criticalPathIds.push(fromRecord.ganttProperties.taskId);\n                        this.validatedids.push(parseInt(fromRecord.ganttProperties.taskId, 10));\n                        if (this.criticalTasks.indexOf(fromRecord) === -1) {\n                            this.criticalTasks.push(fromRecord);\n                        }\n                    }\n                    if (fromRecord.ganttProperties.predecessorsName) {\n                        this.updateCriticalTasks(fromRecord, criticalPathIds);\n                    }\n                }\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    CriticalPath.prototype.finalCriticalPath = function (collection, taskBeyondEnddate, flatRecords, modelRecordIds, checkEndDate) {\n        /* eslint-disable-next-line */\n        var criticalPathIds = [];\n        var index;\n        var predecessorFrom;\n        for (var x = collection.length - 1; x >= 0; x--) {\n            if (this.parent.viewType === 'ProjectView') {\n                index = modelRecordIds.indexOf(collection[x]['taskid'].toString());\n            }\n            else {\n                index = this.resourceCollectionIds.indexOf(collection[x]['taskid'].toString());\n            }\n            var predecessorLength = flatRecords[index].ganttProperties.predecessor;\n            var noSlackValue = 0 + ' ' + flatRecords[index].ganttProperties.durationUnit;\n            if (predecessorLength && predecessorLength.length > 0) {\n                for (var i = predecessorLength.length - 1; i >= 0; i--) {\n                    var toID = void 0;\n                    if (this.parent.viewType === 'ProjectView') {\n                        toID = this.parent.ids.indexOf(predecessorLength[i].to);\n                    }\n                    else {\n                        toID = this.resourceCollectionIds.indexOf(predecessorLength[i].to);\n                    }\n                    var dateDifference = void 0;\n                    var currentData = flatRecords[index].ganttProperties;\n                    if (toID !== -1) {\n                        if (predecessorLength[i].type === 'FS') {\n                            if (predecessorLength[i].to !== currentData.taskId.toString() || this.parent.viewType === 'ResourceView') {\n                                /* eslint-disable-next-line */\n                                dateDifference = this.parent.dataOperation.getDuration(currentData.endDate, flatRecords[toID].ganttProperties.startDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n                            }\n                            else {\n                                toID = this.parent.ids.indexOf(predecessorLength[i].from);\n                                if (toID !== -1) {\n                                    dateDifference = this.parent.dataOperation.getDuration(flatRecords[toID].ganttProperties.endDate, currentData.startDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n                                    if (dateDifference === 0 && index !== toID && flatRecords[index].slack === noSlackValue) {\n                                        flatRecords[toID].slack = flatRecords[index].slack;\n                                        flatRecords[toID].ganttProperties.slack = flatRecords[index].slack;\n                                    }\n                                }\n                            }\n                            if (toID !== -1) {\n                                if (dateDifference === 0 && index !== toID && flatRecords[index].slack !== noSlackValue) {\n                                    flatRecords[index].slack = flatRecords[toID].slack;\n                                    flatRecords[index].ganttProperties.slack = flatRecords[toID].slack;\n                                }\n                                else if (dateDifference !== 0 && index !== toID && flatRecords[toID].isCritical) {\n                                    flatRecords[index].slack = dateDifference + ' ' + flatRecords[index].ganttProperties.durationUnit;\n                                    flatRecords[index].ganttProperties.slack = dateDifference + ' ' + flatRecords[index].ganttProperties.durationUnit;\n                                }\n                            }\n                        }\n                        else if (predecessorLength[i].type === 'SF') {\n                            /* eslint-disable-next-line */\n                            dateDifference = this.parent.dataOperation.getDuration(currentData.startDate, flatRecords[toID].ganttProperties.endDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n                        }\n                        else if (predecessorLength[i].type === 'SS') {\n                            /* eslint-disable-next-line */\n                            dateDifference = this.parent.dataOperation.getDuration(currentData.startDate, flatRecords[toID].ganttProperties.startDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n                        }\n                        else {\n                            /* eslint-disable-next-line */\n                            dateDifference = this.parent.dataOperation.getDuration(currentData.endDate, flatRecords[toID].ganttProperties.endDate, currentData.durationUnit, currentData.isAutoSchedule, currentData.isMilestone);\n                        }\n                        if (typeof (flatRecords[index][this.parent.taskFields.id]) === 'number') {\n                            predecessorFrom = parseInt(predecessorLength[i].from, 10);\n                        }\n                        else {\n                            predecessorFrom = predecessorLength[i].from;\n                        }\n                        if (predecessorFrom === flatRecords[index][this.parent.taskFields.id] &&\n                            flatRecords[toID].slack === noSlackValue && dateDifference <= 0) {\n                            flatRecords[index].slack = noSlackValue;\n                            flatRecords[index].ganttProperties.slack = noSlackValue;\n                        }\n                    }\n                }\n            }\n            if (flatRecords[index].slack === noSlackValue) {\n                if (flatRecords[index].ganttProperties.progress < 100) {\n                    flatRecords[index].isCritical = true;\n                    flatRecords[index].ganttProperties.isCritical = true;\n                    if (this.criticalTasks.indexOf(flatRecords[index]) === -1) {\n                        this.criticalTasks.push(flatRecords[index]);\n                    }\n                    if (criticalPathIds.indexOf(collection[x]['taskid']) === -1) {\n                        criticalPathIds.push(collection[x]['taskid']);\n                    }\n                }\n            }\n            if (flatRecords[index].ganttProperties.predecessor &&\n                flatRecords[index].ganttProperties.predecessor.length > 0) {\n                this.updateCriticalTasks(flatRecords[index], criticalPathIds);\n            }\n        }\n        if (taskBeyondEnddate.length > 0) {\n            for (var i = 0; i < taskBeyondEnddate.length; i++) {\n                if (this.parent.viewType === 'ProjectView') {\n                    index = modelRecordIds.indexOf(taskBeyondEnddate[i].toString());\n                }\n                else {\n                    index = this.resourceCollectionIds.indexOf(taskBeyondEnddate[i].toString());\n                }\n                if (index !== -1 && flatRecords[index].ganttProperties.progress < 100) {\n                    this.criticalTasks.push(flatRecords[index]);\n                    if (criticalPathIds.indexOf(taskBeyondEnddate[i]) === -1) {\n                        criticalPathIds = criticalPathIds.concat(taskBeyondEnddate[i]);\n                    }\n                }\n            }\n        }\n        return criticalPathIds;\n    };\n    /* eslint-disable-next-line */\n    CriticalPath.prototype.criticalConnectorLine = function (criticalPathIds, collection, condition, collectionTaskId) {\n        this.parent.removeCriticalPathStyles();\n        var _loop_2 = function (i) {\n            var criticalData;\n            if (this_2.parent.viewType === 'ProjectView') {\n                criticalData = this_2.parent.flatData[this_2.parent.ids.indexOf(criticalPathIds[i].toString())];\n            }\n            else {\n                var currentRecords = this_2.parent.flatData.filter(function (data) {\n                    return (data.ganttProperties.taskId).toString() === criticalPathIds[i].toString();\n                });\n                for (var i_1 = 0; i_1 < currentRecords.length; i_1++) {\n                    if (currentRecords[i_1].ganttProperties.isCritical ||\n                        currentRecords[i_1].ganttProperties.endDate >= this_2.maxEndDate) {\n                        criticalData = currentRecords[i_1];\n                    }\n                }\n            }\n            var index = this_2.parent.currentViewData.indexOf(criticalData);\n            var element = this_2.parent.getRowByIndex(index);\n            var taskClass = void 0;\n            var columnFields = this_2.parent.taskFields;\n            if (criticalData && criticalData.parentItem) {\n                var parentRecord = this_2.parent.currentViewData.filter(function (data) {\n                    return criticalData.parentItem.uniqueID === data.uniqueID;\n                });\n                var parentIndex = this_2.parent.flatData.indexOf(parentRecord[0]);\n                var parentElement = this_2.parent.getRowByIndex(parentIndex);\n                if (parentElement) {\n                    var parentTaskbarElement = parentElement.querySelectorAll('.e-taskbar-main-container');\n                    for (var i_2 = 0; i_2 < parentTaskbarElement.length; i_2++) {\n                        if (parentTaskbarElement[i_2].getAttribute('rowuniqueid') === criticalData['rowUniqueID']) {\n                            addClass(parentTaskbarElement[i_2].querySelectorAll('.e-gantt-child-taskbar-inner-div'), cls.criticalChildTaskBarInnerDiv);\n                        }\n                    }\n                }\n            }\n            /* eslint-disable-next-line */\n            if (this_2.parent.allowUnscheduledTasks && criticalData && !criticalData[columnFields.startDate] && !criticalData[columnFields.endDate] && criticalData[columnFields.duration]) {\n                taskClass = cls.criticalUnscheduledTask;\n            }\n            else {\n                taskClass = cls.criticalChildProgressBarInnerDiv;\n            }\n            if (element && (this_2.parent.viewType === 'ProjectView' || (this_2.parent.viewType === 'ResourceView' &&\n                !criticalData.hasChildRecords))) {\n                if (element.getElementsByClassName('e-gantt-milestone')[0]) {\n                    addClass(element.querySelectorAll('.e-gantt-milestone'), cls.criticalMilestone);\n                }\n                if (element.getElementsByClassName('e-gantt-child-taskbar-inner-div').length > 0) {\n                    addClass(element.querySelectorAll('.e-gantt-child-taskbar-inner-div'), cls.criticalChildTaskBarInnerDiv);\n                }\n                if (element.getElementsByClassName('e-gantt-child-progressbar-inner-div').length > 0) {\n                    addClass(element.querySelectorAll('.e-gantt-child-progressbar-inner-div'), taskClass);\n                }\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < criticalPathIds.length; i++) {\n            _loop_2(i);\n        }\n        if (collection.length !== 0) {\n            var index = 0;\n            var currentdata = void 0;\n            var checking = [];\n            /* eslint-disable-next-line */\n            var checkint = void 0;\n            var values = void 0;\n            for (var i = 0; i < this.criticalPathCollection.length; i++) {\n                index = collectionTaskId.indexOf(this.criticalPathCollection[i]);\n                currentdata = collection[index];\n                if (index !== -1 && currentdata['to']) {\n                    checking = currentdata['to'].split(',');\n                    for (var j = 0; j < checking.length; j++) {\n                        values = checking[j].split('+');\n                        if (checking[j].indexOf('-') >= 0) {\n                            values = checking[j].split('-');\n                        }\n                        checkint = (values[0].replace(':', ''));\n                        if (typeof (criticalPathIds[j]) === 'number') {\n                            checkint = parseInt(values[0], 10);\n                        }\n                        if (criticalPathIds.indexOf(checkint) !== -1) {\n                            var taskIdString = String(currentdata['taskid']);\n                            var checkintString = String(checkint);\n                            var lineElement = this.parent.element.querySelectorAll('#ConnectorLineparent' +\n                                taskIdString.replace(/([.])/g, '\\\\$1') + 'child' + checkintString.replace(/([.])/g, '\\\\$1'));\n                            if (lineElement.length > 0) {\n                                addClass(this.parent.element.querySelectorAll('#ConnectorLineparent' + taskIdString.replace(/([.])/g, '\\\\$1') + 'child' +\n                                    checkintString.replace(/([.])/g, '\\\\$1'))[0].querySelectorAll('.e-connector-line'), cls.criticalConnectorLineSVG);\n                                addClass(this.parent.element.querySelectorAll('#ConnectorLineparent' + taskIdString.replace(/([.])/g, '\\\\$1') + 'child' +\n                                    checkintString.replace(/([.])/g, '\\\\$1'))[0].querySelectorAll('.e-connector-line-arrow'), cls.criticalConnectorArrowSVG);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    CriticalPath.prototype.getModuleName = function () {\n        return 'criticalPath';\n    };\n    /**\n     * Destroys the Critical Path of Gantt.\n     *\n     * @returns {void} .\n     * @private\n     */\n    CriticalPath.prototype.destroy = function () {\n        if (!this.parent.enableCriticalPath && this.parent.criticalPathModule) {\n            this.parent.criticalPathModule = undefined;\n        }\n    };\n    return CriticalPath;\n}());\nexport { CriticalPath };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}