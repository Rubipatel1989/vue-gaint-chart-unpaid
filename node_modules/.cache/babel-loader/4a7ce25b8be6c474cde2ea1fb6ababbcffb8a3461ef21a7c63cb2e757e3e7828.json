{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-row\"\n};\nconst _hoisted_2 = {\n  class: \"task-name\"\n};\nconst _hoisted_3 = {\n  class: \"task-bar-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString($props.task.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"task-bar\",\n    style: _normalizeStyle($options.barStyle)\n  }, null, 4 /* STYLE */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$props","task","name","_hoisted_3","style","_normalizeStyle","$options","barStyle"],"sources":["/var/www/vue/vue-gantt-chart/src/components/TaskRow.vue"],"sourcesContent":["<template>\n       <div class=\"task-row\">\n              <div class=\"task-name\">{{ task.name }}</div>\n              <div class=\"task-bar-container\">\n                     <div class=\"task-bar\" :style=\"barStyle\"></div>\n              </div>\n       </div>\n</template>\n\n<script>\nexport default {\n       name: 'TaskRow',\n       props: {\n              task: Object,\n              dates: Array,\n       },\n       computed: {\n              // barStyle() {\n              //        const totalDays = this.dates.length;\n              //        const startIndex = this.dates.findIndex(\n              //               (date) => date.toISOString().split(\"T\")[0] === this.task.start\n              //        );\n              //        const endIndex = this.dates.findIndex(\n              //               (date) => date.toISOString().split(\"T\")[0] === this.task.end\n              //        );\n              //        const width = ((endIndex - startIndex + 1) / totalDays) * 100;\n              //        const left = (startIndex / totalDays) * 100;\n              //        return {\n              //               width: `${width}%`,\n              //               left: `${left}%`,\n              //               backgroundColor: \"lightgreen\",\n              //               height: \"20px\",\n              //               position: \"absolute\",\n              //        };\n              // },\n              barStyle() {\n                     const totalDays = this.dates.length;\n                     const startIndex = this.dates.findIndex(\n                            (date) => date.toISOString().split(\"T\")[0] === this.task.start\n                     );\n                     const endIndex = this.dates.findIndex(\n                            (date) => date.toISOString().split(\"T\")[0] === this.task.end\n                     );\n                     const totalWidth = 40 * totalDays; // Adjust to match the width of the timeline (40px per day)\n                     const width = (endIndex - startIndex + 1) * 40; // Width in pixels\n                     const left = startIndex * 40; // Left offset in pixels\n                     return {\n                            width: `${width}px`,\n                            left: `${left}px`,\n                            backgroundColor: \"lightgreen\",\n                            height: \"20px\",\n                            position: \"absolute\",\n                     };\n              }\n\n       },\n};\n</script>\n\n<style>\n.task-row {\n       display: flex;\n       align-items: center;\n       border-bottom: 1px solid #ccc;\n       position: relative;\n}\n\n.task-name {\n       width: 100px;\n       text-align: left;\n}\n\n.task-bar-container {\n       position: relative;\n       flex-grow: 1;\n       height: 20px;\n}\n\n.task-bar {\n       position: absolute;\n}\n</style>"],"mappings":";;EACYA,KAAK,EAAC;AAAU;;EACTA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAoB;;uBAFtCC,mBAAA,CAKM,OALNC,UAKM,GAJCC,mBAAA,CAA4C,OAA5CC,UAA4C,EAAAC,gBAAA,CAAlBC,MAAA,CAAAC,IAAI,CAACC,IAAI,kBACnCL,mBAAA,CAEM,OAFNM,UAEM,GADCN,mBAAA,CAA8C;IAAzCH,KAAK,EAAC,UAAU;IAAEU,KAAK,EAJjDC,eAAA,CAImDC,QAAA,CAAAC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}