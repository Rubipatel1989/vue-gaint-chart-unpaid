{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue, defaultCurrencyCode } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData, getScrollBarWidth } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, getNumberFormat, getTransformValues } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { Column } from '../models/column';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { Logger } from '../actions/logger';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */function (_super) {\n  __extends(SortDescriptor, _super);\n  function SortDescriptor() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], SortDescriptor.prototype, \"field\", void 0);\n  __decorate([Property()], SortDescriptor.prototype, \"direction\", void 0);\n  __decorate([Property(false)], SortDescriptor.prototype, \"isFromGroup\", void 0);\n  return SortDescriptor;\n}(ChildProperty);\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */function (_super) {\n  __extends(SortSettings, _super);\n  function SortSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Collection([], SortDescriptor)], SortSettings.prototype, \"columns\", void 0);\n  __decorate([Property(true)], SortSettings.prototype, \"allowUnsort\", void 0);\n  return SortSettings;\n}(ChildProperty);\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */function (_super) {\n  __extends(Predicate, _super);\n  function Predicate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], Predicate.prototype, \"field\", void 0);\n  __decorate([Property()], Predicate.prototype, \"operator\", void 0);\n  __decorate([Property()], Predicate.prototype, \"value\", void 0);\n  __decorate([Property()], Predicate.prototype, \"matchCase\", void 0);\n  __decorate([Property(false)], Predicate.prototype, \"ignoreAccent\", void 0);\n  __decorate([Property()], Predicate.prototype, \"predicate\", void 0);\n  __decorate([Property({})], Predicate.prototype, \"actualFilterValue\", void 0);\n  __decorate([Property({})], Predicate.prototype, \"actualOperator\", void 0);\n  __decorate([Property()], Predicate.prototype, \"type\", void 0);\n  __decorate([Property()], Predicate.prototype, \"ejpredicate\", void 0);\n  __decorate([Property()], Predicate.prototype, \"uid\", void 0);\n  __decorate([Property()], Predicate.prototype, \"isForeignKey\", void 0);\n  __decorate([Property()], Predicate.prototype, \"condition\", void 0);\n  return Predicate;\n}(ChildProperty);\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */function (_super) {\n  __extends(InfiniteScrollSettings, _super);\n  function InfiniteScrollSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n  __decorate([Property(3)], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n  return InfiniteScrollSettings;\n}(ChildProperty);\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */function (_super) {\n  __extends(FilterSettings, _super);\n  function FilterSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Collection([], Predicate)], FilterSettings.prototype, \"columns\", void 0);\n  __decorate([Property('FilterBar')], FilterSettings.prototype, \"type\", void 0);\n  __decorate([Property('OnEnter')], FilterSettings.prototype, \"mode\", void 0);\n  __decorate([Property(true)], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n  __decorate([Property(1500)], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n  __decorate([Property()], FilterSettings.prototype, \"operators\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"ignoreAccent\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"enableInfiniteScrolling\", void 0);\n  __decorate([Property(50)], FilterSettings.prototype, \"itemsCount\", void 0);\n  __decorate([Property('Shimmer')], FilterSettings.prototype, \"loadingIndicator\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n  __decorate([Property(false)], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n  return FilterSettings;\n}(ChildProperty);\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */function (_super) {\n  __extends(SelectionSettings, _super);\n  function SelectionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Row')], SelectionSettings.prototype, \"mode\", void 0);\n  __decorate([Property('Flow')], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n  __decorate([Property('Single')], SelectionSettings.prototype, \"type\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"persistSelection\", void 0);\n  __decorate([Property('Default')], SelectionSettings.prototype, \"checkboxMode\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n  __decorate([Property(true)], SelectionSettings.prototype, \"enableToggle\", void 0);\n  __decorate([Property(false)], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n  return SelectionSettings;\n}(ChildProperty);\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */function (_super) {\n  __extends(SearchSettings, _super);\n  function SearchSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property([])], SearchSettings.prototype, \"fields\", void 0);\n  __decorate([Property('')], SearchSettings.prototype, \"key\", void 0);\n  __decorate([Property('contains')], SearchSettings.prototype, \"operator\", void 0);\n  __decorate([Property(true)], SearchSettings.prototype, \"ignoreCase\", void 0);\n  __decorate([Property(false)], SearchSettings.prototype, \"ignoreAccent\", void 0);\n  return SearchSettings;\n}(ChildProperty);\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */function (_super) {\n  __extends(RowDropSettings, _super);\n  function RowDropSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], RowDropSettings.prototype, \"targetID\", void 0);\n  return RowDropSettings;\n}(ChildProperty);\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */function (_super) {\n  __extends(TextWrapSettings, _super);\n  function TextWrapSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Both')], TextWrapSettings.prototype, \"wrapMode\", void 0);\n  return TextWrapSettings;\n}(ChildProperty);\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */function (_super) {\n  __extends(ResizeSettings, _super);\n  function ResizeSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Normal')], ResizeSettings.prototype, \"mode\", void 0);\n  return ResizeSettings;\n}(ChildProperty);\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */function (_super) {\n  __extends(GroupSettings, _super);\n  function GroupSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(true)], GroupSettings.prototype, \"showDropArea\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"allowReordering\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"showToggleButton\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n  __decorate([Property(true)], GroupSettings.prototype, \"showUngroupButton\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n  __decorate([Property([])], GroupSettings.prototype, \"columns\", void 0);\n  __decorate([Property()], GroupSettings.prototype, \"captionTemplate\", void 0);\n  __decorate([Property(false)], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n  return GroupSettings;\n}(ChildProperty);\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */function (_super) {\n  __extends(EditSettings, _super);\n  function EditSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property(false)], EditSettings.prototype, \"allowAdding\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowEditing\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowDeleting\", void 0);\n  __decorate([Property('Normal')], EditSettings.prototype, \"mode\", void 0);\n  __decorate([Property(true)], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n  __decorate([Property(true)], EditSettings.prototype, \"showConfirmDialog\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n  __decorate([Property()], EditSettings.prototype, \"template\", void 0);\n  __decorate([Property()], EditSettings.prototype, \"headerTemplate\", void 0);\n  __decorate([Property()], EditSettings.prototype, \"footerTemplate\", void 0);\n  __decorate([Property('Top')], EditSettings.prototype, \"newRowPosition\", void 0);\n  __decorate([Property({})], EditSettings.prototype, \"dialog\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n  __decorate([Property(false)], EditSettings.prototype, \"showAddNewRow\", void 0);\n  return EditSettings;\n}(ChildProperty);\nexport { EditSettings };\n/**\n * Configures the Loading Indicator of the Grid.\n */\nvar LoadingIndicator = /** @class */function (_super) {\n  __extends(LoadingIndicator, _super);\n  function LoadingIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('Spinner')], LoadingIndicator.prototype, \"indicatorType\", void 0);\n  return LoadingIndicator;\n}(ChildProperty);\nexport { LoadingIndicator };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */function (_super) {\n  __extends(Grid, _super);\n  /**\n   * Constructor for creating the component\n   *\n   * @param {GridModel} options - specifies the options\n   * @param {string | HTMLElement} element - specifies the element\n   * @hidden\n   */\n  function Grid(options, element) {\n    var _this_1 = _super.call(this, options, element) || this;\n    _this_1.isPreventScrollEvent = false;\n    _this_1.inViewIndexes = [];\n    _this_1.keyA = false;\n    _this_1.frozenRightCount = 0;\n    _this_1.freezeColumnRefresh = true;\n    _this_1.rightcount = 0;\n    _this_1.frozenLeftCount = 0;\n    _this_1.leftcount = 0;\n    _this_1.tablesCount = 1;\n    _this_1.movableCount = 0;\n    _this_1.movablecount = 0;\n    _this_1.fixedcount = 0;\n    _this_1.fixedCount = 0;\n    _this_1.visibleFrozenLeft = 0;\n    _this_1.visibleFrozenFixed = 0;\n    _this_1.isPreparedFrozenColumns = false;\n    _this_1.visibleFrozenRight = 0;\n    _this_1.visibleMovable = 0;\n    _this_1.frozenLeftColumns = [];\n    _this_1.frozenRightColumns = [];\n    _this_1.movableColumns = [];\n    _this_1.fixedColumns = [];\n    _this_1.stackedLeft = [];\n    _this_1.stackedRight = [];\n    _this_1.stackedFixed = [];\n    _this_1.stackedMovable = [];\n    _this_1.stackedarrayLeft = [];\n    _this_1.stackedarrayRight = [];\n    _this_1.stackedarrayFixed = [];\n    _this_1.stackedarrayMovable = [];\n    _this_1.media = {};\n    _this_1.autoFitColumnsResize = false;\n    /** @hidden */\n    _this_1.tableIndex = 0;\n    _this_1.componentRefresh = Component.prototype.refresh;\n    _this_1.isChangeDataSourceCall = false;\n    _this_1.mergedColumns = false;\n    /** @hidden */\n    _this_1.isVirtualAdaptive = false;\n    /** @hidden */\n    /**\n     * * If `requireTemplateRef` is set to false in the load event, then the template element can't be accessed in grid queryCellInfo, and rowDataBound events.\n     * * By default, React's grid queryCellInfo and rowDataBound events allow access to the template element.\n     * * Avoid accessing the template elements in the grid queryCellInfo and rowDataBound events to improve rendering performance by setting this value as false.\n     *\n     * @default true\n     */\n    _this_1.requireTemplateRef = true;\n    /** @hidden */\n    _this_1.vRows = [];\n    /** @hidden */\n    _this_1.vcRows = [];\n    /** @hidden */\n    _this_1.vGroupOffsets = {};\n    /** @hidden */\n    _this_1.rowUid = 0;\n    /** @hidden */\n    _this_1.translateX = 0;\n    /** @hidden */\n    _this_1.isManualRefresh = false;\n    /** @hidden */\n    _this_1.isAutoFitColumns = false;\n    /** @hidden */\n    _this_1.enableDeepCompare = false;\n    /** @hidden */\n    _this_1.totalDataRecordsCount = 0;\n    /** @hidden */\n    _this_1.disableSelectedRecords = [];\n    /** @hidden */\n    _this_1.partialSelectedRecords = [];\n    /** @hidden */\n    _this_1.isSpan = false;\n    /** @hidden */\n    _this_1.islazyloadRequest = false;\n    /** @hidden */\n    _this_1.isAddNewRow = false;\n    /** @hidden */\n    _this_1.addNewRowFocus = true;\n    /** @hidden */\n    _this_1.lockcolPositionCount = 0;\n    /** @hidden */\n    _this_1.prevPageMoving = false;\n    /** @hidden */\n    _this_1.pageTemplateChange = false;\n    /** @hidden */\n    _this_1.isAutoGen = false;\n    /** @hidden */\n    _this_1.isAutoGenerateColumns = false;\n    /** @hidden */\n    _this_1.pageRequireRefresh = true;\n    _this_1.mediaBindInstance = {};\n    /** @hidden */\n    _this_1.commandDelIndex = undefined;\n    /** @hidden */\n    _this_1.preventAutoFit = false;\n    /** @hidden */\n    _this_1.asyncTimeOut = 50;\n    /** @hidden */\n    _this_1.isExportGrid = false;\n    /** @hidden */\n    _this_1.isWidgetsDestroyed = false;\n    _this_1.enableLogger = false;\n    _this_1.needsID = true;\n    Grid_1.Inject(Selection);\n    setValue('mergePersistData', _this_1.mergePersistGridData, _this_1);\n    return _this_1;\n  }\n  Grid_1 = Grid;\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} returns the persist data\n   */\n  Grid.prototype.getPersistData = function () {\n    var keyEntity = ['pageSettings', 'sortSettings', 'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n    var ignoreOnPersist = {\n      pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n      filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n      groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton', 'disablePageWiseAggregates', 'hideCaptionCount'],\n      searchSettings: ['fields', 'operator', 'ignoreCase'],\n      sortSettings: [],\n      columns: [],\n      selectedRowIndex: [],\n      scrollPosition: []\n    };\n    for (var i = 0; i < keyEntity.length; i++) {\n      var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n      for (var _i = 0, _a = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; _i < _a.length; _i++) {\n        var val = _a[_i];\n        delete currentObject[\"\" + val];\n      }\n    }\n    var temp = this.pageSettings.template;\n    var settings = Object.assign({\n      template: undefined\n    }, this.pageSettings);\n    if (this.enableVirtualization && this.enablePersistence && this.contentModule && this.contentModule.getPageFromTop) {\n      settings['properties']['currentPage'] = this.contentModule.getPageFromTop(this.scrollPosition.top, {\n        block: 1\n      });\n    }\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    var captionTemplateRef = this.groupSettings.captionTemplate;\n    var isAngularCaptionTemplate = captionTemplateRef && this.isAngular;\n    if (isAngularCaptionTemplate) {\n      delete this.groupSettings['properties']['captionTemplate'];\n    }\n    this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n    var persistData = this.addOnPersist(keyEntity);\n    settings.template = temp;\n    this.setProperties({\n      pageSettings: settings\n    }, true);\n    if (isAngularCaptionTemplate) {\n      this.groupSettings.captionTemplate = captionTemplateRef;\n    }\n    return persistData;\n  };\n  /**\n   * To provide the array of modules needed for component rendering\n   *\n   * @returns {ModuleDeclaration[]} Returns the module Declaration\n   * @hidden\n   */\n  Grid.prototype.requiredModules = function () {\n    this.setFrozenCount();\n    this.enableInfiniteAggrgate();\n    var modules = [];\n    if (this.isDestroyed) {\n      return modules;\n    }\n    if (this.allowFiltering) {\n      modules.push({\n        member: 'filter',\n        args: [this, this.filterSettings, this.serviceLocator],\n        name: 'Filter'\n      });\n    }\n    if (this.allowExcelExport) {\n      modules.push({\n        member: 'ExcelExport',\n        args: [this, this.serviceLocator],\n        name: 'ExcelExport'\n      });\n    }\n    if (this.allowPdfExport) {\n      modules.push({\n        member: 'PdfExport',\n        args: [this],\n        name: 'PdfExport'\n      });\n    }\n    if (this.allowSorting) {\n      modules.push({\n        member: 'sort',\n        args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator],\n        name: 'Sort'\n      });\n    }\n    if (this.allowPaging) {\n      modules.push({\n        member: 'pager',\n        args: [this, this.pageSettings],\n        name: 'Page'\n      });\n    }\n    if (this.allowSelection) {\n      modules.push({\n        member: 'selection',\n        args: [this, this.selectionSettings, this.serviceLocator],\n        name: 'Selection'\n      });\n    }\n    if (this.resizeCheck()) {\n      modules.push({\n        member: 'resize',\n        args: [this],\n        name: 'Resize'\n      });\n    }\n    if (this.allowReordering) {\n      modules.push({\n        member: 'reorder',\n        args: [this],\n        name: 'Reorder'\n      });\n    }\n    if (this.allowRowDragAndDrop) {\n      modules.push({\n        member: 'rowDragAndDrop',\n        args: [this],\n        name: 'RowDD'\n      });\n    }\n    if (this.allowGrouping) {\n      modules.push({\n        member: 'group',\n        args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator],\n        name: 'Group'\n      });\n    }\n    if (this.aggregates.length) {\n      modules.push({\n        member: 'aggregate',\n        args: [this, this.serviceLocator],\n        name: 'Aggregate'\n      });\n    }\n    if (this.isDetail()) {\n      modules.push({\n        member: 'detailRow',\n        args: [this, this.serviceLocator],\n        name: 'DetailRow'\n      });\n    }\n    if (this.toolbar || this.toolbarTemplate) {\n      modules.push({\n        member: 'toolbar',\n        args: [this, this.serviceLocator],\n        name: 'Toolbar'\n      });\n    }\n    if (this.enableVirtualization || this.enableColumnVirtualization) {\n      modules.push({\n        member: 'virtualscroll',\n        args: [this, this.serviceLocator],\n        name: 'VirtualScroll'\n      });\n    }\n    if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n      modules.push({\n        member: 'freeze',\n        args: [this, this.serviceLocator],\n        name: 'Freeze'\n      });\n    }\n    if (!isNullOrUndefined(this.columns) && this.isCommandColumn(this.columns)) {\n      modules.push({\n        member: 'commandColumn',\n        args: [this, this.serviceLocator],\n        name: 'CommandColumn'\n      });\n    }\n    if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n      modules.push({\n        member: 'edit',\n        args: [this, this.serviceLocator],\n        name: 'Edit'\n      });\n    }\n    this.extendRequiredModules(modules);\n    return modules;\n  };\n  Grid.prototype.extendRequiredModules = function (modules) {\n    if (this.enableInfiniteScrolling) {\n      modules.push({\n        member: 'infiniteScroll',\n        args: [this, this.serviceLocator],\n        name: 'InfiniteScroll'\n      });\n    }\n    if (this.groupSettings.enableLazyLoading) {\n      modules.push({\n        member: 'lazyLoadGroup',\n        args: [this, this.serviceLocator],\n        name: 'LazyLoadGroup'\n      });\n    }\n    if (this.contextMenuItems) {\n      modules.push({\n        member: 'contextMenu',\n        args: [this, this.serviceLocator],\n        name: 'ContextMenu'\n      });\n    }\n    if (this.showColumnMenu) {\n      modules.push({\n        member: 'columnMenu',\n        args: [this, this.serviceLocator],\n        name: 'ColumnMenu'\n      });\n    }\n    if (this.showColumnChooser) {\n      modules.push({\n        member: 'columnChooser',\n        args: [this, this.serviceLocator],\n        name: 'ColumnChooser'\n      });\n    }\n    if (!isNullOrUndefined(this.columns) && this.isForeignKeyEnabled(this.columns)) {\n      modules.push({\n        member: 'foreignKey',\n        args: [this, this.serviceLocator],\n        name: 'ForeignKey'\n      });\n    }\n    if (this.enableLogger) {\n      modules.push({\n        member: 'logger',\n        args: [this],\n        name: 'Logger'\n      });\n    }\n  };\n  Grid.prototype.resizeCheck = function () {\n    var autoFitColumns = this.getColumns().filter(function (c) {\n      return c.autoFit === true;\n    }).length ? true : false;\n    if (!isNullOrUndefined(this.columnModel) && this.columnModel.length && !(this.columnModel[0] instanceof Column)) {\n      this.columnModel = [];\n    }\n    var columnMenu = this.showColumnMenu && (!this.columnMenuItems || this.columnMenuItems.filter(function (c) {\n      return c === 'AutoFit' || c === 'AutoFitAll';\n    }).length) ? true : false;\n    var contextMenu = this.contextMenuItems && this.contextMenuItems.filter(function (c) {\n      return c === 'AutoFit' || c === 'AutoFitAll';\n    }).length ? true : false;\n    return this.allowResizing || this.autoFitColumnsResize || autoFitColumns || columnMenu || contextMenu;\n  };\n  /**\n   * For internal use only - Initialize the event handler;\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.preRender = function () {\n    this.serviceLocator = new ServiceLocator();\n    this.initProperties();\n    this.initializeServices();\n  };\n  Grid.prototype.initProperties = function () {\n    this.isInitial = true;\n    this.sortedColumns = [];\n    this.inViewIndexes = [];\n    this.mediaCol = [];\n    this.isInitialLoad = false;\n    this.allowServerDataBinding = false;\n    this.ignoreCollectionWatch = true;\n    this.mergeCells = {};\n    this.isEdit = false;\n    this.checkAllRows = 'None';\n    this.isCheckBoxSelection = false;\n    this.isPersistSelection = false;\n    this.componentRefresh = Component.prototype.refresh;\n    this.freezeColumnRefresh = true;\n    this.filterOperators = {\n      contains: 'contains',\n      endsWith: 'endswith',\n      equal: 'equal',\n      greaterThan: 'greaterthan',\n      greaterThanOrEqual: 'greaterthanorequal',\n      lessThan: 'lessthan',\n      lessThanOrEqual: 'lessthanorequal',\n      notEqual: 'notequal',\n      startsWith: 'startswith',\n      wildCard: 'wildcard',\n      isNull: 'isnull',\n      notNull: 'notnull',\n      like: 'like'\n    };\n    this.defaultLocale = {\n      EmptyRecord: 'No records to display',\n      True: 'true',\n      False: 'false',\n      InvalidFilterMessage: 'Invalid Filter Data',\n      GroupDropArea: 'Drag a column header here to group its column',\n      UnGroup: 'Click here to ungroup',\n      UnGroupButton: 'Click here to ungroup',\n      GroupDisable: 'Grouping is disabled for this column',\n      FilterbarTitle: '\\'s filter bar cell',\n      EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n      // Toolbar Items\n      Add: 'Add',\n      Edit: 'Edit',\n      Cancel: 'Cancel',\n      Update: 'Update',\n      Delete: 'Delete',\n      Print: 'Print',\n      Pdfexport: 'PDF Export',\n      Excelexport: 'Excel Export',\n      Wordexport: 'Word Export',\n      Csvexport: 'CSV Export',\n      Search: 'Search',\n      Columnchooser: 'Columns',\n      Save: 'Save',\n      Item: 'item',\n      Items: 'items',\n      EditOperationAlert: 'No records selected for edit operation',\n      DeleteOperationAlert: 'No records selected for delete operation',\n      SaveButton: 'Save',\n      OKButton: 'OK',\n      CancelButton: 'Cancel',\n      EditFormTitle: 'Details of ',\n      AddFormTitle: 'Add New Record',\n      BatchSaveConfirm: 'Are you sure you want to save changes?',\n      BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n      ConfirmDelete: 'Are you sure you want to Delete Record?',\n      CancelEdit: 'Are you sure you want to Cancel the changes?',\n      ChooseColumns: 'Choose Column',\n      ColumnMenu: 'Column Menu',\n      SearchColumns: 'search columns',\n      Matchs: 'No matches found',\n      FilterButton: 'Filter',\n      FilterTitle: 'Filter',\n      FilterIcon: 'Filter',\n      ClearButton: 'Clear',\n      StartsWith: 'Starts With',\n      NotStartsWith: 'Does Not Start With',\n      Like: 'Like',\n      EndsWith: 'Ends With',\n      NotEndsWith: 'Does Not End With',\n      Contains: 'Contains',\n      NotContains: 'Does Not Contain',\n      IsNull: 'Null',\n      NotNull: 'Not Null',\n      IsEmpty: 'Empty',\n      IsNotEmpty: 'Not Empty',\n      Equal: 'Equal',\n      NotEqual: 'Not Equal',\n      LessThan: 'Less Than',\n      LessThanOrEqual: 'Less Than Or Equal',\n      GreaterThan: 'Greater Than',\n      GreaterThanOrEqual: 'Greater Than Or Equal',\n      ChooseDate: 'Choose a Date',\n      EnterValue: 'Enter the value',\n      Copy: 'Copy',\n      Group: 'Group by this column',\n      Ungroup: 'Ungroup by this column',\n      GroupButton: 'Group button',\n      UnGroupAria: 'ungroup button',\n      GroupSeperator: 'Separator for the grouped columns',\n      UnGroupIcon: 'ungroup the grouped column ',\n      GroupedSortIcon: 'sort the grouped column ',\n      GroupedDrag: 'Drag the grouped column',\n      GroupCaption: ' is groupcaption cell',\n      CheckBoxLabel: 'checkbox',\n      SelectAllCheckbox: 'Select all checkbox',\n      SelectRow: 'Select row',\n      autoFitAll: 'Autofit all columns',\n      autoFit: 'Autofit this column',\n      AutoFitAll: 'Autofit all columns',\n      AutoFit: 'Autofit this column',\n      Export: 'Export',\n      FirstPage: 'First Page',\n      LastPage: 'Last Page',\n      PreviousPage: 'Previous Page',\n      NextPage: 'Next Page',\n      SortAscending: 'Sort Ascending',\n      SortDescending: 'Sort Descending',\n      EditRecord: 'Edit Record',\n      DeleteRecord: 'Delete Record',\n      FilterMenu: 'Filter',\n      SelectAll: 'Select All',\n      AddCurrentSelection: 'Add current selection to filter',\n      Blanks: 'Blanks',\n      FilterTrue: 'True',\n      FilterFalse: 'False',\n      NoResult: 'No matches found',\n      ClearFilter: 'Clear Filter',\n      Clear: 'Clear',\n      NumberFilter: 'Number Filters',\n      TextFilter: 'Text Filters',\n      DateFilter: 'Date Filters',\n      DateTimeFilter: 'DateTime Filters',\n      MatchCase: 'Match Case',\n      Between: 'Between',\n      CustomFilter: 'Custom Filter',\n      CustomFilterPlaceHolder: 'Enter the value',\n      CustomFilterDatePlaceHolder: 'Choose a date',\n      AND: 'AND',\n      OR: 'OR',\n      ShowRowsWhere: 'Show rows where:',\n      ToolbarMenuDialogARIA: 'Toolbar menu dialog',\n      FilterMenuDialogARIA: 'Filter menu',\n      ExcelFilterDialogARIA: 'Excel filter',\n      CheckBoxFilterDialogARIA: 'Checkbox filter',\n      DialogEditARIA: 'Edit dialog',\n      ColumnMenuDialogARIA: 'Column menu dialog',\n      CustomFilterDialogARIA: 'Customer filter dialog',\n      SortAtoZ: 'Sort A to Z',\n      SortZtoA: 'Sort Z to A',\n      SortByOldest: 'Sort by Oldest',\n      SortByNewest: 'Sort by Newest',\n      SortSmallestToLargest: 'Sort Smallest to Largest',\n      SortLargestToSmallest: 'Sort Largest to Smallest',\n      Sort: 'Sort',\n      SortIcon: 'Sort',\n      FilterDescription: 'Press Alt Down to open filter Menu',\n      SortDescription: 'Press Enter to sort',\n      ColumnMenuDescription: 'Press Alt Down to open Column Menu',\n      GroupDescription: 'Press Ctrl space to group',\n      ColumnHeader: ' column header ',\n      TemplateCell: ' is template cell',\n      CommandColumnAria: 'is Command column column header ',\n      DialogEdit: 'Dialog edit',\n      ClipBoard: 'clipboard',\n      AscendingText: 'Ascending',\n      DescendingText: 'Descending',\n      NoneText: 'None',\n      Expanded: 'Expanded',\n      Collapsed: 'Collapsed'\n    };\n    this.keyConfigs = {\n      downArrow: 'downarrow',\n      upArrow: 'uparrow',\n      rightArrow: 'rightarrow',\n      leftArrow: 'leftarrow',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftRight: 'shift+rightarrow',\n      shiftLeft: 'shift+leftarrow',\n      home: 'home',\n      end: 'end',\n      escape: 'escape',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      pageUp: 'pageup',\n      pageDown: 'pagedown',\n      ctrlAltPageUp: 'ctrl+alt+pageup',\n      ctrlAltPageDown: 'ctrl+alt+pagedown',\n      altPageUp: 'alt+pageup',\n      altPageDown: 'alt+pagedown',\n      altDownArrow: 'alt+downarrow',\n      altUpArrow: 'alt+uparrow',\n      ctrlDownArrow: 'ctrl+downarrow',\n      ctrlUpArrow: 'ctrl+uparrow',\n      ctrlPlusA: 'ctrl+A',\n      ctrlPlusP: 'ctrl+P',\n      insert: 'insert',\n      delete: 'delete',\n      f2: 'f2',\n      enter: 'enter',\n      ctrlEnter: 'ctrl+enter',\n      shiftEnter: 'shift+enter',\n      tab: 'tab',\n      shiftTab: 'shift+tab',\n      space: 'space',\n      ctrlPlusC: 'ctrl+C',\n      ctrlShiftPlusH: 'ctrl+shift+H',\n      ctrlSpace: 'ctrl+space',\n      ctrlLeftArrow: 'ctrl+leftarrow',\n      ctrlRightArrow: 'ctrl+rightarrow'\n    };\n  };\n  /**\n   * For internal use only - To Initialize the component rendering.\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.render = function () {\n    this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n    this.ariaService.setOptions(this.element, {\n      role: 'grid'\n    });\n    createSpinner({\n      target: this.element,\n      cssClass: this.cssClass ? this.cssClass : null\n    }, this.createElement);\n    this.renderModule = new Render(this, this.serviceLocator);\n    this.searchModule = new Search(this);\n    this.scrollModule = new Scroll(this);\n    this.notify(events.initialLoad, {});\n    if (this.pageSettings.enableQueryString) {\n      var pageValue = new URL(window.location.href).searchParams.get('page');\n      if (!isNullOrUndefined(pageValue) && window.location.href.indexOf('?page=') > 0) {\n        var currentPageValue = parseInt(pageValue, 10);\n        this.setProperties({\n          pageSettings: {\n            currentPage: currentPageValue\n          }\n        }, true);\n        this.pageSettings.currentPage = currentPageValue;\n      }\n    }\n    if ((this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined) && !(!isNullOrUndefined(this.dataSource) && this.dataSource.result)) {\n      this.isVirtualAdaptive = true;\n    }\n    if (this.aggregateModule && this.aggregates.length) {\n      for (var i = 0; i < this.aggregates.length; i++) {\n        for (var j = 0; j < this.aggregates[parseInt(i.toString(), 10)].columns.length; j++) {\n          var column = this.aggregates[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)];\n          if (column['types']) {\n            column.type = column['types'];\n          }\n        }\n      }\n    }\n    if (this.isReact) {\n      var args = {\n        requireTemplateRef: this.requireTemplateRef\n      };\n      this.trigger(events.load, args);\n      if (!args.requireTemplateRef) {\n        this.requireTemplateRef = args.requireTemplateRef;\n      }\n    } else {\n      this.trigger(events.load);\n    }\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    if (this.enableColumnVirtualization && this.isChangeDataSourceCall && this.columnModel) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n    this.isPreparedFrozenColumns = true;\n    if (this.enablePersistence) {\n      this.notify(events.columnsPrepared, {});\n    }\n    this.getMediaColumns();\n    setColumnIndex(this.columns);\n    if (this.isFrozenGrid() && !this.mergedColumns) {\n      this.setInitialFrozenColumnIndex(this.columns);\n    }\n    this.checkLockColumns(this.columns);\n    this.getColumns();\n    this.processModel();\n    this.gridRender();\n    this.wireEvents();\n    this.addListener();\n    this.updateDefaultCursor();\n    this.updateStackedFilter();\n    if (this.loadingIndicator.indicatorType === 'Spinner') {\n      this.showSpinner();\n    }\n    this.notify(events.initialEnd, {});\n    if (this.loadingIndicator.indicatorType === 'Shimmer') {\n      this.refreshMaskRow();\n    }\n    if (this.refreshing) {\n      this.trigger('created');\n    }\n  };\n  Grid.prototype.setInitialFrozenColumnIndex = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      var column = columns[parseInt(i.toString(), 10)];\n      column[\"\" + literals.initialFrozenColumnIndex] = column.index;\n      if (column.columns) {\n        this.setInitialFrozenColumnIndex(column.columns);\n      }\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showSpinner = function () {\n    if (!this.isExportGrid) {\n      showSpinner(this.element);\n    }\n  };\n  /**\n   * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideSpinner = function () {\n    if (!this.isExportGrid) {\n      hideSpinner(this.element);\n    }\n  };\n  Grid.prototype.showMaskRow = function (axisDirection, dialogElement) {\n    if (isNullOrUndefined(this.headerModule) || isNullOrUndefined(this.contentModule)) {\n      return;\n    }\n    var gridHeader = this.getHeaderContent().firstChild;\n    var gridContent = this.getContent().firstChild;\n    var gridFooter = this.getFooterContent();\n    if (dialogElement) {\n      var dialogHolder = dialogElement.querySelector('.e-checkboxlist');\n      var maskRowCount = Math.floor(dialogHolder.getBoundingClientRect().height / this.getRowHeight());\n      var maskTemplate = '<div class=\"e-ftrchk e-mask-ftrchk\" style=\"width: 100%;\">' + '<div class=\"e-checkbox-wrapper\" style=\"width: 100%;\"><input class=\"e-chk-hidden\">' + this.getShimmerTemplate() + this.getShimmerTemplate() + '</div></div>';\n      dialogHolder.innerHTML = '';\n      for (var i = 0; i < maskRowCount; i++) {\n        dialogHolder.innerHTML += maskTemplate;\n        var maskSpan = [].slice.call(dialogHolder.querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n        maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n        maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n      }\n      return;\n    }\n    if (!this.enableRtl && !this.getHeaderContent().style.paddingRight || this.enableRtl && !this.getHeaderContent().style.paddingLeft) {\n      gridContent.style.overflowY = 'hidden';\n    }\n    if (!this.isInitialLoad && !this.getColumns().length) {\n      var contentHeight = gridContent.getBoundingClientRect().height;\n      var maskTableHeight = contentHeight === 0 ? this.allowPaging ? this.pageSettings.pageSize * this.getRowHeight() : window.innerHeight : contentHeight;\n      var contentRowCount = Math.ceil(maskTableHeight / this.getRowHeight());\n      if (this.rowRenderingMode !== 'Vertical') {\n        this.headerMaskTable = this.createEmptyMaskTable(gridHeader, 1);\n      }\n      this.contentMaskTable = this.createEmptyMaskTable(gridContent, contentRowCount);\n      return;\n    }\n    this.maskRowContentScroll = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? true : false;\n    if (!this.contentMaskTable) {\n      var content = gridContent;\n      if (this.enableVirtualization || this.enableColumnVirtualization) {\n        content = content.querySelector('.e-virtualtable');\n      }\n      if (!isNullOrUndefined(content.querySelector('tbody'))) {\n        this.contentMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n      }\n    }\n    if (!this.headerMaskTable && (this.isFrozenGrid() || this.enableColumnVirtualization && axisDirection === 'X')) {\n      var content = gridHeader;\n      if (this.enableColumnVirtualization && axisDirection === 'X') {\n        content = content.querySelector('.e-virtualtable');\n      }\n      this.headerMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n    }\n    if (gridFooter && gridFooter.querySelector('.e-summaryrow')) {\n      var gridFooterContent = gridFooter.firstChild;\n      if (!this.footerContentMaskTable) {\n        var footerContent = gridFooterContent;\n        this.footerContentMaskTable = this.createMaskTable(footerContent);\n      }\n    }\n    if (!(this.enableVirtualization && axisDirection)) {\n      EventHandler.add(gridContent, 'scroll', this.translateMaskRow, this);\n    }\n  };\n  Grid.prototype.getContentMaskColumns = function () {\n    return this.getColumns();\n  };\n  Grid.prototype.createEmptyMaskTable = function (maskElement, rowCount) {\n    var table = this.createElement('table', {\n      className: 'e-table e-masked-table'\n    });\n    var tbody = this.createElement('tbody', {\n      className: 'e-masked-tbody'\n    });\n    var row = this.createElement('tr', {\n      className: 'e-masked-row e-row',\n      attrs: {\n        style: 'height: ' + this.getRowHeight() + 'px;'\n      }\n    });\n    var cell = this.createElement('td', {\n      className: 'e-masked-cell e-rowcell'\n    });\n    cell.innerHTML = this.getShimmerTemplate();\n    row.appendChild(cell);\n    for (var i = 0; i < rowCount; i++) {\n      tbody.appendChild(row.cloneNode(true));\n    }\n    table.appendChild(tbody);\n    maskElement.appendChild(table);\n    return table;\n  };\n  Grid.prototype.createMaskTable = function (element, columns, axisDirection) {\n    var parentElement = element;\n    var header = closest(parentElement, '.e-gridheader') ? true : false;\n    var content = closest(parentElement, '.e-gridcontent') ? true : false;\n    var footer = closest(parentElement, '.e-gridfooter') ? true : false;\n    var gridContent = this.getContent().firstChild;\n    var gridContentScrollHeight = gridContent.scrollHeight;\n    var table = parentElement.querySelector('table');\n    var maskTable = table.cloneNode();\n    maskTable.removeAttribute('role');\n    maskTable.removeAttribute('id');\n    maskTable.style.position = 'absolute';\n    maskTable.style.zIndex = '5';\n    maskTable.style.width = table.getBoundingClientRect().width + 'px';\n    if (header && !(this.enableColumnVirtualization && axisDirection === 'X')) {\n      maskTable.style.transform = 'translate(0px,' + table.querySelector('thead').getBoundingClientRect().height + 'px)';\n    }\n    maskTable.setAttribute('class', 'e-table e-masked-table');\n    var maskColgroup = table.querySelector('colgroup').cloneNode(true);\n    maskColgroup.removeAttribute('id');\n    maskColgroup.setAttribute('class', 'e-masked-colgroup');\n    maskTable.appendChild(maskColgroup);\n    if (header && this.enableColumnVirtualization && axisDirection === 'X') {\n      var row = this.createMaskRow(maskColgroup, columns);\n      if (this.isFrozenGrid()) {\n        var frzTd = [].slice.call(row.querySelectorAll('.e-rowcell'));\n        for (var i = 0; i < frzTd.length; i++) {\n          if (i < this.frozenLeftCount) {\n            if (this.frozenLeftCount - 1 === i) {\n              frzTd[parseInt(i.toString(), 10)].classList.add('e-freezeleftborder');\n            }\n            frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n            frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n            frzTd[parseInt(i.toString(), 10)].style.left = columns[parseInt(i.toString(), 10)].valueX - this.translateX + 'px';\n          } else if (frzTd.length - this.frozenRightCount <= i && columns[parseInt(i.toString(), 10)]) {\n            if (frzTd.length - this.frozenRightCount === i) {\n              frzTd[parseInt(i.toString(), 10)].classList.add('e-freezerightborder');\n            }\n            frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n            frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n            frzTd[parseInt(i.toString(), 10)].style.right = this.translateX + columns[parseInt(i.toString(), 10)].valueX + 'px';\n          }\n        }\n      }\n      var thead = table.querySelector('thead');\n      var rows = [].slice.call(thead.querySelectorAll('tr'));\n      var maskTHead = thead.cloneNode();\n      maskTHead.removeAttribute('role');\n      maskTHead.setAttribute('class', 'e-masked-thead');\n      var rowCount = rows.length;\n      for (var i = 0; i < rowCount; i++) {\n        maskTHead.appendChild(row.cloneNode(true));\n        maskTHead.childNodes[parseInt(i.toString(), 10)].style.height = rows[parseInt(i.toString(), 10)].getBoundingClientRect().height + 'px';\n      }\n      maskTable.appendChild(maskTHead);\n    }\n    var maskTBody = table.querySelector('tbody').cloneNode();\n    maskTBody.removeAttribute('role');\n    maskTBody.setAttribute('class', 'e-masked-tbody');\n    var tbody = table.querySelector('tbody');\n    if (content || header) {\n      var rowCountElement = gridContent;\n      var rowCount = Math.ceil(rowCountElement.getBoundingClientRect().height / this.getRowHeight());\n      if (this.allowPaging && this.pageSettings.pageSize !== this.currentViewData.length && this.pagerModule.pagerObj.totalPages !== this.pageSettings.currentPage) {\n        for (var i = 0; i < this.pageSettings.pageSize - this.currentViewData.length; i++) {\n          var row = this.createMaskRow(maskColgroup, columns);\n          var altRow = row.cloneNode(true);\n          altRow.classList.add('e-altrow');\n          for (var i_1 = 0; i_1 < rowCount; i_1++) {\n            var altNumber = 1;\n            maskTBody.appendChild((i_1 + altNumber) % 2 === 0 ? altRow.cloneNode(true) : row.cloneNode(true));\n          }\n        }\n      }\n      if (tbody.querySelector('.e-emptyrow') || !tbody.childNodes.length || content && this.childGrid) {\n        var row = this.createMaskRow(maskColgroup, columns);\n        var altRow = row.cloneNode(true);\n        altRow.classList.add('e-altrow');\n        for (var i = 0; i < rowCount; i++) {\n          var altNumber = 1;\n          maskTBody.appendChild((i + altNumber) % 2 === 0 ? altRow.cloneNode(true) : row.cloneNode(true));\n        }\n      } else {\n        var rowsQuery = 'tr:not(.e-hide):not([style*=\"display:none\"]):not([style*=\"display: none\"])';\n        var rows = [].slice.call(tbody.querySelectorAll(rowsQuery));\n        var addEditRow = tbody.querySelector('.e-addedrow, .e-editedrow');\n        var addEditRowIndex = void 0;\n        if (addEditRow) {\n          addEditRowIndex = rows.indexOf(addEditRow);\n          if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n            var frzTd = [].slice.call(rows[addEditRowIndex + 1].querySelectorAll('.e-rowcell'));\n            for (var i = 0; i < frzTd.length; i++) {\n              if (i < this.frozenLeftCount) {\n                frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n                frzTd[parseInt(i.toString(), 10)].style.left = columns[parseInt(i.toString(), 10)].valueX - this.translateX + 'px';\n              } else if (frzTd.length - this.frozenRightCount <= i && columns[parseInt(i.toString(), 10)]) {\n                frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n                frzTd[parseInt(i.toString(), 10)].style.right = this.translateX + columns[parseInt(i.toString(), 10)].valueX + 'px';\n              }\n            }\n          }\n          if (addEditRow.classList.contains('e-addedrow')) {\n            rows.splice(addEditRowIndex, 2);\n          } else {\n            rows.splice(addEditRowIndex, 1);\n          }\n        }\n        rowCount = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? rows.length : rowCount <= rows.length ? rowCount : rows.length;\n        for (var i = 0; i < rowCount; i++) {\n          maskTBody.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n        }\n        if (addEditRow && addEditRow.classList.contains('e-editedrow') && addEditRowIndex < rowCount) {\n          var addEditMaskRow = maskTBody.childNodes[parseInt(addEditRowIndex.toString(), 10)];\n          addEditMaskRow.style.height = this.getRowHeight() + 'px';\n          addEditMaskRow.classList.add('e-row');\n          if (addEditRow.classList.contains('e-altrow')) {\n            addEditMaskRow.classList.add('e-altrow');\n          }\n        }\n      }\n    }\n    maskTable.appendChild(maskTBody);\n    if (footer) {\n      var tfoot = table.querySelector('tfoot');\n      var maskTFoot = tfoot.cloneNode();\n      maskTFoot.setAttribute('class', 'e-masked-tfoot');\n      var rows = [].slice.call(tfoot.querySelectorAll('tr'));\n      for (var i = 0; i < rows.length; i++) {\n        maskTFoot.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n      }\n      maskTable.appendChild(maskTFoot);\n    }\n    if (header && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n      this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = 'relative';\n    }\n    parentElement.insertBefore(maskTable, parentElement.firstChild);\n    if (content && !(this.enableVirtualization && axisDirection)) {\n      var minScrollTop = gridContentScrollHeight - maskTable.getBoundingClientRect().height;\n      minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n      var scrollTop = gridContent.scrollTop <= minScrollTop ? gridContent.scrollTop : minScrollTop;\n      if (this.enableVirtualization) {\n        scrollTop -= getTransformValues(closest(parentElement, '.e-virtualtable')).height;\n      }\n      maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n    }\n    return maskTable;\n  };\n  Grid.prototype.applyMaskRow = function (row, rowHeight) {\n    var maskRow = row;\n    maskRow.removeAttribute('role');\n    maskRow.removeAttribute('aria-rowindex');\n    maskRow.removeAttribute('data-rowindex');\n    maskRow.removeAttribute('data-uid');\n    maskRow.classList.add('e-masked-row');\n    maskRow.style.height = rowHeight + 'px';\n    var maskCells = [].slice.call(maskRow.childNodes);\n    for (var i = 0; i < maskCells.length; i++) {\n      var maskCell = maskCells[parseInt(i.toString(), 10)];\n      var displayAsCheckBoxCell = maskCell.firstChild && maskCell.firstChild.classList && maskCell.firstChild.classList.contains('e-checkbox-wrapper');\n      maskCell.removeAttribute('role');\n      maskCell.removeAttribute('tabindex');\n      maskCell.removeAttribute('aria-label');\n      if (this.enableColumnVirtualization && maskCell.classList.contains('e-fixedfreeze')) {\n        removeClass([maskCell], ['e-fixedfreeze', 'e-freezeleftborder', 'e-freezerightborder']);\n        addClass([maskCell], ['e-unfreeze']);\n      }\n      if (!(this.enableColumnVirtualization && (maskCell.classList.contains('e-leftfreeze') || maskCell.classList.contains('e-rightfreeze')))) {\n        maskCell.removeAttribute('data-colindex');\n      }\n      maskCell.removeAttribute('aria-colindex');\n      maskCell.removeAttribute('index');\n      maskCell.removeAttribute('ej-mappingname');\n      maskCell.removeAttribute('ej-mappingvalue');\n      maskCell.removeAttribute('e-mappinguid');\n      maskCell.removeAttribute('aria-expanded');\n      maskCell.classList.add('e-masked-cell');\n      maskCell.innerHTML = this.getShimmerTemplate();\n      if (maskCell.classList.contains('e-recordplusexpand') || maskCell.classList.contains('e-recordpluscollapse')) {\n        maskCell.firstChild.classList.add('e-mask-group-intent');\n      } else if (maskCell.classList.contains('e-gridchkbox') || displayAsCheckBoxCell) {\n        maskCell.firstChild.classList.add('e-mask-checkbox-intent');\n      } else if (maskCell.classList.contains('e-rowdragdrop')) {\n        maskCell.firstChild.classList.add('e-mask-drag-intent');\n      } else if (maskCell.classList.contains('e-indentcell')) {\n        maskCell.innerHTML = '';\n      }\n    }\n    return maskRow;\n  };\n  Grid.prototype.createMaskRow = function (refColgroup, refColumns) {\n    var colgroup = refColgroup;\n    var columns = refColumns;\n    var row = this.createElement('tr', {\n      className: 'e-masked-row e-row'\n    });\n    if (this.rowRenderingMode !== 'Vertical') {\n      row.style.height = this.getRowHeight() + 'px';\n    }\n    var td = this.createElement('td', {\n      className: 'e-masked-cell e-rowcell'\n    });\n    for (var i = 0, colIndex = 0; i < colgroup.childNodes.length; i++) {\n      var col = colgroup.childNodes[parseInt(i.toString(), 10)];\n      var localTD = td.cloneNode();\n      localTD.innerHTML = this.getShimmerTemplate();\n      if (!(col.classList.contains('e-group-intent') || col.classList.contains('e-detail-intent') || col.classList.contains('e-drag-intent'))) {\n        if (this.rowRenderingMode === 'Vertical' && columns[parseInt(colIndex.toString(), 10)]) {\n          localTD.setAttribute('data-cell', columns[parseInt(colIndex.toString(), 10)].headerText ? columns[parseInt(colIndex.toString(), 10)].headerText : columns[parseInt(colIndex.toString(), 10)].field);\n        }\n        if (col.style.display === 'none') {\n          localTD.classList.add('e-hide');\n        } else {\n          localTD.style.textAlign = columns[parseInt(colIndex.toString(), 10)] && columns[parseInt(colIndex.toString(), 10)].textAlign ? columns[parseInt(colIndex.toString(), 10)].textAlign.toLowerCase() : this.enableRtl ? 'right' : 'left';\n          if (columns[parseInt(colIndex.toString(), 10)] && (columns[parseInt(colIndex.toString(), 10)].type === 'checkbox' || columns[parseInt(colIndex.toString(), 10)].displayAsCheckBox)) {\n            localTD.firstChild.classList.add('e-mask-checkbox-intent');\n          }\n        }\n        colIndex++;\n      } else {\n        if (col.classList.contains('e-group-intent')) {\n          localTD.firstChild.classList.add('e-mask-group-intent');\n        } else if (col.classList.contains('e-detail-intent')) {\n          localTD.firstChild.classList.add('e-mask-detail-intent');\n        } else if (col.classList.contains('e-drag-intent')) {\n          localTD.firstChild.classList.add('e-mask-drag-intent');\n        }\n      }\n      row.appendChild(localTD);\n    }\n    return row;\n  };\n  Grid.prototype.getShimmerTemplate = function () {\n    if (this.maskRowContentScroll) {\n      return '<span class=\"e-mask e-skeleton e-skeleton-text\"></span>';\n    }\n    return '<span class=\"e-mask e-skeleton e-skeleton-text e-shimmer-wave\"></span>';\n  };\n  Grid.prototype.addShimmerEffect = function () {\n    this.maskRowContentScroll = false;\n    var maskSpan = [].slice.call(this.element.querySelectorAll('.e-mask:not(.e-shimmer-wave)'));\n    for (var i = 0; i < maskSpan.length; i++) {\n      if (maskSpan[parseInt(i.toString(), 10)]) {\n        maskSpan[parseInt(i.toString(), 10)].classList.add('e-shimmer-wave');\n      }\n    }\n  };\n  Grid.prototype.translateMaskRow = function (e) {\n    var target = e.target;\n    var maskTables = target.querySelectorAll('.e-masked-table');\n    for (var i = 0; i < maskTables.length; i++) {\n      var maskTable = maskTables[parseInt(i.toString(), 10)];\n      if (maskTable) {\n        var minScrollTop = target.scrollHeight - maskTable.getBoundingClientRect().height;\n        minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n        var scrollTop = target.scrollTop <= minScrollTop ? target.scrollTop : minScrollTop;\n        if (this.enableVirtualization) {\n          scrollTop -= getTransformValues(closest(maskTable, '.e-virtualtable')).height;\n        }\n        maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n      }\n    }\n  };\n  Grid.prototype.removeMaskRow = function () {\n    if (!isNullOrUndefined(this.contentModule)) {\n      var gridContent = this.getContent().firstChild;\n      EventHandler.remove(gridContent, 'scroll', this.translateMaskRow);\n    }\n    if (this.headerMaskTable && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n      this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = '';\n    }\n    var maskTables = [this.headerMaskTable, this.contentMaskTable, this.footerContentMaskTable];\n    for (var i = 0; i < maskTables.length; i++) {\n      var maskTable = maskTables[parseInt(i.toString(), 10)];\n      if (maskTable) {\n        remove(maskTable);\n      }\n    }\n    this.headerMaskTable = null;\n    this.contentMaskTable = null;\n    this.footerContentMaskTable = null;\n  };\n  Grid.prototype.refreshMaskRow = function () {\n    var gridContent = this.getContent().firstChild;\n    if (!this.isInitialLoad && !this.getColumns().length) {\n      return;\n    }\n    if (this.contentMaskTable && gridContent.querySelector('.e-masked-table')) {\n      var content = gridContent;\n      if (this.enableVirtualization) {\n        content = content.querySelector('.e-virtualtable');\n      }\n      this.refreshMaskRowColgroupWidth(content);\n    }\n  };\n  Grid.prototype.refreshMaskRowColgroupWidth = function (content) {\n    var table = content.querySelector('table:not(.e-masked-table)');\n    var colgroup = table.querySelector(literals.colGroup).cloneNode(true);\n    var maskTable = content.querySelector('.e-masked-table');\n    colgroup.removeAttribute('id');\n    colgroup.setAttribute('class', 'e-masked-colgroup');\n    for (var i = 0; i < colgroup.childNodes.length; i++) {\n      colgroup.childNodes[parseInt(i.toString(), 10)].removeAttribute('class');\n    }\n    remove(maskTable.querySelector('.e-masked-colgroup'));\n    maskTable.insertBefore(colgroup, maskTable.firstChild);\n    maskTable.style.width = table.getBoundingClientRect().width + 'px';\n  };\n  Grid.prototype.updateStackedFilter = function () {\n    if (this.allowFiltering && this.filterSettings.type === 'FilterBar' && this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n      this.getHeaderContent().classList.add('e-stackedfilter');\n    } else {\n      this.getHeaderContent().classList.remove('e-stackedfilter');\n    }\n  };\n  Grid.prototype.getMediaColumns = function () {\n    if (!this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      this.getShowHideService = this.serviceLocator.getService('showHideService');\n      if (!isNullOrUndefined(gcol)) {\n        for (var index = 0; index < gcol.length; index++) {\n          if (!isNullOrUndefined(gcol[parseInt(index.toString(), 10)].hideAtMedia) && (isNullOrUndefined(gcol[parseInt(index.toString(), 10)].visible) || gcol[parseInt(index.toString(), 10)].visible)) {\n            this.pushMediaColumn(gcol[parseInt(index.toString(), 10)], index);\n          }\n        }\n      }\n    }\n    this.updateFrozenColumnsWidth();\n  };\n  Grid.prototype.pushMediaColumn = function (col, index) {\n    this.mediaCol.push(col);\n    this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n    this.mediaQueryUpdate(index, this.media[col.uid]);\n    this.mediaBindInstance[parseInt(index.toString(), 10)] = this.mediaQueryUpdate.bind(this, index);\n    this.media[col.uid].addListener(this.mediaBindInstance[parseInt(index.toString(), 10)]);\n  };\n  /**\n   * @param {Column} col - specifies the column\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.updateMediaColumns = function (col) {\n    if (!this.enableColumnVirtualization) {\n      var index = this.getColumnIndexByUid(col.uid);\n      for (var i = 0; i < this.mediaCol.length; i++) {\n        if (col.uid === this.mediaCol[parseInt(i.toString(), 10)].uid) {\n          this.mediaCol.splice(i, 1);\n          return;\n        }\n      }\n      this.pushMediaColumn(col, index);\n    }\n  };\n  /**\n   * @param {number} columnIndex - specifies the column index\n   * @param {MediaQueryList} e - specifies the MediaQueryList\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n    var col = this.getColumns()[parseInt(columnIndex.toString(), 10)];\n    if (this.mediaCol.some(function (mediaColumn) {\n      return mediaColumn.uid === col.uid;\n    })) {\n      col.visible = e.matches;\n      if (this.isInitialLoad) {\n        this.invokedFromMedia = true;\n        if (col.visible) {\n          this.showHider.show(col.headerText, 'headerText');\n        } else {\n          this.showHider.hide(col.headerText, 'headerText');\n        }\n      }\n    }\n  };\n  Grid.prototype.refreshMediaCol = function () {\n    this.isInitialLoad = true;\n    var footerContent = this.element.querySelector('.' + literals.gridFooter);\n    if (this.aggregates.length && this.element.scrollHeight > parseInt(this.height.toString(), 10) && footerContent) {\n      addClass([footerContent], ['e-footerpadding']);\n    }\n    var checkboxColumn = this.getColumns().filter(function (col) {\n      return col.type === 'checkbox';\n    });\n    if (checkboxColumn.length === 0 || checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n      this.isCheckBoxSelection = false;\n    }\n    if (this.rowRenderingMode === 'Vertical') {\n      if (this.enableHover) {\n        this.setProperties({\n          enableAdaptiveUI: true,\n          enableHover: false\n        }, true);\n        removeClass([this.element], 'e-gridhover');\n      }\n    }\n    if (this.enableAdaptiveUI && this.scrollModule) {\n      this.scrollModule.refresh();\n    }\n    if (this.isFrozenGrid() && this.isAutoGenerateColumns) {\n      this.widthService.setWidthToColumns();\n      this.isAutoGenerateColumns = false;\n    }\n  };\n  Grid.prototype.removeMediaListener = function () {\n    for (var i = 0; i < this.mediaCol.length; i++) {\n      this.media[this.mediaCol[parseInt(i.toString(), 10)].uid].removeListener(this.mediaBindInstance[this.mediaCol[parseInt(i.toString(), 10)].index]);\n    }\n  };\n  /**\n   * For internal use only - Initialize the event handler\n   *\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.eventInitializer = function () {\n    //eventInitializer\n  };\n  /**\n   * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  Grid.prototype.destroy = function () {\n    var gridElement = this.element;\n    if (!gridElement) {\n      return;\n    }\n    var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) && gridElement.querySelector('.' + literals.gridContent) ? true : false;\n    if (hasGridChild) {\n      this.unwireEvents();\n    }\n    this.removeListener();\n    this.removeMediaListener();\n    this.notify(events.destroy, {});\n    this.destroyDependentModules();\n    if (this.isReact) {\n      this.destroyTemplate(['template']);\n    }\n    if (this.isVue) {\n      this.destroyTemplate();\n    }\n    if (hasGridChild) {\n      _super.prototype.destroy.call(this);\n    }\n    this.toolTipObj.destroy();\n    if (this.isReact && !Browser.isIE) {\n      this.element.innerHTML = '';\n    }\n    var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService', 'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider', 'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n    for (var i = 0; i < modules.length; i++) {\n      if (this[modules[parseInt(i.toString(), 10)]]) {\n        this[modules[parseInt(i.toString(), 10)]] = null;\n      }\n    }\n    this.element.innerHTML = '';\n    classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n  };\n  Grid.prototype.destroyDependentModules = function () {\n    var gridElement = this.element;\n    if (!gridElement || !gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent)) {\n      return;\n    }\n    this.scrollModule.destroy();\n    this.keyboardModule.destroy();\n    this.focusModule.destroy();\n    this.clipboardModule.destroy();\n    this.printModule.destroy();\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n  Grid.prototype.getModuleName = function () {\n    return 'grid';\n  };\n  Grid.prototype.enableBoxSelection = function () {\n    if (this.enableAutoFill) {\n      this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n      this.element.classList.add('e-afenabled');\n    } else {\n      this.element.classList.remove('e-afenabled');\n      this.notify(events.destroyAutoFillElements, {});\n    }\n  };\n  Grid.prototype.setCSSClass = function (oldCSSClass) {\n    if (this.cssClass) {\n      addClass([this.element], this.cssClass.split(' '));\n    }\n    if (oldCSSClass) {\n      removeClass([this.element], oldCSSClass.split(' '));\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * @param {GridModel} newProp - Defines new properties\n   * @param {GridModel} oldProp - Defines old properties\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n    var requireRefresh = false;\n    var requireGridRefresh = false;\n    var freezeRefresh = false;\n    var checkCursor;\n    var args = {\n      requestType: 'refresh'\n    };\n    var childGridParent = null;\n    var parentInstance = null;\n    if (this.isDestroyed) {\n      return;\n    }\n    this.log('module_missing');\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n    var properties = Object.keys(newProp);\n    if (properties.indexOf('columns') > -1) {\n      if (this.enableColumnVirtualization) {\n        this.columnModel = [];\n      }\n      this.updateColumnObject();\n      requireGridRefresh = true;\n    }\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n      var prop = properties_1[_i];\n      switch (prop) {\n        case 'allowPaging':\n          this.notify(events.uiUpdate, {\n            module: 'pager',\n            enable: this.allowPaging\n          });\n          requireRefresh = true;\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'pageSettings':\n          if (this.pageTemplateChange) {\n            this.pageTemplateChange = false;\n            this.notify(events.inBoundModelChanged, {\n              module: 'pager',\n              properties: newProp.pageSettings\n            });\n            break;\n          }\n          if (this.pagerModule && this.pagerModule.isCancel) {\n            this.pagerModule.isCancel = false;\n            return;\n          }\n          this.notify(events.inBoundModelChanged, {\n            module: 'pager',\n            properties: newProp.pageSettings\n          });\n          if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize) && isNullOrUndefined(newProp.pageSettings.totalRecordsCount) || !isNullOrUndefined(oldProp.pageSettings) && newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageRequireRefresh && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize) {\n            requireRefresh = true;\n          }\n          if (!this.pageRequireRefresh) {\n            this.pageRequireRefresh = true;\n          }\n          if (this.pagerModule && this.pagerModule.isCancel) {\n            this.pagerModule.isCancel = false;\n          }\n          break;\n        case 'allowSorting':\n          this.notify(events.uiUpdate, {\n            module: 'sort',\n            enable: this.allowSorting\n          });\n          requireRefresh = true;\n          checkCursor = true;\n          break;\n        case 'allowFiltering':\n          this.updateStackedFilter();\n          this.notify(events.uiUpdate, {\n            module: 'filter',\n            enable: this.allowFiltering\n          });\n          requireRefresh = true;\n          if (this.filterSettings.type !== 'FilterBar' || this.editSettings.showAddNewRow && this.filterSettings.type === 'FilterBar') {\n            this.refreshHeader();\n          } else {\n            if (this.height === '100%') {\n              this.scrollModule.refresh();\n            }\n          }\n          break;\n        case 'height':\n        case 'width':\n          this.notify(events.uiUpdate, {\n            module: 'scroll',\n            properties: {\n              width: newProp.width,\n              height: newProp.height\n            }\n          });\n          if (this.allowPaging) {\n            this.pagerModule.refresh();\n          }\n          break;\n        case 'allowReordering':\n          this.headerModule.refreshUI();\n          checkCursor = true;\n          break;\n        case 'allowRowDragAndDrop':\n          this.notify(events.uiUpdate, {\n            module: 'rowDragAndDrop',\n            enable: this.allowRowDragAndDrop\n          });\n          this.renderModule.refresh();\n          this.headerModule.refreshUI();\n          break;\n        case 'allowSelection':\n          this.notify(events.uiUpdate, {\n            module: 'selection',\n            enable: this.allowSelection\n          });\n          break;\n        case 'cssClass':\n          this.setCSSClass(oldProp.cssClass);\n          break;\n        case 'enableAutoFill':\n          if (this.selectionModule) {\n            this.enableBoxSelection();\n            this.selectionModule.updateAutoFillPosition();\n          }\n          break;\n        case 'rowTemplate':\n          this.rowTemplateFn = templateCompiler(this.rowTemplate);\n          requireRefresh = true;\n          break;\n        case 'emptyRecordTemplate':\n          this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n          requireRefresh = true;\n          break;\n        case 'detailTemplate':\n          this.detailTemplateFn = templateCompiler(this.detailTemplate);\n          requireRefresh = true;\n          break;\n        case 'allowGrouping':\n          this.notify(events.uiUpdate, {\n            module: 'group',\n            enable: this.allowGrouping\n          });\n          this.headerModule.refreshUI();\n          requireRefresh = true;\n          checkCursor = true;\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'enableInfiniteScrolling':\n        case 'childGrid':\n          requireRefresh = true;\n          childGridParent = this.parentDetails ? document.querySelector(\"#\" + this.parentDetails.parentID) : null;\n          parentInstance = childGridParent ? childGridParent.ej2_instances[0] : null;\n          if (this.childGrid && parentInstance && isNullOrUndefined(parentInstance.childGrid.childGrid)) {\n            var childGridObject = Object.assign({}, parentInstance.childGrid, {\n              childGrid: newProp.childGrid\n            });\n            parentInstance.setProperties({\n              childGrid: childGridObject\n            }, true);\n            while (!isNullOrUndefined(parentInstance.parentDetails)) {\n              var currentParent = document.querySelector(\"#\" + parentInstance.parentDetails.parentID);\n              var currentParentInstance = currentParent ? currentParent.ej2_instances[0] : null;\n              if (currentParentInstance) {\n                var currentChildObject = Object.assign({}, currentParentInstance.childGrid);\n                currentChildObject.childGrid = parentInstance.childGrid;\n                currentParentInstance.setProperties({\n                  childGrid: currentChildObject\n                }, true);\n              }\n              parentInstance = currentParentInstance;\n            }\n          }\n          this.headerModule.refreshUI();\n          break;\n        case 'toolbar':\n          this.notify(events.uiUpdate, {\n            module: 'toolbar'\n          });\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'groupSettings':\n          this.notify(events.inBoundModelChanged, {\n            module: 'group',\n            properties: newProp.groupSettings,\n            oldProperties: oldProp.groupSettings\n          });\n          break;\n        case 'aggregates':\n          if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n            requireRefresh = true;\n          }\n          this.notify(events.uiUpdate, {\n            module: 'aggregate',\n            properties: newProp\n          });\n          if (this.height === '100%') {\n            this.scrollModule.refresh();\n          }\n          break;\n        case 'frozenColumns':\n        case 'frozenRows':\n        case 'enableVirtualization':\n        case 'enableColumnVirtualization':\n        case 'currencyCode':\n        case 'locale':\n          if (this.isFrozenGrid()) {\n            this.log('frozen_rows_columns');\n          }\n          freezeRefresh = true;\n          requireGridRefresh = true;\n          this.addNewRowFocus = true;\n          break;\n        case 'query':\n          if (!this.getDataModule().isQueryInvokedFromData) {\n            requireRefresh = true;\n          }\n          this.getDataModule().isQueryInvokedFromData = false;\n          break;\n        case 'autoFit':\n          if (this.autoFit) {\n            this.preventAdjustColumns();\n          } else {\n            this.restoreAdjustColumns();\n          }\n          break;\n        default:\n          this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n      }\n    }\n    if (checkCursor) {\n      this.updateDefaultCursor();\n    }\n    if (requireGridRefresh) {\n      if (freezeRefresh || this.getFrozenColumns() || this.frozenRows || this.frozenLeftColumns.length || this.frozenRightColumns.length) {\n        this.freezeRefresh();\n      } else {\n        this.refresh();\n      }\n    } else if (requireRefresh) {\n      this.notify(events.modelChanged, args);\n      requireRefresh = false;\n      this.maintainSelection(newProp.selectedRowIndex);\n    }\n  };\n  Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n    switch (prop) {\n      case 'enableRtl':\n        this.updateRTL();\n        if (this.allowPaging) {\n          this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n        }\n        if (this.height !== 'auto') {\n          this.scrollModule.removePadding(!newProp.enableRtl);\n          this.scrollModule.setPadding();\n        }\n        if (this.toolbar && this.toolbarModule) {\n          this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n        }\n        if (this.contextMenuItems && this.contextMenuModule) {\n          this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n        }\n        if (this.showColumnMenu && this.columnMenuModule && !this.enableAdaptiveUI) {\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n          this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n        }\n        if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n          this.refreshHeader();\n        }\n        this.notify(events.rtlUpdated, {});\n        break;\n      case 'enableAltRow':\n        this.renderModule.refresh();\n        break;\n      case 'allowResizing':\n        if (this.resizeModule) {\n          this.resizeModule.render();\n        }\n        this.headerModule.refreshUI();\n        this.updateResizeLines();\n        break;\n      case 'rowHeight':\n        if (this.rowHeight) {\n          addClass([this.element], 'e-grid-min-height');\n        } else {\n          removeClass([this.element], 'e-grid-min-height');\n        }\n        this.renderModule.refresh();\n        this.headerModule.refreshUI();\n        break;\n      case 'gridLines':\n        this.updateGridLines();\n        break;\n      case 'showColumnMenu':\n        this.headerModule.refreshUI();\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: true\n        });\n        break;\n      case 'columnMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'columnMenu',\n          enable: this.columnMenuItems\n        });\n        break;\n      case 'contextMenuItems':\n        this.notify(events.uiUpdate, {\n          module: 'contextMenu',\n          enable: this.contextMenuItems\n        });\n        break;\n      case 'showColumnChooser':\n        this.notify(events.uiUpdate, {\n          module: 'columnChooser',\n          enable: this.showColumnChooser\n        });\n        break;\n      case 'filterSettings':\n        this.updateStackedFilter();\n        this.notify(events.inBoundModelChanged, {\n          module: 'filter',\n          properties: newProp.filterSettings\n        });\n        break;\n      case 'searchSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'search',\n          properties: newProp.searchSettings\n        });\n        break;\n      case 'sortSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'sort'\n        });\n        break;\n      case 'selectionSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'selection',\n          properties: newProp.selectionSettings\n        });\n        break;\n      case 'editSettings':\n        this.notify(events.inBoundModelChanged, {\n          module: 'edit',\n          properties: newProp.editSettings\n        });\n        break;\n      case 'allowTextWrap':\n      case 'textWrapSettings':\n        if (this.allowTextWrap) {\n          this.applyTextWrap();\n        } else {\n          this.removeTextWrap();\n        }\n        this.notify(events.freezeRender, {\n          case: 'textwrap',\n          isModeChg: prop === 'textWrapSettings'\n        });\n        break;\n      case 'dataSource':\n        // eslint-disable-next-line no-case-declarations\n        var requestPendingState = this.getDataModule().getState();\n        if (this.allowPaging && this.pageSettings.pageSizes && !this.getDataModule().isRemote() && !(requestPendingState && requestPendingState.isPending)) {\n          if (this.pagerModule.pagerObj.isAllPage) {\n            var count = this.dataSource instanceof DataManager ? this.dataSource.dataSource.json.length : 'result' in this.dataSource ? this.dataSource.count : this.dataSource.length;\n            if (this.pageSettings.pageSizes.indexOf('All') === -1 && this.pageSettings.pageSize !== count) {\n              this.pagerModule.pagerObj.isAllPage = false;\n            } else {\n              this.setProperties({\n                pageSettings: {\n                  pageSize: count\n                }\n              }, true);\n              this.pagerModule.pagerObj.setProperties({\n                pageSize: count\n              }, true);\n            }\n          }\n        }\n        if (this.allowSelection && this.isPersistSelection && !(requestPendingState && requestPendingState.isPending)) {\n          this.clearSelection();\n        }\n        if (!isNullOrUndefined(this.dataSource) && this.dataSource.result) {\n          this.isVirtualAdaptive = false;\n        }\n        if (Object.getPrototypeOf(newProp).deepWatch) {\n          var pKeyField = this.getPrimaryKeyFieldNames()[0];\n          for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n            this.setRowData(getValue(pKeyField, this.dataSource[props[parseInt(i.toString(), 10)]]), this.dataSource[props[parseInt(i.toString(), 10)]]);\n          }\n        } else if (requestPendingState.isPending) {\n          var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n          var names = requestPendingState.group || [];\n          if (names.length && !this.groupSettings.enableLazyLoading && !(gResult.length && gResult[0].field)) {\n            for (var i = 0; i < names.length; i++) {\n              gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)], requestPendingState.aggregates || []);\n            }\n          }\n          this.dataSource = {\n            result: gResult,\n            count: this.dataSource.count,\n            aggregates: this.dataSource.aggregates\n          };\n          this.getDataModule().setState({});\n          requestPendingState.resolver(this.dataSource);\n        } else {\n          if (!isNullOrUndefined(this.dataSource) && this.dataSource.result && this.dataSource.count && this.groupSettings.columns.length) {\n            var gResult = this.dataSource.result;\n            var names = this.groupSettings.columns;\n            if (names.length && !(gResult.length && gResult[0].field)) {\n              for (var i = 0; i < names.length; i++) {\n                gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)]);\n              }\n            }\n            this.dataSource = {\n              result: gResult,\n              count: this.dataSource.count\n            };\n          }\n          this.getDataModule().setState({\n            isDataChanged: false\n          });\n          this.notify(events.dataSourceModified, {});\n          if (!requireGridRefresh) {\n            this.renderModule.refresh();\n            if (this.isCheckBoxSelection) {\n              this.notify(events.beforeRefreshOnDataChange, {});\n            }\n          }\n        }\n        this.scrollRefresh();\n        break;\n      case 'enableHover':\n        // eslint-disable-next-line no-case-declarations\n        var action = newProp.enableHover ? addClass : removeClass;\n        action([this.element], 'e-gridhover');\n        break;\n      case 'selectedRowIndex':\n        if (!this.isSelectedRowIndexUpdating) {\n          this.selectRow(newProp.selectedRowIndex);\n        }\n        this.isSelectedRowIndexUpdating = false;\n        break;\n      case 'resizeSettings':\n        this.widthService.setWidthToTable();\n        break;\n      case 'enableAdaptiveUI':\n        this.notify(events.setFullScreenDialog, {});\n        break;\n      case 'rowRenderingMode':\n        this.enableVerticalRendering();\n        this.notify(events.rowModeChange, {});\n        this.refresh();\n        break;\n      case 'enableStickyHeader':\n        this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n        break;\n    }\n  };\n  Grid.prototype.maintainSelection = function (index) {\n    var _this_1 = this;\n    if (index !== -1) {\n      var fn_1 = function () {\n        _this_1.selectRow(index);\n        _this_1.off(events.contentReady, fn_1);\n      };\n      this.on(events.contentReady, fn_1, this);\n    }\n  };\n  /**\n   * @param {Object} prop - Defines the property\n   * @param {boolean} muteOnChange - Defines the mute on change\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.setProperties = function (prop, muteOnChange) {\n    _super.prototype.setProperties.call(this, prop, muteOnChange);\n    var filterSettings = 'filterSettings';\n    if (prop[\"\" + filterSettings] && this.filterModule && muteOnChange) {\n      this.filterModule.refreshFilter();\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} - Returns the tables count\n   */\n  Grid.prototype.getTablesCount = function () {\n    return this.tablesCount;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.updateDefaultCursor = function () {\n    var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n    var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n    var cols = this.getColumns();\n    for (var i = 0; i < headerCells.length; i++) {\n      var cell = headerCells[parseInt(i.toString(), 10)];\n      if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n        if (!cols[parseInt(i.toString(), 10)].allowReordering || !cols[parseInt(i.toString(), 10)].allowSorting || !cols[parseInt(i.toString(), 10)].allowGrouping) {\n          cell.classList.add('e-defaultcursor');\n        } else {\n          cell.classList.add('e-mousepointer');\n        }\n      }\n    }\n    for (var count = 0; count < stdHdrCell.length; count++) {\n      if (this.allowReordering) {\n        stdHdrCell[parseInt(count.toString(), 10)].classList.add('e-mousepointer');\n      }\n    }\n  };\n  Grid.prototype.updateColumnModel = function (columns, isRecursion) {\n    for (var i = 0, len = !isNullOrUndefined(columns) ? columns.length : 0; i < len; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.updateColumnModel(columns[parseInt(i.toString(), 10)].columns, true);\n      } else {\n        this.columnModel.push(columns[parseInt(i.toString(), 10)]);\n      }\n    }\n    if (isNullOrUndefined(isRecursion) || !isRecursion) {\n      this.updateLockableColumns();\n    }\n  };\n  Grid.prototype.getFrozenLeftCount = function () {\n    return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n  };\n  Grid.prototype.isFrozenGrid = function () {\n    return this.getFrozenColumns() !== 0 || this.frozenLeftColumns.length !== 0 || this.frozenRightColumns.length !== 0 || this.fixedColumns.length !== 0;\n  };\n  Grid.prototype.getFrozenMode = function () {\n    return this.frozenName;\n  };\n  Grid.prototype.updateLockableColumns = function () {\n    var cols = this.columnModel;\n    var frozenCount = 0;\n    var movableCount = 0;\n    var frozenColumns = this.getFrozenColumns();\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].lockColumn) {\n        if (i < frozenColumns) {\n          cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n          frozenCount++;\n        } else {\n          cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n          movableCount++;\n        }\n      }\n    }\n  };\n  Grid.prototype.checkLockColumns = function (cols) {\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].columns) {\n        this.checkLockColumns(cols[parseInt(i.toString(), 10)].columns);\n      } else if (cols[parseInt(i.toString(), 10)].lockColumn) {\n        this.lockcolPositionCount++;\n      }\n    }\n  };\n  /**\n   * @param {string} position - specifies position\n   * @returns {number} returns the width\n   * @hidden\n   */\n  Grid.prototype.leftrightColumnWidth = function (position) {\n    var cols = position === 'left' ? this.getFrozenLeftColumns() : position === 'right' ? this.getFrozenRightColumns() : [];\n    var width = 0;\n    cols.filter(function (col) {\n      if (col.visible) {\n        width += parseInt(col.width.toString(), 10);\n      }\n    });\n    return width;\n  };\n  /**\n   * Gets the columns from the Grid.\n   *\n   * @param {boolean} isRefresh - Defines the boolean whether to refresh\n   * @returns {Column[]} - returns the column\n   */\n  Grid.prototype.getColumns = function (isRefresh) {\n    var _this_1 = this;\n    var inview = this.inViewIndexes.map(function (v) {\n      return v - _this_1.groupSettings.columns.length;\n    }).filter(function (v) {\n      return v > -1;\n    });\n    var vLen = inview.length;\n    if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n      this.columnModel = [];\n      this.updateColumnModel(this.columns);\n    }\n    var columns = vLen === 0 ? this.columnModel : this.getVisibleColumns().slice(inview[0], inview[vLen - 1] + 1);\n    var left = [];\n    var right = [];\n    var movable = [];\n    var isLeftRightFrozen = this.enableColumnVirtualization && this.isPreparedFrozenColumns && vLen === 0;\n    if (isLeftRightFrozen) {\n      this.frozenRightColumns = [];\n      this.frozenLeftColumns = [];\n    }\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n        left.push(columns[parseInt(i.toString(), 10)]);\n        if (isLeftRightFrozen) {\n          this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n        }\n      } else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n        right.push(columns[parseInt(i.toString(), 10)]);\n        if (isLeftRightFrozen) {\n          this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n        }\n      } else {\n        movable.push(columns[parseInt(i.toString(), 10)]);\n      }\n    }\n    if (this.enableColumnVirtualization && this.isFrozenGrid()) {\n      if (this.frozenLeftColumns.length) {\n        left = this.frozenLeftColumns;\n      }\n      if (this.frozenRightColumns.length) {\n        right = this.frozenRightColumns;\n      }\n    }\n    return left.concat(movable).concat(right);\n  };\n  /**\n   * @private\n   * @param {string} stackedHeader - Defines the stacked header\n   * @param {Column[]} col - Defines the column\n   * @returns {Column} Returns the Column\n   */\n  Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n    for (var i = 0; i < col.length; i++) {\n      var individualColumn = col[parseInt(i.toString(), 10)];\n      if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n        this.stackedColumn = individualColumn;\n        break;\n      } else if (individualColumn.columns) {\n        this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n      }\n    }\n    return this.stackedColumn;\n  };\n  /**\n   * @private\n   * @returns {number[]} Returns the column indexes\n   */\n  Grid.prototype.getColumnIndexesInView = function () {\n    return this.inViewIndexes;\n  };\n  /**\n   * @private\n   * @returns {Query} - returns the query\n   */\n  Grid.prototype.getQuery = function () {\n    return this.query;\n  };\n  /**\n   * @private\n   * @returns {object} - returns the locale constants\n   */\n  Grid.prototype.getLocaleConstants = function () {\n    return this.defaultLocale;\n  };\n  /**\n   * @param {number[]} indexes - specifies the indexes\n   * @returns {void}\n   * @private\n   */\n  Grid.prototype.setColumnIndexesInView = function (indexes) {\n    this.inViewIndexes = indexes;\n  };\n  /**\n   * Gets the visible columns from the Grid.\n   *\n   * @returns {Column[]} returns the column\n   */\n  Grid.prototype.getVisibleColumns = function () {\n    return this.getCurrentVisibleColumns();\n  };\n  /**\n   * Gets the header div of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getHeaderContent = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * Sets the header div of the Grid to replace the old header.\n   *\n   * @param  {Element} element - Specifies the Grid header.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridHeaderContent = function (element) {\n    this.headerModule.setPanel(element);\n  };\n  /**\n   * Gets the content table of the Grid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getContentTable = function () {\n    return this.contentModule.getTable();\n  };\n  /**\n   * Sets the content table of the Grid to replace the old content table.\n   *\n   * @param  {Element} element - Specifies the Grid content table.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridContentTable = function (element) {\n    this.contentModule.setTable(element);\n  };\n  /**\n   * Gets the content div of the Grid.\n   *\n   * @returns {Element} Returns the element\n   */\n  Grid.prototype.getContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * Sets the content div of the Grid to replace the old Grid content.\n   *\n   * @param  {Element} element - Specifies the Grid content.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridContent = function (element) {\n    this.contentModule.setPanel(element);\n  };\n  /**\n   * Gets the header table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getHeaderTable = function () {\n    return this.headerModule.getTable();\n  };\n  /**\n   * Sets the header table of the Grid to replace the old one.\n   *\n   * @param  {Element} element - Specifies the Grid header table.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridHeaderTable = function (element) {\n    this.headerModule.setTable(element);\n  };\n  /**\n   * Gets the footer div of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFooterContent = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement;\n  };\n  /**\n   * Gets the footer table element of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getFooterContentTable = function () {\n    this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n    return this.footerElement.firstChild.firstChild;\n  };\n  /**\n   * Gets the pager of the Grid.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getPager = function () {\n    return this.gridPager; //get element from pager\n  };\n  /**\n   * Sets the pager of the Grid to replace the old pager.\n   *\n   * @param  {Element} element - Specifies the Grid pager.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setGridPager = function (element) {\n    this.gridPager = element;\n  };\n  /**\n   * Gets a row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   *\n   * @returns {Element} returns the element\n   */\n  Grid.prototype.getRowByIndex = function (index) {\n    if (this.enableVirtualization && this.groupSettings.enableLazyLoading) {\n      return this.lazyLoadRender.getRowByIndex(index);\n    } else {\n      return this.contentModule.getRowByIndex(index);\n    }\n  };\n  /**\n   * Gets a movable tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   *\n   * @returns {Element} returns the element\n    */\n  Grid.prototype.getMovableRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets a frozen tables row by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n    */\n  Grid.prototype.getFrozenRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Gets all the data rows of the Grid.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets a frozen right tables row element by index.\n   *\n   * @param  {number} index - Specifies the row index.\n   * @returns {Element} returns the element\n    */\n  Grid.prototype.getFrozenRightRowByIndex = function (index) {\n    return this.contentModule.getRowByIndex(index);\n  };\n  /**\n   * Get a row information based on cell\n   *\n   * @param {Element | EventTarget} target - specifies the element\n   *\n   * @returns {RowInfo} returns the row info\n   */\n  Grid.prototype.getRowInfo = function (target) {\n    var ele = target;\n    var args = {\n      target: target\n    };\n    if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse') && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n      var cell = closest(ele, '.' + literals.rowCell);\n      if (!cell) {\n        var row_1 = closest(ele, '.' + literals.row);\n        if (!isNullOrUndefined(row_1) && !row_1.classList.contains('e-addedrow')) {\n          var rowObj = this.getRowObjectFromUID(row_1.getAttribute('data-uid'));\n          var rowIndex = parseInt(row_1.getAttribute(literals.dataRowIndex), 10);\n          args = {\n            row: row_1,\n            rowData: rowObj.data,\n            rowIndex: rowIndex\n          };\n        }\n        return args;\n      }\n      var cellIndex = parseInt(cell.getAttribute(literals.dataColIndex), 10);\n      var row_2 = closest(cell, '.' + literals.row);\n      if (!isNullOrUndefined(cell) && !isNaN(cellIndex) && !isNullOrUndefined(row_2)) {\n        var rowIndex = parseInt(row_2.getAttribute(literals.dataRowIndex), 10);\n        var rows = this.contentModule.getRows();\n        var index = cellIndex + this.getIndentCount();\n        var rowsObject = rows.filter(function (r) {\n          return r.uid === row_2.getAttribute('data-uid');\n        });\n        var rowData = {};\n        var column = void 0;\n        if (Object.keys(rowsObject).length) {\n          rowData = rowsObject[0].data;\n          column = rowsObject[0].cells[parseInt(index.toString(), 10)].column;\n        }\n        args = {\n          cell: cell,\n          cellIndex: cellIndex,\n          row: row_2,\n          rowIndex: rowIndex,\n          rowData: rowData,\n          column: column,\n          target: target\n        };\n      }\n    }\n    return args;\n  };\n  /**\n   * Gets the Grid's movable content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n    */\n  Grid.prototype.getMovableRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets the Grid's frozen right content rows from frozen grid.\n   *\n   * @returns {Element[]} returns the element\n    */\n  Grid.prototype.getFrozenRightRows = function () {\n    return this.contentModule.getRowElements();\n  };\n  /**\n   * Gets all the Grid's data rows.\n   *\n   * @returns {Element[]} returns the element\n   */\n  Grid.prototype.getDataRows = function () {\n    return this.getAllDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd - specifies includeAdd\n   * @returns {Element[]} returns the element\n   * @hidden\n   */\n  Grid.prototype.getAllDataRows = function (includeAdd) {\n    if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n      return [];\n    }\n    var tbody = this.getContentTable().querySelector(literals.tbody);\n    var rows = [].slice.call(tbody.children);\n    if (this.editSettings.showAddNewRow) {\n      if (rows[0].classList.contains('e-addedrow')) {\n        rows.shift();\n      } else if (rows[rows.length - 1].classList.contains('e-addedrow')) {\n        rows.pop();\n      }\n    }\n    if (this.frozenRows) {\n      var hdrTbody = this.getHeaderTable().querySelector(literals.tbody);\n      var freezeRows = [].slice.call(hdrTbody.children);\n      rows = this.addMovableRows(freezeRows, rows);\n      if (this.editSettings.showAddNewRow && freezeRows[0].classList.contains('e-addedrow')) {\n        freezeRows.shift();\n      }\n    }\n    var dataRows = this.generateDataRows(rows, includeAdd);\n    return dataRows;\n  };\n  /**\n   * @param {HTMLElement[]} fRows - Defines the frozen Rows\n   * @param {HTMLElement[]} mrows - Defines the movable Rows\n   * @returns {HTMLElement[]} Returns the element\n   * @hidden\n   */\n  Grid.prototype.addMovableRows = function (fRows, mrows) {\n    for (var i = 0, len = mrows.length; i < len; i++) {\n      fRows.push(mrows[parseInt(i.toString(), 10)]);\n    }\n    return fRows;\n  };\n  Grid.prototype.generateDataRows = function (rows, includAdd) {\n    var dRows = [];\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if (rows[parseInt(i.toString(), 10)].classList.contains(literals.row) && (!rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow') || includAdd)) {\n        if (this.isCollapseStateEnabled()) {\n          dRows[parseInt(rows[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10)] = rows[parseInt(i.toString(), 10)];\n        } else {\n          dRows.push(rows[parseInt(i.toString(), 10)]);\n        }\n      }\n    }\n    return dRows;\n  };\n  /**\n   * Gets all the Grid's movable table data rows.\n   *\n   * @returns {Element[]} Returns the element\n    */\n  Grid.prototype.getMovableDataRows = function () {\n    return this.getAllMovableDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n    * @hidden\n   */\n  Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n    return this.getAllDataRows(includeAdd);\n  };\n  /**\n   * Gets all the Grid's frozen table data rows.\n   *\n   * @returns {Element[]} returns the element\n    */\n  Grid.prototype.getFrozenDataRows = function () {\n    return this.getAllFrozenDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n    * @hidden\n   */\n  Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n    return this.getAllDataRows(includeAdd);\n  };\n  /**\n   * Gets all the Grid's frozen right table data rows.\n   *\n   * @returns {Element[]} Returns the Element\n    */\n  Grid.prototype.getFrozenRightDataRows = function () {\n    return this.getAllFrozenRightDataRows();\n  };\n  /**\n   * @param {boolean} includeAdd Defines the include add in boolean\n   * @returns {Element[]} Returns the element\n    * @hidden\n   */\n  Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n    return this.getAllDataRows(includeAdd);\n  };\n  /**\n   * Updates particular cell value based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {string } field - Specifies the field name which you want to update.\n   * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setCellValue = function (key, field, value) {\n    var cells = 'cells';\n    var rowData = 'data';\n    var rowIdx = 'index';\n    var rowuID = 'uid';\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    var cell = new CellRenderer(this, this.serviceLocator);\n    var fieldIdx = this.getColumnIndexByField(field);\n    var col = this.getColumnByField(field);\n    var rowObjects = this.contentModule.getRows();\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[\"\" + rowuID] + ']') : null;\n    if (!isNullOrUndefined(tr)) {\n      if (typeof value === 'string') {\n        value = this.sanitize(value);\n      }\n      setValue(field, value, selectedRow[\"\" + rowData]);\n      var td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)] : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n      if (!isNullOrUndefined(td)) {\n        var Idx = 0;\n        if (this.groupSettings.columns.length) {\n          fieldIdx = fieldIdx + this.groupSettings.columns.length;\n        }\n        if (this.childGrid || this.detailTemplate) {\n          fieldIdx++;\n        }\n        if (this.isRowDragable()) {\n          fieldIdx++;\n        }\n        var sRow = selectedRow[\"\" + cells][fieldIdx - Idx];\n        cell.refreshTD(td, sRow, selectedRow[\"\" + rowData], {\n          index: selectedRow[\"\" + rowIdx]\n        });\n        if (this.isReact) {\n          td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)] : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n        }\n        if (this.aggregates.length > 0) {\n          this.notify(events.refreshFooterRenderer, {});\n          if (this.groupSettings.columns.length > 0) {\n            this.notify(events.groupAggregates, {});\n          }\n        }\n        /* tslint:disable:no-string-literal */\n        if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n          selectedRow['changes'][\"\" + field] = value;\n        }\n        /* tslint:disable:no-string-literal */\n        this.trigger(events.queryCellInfo, {\n          cell: td,\n          column: col,\n          data: selectedRow[\"\" + rowData]\n        });\n        if (this.isReact && td.getAttribute('tabindex') === '0' && td.classList.contains('e-focused')) {\n          td.focus();\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @param {boolean} renderTemplates - Defines renderTemplates need to invoke\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid, renderTemplates) {\n    var _this_1 = this;\n    if (this.isReact) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.clearTemplate(['columnTemplate'], undefined, function () {\n        var isChildGrid = _this_1.childGrid && _this_1.element.querySelectorAll('.e-childgrid').length ? true : false;\n        var rows = isChildGrid ? _this_1.getContentTable().querySelectorAll('.e-row') : _this_1.getDataRows();\n        _this_1.refreshReactTemplateTD(rows, isChildGrid);\n        if (renderTemplates) {\n          _this_1.renderTemplates();\n        }\n      });\n    }\n  };\n  /**\n   * @param {Element[] | NodeListOf<Element>} rows - Defines the rows\n   * @param {boolean} isChildGrid - Defines whether it is a Hierarchy Grid.\n   * @param {boolean} isFrozen - Defines whether it is a Frozen Grid\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactTemplateTD = function (rows, isChildGrid, isFrozen) {\n    var cells = 'cells';\n    var rowIdx = 'index';\n    var indent = this.getIndentCount();\n    var childIndent = 0;\n    var isChildRow = false;\n    for (var j = 0; j < rows.length; j++) {\n      var rowsObj = this.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n      if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid')) {\n        var gridObj = parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid').ej2_instances[0];\n        rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n        childIndent = gridObj.getIndentCount();\n        isChildRow = true;\n      }\n      if (rowsObj && rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index) && !rows[parseInt(j.toString(), 10)].classList.contains('e-editedrow')) {\n        for (var i = 0; i < rowsObj[\"\" + cells].length; i++) {\n          var cell = rowsObj[\"\" + cells][parseInt(i.toString(), 10)];\n          if (cell.isTemplate) {\n            var cellRenderer = new CellRenderer(this, this.serviceLocator);\n            var td = isChildGrid ? rows[parseInt(j.toString(), 10)].children[cell.index + (isChildRow ? childIndent : indent)] : this.getCellFromIndex(j, isFrozen ? cell.index : i - indent);\n            cellRenderer.refreshTD(td, cell, rowsObj.data, {\n              index: rowsObj[\"\" + rowIdx]\n            });\n          }\n        }\n      }\n      isChildRow = false;\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshGroupCaptionFooterTemplate = function () {\n    var isChildGrid = this.childGrid && this.element.querySelectorAll('.e-childgrid').length ? true : false;\n    var rows = this.getContentTable().querySelectorAll('.e-groupcaptionrow, .e-groupfooterrow');\n    for (var i = 0; i < rows.length; i++) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      var gridObj = this;\n      var rowsObj = this.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n      if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid')) {\n        gridObj = parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid').ej2_instances[0];\n        rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n      }\n      if (rowsObj) {\n        var cells = rowsObj.cells.filter(function (cell) {\n          return cell.isDataCell;\n        });\n        var args = {\n          cells: cells,\n          data: rowsObj.data,\n          dataUid: rowsObj.uid\n        };\n        gridObj.notify(events.refreshAggregateCell, args);\n      }\n    }\n  };\n  /**\n   * @param {string} columnUid - Defines column uid\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n    if (this.isReact) {\n      var cells = 'cells';\n      var rowsObj = this.headerModule.rows;\n      var cellIndex = this.getNormalizedColumnIndex(columnUid);\n      var _loop_1 = function (j) {\n        var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n        if (cell && cell.column.uid === columnUid) {\n          var headerCellRenderer = new HeaderCellRenderer(this_1, this_1.serviceLocator);\n          var td = parentsUntil(this_1.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n          headerCellRenderer.refresh(cell, td);\n          var cols = this_1.sortSettings.columns;\n          var columnIndex = cols.findIndex(function (col) {\n            return col.field === cell.column.field;\n          });\n          if (columnIndex !== -1) {\n            var header = this_1.getColumnHeaderByField(cell.column.field);\n            this_1.ariaService.setSort(header, cols[parseInt(columnIndex.toString(), 10)].direction.toLowerCase());\n            if (cols.length > 1) {\n              header.querySelector('.e-headercelldiv').insertBefore(this_1.createElement('span', {\n                className: 'e-sortnumber',\n                innerHTML: (columnIndex + 1).toString()\n              }), header.querySelector('.e-headertext'));\n            }\n            var filterElement = header.querySelector('.e-sortfilterdiv');\n            if (cols[parseInt(columnIndex.toString(), 10)].direction === 'Ascending') {\n              classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n            } else {\n              classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n            }\n          }\n        }\n      };\n      var this_1 = this;\n      for (var j = 0; j < rowsObj.length; j++) {\n        _loop_1(j);\n      }\n    }\n  };\n  /**\n   * Updates and refresh the particular row values based on the given primary key value.\n   * > Primary key column must be specified using `columns.isPrimaryKey` property.\n   *\n   * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n   * @param {Object} rowData - To update new data for the particular row.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.setRowData = function (key, rowData) {\n    var rowuID = 'uid';\n    var rowObjects = this.contentModule.getRows();\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n      rowObjects = rowObjects.filter(function (row) {\n        return row.isDataRow;\n      });\n    }\n    var selectedRow = rowObjects.filter(function (r) {\n      return getValue(pkName, r.data) === key;\n    })[0];\n    var selectRowEle = selectedRow ? [].slice.call(this.element.querySelectorAll('[data-uid=' + selectedRow[\"\" + rowuID] + ']')) : undefined;\n    if (!isNullOrUndefined(selectedRow) && selectRowEle.length) {\n      selectedRow.changes = rowData;\n      if (this.frozenRows) {\n        var fRowTr = this.getRowsObject()[selectedRow.index];\n        this.setFrozenRowData(fRowTr, rowData);\n      } else {\n        this.setFrozenRowData(selectedRow, rowData);\n      }\n      if (this.aggregates.length > 0) {\n        this.notify(events.refreshFooterRenderer, {});\n        if (this.groupSettings.columns.length > 0) {\n          this.notify(events.groupAggregates, {});\n        }\n      }\n    } else {\n      return;\n    }\n  };\n  Grid.prototype.setFrozenRowData = function (fTr, rowData) {\n    var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n    fTr.changes = rowData;\n    refreshForeignData(fTr, this.getForeignKeyColumns(), fTr.changes);\n    rowRenderer.refresh(fTr, this.getColumns(), true);\n  };\n  /**\n   * Gets a cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   *\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n    var col = this.getColumnByIndex(columnIndex);\n    return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n  };\n  /**\n   * Gets a movable table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   *\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n    return this.getCellFromIndex(rowIndex, columnIndex);\n  };\n  /**\n   * Gets a frozen right table cell by row and column index.\n   *\n   * @param  {number} rowIndex - Specifies the row index.\n   * @param  {number} columnIndex - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n    return this.getCellFromIndex(rowIndex, columnIndex);\n  };\n  /**\n   * Gets a column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   *\n   * @returns {Element} Returns the Element\n   */\n  Grid.prototype.getColumnHeaderByIndex = function (index) {\n    return this.getHeaderTable().getElementsByClassName('e-headercell')[parseInt(index.toString(), 10)];\n  };\n  /**\n   * Gets a movable column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n    return this.getColumnHeaderByIndex(index);\n  };\n  /**\n   * Gets a frozen right column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n    return this.getColumnHeaderByIndex(index);\n  };\n  /**\n   * Gets a frozen left column header by column index.\n   *\n   * @param  {number} index - Specifies the column index.\n   * @returns {Element} Returns the Element\n    */\n  Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n    return this.getColumnHeaderByIndex(index);\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @returns {Row<Column>} Returns the row object\n   * @hidden\n   */\n  Grid.prototype.getRowObjectFromUID = function (uid) {\n    var rows = this.contentModule.getRows();\n    var row = this.rowObject(rows, uid);\n    if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n      row = this.rowObject(this.vRows, uid);\n      return row;\n    }\n    return row;\n  };\n  Grid.prototype.rowObject = function (rows, uid) {\n    if (rows) {\n      for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n        var row = rows_1[_i];\n        if (row.uid === uid) {\n          return row;\n        }\n      }\n    }\n    return null;\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n   */\n  Grid.prototype.getRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n    */\n  Grid.prototype.getMovableRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * @hidden\n   * @returns {Row<Column>[]} Returns the Row object\n    */\n  Grid.prototype.getFrozenRightRowsObject = function () {\n    return this.contentModule.getRows();\n  };\n  /**\n   * Gets a column header by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getColumnHeaderByField = function (field) {\n    var column = this.getColumnByField(field);\n    return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n  };\n  /**\n   * Gets a column header by UID.\n   *\n   * @param {string} uid - Specifies the column uid.\n   *\n   * @returns {Element} - Returns the element\n   */\n  Grid.prototype.getColumnHeaderByUid = function (uid) {\n    var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n    return element ? element.parentElement : undefined;\n  };\n  /**\n   * @hidden\n   * @param {number} index - Defines the index\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByIndex = function (index) {\n    var column;\n    this.getColumns().some(function (col, i) {\n      column = col;\n      return i === index;\n    });\n    return column;\n  };\n  /**\n   * Gets a Column by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets a column index by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {number} Returns the index by field\n   */\n  Grid.prototype.getColumnIndexByField = function (field) {\n    var cols = this.getColumns();\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].field === field) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  /**\n   * Gets a column by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   * @param  {boolean} isColumns - Defines the all columns.\n   *\n   * @returns {Column} Returns the column\n   */\n  Grid.prototype.getColumnByUid = function (uid, isColumns) {\n    var cols = isColumns ? this.columns : this.getColumns();\n    return iterateArrayOrObject(cols.concat(this.getStackedColumns(this.columns)), function (item) {\n      if (item.uid === uid) {\n        return item;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * @param {Column[]} columns - Defines the columns\n   * @param {Column[]} stackedColumn - Defines the stacked columns\n   * @returns {Column[]} Returns the columns\n   * @hidden\n   */\n  Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n    if (stackedColumn === void 0) {\n      stackedColumn = [];\n    }\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n      var column = columns_1[_i];\n      if (column.columns) {\n        stackedColumn.push(column);\n        this.getStackedColumns(column.columns, stackedColumn);\n      }\n    }\n    return stackedColumn;\n  };\n  /**\n   * Gets a column index by UID.\n   *\n   * @param  {string} uid - Specifies the column UID.\n   *\n   * @returns {number} Returns the column by index\n   */\n  Grid.prototype.getColumnIndexByUid = function (uid) {\n    var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n      if (item.uid === uid) {\n        return index;\n      }\n      return undefined;\n    })[0];\n    return !isNullOrUndefined(index) ? index : -1;\n  };\n  /**\n   * Gets UID by column name.\n   *\n   * @param  {string} field - Specifies the column name.\n   *\n   * @returns {string} Returns the column by field\n   */\n  Grid.prototype.getUidByColumnField = function (field) {\n    return iterateArrayOrObject(this.getColumns(), function (item) {\n      if (item.field === field) {\n        return item.uid;\n      }\n      return undefined;\n    })[0];\n  };\n  /**\n   * Gets column index by column uid value.\n   *\n   * @private\n   * @param  {string} uid - Specifies the column uid.\n   * @returns {number} Returns the column by field\n   */\n  Grid.prototype.getNormalizedColumnIndex = function (uid) {\n    var index = this.getColumnIndexByUid(uid);\n    return index + this.getIndentCount();\n  };\n  /**\n   * Gets indent cell count.\n   *\n   * @private\n   * @returns {number} Returns the indent count\n   */\n  Grid.prototype.getIndentCount = function () {\n    var index = 0;\n    if (this.allowGrouping) {\n      index += this.groupSettings.columns.length;\n    }\n    if (this.isDetail()) {\n      index++;\n    }\n    if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n      index++;\n    }\n    /**\n     * TODO: index normalization based on the stacked header, grouping and detailTemplate\n     * and frozen should be handled here\n     */\n    return index;\n  };\n  /**\n   * Gets the collection of column fields.\n   *\n   * @returns {string[]} Returns the Field names\n   */\n  Grid.prototype.getColumnFieldNames = function () {\n    var columnNames = [];\n    var column;\n    for (var i = 0, len = this.getColumns().length; i < len; i++) {\n      column = this.getColumns()[parseInt(i.toString(), 10)];\n      if (column.visible) {\n        columnNames.push(column.field);\n      }\n    }\n    return columnNames;\n  };\n  /**\n   * Gets a compiled row template.\n   *\n   * @returns {Function} Returns the row TEmplate\n   * @private\n   */\n  Grid.prototype.getRowTemplate = function () {\n    return this.rowTemplateFn;\n  };\n  /**\n   * Gets a compiled empty Record template.\n   *\n   * @returns {Function} Returns the empty Record template\n   * @private\n   */\n  Grid.prototype.getEmptyRecordTemplate = function () {\n    return this.emptyRecordTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function} Returns the Detail template\n   */\n  Grid.prototype.getDetailTemplate = function () {\n    return this.detailTemplateFn;\n  };\n  /**\n   * Gets a compiled detail row template.\n   *\n   * @private\n   * @returns {Function}Returns the Edit template\n   */\n  Grid.prototype.getEditTemplate = function () {\n    return this.editTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit header template.\n   *\n   * @private\n   * @returns {Function} returns template function\n   */\n  Grid.prototype.getEditHeaderTemplate = function () {\n    return this.editHeaderTemplateFn;\n  };\n  /**\n   * Gets a compiled dialog edit footer template.\n   *\n   * @private\n   * @returns {Function} Returns the Footer template\n   */\n  Grid.prototype.getEditFooterTemplate = function () {\n    return this.editFooterTemplateFn;\n  };\n  /**\n   * Get the names of the primary key columns of the Grid.\n   *\n   * @returns {string[]} Returns the field names\n   */\n  Grid.prototype.getPrimaryKeyFieldNames = function () {\n    var keys = [];\n    for (var k = 0; k < this.columnModel.length; k++) {\n      if (this.columnModel[parseInt(k.toString(), 10)].isPrimaryKey) {\n        keys.push(this.columnModel[parseInt(k.toString(), 10)].field);\n      }\n    }\n    return keys;\n  };\n  /**\n   * Refreshes the Grid header and content.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refresh = function () {\n    if (!this.isDestroyed) {\n      this.isManualRefresh = true;\n      this.headerModule.refreshUI();\n      this.updateStackedFilter();\n      this.renderModule.refresh();\n    }\n  };\n  /**\n   * Refreshes the Grid header.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refreshHeader = function () {\n    this.headerModule.refreshUI();\n  };\n  /**\n   * Gets the collection of selected rows.\n   *\n   * @returns {Element[]} Returns the element\n   */\n  Grid.prototype.getSelectedRows = function () {\n    return this.selectionModule ? this.selectionModule.selectedRecords : [];\n  };\n  /**\n   * Gets the collection of selected row indexes.\n   *\n   * @returns {number[]} Returns the Selected row indexes\n   */\n  Grid.prototype.getSelectedRowIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n  };\n  /**\n   * Gets the collection of selected row and cell indexes.\n   *\n   * @returns {number[]} Returns the Selected row cell indexes\n   */\n  Grid.prototype.getSelectedRowCellIndexes = function () {\n    return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n  };\n  /**\n   * Gets the collection of selected records.\n   *\n   * @returns {Object[]} Returns the selected records\n   * @isGenericType true\n   */\n  Grid.prototype.getSelectedRecords = function () {\n    return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n  };\n  /**\n   * Gets the collection of selected columns uid.\n   *\n   * @returns {string[]} Returns the selected column uid\n   * @isGenericType true\n   */\n  Grid.prototype.getSelectedColumnsUid = function () {\n    var _this_1 = this;\n    var uid = [];\n    if (this.selectionModule) {\n      this.selectionModule.selectedColumnsIndexes.filter(function (i) {\n        return uid.push(_this_1.getColumns()[parseInt(i.toString(), 10)].uid);\n      });\n    }\n    return uid;\n  };\n  /**\n   * Gets the data module.\n   *\n   * @returns {Data} Returns the data\n   */\n  Grid.prototype.getDataModule = function () {\n    return this.renderModule.data;\n  };\n  /**\n   * Shows a column by its column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} showBy - Defines the column key either as field name or header text.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showColumns = function (keys, showBy) {\n    showBy = showBy ? showBy : 'headerText';\n    this.showHider.show(keys, showBy);\n  };\n  /**\n   * Hides a column by column name.\n   *\n   * @param  {string|string[]} keys - Defines a single or collection of column names.\n   * @param  {string} hideBy - Defines the column key either as field name or header text.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideColumns = function (keys, hideBy) {\n    hideBy = hideBy ? hideBy : 'headerText';\n    this.showHider.hide(keys, hideBy);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen column\n   */\n  Grid.prototype.getFrozenColumns = function () {\n    return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Right column count\n   */\n  Grid.prototype.getFrozenRightColumnsCount = function () {\n    return this.frozenRightCount || this.rightcount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the Frozen Left column\n   */\n  Grid.prototype.getFrozenLeftColumnsCount = function () {\n    return this.frozenLeftCount || this.leftcount;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the movable column count\n   */\n  Grid.prototype.getMovableColumnsCount = function () {\n    return this.movableCount || this.movablecount;\n  };\n  Grid.prototype.updateFrozenColumnsWidth = function () {\n    if (this.isFrozenGrid() && !this.enableColumnVirtualization) {\n      var gcol = this.getColumns();\n      var isAutoWidth = true;\n      var autoCol_1 = 0;\n      var difference_1 = 0;\n      var autoWidth_1 = 0;\n      var isFrozenAuto = gcol.some(function (data) {\n        return (data.freeze === 'Left' || data.freeze === 'Right' || data.freeze === 'Fixed' || data.isFrozen) && data.width === 'auto';\n      });\n      var _loop_2 = function (i) {\n        var col = gcol[parseInt(i.toString(), 10)];\n        if (isNullOrUndefined(col.width) && (col.freeze === 'Left' || col.freeze === 'Right' || col.freeze === 'Fixed' || col.isFrozen)) {\n          col.width = Math.max(200, col.minWidth ? parseFloat(col.minWidth.toString()) : 0);\n          if (!isNullOrUndefined(col.maxWidth) && parseFloat(col.maxWidth.toString()) < col.width) {\n            col.width = col.maxWidth;\n          }\n        }\n        if (col.width === 'auto' && isFrozenAuto) {\n          var tWidth_1 = 0;\n          if (isAutoWidth) {\n            gcol.filter(function (cols) {\n              if (cols.visible) {\n                if (cols.width === 'auto') {\n                  autoCol_1++;\n                }\n                if (cols.width !== 'auto') {\n                  var width = !isNullOrUndefined(cols.width) ? parseFloat(cols.width.toString()) : Math.max(200, cols.minWidth ? parseFloat(cols.minWidth.toString()) : 0);\n                  tWidth_1 += width;\n                }\n              }\n            });\n            var gWidth = this_2.isPercentageWidthGrid() || this_2.width === 'auto' ? this_2.element.getBoundingClientRect().width : parseFloat(this_2.width.toString());\n            difference_1 = this_2.height === 'auto' ? gWidth - tWidth_1 : gWidth - tWidth_1 - getScrollBarWidth();\n            if (difference_1 < 0) {\n              difference_1 = 0;\n            }\n            autoWidth_1 = parseFloat((difference_1 / autoCol_1).toString());\n            gcol.filter(function (col) {\n              if (col.visible) {\n                if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                  difference_1 = difference_1 - parseFloat(col.minWidth.toString());\n                  autoCol_1--;\n                }\n              }\n            });\n            isAutoWidth = false;\n          }\n          if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n            col.width = parseFloat(col.minWidth.toString());\n          } else {\n            col.width = difference_1 / autoCol_1;\n          }\n        }\n      };\n      var this_2 = this;\n      for (var i = 0; i < gcol.length; i++) {\n        _loop_2(i);\n      }\n    }\n  };\n  Grid.prototype.refreshSplitFrozenColumn = function () {\n    this.splitFrozenCount(this.columns);\n    this.updateFrozenColumnsWidth();\n    this.isAutoGenerateColumns = true;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.setFrozenCount = function () {\n    this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n    this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n    this.frozenLeftColumns = [];\n    this.frozenRightColumns = [];\n    this.movableColumns = [];\n    this.fixedColumns = [];\n    this.splitFrozenCount(this.columns);\n    this.leftcount = this.frozenLeftCount;\n    this.rightcount = this.frozenRightCount;\n    this.movablecount = this.movableCount;\n    // if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n    //     this.setProperties({ frozenColumns: 0 }, true);\n    // }\n    if (this.frozenLeftCount && !this.frozenRightCount) {\n      this.frozenName = 'Left';\n    } else if (this.frozenRightCount && !this.frozenLeftCount) {\n      this.frozenName = 'Right';\n    } else if (this.frozenLeftCount && this.frozenRightCount) {\n      this.frozenName = 'Left-Right';\n    } else if (this.frozenColumns || this.frozenRows) {\n      this.frozenName = 'Left';\n    } else {\n      this.frozenName = undefined;\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen left count\n   */\n  Grid.prototype.getVisibleFrozenLeftCount = function () {\n    return this.visibleFrozenLeft;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible Frozen Right count\n   */\n  Grid.prototype.getVisibleFrozenRightCount = function () {\n    return this.visibleFrozenRight;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible movable count\n   */\n  Grid.prototype.getVisibleMovableCount = function () {\n    return this.visibleMovable;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getFrozenRightColumns = function () {\n    return this.frozenRightColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getFrozenLeftColumns = function () {\n    return this.frozenLeftColumns;\n  };\n  /**\n   * @hidden\n   * @returns {Column[]} Returns the column\n   */\n  Grid.prototype.getMovableColumns = function () {\n    return this.movableColumns;\n  };\n  Grid.prototype.splitStackedColumns = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n      } else {\n        if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n          this.leftcount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n          this.rightcount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenFixed++;\n          }\n          this.fixedcount++;\n        } else {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleMovable++;\n          }\n          this.movablecount++;\n        }\n      }\n    }\n  };\n  Grid.prototype.pushStackedColumns = function (columns, index, arr, col, stackedcol) {\n    arr[parseInt(index.toString(), 10)] = col.headerText;\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        index = index + 1;\n        this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, index, arr, columns[parseInt(i.toString(), 10)], stackedcol);\n        index = index - 1;\n      } else {\n        var stockCol = [];\n        stockCol = arr.slice().slice(0, index + 1);\n        if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n          this.stackedLeft.push(stockCol);\n          this.stackedarrayLeft.push(columns[parseInt(i.toString(), 10)]);\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n          this.stackedRight.push(stockCol);\n          this.stackedarrayRight.push(columns[parseInt(i.toString(), 10)]);\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n          this.stackedFixed.push(stockCol);\n          this.stackedarrayFixed.push(columns[parseInt(i.toString(), 10)]);\n        } else {\n          this.stackedMovable.push(stockCol);\n          this.stackedarrayMovable.push(columns[parseInt(i.toString(), 10)]);\n        }\n      }\n    }\n  };\n  Grid.prototype.pushallcol = function (text, text1, col, columns, isTrue) {\n    if (col.headerText === text1) {\n      if (isTrue) {\n        col.columns.push(columns);\n      } else {\n        col.columns.push({\n          headerText: text,\n          columns: []\n        });\n      }\n    } else {\n      if (col.columns && col.columns.length) {\n        for (var i = 0; i < col.columns.length; i++) {\n          this.pushallcol(text, text1, col.columns[parseInt(i.toString(), 10)], columns, isTrue);\n        }\n      }\n    }\n  };\n  Grid.prototype.resetStackedColumns = function (headercol, gridcolumns, freeze) {\n    var col = {};\n    var tempHead = [];\n    for (var i = 1; i <= headercol.length; i++) {\n      var firstcol = headercol[i - 1];\n      for (var j = 0; j < firstcol.length; j++) {\n        if (!col.columns && i === 1) {\n          col = {\n            headerText: firstcol[parseInt(j.toString(), 10)],\n            columns: []\n          };\n          tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n        } else {\n          if (tempHead.indexOf(firstcol[parseInt(j.toString(), 10)]) === -1) {\n            this.pushallcol(firstcol[parseInt(j.toString(), 10)], firstcol[j - 1], col);\n            tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n          }\n        }\n        if (j === firstcol.length - 1) {\n          this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n          var count = 0;\n          while (count !== headercol.length - 1 && i !== headercol.length) {\n            if (firstcol.toString() === headercol[parseInt(i.toString(), 10)].toString()) {\n              i++;\n              this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n            }\n            count++;\n          }\n        }\n      }\n    }\n    if (freeze === 'Left') {\n      this.frozenLeftColumns.push(col);\n    } else if (freeze === 'Right') {\n      this.frozenRightColumns.push(col);\n    } else {\n      this.movableColumns.push(col);\n    }\n  };\n  Grid.prototype.splitFrozenCount = function (columns) {\n    if (this.frozenColumns || this.changedProperties && this.changedProperties.frozenColumns === 0) {\n      var cols = !this.enableColumnVirtualization || this.enableColumnVirtualization && this.isPreparedFrozenColumns ? this.enableColumnVirtualization && this.columnModel && this.columnModel.length ? this.columnModel : this.getColumns() : this.columns;\n      if (!this.changedProperties || this.changedProperties && !this.changedProperties.frozenColumns) {\n        for (var i = 0; i < cols.length; i++) {\n          if (this.frozenColumns > i) {\n            cols[parseInt(i.toString(), 10)].freeze = 'Left';\n          } else if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n            cols[parseInt(i.toString(), 10)].freeze = cols[parseInt(i.toString(), 10)].freeze;\n          } else {\n            cols[parseInt(i.toString(), 10)].freeze = undefined;\n          }\n        }\n      }\n    }\n    for (var i = 0; i < (!isNullOrUndefined(columns) ? columns.length : 0); i++) {\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.leftcount = 0;\n        this.rightcount = 0;\n        this.movablecount = 0;\n        this.fixedcount = 0;\n        var arr = [];\n        this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n        if (this.leftcount && !this.rightcount && !this.movablecount && !this.fixedcount) {\n          this.frozenLeftCount += this.leftcount;\n          this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else if (this.rightcount && !this.leftcount && !this.movablecount && !this.fixedcount) {\n          this.frozenRightCount += this.rightcount;\n          this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else if (this.movablecount && !this.leftcount && !this.rightcount && !this.fixedcount) {\n          this.movableCount += this.movablecount;\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else if (this.fixedcount && !this.leftcount && !this.rightcount && !this.movablecount) {\n          this.fixedCount += this.fixedcount;\n          this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.movableCount += this.movablecount;\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n        } else {\n          this.frozenLeftCount += this.leftcount;\n          this.frozenRightCount += this.rightcount;\n          this.movableCount += this.movablecount;\n          this.fixedCount += this.fixedcount;\n          this.leftcount = 0;\n          this.rightcount = 0;\n          this.movablecount = 0;\n          this.fixedcount = 0;\n          this.stackedLeft = [];\n          this.stackedRight = [];\n          this.stackedFixed = [];\n          this.stackedMovable = [];\n          this.stackedarrayLeft = [];\n          this.stackedarrayRight = [];\n          this.stackedarrayFixed = [];\n          this.stackedarrayMovable = [];\n          this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, 0, arr, columns[parseInt(i.toString(), 10)], {\n            headerText: columns[parseInt(i.toString(), 10)].headerText,\n            columns: []\n          });\n          if (this.stackedarrayLeft.length) {\n            this.resetStackedColumns(this.stackedLeft, this.stackedarrayLeft, 'Left');\n          }\n          if (this.stackedarrayRight.length) {\n            this.resetStackedColumns(this.stackedRight, this.stackedarrayRight, 'Right');\n          }\n          if (this.stackedarrayFixed.length) {\n            this.resetStackedColumns(this.stackedFixed, this.stackedarrayFixed, 'Fixed');\n          }\n          if (this.stackedarrayMovable.length) {\n            this.resetStackedColumns(this.stackedMovable, this.stackedarrayMovable, 'Movable');\n          }\n          this.stackedLeft = [];\n          this.stackedRight = [];\n          this.stackedMovable = [];\n          this.stackedFixed = [];\n          this.stackedarrayLeft = [];\n          this.stackedarrayRight = [];\n          this.stackedarrayMovable = [];\n          this.stackedarrayFixed = [];\n        }\n      } else {\n        if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenRight++;\n          }\n          this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.frozenRightCount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleFrozenLeft++;\n          }\n          this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.frozenLeftCount++;\n        } else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n          this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.fixedCount++;\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.movableCount++;\n        } else {\n          if (columns[parseInt(i.toString(), 10)].visible !== false) {\n            this.visibleMovable++;\n          }\n          this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n          this.movableCount++;\n        }\n      }\n    }\n    if (this.frozenLeftColumns.length) {\n      var cols = this.frozenLeftColumns[this.frozenLeftColumns.length - 1];\n      this.removeBorder(this.frozenLeftColumns);\n      this.frozenLeftBorderColumns(cols instanceof Column ? this.lastVisibleLeftCol(this.frozenLeftColumns) : cols);\n    }\n    if (this.frozenRightColumns.length) {\n      var cols = this.frozenRightColumns[0];\n      this.removeBorder(this.frozenRightColumns);\n      this.frozenRightBorderColumns(cols instanceof Column ? this.firstVisibleRightCol(this.frozenRightColumns) : cols);\n    }\n    if ((this.frozenLeftColumns.length || this.frozenRightColumns.length) && this.freezeColumnRefresh) {\n      var cols = this.frozenLeftColumns.concat(this.movableColumns).concat(this.frozenRightColumns);\n      this.setProperties({\n        columns: cols\n      }, true);\n      this.freezeColumnRefresh = false;\n    }\n  };\n  Grid.prototype.removeBorder = function (columns) {\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].columns && columns[parseInt(i.toString(), 10)].columns.length) {\n        if (columns[parseInt(i.toString(), 10)].border === 'Right' || columns[parseInt(i.toString(), 10)].border === 'Left') {\n          columns[parseInt(i.toString(), 10)].border = undefined;\n        }\n        this.removeBorder(columns[parseInt(i.toString(), 10)].columns);\n      } else {\n        if (columns[parseInt(i.toString(), 10)].border === 'Right' || columns[parseInt(i.toString(), 10)].border === 'Left') {\n          columns[parseInt(i.toString(), 10)].border = undefined;\n        }\n      }\n    }\n  };\n  Grid.prototype.isVisibleColumns = function (column, arr) {\n    if (column.columns && column.columns.length) {\n      for (var i = 0; i < column.columns.length; i++) {\n        this.isVisibleColumns(column.columns[parseInt(i.toString(), 10)], arr);\n        if (column.columns[parseInt(i.toString(), 10)].visible && isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].columns) && (!isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].freeze) || column.columns[parseInt(i.toString(), 10)].isFrozen)) {\n          arr.push('true');\n        }\n      }\n    } else {\n      if (column.visible && (!isNullOrUndefined(column.freeze) || column.isFrozen)) {\n        arr.push('true');\n      }\n    }\n  };\n  Grid.prototype.lastVisibleLeftCol = function (columns) {\n    var column;\n    for (var i = columns.length - 1; i >= 0; i--) {\n      var arr = [];\n      this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n      if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n        column = columns[parseInt(i.toString(), 10)];\n        break;\n      }\n    }\n    return column;\n  };\n  Grid.prototype.firstVisibleRightCol = function (columns) {\n    var column;\n    for (var i = 0; i < columns.length; i++) {\n      var arr = [];\n      this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n      if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n        column = columns[parseInt(i.toString(), 10)];\n        break;\n      }\n    }\n    return column;\n  };\n  Grid.prototype.frozenLeftBorderColumns = function (columns) {\n    if (isNullOrUndefined(columns)) {\n      return;\n    }\n    if (columns.columns && columns.columns.length) {\n      columns.border = 'Left';\n      var cols = columns.columns[columns.columns.length - 1];\n      this.frozenLeftBorderColumns(cols instanceof Column && cols.columns ? this.lastVisibleLeftCol(columns.columns) : cols);\n    } else {\n      columns.border = 'Left';\n    }\n  };\n  Grid.prototype.frozenRightBorderColumns = function (columns) {\n    if (isNullOrUndefined(columns)) {\n      return;\n    }\n    if (columns.columns && columns.columns.length) {\n      columns.border = 'Right';\n      var cols = columns.columns[0];\n      this.frozenRightBorderColumns(cols instanceof Column && cols.columns ? this.firstVisibleRightCol(columns.columns) : cols);\n    } else {\n      columns.border = 'Right';\n    }\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns the visible frozen columns count\n   */\n  Grid.prototype.getVisibleFrozenColumns = function () {\n    return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n  };\n  /**\n   * Get the current Filter operator and field.\n   *\n   * @returns {FilterUI} Returns the filter UI\n   */\n  Grid.prototype.getFilterUIInfo = function () {\n    return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n  };\n  Grid.prototype.getVisibleFrozenColumnsCount = function () {\n    var visibleFrozenColumns = 0;\n    var columns = this.columnModel;\n    for (var i = 0; i < this.frozenColumns; i++) {\n      if (columns[parseInt(i.toString(), 10)].visible) {\n        visibleFrozenColumns++;\n      }\n    }\n    if (this.frozenLeftCount || this.leftcount || this.frozenRightCount || this.rightcount) {\n      for (var i = 0; i < columns.length; i++) {\n        if (columns[parseInt(i.toString(), 10)].visible && (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].freeze === 'Right')) {\n          visibleFrozenColumns++;\n        }\n      }\n    }\n    return visibleFrozenColumns;\n  };\n  Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n    if (!this.frozenLeftCount && !this.leftcount && (!this.frozenRightCount || !this.rightcount)) {\n      for (var i = 0, len = cols.length; i < len; i++) {\n        if (cols[parseInt(i.toString(), 10)].columns) {\n          cnt = this.getVisibleFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt);\n        } else {\n          if (cols[parseInt(i.toString(), 10)].isFrozen && cols[parseInt(i.toString(), 10)].visible) {\n            cnt++;\n          }\n        }\n      }\n    }\n    return cnt;\n  };\n  Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n    for (var i = 0, len = !isNullOrUndefined(cols) ? cols.length : 0; i < len; i++) {\n      if (cols[parseInt(i.toString(), 10)].columns) {\n        cnt = this.getFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt, index);\n      } else {\n        if (cols[parseInt(i.toString(), 10)].isFrozen && index > this.frozenColumns - 1) {\n          cnt++;\n        }\n        index++;\n      }\n    }\n    return cnt;\n  };\n  /**\n   * Navigates to the specified target page.\n   *\n   * @param  {number} pageNo - Defines the page number to navigate.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.goToPage = function (pageNo) {\n    if (this.pagerModule) {\n      this.pagerModule.goToPage(pageNo);\n    }\n  };\n  /**\n   * Defines the text of external message.\n   *\n   * @param  {string} message - Defines the message to update.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.updateExternalMessage = function (message) {\n    if (this.pagerModule && !this.pagerTemplate) {\n      this.pagerModule.updateExternalMessage(message);\n    }\n  };\n  /**\n   * Sorts a column with the given options.\n   *\n   * @param {string} columnName - Defines the column name to be sorted.\n   * @param {SortDirection} direction - Defines the direction of sorting field.\n   * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n    if (this.sortModule) {\n      this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    }\n  };\n  /**\n   * Remove the existing columns along with the grid actions like sorting, filtering, searching, grouping, aggregate, etc., and grid will refresh with new columns based on the updated new data source.\n   * > * If no columns are specified while changing the data source, then the columns are auto generated in the Grid based on the list of columns in the updated data source.\n   *\n   * @param {Object | DataManager | DataResult} dataSource -  Assign the new datasource.\n   * @param {Column[] | string[] | ColumnModel[]} columns - Defines columns.\n   * @returns {void}\n   *\n   *\n   * ```typescript\n   * <button id=\"btn\">change dataSource </button>\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,  // you can define the datamanager here if you are binding a data through datamanager\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   * });\n   * gridObj.appendTo('#Grid');\n   * document.getElementById('btn').addEventListener(\"click\", function(){\n   * let newColumn: [\n   *     { field: 'CustomerID', headerText: 'Customer ID', width:100 },\n   *     { field: 'FirstName', headerText: 'Name' }];\n   * gridObj.changeDataSource(customerData, newColumn);\n   * });\n   * </script>\n   * ```\n   *\n   */\n  Grid.prototype.changeDataSource = function (dataSource, columns) {\n    this.isChangeDataSourceCall = true;\n    this.setProperties({\n      sortSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      filterSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      searchSettings: {\n        key: ''\n      }\n    }, true);\n    if (this.allowGrouping) {\n      this.setProperties({\n        groupSettings: {\n          columns: []\n        }\n      }, true);\n    }\n    if (columns && columns.length) {\n      this.setProperties({\n        columns: columns\n      }, true);\n    }\n    if (dataSource) {\n      if (isNullOrUndefined(columns)) {\n        this.setProperties({\n          columns: []\n        }, true);\n      }\n      this.setProperties({\n        dataSource: dataSource\n      }, true);\n    }\n    this.freezeRefresh();\n    this.isChangeDataSourceCall = false;\n  };\n  /**\n   * Clears all the sorted columns of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearSorting = function () {\n    if (this.sortModule) {\n      this.sortModule.clearSorting();\n    }\n  };\n  /**\n   * Remove sorted column by field name.\n   *\n   * @param {string} field - Defines the column field name to remove sort.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeSortColumn = function (field) {\n    if (this.sortModule) {\n      this.sortModule.removeSortColumn(field);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.clearGridActions = function () {\n    this.setProperties({\n      sortSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      filterSettings: {\n        columns: []\n      }\n    }, true);\n    this.setProperties({\n      searchSettings: {\n        key: ''\n      }\n    }, true);\n    if (this.allowGrouping) {\n      this.setProperties({\n        groupSettings: {\n          columns: []\n        }\n      }, false);\n    } else {\n      this.freezeRefresh();\n    }\n  };\n  /**\n   * Filters grid row by column name with the given options.\n   *\n   * @param  {string} fieldName - Defines the field name of the column.\n   * @param  {string} filterOperator - Defines the operator to filter records.\n   * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n   * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n   * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n   * insensitive records (uppercase and lowercase letters treated the same).\n   * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n   * then filter ignores the diacritic characters or accents while filtering.\n   * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n   * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n    if (this.filterModule) {\n      this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    }\n  };\n  /**\n   * Clears all the filtered rows of the Grid.\n   *\n   * @param {string[]} fields - Defines the Fields\n   * @returns {void}\n   */\n  Grid.prototype.clearFiltering = function (fields) {\n    if (this.filterModule) {\n      this.filterModule.clearFiltering(fields);\n    }\n  };\n  /**\n   * Removes filtered column by field name.\n   *\n   * @param  {string} field - Defines column field name to remove filter.\n   * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n    if (this.filterModule) {\n      this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n    }\n  };\n  /**\n   * Selects a row by given index.\n   *\n   * @param  {number} index - Defines the row index.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectRow = function (index, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRow(index, isToggle);\n    }\n  };\n  /**\n   * Selects a collection of rows by indexes.\n   *\n   * @param  {number[]} rowIndexes - Specifies the row indexes.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectRows = function (rowIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRows(rowIndexes);\n    }\n  };\n  /**\n   * Deselects the current selected rows and cells.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearSelection();\n    }\n  };\n  /**\n   * Selects a cell by the given index.\n   *\n   * @param  {IIndex} cellIndex - Defines the row and column indexes.\n   * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectCell = function (cellIndex, isToggle) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCell(cellIndex, isToggle);\n    }\n  };\n  /**\n   * Selects a range of cells from start and end indexes.\n   *\n   * @param  {IIndex} startIndex - Specifies the row and column's start index.\n   * @param  {IIndex} endIndex - Specifies the row and column's end index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n    this.selectionModule.selectCellsByRange(startIndex, endIndex);\n  };\n  /**\n   * Searches Grid records using the given key.\n   * You can customize the default search option by using the\n   * [`searchSettings`](./#searchsettings/).\n   *\n   * @param  {string} searchString - Defines the key.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.search = function (searchString) {\n    if (this.searchModule) {\n      this.searchModule.search(searchString);\n    }\n  };\n  /**\n   * By default, prints all the pages of the Grid and hides the pager.\n   * > You can customize print options using the\n   * [`printMode`](./#printmode).\n   *\n   * @returns {void}\n   */\n  Grid.prototype.print = function () {\n    if (this.printModule) {\n      this.printModule.print();\n    }\n  };\n  /**\n   * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n   * > `editSettings.allowDeleting` should be true.\n   *\n   * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n   * @param {Object} data - Defines the JSON data of the record to be deleted.\n   * @returns {void}\n   */\n  Grid.prototype.deleteRecord = function (fieldname, data) {\n    if (this.editModule) {\n      this.editModule.deleteRecord(fieldname, data);\n    }\n  };\n  /**\n   * Starts edit the selected row. At least one row must be selected before invoking this method.\n   * `editSettings.allowEditing` should be true.\n   * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n   *\n   * @returns {void}\n   */\n  Grid.prototype.startEdit = function () {\n    if (this.editModule) {\n      this.editModule.startEdit();\n    }\n  };\n  /**\n   * If Grid is in editable state, you can save a record by invoking endEdit.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.endEdit = function () {\n    if (this.editModule) {\n      this.editModule.endEdit();\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.closeEdit = function () {\n    if (this.editModule) {\n      this.editModule.closeEdit();\n    }\n  };\n  /**\n   * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n   * > `editSettings.allowEditing` should be true.\n   *\n   * @param {Object} data - Defines the new add record data.\n   * @param {number} index - Defines the row index to be added\n   * @returns {void}\n   */\n  Grid.prototype.addRecord = function (data, index) {\n    if (this.editModule) {\n      this.editModule.addRecord(data, index);\n    }\n  };\n  /**\n   * Delete any visible row by TR element.\n   *\n   * @param {HTMLTableRowElement} tr - Defines the table row element.\n   * @returns {void}\n   */\n  Grid.prototype.deleteRow = function (tr) {\n    if (this.editModule) {\n      this.editModule.deleteRow(tr);\n    }\n  };\n  /**\n   * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n   *\n   * @param {number} index - Defines row index to edit a particular cell.\n   * @param {string} field - Defines the field name of the column to perform batch edit.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.editCell = function (index, field) {\n    if (this.editModule) {\n      this.editModule.editCell(index, field);\n    }\n  };\n  /**\n   * Saves the cell that is currently edited. It does not save the value to the DataSource.\n   *\n   * @returns {void}\n   * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n   */\n  Grid.prototype.saveCell = function () {\n    if (this.editModule) {\n      this.editModule.saveCell();\n    }\n  };\n  /**\n   * To update the specified cell by given value without changing into edited state.\n   *\n   * @param {number} rowIndex Defines the row index.\n   * @param {string} field Defines the column field.\n   * @param {string | number | boolean | Date} value - Defines the value to be changed.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.updateCell = function (rowIndex, field, value) {\n    if (this.editModule) {\n      this.editModule.updateCell(rowIndex, field, value);\n    }\n  };\n  /**\n   * To update the specified row by given values without changing into edited state.\n   *\n   * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n   *\n   * @param {number} index Defines the row index.\n   * @param {Object} data Defines the data object to be updated.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.updateRow = function (index, data) {\n    if (this.editModule) {\n      this.editModule.updateRow(index, data);\n    }\n  };\n  /**\n   * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n   *\n   * @returns {Object} Returns the batch changes\n   */\n  Grid.prototype.getBatchChanges = function () {\n    if (this.editModule) {\n      return this.editModule.getBatchChanges();\n    }\n    return {};\n  };\n  /**\n   * Enables or disables ToolBar items.\n   *\n   * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n   * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.enableToolbarItems = function (items, isEnable) {\n    if (this.toolbarModule) {\n      this.toolbarModule.enableItems(items, isEnable);\n    }\n  };\n  /**\n   * Copy the selected rows or cells data into clipboard.\n   *\n   * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n   * @returns {void}\n   */\n  Grid.prototype.copy = function (withHeader) {\n    if (this.clipboardModule) {\n      this.clipboardModule.copy(withHeader);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.recalcIndentWidth = function () {\n    var _this_1 = this;\n    if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n      return;\n    }\n    if (!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable() || this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') || !this.getContentTable()) {\n      return;\n    }\n    var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n    var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n    var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n    var perPixel = indentWidth / 30;\n    var i = this.getFrozenMode() === 'Right' ? this.groupSettings.columns.length + this.getColumns().length : 0;\n    var parentOffset = this.element.offsetWidth;\n    var applyWidth = function (index, width) {\n      if (ispercentageWidth(_this_1)) {\n        var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n        headerCol[parseInt(index.toString(), 10)].style.width = newWidth;\n        contentCol[parseInt(index.toString(), 10)].style.width = newWidth;\n      } else {\n        headerCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n        contentCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n      }\n      _this_1.notify(events.columnWidthChanged, {\n        index: index,\n        width: width\n      });\n    };\n    if (perPixel >= 1) {\n      indentWidth = 30 / perPixel;\n    }\n    if (indentWidth < 1) {\n      indentWidth = 1;\n    }\n    if (this.enableColumnVirtualization || this.isAutoGen || this.columns.length === this.groupSettings.columns.length) {\n      indentWidth = 30;\n    }\n    while (i < this.groupSettings.columns.length) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n    if (this.isDetail()) {\n      applyWidth(i, indentWidth);\n      i++;\n    }\n    if (this.isRowDragable()) {\n      applyWidth(i, indentWidth);\n    }\n    this.isAutoGen = false;\n    this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.resetIndentWidth = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    if (ispercentageWidth(this)) {\n      this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n      this.widthService.setWidthToColumns();\n      this.recalcIndentWidth();\n      if (this.autoFit) {\n        this.preventAdjustColumns();\n      }\n    }\n    if ((this.width === 'auto' || typeof this.width === 'string' && this.width.indexOf('%') !== -1) && this.getColumns().filter(function (col) {\n      return (!col.width || col.width === 'auto') && col.minWidth;\n    }).length > 0) {\n      var tgridWidth = this.widthService.getTableWidth(this.getColumns(), true);\n      this.widthService.setMinwidthBycalculation(tgridWidth);\n    }\n    if (this.isFrozenGrid() && this.enableColumnVirtualization && this.widthService) {\n      this.widthService.refreshFrozenScrollbar();\n    }\n    if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n    if (this.frozenRows && this.scrollModule) {\n      this.scrollModule.resizeFrozenRowBorder();\n    }\n    if (this.enableStickyHeader) {\n      this.scrollModule.makeStickyHeader();\n    }\n    if (this.enableAutoFill && this.selectionSettings.type === 'Multiple' && this.selectionModule && this.selectionSettings.mode === 'Cell' && this.selectionModule.selectedRowCellIndexes.length) {\n      this.selectionModule.updateAutoFillPosition();\n      this.selectionModule.drawBorders();\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns isRowDragable\n   */\n  Grid.prototype.isRowDragable = function () {\n    return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n  };\n  /**\n   * Changes the Grid column positions by field names.\n   *\n   * @param  {string} fromFName - Defines the origin field name.\n   * @param  {string} toFName - Defines the destination field name.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumns = function (fromFName, toFName) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumns(fromFName, toFName);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n   * then you won't get the same results every time.\n   *\n   * @param  {number} fromIndex - Defines the origin field index.\n   * @param  {number} toIndex - Defines the destination field index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n   * then you will get the same results every time.\n   *\n   * @param  {string} fieldName - Defines the field name.\n   * @param  {number} toIndex - Defines the destination field index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n    if (this.reorderModule) {\n      this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n    }\n  };\n  /**\n   * Changes the Grid Row position with given indexes.\n   *\n   * @param  {number} fromIndexes - Defines the origin Indexes.\n   * @param  {number} toIndex - Defines the destination Index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n    if (this.rowDragAndDropModule) {\n      this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n    }\n  };\n  /**\n   * @param {ReturnType} e - Defines the Return type\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.refreshDataSource = function (e) {\n    this.notify('refreshdataSource', e);\n  };\n  /**\n   * @param {boolean} enable -Defines the enable\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.disableRowDD = function (enable) {\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n    var rows = this.getRows();\n    var disValue = enable ? 'none' : '';\n    setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], {\n      'display': disValue\n    });\n    for (var i = 0; i < this.getRows().length; i++) {\n      var ele = rows[parseInt(i.toString(), 10)].firstElementChild;\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n    for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n      var ele = headerRows[parseInt(j.toString(), 10)];\n      if (enable) {\n        addClass([ele], 'e-hide');\n      } else {\n        removeClass([ele], ['e-hide']);\n      }\n    }\n  };\n  /**\n   * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n   * > * This method ignores the hidden columns.\n   * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n   * > * By specifying the start row index and end row index, providing the range within which the maximum width for that column should be considered when applying `autoFitColumns`.\n   * > * The width of header rows is always calculated. If the width of a header row exceeds the specified range, its width will be allocated to the specific content rows.\n   *\n   * @param  {string |string[]} fieldNames - Defines the column names.\n   * @param  {number} startRowIndex - Specifies the start index of the content row.\n   * @param  {number} endRowIndex - Specifies the end index of content row.\n   * @returns {void}\n   *\n   *\n   * ```typescript\n   * <div id=\"Grid\"></div>\n   * <script>\n   * let gridObj: Grid = new Grid({\n   *     dataSource: employeeData,\n   *     columns: [\n   *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n   *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n   *     dataBound: () => gridObj.autoFitColumns('EmployeeID');\n   * });\n   * gridObj.appendTo('#Grid');\n   * </script>\n   * ```\n   *\n   */\n  Grid.prototype.autoFitColumns = function (fieldNames, startRowIndex, endRowIndex) {\n    var injectedModules = this.getInjectedModules();\n    var resize = injectedModules.find(function (item) {\n      if (typeof item === 'function' && !isNullOrUndefined(item.prototype)) {\n        return item.prototype.getModuleName() === 'resize';\n      } else {\n        return item.name === 'Resize';\n      }\n    });\n    if (!this.resizeModule && resize) {\n      this.autoFitColumnsResize = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.injectModules();\n    }\n    if (this.resizeModule) {\n      this.resizeModule.autoFitColumns(fieldNames, startRowIndex, endRowIndex);\n    }\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.preventAdjustColumns = function () {\n    if (this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' || this.allowResizing && this.resizeSettings.mode === 'Auto') {\n      return;\n    }\n    var columns = this.getColumns();\n    var headerTable = this.getHeaderTable();\n    var tableWidth = 0;\n    for (var i = 0; i < columns.length; i++) {\n      if (columns[parseInt(i.toString(), 10)].visible) {\n        if (this.groupSettings.columns.length && this.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) > -1) {\n          var headerCol = [].slice.call(headerTable.querySelector('colgroup').querySelectorAll(':not(.e-group-intent):not(.e-detail-intent):not(.e-drag-intent)'));\n          if (headerCol[parseInt(i.toString(), 10)].style.display === 'none') {\n            continue;\n          }\n        }\n        if (columns[parseInt(i.toString(), 10)].width) {\n          tableWidth += parseFloat(columns[parseInt(i.toString(), 10)].width.toString());\n        } else {\n          tableWidth = 0;\n          break;\n        }\n      }\n    }\n    if (tableWidth) {\n      var percentageWidth = this.isPercentageWidthGrid();\n      var unit = this.widthUnit(percentageWidth);\n      var contentTable = this.getContentTable();\n      if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n        var indentWidth = this.defaultIndentWidth(percentageWidth);\n        var indentWidthUnitFormat = indentWidth.toString() + unit;\n        var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup').querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n        var contentIndentCol = [].slice.call(contentTable.querySelector('colgroup').querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n        for (var i = 0; i < headerIndentCol.length; i++) {\n          headerIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n          contentIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n          tableWidth += indentWidth;\n        }\n      }\n      if (percentageWidth && tableWidth < 100 || !percentageWidth && tableWidth < contentTable.parentElement.clientWidth) {\n        if (!isNullOrUndefined(contentTable.querySelector('.e-emptyrow'))) {\n          addClass([headerTable], ['e-tableborder']);\n          removeClass([contentTable], ['e-tableborder']);\n        } else {\n          addClass([headerTable, contentTable], ['e-tableborder']);\n        }\n      }\n      var tableWidthUnitFormat = tableWidth.toString() + unit;\n      headerTable.style.setProperty('width', tableWidthUnitFormat);\n      contentTable.style.setProperty('width', tableWidthUnitFormat);\n    } else {\n      this.restoreAdjustColumns();\n    }\n  };\n  Grid.prototype.restoreAdjustColumns = function () {\n    if (this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' || this.allowResizing && this.resizeSettings.mode === 'Auto') {\n      return;\n    }\n    var headerTable = this.getHeaderTable();\n    var contentTable = this.getContentTable();\n    removeClass([headerTable, contentTable], ['e-tableborder']);\n    headerTable.style.removeProperty('width');\n    contentTable.style.removeProperty('width');\n    if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n      var percentageWidth = this.isPercentageWidthGrid();\n      var indentWidthUnitFormat_1 = this.defaultIndentWidth(percentageWidth).toString() + this.widthUnit(percentageWidth);\n      var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup').querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n      headerIndentCol.forEach(function (element) {\n        element.style.setProperty('width', indentWidthUnitFormat_1);\n      });\n      headerTable.querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n      this.recalcIndentWidth();\n    }\n  };\n  Grid.prototype.widthUnit = function (percentageWidth) {\n    return percentageWidth ? '%' : 'px';\n  };\n  Grid.prototype.defaultIndentWidth = function (percentageWidth) {\n    return percentageWidth ? parseFloat((30 / this.element.offsetWidth * 100).toFixed(1)) : 30;\n  };\n  Grid.prototype.isPercentageWidthGrid = function () {\n    return this.getColumns()[0].width.toString().indexOf('%') > -1;\n  };\n  /**\n   * @param {number} x - Defines the number\n   * @param {number} y - Defines the number\n   * @param {Element} target - Defines the Element\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.createColumnchooser = function (x, y, target) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.renderColumnChooser(x, y, target);\n    }\n  };\n  Grid.prototype.initializeServices = function () {\n    this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n    this.serviceLocator.register('cellRendererFactory', new CellRendererFactory());\n    this.serviceLocator.register('rendererFactory', new RendererFactory());\n    this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n    this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n    this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n    this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n  };\n  Grid.prototype.processModel = function () {\n    var gCols = this.groupSettings.columns;\n    var sCols = this.sortSettings.columns;\n    var flag;\n    var j;\n    if (this.allowGrouping) {\n      var _loop_3 = function (i, len) {\n        flag = false;\n        j = 0;\n        for (var sLen = sCols.length; j < sLen; j++) {\n          if (sCols[parseInt(j.toString(), 10)].field === gCols[parseInt(i.toString(), 10)]) {\n            flag = true;\n            break;\n          }\n        }\n        if (!flag) {\n          sCols.push({\n            field: gCols[parseInt(i.toString(), 10)],\n            direction: 'Ascending',\n            isFromGroup: true\n          });\n        } else {\n          if (this_3.allowSorting) {\n            this_3.sortedColumns.push(sCols[parseInt(j.toString(), 10)].field);\n          } else {\n            sCols[parseInt(j.toString(), 10)].direction = 'Ascending';\n          }\n        }\n        if (!this_3.groupSettings.showGroupedColumn) {\n          var column = this_3.enableColumnVirtualization ? this_3.columns.filter(function (c) {\n            return c.field === gCols[parseInt(i.toString(), 10)];\n          })[0] : this_3.getColumnByField(gCols[parseInt(i.toString(), 10)]);\n          if (column) {\n            column.visible = false;\n          } else {\n            this_3.log('initial_action', {\n              moduleName: 'group',\n              columnName: gCols[parseInt(i.toString(), 10)]\n            });\n          }\n        }\n      };\n      var this_3 = this;\n      for (var i = 0, len = gCols.length; i < len; i++) {\n        _loop_3(i, len);\n      }\n    }\n    if (!gCols.length) {\n      for (var i = 0; i < sCols.length; i++) {\n        this.sortedColumns.push(sCols[parseInt(i.toString(), 10)].field);\n      }\n    }\n    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n    this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n    this.editTemplateFn = templateCompiler(this.editSettings.template);\n    this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n    this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n    if (!isNullOrUndefined(this.parentDetails)) {\n      var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' : this.parentDetails.parentKeyFieldValue;\n      this.query.where(this.queryString, 'equal', value, true);\n    }\n    this.initForeignColumn();\n  };\n  Grid.prototype.initForeignColumn = function () {\n    if (this.isForeignKeyEnabled(this.getColumns())) {\n      this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n    }\n  };\n  Grid.prototype.enableVerticalRendering = function () {\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    } else {\n      this.element.classList.remove('e-row-responsive');\n    }\n  };\n  Grid.prototype.gridRender = function () {\n    var _a;\n    this.updateRTL();\n    if (this.rowRenderingMode === 'Vertical') {\n      this.element.classList.add('e-row-responsive');\n    }\n    if (this.enableHover) {\n      this.element.classList.add('e-gridhover');\n    }\n    if (Browser.isDevice && this.adaptiveUIMode === 'Desktop') {\n      this.element.classList.add('e-device');\n      this.enableAdaptiveUI = false;\n    }\n    if (this.adaptiveUIMode === 'Mobile' && !(Browser.isDevice || this.rowRenderingMode === 'Vertical')) {\n      this.enableAdaptiveUI = false;\n    }\n    if (this.rowHeight) {\n      this.element.classList.add('e-grid-min-height');\n    }\n    if (this.cssClass) {\n      if (this.cssClass.indexOf(' ') !== -1) {\n        (_a = this.element.classList).add.apply(_a, this.cssClass.split(' '));\n      } else {\n        this.element.classList.add(this.cssClass);\n      }\n    }\n    // If the below if statement is removed, then drag and drop between grids will not work in firefox browser.\n    if (this.allowRowDragAndDrop && this.rowDropSettings.targetID && Browser.info.name === 'mozilla') {\n      this.element.classList.add('e-disableuserselect');\n    }\n    if (this.editSettings.showAddNewRow && (this.enableVirtualization || this.enableInfiniteScrolling)) {\n      this.editSettings.newRowPosition = 'Top';\n    }\n    classList(this.element, ['e-responsive', 'e-default'], []);\n    var rendererFactory = this.serviceLocator.getService('rendererFactory');\n    this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n    this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n    this.printModule = new Print(this, this.scrollModule);\n    this.clipboardModule = new Clipboard(this, this.serviceLocator);\n    this.renderModule.render();\n    this.eventInitializer();\n    this.createGridPopUpElement();\n    this.widthService.setWidthToColumns();\n    this.updateGridLines();\n    this.applyTextWrap();\n    this.createTooltip(); //for clip mode ellipsis\n    this.enableBoxSelection();\n  };\n  Grid.prototype.dataReady = function () {\n    this.scrollModule.setWidth();\n    this.scrollModule.setHeight();\n    if (this.height !== 'auto') {\n      this.scrollModule.setPadding();\n    }\n  };\n  Grid.prototype.updateRTL = function () {\n    if (this.enableRtl) {\n      this.element.classList.add('e-rtl');\n    } else {\n      this.element.classList.remove('e-rtl');\n    }\n  };\n  Grid.prototype.createGridPopUpElement = function () {\n    var popup = this.createElement('div', {\n      className: 'e-gridpopup',\n      styles: 'display:none;'\n    });\n    var content = this.createElement('div', {\n      className: literals.content,\n      attrs: {\n        tabIndex: '-1'\n      }\n    });\n    append([content, this.createElement('div', {\n      className: 'e-uptail e-tail'\n    })], popup);\n    content.appendChild(this.createElement('span'));\n    append([content, this.createElement('div', {\n      className: 'e-downtail e-tail'\n    })], popup);\n    this.element.appendChild(popup);\n  };\n  Grid.prototype.updateGridLines = function () {\n    classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n    switch (this.gridLines) {\n      case 'Horizontal':\n        this.element.classList.add('e-horizontallines');\n        break;\n      case 'Vertical':\n        this.element.classList.add('e-verticallines');\n        break;\n      case 'None':\n        this.element.classList.add('e-hidelines');\n        break;\n      case 'Both':\n        this.element.classList.add('e-bothlines');\n        break;\n    }\n    this.updateResizeLines();\n  };\n  Grid.prototype.updateResizeLines = function () {\n    if (this.allowResizing && !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n      this.element.classList.add('e-resize-lines');\n    } else {\n      this.element.classList.remove('e-resize-lines');\n    }\n  };\n  /**\n   * The function is used to apply text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.applyTextWrap = function () {\n    if (this.allowTextWrap) {\n      var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n      switch (this.textWrapSettings.wrapMode) {\n        case 'Header':\n          wrap(this.element, false);\n          wrap(this.getContent(), false);\n          wrap(headerRows, true);\n          break;\n        case 'Content':\n          wrap(this.getContent(), true);\n          wrap(this.element, false);\n          wrap(headerRows, false);\n          break;\n        default:\n          wrap(this.element, true);\n          wrap(this.getContent(), false);\n          wrap(headerRows, false);\n      }\n      if (this.textWrapSettings.wrapMode !== 'Content') {\n        this.notify(events.refreshHandlers, {});\n      }\n    }\n  };\n  /**\n   * The function is used to remove text wrap\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.removeTextWrap = function () {\n    wrap(this.element, false);\n    var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n    wrap(headerRows, false);\n    wrap(this.getContent(), false);\n    if (this.textWrapSettings.wrapMode !== 'Content') {\n      this.notify(events.refreshHandlers, {});\n    }\n  };\n  /**\n   * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.createTooltip = function () {\n    this.toolTipObj = new Tooltip({\n      opensOn: 'custom',\n      content: '',\n      cssClass: this.cssClass ? this.cssClass : null\n    }, this.element);\n  };\n  /** @hidden\n   * @returns {void}\n   */\n  Grid.prototype.freezeRefresh = function () {\n    if (this.enableVirtualization || this.enableInfiniteScrolling) {\n      this.pageSettings.currentPage = 1;\n    }\n    this.componentRefresh();\n  };\n  Grid.prototype.getTooltipStatus = function (element) {\n    var headerTable = this.getHeaderTable();\n    var headerDivTag = this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' ? 'e-gridcontent' : 'e-gridheader';\n    var htable = this.createTable(headerTable, headerDivTag, 'header');\n    var ctable = this.createTable(headerTable, headerDivTag, 'content');\n    var table = element.classList.contains('e-headercell') ? htable : ctable;\n    var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n    table.querySelector(ele).className = element.className;\n    table.querySelector(ele).innerHTML = element.innerHTML;\n    var width = table.querySelector(ele).getBoundingClientRect().width;\n    document.body.removeChild(htable);\n    document.body.removeChild(ctable);\n    if (width > element.getBoundingClientRect().width && !element.classList.contains('e-editedbatchcell') || this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' && width > element.getBoundingClientRect().width * 0.55 - (this.height !== 'auto' ? 16 : 0)) {\n      // 0.55 - defines the width of adaptive content cell, 16 - defines the scrollbar width\n      return true;\n    }\n    return false;\n  };\n  Grid.prototype.mouseMoveHandler = function (e) {\n    if (this.isEllipsisTooltip()) {\n      var element = parentsUntil(e.target, 'e-ellipsistooltip');\n      if (this.prevElement !== element || e.type === 'mouseout') {\n        this.toolTipObj.close();\n      }\n      var tagName = e.target.tagName;\n      var elemNames = ['A', 'BUTTON', 'INPUT'];\n      if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n        if (this.getTooltipStatus(element)) {\n          var col = this.getColumns()[parseInt(element.getAttribute(literals.dataColIndex), 10)];\n          var domSetter = col && col.disableHtmlEncode ? 'innerText' : 'innerHTML';\n          var contentDiv = this.createElement('div');\n          if (element.getElementsByClassName('e-headertext').length) {\n            var innerElement = element.getElementsByClassName('e-headertext')[0];\n            contentDiv[\"\" + domSetter] = this.sanitize(innerElement.innerText);\n            this.toolTipObj.content = contentDiv;\n          } else {\n            contentDiv[\"\" + domSetter] = this.sanitize(element.innerText);\n            this.toolTipObj.content = contentDiv;\n          }\n          this.prevElement = element;\n          if (this.enableHtmlSanitizer) {\n            this.toolTipObj.enableHtmlSanitizer = true;\n          }\n          if (col && col.disableHtmlEncode) {\n            this.toolTipObj.enableHtmlParse = false;\n          }\n          this.toolTipObj['open'](element);\n        }\n      }\n    }\n  };\n  Grid.prototype.isEllipsisTooltip = function () {\n    var cols = this.getColumns();\n    if (this.clipMode === 'EllipsisWithTooltip') {\n      return true;\n    }\n    for (var i = 0; i < cols.length; i++) {\n      if (cols[parseInt(i.toString(), 10)].clipMode === 'EllipsisWithTooltip') {\n        return true;\n      }\n    }\n    return false;\n  };\n  Grid.prototype.scrollHandler = function () {\n    if (this.isEllipsisTooltip()) {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * To create table for ellipsiswithtooltip\n   *\n   * @param {Element} table - Defines the table\n   * @param {string} tag - Defines the tag\n   * @param {string} type - Defines the type\n   * @returns {HTMLDivElement} Returns the HTML div ELement\n   * @hidden\n   */\n  Grid.prototype.createTable = function (table, tag, type) {\n    var myTableDiv = this.createElement('div');\n    myTableDiv.className = this.element.className;\n    myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n    var mySubDiv = this.createElement('div');\n    mySubDiv.className = tag;\n    var myTable = this.createElement('table');\n    myTable.className = table.className;\n    myTable.style.cssText = 'table-layout: auto;width: auto';\n    var ele = type === 'header' ? 'th' : 'td';\n    var myTr = this.createElement('tr', {\n      attrs: {\n        role: 'row'\n      }\n    });\n    var mytd = this.createElement(ele);\n    myTr.appendChild(mytd);\n    myTable.appendChild(myTr);\n    mySubDiv.appendChild(myTable);\n    myTableDiv.appendChild(mySubDiv);\n    document.body.appendChild(myTableDiv);\n    return myTableDiv;\n  };\n  Grid.prototype.onKeyPressed = function (e) {\n    if (e.action === 'tab' || e.action === 'shiftTab') {\n      this.toolTipObj.close();\n    }\n  };\n  /**\n   * Binding events to the element while component creation.\n   *\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n    EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n    EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n    EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n    if (this.allowKeyboard) {\n      this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n    }\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n    EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n    EventHandler.add(this.element, 'mouseover', this.mouseMoveHandler, this);\n    EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n    EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n    EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n  };\n  /**\n   * Unbinding events from the element while component destroy.\n   *\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.unwireEvents = function () {\n    EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n    EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n    EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n    EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n    EventHandler.remove(this.element, 'mouseover', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n    EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n    EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n    EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    EventHandler.remove(window, 'resize', this.resetIndentWidth);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.addListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.on(events.dataReady, this.dataReady, this);\n    this.on(events.contentReady, this.recalcIndentWidth, this);\n    this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n    this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n    this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n    this.dataBoundFunction = this.refreshMediaCol.bind(this);\n    this.addEventListener(events.dataBound, this.dataBoundFunction);\n    this.on(events.keyPressed, this.onKeyPressed, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.removeListener = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.off(events.dataReady, this.dataReady);\n    this.off(events.contentReady, this.recalcIndentWidth);\n    this.off(events.headerRefreshed, this.recalcIndentWidth);\n    this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n    this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n    this.removeEventListener(events.dataBound, this.dataBoundFunction);\n    this.off(events.keyPressed, this.onKeyPressed);\n  };\n  /**\n   * Get current visible data of grid.\n   *\n   * @returns {Object[]} Returns the current view records\n   *\n   * @isGenericType true\n   */\n  Grid.prototype.getCurrentViewRecords = function () {\n    if (isGroupAdaptive(this)) {\n      return isNullOrUndefined(this.currentViewData.records) ? this.currentViewData : this.currentViewData.records;\n    }\n    if (this.groupSettings.enableLazyLoading) {\n      return this.currentViewData;\n    }\n    return this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length && this.currentViewData.records ? this.currentViewData.records : this.currentViewData;\n  };\n  Grid.prototype.mouseClickHandler = function (e) {\n    if (this.isChildGrid(e) || parentsUntil(e.target, 'e-gridpopup') && e.touches || this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n      return;\n    }\n    if ((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) || e.target.tagName === 'TD') || parentsUntil(e.target, 'e-headercell') && parentsUntil(e.target, 'e-headercell').querySelector('.e-checkselectall') || !(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader')) && e.touches) {\n      return;\n    }\n    if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop && !parentsUntil(e.target, 'e-filterbarcell') && e.target && ['A', 'BUTTON', 'INPUT'].indexOf(e.target.tagName) === -1) {\n      e.preventDefault();\n    }\n    var args = this.getRowInfo(e.target);\n    var cancel = 'cancel';\n    args[\"\" + cancel] = false;\n    var isDataRow = false;\n    var tr = closest(e.target, 'tr');\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      isDataRow = rowObj ? rowObj.isDataRow : false;\n    }\n    if (isDataRow) {\n      this.trigger(events.recordClick, args);\n    }\n    this.notify(events.click, e);\n  };\n  Grid.prototype.checkEdit = function (e) {\n    var tr = parentsUntil(e.target, literals.row);\n    var isEdit = this.editSettings.mode !== 'Batch' && this.isEdit && tr && (tr.classList.contains(literals.editedRow) || tr.classList.contains(literals.addedRow) && !this.editSettings.showAddNewRow);\n    return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || parentsUntil(e.target, literals.rowCell) && parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell'));\n  };\n  Grid.prototype.dblClickHandler = function (e) {\n    var grid = parentsUntil(e.target, 'e-grid');\n    if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n      return;\n    }\n    var dataRow = false;\n    var tr = closest(e.target, 'tr');\n    if (tr && tr.getAttribute('data-uid')) {\n      var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n      dataRow = rowObj ? rowObj.isDataRow : false;\n    }\n    var args = this.getRowInfo(e.target);\n    args.target = e.target;\n    if (dataRow) {\n      this.trigger(events.recordDoubleClick, args);\n    }\n    this.notify(events.dblclick, e);\n  };\n  Grid.prototype.focusOutHandler = function (e) {\n    if (this.isChildGrid(e)) {\n      return;\n    }\n    if (!parentsUntil(e.target, 'e-grid')) {\n      this.element.querySelector('.e-gridpopup').style.display = 'None';\n    }\n    var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n    if (filterClear && !filterClear.parentElement.classList.contains('e-tbar-btn')) {\n      filterClear.classList.add('e-hide');\n    }\n    var relatedTarget = e.relatedTarget;\n    var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n    if ((!relatedTarget || !parentsUntil(relatedTarget, 'e-grid') && (!isNullOrUndefined(ariaOwns) && ariaOwns) !== e.target.getAttribute('aria-owns')) && !this.keyPress && this.isEdit && !Browser.isDevice) {\n      if (this.editSettings.mode === 'Batch' && !((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) && (parentsUntil(relatedTarget, 'e-multi-select-list-wrapper') || parentsUntil(relatedTarget, 'e-input-filter')) && parentsUntil(relatedTarget, 'e-input-group')) && (parentsUntil(relatedTarget, 'e-uploader') || !(relatedTarget && isNullOrUndefined(parentsUntil(relatedTarget, 'e-input-group'))) && !parentsUntil(e.target, 'edit-custom-template'))) {\n        this.editModule.saveCell();\n        this.notify(events.editNextValCell, {});\n      }\n      if (this.editSettings.mode === 'Normal' && !this.isWidgetsDestroyed) {\n        this.editModule.editFormValidate();\n      }\n    }\n    if (this.editSettings.showAddNewRow) {\n      this.editModule.isShowAddedRowValidate = false;\n    }\n    this.keyPress = false;\n  };\n  Grid.prototype.isChildGrid = function (e) {\n    var gridElement = parentsUntil(e.target, 'e-grid');\n    if (gridElement && gridElement.id !== this.element.id || parentsUntil(e.target, 'e-unboundcelldiv') && isNullOrUndefined(gridElement)) {\n      return true;\n    }\n    return false;\n  };\n  /**\n   * @param {Object} persistedData - Defines the persisted data\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.mergePersistGridData = function (persistedData) {\n    var data = this.getLocalData();\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (typeof this[\"\" + key] === 'object' && !isNullOrUndefined(this[\"\" + key])) {\n          if (Array.isArray(this[\"\" + key]) && key === 'columns') {\n            this.setFrozenCount();\n            setColumnIndex(this[\"\" + key]);\n            this.mergeColumns(dataObj[\"\" + key], this[\"\" + key]);\n            this.mergedColumns = true;\n            this[\"\" + key] = dataObj[\"\" + key];\n          } else {\n            extend(this[\"\" + key], dataObj[\"\" + key]);\n          }\n        } else {\n          this[\"\" + key] = dataObj[\"\" + key];\n        }\n      }\n      this.isProtectedOnChange = false;\n    }\n  };\n  Grid.prototype.mergeColumns = function (storedColumn, columns) {\n    var storedColumns = storedColumn;\n    var isFrozenGrid = this.isFrozenGrid();\n    var _loop_4 = function (i) {\n      var localCol = columns.filter(function (tCol) {\n        return isFrozenGrid ? tCol.index === storedColumns[parseInt(i.toString(), 10)][\"\" + literals.initialFrozenColumnIndex] : tCol.index === storedColumns[parseInt(i.toString(), 10)].index;\n      })[0];\n      if (!isNullOrUndefined(localCol)) {\n        if (isFrozenGrid) {\n          localCol = extend({}, localCol, {}, true);\n          localCol.freeze = storedColumns[parseInt(i.toString(), 10)].freeze;\n        }\n        if (localCol.columns && localCol.columns.length) {\n          this_4.mergeColumns(storedColumns[parseInt(i.toString(), 10)].columns, localCol.columns);\n          storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n        } else {\n          storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n        }\n      }\n    };\n    var this_4 = this;\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_4(i);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns the isDetail\n   */\n  Grid.prototype.isDetail = function () {\n    return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n  };\n  Grid.prototype.isCommandColumn = function (columns) {\n    var _this_1 = this;\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this_1.isCommandColumn(col.columns);\n      }\n      return !!(col.commands || col.commandsTemplate);\n    });\n  };\n  Grid.prototype.isForeignKeyEnabled = function (columns) {\n    var _this_1 = this;\n    return columns.some(function (col) {\n      if (col.columns) {\n        return _this_1.isForeignKeyEnabled(col.columns);\n      }\n      return !!(col.dataSource && col.foreignKeyValue);\n    });\n  };\n  Grid.prototype.keyPressHandler = function (e) {\n    var presskey = extend(e, {\n      cancel: false\n    });\n    this.trigger('keyPressed', presskey);\n    if (presskey.cancel === true) {\n      e.stopImmediatePropagation();\n    }\n  };\n  Grid.prototype.keyDownHandler = function (e) {\n    if (e.altKey) {\n      if (e.keyCode === 74) {\n        //alt j\n        if (this.keyA) {\n          //alt A J\n          this.notify(events.groupCollapse, {\n            target: e.target,\n            collapse: false\n          });\n          this.keyA = false;\n        } else {\n          if (this.focusModule && this.focusModule.currentInfo && this.focusModule.currentInfo.element) {\n            removeClass([this.focusModule.currentInfo.element, this.focusModule.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n            this.focusModule.currentInfo.element.tabIndex = -1;\n          }\n          if (!this.element.classList.contains('e-childgrid')) {\n            this.element.focus();\n          }\n        }\n      }\n      if (e.keyCode === 87) {\n        //alt w\n        var focusModule = this.focusModule;\n        if (focusModule) {\n          if (!this.currentViewData.length) {\n            return;\n          }\n          focusModule.focusContent();\n          focusModule.addOutline();\n        }\n      }\n      if (e.keyCode === 65) {\n        //alt A\n        this.keyA = true;\n      }\n      if (e.keyCode === 72 && this.keyA) {\n        //alt A H\n        this.notify(events.groupCollapse, {\n          target: e.target,\n          collapse: true\n        });\n        this.keyA = false;\n      }\n    }\n    if (e.keyCode === 13) {\n      this.notify(events.enterKeyHandler, e);\n    }\n  };\n  Grid.prototype.keyActionHandler = function (e) {\n    if (this.isChildGrid(e) || this.editModule && (this.editModule.alertDObj && this.editModule.alertDObj.visible || this.editModule.dialogObj && this.editModule.dialogObj.visible) || this.isEdit && (!this.editSettings.showAddNewRow || this.editSettings.showAddNewRow && this.element.querySelector(literals.editedRow)) && e.action !== 'escape' && e.action !== 'enter' && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab') {\n      return;\n    } else {\n      this.keyPress = true;\n    }\n    if (this.allowKeyboard) {\n      if (e.action === 'ctrlPlusP') {\n        e.preventDefault();\n        this.print();\n      }\n      this.notify(events.keyPressed, e);\n    }\n  };\n  /**\n   * @param {Function[]} modules - Defines the modules\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.setInjectedModules = function (modules) {\n    this.injectedModules = modules;\n  };\n  Grid.prototype.updateColumnObject = function () {\n    prepareColumns(this.columns, this.enableColumnVirtualization, this);\n    setColumnIndex(this.columns);\n    this.initForeignColumn();\n    this.notify(events.autoCol, {});\n  };\n  Grid.prototype.refreshFrozenPosition = function (obj) {\n    if (obj && obj.isModeChg) {\n      this.refreshColumns();\n      this.notify(events.refreshResizePosition, {});\n    } else {\n      this.refreshColumns();\n    }\n  };\n  /**\n   * Gets the foreign columns from Grid.\n   *\n   * @returns {Column[]} Returns Foreign key column\n   */\n  Grid.prototype.getForeignKeyColumns = function () {\n    return this.getColumns().filter(function (col) {\n      return col.isForeignColumn();\n    });\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns row height\n   */\n  Grid.prototype.getRowHeight = function () {\n    return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n  };\n  /**\n   * Refreshes the Grid column changes.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.refreshColumns = function () {\n    this.freezeColumnRefresh = true;\n    this.setFrozenCount();\n    this.updateFrozenColumnsWidth();\n    if (this.isFrozenGrid()) {\n      this.isPreventScrollEvent = true;\n    }\n    this.updateColumnObject();\n    this.checkLockColumns(this.getColumns());\n    this.refresh();\n    if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n      var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n      this.getHeaderContent().querySelector('.' + literals.headerContent).scrollLeft = left;\n      this.getContent().querySelector('.' + literals.content).scrollLeft = left;\n    }\n  };\n  /**\n   * Export Grid data to Excel file(.xlsx).\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns the excelexport\n   */\n  Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  workbook, isBlob) {\n    if (this.exportGrids && this.exportGrids.length) {\n      var gridIds = this.exportGrids.slice();\n      return this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, workbook, isBlob);\n    } else {\n      return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n    }\n  };\n  /**\n   * Export Grid data to CSV file.\n   *\n   * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n   * @param  {boolean} isMultipleExport - Define to enable multiple export.\n   * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n   * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   * @returns {Promise<any>} Returns csv export\n   */\n  Grid.prototype.csvExport = function (excelExportProperties,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isMultipleExport, workbook, isBlob) {\n    return this.excelExportModule ? this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n  };\n  /**\n   * Export Grid data to PDF document.\n   *\n   * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n   * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n   * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n   * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n   *\n   * @returns {Promise<any>} Returns pdfexport\n   */\n  Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n    if (this.exportGrids && this.exportGrids.length) {\n      var gridIds = this.exportGrids.slice();\n      return this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    } else {\n      return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n    }\n  };\n  Grid.prototype.exportMultiplePdfGrids = function (gridIds, pdfExportProperties, isMultipleExport,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  pdfDoc, isBlob) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var _this = this;\n    if (gridIds.length !== 0) {\n      var currentGridId = gridIds.shift();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var exportPromise = currentGridInstance.pdfExportModule ? currentGridInstance.pdfExportModule.Map(currentGridInstance, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : Promise.resolve();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return exportPromise.then(function (exportedGridResults) {\n        isMultipleExport = gridIds.length === 1 ? false : true;\n        return _this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, exportedGridResults, isBlob);\n      });\n    }\n    return null;\n  };\n  Grid.prototype.exportMultipleExcelGrids = function (gridIds, excelExportProperties, isMultipleExport,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  workbook, isBlob) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var _this = this;\n    if (gridIds.length !== 0) {\n      var currentGridId = gridIds.shift();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n      var exportPromise = currentGridInstance.excelExportModule ? currentGridInstance.excelExportModule.Map(currentGridInstance, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return exportPromise.then(function (exportedGridResults) {\n        isMultipleExport = gridIds.length === 1 ? false : true;\n        return _this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, exportedGridResults, isBlob);\n      });\n    }\n    return null;\n  };\n  /**\n   * Groups a column by column name.\n   *\n   * @param  {string} columnName - Defines the column name to group.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.groupColumn(columnName);\n    }\n  };\n  /**\n   * Expands all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupExpandAll = function () {\n    if (this.groupModule) {\n      this.groupModule.expandAll();\n    }\n  };\n  /**\n   * Collapses all the grouped rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.groupCollapseAll = function () {\n    if (this.groupModule) {\n      this.groupModule.collapseAll();\n    }\n  };\n  /**\n   * Expands or collapses grouped rows by target element.\n   *\n   * @param  {Element} target - Defines the target element of the grouped row.\n   * @returns {void}\n   */\n  // public expandCollapseRows(target: Element): void {\n  //     if (this.groupModule) {\n  //         this.groupModule.expandCollapseRows(target);\n  //     }\n  // }\n  /**\n   * Clears all the grouped columns of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearGrouping = function () {\n    if (this.groupModule) {\n      this.groupModule.clearGrouping();\n    }\n  };\n  /**\n   * Ungroups a column by column name.\n   *\n   * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n   *\n   * @param  {string} columnName - Defines the column name to ungroup.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.ungroupColumn = function (columnName) {\n    if (this.groupModule) {\n      this.groupModule.ungroupColumn(columnName);\n    }\n  };\n  /**\n   * Column chooser can be displayed on screen by given position(X and Y axis).\n   *\n   * @param {number} x - Defines the X axis.\n   * @param {number} y - Defines the Y axis.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.openColumnChooser = function (x, y) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.openColumnChooser(x, y);\n    }\n  };\n  Grid.prototype.scrollRefresh = function () {\n    var _this_1 = this;\n    var refresh = function () {\n      _this_1.scrollModule.refresh();\n      _this_1.off(events.contentReady, refresh);\n    };\n    this.on(events.contentReady, refresh, this);\n  };\n  /**\n   * Collapses a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the expanded element to collapse.\n   * @returns {void}\n   */\n  // public detailCollapse(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.collapse(target);\n  //     }\n  // }\n  /**\n   * Collapses all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.detailCollapseAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.collapseAll();\n    }\n  };\n  /**\n   * Expands a detail row with the given target.\n   *\n   * @param  {Element} target - Defines the collapsed element to expand.\n   * @returns {void}\n   */\n  // public detailExpand(target: number | Element): void {\n  //     if (this.detailRowModule) {\n  //         this.detailRowModule.expand(target);\n  //     }\n  // }\n  /**\n   * Expands all the detail rows of the Grid.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.detailExpandAll = function () {\n    if (this.detailRowModule) {\n      this.detailRowModule.expandAll();\n    }\n  };\n  /**\n   * Deselects the currently selected cells.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearCellSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearCellSelection();\n    }\n  };\n  /**\n   * Deselects the currently selected rows.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.clearRowSelection = function () {\n    if (this.selectionModule) {\n      this.selectionModule.clearRowSelection();\n    }\n  };\n  /**\n   * Selects a collection of cells by row and column indexes.\n   *\n   * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectCells = function (rowCellIndexes) {\n    if (this.selectionModule) {\n      this.selectionModule.selectCells(rowCellIndexes);\n    }\n  };\n  /**\n   * Selects a range of rows from start and end row indexes.\n   *\n   * @param  {number} startIndex - Specifies the start row index.\n   * @param  {number} endIndex - Specifies the end row index.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n    if (this.selectionModule) {\n      this.selectionModule.selectRowsByRange(startIndex, endIndex);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {boolean} Returns whether context menu is open or not\n   */\n  Grid.prototype.isContextMenuOpen = function () {\n    return this.contextMenuModule && this.contextMenuModule.isOpen;\n  };\n  /**\n   * @param {Function} module - Defines the module\n   * @returns {boolean} return the injected modules\n   * @hidden\n   */\n  Grid.prototype.ensureModuleInjected = function (module) {\n    return this.getInjectedModules().indexOf(module) >= 0;\n  };\n  /**\n   * Destroys the given template reference.\n   *\n   * @param {string[]} propertyNames - Defines the collection of template name.\n   * @param {any} index - specifies the index\n   *\n   * @returns {void}\n   */\n  // eslint-disable-next-line\n  Grid.prototype.destroyTemplate = function (propertyNames, index) {\n    this.clearTemplate(propertyNames, index);\n  };\n  /**\n   * @param {string | string[]} type - Defines the type\n   * @param {Object} args - Defines the arguments\n   * @returns {void}\n   * @hidden\n   * @private\n   */\n  Grid.prototype.log = function (type, args) {\n    var injectedModules = this.getInjectedModules();\n    var logger = injectedModules.find(function (item) {\n      return item.name === 'Logger';\n    });\n    if (!logger) {\n      Grid_1.Inject(Logger);\n      this.enableLogger = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.injectModules();\n    }\n    // eslint-disable-next-line\n    this.loggerModule ? this.loggerModule.log(type, args) : function () {\n      return 0;\n    }();\n  };\n  /**\n   * @param {Element} element - Defines the element\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.applyBiggerTheme = function (element) {\n    if (this.element.classList.contains('e-bigger')) {\n      element.classList.add('e-bigger');\n    }\n  };\n  /**\n   * @hidden\n   * @returns {Object} Returns the previous row data\n   */\n  Grid.prototype.getPreviousRowData = function () {\n    var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n    return previousRowData;\n  };\n  /**\n   * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.hideScroll = function () {\n    var content = this.getContent().querySelector('.' + literals.content);\n    if (content.scrollHeight <= content.clientHeight) {\n      this.scrollModule.removePadding();\n      content.style.overflowY = 'auto';\n    }\n  };\n  /**\n   * Get row index by primary key or row data.\n   *\n   * @param  {string | Object} value - Defines the primary key value.\n   *\n   * @returns {number} Returns the index\n   */\n  Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n    var pkName = this.getPrimaryKeyFieldNames()[0];\n    value = typeof value === 'object' ? value[\"\" + pkName] : value;\n    var rows = this.getRowsObject();\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[parseInt(i.toString(), 10)].isDetailRow || rows[parseInt(i.toString(), 10)].isCaptionRow) {\n        continue;\n      }\n      var pKvalue = rows[parseInt(i.toString(), 10)].data[\"\" + pkName];\n      if (pkName.split('.').length > 1) {\n        pKvalue = performComplexDataOperation(pkName, rows[parseInt(i.toString(), 10)].data);\n      }\n      if (pKvalue === value) {\n        return rows[parseInt(i.toString(), 10)].index;\n      }\n    }\n    return -1;\n  };\n  /**\n   * @param {string} field - Defines the field name\n   * @param {boolean} isForeignKey - Defines the foreign key\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  Grid.prototype.grabColumnByFieldFromAllCols = function (field, isForeignKey) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n    for (var i = 0; i < gCols.length; i++) {\n      if (!isForeignKey && field === gCols[parseInt(i.toString(), 10)].field || isForeignKey && gCols[parseInt(i.toString(), 10)].isForeignColumn() && field === gCols[parseInt(i.toString(), 10)].foreignKeyValue) {\n        column = gCols[parseInt(i.toString(), 10)];\n        break;\n      }\n    }\n    return column;\n  };\n  /**\n   * @param {string} uid - Defines the uid\n   * @returns {Column} returns the column\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n    var column;\n    this.columnModel = [];\n    this.updateColumnModel(this.columns);\n    var gCols = this.columnModel;\n    for (var i = 0; i < gCols.length; i++) {\n      if (uid === gCols[parseInt(i.toString(), 10)].uid) {\n        column = gCols[parseInt(i.toString(), 10)];\n      }\n    }\n    return column;\n  };\n  /**\n   * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n   *\n   * @returns {Object[] | Promise<Object>} Returns the filtered records\n   */\n  Grid.prototype.getFilteredRecords = function () {\n    if (this.allowFiltering && this.filterSettings.columns.length || this.searchSettings.key.length) {\n      var query = this.renderModule.data.generateQuery(true);\n      if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n        return this.renderModule.data.getData(this.dataSource, query);\n      } else {\n        if (this.dataSource instanceof DataManager) {\n          return this.dataSource.executeLocal(query);\n        } else {\n          return new DataManager(this.dataSource, query).executeLocal(query);\n        }\n      }\n    }\n    return [];\n  };\n  Grid.prototype.getUserAgent = function () {\n    var userAgent = Browser.userAgent.toLowerCase();\n    return /iphone|ipod|ipad|macintosh/.test(userAgent);\n  };\n  /**\n   * @param {TouchEventArgs} e - Defines the TouchEventArgs\n   * @returns {void}\n   * @hidden\n   */\n  // Need to have all columns while filtering with ColumnVirtualization.\n  // eslint-disable-next-line\n  Grid.prototype.tapEvent = function (e) {\n    if (this.getUserAgent()) {\n      if (!Global.timer) {\n        Global.timer = setTimeout(function () {\n          Global.timer = null;\n        }, 300);\n      } else {\n        clearTimeout(Global.timer);\n        Global.timer = null;\n        this.dblClickHandler(e);\n        this.notify(events.doubleTap, e);\n      }\n    }\n  };\n  /**\n   * @param {string} prefix - specifies the prefix\n   * @returns {string} returns the row uid\n   * @hidden\n   */\n  Grid.prototype.getRowUid = function (prefix) {\n    return \"\" + prefix + this.rowUid++;\n  };\n  /**\n   * @param {string} uid - specifies the uid\n   * @returns {Element} returns the element\n   * @hidden\n   */\n  Grid.prototype.getRowElementByUID = function (uid) {\n    var rowEle;\n    var rows = [];\n    var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n    if (this.frozenRows) {\n      rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n      rows = rows.concat(cntRows);\n    } else {\n      rows = cntRows;\n    }\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n      if (row.getAttribute('data-uid') === uid) {\n        rowEle = row;\n        break;\n      }\n    }\n    return rowEle;\n  };\n  /**\n   * Gets the hidden columns from the Grid.\n   *\n   * @returns {Column[]} Returns the Column\n   */\n  Grid.prototype.getHiddenColumns = function () {\n    var cols = [];\n    for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n      var col = _a[_i];\n      if (col.visible === false) {\n        cols.push(col);\n      }\n    }\n    return cols;\n  };\n  /**\n   * Calculates the page size by parent element height\n   *\n   * @param {number | string } containerHeight - specifies the container height\n   * @returns {number} returns the page size\n   */\n  Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n    if (this.allowPaging) {\n      if (this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header' || !this.allowTextWrap) {\n        var pagesize = 0;\n        if (containerHeight.indexOf('%') !== -1) {\n          containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n        }\n        var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n        if (containerHeight > nonContentHeight) {\n          var contentHeight = 0;\n          contentHeight = containerHeight - this.getNoncontentHeight();\n          pagesize = contentHeight / this.getRowHeight();\n        }\n        if (pagesize > 0) {\n          return Math.floor(pagesize);\n        }\n      }\n    }\n    return 0;\n  };\n  Grid.prototype.getNoncontentHeight = function () {\n    var height = 0;\n    if (this.getHeaderContent() && !isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n      height += this.getHeaderContent().clientHeight;\n    }\n    if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n      height += this.element.querySelector('.e-toolbar').clientHeight;\n    }\n    if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n      height += this.element.querySelector('.e-gridpager').clientHeight;\n    }\n    if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n      height += this.element.querySelector('.e-columnheader').clientHeight;\n    }\n    if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n      height += this.element.querySelector('.e-groupdroparea').clientHeight;\n    }\n    if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n      for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n        height += this.element.getElementsByClassName('e-summaryrow')[parseInt(i.toString(), 10)].clientHeight;\n      }\n    }\n    return height;\n  };\n  /**\n   *To perform aggregate operation on a column.\n   *\n   * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n   * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n   *\n   * @returns {number} returns the summary values\n   */\n  Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n    return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n  };\n  /**\n   * Sends a Post request to export Grid to Excel file in server side.\n   *\n   * @param  {string} url - Pass Url for server side excel export action.\n   *\n   * @param  {ExportHeaders} headers - The headers to include in the export request.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.serverExcelExport = function (url, headers) {\n    this.isExcel = true;\n    this.exportGrid(url, headers);\n  };\n  /**\n   * Sends a Post request to export Grid to Pdf file in server side.\n   *\n   * @param  {string} url - Pass Url for server side pdf export action.\n   *\n   * @param  {ExportHeaders} headers - The headers to include in the export request.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.serverPdfExport = function (url, headers) {\n    this.isExcel = false;\n    this.exportGrid(url, headers);\n  };\n  /**\n   * Sends a Post request to export Grid to CSV file in server side.\n   *\n   * @param  {string} url - Pass Url for server side csv export action.\n   *\n   * @param  {ExportHeaders} headers - The headers to include in the export request.\n   *\n   * @returns {void}\n   */\n  Grid.prototype.serverCsvExport = function (url, headers) {\n    this.isExcel = true;\n    this.exportGrid(url, headers);\n  };\n  /**\n   * @param {string} url - Defines exporting url\n   * @param {ExportHeaders} headers - The optional headers for the export request.\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.exportGrid = function (url, headers) {\n    var _this_1 = this;\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var grid = this;\n    var query = grid.getDataModule().generateQuery(true);\n    var state = new UrlAdaptor().processQuery(new DataManager({\n      url: ''\n    }), query);\n    var queries = JSON.parse(state.data);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates', 'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n    var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField', 'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n    gridModel.filterSettings.columns = queries.where;\n    gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n    gridModel.sortSettings.columns = queries.sorted;\n    gridModel.columns = this.setHeaderText(gridModel.columns, include);\n    var form = this.createElement('form', {\n      id: 'ExportForm',\n      styles: 'display:none;'\n    });\n    var gridInput = this.createElement('input', {\n      id: 'gridInput',\n      attrs: {\n        name: 'gridModel'\n      }\n    });\n    gridInput.value = JSON.stringify(gridModel);\n    form.method = 'POST';\n    form.action = url;\n    form.appendChild(gridInput);\n    if (headers && headers.headers && Array.isArray(headers.headers)) {\n      headers.headers.forEach(function (header) {\n        Object.keys(header).forEach(function (key) {\n          var value = typeof header[\"\" + key] === 'string' ? header[\"\" + key] : JSON.stringify(header[\"\" + key]);\n          var headerInput = _this_1.createElement('input', {\n            attrs: {\n              name: key,\n              value: value,\n              type: 'hidden'\n            }\n          });\n          form.appendChild(headerInput);\n        });\n      });\n    }\n    document.body.appendChild(form);\n    form.submit();\n    form.remove();\n  };\n  /**\n   * @param {Column[]} columns - Defines array of columns\n   * @param {string[]} include - Defines array of sting\n   * @returns {Column[]} returns array of columns\n   * @hidden\n   */\n  Grid.prototype.setHeaderText = function (columns, include) {\n    for (var i = 0; i < columns.length; i++) {\n      var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n      columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n      if (!isNullOrUndefined(column.template)) {\n        columns[parseInt(i.toString(), 10)].template = 'true';\n      }\n      if (columns[parseInt(i.toString(), 10)].format) {\n        columns[parseInt(i.toString(), 10)].format = getNumberFormat(this.getFormat(columns[parseInt(i.toString(), 10)].format), columns[parseInt(i.toString(), 10)].type, this.isExcel, defaultCurrencyCode);\n      }\n      if (columns[parseInt(i.toString(), 10)].columns) {\n        this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n      }\n      var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n      for (var j = 0; j < keys.length; j++) {\n        if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n          delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n        }\n      }\n    }\n    return columns;\n  };\n  Grid.prototype.getFormat = function (format) {\n    return typeof format === 'object' ? !isNullOrUndefined(format.format) ? format.format : format.skeleton : format;\n  };\n  /**\n   * @hidden\n   * @returns {boolean} returns the isCollapseStateEnabled\n   */\n  Grid.prototype.isCollapseStateEnabled = function () {\n    var isExpanded = 'isExpanded';\n    return this[\"\" + isExpanded] === false;\n  };\n  /**\n   * @param {number} key - Defines the primary key value.\n   * @param {Object} rowData - Defines the rowData\n   * @returns {void}\n   */\n  Grid.prototype.updateRowValue = function (key, rowData) {\n    var args = {\n      requestType: 'save',\n      data: rowData\n    };\n    this.showSpinner();\n    this.notify(events.updateData, args);\n    this.refresh();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.setForeignKeyData = function () {\n    this.dataBind();\n    var colpending = this.getDataModule().getForeignKeyDataState();\n    if (colpending.isPending) {\n      this.getDataModule().setForeignKeyDataState({});\n      colpending.resolver();\n    } else {\n      this.getDataModule().setForeignKeyDataState({\n        isDataChanged: false\n      });\n      if (this.contentModule || this.headerModule) {\n        this.renderModule.render();\n      }\n    }\n  };\n  /**\n   * @param {string} field - specifies the field\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.resetFilterDlgPosition = function (field) {\n    var header = this.getColumnHeaderByField(field);\n    if (header) {\n      var target = header.querySelector('.e-filtermenudiv');\n      var filterDlg = this.element.querySelector('.e-filter-popup');\n      if (target) {\n        var gClient = this.element.getBoundingClientRect();\n        var fClient = target.getBoundingClientRect();\n        if (filterDlg) {\n          if (filterDlg.offsetWidth + fClient.right > gClient.right) {\n            filterDlg.style.left = (fClient.right - filterDlg.offsetWidth - gClient.left).toString() + 'px';\n          } else {\n            filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n          }\n        }\n      }\n    }\n  };\n  /**\n   * @param {any} callBack - specifies the callBack method\n   * @returns {void}\n   * @hidden\n   */\n  // eslint-disable-next-line\n  Grid.prototype.renderTemplates = function (callBack) {\n    var isReactChild = this.parentDetails && this.parentDetails.parentInstObj && this.parentDetails.parentInstObj.isReact;\n    if (isReactChild && this['portals']) {\n      this.parentDetails.parentInstObj['portals'] = this.parentDetails.parentInstObj['portals'].concat(this['portals']);\n      this.parentDetails.parentInstObj.renderTemplates(callBack);\n      this['portals'] = undefined;\n    } else {\n      var portals = 'portals';\n      this.notify('reactTemplateRender', this[\"\" + portals]);\n      this.renderReactTemplates(callBack);\n    }\n  };\n  /**\n   * Apply the changes to the Grid without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n  Grid.prototype.batchUpdate = function (changes) {\n    this.processRowChanges(changes);\n  };\n  /**\n   * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n   *\n   * @param  {BatchChanges} changes - Defines changes to be updated.\n   * @returns {void}\n   */\n  Grid.prototype.batchAsyncUpdate = function (changes) {\n    this.processBulkRowChanges(changes);\n  };\n  Grid.prototype.processBulkRowChanges = function (changes) {\n    var _this_1 = this;\n    if (!this.dataToBeUpdated) {\n      this.dataToBeUpdated = Object.assign({\n        addedRecords: [],\n        changedRecords: [],\n        deletedRecords: []\n      }, changes);\n      setTimeout(function () {\n        _this_1.processRowChanges(_this_1.dataToBeUpdated);\n        _this_1.dataToBeUpdated = null;\n      }, this.asyncTimeOut);\n    } else {\n      var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n      var keyField = this.getPrimaryKeyFieldNames()[0];\n      for (var i = 0; i < loopstring.length; i++) {\n        if (changes[loopstring[parseInt(i.toString(), 10)]]) {\n          compareChanges(this, changes, loopstring[parseInt(i.toString(), 10)], keyField);\n        }\n      }\n    }\n  };\n  Grid.prototype.processRowChanges = function (changes) {\n    var _this_1 = this;\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    changes = Object.assign({\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: []\n    }, changes);\n    var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n    if (this.getDataModule().isRemote()) {\n      promise.then(function () {\n        _this_1.setNewData();\n      });\n    } else {\n      this.setNewData();\n    }\n  };\n  Grid.prototype.setNewData = function () {\n    var _this_1 = this;\n    var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n    var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n    getData.then(function (e) {\n      _this_1.bulkRefresh(e.result, oldValues, e.count);\n    });\n  };\n  Grid.prototype.deleteRowElement = function (row) {\n    var tr = this.getRowElementByUID(row.uid);\n    remove(tr);\n  };\n  Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n    var _this_1 = this;\n    var rowObj = this.getRowsObject();\n    var keyField = this.getPrimaryKeyFieldNames()[0];\n    var _loop_5 = function (i) {\n      if (!result.filter(function (e) {\n        return e[\"\" + keyField] === rowObj[parseInt(i.toString(), 10)].data[\"\" + keyField];\n      }).length) {\n        this_5.deleteRowElement(rowObj[parseInt(i.toString(), 10)]);\n        rowObj.splice(i, 1);\n        i--;\n      }\n      out_i_1 = i;\n    };\n    var this_5 = this,\n      out_i_1;\n    for (var i = 0; i < rowObj.length; i++) {\n      _loop_5(i);\n      i = out_i_1;\n    }\n    var _loop_6 = function (i) {\n      var isRowExist;\n      oldValues.filter(function (e) {\n        if (e[\"\" + keyField] === result[parseInt(i.toString(), 10)][\"\" + keyField]) {\n          if (e !== result[parseInt(i.toString(), 10)]) {\n            _this_1.setRowData(result[parseInt(i.toString(), 10)][\"\" + keyField], result[parseInt(i.toString(), 10)]);\n          }\n          isRowExist = true;\n        }\n      });\n      if (!isRowExist) {\n        this_6.renderRowElement(result[parseInt(i.toString(), 10)], i);\n      }\n    };\n    var this_6 = this;\n    for (var i = 0; i < result.length; i++) {\n      _loop_6(i);\n    }\n    this.currentViewData = result;\n    var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n    resetRowIndex(this, this.getRowsObject(), rows);\n    setRowElements(this);\n    if (this.allowPaging) {\n      this.notify(events.inBoundModelChanged, {\n        module: 'pager',\n        properties: {\n          totalRecordsCount: count\n        }\n      });\n    }\n  };\n  Grid.prototype.renderRowElement = function (data, index) {\n    var row = new RowRenderer(this.serviceLocator, null, this);\n    var model = new RowModelGenerator(this);\n    var modelData = model.generateRows([data]);\n    var tr = row.render(modelData[0], this.getColumns());\n    this.addRowObject(modelData[0], index);\n    var tbody = this.getContentTable().querySelector(literals.tbody);\n    if (tbody.querySelector('.e-emptyrow')) {\n      var emptyRow = tbody.querySelector('.e-emptyrow');\n      emptyRow.parentNode.removeChild(emptyRow);\n      if (this.frozenRows && this.element.querySelector('.e-frozenrow-empty')) {\n        this.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n      }\n    }\n    if (this.frozenRows && index < this.frozenRows) {\n      tbody = this.getHeaderContent().querySelector(literals.tbody);\n    } else {\n      tbody = this.getContent().querySelector(literals.tbody);\n    }\n    tbody = this.getContent().querySelector(literals.tbody);\n    tbody.appendChild(tr);\n  };\n  Grid.prototype.addRowObject = function (row, index) {\n    this.getRowsObject().splice(index, 1, row);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Grid.prototype.updateVisibleExpandCollapseRows = function () {\n    var rows = this.getRowsObject();\n    for (var i = 0, len = rows.length; i < len; i++) {\n      if ((rows[parseInt(i.toString(), 10)].isDataRow || rows[parseInt(i.toString(), 10)].isAggregateRow) && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid) && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid).style.display === 'none') {\n        rows[parseInt(i.toString(), 10)].visible = false;\n      } else {\n        rows[parseInt(i.toString(), 10)].visible = true;\n      }\n    }\n  };\n  /**\n   * Method to sanitize any suspected untrusted strings and scripts before rendering them.\n   *\n   * @param {string} value - Specifies the html value to sanitize\n   * @returns {string} Returns the sanitized html string\n   * @hidden\n   */\n  Grid.prototype.sanitize = function (value) {\n    if (this.enableHtmlSanitizer) {\n      return SanitizeHtmlHelper.sanitize(value);\n    }\n    return value;\n  };\n  /**\n   * @param {string | number} height - specifies the height\n   * @returns {number | string} - specifies the height number\n   * @hidden\n   */\n  Grid.prototype.getHeight = function (height) {\n    if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n      height = parseInt(height, 10) / 100 * this.element.clientHeight;\n    } else if (!Number.isInteger(height) && this.height !== 'auto') {\n      height = parseInt(height, 10);\n    } else {\n      height = this.height;\n    }\n    return height;\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right content\n    */\n  Grid.prototype.getFrozenRightContent = function () {\n    return this.contentModule.getPanel();\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header\n    */\n  Grid.prototype.getFrozenRightHeader = function () {\n    return this.headerModule.getPanel();\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable header tbody\n    */\n  Grid.prototype.getMovableHeaderTbody = function () {\n    return this.getHeaderContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns movable content tbody\n    */\n  Grid.prototype.getMovableContentTbody = function () {\n    return this.getContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen header tbody\n    */\n  Grid.prototype.getFrozenHeaderTbody = function () {\n    return this.getHeaderContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen left content tbody\n    */\n  Grid.prototype.getFrozenLeftContentTbody = function () {\n    return this.getContent().querySelector(literals.tbody);\n  };\n  /**\n   * @hidden\n   * @returns {Element} - returns frozen right header tbody\n    */\n  Grid.prototype.getFrozenRightHeaderTbody = function () {\n    return this.getHeaderContent().querySelector(literals.tbody);\n  };\n  /**\n   * @returns {Element} returns frozen right content tbody\n    * @hidden\n   */\n  Grid.prototype.getFrozenRightContentTbody = function () {\n    return this.getContent().querySelector(literals.tbody);\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom filter dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n    if (this.filterModule) {\n      this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom sort dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n    if (this.sortModule) {\n      this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * @param {boolean} isCustom - Defines custom column chooser dialog open\n   * @returns {void}\n   * @hidden\n   */\n  Grid.prototype.showResponsiveCustomColumnChooser = function (isCustom) {\n    if (this.columnChooserModule) {\n      this.columnChooserModule.showCustomColumnChooser(isCustom || this.rowRenderingMode === 'Vertical');\n    }\n  };\n  /**\n   * To manually show the vertical row mode filter dialog\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showAdaptiveFilterDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomFilter(true);\n    }\n  };\n  /**\n   * To manually show the vertical row sort filter dialog\n   *\n   * @returns {void}\n   */\n  Grid.prototype.showAdaptiveSortDialog = function () {\n    if (this.enableAdaptiveUI) {\n      this.showResponsiveCustomSort(true);\n    }\n  };\n  /**\n   * @param {boolean} isColVirtualization - Defines column virtualization\n   * @returns {Column[]} returns array of column models\n   * @hidden\n   */\n  Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n    var cols = [];\n    var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n    for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n      var col = gridCols_1[_i];\n      if (col.visible) {\n        cols.push(col);\n      }\n    }\n    return cols;\n  };\n  Grid.prototype.enableInfiniteAggrgate = function () {\n    if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates && !this.groupSettings.enableLazyLoading) {\n      this.setProperties({\n        groupSettings: {\n          disablePageWiseAggregates: true\n        }\n      }, true);\n    }\n  };\n  var Grid_1;\n  __decorate([Property([])], Grid.prototype, \"currentViewData\", void 0);\n  __decorate([Property()], Grid.prototype, \"parentDetails\", void 0);\n  __decorate([Property()], Grid.prototype, \"showHider\", void 0);\n  __decorate([Property([])], Grid.prototype, \"columns\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableAltRow\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableHover\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableAutoFill\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowKeyboard\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableStickyHeader\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowTextWrap\", void 0);\n  __decorate([Complex({}, TextWrapSettings)], Grid.prototype, \"textWrapSettings\", void 0);\n  __decorate([Complex({}, ResizeSettings)], Grid.prototype, \"resizeSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowPaging\", void 0);\n  __decorate([Complex({}, PageSettings)], Grid.prototype, \"pageSettings\", void 0);\n  __decorate([Complex({}, LoadingIndicator)], Grid.prototype, \"loadingIndicator\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"enableVirtualMaskRow\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableVirtualization\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableColumnVirtualization\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n  __decorate([Complex({}, SearchSettings)], Grid.prototype, \"searchSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowSorting\", void 0);\n  __decorate([Property('Ellipsis')], Grid.prototype, \"clipMode\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowMultiSorting\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowExcelExport\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowPdfExport\", void 0);\n  __decorate([Complex({}, SortSettings)], Grid.prototype, \"sortSettings\", void 0);\n  __decorate([Complex({}, InfiniteScrollSettings)], Grid.prototype, \"infiniteScrollSettings\", void 0);\n  __decorate([Property(true)], Grid.prototype, \"allowSelection\", void 0);\n  __decorate([Property(-1)], Grid.prototype, \"selectedRowIndex\", void 0);\n  __decorate([Complex({}, SelectionSettings)], Grid.prototype, \"selectionSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowFiltering\", void 0);\n  __decorate([Property('Horizontal')], Grid.prototype, \"rowRenderingMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableAdaptiveUI\", void 0);\n  __decorate([Property('Both')], Grid.prototype, \"adaptiveUIMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowReordering\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowResizing\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n  __decorate([Complex({}, RowDropSettings)], Grid.prototype, \"rowDropSettings\", void 0);\n  __decorate([Complex({}, FilterSettings)], Grid.prototype, \"filterSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"allowGrouping\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableImmutableMode\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"showColumnMenu\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"autoFit\", void 0);\n  __decorate([Complex({}, GroupSettings)], Grid.prototype, \"groupSettings\", void 0);\n  __decorate([Complex({}, EditSettings)], Grid.prototype, \"editSettings\", void 0);\n  __decorate([Collection([], AggregateRow)], Grid.prototype, \"aggregates\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"showColumnChooser\", void 0);\n  __decorate([Complex({}, ColumnChooserSettings)], Grid.prototype, \"columnChooserSettings\", void 0);\n  __decorate([Property(false)], Grid.prototype, \"enableHeaderFocus\", void 0);\n  __decorate([Property('auto')], Grid.prototype, \"height\", void 0);\n  __decorate([Property('auto')], Grid.prototype, \"width\", void 0);\n  __decorate([Property('Default')], Grid.prototype, \"gridLines\", void 0);\n  __decorate([Property()], Grid.prototype, \"rowTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"emptyRecordTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"detailTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"childGrid\", void 0);\n  __decorate([Property()], Grid.prototype, \"queryString\", void 0);\n  __decorate([Property('AllPages')], Grid.prototype, \"printMode\", void 0);\n  __decorate([Property('Expanded')], Grid.prototype, \"hierarchyPrintMode\", void 0);\n  __decorate([Property([])], Grid.prototype, \"dataSource\", void 0);\n  __decorate([Property(null)], Grid.prototype, \"rowHeight\", void 0);\n  __decorate([Property()], Grid.prototype, \"query\", void 0);\n  __decorate([Property('USD')], Grid.prototype, \"currencyCode\", void 0);\n  __decorate([Property()], Grid.prototype, \"exportGrids\", void 0);\n  __decorate([Property()], Grid.prototype, \"toolbar\", void 0);\n  __decorate([Property()], Grid.prototype, \"contextMenuItems\", void 0);\n  __decorate([Property()], Grid.prototype, \"columnMenuItems\", void 0);\n  __decorate([Property()], Grid.prototype, \"toolbarTemplate\", void 0);\n  __decorate([Property()], Grid.prototype, \"pagerTemplate\", void 0);\n  __decorate([Property(0)], Grid.prototype, \"frozenRows\", void 0);\n  __decorate([Property(0)], Grid.prototype, \"frozenColumns\", void 0);\n  __decorate([Property('')], Grid.prototype, \"cssClass\", void 0);\n  __decorate([Property('All')], Grid.prototype, \"columnQueryMode\", void 0);\n  __decorate([Property({})], Grid.prototype, \"currentAction\", void 0);\n  __decorate([Property('')], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n  __decorate([Event()], Grid.prototype, \"created\", void 0);\n  __decorate([Event()], Grid.prototype, \"destroyed\", void 0);\n  __decorate([Event()], Grid.prototype, \"load\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"queryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"headerCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionBegin\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"actionFailure\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"recordDoubleClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"recordClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnSelecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnSelected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDeselecting\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDeselected\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDragStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDrag\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDrop\", void 0);\n  __decorate([Event()], Grid.prototype, \"printComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePrint\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportDetailDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportDetailTemplate\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeExcelExport\", void 0);\n  __decorate([Event()], Grid.prototype, \"excelExportComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePdfExport\", void 0);\n  __decorate([Event()], Grid.prototype, \"pdfExportComplete\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDragStartHelper\", void 0);\n  __decorate([Event()], Grid.prototype, \"detailDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDragStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDrag\", void 0);\n  __decorate([Event()], Grid.prototype, \"rowDrop\", void 0);\n  __decorate([Event()], Grid.prototype, \"toolbarClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchAdd\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchDelete\", void 0);\n  __decorate([Event()], Grid.prototype, \"batchCancel\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchAdd\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchDelete\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeBatchSave\", void 0);\n  __decorate([Event()], Grid.prototype, \"beginEdit\", void 0);\n  __decorate([Event()], Grid.prototype, \"commandClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellEdit\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSave\", void 0);\n  __decorate([Event()], Grid.prototype, \"cellSaved\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizing\", void 0);\n  __decorate([Event()], Grid.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], Grid.prototype, \"keyPressed\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeDataBound\", void 0);\n  __decorate([Event()], Grid.prototype, \"contextMenuOpen\", void 0);\n  __decorate([Event()], Grid.prototype, \"contextMenuClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnMenuOpen\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnMenuClick\", void 0);\n  __decorate([Event()], Grid.prototype, \"checkBoxChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeCopy\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforePaste\", void 0);\n  __decorate([Event()], Grid.prototype, \"beforeAutoFill\", void 0);\n  __decorate([Event()], Grid.prototype, \"columnDataStateChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataStateChange\", void 0);\n  __decorate([Event()], Grid.prototype, \"dataSourceChanged\", void 0);\n  __decorate([Event()], Grid.prototype, \"exportGroupCaption\", void 0);\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n  __decorate([Event()], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n  Grid = Grid_1 = __decorate([NotifyPropertyChanges], Grid);\n  return Grid;\n}(Component);\nexport { Grid };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","isNullOrUndefined","setValue","getValue","defaultCurrencyCode","Component","ChildProperty","Browser","closest","extend","addClass","removeClass","append","remove","classList","setStyleAttribute","Property","Collection","Complex","Event","NotifyPropertyChanges","L10n","EventHandler","KeyboardEvents","DataManager","DataUtil","UrlAdaptor","createSpinner","hideSpinner","showSpinner","Tooltip","iterateArrayOrObject","prepareColumns","parentsUntil","wrap","templateCompiler","isGroupAdaptive","refreshForeignData","getScrollBarWidth","getRowHeight","setColumnIndex","Global","ispercentageWidth","getNumberFormat","getTransformValues","setRowElements","resetRowIndex","compareChanges","getCellByColAndRowIndex","performComplexDataOperation","events","Render","Column","RenderType","RowRenderer","CellRenderer","CellRendererFactory","ServiceLocator","ValueFormatter","RendererFactory","ColumnWidthService","AriaService","FocusStrategy","PageSettings","ColumnChooserSettings","Selection","Search","ShowHide","Scroll","Print","AggregateRow","Clipboard","Logger","RowModelGenerator","SanitizeHtmlHelper","literals","HeaderCellRenderer","SortDescriptor","_super","apply","SortSettings","Predicate","InfiniteScrollSettings","FilterSettings","SelectionSettings","SearchSettings","RowDropSettings","TextWrapSettings","ResizeSettings","GroupSettings","EditSettings","LoadingIndicator","Grid","options","element","_this_1","call","isPreventScrollEvent","inViewIndexes","keyA","frozenRightCount","freezeColumnRefresh","rightcount","frozenLeftCount","leftcount","tablesCount","movableCount","movablecount","fixedcount","fixedCount","visibleFrozenLeft","visibleFrozenFixed","isPreparedFrozenColumns","visibleFrozenRight","visibleMovable","frozenLeftColumns","frozenRightColumns","movableColumns","fixedColumns","stackedLeft","stackedRight","stackedFixed","stackedMovable","stackedarrayLeft","stackedarrayRight","stackedarrayFixed","stackedarrayMovable","media","autoFitColumnsResize","tableIndex","componentRefresh","refresh","isChangeDataSourceCall","mergedColumns","isVirtualAdaptive","requireTemplateRef","vRows","vcRows","vGroupOffsets","rowUid","translateX","isManualRefresh","isAutoFitColumns","enableDeepCompare","totalDataRecordsCount","disableSelectedRecords","partialSelectedRecords","isSpan","islazyloadRequest","isAddNewRow","addNewRowFocus","lockcolPositionCount","prevPageMoving","pageTemplateChange","isAutoGen","isAutoGenerateColumns","pageRequireRefresh","mediaBindInstance","commandDelIndex","undefined","preventAutoFit","asyncTimeOut","isExportGrid","isWidgetsDestroyed","enableLogger","needsID","Grid_1","Inject","mergePersistGridData","getPersistData","keyEntity","ignoreOnPersist","pageSettings","filterSettings","groupSettings","searchSettings","sortSettings","columns","selectedRowIndex","scrollPosition","currentObject","parseInt","toString","_i","_a","val","temp","template","settings","assign","enableVirtualization","enablePersistence","contentModule","getPageFromTop","top","block","setProperties","captionTemplateRef","captionTemplate","isAngularCaptionTemplate","isAngular","pagerTemplate","persistData","addOnPersist","requiredModules","setFrozenCount","enableInfiniteAggrgate","modules","isDestroyed","allowFiltering","push","member","args","serviceLocator","name","allowExcelExport","allowPdfExport","allowSorting","sortedColumns","allowPaging","allowSelection","selectionSettings","resizeCheck","allowReordering","allowRowDragAndDrop","allowGrouping","aggregates","isDetail","toolbar","toolbarTemplate","enableColumnVirtualization","getFrozenColumns","frozenRows","isCommandColumn","editSettings","allowAdding","allowDeleting","allowEditing","extendRequiredModules","enableInfiniteScrolling","enableLazyLoading","contextMenuItems","showColumnMenu","showColumnChooser","isForeignKeyEnabled","autoFitColumns","getColumns","filter","autoFit","columnModel","columnMenu","columnMenuItems","contextMenu","allowResizing","preRender","initProperties","initializeServices","isInitial","mediaCol","isInitialLoad","allowServerDataBinding","ignoreCollectionWatch","mergeCells","isEdit","checkAllRows","isCheckBoxSelection","isPersistSelection","filterOperators","contains","endsWith","equal","greaterThan","greaterThanOrEqual","lessThan","lessThanOrEqual","notEqual","startsWith","wildCard","isNull","notNull","like","defaultLocale","EmptyRecord","True","False","InvalidFilterMessage","GroupDropArea","UnGroup","UnGroupButton","GroupDisable","FilterbarTitle","EmptyDataSourceError","Add","Edit","Cancel","Update","Delete","Pdfexport","Excelexport","Wordexport","Csvexport","Columnchooser","Save","Item","Items","EditOperationAlert","DeleteOperationAlert","SaveButton","OKButton","CancelButton","EditFormTitle","AddFormTitle","BatchSaveConfirm","BatchSaveLostChanges","ConfirmDelete","CancelEdit","ChooseColumns","ColumnMenu","SearchColumns","Matchs","FilterButton","FilterTitle","FilterIcon","ClearButton","StartsWith","NotStartsWith","Like","EndsWith","NotEndsWith","Contains","NotContains","IsNull","NotNull","IsEmpty","IsNotEmpty","Equal","NotEqual","LessThan","LessThanOrEqual","GreaterThan","GreaterThanOrEqual","ChooseDate","EnterValue","Copy","Group","Ungroup","GroupButton","UnGroupAria","GroupSeperator","UnGroupIcon","GroupedSortIcon","GroupedDrag","GroupCaption","CheckBoxLabel","SelectAllCheckbox","SelectRow","autoFitAll","AutoFitAll","AutoFit","Export","FirstPage","LastPage","PreviousPage","NextPage","SortAscending","SortDescending","EditRecord","DeleteRecord","FilterMenu","SelectAll","AddCurrentSelection","Blanks","FilterTrue","FilterFalse","NoResult","ClearFilter","Clear","NumberFilter","TextFilter","DateFilter","DateTimeFilter","MatchCase","Between","CustomFilter","CustomFilterPlaceHolder","CustomFilterDatePlaceHolder","AND","OR","ShowRowsWhere","ToolbarMenuDialogARIA","FilterMenuDialogARIA","ExcelFilterDialogARIA","CheckBoxFilterDialogARIA","DialogEditARIA","ColumnMenuDialogARIA","CustomFilterDialogARIA","SortAtoZ","SortZtoA","SortByOldest","SortByNewest","SortSmallestToLargest","SortLargestToSmallest","Sort","SortIcon","FilterDescription","SortDescription","ColumnMenuDescription","GroupDescription","ColumnHeader","TemplateCell","CommandColumnAria","DialogEdit","ClipBoard","AscendingText","DescendingText","NoneText","Expanded","Collapsed","keyConfigs","downArrow","upArrow","rightArrow","leftArrow","shiftDown","shiftUp","shiftRight","shiftLeft","home","end","escape","ctrlHome","ctrlEnd","pageUp","pageDown","ctrlAltPageUp","ctrlAltPageDown","altPageUp","altPageDown","altDownArrow","altUpArrow","ctrlDownArrow","ctrlUpArrow","ctrlPlusA","ctrlPlusP","insert","delete","f2","enter","ctrlEnter","shiftEnter","tab","shiftTab","space","ctrlPlusC","ctrlShiftPlusH","ctrlSpace","ctrlLeftArrow","ctrlRightArrow","render","log","ariaService","setOptions","role","cssClass","createElement","renderModule","searchModule","scrollModule","notify","initialLoad","enableQueryString","pageValue","URL","window","location","href","searchParams","get","indexOf","currentPageValue","currentPage","getDataModule","dataManager","dataSource","offline","url","result","aggregateModule","j","column","type","isReact","trigger","load","updateColumnModel","columnsPrepared","getMediaColumns","isFrozenGrid","setInitialFrozenColumnIndex","checkLockColumns","processModel","gridRender","wireEvents","addListener","updateDefaultCursor","updateStackedFilter","loadingIndicator","indicatorType","initialEnd","refreshMaskRow","refreshing","initialFrozenColumnIndex","index","showMaskRow","axisDirection","dialogElement","headerModule","gridHeader","getHeaderContent","firstChild","gridContent","getContent","gridFooter","getFooterContent","dialogHolder","querySelector","maskRowCount","Math","floor","getBoundingClientRect","height","maskTemplate","getShimmerTemplate","innerHTML","maskSpan","slice","querySelectorAll","add","enableRtl","style","paddingRight","paddingLeft","overflowY","contentHeight","maskTableHeight","pageSize","innerHeight","contentRowCount","ceil","rowRenderingMode","headerMaskTable","createEmptyMaskTable","contentMaskTable","maskRowContentScroll","content","createMaskTable","getContentMaskColumns","gridFooterContent","footerContentMaskTable","footerContent","translateMaskRow","maskElement","rowCount","table","className","tbody","row","attrs","cell","appendChild","cloneNode","parentElement","header","footer","gridContentScrollHeight","scrollHeight","maskTable","removeAttribute","position","zIndex","width","transform","setAttribute","maskColgroup","createMaskRow","frzTd","left","valueX","right","thead","rows","maskTHead","childNodes","maskTBody","rowCountElement","currentViewData","pagerModule","pagerObj","totalPages","altRow","i_1","altNumber","childGrid","rowsQuery","addEditRow","addEditRowIndex","splice","applyMaskRow","addEditMaskRow","tfoot","maskTFoot","headerContent","insertBefore","minScrollTop","scrollTop","rowHeight","maskRow","maskCells","maskCell","displayAsCheckBoxCell","refColgroup","refColumns","colgroup","td","colIndex","col","localTD","headerText","field","display","textAlign","toLowerCase","displayAsCheckBox","addShimmerEffect","e","maskTables","removeMaskRow","refreshMaskRowColgroupWidth","colGroup","getElementsByClassName","gcol","getShowHideService","getService","hideAtMedia","visible","pushMediaColumn","updateFrozenColumnsWidth","uid","matchMedia","mediaQueryUpdate","bind","updateMediaColumns","getColumnIndexByUid","columnIndex","some","mediaColumn","matches","invokedFromMedia","showHider","show","hide","refreshMediaCol","checkboxColumn","checkboxMode","enableHover","enableAdaptiveUI","widthService","setWidthToColumns","removeMediaListener","removeListener","eventInitializer","destroy","gridElement","hasGridChild","unwireEvents","destroyDependentModules","destroyTemplate","isVue","toolTipObj","isIE","keyboardModule","focusModule","clipboardModule","printModule","getModuleName","enableBoxSelection","enableAutoFill","cellSelectionMode","destroyAutoFillElements","setCSSClass","oldCSSClass","split","onPropertyChanged","newProp","oldProp","requireRefresh","requireGridRefresh","freezeRefresh","checkCursor","requestType","childGridParent","parentInstance","isEllipsisTooltip","close","properties","keys","updateColumnObject","properties_1","prop","uiUpdate","module","enable","inBoundModelChanged","isCancel","totalRecordsCount","showAddNewRow","refreshHeader","refreshUI","selectionModule","updateAutoFillPosition","rowTemplateFn","rowTemplate","emptyRecordTemplateFn","emptyRecordTemplate","detailTemplateFn","detailTemplate","parentDetails","document","parentID","ej2_instances","childGridObject","currentParent","currentParentInstance","currentChildObject","oldProperties","isQueryInvokedFromData","preventAdjustColumns","restoreAdjustColumns","extendedPropertyChange","modelChanged","maintainSelection","updateRTL","dataBind","removePadding","setPadding","toolbarModule","getToolbar","contextMenuModule","getContextMenu","columnMenuModule","getColumnMenu","showFilterBarOperator","rtlUpdated","resizeModule","updateResizeLines","updateGridLines","allowTextWrap","applyTextWrap","removeTextWrap","freezeRender","case","isModeChg","requestPendingState","getState","pageSizes","isRemote","isPending","isAllPage","count","json","clearSelection","getPrototypeOf","deepWatch","pKeyField","getPrimaryKeyFieldNames","props","setRowData","gResult","names","group","setState","resolver","isDataChanged","dataSourceModified","beforeRefreshOnDataChange","scrollRefresh","action","isSelectedRowIndexUpdating","selectRow","setWidthToTable","setFullScreenDialog","enableVerticalRendering","rowModeChange","addStickyListener","enableStickyHeader","fn_1","off","contentReady","on","muteOnChange","filterModule","refreshFilter","getTablesCount","headerCells","stdHdrCell","cols","isRecursion","len","updateLockableColumns","getFrozenLeftCount","getFrozenLeftColumnsCount","getFrozenMode","frozenName","frozenCount","frozenColumns","lockColumn","leftrightColumnWidth","getFrozenLeftColumns","getFrozenRightColumns","isRefresh","inview","map","v","vLen","getVisibleColumns","movable","isLeftRightFrozen","freeze","isFrozen","concat","getStackedHeaderColumnByHeaderText","stackedHeader","individualColumn","stackedColumn","getColumnIndexesInView","getQuery","query","getLocaleConstants","setColumnIndexesInView","indexes","getCurrentVisibleColumns","getPanel","setGridHeaderContent","setPanel","getContentTable","getTable","setGridContentTable","setTable","setGridContent","getHeaderTable","setGridHeaderTable","footerElement","getFooterContentTable","getPager","gridPager","setGridPager","getRowByIndex","lazyLoadRender","getMovableRowByIndex","getFrozenRowByIndex","getRows","getRowElements","getFrozenRightRowByIndex","getRowInfo","ele","rowCell","row_1","rowObj","getRowObjectFromUID","getAttribute","rowIndex","dataRowIndex","rowData","data","cellIndex","dataColIndex","row_2","isNaN","getIndentCount","rowsObject","cells","getMovableRows","getFrozenRightRows","getDataRows","getAllDataRows","includeAdd","children","shift","pop","hdrTbody","freezeRows","addMovableRows","dataRows","generateDataRows","fRows","mrows","includAdd","dRows","isCollapseStateEnabled","getMovableDataRows","getAllMovableDataRows","getFrozenDataRows","getAllFrozenDataRows","getFrozenRightDataRows","getAllFrozenRightDataRows","setCellValue","value","rowIdx","rowuID","pkName","fieldIdx","getColumnIndexByField","getColumnByField","rowObjects","selectedRow","tr","sanitize","getCellFromIndex","Idx","isRowDragable","sRow","refreshTD","refreshFooterRenderer","groupAggregates","queryCellInfo","focus","refreshReactColumnTemplateByUid","columnUid","renderTemplates","clearTemplate","isChildGrid","refreshReactTemplateTD","indent","childIndent","isChildRow","rowsObj","gridObj","isDataRow","isTemplate","cellRenderer","refreshGroupCaptionFooterTemplate","isDataCell","dataUid","refreshAggregateCell","refreshReactHeaderTemplateByUid","getNormalizedColumnIndex","_loop_1","headerCellRenderer","this_1","findIndex","getColumnHeaderByField","setSort","direction","filterElement","selectRowEle","changes","fRowTr","getRowsObject","setFrozenRowData","fTr","rowRenderer","getForeignKeyColumns","getColumnByIndex","getMovableCellFromIndex","getFrozenRightCellFromIndex","getColumnHeaderByIndex","getMovableColumnHeaderByIndex","getFrozenRightColumnHeaderByIndex","getFrozenLeftColumnHeaderByIndex","rowObject","rows_1","getMovableRowsObject","getFrozenRightRowsObject","getColumnHeaderByUid","item","getColumnByUid","isColumns","getStackedColumns","columns_1","getUidByColumnField","rowDropSettings","targetID","getColumnFieldNames","columnNames","getRowTemplate","getEmptyRecordTemplate","getDetailTemplate","getEditTemplate","editTemplateFn","getEditHeaderTemplate","editHeaderTemplateFn","getEditFooterTemplate","editFooterTemplateFn","k","isPrimaryKey","getSelectedRows","selectedRecords","getSelectedRowIndexes","selectedRowIndexes","getSelectedRowCellIndexes","selectedRowCellIndexes","getSelectedRecords","getSelectedColumnsUid","selectedColumnsIndexes","showColumns","showBy","hideColumns","hideBy","getFrozenCount","getFrozenRightColumnsCount","getMovableColumnsCount","isAutoWidth","autoCol_1","difference_1","autoWidth_1","isFrozenAuto","_loop_2","max","minWidth","parseFloat","maxWidth","tWidth_1","gWidth","this_2","isPercentageWidthGrid","refreshSplitFrozenColumn","splitFrozenCount","getVisibleFrozenLeftCount","getVisibleFrozenRightCount","getVisibleMovableCount","getMovableColumns","splitStackedColumns","pushStackedColumns","arr","stackedcol","stockCol","pushallcol","text","text1","isTrue","resetStackedColumns","headercol","gridcolumns","tempHead","firstcol","changedProperties","removeBorder","frozenLeftBorderColumns","lastVisibleLeftCol","frozenRightBorderColumns","firstVisibleRightCol","border","isVisibleColumns","getVisibleFrozenColumns","getVisibleFrozenColumnsCount","getVisibleFrozenCount","getFilterUIInfo","visibleFrozenColumns","cnt","goToPage","pageNo","updateExternalMessage","message","sortColumn","columnName","isMultiSort","sortModule","changeDataSource","clearSorting","removeSortColumn","clearGridActions","filterByColumn","fieldName","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","fields","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","rowIndexes","selectCell","selectCellsByRange","startIndex","endIndex","search","searchString","print","deleteRecord","fieldname","editModule","startEdit","endEdit","closeEdit","addRecord","deleteRow","editCell","saveCell","updateCell","updateRow","getBatchChanges","enableToolbarItems","items","isEnable","enableItems","copy","withHeader","recalcIndentWidth","indentWidth","offsetWidth","headerCol","contentCol","perPixel","parentOffset","applyWidth","newWidth","toFixed","columnWidthChanged","resetIndentWidth","tgridWidth","getTableWidth","setMinwidthBycalculation","refreshFrozenScrollbar","textWrapSettings","wrapMode","refreshHandlers","resizeFrozenRowBorder","makeStickyHeader","mode","drawBorders","reorderColumns","fromFName","toFName","reorderModule","reorderColumnByIndex","fromIndex","toIndex","reorderColumnByTargetIndex","reorderRows","fromIndexes","rowDragAndDropModule","refreshDataSource","disableRowDD","headerTable","contentTable","headerRows","disValue","firstElementChild","fieldNames","startRowIndex","endRowIndex","injectedModules","getInjectedModules","resize","find","injectModules","resizeSettings","tableWidth","percentageWidth","unit","widthUnit","defaultIndentWidth","indentWidthUnitFormat","headerIndentCol","contentIndentCol","setProperty","clientWidth","tableWidthUnitFormat","removeProperty","indentWidthUnitFormat_1","forEach","createColumnchooser","x","y","columnChooserModule","renderColumnChooser","register","localeObj","locale","valueFormatterService","gCols","sCols","flag","_loop_3","sLen","isFromGroup","this_3","showGroupedColumn","moduleName","headerTemplate","footerTemplate","parentKeyFieldValue","where","queryString","initForeignColumn","initForeignKeyColumn","isDevice","adaptiveUIMode","info","newRowPosition","rendererFactory","getRenderer","Header","Content","createGridPopUpElement","createTooltip","dataReady","setWidth","setHeight","popup","styles","tabIndex","gridLines","opensOn","getTooltipStatus","headerDivTag","htable","createTable","ctable","body","removeChild","mouseMoveHandler","prevElement","tagName","elemNames","domSetter","disableHtmlEncode","contentDiv","innerElement","innerText","enableHtmlSanitizer","enableHtmlParse","clipMode","scrollHandler","tag","myTableDiv","cssText","mySubDiv","myTable","myTr","mytd","onKeyPressed","mouseClickHandler","focusOutHandler","dblClickHandler","keyPressHandler","allowKeyboard","keyAction","keyActionHandler","eventName","tapEvent","keyDownHandler","headerRefreshed","refreshFrozenPosition","dataBoundFunction","addEventListener","dataBound","keyPressed","removeEventListener","getCurrentViewRecords","records","touches","checkEdit","preventDefault","cancel","recordClick","click","editedRow","addedRow","grid","id","dataRow","recordDoubleClick","dblclick","filterClear","relatedTarget","ariaOwns","keyPress","editNextValCell","editFormValidate","isShowAddedRowValidate","persistedData","getLocalData","dataObj","JSON","parse","isProtectedOnChange","keys_1","isArray","mergeColumns","storedColumn","storedColumns","_loop_4","localCol","tCol","this_4","commands","commandsTemplate","foreignKeyValue","presskey","stopImmediatePropagation","altKey","keyCode","groupCollapse","collapse","currentInfo","elementToFocus","focusContent","addOutline","enterKeyHandler","alertDObj","dialogObj","setInjectedModules","autoCol","obj","refreshColumns","refreshResizePosition","isForeignColumn","scrollLeft","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","exportGrids","gridIds","exportMultipleExcelGrids","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","exportMultiplePdfGrids","pdfExportModule","_this","currentGridId","currentGridInstance","getElementById","exportPromise","Promise","resolve","then","exportedGridResults","groupColumn","groupModule","groupExpandAll","expandAll","groupCollapseAll","collapseAll","clearGrouping","ungroupColumn","openColumnChooser","detailCollapseAll","detailRowModule","detailExpandAll","clearCellSelection","clearRowSelection","selectCells","rowCellIndexes","selectRowsByRange","isContextMenuOpen","isOpen","ensureModuleInjected","propertyNames","logger","loggerModule","applyBiggerTheme","getPreviousRowData","previousRowData","hideScroll","clientHeight","getRowIndexByPrimaryKey","isDetailRow","isCaptionRow","pKvalue","grabColumnByFieldFromAllCols","isForeignKey","grabColumnByUidFromAllCols","getFilteredRecords","generateQuery","getData","executeLocal","getUserAgent","userAgent","test","timer","setTimeout","clearTimeout","doubleTap","getRowUid","prefix","getRowElementByUID","rowEle","cntRows","rows_2","getHiddenColumns","calculatePageSizeByParentHeight","containerHeight","pagesize","nonContentHeight","getNoncontentHeight","showDropArea","getSummaryValues","summaryCol","summaryData","serverExcelExport","headers","isExcel","exportGrid","serverPdfExport","serverCsvExport","state","processQuery","queries","gridModel","include","sorted","setHeaderText","form","gridInput","stringify","method","headerInput","submit","format","getFormat","skeleton","isExpanded","updateRowValue","updateData","setForeignKeyData","colpending","getForeignKeyDataState","setForeignKeyDataState","resetFilterDlgPosition","filterDlg","gClient","fClient","callBack","isReactChild","parentInstObj","portals","renderReactTemplates","batchUpdate","processRowChanges","batchAsyncUpdate","processBulkRowChanges","dataToBeUpdated","addedRecords","changedRecords","deletedRecords","loopstring","keyField","promise","saveChanges","requiresCount","setNewData","oldValues","bulkRefresh","deleteRowElement","_loop_5","this_5","out_i_1","_loop_6","isRowExist","this_6","renderRowElement","model","modelData","generateRows","addRowObject","emptyRow","parentNode","updateVisibleExpandCollapseRows","isAggregateRow","getHeight","Number","isInteger","getFrozenRightContent","getFrozenRightHeader","getMovableHeaderTbody","getMovableContentTbody","getFrozenHeaderTbody","getFrozenLeftContentTbody","getFrozenRightHeaderTbody","getFrozenRightContentTbody","showResponsiveCustomFilter","isCustom","showCustomFilter","showResponsiveCustomSort","showCustomSort","showResponsiveCustomColumnChooser","showCustomColumnChooser","showAdaptiveFilterDialog","showAdaptiveSortDialog","isColVirtualization","gridCols","gridCols_1","disablePageWiseAggregates"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-grids/src/grid/base/grid.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { isNullOrUndefined, setValue, getValue, defaultCurrencyCode } from '@syncfusion/ej2-base';\nimport { Component, ChildProperty, Browser, closest, extend } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, append, remove, classList, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { Property, Collection, Complex, Event, NotifyPropertyChanges, L10n } from '@syncfusion/ej2-base';\nimport { EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { DataManager, DataUtil, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner, Tooltip } from '@syncfusion/ej2-popups';\nimport { iterateArrayOrObject, prepareColumns, parentsUntil, wrap, templateCompiler, isGroupAdaptive, refreshForeignData, getScrollBarWidth } from './util';\nimport { getRowHeight, setColumnIndex, Global, ispercentageWidth, getNumberFormat, getTransformValues } from './util';\nimport { setRowElements, resetRowIndex, compareChanges, getCellByColAndRowIndex, performComplexDataOperation } from './util';\nimport * as events from '../base/constant';\nimport { Render } from '../renderer/render';\nimport { Column } from '../models/column';\nimport { RenderType } from './enum';\nimport { RowRenderer } from '../renderer/row-renderer';\nimport { CellRenderer } from '../renderer/cell-renderer';\nimport { CellRendererFactory } from '../services/cell-render-factory';\nimport { ServiceLocator } from '../services/service-locator';\nimport { ValueFormatter } from '../services/value-formatter';\nimport { RendererFactory } from '../services/renderer-factory';\nimport { ColumnWidthService } from '../services/width-controller';\nimport { AriaService } from '../services/aria-service';\nimport { FocusStrategy } from '../services/focus-strategy';\nimport { PageSettings } from '../models/page-settings';\nimport { ColumnChooserSettings } from '../models/column-chooser-settings';\nimport { Selection } from '../actions/selection';\nimport { Search } from '../actions/search';\nimport { ShowHide } from '../actions/show-hide';\nimport { Scroll } from '../actions/scroll';\nimport { Print } from '../actions/print';\nimport { AggregateRow } from '../models/aggregate';\nimport { Clipboard } from '../actions/clipboard';\nimport { Logger } from '../actions/logger';\nimport { RowModelGenerator } from '../services/row-model-generator';\nimport { SanitizeHtmlHelper } from '@syncfusion/ej2-base';\nimport * as literals from '../base/string-literals';\nimport { HeaderCellRenderer } from '../renderer/header-cell-renderer';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    __decorate([\n        Property(false)\n    ], SortDescriptor.prototype, \"isFromGroup\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of Grid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property(false)\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"condition\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the infinite scroll behavior of Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n/**\n * Configures the filtering behavior of the Grid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property('OnEnter')\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Property(50)\n    ], FilterSettings.prototype, \"itemsCount\", void 0);\n    __decorate([\n        Property('Shimmer')\n    ], FilterSettings.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"enableCaseSensitivity\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"showFilterBarOperator\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n/**\n * Configures the selection behavior of the Grid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"enableSimpleMultiRowSelection\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"allowColumnSelection\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n/**\n * Configures the search behavior of the Grid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property([])\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property('')\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property(true)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreAccent\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n/**\n * Configures the row drop settings of the Grid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n/**\n * Configures the text wrap settings of the Grid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n/**\n * Configures the resize behavior of the Grid.\n */\nvar ResizeSettings = /** @class */ (function (_super) {\n    __extends(ResizeSettings, _super);\n    function ResizeSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Normal')\n    ], ResizeSettings.prototype, \"mode\", void 0);\n    return ResizeSettings;\n}(ChildProperty));\nexport { ResizeSettings };\n/**\n * Configures the group behavior of the Grid.\n */\nvar GroupSettings = /** @class */ (function (_super) {\n    __extends(GroupSettings, _super);\n    function GroupSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showDropArea\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showToggleButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"showGroupedColumn\", void 0);\n    __decorate([\n        Property(true)\n    ], GroupSettings.prototype, \"showUngroupButton\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"disablePageWiseAggregates\", void 0);\n    __decorate([\n        Property([])\n    ], GroupSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], GroupSettings.prototype, \"captionTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], GroupSettings.prototype, \"enableLazyLoading\", void 0);\n    return GroupSettings;\n}(ChildProperty));\nexport { GroupSettings };\n/**\n * Configures the edit behavior of the Grid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Normal')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property()\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property()\n    ], EditSettings.prototype, \"headerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], EditSettings.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showAddNewRow\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n/**\n * Configures the Loading Indicator of the Grid.\n */\nvar LoadingIndicator = /** @class */ (function (_super) {\n    __extends(LoadingIndicator, _super);\n    function LoadingIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Spinner')\n    ], LoadingIndicator.prototype, \"indicatorType\", void 0);\n    return LoadingIndicator;\n}(ChildProperty));\nexport { LoadingIndicator };\n/**\n * Represents the Grid component.\n * ```html\n * <div id=\"grid\"></div>\n * <script>\n *  var gridObj = new Grid({ allowPaging: true });\n *  gridObj.appendTo(\"#grid\");\n * </script>\n * ```\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Constructor for creating the component\n     *\n     * @param {GridModel} options - specifies the options\n     * @param {string | HTMLElement} element - specifies the element\n     * @hidden\n     */\n    function Grid(options, element) {\n        var _this_1 = _super.call(this, options, element) || this;\n        _this_1.isPreventScrollEvent = false;\n        _this_1.inViewIndexes = [];\n        _this_1.keyA = false;\n        _this_1.frozenRightCount = 0;\n        _this_1.freezeColumnRefresh = true;\n        _this_1.rightcount = 0;\n        _this_1.frozenLeftCount = 0;\n        _this_1.leftcount = 0;\n        _this_1.tablesCount = 1;\n        _this_1.movableCount = 0;\n        _this_1.movablecount = 0;\n        _this_1.fixedcount = 0;\n        _this_1.fixedCount = 0;\n        _this_1.visibleFrozenLeft = 0;\n        _this_1.visibleFrozenFixed = 0;\n        _this_1.isPreparedFrozenColumns = false;\n        _this_1.visibleFrozenRight = 0;\n        _this_1.visibleMovable = 0;\n        _this_1.frozenLeftColumns = [];\n        _this_1.frozenRightColumns = [];\n        _this_1.movableColumns = [];\n        _this_1.fixedColumns = [];\n        _this_1.stackedLeft = [];\n        _this_1.stackedRight = [];\n        _this_1.stackedFixed = [];\n        _this_1.stackedMovable = [];\n        _this_1.stackedarrayLeft = [];\n        _this_1.stackedarrayRight = [];\n        _this_1.stackedarrayFixed = [];\n        _this_1.stackedarrayMovable = [];\n        _this_1.media = {};\n        _this_1.autoFitColumnsResize = false;\n        /** @hidden */\n        _this_1.tableIndex = 0;\n        _this_1.componentRefresh = Component.prototype.refresh;\n        _this_1.isChangeDataSourceCall = false;\n        _this_1.mergedColumns = false;\n        /** @hidden */\n        _this_1.isVirtualAdaptive = false;\n        /** @hidden */\n        /**\n         * * If `requireTemplateRef` is set to false in the load event, then the template element can't be accessed in grid queryCellInfo, and rowDataBound events.\n         * * By default, React's grid queryCellInfo and rowDataBound events allow access to the template element.\n         * * Avoid accessing the template elements in the grid queryCellInfo and rowDataBound events to improve rendering performance by setting this value as false.\n         *\n         * @default true\n         */\n        _this_1.requireTemplateRef = true;\n        /** @hidden */\n        _this_1.vRows = [];\n        /** @hidden */\n        _this_1.vcRows = [];\n        /** @hidden */\n        _this_1.vGroupOffsets = {};\n        /** @hidden */\n        _this_1.rowUid = 0;\n        /** @hidden */\n        _this_1.translateX = 0;\n        /** @hidden */\n        _this_1.isManualRefresh = false;\n        /** @hidden */\n        _this_1.isAutoFitColumns = false;\n        /** @hidden */\n        _this_1.enableDeepCompare = false;\n        /** @hidden */\n        _this_1.totalDataRecordsCount = 0;\n        /** @hidden */\n        _this_1.disableSelectedRecords = [];\n        /** @hidden */\n        _this_1.partialSelectedRecords = [];\n        /** @hidden */\n        _this_1.isSpan = false;\n        /** @hidden */\n        _this_1.islazyloadRequest = false;\n        /** @hidden */\n        _this_1.isAddNewRow = false;\n        /** @hidden */\n        _this_1.addNewRowFocus = true;\n        /** @hidden */\n        _this_1.lockcolPositionCount = 0;\n        /** @hidden */\n        _this_1.prevPageMoving = false;\n        /** @hidden */\n        _this_1.pageTemplateChange = false;\n        /** @hidden */\n        _this_1.isAutoGen = false;\n        /** @hidden */\n        _this_1.isAutoGenerateColumns = false;\n        /** @hidden */\n        _this_1.pageRequireRefresh = true;\n        _this_1.mediaBindInstance = {};\n        /** @hidden */\n        _this_1.commandDelIndex = undefined;\n        /** @hidden */\n        _this_1.preventAutoFit = false;\n        /** @hidden */\n        _this_1.asyncTimeOut = 50;\n        /** @hidden */\n        _this_1.isExportGrid = false;\n        /** @hidden */\n        _this_1.isWidgetsDestroyed = false;\n        _this_1.enableLogger = false;\n        _this_1.needsID = true;\n        Grid_1.Inject(Selection);\n        setValue('mergePersistData', _this_1.mergePersistGridData, _this_1);\n        return _this_1;\n    }\n    Grid_1 = Grid;\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} returns the persist data\n     */\n    Grid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'groupSettings', 'columns', 'searchSettings', 'selectedRowIndex', 'scrollPosition'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent'],\n            groupSettings: ['showDropArea', 'showToggleButton', 'showGroupedColumn', 'showUngroupButton',\n                'disablePageWiseAggregates', 'hideCaptionCount'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: [], scrollPosition: []\n        };\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[parseInt(i.toString(), 10)]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[parseInt(i.toString(), 10)]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[\"\" + val];\n            }\n        }\n        var temp = this.pageSettings.template;\n        var settings = Object.assign({ template: undefined }, this.pageSettings);\n        if (this.enableVirtualization && this.enablePersistence && this.contentModule &&\n            this.contentModule.getPageFromTop) {\n            settings['properties']['currentPage'] = this.contentModule.getPageFromTop(this.scrollPosition.top, { block: 1 });\n        }\n        this.setProperties({ pageSettings: settings }, true);\n        var captionTemplateRef = this.groupSettings.captionTemplate;\n        var isAngularCaptionTemplate = captionTemplateRef && this.isAngular;\n        if (isAngularCaptionTemplate) {\n            delete this.groupSettings['properties']['captionTemplate'];\n        }\n        this.pageTemplateChange = !isNullOrUndefined(this.pagerTemplate);\n        var persistData = this.addOnPersist(keyEntity);\n        settings.template = temp;\n        this.setProperties({ pageSettings: settings }, true);\n        if (isAngularCaptionTemplate) {\n            this.groupSettings.captionTemplate = captionTemplateRef;\n        }\n        return persistData;\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} Returns the module Declaration\n     * @hidden\n     */\n    Grid.prototype.requiredModules = function () {\n        this.setFrozenCount();\n        this.enableInfiniteAggrgate();\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        if (this.allowFiltering) {\n            modules.push({\n                member: 'filter',\n                args: [this, this.filterSettings, this.serviceLocator],\n                name: 'Filter'\n            });\n        }\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport',\n                args: [this, this.serviceLocator],\n                name: 'ExcelExport'\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport',\n                args: [this],\n                name: 'PdfExport'\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this, this.sortSettings, this.sortedColumns, this.serviceLocator],\n                name: 'Sort'\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings],\n                name: 'Page'\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this, this.selectionSettings, this.serviceLocator],\n                name: 'Selection'\n            });\n        }\n        if (this.resizeCheck()) {\n            modules.push({\n                member: 'resize',\n                args: [this],\n                name: 'Resize'\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this],\n                name: 'Reorder'\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this],\n                name: 'RowDD'\n            });\n        }\n        if (this.allowGrouping) {\n            modules.push({\n                member: 'group',\n                args: [this, this.groupSettings, this.sortedColumns, this.serviceLocator],\n                name: 'Group'\n            });\n        }\n        if (this.aggregates.length) {\n            modules.push({ member: 'aggregate', args: [this, this.serviceLocator], name: 'Aggregate' });\n        }\n        if (this.isDetail()) {\n            modules.push({\n                member: 'detailRow',\n                args: [this, this.serviceLocator],\n                name: 'DetailRow'\n            });\n        }\n        if (this.toolbar || this.toolbarTemplate) {\n            modules.push({\n                member: 'toolbar',\n                args: [this, this.serviceLocator],\n                name: 'Toolbar'\n            });\n        }\n        if (this.enableVirtualization || this.enableColumnVirtualization) {\n            modules.push({\n                member: 'virtualscroll',\n                args: [this, this.serviceLocator],\n                name: 'VirtualScroll'\n            });\n        }\n        if (this.getFrozenColumns() || this.frozenRows || this.frozenRightCount || this.frozenLeftCount) {\n            modules.push({ member: 'freeze', args: [this, this.serviceLocator], name: 'Freeze' });\n        }\n        if (!isNullOrUndefined(this.columns) && this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this, this.serviceLocator],\n                name: 'CommandColumn'\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this, this.serviceLocator],\n                name: 'Edit'\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    Grid.prototype.extendRequiredModules = function (modules) {\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this, this.serviceLocator],\n                name: 'InfiniteScroll'\n            });\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            modules.push({\n                member: 'lazyLoadGroup',\n                args: [this, this.serviceLocator],\n                name: 'LazyLoadGroup'\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator],\n                name: 'ContextMenu'\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu',\n                args: [this, this.serviceLocator],\n                name: 'ColumnMenu'\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'columnChooser',\n                args: [this, this.serviceLocator],\n                name: 'ColumnChooser'\n            });\n        }\n        if (!isNullOrUndefined(this.columns) && this.isForeignKeyEnabled(this.columns)) {\n            modules.push({ member: 'foreignKey', args: [this, this.serviceLocator], name: 'ForeignKey' });\n        }\n        if (this.enableLogger) {\n            modules.push({ member: 'logger', args: [this], name: 'Logger' });\n        }\n    };\n    Grid.prototype.resizeCheck = function () {\n        var autoFitColumns = this.getColumns().filter(function (c) { return c.autoFit === true; }).length ? true : false;\n        if (!isNullOrUndefined(this.columnModel) && this.columnModel.length && !(this.columnModel[0] instanceof Column)) {\n            this.columnModel = [];\n        }\n        var columnMenu = this.showColumnMenu && (!this.columnMenuItems || this.columnMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length) ? true : false;\n        var contextMenu = this.contextMenuItems && this.contextMenuItems\n            .filter(function (c) { return c === 'AutoFit' || c === 'AutoFitAll'; }).length ? true : false;\n        return this.allowResizing || this.autoFitColumnsResize || autoFitColumns || columnMenu || contextMenu;\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.preRender = function () {\n        this.serviceLocator = new ServiceLocator;\n        this.initProperties();\n        this.initializeServices();\n    };\n    Grid.prototype.initProperties = function () {\n        this.isInitial = true;\n        this.sortedColumns = [];\n        this.inViewIndexes = [];\n        this.mediaCol = [];\n        this.isInitialLoad = false;\n        this.allowServerDataBinding = false;\n        this.ignoreCollectionWatch = true;\n        this.mergeCells = {};\n        this.isEdit = false;\n        this.checkAllRows = 'None';\n        this.isCheckBoxSelection = false;\n        this.isPersistSelection = false;\n        this.componentRefresh = Component.prototype.refresh;\n        this.freezeColumnRefresh = true;\n        this.filterOperators = {\n            contains: 'contains', endsWith: 'endswith', equal: 'equal', greaterThan: 'greaterthan', greaterThanOrEqual: 'greaterthanorequal',\n            lessThan: 'lessthan', lessThanOrEqual: 'lessthanorequal', notEqual: 'notequal', startsWith: 'startswith', wildCard: 'wildcard',\n            isNull: 'isnull', notNull: 'notnull', like: 'like'\n        };\n        this.defaultLocale = {\n            EmptyRecord: 'No records to display',\n            True: 'true',\n            False: 'false',\n            InvalidFilterMessage: 'Invalid Filter Data',\n            GroupDropArea: 'Drag a column header here to group its column',\n            UnGroup: 'Click here to ungroup',\n            UnGroupButton: 'Click here to ungroup',\n            GroupDisable: 'Grouping is disabled for this column',\n            FilterbarTitle: '\\'s filter bar cell',\n            EmptyDataSourceError: 'DataSource must not be empty at initial load since columns are generated from dataSource in AutoGenerate Column Grid',\n            // Toolbar Items\n            Add: 'Add',\n            Edit: 'Edit',\n            Cancel: 'Cancel',\n            Update: 'Update',\n            Delete: 'Delete',\n            Print: 'Print',\n            Pdfexport: 'PDF Export',\n            Excelexport: 'Excel Export',\n            Wordexport: 'Word Export',\n            Csvexport: 'CSV Export',\n            Search: 'Search',\n            Columnchooser: 'Columns',\n            Save: 'Save',\n            Item: 'item',\n            Items: 'items',\n            EditOperationAlert: 'No records selected for edit operation',\n            DeleteOperationAlert: 'No records selected for delete operation',\n            SaveButton: 'Save',\n            OKButton: 'OK',\n            CancelButton: 'Cancel',\n            EditFormTitle: 'Details of ',\n            AddFormTitle: 'Add New Record',\n            BatchSaveConfirm: 'Are you sure you want to save changes?',\n            BatchSaveLostChanges: 'Unsaved changes will be lost. Are you sure you want to continue?',\n            ConfirmDelete: 'Are you sure you want to Delete Record?',\n            CancelEdit: 'Are you sure you want to Cancel the changes?',\n            ChooseColumns: 'Choose Column',\n            ColumnMenu: 'Column Menu',\n            SearchColumns: 'search columns',\n            Matchs: 'No matches found',\n            FilterButton: 'Filter',\n            FilterTitle: 'Filter',\n            FilterIcon: 'Filter',\n            ClearButton: 'Clear',\n            StartsWith: 'Starts With',\n            NotStartsWith: 'Does Not Start With',\n            Like: 'Like',\n            EndsWith: 'Ends With',\n            NotEndsWith: 'Does Not End With',\n            Contains: 'Contains',\n            NotContains: 'Does Not Contain',\n            IsNull: 'Null',\n            NotNull: 'Not Null',\n            IsEmpty: 'Empty',\n            IsNotEmpty: 'Not Empty',\n            Equal: 'Equal',\n            NotEqual: 'Not Equal',\n            LessThan: 'Less Than',\n            LessThanOrEqual: 'Less Than Or Equal',\n            GreaterThan: 'Greater Than',\n            GreaterThanOrEqual: 'Greater Than Or Equal',\n            ChooseDate: 'Choose a Date',\n            EnterValue: 'Enter the value',\n            Copy: 'Copy',\n            Group: 'Group by this column',\n            Ungroup: 'Ungroup by this column',\n            GroupButton: 'Group button',\n            UnGroupAria: 'ungroup button',\n            GroupSeperator: 'Separator for the grouped columns',\n            UnGroupIcon: 'ungroup the grouped column ',\n            GroupedSortIcon: 'sort the grouped column ',\n            GroupedDrag: 'Drag the grouped column',\n            GroupCaption: ' is groupcaption cell',\n            CheckBoxLabel: 'checkbox',\n            SelectAllCheckbox: 'Select all checkbox',\n            SelectRow: 'Select row',\n            autoFitAll: 'Autofit all columns',\n            autoFit: 'Autofit this column',\n            AutoFitAll: 'Autofit all columns',\n            AutoFit: 'Autofit this column',\n            Export: 'Export',\n            FirstPage: 'First Page',\n            LastPage: 'Last Page',\n            PreviousPage: 'Previous Page',\n            NextPage: 'Next Page',\n            SortAscending: 'Sort Ascending',\n            SortDescending: 'Sort Descending',\n            EditRecord: 'Edit Record',\n            DeleteRecord: 'Delete Record',\n            FilterMenu: 'Filter',\n            SelectAll: 'Select All',\n            AddCurrentSelection: 'Add current selection to filter',\n            Blanks: 'Blanks',\n            FilterTrue: 'True',\n            FilterFalse: 'False',\n            NoResult: 'No matches found',\n            ClearFilter: 'Clear Filter',\n            Clear: 'Clear',\n            NumberFilter: 'Number Filters',\n            TextFilter: 'Text Filters',\n            DateFilter: 'Date Filters',\n            DateTimeFilter: 'DateTime Filters',\n            MatchCase: 'Match Case',\n            Between: 'Between',\n            CustomFilter: 'Custom Filter',\n            CustomFilterPlaceHolder: 'Enter the value',\n            CustomFilterDatePlaceHolder: 'Choose a date',\n            AND: 'AND',\n            OR: 'OR',\n            ShowRowsWhere: 'Show rows where:',\n            ToolbarMenuDialogARIA: 'Toolbar menu dialog',\n            FilterMenuDialogARIA: 'Filter menu',\n            ExcelFilterDialogARIA: 'Excel filter',\n            CheckBoxFilterDialogARIA: 'Checkbox filter',\n            DialogEditARIA: 'Edit dialog',\n            ColumnMenuDialogARIA: 'Column menu dialog',\n            CustomFilterDialogARIA: 'Customer filter dialog',\n            SortAtoZ: 'Sort A to Z',\n            SortZtoA: 'Sort Z to A',\n            SortByOldest: 'Sort by Oldest',\n            SortByNewest: 'Sort by Newest',\n            SortSmallestToLargest: 'Sort Smallest to Largest',\n            SortLargestToSmallest: 'Sort Largest to Smallest',\n            Sort: 'Sort',\n            SortIcon: 'Sort',\n            FilterDescription: 'Press Alt Down to open filter Menu',\n            SortDescription: 'Press Enter to sort',\n            ColumnMenuDescription: 'Press Alt Down to open Column Menu',\n            GroupDescription: 'Press Ctrl space to group',\n            ColumnHeader: ' column header ',\n            TemplateCell: ' is template cell',\n            CommandColumnAria: 'is Command column column header ',\n            DialogEdit: 'Dialog edit',\n            ClipBoard: 'clipboard',\n            AscendingText: 'Ascending',\n            DescendingText: 'Descending',\n            NoneText: 'None',\n            Expanded: 'Expanded',\n            Collapsed: 'Collapsed'\n        };\n        this.keyConfigs = {\n            downArrow: 'downarrow',\n            upArrow: 'uparrow',\n            rightArrow: 'rightarrow',\n            leftArrow: 'leftarrow',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftRight: 'shift+rightarrow',\n            shiftLeft: 'shift+leftarrow',\n            home: 'home',\n            end: 'end',\n            escape: 'escape',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            pageUp: 'pageup',\n            pageDown: 'pagedown',\n            ctrlAltPageUp: 'ctrl+alt+pageup',\n            ctrlAltPageDown: 'ctrl+alt+pagedown',\n            altPageUp: 'alt+pageup',\n            altPageDown: 'alt+pagedown',\n            altDownArrow: 'alt+downarrow',\n            altUpArrow: 'alt+uparrow',\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlPlusA: 'ctrl+A',\n            ctrlPlusP: 'ctrl+P',\n            insert: 'insert',\n            delete: 'delete',\n            f2: 'f2',\n            enter: 'enter',\n            ctrlEnter: 'ctrl+enter',\n            shiftEnter: 'shift+enter',\n            tab: 'tab',\n            shiftTab: 'shift+tab',\n            space: 'space',\n            ctrlPlusC: 'ctrl+C',\n            ctrlShiftPlusH: 'ctrl+shift+H',\n            ctrlSpace: 'ctrl+space',\n            ctrlLeftArrow: 'ctrl+leftarrow',\n            ctrlRightArrow: 'ctrl+rightarrow'\n        };\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.render = function () {\n        this.log(['module_missing', 'promise_enabled', 'locale_missing', 'check_datasource_columns']);\n        this.ariaService.setOptions(this.element, { role: 'grid' });\n        createSpinner({ target: this.element, cssClass: this.cssClass ? this.cssClass : null }, this.createElement);\n        this.renderModule = new Render(this, this.serviceLocator);\n        this.searchModule = new Search(this);\n        this.scrollModule = new Scroll(this);\n        this.notify(events.initialLoad, {});\n        if (this.pageSettings.enableQueryString) {\n            var pageValue = new URL(window.location.href).searchParams.get('page');\n            if (!isNullOrUndefined(pageValue) && window.location.href.indexOf('?page=') > 0) {\n                var currentPageValue = parseInt(pageValue, 10);\n                this.setProperties({ pageSettings: { currentPage: currentPageValue } }, true);\n                this.pageSettings.currentPage = currentPageValue;\n            }\n        }\n        if ((this.getDataModule().dataManager.dataSource.offline === true || this.getDataModule().dataManager.dataSource.url === undefined)\n            && !(!isNullOrUndefined(this.dataSource) && this.dataSource.result)) {\n            this.isVirtualAdaptive = true;\n        }\n        if (this.aggregateModule && this.aggregates.length) {\n            for (var i = 0; i < this.aggregates.length; i++) {\n                for (var j = 0; j < this.aggregates[parseInt(i.toString(), 10)].columns.length; j++) {\n                    var column = this.aggregates[parseInt(i.toString(), 10)].columns[parseInt(j.toString(), 10)];\n                    if (column['types']) {\n                        column.type = column['types'];\n                    }\n                }\n            }\n        }\n        if (this.isReact) {\n            var args = { requireTemplateRef: this.requireTemplateRef };\n            this.trigger(events.load, args);\n            if (!args.requireTemplateRef) {\n                this.requireTemplateRef = args.requireTemplateRef;\n            }\n        }\n        else {\n            this.trigger(events.load);\n        }\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        if (this.enableColumnVirtualization && this.isChangeDataSourceCall && this.columnModel) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        this.isPreparedFrozenColumns = true;\n        if (this.enablePersistence) {\n            this.notify(events.columnsPrepared, {});\n        }\n        this.getMediaColumns();\n        setColumnIndex(this.columns);\n        if (this.isFrozenGrid() && !this.mergedColumns) {\n            this.setInitialFrozenColumnIndex(this.columns);\n        }\n        this.checkLockColumns(this.columns);\n        this.getColumns();\n        this.processModel();\n        this.gridRender();\n        this.wireEvents();\n        this.addListener();\n        this.updateDefaultCursor();\n        this.updateStackedFilter();\n        if (this.loadingIndicator.indicatorType === 'Spinner') {\n            this.showSpinner();\n        }\n        this.notify(events.initialEnd, {});\n        if (this.loadingIndicator.indicatorType === 'Shimmer') {\n            this.refreshMaskRow();\n        }\n        if (this.refreshing) {\n            this.trigger('created');\n        }\n    };\n    Grid.prototype.setInitialFrozenColumnIndex = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = columns[parseInt(i.toString(), 10)];\n            column[\"\" + literals.initialFrozenColumnIndex] = column.index;\n            if (column.columns) {\n                this.setInitialFrozenColumnIndex(column.columns);\n            }\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showSpinner = function () {\n        if (!this.isExportGrid) {\n            showSpinner(this.element);\n        }\n    };\n    /**\n     * By default, grid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideSpinner = function () {\n        if (!this.isExportGrid) {\n            hideSpinner(this.element);\n        }\n    };\n    Grid.prototype.showMaskRow = function (axisDirection, dialogElement) {\n        if (isNullOrUndefined(this.headerModule) || isNullOrUndefined(this.contentModule)) {\n            return;\n        }\n        var gridHeader = this.getHeaderContent().firstChild;\n        var gridContent = this.getContent().firstChild;\n        var gridFooter = this.getFooterContent();\n        if (dialogElement) {\n            var dialogHolder = dialogElement.querySelector('.e-checkboxlist');\n            var maskRowCount = Math.floor(dialogHolder.getBoundingClientRect().height / this.getRowHeight());\n            var maskTemplate = '<div class=\"e-ftrchk e-mask-ftrchk\" style=\"width: 100%;\">'\n                + '<div class=\"e-checkbox-wrapper\" style=\"width: 100%;\"><input class=\"e-chk-hidden\">'\n                + this.getShimmerTemplate() + this.getShimmerTemplate() + '</div></div>';\n            dialogHolder.innerHTML = '';\n            for (var i = 0; i < maskRowCount; i++) {\n                dialogHolder.innerHTML += maskTemplate;\n                var maskSpan = [].slice.call(dialogHolder\n                    .querySelectorAll('.e-mask:not(.e-mask-checkbox-filter-intent):not(.e-mask-checkbox-filter-span-intent)'));\n                maskSpan[0].classList.add('e-mask-checkbox-filter-intent');\n                maskSpan[1].classList.add('e-mask-checkbox-filter-span-intent');\n            }\n            return;\n        }\n        if ((!this.enableRtl && !this.getHeaderContent().style.paddingRight)\n            || (this.enableRtl && !this.getHeaderContent().style.paddingLeft)) {\n            gridContent.style.overflowY = 'hidden';\n        }\n        if (!this.isInitialLoad && !this.getColumns().length) {\n            var contentHeight = gridContent.getBoundingClientRect().height;\n            var maskTableHeight = contentHeight === 0 ? this.allowPaging ? this.pageSettings.pageSize * this.getRowHeight()\n                : window.innerHeight : contentHeight;\n            var contentRowCount = Math.ceil(maskTableHeight / this.getRowHeight());\n            if (this.rowRenderingMode !== 'Vertical') {\n                this.headerMaskTable = this.createEmptyMaskTable(gridHeader, 1);\n            }\n            this.contentMaskTable = this.createEmptyMaskTable(gridContent, contentRowCount);\n            return;\n        }\n        this.maskRowContentScroll = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? true : false;\n        if (!this.contentMaskTable) {\n            var content = gridContent;\n            if (this.enableVirtualization || this.enableColumnVirtualization) {\n                content = content.querySelector('.e-virtualtable');\n            }\n            if (!isNullOrUndefined(content.querySelector('tbody'))) {\n                this.contentMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n            }\n        }\n        if (!this.headerMaskTable && (this.isFrozenGrid() || (this.enableColumnVirtualization && axisDirection === 'X'))) {\n            var content = gridHeader;\n            if (this.enableColumnVirtualization && axisDirection === 'X') {\n                content = content.querySelector('.e-virtualtable');\n            }\n            this.headerMaskTable = this.createMaskTable(content, this.getContentMaskColumns(), axisDirection);\n        }\n        if (gridFooter && gridFooter.querySelector('.e-summaryrow')) {\n            var gridFooterContent = gridFooter.firstChild;\n            if (!this.footerContentMaskTable) {\n                var footerContent = gridFooterContent;\n                this.footerContentMaskTable = this.createMaskTable(footerContent);\n            }\n        }\n        if (!(this.enableVirtualization && axisDirection)) {\n            EventHandler.add(gridContent, 'scroll', this.translateMaskRow, this);\n        }\n    };\n    Grid.prototype.getContentMaskColumns = function () {\n        return this.getColumns();\n    };\n    Grid.prototype.createEmptyMaskTable = function (maskElement, rowCount) {\n        var table = this.createElement('table', { className: 'e-table e-masked-table' });\n        var tbody = this.createElement('tbody', { className: 'e-masked-tbody' });\n        var row = this.createElement('tr', { className: 'e-masked-row e-row', attrs: {\n                style: 'height: ' + this.getRowHeight() + 'px;'\n            } });\n        var cell = this.createElement('td', { className: 'e-masked-cell e-rowcell' });\n        cell.innerHTML = this.getShimmerTemplate();\n        row.appendChild(cell);\n        for (var i = 0; i < rowCount; i++) {\n            tbody.appendChild(row.cloneNode(true));\n        }\n        table.appendChild(tbody);\n        maskElement.appendChild(table);\n        return table;\n    };\n    Grid.prototype.createMaskTable = function (element, columns, axisDirection) {\n        var parentElement = element;\n        var header = closest(parentElement, '.e-gridheader') ? true : false;\n        var content = closest(parentElement, '.e-gridcontent') ? true : false;\n        var footer = closest(parentElement, '.e-gridfooter') ? true : false;\n        var gridContent = this.getContent().firstChild;\n        var gridContentScrollHeight = gridContent.scrollHeight;\n        var table = parentElement.querySelector('table');\n        var maskTable = table.cloneNode();\n        maskTable.removeAttribute('role');\n        maskTable.removeAttribute('id');\n        maskTable.style.position = 'absolute';\n        maskTable.style.zIndex = '5';\n        maskTable.style.width = table.getBoundingClientRect().width + 'px';\n        if (header && !(this.enableColumnVirtualization && axisDirection === 'X')) {\n            maskTable.style.transform = 'translate(0px,'\n                + table.querySelector('thead').getBoundingClientRect().height + 'px)';\n        }\n        maskTable.setAttribute('class', 'e-table e-masked-table');\n        var maskColgroup = table.querySelector('colgroup').cloneNode(true);\n        maskColgroup.removeAttribute('id');\n        maskColgroup.setAttribute('class', 'e-masked-colgroup');\n        maskTable.appendChild(maskColgroup);\n        if (header && this.enableColumnVirtualization && axisDirection === 'X') {\n            var row = this.createMaskRow(maskColgroup, columns);\n            if (this.isFrozenGrid()) {\n                var frzTd = [].slice.call(row.querySelectorAll('.e-rowcell'));\n                for (var i = 0; i < frzTd.length; i++) {\n                    if (i < this.frozenLeftCount) {\n                        if (this.frozenLeftCount - 1 === i) {\n                            frzTd[parseInt(i.toString(), 10)].classList.add('e-freezeleftborder');\n                        }\n                        frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                        frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n                        frzTd[parseInt(i.toString(), 10)].style.left = (columns[parseInt(i.toString(), 10)].valueX -\n                            this.translateX) + 'px';\n                    }\n                    else if ((frzTd.length - this.frozenRightCount) <= i && columns[parseInt(i.toString(), 10)]) {\n                        if ((frzTd.length - this.frozenRightCount) === i) {\n                            frzTd[parseInt(i.toString(), 10)].classList.add('e-freezerightborder');\n                        }\n                        frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                        frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n                        frzTd[parseInt(i.toString(), 10)].style.right = (this.translateX +\n                            columns[parseInt(i.toString(), 10)].valueX) + 'px';\n                    }\n                }\n            }\n            var thead = table.querySelector('thead');\n            var rows = [].slice.call(thead.querySelectorAll('tr'));\n            var maskTHead = thead.cloneNode();\n            maskTHead.removeAttribute('role');\n            maskTHead.setAttribute('class', 'e-masked-thead');\n            var rowCount = rows.length;\n            for (var i = 0; i < rowCount; i++) {\n                maskTHead.appendChild(row.cloneNode(true));\n                maskTHead.childNodes[parseInt(i.toString(), 10)].style\n                    .height = rows[parseInt(i.toString(), 10)].getBoundingClientRect().height + 'px';\n            }\n            maskTable.appendChild(maskTHead);\n        }\n        var maskTBody = table.querySelector('tbody').cloneNode();\n        maskTBody.removeAttribute('role');\n        maskTBody.setAttribute('class', 'e-masked-tbody');\n        var tbody = table.querySelector('tbody');\n        if (content || header) {\n            var rowCountElement = gridContent;\n            var rowCount = Math.ceil(rowCountElement.getBoundingClientRect().height / this.getRowHeight());\n            if (this.allowPaging && this.pageSettings.pageSize !== this.currentViewData.length &&\n                this.pagerModule.pagerObj.totalPages !== this.pageSettings.currentPage) {\n                for (var i = 0; i < this.pageSettings.pageSize - this.currentViewData.length; i++) {\n                    var row = this.createMaskRow(maskColgroup, columns);\n                    var altRow = row.cloneNode(true);\n                    altRow.classList.add('e-altrow');\n                    for (var i_1 = 0; i_1 < rowCount; i_1++) {\n                        var altNumber = 1;\n                        maskTBody.appendChild((i_1 + altNumber) % 2 === 0 ? altRow.cloneNode(true) : row.cloneNode(true));\n                    }\n                }\n            }\n            if (tbody.querySelector('.e-emptyrow') || !tbody.childNodes.length || (content && this.childGrid)) {\n                var row = this.createMaskRow(maskColgroup, columns);\n                var altRow = row.cloneNode(true);\n                altRow.classList.add('e-altrow');\n                for (var i = 0; i < rowCount; i++) {\n                    var altNumber = 1;\n                    maskTBody.appendChild((i + altNumber) % 2 === 0 ? altRow.cloneNode(true) : row.cloneNode(true));\n                }\n            }\n            else {\n                var rowsQuery = 'tr:not(.e-hide):not([style*=\"display:none\"]):not([style*=\"display: none\"])';\n                var rows = [].slice.call(tbody.querySelectorAll(rowsQuery));\n                var addEditRow = tbody.querySelector('.e-addedrow, .e-editedrow');\n                var addEditRowIndex = void 0;\n                if (addEditRow) {\n                    addEditRowIndex = rows.indexOf(addEditRow);\n                    if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n                        var frzTd = [].slice.call(rows[addEditRowIndex + 1].querySelectorAll('.e-rowcell'));\n                        for (var i = 0; i < frzTd.length; i++) {\n                            if (i < this.frozenLeftCount) {\n                                frzTd[parseInt(i.toString(), 10)].classList.add('e-leftfreeze');\n                                frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n                                frzTd[parseInt(i.toString(), 10)].style.left = (columns[parseInt(i.toString(), 10)].valueX - this.translateX) + 'px';\n                            }\n                            else if ((frzTd.length - this.frozenRightCount) <= i && columns[parseInt(i.toString(), 10)]) {\n                                frzTd[parseInt(i.toString(), 10)].classList.add('e-rightfreeze');\n                                frzTd[parseInt(i.toString(), 10)].setAttribute('data-colindex', i.toString());\n                                frzTd[parseInt(i.toString(), 10)].style.right = (this.translateX +\n                                    columns[parseInt(i.toString(), 10)].valueX) + 'px';\n                            }\n                        }\n                    }\n                    if (addEditRow.classList.contains('e-addedrow')) {\n                        rows.splice(addEditRowIndex, 2);\n                    }\n                    else {\n                        rows.splice(addEditRowIndex, 1);\n                    }\n                }\n                rowCount = (this.enableVirtualization || this.enableColumnVirtualization) && axisDirection ? rows.length\n                    : rowCount <= rows.length ? rowCount : rows.length;\n                for (var i = 0; i < rowCount; i++) {\n                    maskTBody.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n                }\n                if (addEditRow && addEditRow.classList.contains('e-editedrow') && addEditRowIndex < rowCount) {\n                    var addEditMaskRow = maskTBody.childNodes[parseInt(addEditRowIndex.toString(), 10)];\n                    addEditMaskRow.style.height = this.getRowHeight() + 'px';\n                    addEditMaskRow.classList.add('e-row');\n                    if (addEditRow.classList.contains('e-altrow')) {\n                        addEditMaskRow.classList.add('e-altrow');\n                    }\n                }\n            }\n        }\n        maskTable.appendChild(maskTBody);\n        if (footer) {\n            var tfoot = table.querySelector('tfoot');\n            var maskTFoot = tfoot.cloneNode();\n            maskTFoot.setAttribute('class', 'e-masked-tfoot');\n            var rows = [].slice.call(tfoot.querySelectorAll('tr'));\n            for (var i = 0; i < rows.length; i++) {\n                maskTFoot.appendChild(this.applyMaskRow(rows[parseInt(i.toString(), 10)].cloneNode(true), rows[parseInt(i.toString(), 10)].getBoundingClientRect().height));\n            }\n            maskTable.appendChild(maskTFoot);\n        }\n        if (header && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = 'relative';\n        }\n        parentElement.insertBefore(maskTable, parentElement.firstChild);\n        if (content && !(this.enableVirtualization && axisDirection)) {\n            var minScrollTop = gridContentScrollHeight - maskTable.getBoundingClientRect().height;\n            minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n            var scrollTop = gridContent.scrollTop <= minScrollTop ? gridContent.scrollTop : minScrollTop;\n            if (this.enableVirtualization) {\n                scrollTop -= getTransformValues(closest(parentElement, '.e-virtualtable')).height;\n            }\n            maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n        }\n        return maskTable;\n    };\n    Grid.prototype.applyMaskRow = function (row, rowHeight) {\n        var maskRow = row;\n        maskRow.removeAttribute('role');\n        maskRow.removeAttribute('aria-rowindex');\n        maskRow.removeAttribute('data-rowindex');\n        maskRow.removeAttribute('data-uid');\n        maskRow.classList.add('e-masked-row');\n        maskRow.style.height = rowHeight + 'px';\n        var maskCells = [].slice.call(maskRow.childNodes);\n        for (var i = 0; i < maskCells.length; i++) {\n            var maskCell = maskCells[parseInt(i.toString(), 10)];\n            var displayAsCheckBoxCell = maskCell.firstChild && maskCell.firstChild.classList\n                && maskCell.firstChild.classList.contains('e-checkbox-wrapper');\n            maskCell.removeAttribute('role');\n            maskCell.removeAttribute('tabindex');\n            maskCell.removeAttribute('aria-label');\n            if (this.enableColumnVirtualization && maskCell.classList.contains('e-fixedfreeze')) {\n                removeClass([maskCell], ['e-fixedfreeze', 'e-freezeleftborder', 'e-freezerightborder']);\n                addClass([maskCell], ['e-unfreeze']);\n            }\n            if (!(this.enableColumnVirtualization && (maskCell.classList.contains('e-leftfreeze') ||\n                maskCell.classList.contains('e-rightfreeze')))) {\n                maskCell.removeAttribute('data-colindex');\n            }\n            maskCell.removeAttribute('aria-colindex');\n            maskCell.removeAttribute('index');\n            maskCell.removeAttribute('ej-mappingname');\n            maskCell.removeAttribute('ej-mappingvalue');\n            maskCell.removeAttribute('e-mappinguid');\n            maskCell.removeAttribute('aria-expanded');\n            maskCell.classList.add('e-masked-cell');\n            maskCell.innerHTML = this.getShimmerTemplate();\n            if (maskCell.classList.contains('e-recordplusexpand') || maskCell.classList.contains('e-recordpluscollapse')) {\n                maskCell.firstChild.classList.add('e-mask-group-intent');\n            }\n            else if (maskCell.classList.contains('e-gridchkbox') || displayAsCheckBoxCell) {\n                maskCell.firstChild.classList.add('e-mask-checkbox-intent');\n            }\n            else if (maskCell.classList.contains('e-rowdragdrop')) {\n                maskCell.firstChild.classList.add('e-mask-drag-intent');\n            }\n            else if (maskCell.classList.contains('e-indentcell')) {\n                maskCell.innerHTML = '';\n            }\n        }\n        return maskRow;\n    };\n    Grid.prototype.createMaskRow = function (refColgroup, refColumns) {\n        var colgroup = refColgroup;\n        var columns = refColumns;\n        var row = this.createElement('tr', { className: 'e-masked-row e-row' });\n        if (this.rowRenderingMode !== 'Vertical') {\n            row.style.height = this.getRowHeight() + 'px';\n        }\n        var td = this.createElement('td', { className: 'e-masked-cell e-rowcell' });\n        for (var i = 0, colIndex = 0; i < colgroup.childNodes.length; i++) {\n            var col = colgroup.childNodes[parseInt(i.toString(), 10)];\n            var localTD = td.cloneNode();\n            localTD.innerHTML = this.getShimmerTemplate();\n            if (!(col.classList.contains('e-group-intent') || col.classList.contains('e-detail-intent')\n                || col.classList.contains('e-drag-intent'))) {\n                if (this.rowRenderingMode === 'Vertical' && columns[parseInt(colIndex.toString(), 10)]) {\n                    localTD.setAttribute('data-cell', columns[parseInt(colIndex.toString(), 10)].headerText ?\n                        columns[parseInt(colIndex.toString(), 10)].headerText : columns[parseInt(colIndex.toString(), 10)].field);\n                }\n                if (col.style.display === 'none') {\n                    localTD.classList.add('e-hide');\n                }\n                else {\n                    localTD.style.textAlign = columns[parseInt(colIndex.toString(), 10)]\n                        && columns[parseInt(colIndex.toString(), 10)].textAlign ?\n                        columns[parseInt(colIndex.toString(), 10)].textAlign.toLowerCase()\n                        : this.enableRtl ? 'right' : 'left';\n                    if (columns[parseInt(colIndex.toString(), 10)] && (columns[parseInt(colIndex.toString(), 10)].type === 'checkbox'\n                        || columns[parseInt(colIndex.toString(), 10)].displayAsCheckBox)) {\n                        localTD.firstChild.classList.add('e-mask-checkbox-intent');\n                    }\n                }\n                colIndex++;\n            }\n            else {\n                if (col.classList.contains('e-group-intent')) {\n                    localTD.firstChild.classList.add('e-mask-group-intent');\n                }\n                else if (col.classList.contains('e-detail-intent')) {\n                    localTD.firstChild.classList.add('e-mask-detail-intent');\n                }\n                else if (col.classList.contains('e-drag-intent')) {\n                    localTD.firstChild.classList.add('e-mask-drag-intent');\n                }\n            }\n            row.appendChild(localTD);\n        }\n        return row;\n    };\n    Grid.prototype.getShimmerTemplate = function () {\n        if (this.maskRowContentScroll) {\n            return '<span class=\"e-mask e-skeleton e-skeleton-text\"></span>';\n        }\n        return '<span class=\"e-mask e-skeleton e-skeleton-text e-shimmer-wave\"></span>';\n    };\n    Grid.prototype.addShimmerEffect = function () {\n        this.maskRowContentScroll = false;\n        var maskSpan = [].slice.call(this.element.querySelectorAll('.e-mask:not(.e-shimmer-wave)'));\n        for (var i = 0; i < maskSpan.length; i++) {\n            if (maskSpan[parseInt(i.toString(), 10)]) {\n                maskSpan[parseInt(i.toString(), 10)].classList.add('e-shimmer-wave');\n            }\n        }\n    };\n    Grid.prototype.translateMaskRow = function (e) {\n        var target = e.target;\n        var maskTables = target.querySelectorAll('.e-masked-table');\n        for (var i = 0; i < maskTables.length; i++) {\n            var maskTable = maskTables[parseInt(i.toString(), 10)];\n            if (maskTable) {\n                var minScrollTop = target.scrollHeight - maskTable.getBoundingClientRect().height;\n                minScrollTop = minScrollTop < 0 ? 0 : minScrollTop;\n                var scrollTop = target.scrollTop <= minScrollTop ? target.scrollTop : minScrollTop;\n                if (this.enableVirtualization) {\n                    scrollTop -= getTransformValues(closest(maskTable, '.e-virtualtable')).height;\n                }\n                maskTable.style.transform = 'translate(0px,' + scrollTop + 'px)';\n            }\n        }\n    };\n    Grid.prototype.removeMaskRow = function () {\n        if (!isNullOrUndefined(this.contentModule)) {\n            var gridContent = this.getContent().firstChild;\n            EventHandler.remove(gridContent, 'scroll', this.translateMaskRow);\n        }\n        if (this.headerMaskTable && this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            this.getHeaderContent().querySelector('.' + literals.headerContent).style.position = '';\n        }\n        var maskTables = [this.headerMaskTable,\n            this.contentMaskTable, this.footerContentMaskTable];\n        for (var i = 0; i < maskTables.length; i++) {\n            var maskTable = maskTables[parseInt(i.toString(), 10)];\n            if (maskTable) {\n                remove(maskTable);\n            }\n        }\n        this.headerMaskTable = null;\n        this.contentMaskTable = null;\n        this.footerContentMaskTable = null;\n    };\n    Grid.prototype.refreshMaskRow = function () {\n        var gridContent = this.getContent().firstChild;\n        if (!this.isInitialLoad && !this.getColumns().length) {\n            return;\n        }\n        if (this.contentMaskTable && gridContent.querySelector('.e-masked-table')) {\n            var content = gridContent;\n            if (this.enableVirtualization) {\n                content = content.querySelector('.e-virtualtable');\n            }\n            this.refreshMaskRowColgroupWidth(content);\n        }\n    };\n    Grid.prototype.refreshMaskRowColgroupWidth = function (content) {\n        var table = content.querySelector('table:not(.e-masked-table)');\n        var colgroup = table.querySelector(literals.colGroup).cloneNode(true);\n        var maskTable = content.querySelector('.e-masked-table');\n        colgroup.removeAttribute('id');\n        colgroup.setAttribute('class', 'e-masked-colgroup');\n        for (var i = 0; i < colgroup.childNodes.length; i++) {\n            colgroup.childNodes[parseInt(i.toString(), 10)].removeAttribute('class');\n        }\n        remove(maskTable.querySelector('.e-masked-colgroup'));\n        maskTable.insertBefore(colgroup, maskTable.firstChild);\n        maskTable.style.width = table.getBoundingClientRect().width + 'px';\n    };\n    Grid.prototype.updateStackedFilter = function () {\n        if (this.allowFiltering && this.filterSettings.type === 'FilterBar' &&\n            this.getHeaderContent().getElementsByClassName('e-stackedheadercell').length) {\n            this.getHeaderContent().classList.add('e-stackedfilter');\n        }\n        else {\n            this.getHeaderContent().classList.remove('e-stackedfilter');\n        }\n    };\n    Grid.prototype.getMediaColumns = function () {\n        if (!this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            this.getShowHideService = this.serviceLocator.getService('showHideService');\n            if (!isNullOrUndefined(gcol)) {\n                for (var index = 0; index < gcol.length; index++) {\n                    if (!isNullOrUndefined(gcol[parseInt(index.toString(), 10)].hideAtMedia)\n                        && (isNullOrUndefined(gcol[parseInt(index.toString(), 10)].visible)\n                            || gcol[parseInt(index.toString(), 10)].visible)) {\n                        this.pushMediaColumn(gcol[parseInt(index.toString(), 10)], index);\n                    }\n                }\n            }\n        }\n        this.updateFrozenColumnsWidth();\n    };\n    Grid.prototype.pushMediaColumn = function (col, index) {\n        this.mediaCol.push(col);\n        this.media[col.uid] = window.matchMedia(col.hideAtMedia);\n        this.mediaQueryUpdate(index, this.media[col.uid]);\n        this.mediaBindInstance[parseInt(index.toString(), 10)] = this.mediaQueryUpdate.bind(this, index);\n        this.media[col.uid].addListener(this.mediaBindInstance[parseInt(index.toString(), 10)]);\n    };\n    /**\n     * @param {Column} col - specifies the column\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.updateMediaColumns = function (col) {\n        if (!this.enableColumnVirtualization) {\n            var index = this.getColumnIndexByUid(col.uid);\n            for (var i = 0; i < this.mediaCol.length; i++) {\n                if (col.uid === this.mediaCol[parseInt(i.toString(), 10)].uid) {\n                    this.mediaCol.splice(i, 1);\n                    return;\n                }\n            }\n            this.pushMediaColumn(col, index);\n        }\n    };\n    /**\n     * @param {number} columnIndex - specifies the column index\n     * @param {MediaQueryList} e - specifies the MediaQueryList\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mediaQueryUpdate = function (columnIndex, e) {\n        var col = this.getColumns()[parseInt(columnIndex.toString(), 10)];\n        if (this.mediaCol.some(function (mediaColumn) { return mediaColumn.uid === col.uid; })) {\n            col.visible = e.matches;\n            if (this.isInitialLoad) {\n                this.invokedFromMedia = true;\n                if (col.visible) {\n                    this.showHider.show(col.headerText, 'headerText');\n                }\n                else {\n                    this.showHider.hide(col.headerText, 'headerText');\n                }\n            }\n        }\n    };\n    Grid.prototype.refreshMediaCol = function () {\n        this.isInitialLoad = true;\n        var footerContent = this.element.querySelector('.' + literals.gridFooter);\n        if (this.aggregates.length && this.element.scrollHeight > parseInt(this.height.toString(), 10) && footerContent) {\n            addClass([footerContent], ['e-footerpadding']);\n        }\n        var checkboxColumn = this.getColumns().filter(function (col) { return col.type === 'checkbox'; });\n        if (checkboxColumn.length === 0 || checkboxColumn.length && this.selectionSettings.checkboxMode === 'ResetOnRowClick') {\n            this.isCheckBoxSelection = false;\n        }\n        if (this.rowRenderingMode === 'Vertical') {\n            if (this.enableHover) {\n                this.setProperties({ enableAdaptiveUI: true, enableHover: false }, true);\n                removeClass([this.element], 'e-gridhover');\n            }\n        }\n        if (this.enableAdaptiveUI && this.scrollModule) {\n            this.scrollModule.refresh();\n        }\n        if (this.isFrozenGrid() && this.isAutoGenerateColumns) {\n            this.widthService.setWidthToColumns();\n            this.isAutoGenerateColumns = false;\n        }\n    };\n    Grid.prototype.removeMediaListener = function () {\n        for (var i = 0; i < this.mediaCol.length; i++) {\n            this.media[this.mediaCol[parseInt(i.toString(), 10)].uid]\n                .removeListener(this.mediaBindInstance[this.mediaCol[parseInt(i.toString(), 10)].index]);\n        }\n    };\n    /**\n     * For internal use only - Initialize the event handler\n     *\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.eventInitializer = function () {\n        //eventInitializer\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Grid.prototype.destroy = function () {\n        var gridElement = this.element;\n        if (!gridElement) {\n            return;\n        }\n        var hasGridChild = gridElement.querySelector('.' + literals.gridHeader) &&\n            gridElement.querySelector('.' + literals.gridContent) ? true : false;\n        if (hasGridChild) {\n            this.unwireEvents();\n        }\n        this.removeListener();\n        this.removeMediaListener();\n        this.notify(events.destroy, {});\n        this.destroyDependentModules();\n        if (this.isReact) {\n            this.destroyTemplate(['template']);\n        }\n        if (this.isVue) {\n            this.destroyTemplate();\n        }\n        if (hasGridChild) {\n            _super.prototype.destroy.call(this);\n        }\n        this.toolTipObj.destroy();\n        if (this.isReact && !Browser.isIE) {\n            this.element.innerHTML = '';\n        }\n        var modules = ['renderModule', 'headerModule', 'contentModule', 'valueFormatterService',\n            'serviceLocator', 'ariaService', 'keyboardModule', 'widthService', 'searchModule', 'showHider',\n            'scrollModule', 'printModule', 'clipboardModule', 'focusModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[parseInt(i.toString(), 10)]]) {\n                this[modules[parseInt(i.toString(), 10)]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        classList(this.element, [], ['e-rtl', 'e-gridhover', 'e-responsive', 'e-default', 'e-device', 'e-grid-min-height']);\n    };\n    Grid.prototype.destroyDependentModules = function () {\n        var gridElement = this.element;\n        if (!gridElement || (!gridElement.querySelector('.' + literals.gridHeader) && !gridElement.querySelector('.' + literals.gridContent))) {\n            return;\n        }\n        this.scrollModule.destroy();\n        this.keyboardModule.destroy();\n        this.focusModule.destroy();\n        this.clipboardModule.destroy();\n        this.printModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Grid.prototype.getModuleName = function () {\n        return 'grid';\n    };\n    Grid.prototype.enableBoxSelection = function () {\n        if (this.enableAutoFill) {\n            this.selectionSettings.cellSelectionMode = 'BoxWithBorder';\n            this.element.classList.add('e-afenabled');\n        }\n        else {\n            this.element.classList.remove('e-afenabled');\n            this.notify(events.destroyAutoFillElements, {});\n        }\n    };\n    Grid.prototype.setCSSClass = function (oldCSSClass) {\n        if (this.cssClass) {\n            addClass([this.element], this.cssClass.split(' '));\n        }\n        if (oldCSSClass) {\n            removeClass([this.element], oldCSSClass.split(' '));\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {GridModel} newProp - Defines new properties\n     * @param {GridModel} oldProp - Defines old properties\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var requireRefresh = false;\n        var requireGridRefresh = false;\n        var freezeRefresh = false;\n        var checkCursor;\n        var args = { requestType: 'refresh' };\n        var childGridParent = null;\n        var parentInstance = null;\n        if (this.isDestroyed) {\n            return;\n        }\n        this.log('module_missing');\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n        var properties = Object.keys(newProp);\n        if (properties.indexOf('columns') > -1) {\n            if (this.enableColumnVirtualization) {\n                this.columnModel = [];\n            }\n            this.updateColumnObject();\n            requireGridRefresh = true;\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'allowPaging':\n                    this.notify(events.uiUpdate, { module: 'pager', enable: this.allowPaging });\n                    requireRefresh = true;\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'pageSettings':\n                    if (this.pageTemplateChange) {\n                        this.pageTemplateChange = false;\n                        this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                        break;\n                    }\n                    if (this.pagerModule && this.pagerModule.isCancel) {\n                        this.pagerModule.isCancel = false;\n                        return;\n                    }\n                    this.notify(events.inBoundModelChanged, { module: 'pager', properties: newProp.pageSettings });\n                    if (isNullOrUndefined(newProp.pageSettings.currentPage) && isNullOrUndefined(newProp.pageSettings.pageSize)\n                        && isNullOrUndefined(newProp.pageSettings.totalRecordsCount)\n                        || !isNullOrUndefined(oldProp.pageSettings) &&\n                            ((newProp.pageSettings.currentPage !== oldProp.pageSettings.currentPage)\n                                && !this.enableColumnVirtualization && !this.enableVirtualization && this.pageRequireRefresh\n                                && this.pageSettings.totalRecordsCount <= this.pageSettings.pageSize)) {\n                        requireRefresh = true;\n                    }\n                    if (!this.pageRequireRefresh) {\n                        this.pageRequireRefresh = true;\n                    }\n                    if (this.pagerModule && this.pagerModule.isCancel) {\n                        this.pagerModule.isCancel = false;\n                    }\n                    break;\n                case 'allowSorting':\n                    this.notify(events.uiUpdate, { module: 'sort', enable: this.allowSorting });\n                    requireRefresh = true;\n                    checkCursor = true;\n                    break;\n                case 'allowFiltering':\n                    this.updateStackedFilter();\n                    this.notify(events.uiUpdate, { module: 'filter', enable: this.allowFiltering });\n                    requireRefresh = true;\n                    if (this.filterSettings.type !== 'FilterBar' || (this.editSettings.showAddNewRow && this.filterSettings.type === 'FilterBar')) {\n                        this.refreshHeader();\n                    }\n                    else {\n                        if (this.height === '100%') {\n                            this.scrollModule.refresh();\n                        }\n                    }\n                    break;\n                case 'height':\n                case 'width':\n                    this.notify(events.uiUpdate, { module: 'scroll', properties: { width: newProp.width, height: newProp.height } });\n                    if (this.allowPaging) {\n                        this.pagerModule.refresh();\n                    }\n                    break;\n                case 'allowReordering':\n                    this.headerModule.refreshUI();\n                    checkCursor = true;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.notify(events.uiUpdate, { module: 'rowDragAndDrop', enable: this.allowRowDragAndDrop });\n                    this.renderModule.refresh();\n                    this.headerModule.refreshUI();\n                    break;\n                case 'allowSelection':\n                    this.notify(events.uiUpdate, { module: 'selection', enable: this.allowSelection });\n                    break;\n                case 'cssClass':\n                    this.setCSSClass(oldProp.cssClass);\n                    break;\n                case 'enableAutoFill':\n                    if (this.selectionModule) {\n                        this.enableBoxSelection();\n                        this.selectionModule.updateAutoFillPosition();\n                    }\n                    break;\n                case 'rowTemplate':\n                    this.rowTemplateFn = templateCompiler(this.rowTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'emptyRecordTemplate':\n                    this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'detailTemplate':\n                    this.detailTemplateFn = templateCompiler(this.detailTemplate);\n                    requireRefresh = true;\n                    break;\n                case 'allowGrouping':\n                    this.notify(events.uiUpdate, { module: 'group', enable: this.allowGrouping });\n                    this.headerModule.refreshUI();\n                    requireRefresh = true;\n                    checkCursor = true;\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'enableInfiniteScrolling':\n                case 'childGrid':\n                    requireRefresh = true;\n                    childGridParent = this.parentDetails ? document.querySelector(\"#\" + this.parentDetails.parentID) : null;\n                    parentInstance = childGridParent ? childGridParent.ej2_instances[0] : null;\n                    if (this.childGrid && parentInstance && isNullOrUndefined(parentInstance.childGrid.childGrid)) {\n                        var childGridObject = Object.assign({}, parentInstance.childGrid, { childGrid: newProp.childGrid });\n                        parentInstance.setProperties({ childGrid: childGridObject }, true);\n                        while (!isNullOrUndefined(parentInstance.parentDetails)) {\n                            var currentParent = document.querySelector(\"#\" + parentInstance.parentDetails.parentID);\n                            var currentParentInstance = currentParent ? currentParent.ej2_instances[0] : null;\n                            if (currentParentInstance) {\n                                var currentChildObject = Object.assign({}, currentParentInstance.childGrid);\n                                currentChildObject.childGrid = parentInstance.childGrid;\n                                currentParentInstance.setProperties({ childGrid: currentChildObject }, true);\n                            }\n                            parentInstance = currentParentInstance;\n                        }\n                    }\n                    this.headerModule.refreshUI();\n                    break;\n                case 'toolbar':\n                    this.notify(events.uiUpdate, { module: 'toolbar' });\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'groupSettings':\n                    this.notify(events.inBoundModelChanged, {\n                        module: 'group', properties: newProp.groupSettings,\n                        oldProperties: oldProp.groupSettings\n                    });\n                    break;\n                case 'aggregates':\n                    if (!this.aggregates.length && this.allowGrouping && this.groupSettings.columns.length) {\n                        requireRefresh = true;\n                    }\n                    this.notify(events.uiUpdate, { module: 'aggregate', properties: newProp });\n                    if (this.height === '100%') {\n                        this.scrollModule.refresh();\n                    }\n                    break;\n                case 'frozenColumns':\n                case 'frozenRows':\n                case 'enableVirtualization':\n                case 'enableColumnVirtualization':\n                case 'currencyCode':\n                case 'locale':\n                    if (this.isFrozenGrid()) {\n                        this.log('frozen_rows_columns');\n                    }\n                    freezeRefresh = true;\n                    requireGridRefresh = true;\n                    this.addNewRowFocus = true;\n                    break;\n                case 'query':\n                    if (!this.getDataModule().isQueryInvokedFromData) {\n                        requireRefresh = true;\n                    }\n                    this.getDataModule().isQueryInvokedFromData = false;\n                    break;\n                case 'autoFit':\n                    if (this.autoFit) {\n                        this.preventAdjustColumns();\n                    }\n                    else {\n                        this.restoreAdjustColumns();\n                    }\n                    break;\n                default:\n                    this.extendedPropertyChange(prop, newProp, requireGridRefresh);\n            }\n        }\n        if (checkCursor) {\n            this.updateDefaultCursor();\n        }\n        if (requireGridRefresh) {\n            if (freezeRefresh || this.getFrozenColumns() || this.frozenRows\n                || (this.frozenLeftColumns.length || this.frozenRightColumns.length)) {\n                this.freezeRefresh();\n            }\n            else {\n                this.refresh();\n            }\n        }\n        else if (requireRefresh) {\n            this.notify(events.modelChanged, args);\n            requireRefresh = false;\n            this.maintainSelection(newProp.selectedRowIndex);\n        }\n    };\n    Grid.prototype.extendedPropertyChange = function (prop, newProp, requireGridRefresh) {\n        switch (prop) {\n            case 'enableRtl':\n                this.updateRTL();\n                if (this.allowPaging) {\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.element.querySelector('.e-gridpager').ej2_instances[0].dataBind();\n                }\n                if (this.height !== 'auto') {\n                    this.scrollModule.removePadding(!newProp.enableRtl);\n                    this.scrollModule.setPadding();\n                }\n                if (this.toolbar && this.toolbarModule) {\n                    this.toolbarModule.getToolbar().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.toolbarModule.getToolbar().ej2_instances[0].dataBind();\n                }\n                if (this.contextMenuItems && this.contextMenuModule) {\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.contextMenuModule.getContextMenu().ej2_instances[0].dataBind();\n                }\n                if (this.showColumnMenu && this.columnMenuModule && !this.enableAdaptiveUI) {\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].enableRtl = newProp.enableRtl;\n                    this.columnMenuModule.getColumnMenu().ej2_instances[0].dataBind();\n                }\n                if (this.filterSettings.type === 'FilterBar' && this.filterSettings.showFilterBarOperator) {\n                    this.refreshHeader();\n                }\n                this.notify(events.rtlUpdated, {});\n                break;\n            case 'enableAltRow':\n                this.renderModule.refresh();\n                break;\n            case 'allowResizing':\n                if (this.resizeModule) {\n                    this.resizeModule.render();\n                }\n                this.headerModule.refreshUI();\n                this.updateResizeLines();\n                break;\n            case 'rowHeight':\n                if (this.rowHeight) {\n                    addClass([this.element], 'e-grid-min-height');\n                }\n                else {\n                    removeClass([this.element], 'e-grid-min-height');\n                }\n                this.renderModule.refresh();\n                this.headerModule.refreshUI();\n                break;\n            case 'gridLines':\n                this.updateGridLines();\n                break;\n            case 'showColumnMenu':\n                this.headerModule.refreshUI();\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: true });\n                break;\n            case 'columnMenuItems':\n                this.notify(events.uiUpdate, { module: 'columnMenu', enable: this.columnMenuItems });\n                break;\n            case 'contextMenuItems':\n                this.notify(events.uiUpdate, { module: 'contextMenu', enable: this.contextMenuItems });\n                break;\n            case 'showColumnChooser':\n                this.notify(events.uiUpdate, { module: 'columnChooser', enable: this.showColumnChooser });\n                break;\n            case 'filterSettings':\n                this.updateStackedFilter();\n                this.notify(events.inBoundModelChanged, { module: 'filter', properties: newProp.filterSettings });\n                break;\n            case 'searchSettings':\n                this.notify(events.inBoundModelChanged, { module: 'search', properties: newProp.searchSettings });\n                break;\n            case 'sortSettings':\n                this.notify(events.inBoundModelChanged, { module: 'sort' });\n                break;\n            case 'selectionSettings':\n                this.notify(events.inBoundModelChanged, { module: 'selection', properties: newProp.selectionSettings });\n                break;\n            case 'editSettings':\n                this.notify(events.inBoundModelChanged, { module: 'edit', properties: newProp.editSettings });\n                break;\n            case 'allowTextWrap':\n            case 'textWrapSettings':\n                if (this.allowTextWrap) {\n                    this.applyTextWrap();\n                }\n                else {\n                    this.removeTextWrap();\n                }\n                this.notify(events.freezeRender, { case: 'textwrap', isModeChg: (prop === 'textWrapSettings') });\n                break;\n            case 'dataSource':\n                // eslint-disable-next-line no-case-declarations\n                var requestPendingState = this.getDataModule().getState();\n                if (this.allowPaging && this.pageSettings.pageSizes && !this.getDataModule().isRemote()\n                    && !(requestPendingState && requestPendingState.isPending)) {\n                    if (this.pagerModule.pagerObj.isAllPage) {\n                        var count = this.dataSource instanceof DataManager ? this.dataSource.dataSource.json.length :\n                            'result' in this.dataSource ? this.dataSource.count : this.dataSource.length;\n                        if (this.pageSettings.pageSizes.indexOf('All') === -1 && this.pageSettings.pageSize !== count) {\n                            this.pagerModule.pagerObj.isAllPage = false;\n                        }\n                        else {\n                            this.setProperties({ pageSettings: { pageSize: count } }, true);\n                            this.pagerModule.pagerObj.setProperties({ pageSize: count }, true);\n                        }\n                    }\n                }\n                if (this.allowSelection && this.isPersistSelection && !(requestPendingState && requestPendingState.isPending)) {\n                    this.clearSelection();\n                }\n                if (!isNullOrUndefined(this.dataSource) && this.dataSource.result) {\n                    this.isVirtualAdaptive = false;\n                }\n                if (Object.getPrototypeOf(newProp).deepWatch) {\n                    var pKeyField = this.getPrimaryKeyFieldNames()[0];\n                    for (var i = 0, props = Object.keys(newProp.dataSource); i < props.length; i++) {\n                        this.setRowData(getValue(pKeyField, this.dataSource[props[parseInt(i.toString(), 10)]]), this.dataSource[props[parseInt(i.toString(), 10)]]);\n                    }\n                }\n                else if (requestPendingState.isPending) {\n                    var gResult = !isNullOrUndefined(this.dataSource) ? this.dataSource.result : [];\n                    var names = (requestPendingState.group || []);\n                    if (names.length && !this.groupSettings.enableLazyLoading && !(gResult.length && gResult[0].field)) {\n                        for (var i = 0; i < names.length; i++) {\n                            gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)], requestPendingState.aggregates\n                                || []);\n                        }\n                    }\n                    this.dataSource = {\n                        result: gResult, count: this.dataSource.count,\n                        aggregates: this.dataSource.aggregates\n                    };\n                    this.getDataModule().setState({});\n                    requestPendingState.resolver(this.dataSource);\n                }\n                else {\n                    if ((!isNullOrUndefined(this.dataSource) && this.dataSource.result\n                        && this.dataSource.count && this.groupSettings.columns.length)) {\n                        var gResult = this.dataSource.result;\n                        var names = this.groupSettings.columns;\n                        if (names.length && !(gResult.length && gResult[0].field)) {\n                            for (var i = 0; i < names.length; i++) {\n                                gResult = DataUtil.group(gResult, names[parseInt(i.toString(), 10)]);\n                            }\n                        }\n                        this.dataSource = {\n                            result: gResult, count: this.dataSource.count\n                        };\n                    }\n                    this.getDataModule().setState({ isDataChanged: false });\n                    this.notify(events.dataSourceModified, {});\n                    if (!requireGridRefresh) {\n                        this.renderModule.refresh();\n                        if (this.isCheckBoxSelection) {\n                            this.notify(events.beforeRefreshOnDataChange, {});\n                        }\n                    }\n                }\n                this.scrollRefresh();\n                break;\n            case 'enableHover':\n                // eslint-disable-next-line no-case-declarations\n                var action = newProp.enableHover ? addClass : removeClass;\n                action([this.element], 'e-gridhover');\n                break;\n            case 'selectedRowIndex':\n                if (!this.isSelectedRowIndexUpdating) {\n                    this.selectRow(newProp.selectedRowIndex);\n                }\n                this.isSelectedRowIndexUpdating = false;\n                break;\n            case 'resizeSettings':\n                this.widthService.setWidthToTable();\n                break;\n            case 'enableAdaptiveUI':\n                this.notify(events.setFullScreenDialog, {});\n                break;\n            case 'rowRenderingMode':\n                this.enableVerticalRendering();\n                this.notify(events.rowModeChange, {});\n                this.refresh();\n                break;\n            case 'enableStickyHeader':\n                this.scrollModule.addStickyListener(newProp.enableStickyHeader);\n                break;\n        }\n    };\n    Grid.prototype.maintainSelection = function (index) {\n        var _this_1 = this;\n        if (index !== -1) {\n            var fn_1 = function () {\n                _this_1.selectRow(index);\n                _this_1.off(events.contentReady, fn_1);\n            };\n            this.on(events.contentReady, fn_1, this);\n        }\n    };\n    /**\n     * @param {Object} prop - Defines the property\n     * @param {boolean} muteOnChange - Defines the mute on change\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setProperties = function (prop, muteOnChange) {\n        _super.prototype.setProperties.call(this, prop, muteOnChange);\n        var filterSettings = 'filterSettings';\n        if (prop[\"\" + filterSettings] && this.filterModule && muteOnChange) {\n            this.filterModule.refreshFilter();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} - Returns the tables count\n     */\n    Grid.prototype.getTablesCount = function () {\n        return this.tablesCount;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateDefaultCursor = function () {\n        var headerCells = [].slice.call(this.getHeaderContent().querySelectorAll('.e-headercell:not(.e-stackedheadercell)'));\n        var stdHdrCell = [].slice.call(this.getHeaderContent().getElementsByClassName('e-stackedheadercell'));\n        var cols = this.getColumns();\n        for (var i = 0; i < headerCells.length; i++) {\n            var cell = headerCells[parseInt(i.toString(), 10)];\n            if (this.allowGrouping || this.allowReordering || this.allowSorting) {\n                if (!cols[parseInt(i.toString(), 10)].allowReordering || !cols[parseInt(i.toString(), 10)].allowSorting\n                    || !cols[parseInt(i.toString(), 10)].allowGrouping) {\n                    cell.classList.add('e-defaultcursor');\n                }\n                else {\n                    cell.classList.add('e-mousepointer');\n                }\n            }\n        }\n        for (var count = 0; count < stdHdrCell.length; count++) {\n            if (this.allowReordering) {\n                stdHdrCell[parseInt(count.toString(), 10)].classList.add('e-mousepointer');\n            }\n        }\n    };\n    Grid.prototype.updateColumnModel = function (columns, isRecursion) {\n        for (var i = 0, len = (!isNullOrUndefined(columns) ? columns.length : 0); i < len; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.updateColumnModel(columns[parseInt(i.toString(), 10)].columns, true);\n            }\n            else {\n                this.columnModel.push(columns[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (isNullOrUndefined(isRecursion) || !isRecursion) {\n            this.updateLockableColumns();\n        }\n    };\n    Grid.prototype.getFrozenLeftCount = function () {\n        return this.getFrozenColumns() || this.getFrozenLeftColumnsCount();\n    };\n    Grid.prototype.isFrozenGrid = function () {\n        return this.getFrozenColumns() !== 0 || this.frozenLeftColumns.length !== 0 || this.frozenRightColumns.length !== 0 ||\n            this.fixedColumns.length !== 0;\n    };\n    Grid.prototype.getFrozenMode = function () {\n        return this.frozenName;\n    };\n    Grid.prototype.updateLockableColumns = function () {\n        var cols = this.columnModel;\n        var frozenCount = 0;\n        var movableCount = 0;\n        var frozenColumns = this.getFrozenColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].lockColumn) {\n                if (i < frozenColumns) {\n                    cols.splice(frozenCount, 0, cols.splice(i, 1)[0]);\n                    frozenCount++;\n                }\n                else {\n                    cols.splice(frozenColumns + movableCount, 0, cols.splice(i, 1)[0]);\n                    movableCount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.checkLockColumns = function (cols) {\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].columns) {\n                this.checkLockColumns(cols[parseInt(i.toString(), 10)].columns);\n            }\n            else if (cols[parseInt(i.toString(), 10)].lockColumn) {\n                this.lockcolPositionCount++;\n            }\n        }\n    };\n    /**\n     * @param {string} position - specifies position\n     * @returns {number} returns the width\n     * @hidden\n     */\n    Grid.prototype.leftrightColumnWidth = function (position) {\n        var cols = position === 'left' ? this.getFrozenLeftColumns() : position === 'right' ? this.getFrozenRightColumns() : [];\n        var width = 0;\n        cols.filter(function (col) {\n            if (col.visible) {\n                width += parseInt(col.width.toString(), 10);\n            }\n        });\n        return width;\n    };\n    /**\n     * Gets the columns from the Grid.\n     *\n     * @param {boolean} isRefresh - Defines the boolean whether to refresh\n     * @returns {Column[]} - returns the column\n     */\n    Grid.prototype.getColumns = function (isRefresh) {\n        var _this_1 = this;\n        var inview = this.inViewIndexes.map(function (v) { return v - _this_1.groupSettings.columns.length; }).filter(function (v) { return v > -1; });\n        var vLen = inview.length;\n        if (!this.enableColumnVirtualization || isNullOrUndefined(this.columnModel) || this.columnModel.length === 0 || isRefresh) {\n            this.columnModel = [];\n            this.updateColumnModel(this.columns);\n        }\n        var columns = vLen === 0 ? this.columnModel :\n            this.getVisibleColumns().slice(inview[0], inview[vLen - 1] + 1);\n        var left = [];\n        var right = [];\n        var movable = [];\n        var isLeftRightFrozen = this.enableColumnVirtualization && this.isPreparedFrozenColumns && vLen === 0;\n        if (isLeftRightFrozen) {\n            this.frozenRightColumns = [];\n            this.frozenLeftColumns = [];\n        }\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                left.push(columns[parseInt(i.toString(), 10)]);\n                if (isLeftRightFrozen) {\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n            else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                right.push(columns[parseInt(i.toString(), 10)]);\n                if (isLeftRightFrozen) {\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n            else {\n                movable.push(columns[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (this.enableColumnVirtualization && this.isFrozenGrid()) {\n            if (this.frozenLeftColumns.length) {\n                left = this.frozenLeftColumns;\n            }\n            if (this.frozenRightColumns.length) {\n                right = this.frozenRightColumns;\n            }\n        }\n        return left.concat(movable).concat(right);\n    };\n    /**\n     * @private\n     * @param {string} stackedHeader - Defines the stacked header\n     * @param {Column[]} col - Defines the column\n     * @returns {Column} Returns the Column\n     */\n    Grid.prototype.getStackedHeaderColumnByHeaderText = function (stackedHeader, col) {\n        for (var i = 0; i < col.length; i++) {\n            var individualColumn = col[parseInt(i.toString(), 10)];\n            if (individualColumn.field === stackedHeader || individualColumn.headerText === stackedHeader) {\n                this.stackedColumn = individualColumn;\n                break;\n            }\n            else if (individualColumn.columns) {\n                this.getStackedHeaderColumnByHeaderText(stackedHeader, individualColumn.columns);\n            }\n        }\n        return this.stackedColumn;\n    };\n    /**\n     * @private\n     * @returns {number[]} Returns the column indexes\n     */\n    Grid.prototype.getColumnIndexesInView = function () {\n        return this.inViewIndexes;\n    };\n    /**\n     * @private\n     * @returns {Query} - returns the query\n     */\n    Grid.prototype.getQuery = function () {\n        return this.query;\n    };\n    /**\n     * @private\n     * @returns {object} - returns the locale constants\n     */\n    Grid.prototype.getLocaleConstants = function () {\n        return this.defaultLocale;\n    };\n    /**\n     * @param {number[]} indexes - specifies the indexes\n     * @returns {void}\n     * @private\n     */\n    Grid.prototype.setColumnIndexesInView = function (indexes) {\n        this.inViewIndexes = indexes;\n    };\n    /**\n     * Gets the visible columns from the Grid.\n     *\n     * @returns {Column[]} returns the column\n     */\n    Grid.prototype.getVisibleColumns = function () {\n        return this.getCurrentVisibleColumns();\n    };\n    /**\n     * Gets the header div of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getHeaderContent = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * Sets the header div of the Grid to replace the old header.\n     *\n     * @param  {Element} element - Specifies the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderContent = function (element) {\n        this.headerModule.setPanel(element);\n    };\n    /**\n     * Gets the content table of the Grid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getContentTable = function () {\n        return this.contentModule.getTable();\n    };\n    /**\n     * Sets the content table of the Grid to replace the old content table.\n     *\n     * @param  {Element} element - Specifies the Grid content table.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridContentTable = function (element) {\n        this.contentModule.setTable(element);\n    };\n    /**\n     * Gets the content div of the Grid.\n     *\n     * @returns {Element} Returns the element\n     */\n    Grid.prototype.getContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * Sets the content div of the Grid to replace the old Grid content.\n     *\n     * @param  {Element} element - Specifies the Grid content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridContent = function (element) {\n        this.contentModule.setPanel(element);\n    };\n    /**\n     * Gets the header table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getHeaderTable = function () {\n        return this.headerModule.getTable();\n    };\n    /**\n     * Sets the header table of the Grid to replace the old one.\n     *\n     * @param  {Element} element - Specifies the Grid header table.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridHeaderTable = function (element) {\n        this.headerModule.setTable(element);\n    };\n    /**\n     * Gets the footer div of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContent = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement;\n    };\n    /**\n     * Gets the footer table element of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getFooterContentTable = function () {\n        this.footerElement = this.element.getElementsByClassName(literals.gridFooter)[0];\n        return this.footerElement.firstChild.firstChild;\n    };\n    /**\n     * Gets the pager of the Grid.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getPager = function () {\n        return this.gridPager; //get element from pager\n    };\n    /**\n     * Sets the pager of the Grid to replace the old pager.\n     *\n     * @param  {Element} element - Specifies the Grid pager.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setGridPager = function (element) {\n        this.gridPager = element;\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     *\n     * @returns {Element} returns the element\n     */\n    Grid.prototype.getRowByIndex = function (index) {\n        if (this.enableVirtualization && this.groupSettings.enableLazyLoading) {\n            return this.lazyLoadRender.getRowByIndex(index);\n        }\n        else {\n            return this.contentModule.getRowByIndex(index);\n        }\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     *\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getMovableRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets a frozen tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getFrozenRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Gets all the data rows of the Grid.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets a frozen right tables row element by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} returns the element\n\n     */\n    Grid.prototype.getFrozenRightRowByIndex = function (index) {\n        return this.contentModule.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - specifies the element\n     *\n     * @returns {RowInfo} returns the row info\n     */\n    Grid.prototype.getRowInfo = function (target) {\n        var ele = target;\n        var args = { target: target };\n        if (!isNullOrUndefined(target) && isNullOrUndefined(parentsUntil(ele, 'e-detailrowcollapse')\n            && isNullOrUndefined(parentsUntil(ele, 'e-recordplusexpand')))) {\n            var cell = closest(ele, '.' + literals.rowCell);\n            if (!cell) {\n                var row_1 = closest(ele, '.' + literals.row);\n                if (!isNullOrUndefined(row_1) && !row_1.classList.contains('e-addedrow')) {\n                    var rowObj = this.getRowObjectFromUID(row_1.getAttribute('data-uid'));\n                    var rowIndex = parseInt(row_1.getAttribute(literals.dataRowIndex), 10);\n                    args = { row: row_1, rowData: rowObj.data, rowIndex: rowIndex };\n                }\n                return args;\n            }\n            var cellIndex = parseInt(cell.getAttribute(literals.dataColIndex), 10);\n            var row_2 = closest(cell, '.' + literals.row);\n            if (!isNullOrUndefined(cell) && !isNaN(cellIndex) && !isNullOrUndefined(row_2)) {\n                var rowIndex = parseInt(row_2.getAttribute(literals.dataRowIndex), 10);\n                var rows = this.contentModule.getRows();\n                var index = cellIndex + this.getIndentCount();\n                var rowsObject = rows.filter(function (r) { return r.uid === row_2.getAttribute('data-uid'); });\n                var rowData = {};\n                var column = void 0;\n                if (Object.keys(rowsObject).length) {\n                    rowData = rowsObject[0].data;\n                    column = rowsObject[0].cells[parseInt(index.toString(), 10)].column;\n                }\n                args = { cell: cell, cellIndex: cellIndex, row: row_2, rowIndex: rowIndex, rowData: rowData, column: column, target: target };\n            }\n        }\n        return args;\n    };\n    /**\n     * Gets the Grid's movable content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getMovableRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets the Grid's frozen right content rows from frozen grid.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getFrozenRightRows = function () {\n        return this.contentModule.getRowElements();\n    };\n    /**\n     * Gets all the Grid's data rows.\n     *\n     * @returns {Element[]} returns the element\n     */\n    Grid.prototype.getDataRows = function () {\n        return this.getAllDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd - specifies includeAdd\n     * @returns {Element[]} returns the element\n     * @hidden\n     */\n    Grid.prototype.getAllDataRows = function (includeAdd) {\n        if (isNullOrUndefined(this.getContentTable().querySelector(literals.tbody))) {\n            return [];\n        }\n        var tbody = this.getContentTable().querySelector(literals.tbody);\n        var rows = [].slice.call(tbody.children);\n        if (this.editSettings.showAddNewRow) {\n            if (rows[0].classList.contains('e-addedrow')) {\n                rows.shift();\n            }\n            else if (rows[rows.length - 1].classList.contains('e-addedrow')) {\n                rows.pop();\n            }\n        }\n        if (this.frozenRows) {\n            var hdrTbody = this.getHeaderTable().querySelector(literals.tbody);\n            var freezeRows = [].slice.call(hdrTbody.children);\n            rows = this.addMovableRows(freezeRows, rows);\n            if (this.editSettings.showAddNewRow && freezeRows[0].classList.contains('e-addedrow')) {\n                freezeRows.shift();\n            }\n        }\n        var dataRows = this.generateDataRows(rows, includeAdd);\n        return dataRows;\n    };\n    /**\n     * @param {HTMLElement[]} fRows - Defines the frozen Rows\n     * @param {HTMLElement[]} mrows - Defines the movable Rows\n     * @returns {HTMLElement[]} Returns the element\n     * @hidden\n     */\n    Grid.prototype.addMovableRows = function (fRows, mrows) {\n        for (var i = 0, len = mrows.length; i < len; i++) {\n            fRows.push(mrows[parseInt(i.toString(), 10)]);\n        }\n        return fRows;\n    };\n    Grid.prototype.generateDataRows = function (rows, includAdd) {\n        var dRows = [];\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (rows[parseInt(i.toString(), 10)].classList.contains(literals.row)\n                && (!rows[parseInt(i.toString(), 10)].classList.contains('e-hiddenrow') || includAdd)) {\n                if (this.isCollapseStateEnabled()) {\n                    dRows[parseInt(rows[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10)] = rows[parseInt(i.toString(), 10)];\n                }\n                else {\n                    dRows.push(rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Gets all the Grid's movable table data rows.\n     *\n     * @returns {Element[]} Returns the element\n\n     */\n    Grid.prototype.getMovableDataRows = function () {\n        return this.getAllMovableDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllMovableDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Gets all the Grid's frozen table data rows.\n     *\n     * @returns {Element[]} returns the element\n\n     */\n    Grid.prototype.getFrozenDataRows = function () {\n        return this.getAllFrozenDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Gets all the Grid's frozen right table data rows.\n     *\n     * @returns {Element[]} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightDataRows = function () {\n        return this.getAllFrozenRightDataRows();\n    };\n    /**\n     * @param {boolean} includeAdd Defines the include add in boolean\n     * @returns {Element[]} Returns the element\n\n     * @hidden\n     */\n    Grid.prototype.getAllFrozenRightDataRows = function (includeAdd) {\n        return this.getAllDataRows(includeAdd);\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setCellValue = function (key, field, value) {\n        var cells = 'cells';\n        var rowData = 'data';\n        var rowIdx = 'index';\n        var rowuID = 'uid';\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        var cell = new CellRenderer(this, this.serviceLocator);\n        var fieldIdx = this.getColumnIndexByField(field);\n        var col = this.getColumnByField(field);\n        var rowObjects = this.contentModule.getRows();\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        var tr = selectedRow ? this.element.querySelector('[data-uid=' + selectedRow[\"\" + rowuID] + ']') : null;\n        if (!isNullOrUndefined(tr)) {\n            if (typeof value === 'string') {\n                value = this.sanitize(value);\n            }\n            setValue(field, value, selectedRow[\"\" + rowData]);\n            var td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)]\n                : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n            if (!isNullOrUndefined(td)) {\n                var Idx = 0;\n                if (this.groupSettings.columns.length) {\n                    fieldIdx = fieldIdx + this.groupSettings.columns.length;\n                }\n                if (this.childGrid || this.detailTemplate) {\n                    fieldIdx++;\n                }\n                if (this.isRowDragable()) {\n                    fieldIdx++;\n                }\n                var sRow = selectedRow[\"\" + cells][fieldIdx - Idx];\n                cell.refreshTD(td, sRow, selectedRow[\"\" + rowData], { index: selectedRow[\"\" + rowIdx] });\n                if (this.isReact) {\n                    td = this.enableVirtualization ? tr.children[parseInt(fieldIdx.toString(), 10)]\n                        : this.getCellFromIndex(selectedRow[\"\" + rowIdx], fieldIdx);\n                }\n                if (this.aggregates.length > 0) {\n                    this.notify(events.refreshFooterRenderer, {});\n                    if (this.groupSettings.columns.length > 0) {\n                        this.notify(events.groupAggregates, {});\n                    }\n                }\n                /* tslint:disable:no-string-literal */\n                if (!isNullOrUndefined(selectedRow) && !isNullOrUndefined(selectedRow['changes'])) {\n                    selectedRow['changes'][\"\" + field] = value;\n                }\n                /* tslint:disable:no-string-literal */\n                this.trigger(events.queryCellInfo, {\n                    cell: td, column: col, data: selectedRow[\"\" + rowData]\n                });\n                if (this.isReact && td.getAttribute('tabindex') === '0' && td.classList.contains('e-focused')) {\n                    td.focus();\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @param {boolean} renderTemplates - Defines renderTemplates need to invoke\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactColumnTemplateByUid = function (columnUid, renderTemplates) {\n        var _this_1 = this;\n        if (this.isReact) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.clearTemplate(['columnTemplate'], undefined, function () {\n                var isChildGrid = _this_1.childGrid && _this_1.element.querySelectorAll('.e-childgrid').length ? true : false;\n                var rows = isChildGrid ? _this_1.getContentTable().querySelectorAll('.e-row') :\n                    _this_1.getDataRows();\n                _this_1.refreshReactTemplateTD(rows, isChildGrid);\n                if (renderTemplates) {\n                    _this_1.renderTemplates();\n                }\n            });\n        }\n    };\n    /**\n     * @param {Element[] | NodeListOf<Element>} rows - Defines the rows\n     * @param {boolean} isChildGrid - Defines whether it is a Hierarchy Grid.\n     * @param {boolean} isFrozen - Defines whether it is a Frozen Grid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactTemplateTD = function (rows, isChildGrid, isFrozen) {\n        var cells = 'cells';\n        var rowIdx = 'index';\n        var indent = this.getIndentCount();\n        var childIndent = 0;\n        var isChildRow = false;\n        for (var j = 0; j < rows.length; j++) {\n            var rowsObj = this.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n            if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid')) {\n                var gridObj = parentsUntil(rows[parseInt(j.toString(), 10)], 'e-childgrid').ej2_instances[0];\n                rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(j.toString(), 10)].getAttribute('data-uid'));\n                childIndent = gridObj.getIndentCount();\n                isChildRow = true;\n            }\n            if (rowsObj && rowsObj.isDataRow && !isNullOrUndefined(rowsObj.index) &&\n                !rows[parseInt(j.toString(), 10)].classList.contains('e-editedrow')) {\n                for (var i = 0; i < rowsObj[\"\" + cells].length; i++) {\n                    var cell = rowsObj[\"\" + cells][parseInt(i.toString(), 10)];\n                    if (cell.isTemplate) {\n                        var cellRenderer = new CellRenderer(this, this.serviceLocator);\n                        var td = isChildGrid ? rows[parseInt(j.toString(), 10)]\n                            .children[cell.index + (isChildRow ? childIndent : indent)] : this.getCellFromIndex(j, isFrozen ? cell.index : i - indent);\n                        cellRenderer.refreshTD(td, cell, rowsObj.data, { index: rowsObj[\"\" + rowIdx] });\n                    }\n                }\n            }\n            isChildRow = false;\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshGroupCaptionFooterTemplate = function () {\n        var isChildGrid = this.childGrid && this.element.querySelectorAll('.e-childgrid').length ? true : false;\n        var rows = this.getContentTable().querySelectorAll('.e-groupcaptionrow, .e-groupfooterrow');\n        for (var i = 0; i < rows.length; i++) {\n            // eslint-disable-next-line @typescript-eslint/no-this-alias\n            var gridObj = this;\n            var rowsObj = this.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n            if (isChildGrid && !rowsObj && parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid')) {\n                gridObj = parentsUntil(rows[parseInt(i.toString(), 10)], 'e-childgrid').ej2_instances[0];\n                rowsObj = gridObj.getRowObjectFromUID(rows[parseInt(i.toString(), 10)].getAttribute('data-uid'));\n            }\n            if (rowsObj) {\n                var cells = rowsObj.cells.filter(function (cell) { return cell.isDataCell; });\n                var args = { cells: cells, data: rowsObj.data, dataUid: rowsObj.uid };\n                gridObj.notify(events.refreshAggregateCell, args);\n            }\n        }\n    };\n    /**\n     * @param {string} columnUid - Defines column uid\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshReactHeaderTemplateByUid = function (columnUid) {\n        if (this.isReact) {\n            var cells = 'cells';\n            var rowsObj = this.headerModule.rows;\n            var cellIndex = this.getNormalizedColumnIndex(columnUid);\n            var _loop_1 = function (j) {\n                var cell = rowsObj[parseInt(j.toString(), 10)][\"\" + cells][parseInt(cellIndex.toString(), 10)];\n                if (cell && cell.column.uid === columnUid) {\n                    var headerCellRenderer = new HeaderCellRenderer(this_1, this_1.serviceLocator);\n                    var td = parentsUntil(this_1.element.querySelectorAll('[e-mappinguid=' + columnUid + ']')[0], 'e-templatecell');\n                    headerCellRenderer.refresh(cell, td);\n                    var cols = this_1.sortSettings.columns;\n                    var columnIndex = cols.findIndex(function (col) {\n                        return col.field === cell\n                            .column.field;\n                    });\n                    if (columnIndex !== -1) {\n                        var header = this_1.getColumnHeaderByField(cell.column.field);\n                        this_1.ariaService.setSort(header, (cols[parseInt(columnIndex.toString(), 10)].direction).toLowerCase());\n                        if (cols.length > 1) {\n                            header.querySelector('.e-headercelldiv').insertBefore(this_1.createElement('span', { className: 'e-sortnumber', innerHTML: (columnIndex + 1).toString() }), header.querySelector('.e-headertext'));\n                        }\n                        var filterElement = header.querySelector('.e-sortfilterdiv');\n                        if (cols[parseInt(columnIndex.toString(), 10)].direction === 'Ascending') {\n                            classList(filterElement, ['e-ascending', 'e-icon-ascending'], []);\n                        }\n                        else {\n                            classList(filterElement, ['e-descending', 'e-icon-descending'], []);\n                        }\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < rowsObj.length; j++) {\n                _loop_1(j);\n            }\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {Object} rowData - To update new data for the particular row.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.setRowData = function (key, rowData) {\n        var rowuID = 'uid';\n        var rowObjects = this.contentModule.getRows();\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        if (this.groupSettings.columns.length > 0 && this.aggregates.length > 0) {\n            rowObjects = rowObjects.filter(function (row) { return row.isDataRow; });\n        }\n        var selectedRow = rowObjects.filter(function (r) {\n            return getValue(pkName, r.data) === key;\n        })[0];\n        var selectRowEle = selectedRow ? [].slice.call(this.element.querySelectorAll('[data-uid=' + selectedRow[\"\" + rowuID] + ']')) : undefined;\n        if (!isNullOrUndefined(selectedRow) && selectRowEle.length) {\n            selectedRow.changes = rowData;\n            if (this.frozenRows) {\n                var fRowTr = this.getRowsObject()[selectedRow.index];\n                this.setFrozenRowData(fRowTr, rowData);\n            }\n            else {\n                this.setFrozenRowData(selectedRow, rowData);\n            }\n            if (this.aggregates.length > 0) {\n                this.notify(events.refreshFooterRenderer, {});\n                if (this.groupSettings.columns.length > 0) {\n                    this.notify(events.groupAggregates, {});\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    Grid.prototype.setFrozenRowData = function (fTr, rowData) {\n        var rowRenderer = new RowRenderer(this.serviceLocator, null, this);\n        fTr.changes = rowData;\n        refreshForeignData(fTr, this.getForeignKeyColumns(), fTr.changes);\n        rowRenderer.refresh(fTr, this.getColumns(), true);\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        var col = this.getColumnByIndex(columnIndex);\n        return getCellByColAndRowIndex(this, col, rowIndex, columnIndex);\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a frozen right table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightCellFromIndex = function (rowIndex, columnIndex) {\n        return this.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     *\n     * @returns {Element} Returns the Element\n     */\n    Grid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.getHeaderTable().getElementsByClassName('e-headercell')[parseInt(index.toString(), 10)];\n    };\n    /**\n     * Gets a movable column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getMovableColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen right column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenRightColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a frozen left column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} Returns the Element\n\n     */\n    Grid.prototype.getFrozenLeftColumnHeaderByIndex = function (index) {\n        return this.getColumnHeaderByIndex(index);\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Row<Column>} Returns the row object\n     * @hidden\n     */\n    Grid.prototype.getRowObjectFromUID = function (uid) {\n        var rows = this.contentModule.getRows();\n        var row = this.rowObject(rows, uid);\n        if (isNullOrUndefined(row) && this.enableVirtualization && this.groupSettings.columns.length > 0) {\n            row = this.rowObject(this.vRows, uid);\n            return row;\n        }\n        return row;\n    };\n    Grid.prototype.rowObject = function (rows, uid) {\n        if (rows) {\n            for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n                var row = rows_1[_i];\n                if (row.uid === uid) {\n                    return row;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n     */\n    Grid.prototype.getRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n\n     */\n    Grid.prototype.getMovableRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * @hidden\n     * @returns {Row<Column>[]} Returns the Row object\n\n     */\n    Grid.prototype.getFrozenRightRowsObject = function () {\n        return this.contentModule.getRows();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByField = function (field) {\n        var column = this.getColumnByField(field);\n        return column ? this.getColumnHeaderByUid(column.uid) : undefined;\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     *\n     * @returns {Element} - Returns the element\n     */\n    Grid.prototype.getColumnHeaderByUid = function (uid) {\n        var element = this.getHeaderContent().querySelector('[e-mappinguid=' + uid + ']');\n        return element ? element.parentElement : undefined;\n    };\n    /**\n     * @hidden\n     * @param {number} index - Defines the index\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByIndex = function (index) {\n        var column;\n        this.getColumns().some(function (col, i) {\n            column = col;\n            return i === index;\n        });\n        return column;\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {number} Returns the index by field\n     */\n    Grid.prototype.getColumnIndexByField = function (field) {\n        var cols = this.getColumns();\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].field === field) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @param  {boolean} isColumns - Defines the all columns.\n     *\n     * @returns {Column} Returns the column\n     */\n    Grid.prototype.getColumnByUid = function (uid, isColumns) {\n        var cols = isColumns ? this.columns : this.getColumns();\n        return iterateArrayOrObject(cols.concat(this.getStackedColumns(this.columns)), function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * @param {Column[]} columns - Defines the columns\n     * @param {Column[]} stackedColumn - Defines the stacked columns\n     * @returns {Column[]} Returns the columns\n     * @hidden\n     */\n    Grid.prototype.getStackedColumns = function (columns, stackedColumn) {\n        if (stackedColumn === void 0) { stackedColumn = []; }\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (column.columns) {\n                stackedColumn.push(column);\n                this.getStackedColumns(column.columns, stackedColumn);\n            }\n        }\n        return stackedColumn;\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     *\n     * @returns {number} Returns the column by index\n     */\n    Grid.prototype.getColumnIndexByUid = function (uid) {\n        var index = iterateArrayOrObject(this.getColumns(), function (item, index) {\n            if (item.uid === uid) {\n                return index;\n            }\n            return undefined;\n        })[0];\n        return !isNullOrUndefined(index) ? index : -1;\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     *\n     * @returns {string} Returns the column by field\n     */\n    Grid.prototype.getUidByColumnField = function (field) {\n        return iterateArrayOrObject(this.getColumns(), function (item) {\n            if (item.field === field) {\n                return item.uid;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets column index by column uid value.\n     *\n     * @private\n     * @param  {string} uid - Specifies the column uid.\n     * @returns {number} Returns the column by field\n     */\n    Grid.prototype.getNormalizedColumnIndex = function (uid) {\n        var index = this.getColumnIndexByUid(uid);\n        return index + this.getIndentCount();\n    };\n    /**\n     * Gets indent cell count.\n     *\n     * @private\n     * @returns {number} Returns the indent count\n     */\n    Grid.prototype.getIndentCount = function () {\n        var index = 0;\n        if (this.allowGrouping) {\n            index += this.groupSettings.columns.length;\n        }\n        if (this.isDetail()) {\n            index++;\n        }\n        if (this.isRowDragable() && isNullOrUndefined(this.rowDropSettings.targetID)) {\n            index++;\n        }\n        /**\n         * TODO: index normalization based on the stacked header, grouping and detailTemplate\n         * and frozen should be handled here\n         */\n        return index;\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} Returns the Field names\n     */\n    Grid.prototype.getColumnFieldNames = function () {\n        var columnNames = [];\n        var column;\n        for (var i = 0, len = this.getColumns().length; i < len; i++) {\n            column = this.getColumns()[parseInt(i.toString(), 10)];\n            if (column.visible) {\n                columnNames.push(column.field);\n            }\n        }\n        return columnNames;\n    };\n    /**\n     * Gets a compiled row template.\n     *\n     * @returns {Function} Returns the row TEmplate\n     * @private\n     */\n    Grid.prototype.getRowTemplate = function () {\n        return this.rowTemplateFn;\n    };\n    /**\n     * Gets a compiled empty Record template.\n     *\n     * @returns {Function} Returns the empty Record template\n     * @private\n     */\n    Grid.prototype.getEmptyRecordTemplate = function () {\n        return this.emptyRecordTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function} Returns the Detail template\n     */\n    Grid.prototype.getDetailTemplate = function () {\n        return this.detailTemplateFn;\n    };\n    /**\n     * Gets a compiled detail row template.\n     *\n     * @private\n     * @returns {Function}Returns the Edit template\n     */\n    Grid.prototype.getEditTemplate = function () {\n        return this.editTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit header template.\n     *\n     * @private\n     * @returns {Function} returns template function\n     */\n    Grid.prototype.getEditHeaderTemplate = function () {\n        return this.editHeaderTemplateFn;\n    };\n    /**\n     * Gets a compiled dialog edit footer template.\n     *\n     * @private\n     * @returns {Function} Returns the Footer template\n     */\n    Grid.prototype.getEditFooterTemplate = function () {\n        return this.editFooterTemplateFn;\n    };\n    /**\n     * Get the names of the primary key columns of the Grid.\n     *\n     * @returns {string[]} Returns the field names\n     */\n    Grid.prototype.getPrimaryKeyFieldNames = function () {\n        var keys = [];\n        for (var k = 0; k < this.columnModel.length; k++) {\n            if (this.columnModel[parseInt(k.toString(), 10)].isPrimaryKey) {\n                keys.push(this.columnModel[parseInt(k.toString(), 10)].field);\n            }\n        }\n        return keys;\n    };\n    /**\n     * Refreshes the Grid header and content.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refresh = function () {\n        if (!this.isDestroyed) {\n            this.isManualRefresh = true;\n            this.headerModule.refreshUI();\n            this.updateStackedFilter();\n            this.renderModule.refresh();\n        }\n    };\n    /**\n     * Refreshes the Grid header.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshHeader = function () {\n        this.headerModule.refreshUI();\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} Returns the element\n     */\n    Grid.prototype.getSelectedRows = function () {\n        return this.selectionModule ? this.selectionModule.selectedRecords : [];\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} Returns the Selected row indexes\n     */\n    Grid.prototype.getSelectedRowIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowIndexes : [];\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {number[]} Returns the Selected row cell indexes\n     */\n    Grid.prototype.getSelectedRowCellIndexes = function () {\n        return this.selectionModule ? this.selectionModule.selectedRowCellIndexes : [];\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @returns {Object[]} Returns the selected records\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedRecords = function () {\n        return this.selectionModule ? this.selectionModule.getSelectedRecords() : [];\n    };\n    /**\n     * Gets the collection of selected columns uid.\n     *\n     * @returns {string[]} Returns the selected column uid\n     * @isGenericType true\n     */\n    Grid.prototype.getSelectedColumnsUid = function () {\n        var _this_1 = this;\n        var uid = [];\n        if (this.selectionModule) {\n            this.selectionModule.selectedColumnsIndexes.filter(function (i) { return uid.push(_this_1.getColumns()[parseInt(i.toString(), 10)].uid); });\n        }\n        return uid;\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {Data} Returns the data\n     */\n    Grid.prototype.getDataModule = function () {\n        return this.renderModule.data;\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showColumns = function (keys, showBy) {\n        showBy = showBy ? showBy : 'headerText';\n        this.showHider.show(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideColumns = function (keys, hideBy) {\n        hideBy = hideBy ? hideBy : 'headerText';\n        this.showHider.hide(keys, hideBy);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen column\n     */\n    Grid.prototype.getFrozenColumns = function () {\n        return this.frozenColumns + this.getFrozenCount(this.columns, 0, 0);\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Right column count\n     */\n    Grid.prototype.getFrozenRightColumnsCount = function () {\n        return this.frozenRightCount || this.rightcount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the Frozen Left column\n     */\n    Grid.prototype.getFrozenLeftColumnsCount = function () {\n        return this.frozenLeftCount || this.leftcount;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the movable column count\n     */\n    Grid.prototype.getMovableColumnsCount = function () {\n        return this.movableCount || this.movablecount;\n    };\n    Grid.prototype.updateFrozenColumnsWidth = function () {\n        if (this.isFrozenGrid() && !this.enableColumnVirtualization) {\n            var gcol = this.getColumns();\n            var isAutoWidth = true;\n            var autoCol_1 = 0;\n            var difference_1 = 0;\n            var autoWidth_1 = 0;\n            var isFrozenAuto = gcol.some(function (data) {\n                return (data.freeze === 'Left' || data.freeze === 'Right'\n                    || data.freeze === 'Fixed' || data.isFrozen) && data.width === 'auto';\n            });\n            var _loop_2 = function (i) {\n                var col = gcol[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(col.width) && (col.freeze === 'Left' || col.freeze === 'Right' || col.freeze === 'Fixed' || col.isFrozen)) {\n                    col.width = Math.max(200, col.minWidth ? parseFloat(col.minWidth.toString()) : 0);\n                    if (!isNullOrUndefined(col.maxWidth) && parseFloat(col.maxWidth.toString()) < col.width) {\n                        col.width = col.maxWidth;\n                    }\n                }\n                if (col.width === 'auto' && isFrozenAuto) {\n                    var tWidth_1 = 0;\n                    if (isAutoWidth) {\n                        gcol.filter(function (cols) {\n                            if (cols.visible) {\n                                if (cols.width === 'auto') {\n                                    autoCol_1++;\n                                }\n                                if (cols.width !== 'auto') {\n                                    var width = !isNullOrUndefined(cols.width) ? parseFloat(cols.width.toString()) :\n                                        Math.max(200, cols.minWidth ? parseFloat(cols.minWidth.toString()) : 0);\n                                    tWidth_1 += width;\n                                }\n                            }\n                        });\n                        var gWidth = this_2.isPercentageWidthGrid() || this_2.width === 'auto' ? this_2.element.getBoundingClientRect().width :\n                            parseFloat(this_2.width.toString());\n                        difference_1 = this_2.height === 'auto' ? gWidth - tWidth_1 : ((gWidth - tWidth_1) - getScrollBarWidth());\n                        if (difference_1 < 0) {\n                            difference_1 = 0;\n                        }\n                        autoWidth_1 = parseFloat((difference_1 / autoCol_1).toString());\n                        gcol.filter(function (col) {\n                            if (col.visible) {\n                                if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                                    difference_1 = difference_1 - parseFloat(col.minWidth.toString());\n                                    autoCol_1--;\n                                }\n                            }\n                        });\n                        isAutoWidth = false;\n                    }\n                    if (col.minWidth && parseFloat(col.minWidth.toString()) > autoWidth_1) {\n                        col.width = parseFloat(col.minWidth.toString());\n                    }\n                    else {\n                        col.width = difference_1 / autoCol_1;\n                    }\n                }\n            };\n            var this_2 = this;\n            for (var i = 0; i < gcol.length; i++) {\n                _loop_2(i);\n            }\n        }\n    };\n    Grid.prototype.refreshSplitFrozenColumn = function () {\n        this.splitFrozenCount(this.columns);\n        this.updateFrozenColumnsWidth();\n        this.isAutoGenerateColumns = true;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setFrozenCount = function () {\n        this.frozenLeftCount = this.frozenRightCount = this.movableCount = 0;\n        this.visibleFrozenLeft = this.visibleFrozenRight = this.visibleMovable = 0;\n        this.frozenLeftColumns = [];\n        this.frozenRightColumns = [];\n        this.movableColumns = [];\n        this.fixedColumns = [];\n        this.splitFrozenCount(this.columns);\n        this.leftcount = this.frozenLeftCount;\n        this.rightcount = this.frozenRightCount;\n        this.movablecount = this.movableCount;\n        // if (this.frozenColumns && (this.frozenLeftCount || this.frozenRightCount)) {\n        //     this.setProperties({ frozenColumns: 0 }, true);\n        // }\n        if (this.frozenLeftCount && !this.frozenRightCount) {\n            this.frozenName = 'Left';\n        }\n        else if (this.frozenRightCount && !this.frozenLeftCount) {\n            this.frozenName = 'Right';\n        }\n        else if (this.frozenLeftCount && this.frozenRightCount) {\n            this.frozenName = 'Left-Right';\n        }\n        else if (this.frozenColumns || this.frozenRows) {\n            this.frozenName = 'Left';\n        }\n        else {\n            this.frozenName = undefined;\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen left count\n     */\n    Grid.prototype.getVisibleFrozenLeftCount = function () {\n        return this.visibleFrozenLeft;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible Frozen Right count\n     */\n    Grid.prototype.getVisibleFrozenRightCount = function () {\n        return this.visibleFrozenRight;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible movable count\n     */\n    Grid.prototype.getVisibleMovableCount = function () {\n        return this.visibleMovable;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenRightColumns = function () {\n        return this.frozenRightColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getFrozenLeftColumns = function () {\n        return this.frozenLeftColumns;\n    };\n    /**\n     * @hidden\n     * @returns {Column[]} Returns the column\n     */\n    Grid.prototype.getMovableColumns = function () {\n        return this.movableColumns;\n    };\n    Grid.prototype.splitStackedColumns = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.leftcount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.rightcount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenFixed++;\n                    }\n                    this.fixedcount++;\n                }\n                else {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movablecount++;\n                }\n            }\n        }\n    };\n    Grid.prototype.pushStackedColumns = function (columns, index, arr, col, stackedcol) {\n        arr[parseInt(index.toString(), 10)] = col.headerText;\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                index = index + 1;\n                this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, index, arr, columns[parseInt(i.toString(), 10)], stackedcol);\n                index = index - 1;\n            }\n            else {\n                var stockCol = [];\n                stockCol = arr.slice().slice(0, index + 1);\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    this.stackedLeft.push(stockCol);\n                    this.stackedarrayLeft.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    this.stackedRight.push(stockCol);\n                    this.stackedarrayRight.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    this.stackedFixed.push(stockCol);\n                    this.stackedarrayFixed.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.stackedMovable.push(stockCol);\n                    this.stackedarrayMovable.push(columns[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n    };\n    Grid.prototype.pushallcol = function (text, text1, col, columns, isTrue) {\n        if (col.headerText === text1) {\n            if (isTrue) {\n                col.columns.push(columns);\n            }\n            else {\n                col.columns.push({ headerText: text, columns: [] });\n            }\n        }\n        else {\n            if (col.columns && col.columns.length) {\n                for (var i = 0; i < col.columns.length; i++) {\n                    this.pushallcol(text, text1, col.columns[parseInt(i.toString(), 10)], columns, isTrue);\n                }\n            }\n        }\n    };\n    Grid.prototype.resetStackedColumns = function (headercol, gridcolumns, freeze) {\n        var col = {};\n        var tempHead = [];\n        for (var i = 1; i <= headercol.length; i++) {\n            var firstcol = headercol[i - 1];\n            for (var j = 0; j < firstcol.length; j++) {\n                if (!col.columns && i === 1) {\n                    col = { headerText: firstcol[parseInt(j.toString(), 10)], columns: [] };\n                    tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n                }\n                else {\n                    if (tempHead.indexOf(firstcol[parseInt(j.toString(), 10)]) === -1) {\n                        this.pushallcol(firstcol[parseInt(j.toString(), 10)], firstcol[j - 1], col);\n                        tempHead.push(firstcol[parseInt(j.toString(), 10)]);\n                    }\n                }\n                if (j === firstcol.length - 1) {\n                    this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n                    var count = 0;\n                    while (count !== headercol.length - 1 && i !== headercol.length) {\n                        if (firstcol.toString() === headercol[parseInt(i.toString(), 10)].toString()) {\n                            i++;\n                            this.pushallcol(null, firstcol[parseInt(j.toString(), 10)], col, gridcolumns[i - 1], true);\n                        }\n                        count++;\n                    }\n                }\n            }\n        }\n        if (freeze === 'Left') {\n            this.frozenLeftColumns.push(col);\n        }\n        else if (freeze === 'Right') {\n            this.frozenRightColumns.push(col);\n        }\n        else {\n            this.movableColumns.push(col);\n        }\n    };\n    Grid.prototype.splitFrozenCount = function (columns) {\n        if (this.frozenColumns || (this.changedProperties && this.changedProperties.frozenColumns === 0)) {\n            var cols = !this.enableColumnVirtualization || (this.enableColumnVirtualization && this.isPreparedFrozenColumns) ?\n                this.enableColumnVirtualization && this.columnModel && this.columnModel.length ? this.columnModel :\n                    this.getColumns() : this.columns;\n            if (!this.changedProperties || (this.changedProperties && !this.changedProperties.frozenColumns)) {\n                for (var i = 0; i < cols.length; i++) {\n                    if (this.frozenColumns > i) {\n                        cols[parseInt(i.toString(), 10)].freeze = 'Left';\n                    }\n                    else if (cols[parseInt(i.toString(), 10)].freeze === 'Right' || cols[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                        cols[parseInt(i.toString(), 10)].freeze = cols[parseInt(i.toString(), 10)].freeze;\n                    }\n                    else {\n                        cols[parseInt(i.toString(), 10)].freeze = undefined;\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < (!isNullOrUndefined(columns) ? columns.length : 0); i++) {\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.leftcount = 0;\n                this.rightcount = 0;\n                this.movablecount = 0;\n                this.fixedcount = 0;\n                var arr = [];\n                this.splitStackedColumns(columns[parseInt(i.toString(), 10)].columns);\n                if (this.leftcount && !this.rightcount && !this.movablecount && !this.fixedcount) {\n                    this.frozenLeftCount += this.leftcount;\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.rightcount && !this.leftcount && !this.movablecount && !this.fixedcount) {\n                    this.frozenRightCount += this.rightcount;\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.movablecount && !this.leftcount && !this.rightcount && !this.fixedcount) {\n                    this.movableCount += this.movablecount;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else if (this.fixedcount && !this.leftcount && !this.rightcount && !this.movablecount) {\n                    this.fixedCount += this.fixedcount;\n                    this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount += this.movablecount;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                }\n                else {\n                    this.frozenLeftCount += this.leftcount;\n                    this.frozenRightCount += this.rightcount;\n                    this.movableCount += this.movablecount;\n                    this.fixedCount += this.fixedcount;\n                    this.leftcount = 0;\n                    this.rightcount = 0;\n                    this.movablecount = 0;\n                    this.fixedcount = 0;\n                    this.stackedLeft = [];\n                    this.stackedRight = [];\n                    this.stackedFixed = [];\n                    this.stackedMovable = [];\n                    this.stackedarrayLeft = [];\n                    this.stackedarrayRight = [];\n                    this.stackedarrayFixed = [];\n                    this.stackedarrayMovable = [];\n                    this.pushStackedColumns(columns[parseInt(i.toString(), 10)].columns, 0, arr, columns[parseInt(i.toString(), 10)], { headerText: columns[parseInt(i.toString(), 10)].headerText, columns: [] });\n                    if (this.stackedarrayLeft.length) {\n                        this.resetStackedColumns(this.stackedLeft, this.stackedarrayLeft, 'Left');\n                    }\n                    if (this.stackedarrayRight.length) {\n                        this.resetStackedColumns(this.stackedRight, this.stackedarrayRight, 'Right');\n                    }\n                    if (this.stackedarrayFixed.length) {\n                        this.resetStackedColumns(this.stackedFixed, this.stackedarrayFixed, 'Fixed');\n                    }\n                    if (this.stackedarrayMovable.length) {\n                        this.resetStackedColumns(this.stackedMovable, this.stackedarrayMovable, 'Movable');\n                    }\n                    this.stackedLeft = [];\n                    this.stackedRight = [];\n                    this.stackedMovable = [];\n                    this.stackedFixed = [];\n                    this.stackedarrayLeft = [];\n                    this.stackedarrayRight = [];\n                    this.stackedarrayMovable = [];\n                    this.stackedarrayFixed = [];\n                }\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].freeze === 'Right') {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenRight++;\n                    }\n                    this.frozenRightColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.frozenRightCount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Left' || columns[parseInt(i.toString(), 10)].isFrozen) {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleFrozenLeft++;\n                    }\n                    this.frozenLeftColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.frozenLeftCount++;\n                }\n                else if (columns[parseInt(i.toString(), 10)].freeze === 'Fixed') {\n                    this.fixedColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.fixedCount++;\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount++;\n                }\n                else {\n                    if (columns[parseInt(i.toString(), 10)].visible !== false) {\n                        this.visibleMovable++;\n                    }\n                    this.movableColumns.push(columns[parseInt(i.toString(), 10)]);\n                    this.movableCount++;\n                }\n            }\n        }\n        if (this.frozenLeftColumns.length) {\n            var cols = this.frozenLeftColumns[this.frozenLeftColumns.length - 1];\n            this.removeBorder(this.frozenLeftColumns);\n            this.frozenLeftBorderColumns(cols instanceof Column ? this.lastVisibleLeftCol(this.frozenLeftColumns) : cols);\n        }\n        if (this.frozenRightColumns.length) {\n            var cols = this.frozenRightColumns[0];\n            this.removeBorder(this.frozenRightColumns);\n            this.frozenRightBorderColumns(cols instanceof Column ? this.firstVisibleRightCol(this.frozenRightColumns) : cols);\n        }\n        if ((this.frozenLeftColumns.length || this.frozenRightColumns.length) && this.freezeColumnRefresh) {\n            var cols = (this.frozenLeftColumns.concat(this.movableColumns)).concat(this.frozenRightColumns);\n            this.setProperties({ columns: cols }, true);\n            this.freezeColumnRefresh = false;\n        }\n    };\n    Grid.prototype.removeBorder = function (columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].columns && columns[parseInt(i.toString(), 10)].columns.length) {\n                if (columns[parseInt(i.toString(), 10)].border === 'Right' ||\n                    columns[parseInt(i.toString(), 10)].border === 'Left') {\n                    columns[parseInt(i.toString(), 10)].border = undefined;\n                }\n                this.removeBorder(columns[parseInt(i.toString(), 10)].columns);\n            }\n            else {\n                if (columns[parseInt(i.toString(), 10)].border === 'Right' ||\n                    columns[parseInt(i.toString(), 10)].border === 'Left') {\n                    columns[parseInt(i.toString(), 10)].border = undefined;\n                }\n            }\n        }\n    };\n    Grid.prototype.isVisibleColumns = function (column, arr) {\n        if (column.columns && column.columns.length) {\n            for (var i = 0; i < column.columns.length; i++) {\n                this.isVisibleColumns(column.columns[parseInt(i.toString(), 10)], arr);\n                if (column.columns[parseInt(i.toString(), 10)].visible &&\n                    isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].columns) &&\n                    (!isNullOrUndefined(column.columns[parseInt(i.toString(), 10)].freeze) ||\n                        column.columns[parseInt(i.toString(), 10)].isFrozen)) {\n                    arr.push('true');\n                }\n            }\n        }\n        else {\n            if (column.visible && (!isNullOrUndefined(column.freeze) || column.isFrozen)) {\n                arr.push('true');\n            }\n        }\n    };\n    Grid.prototype.lastVisibleLeftCol = function (columns) {\n        var column;\n        for (var i = columns.length - 1; i >= 0; i--) {\n            var arr = [];\n            this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n            if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n                column = columns[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    Grid.prototype.firstVisibleRightCol = function (columns) {\n        var column;\n        for (var i = 0; i < columns.length; i++) {\n            var arr = [];\n            this.isVisibleColumns(columns[parseInt(i.toString(), 10)], arr);\n            if (columns[parseInt(i.toString(), 10)].visible && arr.indexOf('true') !== -1) {\n                column = columns[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    Grid.prototype.frozenLeftBorderColumns = function (columns) {\n        if (isNullOrUndefined(columns)) {\n            return;\n        }\n        if (columns.columns && columns.columns.length) {\n            columns.border = 'Left';\n            var cols = columns.columns[columns.columns.length - 1];\n            this.frozenLeftBorderColumns(cols instanceof Column && cols.columns ? this.lastVisibleLeftCol(columns.columns) : cols);\n        }\n        else {\n            columns.border = 'Left';\n        }\n    };\n    Grid.prototype.frozenRightBorderColumns = function (columns) {\n        if (isNullOrUndefined(columns)) {\n            return;\n        }\n        if (columns.columns && columns.columns.length) {\n            columns.border = 'Right';\n            var cols = columns.columns[0];\n            this.frozenRightBorderColumns(cols instanceof Column && cols.columns ? this.firstVisibleRightCol(columns.columns) : cols);\n        }\n        else {\n            columns.border = 'Right';\n        }\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns the visible frozen columns count\n     */\n    Grid.prototype.getVisibleFrozenColumns = function () {\n        return this.getVisibleFrozenColumnsCount() + this.getVisibleFrozenCount(this.columns, 0);\n    };\n    /**\n     * Get the current Filter operator and field.\n     *\n     * @returns {FilterUI} Returns the filter UI\n     */\n    Grid.prototype.getFilterUIInfo = function () {\n        return this.filterModule ? this.filterModule.getFilterUIInfo() : {};\n    };\n    Grid.prototype.getVisibleFrozenColumnsCount = function () {\n        var visibleFrozenColumns = 0;\n        var columns = this.columnModel;\n        for (var i = 0; i < this.frozenColumns; i++) {\n            if (columns[parseInt(i.toString(), 10)].visible) {\n                visibleFrozenColumns++;\n            }\n        }\n        if ((this.frozenLeftCount || this.leftcount) || (this.frozenRightCount || this.rightcount)) {\n            for (var i = 0; i < columns.length; i++) {\n                if (columns[parseInt(i.toString(), 10)].visible && (columns[parseInt(i.toString(), 10)].freeze === 'Left'\n                    || columns[parseInt(i.toString(), 10)].freeze === 'Right')) {\n                    visibleFrozenColumns++;\n                }\n            }\n        }\n        return visibleFrozenColumns;\n    };\n    Grid.prototype.getVisibleFrozenCount = function (cols, cnt) {\n        if ((!this.frozenLeftCount && !this.leftcount) && (!this.frozenRightCount || !this.rightcount)) {\n            for (var i = 0, len = cols.length; i < len; i++) {\n                if (cols[parseInt(i.toString(), 10)].columns) {\n                    cnt = this.getVisibleFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt);\n                }\n                else {\n                    if (cols[parseInt(i.toString(), 10)].isFrozen && cols[parseInt(i.toString(), 10)].visible) {\n                        cnt++;\n                    }\n                }\n            }\n        }\n        return cnt;\n    };\n    Grid.prototype.getFrozenCount = function (cols, cnt, index) {\n        for (var i = 0, len = (!isNullOrUndefined(cols) ? cols.length : 0); i < len; i++) {\n            if (cols[parseInt(i.toString(), 10)].columns) {\n                cnt = this.getFrozenCount(cols[parseInt(i.toString(), 10)].columns, cnt, index);\n            }\n            else {\n                if (cols[parseInt(i.toString(), 10)].isFrozen && index > this.frozenColumns - 1) {\n                    cnt++;\n                }\n                index++;\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.goToPage = function (pageNo) {\n        if (this.pagerModule) {\n            this.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule && !this.pagerTemplate) {\n            this.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        if (this.sortModule) {\n            this.sortModule.sortColumn(columnName, direction, isMultiSort);\n        }\n    };\n    /**\n     * Remove the existing columns along with the grid actions like sorting, filtering, searching, grouping, aggregate, etc., and grid will refresh with new columns based on the updated new data source.\n     * > * If no columns are specified while changing the data source, then the columns are auto generated in the Grid based on the list of columns in the updated data source.\n     *\n     * @param {Object | DataManager | DataResult} dataSource -  Assign the new datasource.\n     * @param {Column[] | string[] | ColumnModel[]} columns - Defines columns.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <button id=\"btn\">change dataSource </button>\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,  // you can define the datamanager here if you are binding a data through datamanager\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     * });\n     * gridObj.appendTo('#Grid');\n     * document.getElementById('btn').addEventListener(\"click\", function(){\n     * let newColumn: [\n     *     { field: 'CustomerID', headerText: 'Customer ID', width:100 },\n     *     { field: 'FirstName', headerText: 'Name' }];\n     * gridObj.changeDataSource(customerData, newColumn);\n     * });\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.changeDataSource = function (dataSource, columns) {\n        this.isChangeDataSourceCall = true;\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, true);\n        }\n        if (columns && columns.length) {\n            this.setProperties({ columns: columns }, true);\n        }\n        if (dataSource) {\n            if (isNullOrUndefined(columns)) {\n                this.setProperties({ columns: [] }, true);\n            }\n            this.setProperties({ dataSource: dataSource }, true);\n        }\n        this.freezeRefresh();\n        this.isChangeDataSourceCall = false;\n    };\n    /**\n     * Clears all the sorted columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeSortColumn = function (field) {\n        if (this.sortModule) {\n            this.sortModule.removeSortColumn(field);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.clearGridActions = function () {\n        this.setProperties({ sortSettings: { columns: [] } }, true);\n        this.setProperties({ filterSettings: { columns: [] } }, true);\n        this.setProperties({ searchSettings: { key: '' } }, true);\n        if (this.allowGrouping) {\n            this.setProperties({ groupSettings: { columns: [] } }, false);\n        }\n        else {\n            this.freezeRefresh();\n        }\n    };\n    /**\n     * Filters grid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the grid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        if (this.filterModule) {\n            this.filterModule.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n        }\n    };\n    /**\n     * Clears all the filtered rows of the Grid.\n     *\n     * @param {string[]} fields - Defines the Fields\n     * @returns {void}\n     */\n    Grid.prototype.clearFiltering = function (fields) {\n        if (this.filterModule) {\n            this.filterModule.clearFiltering(fields);\n        }\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        if (this.filterModule) {\n            this.filterModule.removeFilteredColsByField(field, isClearFilterBar);\n        }\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRow = function (index, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRow(index, isToggle);\n        }\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRows = function (rowIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRows(rowIndexes);\n        }\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearSelection();\n        }\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCell = function (cellIndex, isToggle) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCell(cellIndex, isToggle);\n        }\n    };\n    /**\n     * Selects a range of cells from start and end indexes.\n     *\n     * @param  {IIndex} startIndex - Specifies the row and column's start index.\n     * @param  {IIndex} endIndex - Specifies the row and column's end index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCellsByRange = function (startIndex, endIndex) {\n        this.selectionModule.selectCellsByRange(startIndex, endIndex);\n    };\n    /**\n     * Searches Grid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.search = function (searchString) {\n        if (this.searchModule) {\n            this.searchModule.search(searchString);\n        }\n    };\n    /**\n     * By default, prints all the pages of the Grid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    Grid.prototype.print = function () {\n        if (this.printModule) {\n            this.printModule.print();\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldname and data is not given then grid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldname - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRecord = function (fieldname, data) {\n        if (this.editModule) {\n            this.editModule.deleteRecord(fieldname, data);\n        }\n    };\n    /**\n     * Starts edit the selected row. At least one row must be selected before invoking this method.\n     * `editSettings.allowEditing` should be true.\n     * {% codeBlock src='grid/startEdit/index.md' %}{% endcodeBlock %}\n     *\n     * @returns {void}\n     */\n    Grid.prototype.startEdit = function () {\n        if (this.editModule) {\n            this.editModule.startEdit();\n        }\n    };\n    /**\n     * If Grid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.endEdit = function () {\n        if (this.editModule) {\n            this.editModule.endEdit();\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.closeEdit = function () {\n        if (this.editModule) {\n            this.editModule.closeEdit();\n        }\n    };\n    /**\n     * Adds a new record to the Grid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added\n     * @returns {void}\n     */\n    Grid.prototype.addRecord = function (data, index) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    Grid.prototype.deleteRow = function (tr) {\n        if (this.editModule) {\n            this.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Changes a particular cell into edited state based on the row index and field name provided in the `batch` mode.\n     *\n     * @param {number} index - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform batch edit.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.editCell = function (index, field) {\n        if (this.editModule) {\n            this.editModule.editCell(index, field);\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     * {% codeBlock src='grid/saveCell/index.md' %}{% endcodeBlock %}\n     */\n    Grid.prototype.saveCell = function () {\n        if (this.editModule) {\n            this.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.editModule) {\n            this.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * {% codeBlock src='grid/updateRow/index.md' %}{% endcodeBlock %}\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.updateRow = function (index, data) {\n        if (this.editModule) {\n            this.editModule.updateRow(index, data);\n        }\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} Returns the batch changes\n     */\n    Grid.prototype.getBatchChanges = function () {\n        if (this.editModule) {\n            return this.editModule.getBatchChanges();\n        }\n        return {};\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.toolbarModule) {\n            this.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    Grid.prototype.copy = function (withHeader) {\n        if (this.clipboardModule) {\n            this.clipboardModule.copy(withHeader);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.recalcIndentWidth = function () {\n        var _this_1 = this;\n        if (!this.getHeaderTable().querySelector('.e-emptycell')) {\n            return;\n        }\n        if ((!this.groupSettings.columns.length && !this.isDetail() && !this.isRowDragable()) ||\n            this.getHeaderTable().querySelector('.e-emptycell').getAttribute('indentRefreshed') ||\n            !this.getContentTable()) {\n            return;\n        }\n        var indentWidth = this.getHeaderTable().querySelector('.e-emptycell').parentElement.offsetWidth;\n        var headerCol = [].slice.call(this.getHeaderTable().querySelector(literals.colGroup).childNodes);\n        var contentCol = [].slice.call(this.getContentTable().querySelector(literals.colGroup).childNodes);\n        var perPixel = indentWidth / 30;\n        var i = this.getFrozenMode() === 'Right' ? this.groupSettings.columns.length + this.getColumns().length : 0;\n        var parentOffset = this.element.offsetWidth;\n        var applyWidth = function (index, width) {\n            if (ispercentageWidth(_this_1)) {\n                var newWidth = (width / parentOffset * 100).toFixed(1) + '%';\n                headerCol[parseInt(index.toString(), 10)].style.width = newWidth;\n                contentCol[parseInt(index.toString(), 10)].style.width = newWidth;\n            }\n            else {\n                headerCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n                contentCol[parseInt(index.toString(), 10)].style.width = width + 'px';\n            }\n            _this_1.notify(events.columnWidthChanged, { index: index, width: width });\n        };\n        if (perPixel >= 1) {\n            indentWidth = (30 / perPixel);\n        }\n        if (indentWidth < 1) {\n            indentWidth = 1;\n        }\n        if (this.enableColumnVirtualization || this.isAutoGen || (this.columns.length === this.groupSettings.columns.length)) {\n            indentWidth = 30;\n        }\n        while (i < this.groupSettings.columns.length) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isDetail()) {\n            applyWidth(i, indentWidth);\n            i++;\n        }\n        if (this.isRowDragable()) {\n            applyWidth(i, indentWidth);\n        }\n        this.isAutoGen = false;\n        this.getHeaderTable().querySelector('.e-emptycell').setAttribute('indentRefreshed', 'true');\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.resetIndentWidth = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        if (ispercentageWidth(this)) {\n            this.getHeaderTable().querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n            this.widthService.setWidthToColumns();\n            this.recalcIndentWidth();\n            if (this.autoFit) {\n                this.preventAdjustColumns();\n            }\n        }\n        if ((this.width === 'auto' || typeof (this.width) === 'string' && this.width.indexOf('%') !== -1)\n            && this.getColumns().filter(function (col) { return (!col.width || col.width === 'auto') && col.minWidth; }).length > 0) {\n            var tgridWidth = this.widthService.getTableWidth(this.getColumns(), true);\n            this.widthService.setMinwidthBycalculation(tgridWidth);\n        }\n        if (this.isFrozenGrid() && this.enableColumnVirtualization && this.widthService) {\n            this.widthService.refreshFrozenScrollbar();\n        }\n        if (this.allowTextWrap && this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n        if (this.frozenRows && this.scrollModule) {\n            this.scrollModule.resizeFrozenRowBorder();\n        }\n        if (this.enableStickyHeader) {\n            this.scrollModule.makeStickyHeader();\n        }\n        if (this.enableAutoFill && this.selectionSettings.type === 'Multiple' && this.selectionModule &&\n            this.selectionSettings.mode === 'Cell' && this.selectionModule.selectedRowCellIndexes.length) {\n            this.selectionModule.updateAutoFillPosition();\n            this.selectionModule.drawBorders();\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns isRowDragable\n     */\n    Grid.prototype.isRowDragable = function () {\n        return this.allowRowDragAndDrop && !this.rowDropSettings.targetID;\n    };\n    /**\n     * Changes the Grid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumns = function (fromFName, toFName) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumns(fromFName, toFName);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByIndex multiple times,\n     * then you won't get the same results every time.\n     *\n     * @param  {number} fromIndex - Defines the origin field index.\n     * @param  {number} toIndex - Defines the destination field index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByIndex = function (fromIndex, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByIndex(fromIndex, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid column positions by field index. If you invoke reorderColumnByTargetIndex multiple times,\n     * then you will get the same results every time.\n     *\n     * @param  {string} fieldName - Defines the field name.\n     * @param  {number} toIndex - Defines the destination field index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderColumnByTargetIndex = function (fieldName, toIndex) {\n        if (this.reorderModule) {\n            this.reorderModule.reorderColumnByTargetIndex(fieldName, toIndex);\n        }\n    };\n    /**\n     * Changes the Grid Row position with given indexes.\n     *\n     * @param  {number} fromIndexes - Defines the origin Indexes.\n     * @param  {number} toIndex - Defines the destination Index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.reorderRows = function (fromIndexes, toIndex) {\n        if (this.rowDragAndDropModule) {\n            this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex);\n        }\n    };\n    /**\n     * @param {ReturnType} e - Defines the Return type\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.refreshDataSource = function (e) {\n        this.notify('refreshdataSource', e);\n    };\n    /**\n     * @param {boolean} enable -Defines the enable\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.disableRowDD = function (enable) {\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        var headerRows = headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell');\n        var rows = this.getRows();\n        var disValue = enable ? 'none' : '';\n        setStyleAttribute(headerTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        setStyleAttribute(contentTable.querySelector(literals.colGroup).childNodes[0], { 'display': disValue });\n        for (var i = 0; i < this.getRows().length; i++) {\n            var ele = rows[parseInt(i.toString(), 10)].firstElementChild;\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n        for (var j = 0; j < headerTable.querySelectorAll('th.e-rowdragheader, th.e-mastercell').length; j++) {\n            var ele = headerRows[parseInt(j.toString(), 10)];\n            if (enable) {\n                addClass([ele], 'e-hide');\n            }\n            else {\n                removeClass([ele], ['e-hide']);\n            }\n        }\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * > * By specifying the start row index and end row index, providing the range within which the maximum width for that column should be considered when applying `autoFitColumns`.\n     * > * The width of header rows is always calculated. If the width of a header row exceeds the specified range, its width will be allocated to the specific content rows.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @param  {number} startRowIndex - Specifies the start index of the content row.\n     * @param  {number} endRowIndex - Specifies the end index of content row.\n     * @returns {void}\n     *\n     *\n     * ```typescript\n     * <div id=\"Grid\"></div>\n     * <script>\n     * let gridObj: Grid = new Grid({\n     *     dataSource: employeeData,\n     *     columns: [\n     *         { field: 'OrderID', headerText: 'Order ID', width:100 },\n     *         { field: 'EmployeeID', headerText: 'Employee ID' }],\n     *     dataBound: () => gridObj.autoFitColumns('EmployeeID');\n     * });\n     * gridObj.appendTo('#Grid');\n     * </script>\n     * ```\n     *\n     */\n    Grid.prototype.autoFitColumns = function (fieldNames, startRowIndex, endRowIndex) {\n        var injectedModules = this.getInjectedModules();\n        var resize = injectedModules.find(function (item) {\n            if (typeof item === 'function' && !isNullOrUndefined(item.prototype)) {\n                return item.prototype.getModuleName() === 'resize';\n            }\n            else {\n                return item.name === 'Resize';\n            }\n        });\n        if (!this.resizeModule && resize) {\n            this.autoFitColumnsResize = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.injectModules();\n        }\n        if (this.resizeModule) {\n            this.resizeModule.autoFitColumns(fieldNames, startRowIndex, endRowIndex);\n        }\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.preventAdjustColumns = function () {\n        if ((this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical')\n            || (this.allowResizing && this.resizeSettings.mode === 'Auto')) {\n            return;\n        }\n        var columns = this.getColumns();\n        var headerTable = this.getHeaderTable();\n        var tableWidth = 0;\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[parseInt(i.toString(), 10)].visible) {\n                if (this.groupSettings.columns.length\n                    && this.groupSettings.columns.indexOf(columns[parseInt(i.toString(), 10)].field) > -1) {\n                    var headerCol = [].slice.call(headerTable.querySelector('colgroup')\n                        .querySelectorAll(':not(.e-group-intent):not(.e-detail-intent):not(.e-drag-intent)'));\n                    if (headerCol[parseInt(i.toString(), 10)].style.display === 'none') {\n                        continue;\n                    }\n                }\n                if (columns[parseInt(i.toString(), 10)].width) {\n                    tableWidth += parseFloat(columns[parseInt(i.toString(), 10)].width.toString());\n                }\n                else {\n                    tableWidth = 0;\n                    break;\n                }\n            }\n        }\n        if (tableWidth) {\n            var percentageWidth = this.isPercentageWidthGrid();\n            var unit = this.widthUnit(percentageWidth);\n            var contentTable = this.getContentTable();\n            if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n                var indentWidth = this.defaultIndentWidth(percentageWidth);\n                var indentWidthUnitFormat = indentWidth.toString() + unit;\n                var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup')\n                    .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n                var contentIndentCol = [].slice.call(contentTable.querySelector('colgroup')\n                    .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n                for (var i = 0; i < headerIndentCol.length; i++) {\n                    headerIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n                    contentIndentCol[parseInt(i.toString(), 10)].style.setProperty('width', indentWidthUnitFormat);\n                    tableWidth += indentWidth;\n                }\n            }\n            if ((percentageWidth && tableWidth < 100)\n                || (!percentageWidth && tableWidth < contentTable.parentElement.clientWidth)) {\n                if (!isNullOrUndefined(contentTable.querySelector('.e-emptyrow'))) {\n                    addClass([headerTable], ['e-tableborder']);\n                    removeClass([contentTable], ['e-tableborder']);\n                }\n                else {\n                    addClass([headerTable, contentTable], ['e-tableborder']);\n                }\n            }\n            var tableWidthUnitFormat = tableWidth.toString() + unit;\n            headerTable.style.setProperty('width', tableWidthUnitFormat);\n            contentTable.style.setProperty('width', tableWidthUnitFormat);\n        }\n        else {\n            this.restoreAdjustColumns();\n        }\n    };\n    Grid.prototype.restoreAdjustColumns = function () {\n        if ((this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical')\n            || (this.allowResizing && this.resizeSettings.mode === 'Auto')) {\n            return;\n        }\n        var headerTable = this.getHeaderTable();\n        var contentTable = this.getContentTable();\n        removeClass([headerTable, contentTable], ['e-tableborder']);\n        headerTable.style.removeProperty('width');\n        contentTable.style.removeProperty('width');\n        if (this.groupSettings.columns.length || this.isDetail() || this.isRowDragable()) {\n            var percentageWidth = this.isPercentageWidthGrid();\n            var indentWidthUnitFormat_1 = this.defaultIndentWidth(percentageWidth).toString() + this.widthUnit(percentageWidth);\n            var headerIndentCol = [].slice.call(headerTable.querySelector('colgroup')\n                .querySelectorAll('.e-group-intent, .e-detail-intent, .e-drag-intent'));\n            headerIndentCol.forEach(function (element) {\n                element.style.setProperty('width', indentWidthUnitFormat_1);\n            });\n            headerTable.querySelector('.e-emptycell').removeAttribute('indentRefreshed');\n            this.recalcIndentWidth();\n        }\n    };\n    Grid.prototype.widthUnit = function (percentageWidth) {\n        return percentageWidth ? '%' : 'px';\n    };\n    Grid.prototype.defaultIndentWidth = function (percentageWidth) {\n        return percentageWidth ? parseFloat((30 / this.element.offsetWidth * 100).toFixed(1)) : 30;\n    };\n    Grid.prototype.isPercentageWidthGrid = function () {\n        return this.getColumns()[0].width.toString().indexOf('%') > -1;\n    };\n    /**\n     * @param {number} x - Defines the number\n     * @param {number} y - Defines the number\n     * @param {Element} target - Defines the Element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createColumnchooser = function (x, y, target) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.renderColumnChooser(x, y, target);\n        }\n    };\n    Grid.prototype.initializeServices = function () {\n        this.serviceLocator.register('widthService', this.widthService = new ColumnWidthService(this));\n        this.serviceLocator.register('cellRendererFactory', new CellRendererFactory);\n        this.serviceLocator.register('rendererFactory', new RendererFactory);\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n        this.serviceLocator.register('valueFormatter', this.valueFormatterService = new ValueFormatter(this.locale));\n        this.serviceLocator.register('showHideService', this.showHider = new ShowHide(this));\n        this.serviceLocator.register('ariaService', this.ariaService = new AriaService());\n        this.serviceLocator.register('focus', this.focusModule = new FocusStrategy(this));\n    };\n    Grid.prototype.processModel = function () {\n        var gCols = this.groupSettings.columns;\n        var sCols = this.sortSettings.columns;\n        var flag;\n        var j;\n        if (this.allowGrouping) {\n            var _loop_3 = function (i, len) {\n                flag = false;\n                j = 0;\n                for (var sLen = sCols.length; j < sLen; j++) {\n                    if (sCols[parseInt(j.toString(), 10)].field === gCols[parseInt(i.toString(), 10)]) {\n                        flag = true;\n                        break;\n                    }\n                }\n                if (!flag) {\n                    sCols.push({ field: gCols[parseInt(i.toString(), 10)], direction: 'Ascending', isFromGroup: true });\n                }\n                else {\n                    if (this_3.allowSorting) {\n                        this_3.sortedColumns.push(sCols[parseInt(j.toString(), 10)].field);\n                    }\n                    else {\n                        sCols[parseInt(j.toString(), 10)].direction = 'Ascending';\n                    }\n                }\n                if (!this_3.groupSettings.showGroupedColumn) {\n                    var column = this_3.enableColumnVirtualization ?\n                        this_3.columns.filter(function (c) { return c.field === gCols[parseInt(i.toString(), 10)]; })[0]\n                        : this_3.getColumnByField(gCols[parseInt(i.toString(), 10)]);\n                    if (column) {\n                        column.visible = false;\n                    }\n                    else {\n                        this_3.log('initial_action', { moduleName: 'group', columnName: gCols[parseInt(i.toString(), 10)] });\n                    }\n                }\n            };\n            var this_3 = this;\n            for (var i = 0, len = gCols.length; i < len; i++) {\n                _loop_3(i, len);\n            }\n        }\n        if (!gCols.length) {\n            for (var i = 0; i < sCols.length; i++) {\n                this.sortedColumns.push(sCols[parseInt(i.toString(), 10)].field);\n            }\n        }\n        this.rowTemplateFn = templateCompiler(this.rowTemplate);\n        this.emptyRecordTemplateFn = templateCompiler(this.emptyRecordTemplate);\n        this.detailTemplateFn = templateCompiler(this.detailTemplate);\n        this.editTemplateFn = templateCompiler(this.editSettings.template);\n        this.editHeaderTemplateFn = templateCompiler(this.editSettings.headerTemplate);\n        this.editFooterTemplateFn = templateCompiler(this.editSettings.footerTemplate);\n        if (!isNullOrUndefined(this.parentDetails)) {\n            var value = isNullOrUndefined(this.parentDetails.parentKeyFieldValue) ? 'undefined' :\n                this.parentDetails.parentKeyFieldValue;\n            this.query.where(this.queryString, 'equal', value, true);\n        }\n        this.initForeignColumn();\n    };\n    Grid.prototype.initForeignColumn = function () {\n        if (this.isForeignKeyEnabled(this.getColumns())) {\n            this.notify(events.initForeignKeyColumn, this.getForeignKeyColumns());\n        }\n    };\n    Grid.prototype.enableVerticalRendering = function () {\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        else {\n            this.element.classList.remove('e-row-responsive');\n        }\n    };\n    Grid.prototype.gridRender = function () {\n        var _a;\n        this.updateRTL();\n        if (this.rowRenderingMode === 'Vertical') {\n            this.element.classList.add('e-row-responsive');\n        }\n        if (this.enableHover) {\n            this.element.classList.add('e-gridhover');\n        }\n        if (Browser.isDevice && this.adaptiveUIMode === 'Desktop') {\n            this.element.classList.add('e-device');\n            this.enableAdaptiveUI = false;\n        }\n        if (this.adaptiveUIMode === 'Mobile' && !(Browser.isDevice || this.rowRenderingMode === 'Vertical')) {\n            this.enableAdaptiveUI = false;\n        }\n        if (this.rowHeight) {\n            this.element.classList.add('e-grid-min-height');\n        }\n        if (this.cssClass) {\n            if (this.cssClass.indexOf(' ') !== -1) {\n                (_a = this.element.classList).add.apply(_a, this.cssClass.split(' '));\n            }\n            else {\n                this.element.classList.add(this.cssClass);\n            }\n        }\n        // If the below if statement is removed, then drag and drop between grids will not work in firefox browser.\n        if (this.allowRowDragAndDrop && this.rowDropSettings.targetID && Browser.info.name === 'mozilla') {\n            this.element.classList.add('e-disableuserselect');\n        }\n        if (this.editSettings.showAddNewRow && (this.enableVirtualization || this.enableInfiniteScrolling)) {\n            this.editSettings.newRowPosition = 'Top';\n        }\n        classList(this.element, ['e-responsive', 'e-default'], []);\n        var rendererFactory = this.serviceLocator.getService('rendererFactory');\n        this.headerModule = rendererFactory.getRenderer(RenderType.Header);\n        this.contentModule = rendererFactory.getRenderer(RenderType.Content);\n        this.printModule = new Print(this, this.scrollModule);\n        this.clipboardModule = new Clipboard(this, this.serviceLocator);\n        this.renderModule.render();\n        this.eventInitializer();\n        this.createGridPopUpElement();\n        this.widthService.setWidthToColumns();\n        this.updateGridLines();\n        this.applyTextWrap();\n        this.createTooltip(); //for clip mode ellipsis\n        this.enableBoxSelection();\n    };\n    Grid.prototype.dataReady = function () {\n        this.scrollModule.setWidth();\n        this.scrollModule.setHeight();\n        if (this.height !== 'auto') {\n            this.scrollModule.setPadding();\n        }\n    };\n    Grid.prototype.updateRTL = function () {\n        if (this.enableRtl) {\n            this.element.classList.add('e-rtl');\n        }\n        else {\n            this.element.classList.remove('e-rtl');\n        }\n    };\n    Grid.prototype.createGridPopUpElement = function () {\n        var popup = this.createElement('div', { className: 'e-gridpopup', styles: 'display:none;' });\n        var content = this.createElement('div', { className: literals.content, attrs: { tabIndex: '-1' } });\n        append([content, this.createElement('div', { className: 'e-uptail e-tail' })], popup);\n        content.appendChild(this.createElement('span'));\n        append([content, this.createElement('div', { className: 'e-downtail e-tail' })], popup);\n        this.element.appendChild(popup);\n    };\n    Grid.prototype.updateGridLines = function () {\n        classList(this.element, [], ['e-verticallines', 'e-horizontallines', 'e-hidelines', 'e-bothlines']);\n        switch (this.gridLines) {\n            case 'Horizontal':\n                this.element.classList.add('e-horizontallines');\n                break;\n            case 'Vertical':\n                this.element.classList.add('e-verticallines');\n                break;\n            case 'None':\n                this.element.classList.add('e-hidelines');\n                break;\n            case 'Both':\n                this.element.classList.add('e-bothlines');\n                break;\n        }\n        this.updateResizeLines();\n    };\n    Grid.prototype.updateResizeLines = function () {\n        if (this.allowResizing &&\n            !(this.gridLines === 'Vertical' || this.gridLines === 'Both')) {\n            this.element.classList.add('e-resize-lines');\n        }\n        else {\n            this.element.classList.remove('e-resize-lines');\n        }\n    };\n    /**\n     * The function is used to apply text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyTextWrap = function () {\n        if (this.allowTextWrap) {\n            var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n            switch (this.textWrapSettings.wrapMode) {\n                case 'Header':\n                    wrap(this.element, false);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, true);\n                    break;\n                case 'Content':\n                    wrap(this.getContent(), true);\n                    wrap(this.element, false);\n                    wrap(headerRows, false);\n                    break;\n                default:\n                    wrap(this.element, true);\n                    wrap(this.getContent(), false);\n                    wrap(headerRows, false);\n            }\n            if (this.textWrapSettings.wrapMode !== 'Content') {\n                this.notify(events.refreshHandlers, {});\n            }\n        }\n    };\n    /**\n     * The function is used to remove text wrap\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.removeTextWrap = function () {\n        wrap(this.element, false);\n        var headerRows = [].slice.call(this.element.getElementsByClassName('e-columnheader'));\n        wrap(headerRows, false);\n        wrap(this.getContent(), false);\n        if (this.textWrapSettings.wrapMode !== 'Content') {\n            this.notify(events.refreshHandlers, {});\n        }\n    };\n    /**\n     * The function is used to add Tooltip to the grid cell that has ellipsiswithtooltip clip mode.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.createTooltip = function () {\n        this.toolTipObj = new Tooltip({\n            opensOn: 'custom',\n            content: '',\n            cssClass: this.cssClass ? this.cssClass : null\n        }, this.element);\n    };\n    /** @hidden\n     * @returns {void}\n     */\n    Grid.prototype.freezeRefresh = function () {\n        if (this.enableVirtualization || this.enableInfiniteScrolling) {\n            this.pageSettings.currentPage = 1;\n        }\n        this.componentRefresh();\n    };\n    Grid.prototype.getTooltipStatus = function (element) {\n        var headerTable = this.getHeaderTable();\n        var headerDivTag = this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' ? 'e-gridcontent' : 'e-gridheader';\n        var htable = this.createTable(headerTable, headerDivTag, 'header');\n        var ctable = this.createTable(headerTable, headerDivTag, 'content');\n        var table = element.classList.contains('e-headercell') ? htable : ctable;\n        var ele = element.classList.contains('e-headercell') ? 'th' : 'tr';\n        table.querySelector(ele).className = element.className;\n        table.querySelector(ele).innerHTML = element.innerHTML;\n        var width = table.querySelector(ele).getBoundingClientRect().width;\n        document.body.removeChild(htable);\n        document.body.removeChild(ctable);\n        if ((width > element.getBoundingClientRect().width && !element.classList.contains('e-editedbatchcell')) ||\n            (this.enableAdaptiveUI && this.rowRenderingMode === 'Vertical' &&\n                width > (element.getBoundingClientRect().width * 0.55) - (this.height !== 'auto' ? 16 : 0))) {\n            // 0.55 - defines the width of adaptive content cell, 16 - defines the scrollbar width\n            return true;\n        }\n        return false;\n    };\n    Grid.prototype.mouseMoveHandler = function (e) {\n        if (this.isEllipsisTooltip()) {\n            var element = parentsUntil(e.target, 'e-ellipsistooltip');\n            if (this.prevElement !== element || e.type === 'mouseout') {\n                this.toolTipObj.close();\n            }\n            var tagName = e.target.tagName;\n            var elemNames = ['A', 'BUTTON', 'INPUT'];\n            if (element && e.type !== 'mouseout' && !(Browser.isDevice && elemNames.indexOf(tagName) !== -1)) {\n                if (this.getTooltipStatus(element)) {\n                    var col = this.getColumns()[parseInt(element.getAttribute(literals.dataColIndex), 10)];\n                    var domSetter = col && col.disableHtmlEncode ? 'innerText' : 'innerHTML';\n                    var contentDiv = this.createElement('div');\n                    if (element.getElementsByClassName('e-headertext').length) {\n                        var innerElement = element.getElementsByClassName('e-headertext')[0];\n                        contentDiv[\"\" + domSetter] = this.sanitize(innerElement.innerText);\n                        this.toolTipObj.content = contentDiv;\n                    }\n                    else {\n                        contentDiv[\"\" + domSetter] = this.sanitize(element.innerText);\n                        this.toolTipObj.content = contentDiv;\n                    }\n                    this.prevElement = element;\n                    if (this.enableHtmlSanitizer) {\n                        this.toolTipObj.enableHtmlSanitizer = true;\n                    }\n                    if (col && col.disableHtmlEncode) {\n                        this.toolTipObj.enableHtmlParse = false;\n                    }\n                    this.toolTipObj['open'](element);\n                }\n            }\n        }\n    };\n    Grid.prototype.isEllipsisTooltip = function () {\n        var cols = this.getColumns();\n        if (this.clipMode === 'EllipsisWithTooltip') {\n            return true;\n        }\n        for (var i = 0; i < cols.length; i++) {\n            if (cols[parseInt(i.toString(), 10)].clipMode === 'EllipsisWithTooltip') {\n                return true;\n            }\n        }\n        return false;\n    };\n    Grid.prototype.scrollHandler = function () {\n        if (this.isEllipsisTooltip()) {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * To create table for ellipsiswithtooltip\n     *\n     * @param {Element} table - Defines the table\n     * @param {string} tag - Defines the tag\n     * @param {string} type - Defines the type\n     * @returns {HTMLDivElement} Returns the HTML div ELement\n     * @hidden\n     */\n    Grid.prototype.createTable = function (table, tag, type) {\n        var myTableDiv = this.createElement('div');\n        myTableDiv.className = this.element.className;\n        myTableDiv.style.cssText = 'display: inline-block;visibility:hidden;position:absolute';\n        var mySubDiv = this.createElement('div');\n        mySubDiv.className = tag;\n        var myTable = this.createElement('table');\n        myTable.className = table.className;\n        myTable.style.cssText = 'table-layout: auto;width: auto';\n        var ele = (type === 'header') ? 'th' : 'td';\n        var myTr = this.createElement('tr', { attrs: { role: 'row' } });\n        var mytd = this.createElement(ele);\n        myTr.appendChild(mytd);\n        myTable.appendChild(myTr);\n        mySubDiv.appendChild(myTable);\n        myTableDiv.appendChild(mySubDiv);\n        document.body.appendChild(myTableDiv);\n        return myTableDiv;\n    };\n    Grid.prototype.onKeyPressed = function (e) {\n        if (e.action === 'tab' || e.action === 'shiftTab') {\n            this.toolTipObj.close();\n        }\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'focusout', this.focusOutHandler, this);\n        EventHandler.add(this.element, 'dblclick', this.dblClickHandler, this);\n        EventHandler.add(this.element, 'keydown', this.keyPressHandler, this);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.add(window, 'resize', this.resetIndentWidth, this);\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        EventHandler.add(this.getContent().firstElementChild, 'scroll', this.scrollHandler, this);\n        EventHandler.add(this.element, 'mouseover', this.mouseMoveHandler, this);\n        EventHandler.add(this.element, 'mouseout', this.mouseMoveHandler, this);\n        EventHandler.add(this.getContent(), 'touchstart', this.tapEvent, this);\n        EventHandler.add(document.body, 'keydown', this.keyDownHandler, this);\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'touchend', this.mouseClickHandler);\n        EventHandler.remove(this.element, 'focusout', this.focusOutHandler);\n        EventHandler.remove(this.element, 'dblclick', this.dblClickHandler);\n        EventHandler.remove(this.getContent().firstElementChild, 'scroll', this.scrollHandler);\n        EventHandler.remove(this.element, 'mouseover', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'mouseout', this.mouseMoveHandler);\n        EventHandler.remove(this.element, 'keydown', this.keyPressHandler);\n        EventHandler.remove(this.getContent(), 'touchstart', this.tapEvent);\n        EventHandler.remove(document.body, 'keydown', this.keyDownHandler);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        EventHandler.remove(window, 'resize', this.resetIndentWidth);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.addListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.on(events.dataReady, this.dataReady, this);\n        this.on(events.contentReady, this.recalcIndentWidth, this);\n        this.on(events.headerRefreshed, this.recalcIndentWidth, this);\n        this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n        this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n        this.dataBoundFunction = this.refreshMediaCol.bind(this);\n        this.addEventListener(events.dataBound, this.dataBoundFunction);\n        this.on(events.keyPressed, this.onKeyPressed, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off(events.dataReady, this.dataReady);\n        this.off(events.contentReady, this.recalcIndentWidth);\n        this.off(events.headerRefreshed, this.recalcIndentWidth);\n        this.on(events.refreshFrozenPosition, this.refreshFrozenPosition, this);\n        this.on(events.refreshSplitFrozenColumn, this.refreshSplitFrozenColumn, this);\n        this.removeEventListener(events.dataBound, this.dataBoundFunction);\n        this.off(events.keyPressed, this.onKeyPressed);\n    };\n    /**\n     * Get current visible data of grid.\n     *\n     * @returns {Object[]} Returns the current view records\n     *\n     * @isGenericType true\n     */\n    Grid.prototype.getCurrentViewRecords = function () {\n        if (isGroupAdaptive(this)) {\n            return isNullOrUndefined(this.currentViewData.records) ?\n                this.currentViewData : this.currentViewData.records;\n        }\n        if (this.groupSettings.enableLazyLoading) {\n            return this.currentViewData;\n        }\n        return (this.allowGrouping && this.groupSettings.columns.length && this.currentViewData.length\n            && this.currentViewData.records) ? this.currentViewData.records\n            : this.currentViewData;\n    };\n    Grid.prototype.mouseClickHandler = function (e) {\n        if (this.isChildGrid(e) || (parentsUntil(e.target, 'e-gridpopup') && e.touches) ||\n            this.element.getElementsByClassName('e-cloneproperties').length || this.checkEdit(e)) {\n            return;\n        }\n        if (((!this.allowRowDragAndDrop && (parentsUntil(e.target, literals.gridContent) ||\n            e.target.tagName === 'TD')) || (parentsUntil(e.target, 'e-headercell') &&\n            parentsUntil(e.target, 'e-headercell').querySelector('.e-checkselectall')) ||\n            (!(this.allowGrouping || this.allowReordering) && parentsUntil(e.target, 'e-gridheader'))) &&\n            e.touches) {\n            return;\n        }\n        if (parentsUntil(e.target, 'e-gridheader') && this.allowRowDragAndDrop &&\n            !(parentsUntil(e.target, 'e-filterbarcell')) && (e.target &&\n            ['A', 'BUTTON', 'INPUT'].indexOf(e.target.tagName) === -1)) {\n            e.preventDefault();\n        }\n        var args = this.getRowInfo(e.target);\n        var cancel = 'cancel';\n        args[\"\" + cancel] = false;\n        var isDataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            isDataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        if (isDataRow) {\n            this.trigger(events.recordClick, args);\n        }\n        this.notify(events.click, e);\n    };\n    Grid.prototype.checkEdit = function (e) {\n        var tr = parentsUntil(e.target, literals.row);\n        var isEdit = this.editSettings.mode !== 'Batch' &&\n            this.isEdit && tr && (tr.classList.contains(literals.editedRow) || (tr.classList.contains(literals.addedRow)) &&\n            !this.editSettings.showAddNewRow);\n        return !parentsUntil(e.target, 'e-unboundcelldiv') && (isEdit || (parentsUntil(e.target, literals.rowCell) &&\n            parentsUntil(e.target, literals.rowCell).classList.contains('e-editedbatchcell')));\n    };\n    Grid.prototype.dblClickHandler = function (e) {\n        var grid = parentsUntil(e.target, 'e-grid');\n        if (isNullOrUndefined(grid) || grid.id !== this.element.id || closest(e.target, '.e-unboundcelldiv')) {\n            return;\n        }\n        var dataRow = false;\n        var tr = closest(e.target, 'tr');\n        if (tr && tr.getAttribute('data-uid')) {\n            var rowObj = this.getRowObjectFromUID(tr.getAttribute('data-uid'));\n            dataRow = rowObj ? rowObj.isDataRow : false;\n        }\n        var args = this.getRowInfo(e.target);\n        args.target = e.target;\n        if (dataRow) {\n            this.trigger(events.recordDoubleClick, args);\n        }\n        this.notify(events.dblclick, e);\n    };\n    Grid.prototype.focusOutHandler = function (e) {\n        if (this.isChildGrid(e)) {\n            return;\n        }\n        if (!parentsUntil(e.target, 'e-grid')) {\n            this.element.querySelector('.e-gridpopup').style.display = 'None';\n        }\n        var filterClear = this.element.querySelector('.e-cancel:not(.e-hide)');\n        if (filterClear && !filterClear.parentElement.classList.contains('e-tbar-btn')) {\n            filterClear.classList.add('e-hide');\n        }\n        var relatedTarget = e.relatedTarget;\n        var ariaOwns = relatedTarget ? relatedTarget.getAttribute('aria-owns') : null;\n        if ((!relatedTarget || (!parentsUntil(relatedTarget, 'e-grid') &&\n            (!isNullOrUndefined(ariaOwns) &&\n                (ariaOwns)) !== e.target.getAttribute('aria-owns')))\n            && !this.keyPress && this.isEdit && !Browser.isDevice) {\n            if (this.editSettings.mode === 'Batch' && !(((parentsUntil(relatedTarget, 'e-ddl') || parentsUntil(relatedTarget, 'e-ddt')) &&\n                (parentsUntil(relatedTarget, 'e-multi-select-list-wrapper') || parentsUntil(relatedTarget, 'e-input-filter'))) &&\n                parentsUntil(relatedTarget, 'e-input-group')) && (parentsUntil(relatedTarget, 'e-uploader') || (!(relatedTarget &&\n                isNullOrUndefined(parentsUntil(relatedTarget, 'e-input-group'))) && !parentsUntil(e.target, 'edit-custom-template')))) {\n                this.editModule.saveCell();\n                this.notify(events.editNextValCell, {});\n            }\n            if (this.editSettings.mode === 'Normal' && !this.isWidgetsDestroyed) {\n                this.editModule.editFormValidate();\n            }\n        }\n        if (this.editSettings.showAddNewRow) {\n            this.editModule.isShowAddedRowValidate = false;\n        }\n        this.keyPress = false;\n    };\n    Grid.prototype.isChildGrid = function (e) {\n        var gridElement = parentsUntil(e.target, 'e-grid');\n        if ((gridElement && gridElement.id !== this.element.id) || (parentsUntil(e.target, 'e-unboundcelldiv') &&\n            isNullOrUndefined(gridElement))) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {Object} persistedData - Defines the persisted data\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.mergePersistGridData = function (persistedData) {\n        var data = this.getLocalData();\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof this[\"\" + key] === 'object') && !isNullOrUndefined(this[\"\" + key])) {\n                    if (Array.isArray(this[\"\" + key]) && key === 'columns') {\n                        this.setFrozenCount();\n                        setColumnIndex(this[\"\" + key]);\n                        this.mergeColumns(dataObj[\"\" + key], this[\"\" + key]);\n                        this.mergedColumns = true;\n                        this[\"\" + key] = dataObj[\"\" + key];\n                    }\n                    else {\n                        extend(this[\"\" + key], dataObj[\"\" + key]);\n                    }\n                }\n                else {\n                    this[\"\" + key] = dataObj[\"\" + key];\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    Grid.prototype.mergeColumns = function (storedColumn, columns) {\n        var storedColumns = storedColumn;\n        var isFrozenGrid = this.isFrozenGrid();\n        var _loop_4 = function (i) {\n            var localCol = columns.filter(function (tCol) { return isFrozenGrid ?\n                tCol.index === storedColumns[parseInt(i.toString(), 10)][\"\" + literals.initialFrozenColumnIndex] :\n                tCol.index === storedColumns[parseInt(i.toString(), 10)].index; })[0];\n            if (!isNullOrUndefined(localCol)) {\n                if (isFrozenGrid) {\n                    localCol = extend({}, localCol, {}, true);\n                    localCol.freeze = storedColumns[parseInt(i.toString(), 10)].freeze;\n                }\n                if (localCol.columns && localCol.columns.length) {\n                    this_4.mergeColumns(storedColumns[parseInt(i.toString(), 10)].columns, localCol.columns);\n                    storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n                }\n                else {\n                    storedColumns[parseInt(i.toString(), 10)] = extend(localCol, storedColumns[parseInt(i.toString(), 10)], {}, true);\n                }\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_4(i);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns the isDetail\n     */\n    Grid.prototype.isDetail = function () {\n        return !isNullOrUndefined(this.detailTemplate) || !isNullOrUndefined(this.childGrid);\n    };\n    Grid.prototype.isCommandColumn = function (columns) {\n        var _this_1 = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this_1.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    Grid.prototype.isForeignKeyEnabled = function (columns) {\n        var _this_1 = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this_1.isForeignKeyEnabled(col.columns);\n            }\n            return !!(col.dataSource && col.foreignKeyValue);\n        });\n    };\n    Grid.prototype.keyPressHandler = function (e) {\n        var presskey = extend(e, { cancel: false });\n        this.trigger('keyPressed', presskey);\n        if (presskey.cancel === true) {\n            e.stopImmediatePropagation();\n        }\n    };\n    Grid.prototype.keyDownHandler = function (e) {\n        if (e.altKey) {\n            if (e.keyCode === 74) { //alt j\n                if (this.keyA) { //alt A J\n                    this.notify(events.groupCollapse, { target: e.target, collapse: false });\n                    this.keyA = false;\n                }\n                else {\n                    if (this.focusModule && this.focusModule.currentInfo && this.focusModule.currentInfo.element) {\n                        removeClass([this.focusModule.currentInfo.element, this.focusModule.currentInfo.elementToFocus], ['e-focused', 'e-focus']);\n                        this.focusModule.currentInfo.element.tabIndex = -1;\n                    }\n                    if (!this.element.classList.contains('e-childgrid')) {\n                        this.element.focus();\n                    }\n                }\n            }\n            if (e.keyCode === 87) { //alt w\n                var focusModule = this.focusModule;\n                if (focusModule) {\n                    if (!this.currentViewData.length) {\n                        return;\n                    }\n                    focusModule.focusContent();\n                    focusModule.addOutline();\n                }\n            }\n            if (e.keyCode === 65) { //alt A\n                this.keyA = true;\n            }\n            if (e.keyCode === 72 && this.keyA) { //alt A H\n                this.notify(events.groupCollapse, { target: e.target, collapse: true });\n                this.keyA = false;\n            }\n        }\n        if (e.keyCode === 13) {\n            this.notify(events.enterKeyHandler, e);\n        }\n    };\n    Grid.prototype.keyActionHandler = function (e) {\n        if (this.isChildGrid(e) ||\n            (this.editModule && ((this.editModule.alertDObj && this.editModule.alertDObj.visible) ||\n                (this.editModule.dialogObj && this.editModule.dialogObj.visible))) ||\n            ((this.isEdit && (!this.editSettings.showAddNewRow || (this.editSettings.showAddNewRow &&\n                this.element.querySelector(literals.editedRow)))) && e.action !== 'escape' && e.action !== 'enter'\n                && e.action !== 'shiftEnter' && e.action !== 'tab' && e.action !== 'shiftTab')) {\n            return;\n        }\n        else {\n            this.keyPress = true;\n        }\n        if (this.allowKeyboard) {\n            if (e.action === 'ctrlPlusP') {\n                e.preventDefault();\n                this.print();\n            }\n            this.notify(events.keyPressed, e);\n        }\n    };\n    /**\n     * @param {Function[]} modules - Defines the modules\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.setInjectedModules = function (modules) {\n        this.injectedModules = modules;\n    };\n    Grid.prototype.updateColumnObject = function () {\n        prepareColumns(this.columns, this.enableColumnVirtualization, this);\n        setColumnIndex(this.columns);\n        this.initForeignColumn();\n        this.notify(events.autoCol, {});\n    };\n    Grid.prototype.refreshFrozenPosition = function (obj) {\n        if (obj && obj.isModeChg) {\n            this.refreshColumns();\n            this.notify(events.refreshResizePosition, {});\n        }\n        else {\n            this.refreshColumns();\n        }\n    };\n    /**\n     * Gets the foreign columns from Grid.\n     *\n     * @returns {Column[]} Returns Foreign key column\n     */\n    Grid.prototype.getForeignKeyColumns = function () {\n        return this.getColumns().filter(function (col) {\n            return col.isForeignColumn();\n        });\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns row height\n     */\n    Grid.prototype.getRowHeight = function () {\n        return this.rowHeight ? this.rowHeight : getRowHeight(this.element);\n    };\n    /**\n     * Refreshes the Grid column changes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.refreshColumns = function () {\n        this.freezeColumnRefresh = true;\n        this.setFrozenCount();\n        this.updateFrozenColumnsWidth();\n        if (this.isFrozenGrid()) {\n            this.isPreventScrollEvent = true;\n        }\n        this.updateColumnObject();\n        this.checkLockColumns(this.getColumns());\n        this.refresh();\n        if (this.isFrozenGrid() && this.enableColumnVirtualization) {\n            var left = this.getContent().querySelector('.e-movablescrollbar').scrollLeft;\n            this.getHeaderContent().querySelector('.' + literals.headerContent).scrollLeft = left;\n            this.getContent().querySelector('.' + literals.content).scrollLeft = left;\n        }\n    };\n    /**\n     * Export Grid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns the excelexport\n     */\n    Grid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        if (this.exportGrids && this.exportGrids.length) {\n            var gridIds = this.exportGrids.slice();\n            return this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, workbook, isBlob);\n        }\n        else {\n            return this.excelExportModule ?\n                this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n        }\n    };\n    /**\n     * Export Grid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {Workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} Returns csv export\n     */\n    Grid.prototype.csvExport = function (excelExportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule ?\n            this.excelExportModule.Map(this, excelExportProperties, isMultipleExport, workbook, true, isBlob) : null;\n    };\n    /**\n     * Export Grid data to PDF document.\n     *\n     * @param {pdfExportProperties} pdfExportProperties - Defines the export properties of the Grid.\n     * @param {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     *\n     * @returns {Promise<any>} Returns pdfexport\n     */\n    Grid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        if (this.exportGrids && this.exportGrids.length) {\n            var gridIds = this.exportGrids.slice();\n            return this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n        }\n        else {\n            return this.pdfExportModule ? this.pdfExportModule.Map(this, pdfExportProperties, isMultipleExport, pdfDoc, isBlob) : null;\n        }\n    };\n    Grid.prototype.exportMultiplePdfGrids = function (gridIds, pdfExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    pdfDoc, isBlob) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var _this = this;\n        if (gridIds.length !== 0) {\n            var currentGridId = gridIds.shift();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var exportPromise = currentGridInstance.pdfExportModule ?\n                currentGridInstance.pdfExportModule.Map(currentGridInstance, pdfExportProperties, isMultipleExport, pdfDoc, isBlob)\n                : Promise.resolve();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return exportPromise.then(function (exportedGridResults) {\n                isMultipleExport = gridIds.length === 1 ? false : true;\n                return _this.exportMultiplePdfGrids(gridIds, pdfExportProperties, isMultipleExport, exportedGridResults, isBlob);\n            });\n        }\n        return null;\n    };\n    Grid.prototype.exportMultipleExcelGrids = function (gridIds, excelExportProperties, isMultipleExport, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    workbook, isBlob) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var _this = this;\n        if (gridIds.length !== 0) {\n            var currentGridId = gridIds.shift();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var currentGridInstance = document.getElementById(currentGridId).ej2_instances[0];\n            var exportPromise = currentGridInstance.excelExportModule ?\n                currentGridInstance.excelExportModule.Map(currentGridInstance, excelExportProperties, isMultipleExport, workbook, false, isBlob) : null;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            return exportPromise.then(function (exportedGridResults) {\n                isMultipleExport = gridIds.length === 1 ? false : true;\n                return _this.exportMultipleExcelGrids(gridIds, excelExportProperties, isMultipleExport, exportedGridResults, isBlob);\n            });\n        }\n        return null;\n    };\n    /**\n     * Groups a column by column name.\n     *\n     * @param  {string} columnName - Defines the column name to group.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.groupColumn(columnName);\n        }\n    };\n    /**\n     * Expands all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupExpandAll = function () {\n        if (this.groupModule) {\n            this.groupModule.expandAll();\n        }\n    };\n    /**\n     * Collapses all the grouped rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.groupCollapseAll = function () {\n        if (this.groupModule) {\n            this.groupModule.collapseAll();\n        }\n    };\n    /**\n     * Expands or collapses grouped rows by target element.\n     *\n     * @param  {Element} target - Defines the target element of the grouped row.\n     * @returns {void}\n     */\n    // public expandCollapseRows(target: Element): void {\n    //     if (this.groupModule) {\n    //         this.groupModule.expandCollapseRows(target);\n    //     }\n    // }\n    /**\n     * Clears all the grouped columns of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearGrouping = function () {\n        if (this.groupModule) {\n            this.groupModule.clearGrouping();\n        }\n    };\n    /**\n     * Ungroups a column by column name.\n     *\n     * {% codeBlock src='grid/ungroupColumn/index.md' %}{% endcodeBlock %}\n     *\n     * @param  {string} columnName - Defines the column name to ungroup.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.ungroupColumn = function (columnName) {\n        if (this.groupModule) {\n            this.groupModule.ungroupColumn(columnName);\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    Grid.prototype.scrollRefresh = function () {\n        var _this_1 = this;\n        var refresh = function () {\n            _this_1.scrollModule.refresh();\n            _this_1.off(events.contentReady, refresh);\n        };\n        this.on(events.contentReady, refresh, this);\n    };\n    /**\n     * Collapses a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the expanded element to collapse.\n     * @returns {void}\n     */\n    // public detailCollapse(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.collapse(target);\n    //     }\n    // }\n    /**\n     * Collapses all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailCollapseAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.collapseAll();\n        }\n    };\n    /**\n     * Expands a detail row with the given target.\n     *\n     * @param  {Element} target - Defines the collapsed element to expand.\n     * @returns {void}\n     */\n    // public detailExpand(target: number | Element): void {\n    //     if (this.detailRowModule) {\n    //         this.detailRowModule.expand(target);\n    //     }\n    // }\n    /**\n     * Expands all the detail rows of the Grid.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.detailExpandAll = function () {\n        if (this.detailRowModule) {\n            this.detailRowModule.expandAll();\n        }\n    };\n    /**\n     * Deselects the currently selected cells.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearCellSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearCellSelection();\n        }\n    };\n    /**\n     * Deselects the currently selected rows.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.clearRowSelection = function () {\n        if (this.selectionModule) {\n            this.selectionModule.clearRowSelection();\n        }\n    };\n    /**\n     * Selects a collection of cells by row and column indexes.\n     *\n     * @param  {ISelectedCell[]} rowCellIndexes - Specifies the row and column indexes.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectCells = function (rowCellIndexes) {\n        if (this.selectionModule) {\n            this.selectionModule.selectCells(rowCellIndexes);\n        }\n    };\n    /**\n     * Selects a range of rows from start and end row indexes.\n     *\n     * @param  {number} startIndex - Specifies the start row index.\n     * @param  {number} endIndex - Specifies the end row index.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.selectRowsByRange = function (startIndex, endIndex) {\n        if (this.selectionModule) {\n            this.selectionModule.selectRowsByRange(startIndex, endIndex);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {boolean} Returns whether context menu is open or not\n     */\n    Grid.prototype.isContextMenuOpen = function () {\n        return this.contextMenuModule && this.contextMenuModule.isOpen;\n    };\n    /**\n     * @param {Function} module - Defines the module\n     * @returns {boolean} return the injected modules\n     * @hidden\n     */\n    Grid.prototype.ensureModuleInjected = function (module) {\n        return this.getInjectedModules().indexOf(module) >= 0;\n    };\n    /**\n     * Destroys the given template reference.\n     *\n     * @param {string[]} propertyNames - Defines the collection of template name.\n     * @param {any} index - specifies the index\n     *\n     * @returns {void}\n     */\n    // eslint-disable-next-line\n    Grid.prototype.destroyTemplate = function (propertyNames, index) {\n        this.clearTemplate(propertyNames, index);\n    };\n    /**\n     * @param {string | string[]} type - Defines the type\n     * @param {Object} args - Defines the arguments\n     * @returns {void}\n     * @hidden\n     * @private\n     */\n    Grid.prototype.log = function (type, args) {\n        var injectedModules = this.getInjectedModules();\n        var logger = injectedModules.find(function (item) { return item.name === 'Logger'; });\n        if (!logger) {\n            Grid_1.Inject(Logger);\n            this.enableLogger = true;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.injectModules();\n        }\n        // eslint-disable-next-line\n        this.loggerModule ? this.loggerModule.log(type, args) : (function () { return 0; })();\n    };\n    /**\n     * @param {Element} element - Defines the element\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.applyBiggerTheme = function (element) {\n        if (this.element.classList.contains('e-bigger')) {\n            element.classList.add('e-bigger');\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Object} Returns the previous row data\n     */\n    Grid.prototype.getPreviousRowData = function () {\n        var previousRowData = this.getRowsObject()[this.getRows().length - 1].data;\n        return previousRowData;\n    };\n    /**\n     * Hides the scrollbar placeholder of Grid content when grid content is not overflown.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.hideScroll = function () {\n        var content = this.getContent().querySelector('.' + literals.content);\n        if (content.scrollHeight <= content.clientHeight) {\n            this.scrollModule.removePadding();\n            content.style.overflowY = 'auto';\n        }\n    };\n    /**\n     * Get row index by primary key or row data.\n     *\n     * @param  {string | Object} value - Defines the primary key value.\n     *\n     * @returns {number} Returns the index\n     */\n    Grid.prototype.getRowIndexByPrimaryKey = function (value) {\n        var pkName = this.getPrimaryKeyFieldNames()[0];\n        value = typeof value === 'object' ? value[\"\" + pkName] : value;\n        var rows = this.getRowsObject();\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[parseInt(i.toString(), 10)].isDetailRow || rows[parseInt(i.toString(), 10)].isCaptionRow) {\n                continue;\n            }\n            var pKvalue = rows[parseInt(i.toString(), 10)].data[\"\" + pkName];\n            if (pkName.split('.').length > 1) {\n                pKvalue = performComplexDataOperation(pkName, rows[parseInt(i.toString(), 10)].data);\n            }\n            if (pKvalue === value) {\n                return rows[parseInt(i.toString(), 10)].index;\n            }\n        }\n        return -1;\n    };\n    /**\n     * @param {string} field - Defines the field name\n     * @param {boolean} isForeignKey - Defines the foreign key\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByFieldFromAllCols = function (field, isForeignKey) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if ((!isForeignKey && field === gCols[parseInt(i.toString(), 10)].field) ||\n                (isForeignKey && gCols[parseInt(i.toString(), 10)].isForeignColumn() &&\n                    field === gCols[parseInt(i.toString(), 10)].foreignKeyValue)) {\n                column = gCols[parseInt(i.toString(), 10)];\n                break;\n            }\n        }\n        return column;\n    };\n    /**\n     * @param {string} uid - Defines the uid\n     * @returns {Column} returns the column\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    Grid.prototype.grabColumnByUidFromAllCols = function (uid) {\n        var column;\n        this.columnModel = [];\n        this.updateColumnModel(this.columns);\n        var gCols = this.columnModel;\n        for (var i = 0; i < gCols.length; i++) {\n            if (uid === gCols[parseInt(i.toString(), 10)].uid) {\n                column = gCols[parseInt(i.toString(), 10)];\n            }\n        }\n        return column;\n    };\n    /**\n     * Get all filtered records from the Grid and it returns array of objects for the local dataSource, returns a promise object if the Grid has remote data.\n     *\n     * @returns {Object[] | Promise<Object>} Returns the filtered records\n     */\n    Grid.prototype.getFilteredRecords = function () {\n        if ((this.allowFiltering && this.filterSettings.columns.length) || this.searchSettings.key.length) {\n            var query = this.renderModule.data.generateQuery(true);\n            if (this.dataSource && this.renderModule.data.isRemote() && this.dataSource instanceof DataManager) {\n                return this.renderModule.data.getData(this.dataSource, query);\n            }\n            else {\n                if (this.dataSource instanceof DataManager) {\n                    return this.dataSource.executeLocal(query);\n                }\n                else {\n                    return new DataManager(this.dataSource, query).executeLocal(query);\n                }\n            }\n        }\n        return [];\n    };\n    Grid.prototype.getUserAgent = function () {\n        var userAgent = Browser.userAgent.toLowerCase();\n        return /iphone|ipod|ipad|macintosh/.test(userAgent);\n    };\n    /**\n     * @param {TouchEventArgs} e - Defines the TouchEventArgs\n     * @returns {void}\n     * @hidden\n     */\n    // Need to have all columns while filtering with ColumnVirtualization.\n    // eslint-disable-next-line\n    Grid.prototype.tapEvent = function (e) {\n        if (this.getUserAgent()) {\n            if (!Global.timer) {\n                Global.timer = setTimeout(function () {\n                    Global.timer = null;\n                }, 300);\n            }\n            else {\n                clearTimeout(Global.timer);\n                Global.timer = null;\n                this.dblClickHandler(e);\n                this.notify(events.doubleTap, e);\n            }\n        }\n    };\n    /**\n     * @param {string} prefix - specifies the prefix\n     * @returns {string} returns the row uid\n     * @hidden\n     */\n    Grid.prototype.getRowUid = function (prefix) {\n        return \"\" + prefix + this.rowUid++;\n    };\n    /**\n     * @param {string} uid - specifies the uid\n     * @returns {Element} returns the element\n     * @hidden\n     */\n    Grid.prototype.getRowElementByUID = function (uid) {\n        var rowEle;\n        var rows = [];\n        var cntRows = [].slice.call(this.getContent().querySelector(literals.tbody).children);\n        if (this.frozenRows) {\n            rows = [].slice.call(this.getHeaderContent().querySelector(literals.tbody).children);\n            rows = rows.concat(cntRows);\n        }\n        else {\n            rows = cntRows;\n        }\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            if (row.getAttribute('data-uid') === uid) {\n                rowEle = row;\n                break;\n            }\n        }\n        return rowEle;\n    };\n    /**\n     * Gets the hidden columns from the Grid.\n     *\n     * @returns {Column[]} Returns the Column\n     */\n    Grid.prototype.getHiddenColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible === false) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * Calculates the page size by parent element height\n     *\n     * @param {number | string } containerHeight - specifies the container height\n     * @returns {number} returns the page size\n     */\n    Grid.prototype.calculatePageSizeByParentHeight = function (containerHeight) {\n        if (this.allowPaging) {\n            if ((this.allowTextWrap && this.textWrapSettings.wrapMode === 'Header') || (!this.allowTextWrap)) {\n                var pagesize = 0;\n                if (containerHeight.indexOf('%') !== -1) {\n                    containerHeight = parseInt(containerHeight, 10) / 100 * this.element.clientHeight;\n                }\n                var nonContentHeight = this.getNoncontentHeight() + this.getRowHeight();\n                if (containerHeight > nonContentHeight) {\n                    var contentHeight = 0;\n                    contentHeight = containerHeight - this.getNoncontentHeight();\n                    pagesize = (contentHeight / this.getRowHeight());\n                }\n                if (pagesize > 0) {\n                    return Math.floor(pagesize);\n                }\n            }\n        }\n        return 0;\n    };\n    Grid.prototype.getNoncontentHeight = function () {\n        var height = 0;\n        if (this.getHeaderContent() && !isNullOrUndefined(this.getHeaderContent().clientHeight)) {\n            height += this.getHeaderContent().clientHeight;\n        }\n        if (this.toolbar && !isNullOrUndefined(this.element.querySelector('.e-toolbar').clientHeight)) {\n            height += this.element.querySelector('.e-toolbar').clientHeight;\n        }\n        if (this.allowPaging && !isNullOrUndefined(this.element.querySelector('.e-gridpager').clientHeight)) {\n            height += this.element.querySelector('.e-gridpager').clientHeight;\n        }\n        if (this.showColumnChooser && !isNullOrUndefined(this.element.querySelector('.e-columnheader').clientHeight)) {\n            height += this.element.querySelector('.e-columnheader').clientHeight;\n        }\n        if (this.allowGrouping && this.groupSettings.showDropArea && !isNullOrUndefined(this.element.querySelector('.e-groupdroparea').clientHeight)) {\n            height += this.element.querySelector('.e-groupdroparea').clientHeight;\n        }\n        if (this.aggregates.length > 0 && !isNullOrUndefined(this.element.querySelector('.e-summaryrow').clientHeight)) {\n            for (var i = 0; i < this.element.getElementsByClassName('e-summaryrow').length; i++) {\n                height += this.element.getElementsByClassName('e-summaryrow')[parseInt(i.toString(), 10)].clientHeight;\n            }\n        }\n        return height;\n    };\n    /**\n     *To perform aggregate operation on a column.\n     *\n     * @param  {AggregateColumnModel} summaryCol - Pass Aggregate Column details.\n     * @param  {Object} summaryData - Pass JSON Array for which its field values to be calculated.\n     *\n     * @returns {number} returns the summary values\n     */\n    Grid.prototype.getSummaryValues = function (summaryCol, summaryData) {\n        return DataUtil.aggregates[summaryCol.type.toLowerCase()](summaryData, summaryCol.field);\n    };\n    /**\n     * Sends a Post request to export Grid to Excel file in server side.\n     *\n     * @param  {string} url - Pass Url for server side excel export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverExcelExport = function (url, headers) {\n        this.isExcel = true;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * Sends a Post request to export Grid to Pdf file in server side.\n     *\n     * @param  {string} url - Pass Url for server side pdf export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverPdfExport = function (url, headers) {\n        this.isExcel = false;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * Sends a Post request to export Grid to CSV file in server side.\n     *\n     * @param  {string} url - Pass Url for server side csv export action.\n     *\n     * @param  {ExportHeaders} headers - The headers to include in the export request.\n     *\n     * @returns {void}\n     */\n    Grid.prototype.serverCsvExport = function (url, headers) {\n        this.isExcel = true;\n        this.exportGrid(url, headers);\n    };\n    /**\n     * @param {string} url - Defines exporting url\n     * @param {ExportHeaders} headers - The optional headers for the export request.\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.exportGrid = function (url, headers) {\n        var _this_1 = this;\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        var grid = this;\n        var query = grid.getDataModule().generateQuery(true);\n        var state = new UrlAdaptor().processQuery(new DataManager({ url: '' }), query);\n        var queries = JSON.parse(state.data);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var gridModel = JSON.parse(this.addOnPersist(['allowGrouping', 'allowPaging', 'pageSettings', 'sortSettings', 'allowPdfExport', 'allowExcelExport', 'aggregates',\n            'filterSettings', 'groupSettings', 'columns', 'locale', 'searchSettings']));\n        var include = ['field', 'headerText', 'type', 'format', 'visible', 'foreignKeyValue', 'foreignKeyField',\n            'template', 'index', 'width', 'textAlign', 'headerTextAlign', 'columns'];\n        gridModel.filterSettings.columns = queries.where;\n        gridModel.searchSettings.fields = queries.search && queries.search[0]['fields'] || [];\n        gridModel.sortSettings.columns = queries.sorted;\n        gridModel.columns = this.setHeaderText(gridModel.columns, include);\n        var form = this.createElement('form', { id: 'ExportForm', styles: 'display:none;' });\n        var gridInput = this.createElement('input', { id: 'gridInput', attrs: { name: 'gridModel' } });\n        gridInput.value = JSON.stringify(gridModel);\n        form.method = 'POST';\n        form.action = url;\n        form.appendChild(gridInput);\n        if (headers && headers.headers && Array.isArray(headers.headers)) {\n            headers.headers.forEach(function (header) {\n                Object.keys(header).forEach(function (key) {\n                    var value = typeof header[\"\" + key] === 'string' ? header[\"\" + key] : JSON.stringify(header[\"\" + key]);\n                    var headerInput = _this_1.createElement('input', { attrs: { name: key, value: value, type: 'hidden' } });\n                    form.appendChild(headerInput);\n                });\n            });\n        }\n        document.body.appendChild(form);\n        form.submit();\n        form.remove();\n    };\n    /**\n     * @param {Column[]} columns - Defines array of columns\n     * @param {string[]} include - Defines array of sting\n     * @returns {Column[]} returns array of columns\n     * @hidden\n     */\n    Grid.prototype.setHeaderText = function (columns, include) {\n        for (var i = 0; i < columns.length; i++) {\n            var column = this.getColumnByUid(columns[parseInt(i.toString(), 10)].uid);\n            columns[parseInt(i.toString(), 10)].headerText = column.headerText;\n            if (!isNullOrUndefined(column.template)) {\n                columns[parseInt(i.toString(), 10)].template = 'true';\n            }\n            if (columns[parseInt(i.toString(), 10)].format) {\n                columns[parseInt(i.toString(), 10)].format = getNumberFormat(this.getFormat(columns[parseInt(i.toString(), 10)].format), columns[parseInt(i.toString(), 10)].type, this.isExcel, defaultCurrencyCode);\n            }\n            if (columns[parseInt(i.toString(), 10)].columns) {\n                this.setHeaderText(columns[parseInt(i.toString(), 10)].columns, include);\n            }\n            var keys = Object.keys(columns[parseInt(i.toString(), 10)]);\n            for (var j = 0; j < keys.length; j++) {\n                if (include.indexOf(keys[parseInt(j.toString(), 10)]) < 0) {\n                    delete columns[parseInt(i.toString(), 10)][keys[parseInt(j.toString(), 10)]];\n                }\n            }\n        }\n        return columns;\n    };\n    Grid.prototype.getFormat = function (format) {\n        return typeof (format) === 'object' ? !isNullOrUndefined(format.format) ?\n            format.format : format.skeleton : format;\n    };\n    /**\n     * @hidden\n     * @returns {boolean} returns the isCollapseStateEnabled\n     */\n    Grid.prototype.isCollapseStateEnabled = function () {\n        var isExpanded = 'isExpanded';\n        return this[\"\" + isExpanded] === false;\n    };\n    /**\n     * @param {number} key - Defines the primary key value.\n     * @param {Object} rowData - Defines the rowData\n     * @returns {void}\n     */\n    Grid.prototype.updateRowValue = function (key, rowData) {\n        var args = {\n            requestType: 'save', data: rowData\n        };\n        this.showSpinner();\n        this.notify(events.updateData, args);\n        this.refresh();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.setForeignKeyData = function () {\n        this.dataBind();\n        var colpending = this.getDataModule().getForeignKeyDataState();\n        if (colpending.isPending) {\n            this.getDataModule().setForeignKeyDataState({});\n            colpending.resolver();\n        }\n        else {\n            this.getDataModule().setForeignKeyDataState({ isDataChanged: false });\n            if (this.contentModule || this.headerModule) {\n                this.renderModule.render();\n            }\n        }\n    };\n    /**\n     * @param {string} field - specifies the field\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.resetFilterDlgPosition = function (field) {\n        var header = this.getColumnHeaderByField(field);\n        if (header) {\n            var target = header.querySelector('.e-filtermenudiv');\n            var filterDlg = this.element.querySelector('.e-filter-popup');\n            if (target) {\n                var gClient = this.element.getBoundingClientRect();\n                var fClient = target.getBoundingClientRect();\n                if (filterDlg) {\n                    if ((filterDlg.offsetWidth + fClient.right) > gClient.right) {\n                        filterDlg.style.left = ((fClient.right - filterDlg.offsetWidth) - gClient.left).toString() + 'px';\n                    }\n                    else {\n                        filterDlg.style.left = (fClient.right - gClient.left).toString() + 'px';\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {any} callBack - specifies the callBack method\n     * @returns {void}\n     * @hidden\n     */\n    // eslint-disable-next-line\n    Grid.prototype.renderTemplates = function (callBack) {\n        var isReactChild = this.parentDetails && this.parentDetails.parentInstObj && this.parentDetails.parentInstObj.isReact;\n        if (isReactChild && this['portals']) {\n            this.parentDetails.parentInstObj['portals'] = this.parentDetails.parentInstObj['portals']\n                .concat(this['portals']);\n            this.parentDetails.parentInstObj.renderTemplates(callBack);\n            this['portals'] = undefined;\n        }\n        else {\n            var portals = 'portals';\n            this.notify('reactTemplateRender', this[\"\" + portals]);\n            this.renderReactTemplates(callBack);\n        }\n    };\n    /**\n     * Apply the changes to the Grid without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchUpdate = function (changes) {\n        this.processRowChanges(changes);\n    };\n    /**\n     * Apply the changes to the Grid in one batch after 50ms without refreshing the rows.\n     *\n     * @param  {BatchChanges} changes - Defines changes to be updated.\n     * @returns {void}\n     */\n    Grid.prototype.batchAsyncUpdate = function (changes) {\n        this.processBulkRowChanges(changes);\n    };\n    Grid.prototype.processBulkRowChanges = function (changes) {\n        var _this_1 = this;\n        if (!this.dataToBeUpdated) {\n            this.dataToBeUpdated = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n            setTimeout(function () {\n                _this_1.processRowChanges(_this_1.dataToBeUpdated);\n                _this_1.dataToBeUpdated = null;\n            }, this.asyncTimeOut);\n        }\n        else {\n            var loopstring = [literals.addedRecords, literals.changedRecords, literals.deletedRecords];\n            var keyField = this.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < loopstring.length; i++) {\n                if (changes[loopstring[parseInt(i.toString(), 10)]]) {\n                    compareChanges(this, changes, loopstring[parseInt(i.toString(), 10)], keyField);\n                }\n            }\n        }\n    };\n    Grid.prototype.processRowChanges = function (changes) {\n        var _this_1 = this;\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        changes = Object.assign({ addedRecords: [], changedRecords: [], deletedRecords: [] }, changes);\n        var promise = this.getDataModule().saveChanges(changes, keyField, {}, this.getDataModule().generateQuery().requiresCount());\n        if (this.getDataModule().isRemote()) {\n            promise.then(function () {\n                _this_1.setNewData();\n            });\n        }\n        else {\n            this.setNewData();\n        }\n    };\n    Grid.prototype.setNewData = function () {\n        var _this_1 = this;\n        var oldValues = JSON.parse(JSON.stringify(this.getCurrentViewRecords()));\n        var getData = this.getDataModule().getData({}, this.getDataModule().generateQuery().requiresCount());\n        getData.then(function (e) {\n            _this_1.bulkRefresh(e.result, oldValues, e.count);\n        });\n    };\n    Grid.prototype.deleteRowElement = function (row) {\n        var tr = this.getRowElementByUID(row.uid);\n        remove(tr);\n    };\n    Grid.prototype.bulkRefresh = function (result, oldValues, count) {\n        var _this_1 = this;\n        var rowObj = this.getRowsObject();\n        var keyField = this.getPrimaryKeyFieldNames()[0];\n        var _loop_5 = function (i) {\n            if (!result.filter(function (e) { return e[\"\" + keyField] === rowObj[parseInt(i.toString(), 10)].data[\"\" + keyField]; }).length) {\n                this_5.deleteRowElement(rowObj[parseInt(i.toString(), 10)]);\n                rowObj.splice(i, 1);\n                i--;\n            }\n            out_i_1 = i;\n        };\n        var this_5 = this, out_i_1;\n        for (var i = 0; i < rowObj.length; i++) {\n            _loop_5(i);\n            i = out_i_1;\n        }\n        var _loop_6 = function (i) {\n            var isRowExist;\n            oldValues.filter(function (e) {\n                if (e[\"\" + keyField] === result[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (e !== result[parseInt(i.toString(), 10)]) {\n                        _this_1.setRowData(result[parseInt(i.toString(), 10)][\"\" + keyField], result[parseInt(i.toString(), 10)]);\n                    }\n                    isRowExist = true;\n                }\n            });\n            if (!isRowExist) {\n                this_6.renderRowElement(result[parseInt(i.toString(), 10)], i);\n            }\n        };\n        var this_6 = this;\n        for (var i = 0; i < result.length; i++) {\n            _loop_6(i);\n        }\n        this.currentViewData = result;\n        var rows = [].slice.call(this.getContentTable().getElementsByClassName(literals.row));\n        resetRowIndex(this, this.getRowsObject(), rows);\n        setRowElements(this);\n        if (this.allowPaging) {\n            this.notify(events.inBoundModelChanged, { module: 'pager', properties: { totalRecordsCount: count } });\n        }\n    };\n    Grid.prototype.renderRowElement = function (data, index) {\n        var row = new RowRenderer(this.serviceLocator, null, this);\n        var model = new RowModelGenerator(this);\n        var modelData = model.generateRows([data]);\n        var tr = row.render(modelData[0], this.getColumns());\n        this.addRowObject(modelData[0], index);\n        var tbody = this.getContentTable().querySelector(literals.tbody);\n        if (tbody.querySelector('.e-emptyrow')) {\n            var emptyRow = tbody.querySelector('.e-emptyrow');\n            emptyRow.parentNode.removeChild(emptyRow);\n            if (this.frozenRows && this.element.querySelector('.e-frozenrow-empty')) {\n                this.element.querySelector('.e-frozenrow-empty').classList.remove('e-frozenrow-empty');\n            }\n        }\n        if (this.frozenRows && index < this.frozenRows) {\n            tbody = this.getHeaderContent().querySelector(literals.tbody);\n        }\n        else {\n            tbody = this.getContent().querySelector(literals.tbody);\n        }\n        tbody = this.getContent().querySelector(literals.tbody);\n        tbody.appendChild(tr);\n    };\n    Grid.prototype.addRowObject = function (row, index) {\n        this.getRowsObject().splice(index, 1, row);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Grid.prototype.updateVisibleExpandCollapseRows = function () {\n        var rows = this.getRowsObject();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if ((rows[parseInt(i.toString(), 10)].isDataRow || rows[parseInt(i.toString(), 10)].isAggregateRow)\n                && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid)\n                && this.getRowElementByUID(rows[parseInt(i.toString(), 10)].uid).style.display === 'none') {\n                rows[parseInt(i.toString(), 10)].visible = false;\n            }\n            else {\n                rows[parseInt(i.toString(), 10)].visible = true;\n            }\n        }\n    };\n    /**\n     * Method to sanitize any suspected untrusted strings and scripts before rendering them.\n     *\n     * @param {string} value - Specifies the html value to sanitize\n     * @returns {string} Returns the sanitized html string\n     * @hidden\n     */\n    Grid.prototype.sanitize = function (value) {\n        if (this.enableHtmlSanitizer) {\n            return SanitizeHtmlHelper.sanitize(value);\n        }\n        return value;\n    };\n    /**\n     * @param {string | number} height - specifies the height\n     * @returns {number | string} - specifies the height number\n     * @hidden\n     */\n    Grid.prototype.getHeight = function (height) {\n        if (!Number.isInteger(height) && height.indexOf('%') !== -1) {\n            height = parseInt(height, 10) / 100 * this.element.clientHeight;\n        }\n        else if (!Number.isInteger(height) && this.height !== 'auto') {\n            height = parseInt(height, 10);\n        }\n        else {\n            height = this.height;\n        }\n        return height;\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right content\n\n     */\n    Grid.prototype.getFrozenRightContent = function () {\n        return this.contentModule.getPanel();\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header\n\n     */\n    Grid.prototype.getFrozenRightHeader = function () {\n        return this.headerModule.getPanel();\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable header tbody\n\n     */\n    Grid.prototype.getMovableHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns movable content tbody\n\n     */\n    Grid.prototype.getMovableContentTbody = function () {\n        return this.getContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen header tbody\n\n     */\n    Grid.prototype.getFrozenHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen left content tbody\n\n     */\n    Grid.prototype.getFrozenLeftContentTbody = function () {\n        return this.getContent().querySelector(literals.tbody);\n    };\n    /**\n     * @hidden\n     * @returns {Element} - returns frozen right header tbody\n\n     */\n    Grid.prototype.getFrozenRightHeaderTbody = function () {\n        return this.getHeaderContent().querySelector(literals.tbody);\n    };\n    /**\n     * @returns {Element} returns frozen right content tbody\n\n     * @hidden\n     */\n    Grid.prototype.getFrozenRightContentTbody = function () {\n        return this.getContent().querySelector(literals.tbody);\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom filter dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomFilter = function (isCustom) {\n        if (this.filterModule) {\n            this.filterModule.showCustomFilter(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom sort dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomSort = function (isCustom) {\n        if (this.sortModule) {\n            this.sortModule.showCustomSort(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * @param {boolean} isCustom - Defines custom column chooser dialog open\n     * @returns {void}\n     * @hidden\n     */\n    Grid.prototype.showResponsiveCustomColumnChooser = function (isCustom) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.showCustomColumnChooser(isCustom || this.rowRenderingMode === 'Vertical');\n        }\n    };\n    /**\n     * To manually show the vertical row mode filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveFilterDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomFilter(true);\n        }\n    };\n    /**\n     * To manually show the vertical row sort filter dialog\n     *\n     * @returns {void}\n     */\n    Grid.prototype.showAdaptiveSortDialog = function () {\n        if (this.enableAdaptiveUI) {\n            this.showResponsiveCustomSort(true);\n        }\n    };\n    /**\n     * @param {boolean} isColVirtualization - Defines column virtualization\n     * @returns {Column[]} returns array of column models\n     * @hidden\n     */\n    Grid.prototype.getCurrentVisibleColumns = function (isColVirtualization) {\n        var cols = [];\n        var gridCols = isColVirtualization ? this.getColumns() : this.columnModel;\n        for (var _i = 0, gridCols_1 = gridCols; _i < gridCols_1.length; _i++) {\n            var col = gridCols_1[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    Grid.prototype.enableInfiniteAggrgate = function () {\n        if (this.enableInfiniteScrolling && this.groupSettings.columns.length && !this.groupSettings.disablePageWiseAggregates\n            && !this.groupSettings.enableLazyLoading) {\n            this.setProperties({ groupSettings: { disablePageWiseAggregates: true } }, true);\n        }\n    };\n    var Grid_1;\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"currentViewData\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"parentDetails\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"showHider\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableStickyHeader\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], Grid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Complex({}, ResizeSettings)\n    ], Grid.prototype, \"resizeSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Grid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, LoadingIndicator)\n    ], Grid.prototype, \"loadingIndicator\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"enableVirtualMaskRow\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableColumnVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], Grid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], Grid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], Grid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], Grid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property(true)\n    ], Grid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Property(-1)\n    ], Grid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], Grid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Grid.prototype, \"rowRenderingMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableAdaptiveUI\", void 0);\n    __decorate([\n        Property('Both')\n    ], Grid.prototype, \"adaptiveUIMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], Grid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], Grid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"allowGrouping\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"autoFit\", void 0);\n    __decorate([\n        Complex({}, GroupSettings)\n    ], Grid.prototype, \"groupSettings\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], Grid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], Grid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Complex({}, ColumnChooserSettings)\n    ], Grid.prototype, \"columnChooserSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], Grid.prototype, \"enableHeaderFocus\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], Grid.prototype, \"width\", void 0);\n    __decorate([\n        Property('Default')\n    ], Grid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"emptyRecordTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"childGrid\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"queryString\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], Grid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property('Expanded')\n    ], Grid.prototype, \"hierarchyPrintMode\", void 0);\n    __decorate([\n        Property([])\n    ], Grid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], Grid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"query\", void 0);\n    __decorate([\n        Property('USD')\n    ], Grid.prototype, \"currencyCode\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"exportGrids\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Grid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], Grid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('')\n    ], Grid.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('All')\n    ], Grid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Property({})\n    ], Grid.prototype, \"currentAction\", void 0);\n    __decorate([\n        Property('')\n    ], Grid.prototype, \"ej2StatePersistenceVersion\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"recordClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnSelected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDeselected\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelAggregateQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportDetailTemplate\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"pdfExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenColumnChooser\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeOpenAdaptiveDialog\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"commandClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"keyPressed\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"checkBoxChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"beforeAutoFill\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"columnDataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"exportGroupCaption\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupExpand\", void 0);\n    __decorate([\n        Event()\n    ], Grid.prototype, \"lazyLoadGroupCollapse\", void 0);\n    Grid = Grid_1 = __decorate([\n        NotifyPropertyChanges\n    ], Grid);\n    return Grid;\n}(Component));\nexport { Grid };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}