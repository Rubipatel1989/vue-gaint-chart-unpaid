{"ast":null,"code":"export default {\n  name: 'ItemColumn',\n  inject: ['root'],\n  props: ['column', 'task'],\n  data() {\n    return {};\n  },\n  methods: {\n    /**\n     * Emit event\n     *\n     * @param {String} eventName\n     * @param {Event} event\n     */\n    emitEvent(eventName, event) {\n      if (typeof this.column.events !== 'undefined' && typeof this.column.events[eventName] === 'function') {\n        this.column.events[eventName]({\n          event,\n          data: this.task,\n          column: this.column\n        });\n      }\n      this.root.$emit(`taskList-${this.task.type}-${eventName}`, {\n        event,\n        data: this.task,\n        column: this.column\n      });\n    }\n  },\n  computed: {\n    /**\n     * Should we display html or just text?\n     *\n     * @returns {boolean}\n     */\n    html() {\n      if (typeof this.column.html !== 'undefined' && this.column.html === true) {\n        return true;\n      }\n      return false;\n    },\n    /**\n     * Get column value\n     *\n     * @returns {any|string}\n     */\n    value() {\n      if (typeof this.column.value === 'function') {\n        return this.column.value(this.task);\n      }\n      return this.task[this.column.value];\n    },\n    itemColumnStyle() {\n      return {\n        ...this.root.style['task-list-item-column'],\n        ...this.column.style['task-list-item-column'],\n        width: this.column.finalWidth + 'px',\n        height: this.column.height + 'px'\n      };\n    },\n    wrapperStyle() {\n      return {\n        ...this.root.style['task-list-item-value-wrapper'],\n        ...this.column.style['task-list-item-value-wrapper']\n      };\n    },\n    containerStyle() {\n      return {\n        ...this.root.style['task-list-item-value-container'],\n        ...this.column.style['task-list-item-value-container']\n      };\n    },\n    valueStyle() {\n      return {\n        ...this.root.style['task-list-item-value'],\n        ...this.column.style['task-list-item-value']\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","inject","props","data","methods","emitEvent","eventName","event","column","events","task","root","$emit","type","computed","html","value","itemColumnStyle","style","width","finalWidth","height","wrapperStyle","containerStyle","valueStyle"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/TaskList/ItemColumn.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview ItemColumn component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div class=\"gantt-elastic__task-list-item-column\" :style=\"itemColumnStyle\">\n    <div class=\"gantt-elastic__task-list-item-value-wrapper\" :style=\"wrapperStyle\">\n      <slot></slot>\n      <div class=\"gantt-elastic__task-list-item-value-container\" :style=\"containerStyle\">\n        <div\n          v-if=\"!html\"\n          class=\"gantt-elastic__task-list-item-value\"\n          :style=\"valueStyle\"\n          @click=\"emitEvent('click', $event)\"\n          @mouseenter=\"emitEvent('mouseenter', $event)\"\n          @mouseover=\"emitEvent('mouseover', $event)\"\n          @mouseout=\"emitEvent('mouseout', $event)\"\n          @mousemove=\"emitEvent('mousemove', $event)\"\n          @mousedown=\"emitEvent('mousedown', $event)\"\n          @mouseup=\"emitEvent('mouseup', $event)\"\n          @mousewheel=\"emitEvent('mousewheel', $event)\"\n          @touchstart=\"emitEvent('touchstart', $event)\"\n          @touchmove=\"emitEvent('touchmove', $event)\"\n          @touchend=\"emitEvent('touchend', $event)\"\n        >\n          {{ value }}\n        </div>\n        <div\n          v-else\n          class=\"gantt-elastic__task-list-item-value\"\n          :style=\"valueStyle\"\n          @click=\"emitEvent('click', $event)\"\n          @mouseenter=\"emitEvent('mouseenter', $event)\"\n          @mouseover=\"emitEvent('mouseover', $event)\"\n          @mouseout=\"emitEvent('mouseout', $event)\"\n          @mousemove=\"emitEvent('mousemove', $event)\"\n          @mousedown=\"emitEvent('mousedown', $event)\"\n          @mouseup=\"emitEvent('mouseup', $event)\"\n          @mousewheel=\"emitEvent('mousewheel', $event)\"\n          @touchstart=\"emitEvent('touchstart', $event)\"\n          @touchmove=\"emitEvent('touchmove', $event)\"\n          @touchend=\"emitEvent('touchend', $event)\"\n          v-html=\"value\"\n        ></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ItemColumn',\n  inject: ['root'],\n  props: ['column', 'task'],\n  data() {\n    return {};\n  },\n  methods: {\n    /**\n     * Emit event\n     *\n     * @param {String} eventName\n     * @param {Event} event\n     */\n    emitEvent(eventName, event) {\n      if (typeof this.column.events !== 'undefined' && typeof this.column.events[eventName] === 'function') {\n        this.column.events[eventName]({ event, data: this.task, column: this.column });\n      }\n      this.root.$emit(`taskList-${this.task.type}-${eventName}`, { event, data: this.task, column: this.column });\n    }\n  },\n  computed: {\n    /**\n     * Should we display html or just text?\n     *\n     * @returns {boolean}\n     */\n    html() {\n      if (typeof this.column.html !== 'undefined' && this.column.html === true) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Get column value\n     *\n     * @returns {any|string}\n     */\n    value() {\n      if (typeof this.column.value === 'function') {\n        return this.column.value(this.task);\n      }\n      return this.task[this.column.value];\n    },\n\n    itemColumnStyle() {\n      return {\n        ...this.root.style['task-list-item-column'],\n        ...this.column.style['task-list-item-column'],\n        width: this.column.finalWidth + 'px',\n        height: this.column.height + 'px'\n      };\n    },\n\n    wrapperStyle() {\n      return {\n        ...this.root.style['task-list-item-value-wrapper'],\n        ...this.column.style['task-list-item-value-wrapper']\n      };\n    },\n\n    containerStyle() {\n      return {\n        ...this.root.style['task-list-item-value-container'],\n        ...this.column.style['task-list-item-value-container']\n      };\n    },\n\n    valueStyle() {\n      return { ...this.root.style['task-list-item-value'], ...this.column.style['task-list-item-value'] };\n    }\n  }\n};\n</script>\n"],"mappings":"AAsDA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,CAAC,MAAM,CAAC;EAChBC,KAAK,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO,CAAC,CAAC;EACX,CAAC;EACDC,OAAO,EAAE;IACP;;;;;;IAMAC,SAASA,CAACC,SAAS,EAAEC,KAAK,EAAE;MAC1B,IAAI,OAAO,IAAI,CAACC,MAAM,CAACC,MAAK,KAAM,WAAU,IAAK,OAAO,IAAI,CAACD,MAAM,CAACC,MAAM,CAACH,SAAS,MAAM,UAAU,EAAE;QACpG,IAAI,CAACE,MAAM,CAACC,MAAM,CAACH,SAAS,CAAC,CAAC;UAAEC,KAAK;UAAEJ,IAAI,EAAE,IAAI,CAACO,IAAI;UAAEF,MAAM,EAAE,IAAI,CAACA;QAAO,CAAC,CAAC;MAChF;MACA,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,YAAY,IAAI,CAACF,IAAI,CAACG,IAAI,IAAIP,SAAS,EAAE,EAAE;QAAEC,KAAK;QAAEJ,IAAI,EAAE,IAAI,CAACO,IAAI;QAAEF,MAAM,EAAE,IAAI,CAACA;MAAO,CAAC,CAAC;IAC7G;EACF,CAAC;EACDM,QAAQ,EAAE;IACR;;;;;IAKAC,IAAIA,CAAA,EAAG;MACL,IAAI,OAAO,IAAI,CAACP,MAAM,CAACO,IAAG,KAAM,WAAU,IAAK,IAAI,CAACP,MAAM,CAACO,IAAG,KAAM,IAAI,EAAE;QACxE,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IAED;;;;;IAKAC,KAAKA,CAAA,EAAG;MACN,IAAI,OAAO,IAAI,CAACR,MAAM,CAACQ,KAAI,KAAM,UAAU,EAAE;QAC3C,OAAO,IAAI,CAACR,MAAM,CAACQ,KAAK,CAAC,IAAI,CAACN,IAAI,CAAC;MACrC;MACA,OAAO,IAAI,CAACA,IAAI,CAAC,IAAI,CAACF,MAAM,CAACQ,KAAK,CAAC;IACrC,CAAC;IAEDC,eAAeA,CAAA,EAAG;MAChB,OAAO;QACL,GAAG,IAAI,CAACN,IAAI,CAACO,KAAK,CAAC,uBAAuB,CAAC;QAC3C,GAAG,IAAI,CAACV,MAAM,CAACU,KAAK,CAAC,uBAAuB,CAAC;QAC7CC,KAAK,EAAE,IAAI,CAACX,MAAM,CAACY,UAAS,GAAI,IAAI;QACpCC,MAAM,EAAE,IAAI,CAACb,MAAM,CAACa,MAAK,GAAI;MAC/B,CAAC;IACH,CAAC;IAEDC,YAAYA,CAAA,EAAG;MACb,OAAO;QACL,GAAG,IAAI,CAACX,IAAI,CAACO,KAAK,CAAC,8BAA8B,CAAC;QAClD,GAAG,IAAI,CAACV,MAAM,CAACU,KAAK,CAAC,8BAA8B;MACrD,CAAC;IACH,CAAC;IAEDK,cAAcA,CAAA,EAAG;MACf,OAAO;QACL,GAAG,IAAI,CAACZ,IAAI,CAACO,KAAK,CAAC,gCAAgC,CAAC;QACpD,GAAG,IAAI,CAACV,MAAM,CAACU,KAAK,CAAC,gCAAgC;MACvD,CAAC;IACH,CAAC;IAEDM,UAAUA,CAAA,EAAG;MACX,OAAO;QAAE,GAAG,IAAI,CAACb,IAAI,CAACO,KAAK,CAAC,sBAAsB,CAAC;QAAE,GAAG,IAAI,CAACV,MAAM,CAACU,KAAK,CAAC,sBAAsB;MAAE,CAAC;IACrG;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}