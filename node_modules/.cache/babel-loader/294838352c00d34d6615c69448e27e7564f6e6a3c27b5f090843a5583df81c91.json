{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\nimport { removeClassWithAttr } from '../../common/util';\nimport * as EVENTS from '../../common/constant';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar TableCommand = /** @class */function () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {EditorManager} parent - specifies the parent element\n   * @hidden\n    */\n  function TableCommand(parent) {\n    this.parent = parent;\n    this.addEventListener();\n  }\n  TableCommand.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n    this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n    this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n    this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n    this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n    this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n    this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n    this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n    this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n    this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n    this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n  };\n  TableCommand.prototype.removeEventListener = function () {\n    this.parent.observer.off(CONSTANT.TABLE, this.createTable);\n    this.parent.observer.off(CONSTANT.INSERT_ROW, this.insertRow);\n    this.parent.observer.off(CONSTANT.INSERT_COLUMN, this.insertColumn);\n    this.parent.observer.off(CONSTANT.DELETEROW, this.deleteRow);\n    this.parent.observer.off(CONSTANT.DELETECOLUMN, this.deleteColumn);\n    this.parent.observer.off(CONSTANT.REMOVETABLE, this.removeTable);\n    this.parent.observer.off(CONSTANT.TABLEHEADER, this.tableHeader);\n    this.parent.observer.off(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign);\n    this.parent.observer.off(CONSTANT.TABLE_MERGE, this.cellMerge);\n    this.parent.observer.off(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit);\n    this.parent.observer.off(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit);\n    this.parent.observer.off(CONSTANT.TABLE_MOVE, this.tableMove);\n    this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n  };\n  TableCommand.prototype.createTable = function (e) {\n    var table = createElement('table', {\n      className: 'e-rte-table'\n    });\n    var tblBody = createElement('tbody');\n    if (!isNOU(e.item.width.width)) {\n      table.style.width = this.calculateStyleValue(e.item.width.width);\n    }\n    if (!isNOU(e.item.width.minWidth)) {\n      table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n    }\n    if (!isNOU(e.item.width.maxWidth)) {\n      table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n    }\n    var tdWid = parseInt(e.item.width.width, 10) > 100 ? 100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n    for (var i = 0; i < e.item.rows; i++) {\n      var row = createElement('tr');\n      for (var j = 0; j < e.item.columns; j++) {\n        var cell = createElement('td');\n        cell.appendChild(createElement('br'));\n        cell.style.width = tdWid + '%';\n        row.appendChild(cell);\n      }\n      tblBody.appendChild(row);\n    }\n    table.appendChild(tblBody);\n    e.item.selection.restore();\n    InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n    e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n    if (table.nextElementSibling === null && !table.classList.contains('ignore-table')) {\n      var insertElem = void 0;\n      if (e.enterAction === 'DIV') {\n        insertElem = createElement('div');\n        insertElem.appendChild(createElement('br'));\n      } else if (e.enterAction === 'BR') {\n        insertElem = createElement('br');\n      } else {\n        insertElem = createElement('p');\n        insertElem.appendChild(createElement('br'));\n      }\n      this.insertAfter(insertElem, table);\n    }\n    if (table.classList.contains('ignore-table')) {\n      removeClassWithAttr([table], ['ignore-table']);\n    }\n    table.querySelector('td').classList.add('e-cell-select');\n    if (e.callBack) {\n      e.callBack({\n        requestType: 'Table',\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: [table]\n      });\n    }\n    return table;\n  };\n  TableCommand.prototype.calculateStyleValue = function (value) {\n    var styleValue;\n    if (typeof value === 'string') {\n      if (value.indexOf('px') >= 0 || value.indexOf('%') >= 0 || value.indexOf('auto') >= 0) {\n        styleValue = value;\n      } else {\n        styleValue = value + 'px';\n      }\n    } else {\n      styleValue = value + 'px';\n    }\n    return styleValue;\n  };\n  TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n    referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n  };\n  TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var a = 0;\n    var minI = e.length;\n    var maxI = 0;\n    var minJ = e[0].length;\n    var maxJ = 0;\n    //eslint-disable-next-line\n    for (var i = 0; a < selectedCells.length; a++) {\n      var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n      var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e);\n      //eslint-disable-next-line\n      minI = Math.min(selectedCellIndex[0], minI), maxI = Math.max(minMaxIndex[0], maxI), minJ = Math.min(selectedCellIndex[1], minJ), maxJ = Math.max(minMaxIndex[1], maxJ);\n    }\n    return {\n      startRow: minI,\n      endRow: maxI,\n      startColumn: minJ,\n      endColumn: maxJ\n    };\n  };\n  TableCommand.prototype.insertRow = function (e) {\n    var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n    var selectedCell = e.item.selection.range.startContainer;\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n      return;\n    }\n    this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n      var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n      var cloneRow = lastRow.cloneNode(true);\n      cloneRow.removeAttribute('rowspan');\n      this.insertAfter(cloneRow, lastRow);\n    } else {\n      var allCells = this.getCorrespondingColumns();\n      var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n      var newRow = createElement('tr');\n      var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n      for (var i = 0; i < allCells[minVal].length; i++) {\n        // eslint-disable-next-line max-len\n        if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] || !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n          if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n            allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n          }\n        } else {\n          var tdElement = createElement('td');\n          tdElement.appendChild(createElement('br'));\n          newRow.appendChild(tdElement);\n          tdElement.setAttribute('style', allCells[isHeaderSelect && isBelow ? allCells[minVal + 1] ? minVal + 1 : minVal : minVal][i].getAttribute('style'));\n        }\n      }\n      // eslint-disable-next-line\n      var selectedRow = void 0;\n      if (isHeaderSelect && isBelow) {\n        selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n      } else {\n        selectedRow = this.curTable.rows[minVal];\n      }\n      // eslint-disable-next-line\n      e.item.subCommand === 'InsertRowBefore' ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) : this.insertAfter(newRow, selectedRow);\n    }\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.insertColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var curRow = closest(selectedCell, 'tr');\n    var curCell;\n    var allRows = closest(curRow, 'table').rows;\n    var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n    var previousWidth = parseInt(e.item.width, 10) / curRow.querySelectorAll(':scope > td, :scope > th').length;\n    var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n    var currentTabElm = closest(curRow, 'table');\n    var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].dataset.oldWidth = thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100 + '%';\n    }\n    if (isNOU(currentTabElm.style.width) || currentTabElm.style.width === '') {\n      currentTabElm.style.width = currentTabElm.offsetWidth + 'px';\n    }\n    for (var i = 0; i < allRows.length; i++) {\n      curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n      var colTemplate = curCell.cloneNode(true);\n      colTemplate.innerHTML = '';\n      colTemplate.appendChild(createElement('br'));\n      colTemplate.removeAttribute('class');\n      colTemplate.removeAttribute('colspan');\n      colTemplate.removeAttribute('rowspan');\n      // eslint-disable-next-line\n      e.item.subCommand === 'InsertColumnLeft' ? curCell.parentElement.insertBefore(colTemplate, curCell) : this.insertAfter(colTemplate, curCell);\n      colTemplate.style.width = currentWidth.toFixed(4) + '%';\n      delete colTemplate.dataset.oldWidth;\n    }\n    for (var i = 0; i < thTdElm.length; i++) {\n      thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n      delete thTdElm[i].dataset.oldWidth;\n    }\n    e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.deleteColumn = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n    var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n    this.curTable = closest(selectedCell, 'table');\n    var curRow = closest(selectedCell, 'tr');\n    if (curRow.querySelectorAll('th,td').length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      var deleteIndex = void 0;\n      var allCells = this.getCorrespondingColumns();\n      //eslint-disable-next-line\n      var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n      var minCol = selectedMinMaxIndex.startColumn;\n      var maxCol = selectedMinMaxIndex.endColumn;\n      for (var i = 0; i < allCells.length; i++) {\n        var currentRow = allCells[i];\n        for (var j = 0; j < currentRow.length; j++) {\n          var currentCell = currentRow[j];\n          //eslint-disable-next-line\n          var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n          var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n          if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n            if (colSpanVal > 1) {\n              currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n            } else {\n              detach(currentCell);\n              deleteIndex = j;\n              if (Browser.isIE) {\n                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n              }\n            }\n          }\n        }\n      }\n      if (deleteIndex > -1) {\n        var rowHeadEle = tBodyHeadEle.children[rowIndex];\n        var nextFocusCell = rowHeadEle && rowHeadEle.children[deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1];\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        }\n      }\n    }\n    if (e.callBack) {\n      var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n      if (sContainer.nodeName !== 'TD') {\n        var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n        var focusNode = sContainer.children[startChildLength];\n        if (focusNode) {\n          this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n        }\n      }\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.deleteRow = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    if (selectedCell.nodeType === 3) {\n      selectedCell = closest(selectedCell.parentElement, 'td,th');\n    }\n    var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n    this.curTable = closest(selectedCell, 'table');\n    var currentRow;\n    var allCells = this.getCorrespondingColumns();\n    var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n    var maxI;\n    var j;\n    if (this.curTable.rows.length === 1) {\n      e.item.selection.restore();\n      detach(closest(selectedCell.parentElement, 'table'));\n    } else {\n      for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n        currentRow = this.curTable.rows[maxI];\n        for (j = 0; j < allCells[maxI].length; j++) {\n          if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n            if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n              var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1;\n              if (1 === rowSpanVal) {\n                allCells[maxI][j].removeAttribute('rowspan');\n                var cell = this.getMergedRow(this.getCorrespondingColumns())[j];\n                if (cell) {\n                  var cloneNode = cell.cloneNode(true);\n                  cloneNode.innerHTML = '<br>';\n                  if (cell.parentElement) {\n                    cell.parentElement.insertBefore(cloneNode, cell);\n                  }\n                }\n              } else {\n                allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n              }\n              /* eslint-enable */\n            }\n          }\n          // eslint-disable-next-line max-len\n          if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI || allCells[maxI][j] !== allCells[maxI - 1][j])) {\n            var element = allCells[maxI][j];\n            var index = void 0;\n            // eslint-disable-next-line max-len\n            for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n              if (index === 0) {\n                this.curTable.rows[maxI + 1].prepend(element);\n              } else {\n                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n              }\n            }\n          }\n        }\n        var deleteIndex = currentRow.rowIndex;\n        this.curTable.deleteRow(deleteIndex);\n        var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex] : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n        var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n        if (nextFocusCell) {\n          e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n          nextFocusCell.classList.add('e-cell-select');\n        } else {\n          e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n          this.curTable.querySelector('td, th').classList.add('e-cell-select');\n        }\n      }\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.getMergedRow = function (cells) {\n    var mergedRow;\n    for (var i = 0; i < cells.length; i++) {\n      if (cells[i].length !== this.curTable.rows[0].childNodes.length) {\n        mergedRow = cells[i];\n      }\n    }\n    return mergedRow;\n  };\n  TableCommand.prototype.removeTable = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var selectedTable = closest(selectedCell.parentElement, 'table');\n    if (selectedTable) {\n      e.item.selection.restore();\n      detach(selectedTable);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.tableHeader = function (e) {\n    var headerExit = false;\n    var selectedCell = e.item.selection.range.startContainer;\n    selectedCell = selectedCell.nodeType === 3 ? selectedCell.parentNode : selectedCell;\n    var table = closest(selectedCell.parentElement, 'table');\n    [].slice.call(table.childNodes).forEach(function (el) {\n      if (el.nodeName === 'THEAD') {\n        headerExit = true;\n      }\n    });\n    if (table && !headerExit) {\n      var cellCount = table.querySelector('tr').childElementCount;\n      var colSpanCount = 0;\n      for (var i = 0; i < cellCount; i++) {\n        colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n      }\n      var header = table.createTHead();\n      var row = header.insertRow(0);\n      for (var j = 0; j < colSpanCount; j++) {\n        var th = createElement('th');\n        th.appendChild(createElement('br'));\n        row.appendChild(th);\n      }\n    } else {\n      table.deleteTHead();\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.tableVerticalAlign = function (e) {\n    var value = '';\n    switch (e.item.subCommand) {\n      case 'AlignTop':\n        value = 'top';\n        break;\n      case 'AlignMiddle':\n        value = 'middle';\n        break;\n      case 'AlignBottom':\n        value = 'bottom';\n        break;\n    }\n    e.item.tableCell.style.verticalAlign = value;\n    if (value && value !== '' && e.item.tableCell.getAttribute('valign')) {\n      e.item.tableCell.removeAttribute('valign');\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.cellMerge = function (e) {\n    if (isNOU(this.curTable)) {\n      this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n    }\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    if (selectedCells.length < 2) {\n      return;\n    }\n    this.mergeCellContent();\n    var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n    var firstCell = selectedCells[0];\n    var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n    var maxHeight = 0;\n    for (var j = 0; j < rowSelectedCells.length; j++) {\n      var cellHeight = rowSelectedCells[j].offsetHeight;\n      if (cellHeight > maxHeight) {\n        maxHeight = cellHeight;\n      }\n    }\n    if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n      firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n    }\n    if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n      firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n    }\n    var totalWidth = 0;\n    var unit;\n    for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n      if (!isNOU(rowSelectedCells[j].style.width) && rowSelectedCells[j].style.width !== '') {\n        if (!unit) {\n          var match = rowSelectedCells[j].style.width.match(/^([\\d.]+)([a-z%]+)$/i);\n          unit = match ? match[2] : '%';\n        }\n        totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n      } else {\n        totalWidth = totalWidth + rowSelectedCells[j].offsetWidth / this.curTable.offsetWidth * 100;\n        unit = '%';\n      }\n    }\n    firstCell.style.width = totalWidth + unit;\n    firstCell.style.height = maxHeight + 'px';\n    for (var i = 1; i <= selectedCells.length - 1; i++) {\n      detach(selectedCells[i]);\n    }\n    for (var i = 0; i < this.curTable.rows.length; i++) {\n      if (this.curTable.rows[i].innerHTML.trim() === '') {\n        detach(this.curTable.rows[i]);\n      }\n    }\n    removeClassWithAttr(this.curTable.querySelectorAll('table td, table th'), 'e-multi-cells-select');\n    removeClassWithAttr(this.curTable.querySelectorAll('table td, table th'), 'e-cell-select-end');\n    this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n    this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n    e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n    if (this.parent.nodeSelection && firstCell) {\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument,\n      // eslint-disable-next-line\n      firstCell, 0);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n    var colValue;\n    var colIndex;\n    var colMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = elements;\n    //eslint-disable-next-line\n    if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n      for (colIndex = min; colIndex <= max; colIndex++) {\n        index = Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1);\n        if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < index && eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n          for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n            if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n              for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1;\n                if (1 < attrValue && eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                  colMin += count = Math.min(count, attrValue - 1);\n                } else {\n                  count = Math.max(0, count - 1);\n                  if (count === 0) {\n                    break;\n                  }\n                }\n                /* eslint-enable */\n              }\n            }\n            if (!count) {\n              break;\n            }\n          }\n        }\n      }\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n      }\n    }\n  };\n  TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n    var rowValue;\n    var colIndex;\n    var rowMin;\n    var index = 0;\n    var attrValue;\n    var count = 0;\n    var eleArray = ele;\n    // eslint-disable-next-line\n    if (min < (max = Math.min(max, eleArray.length - 1))) {\n      for (rowValue = min; rowValue <= max; rowValue++) {\n        if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0])\n        // eslint-disable-next-line no-cond-assign\n        && eleArray[rowValue][0] && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) || 1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n          for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n            if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n              for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1;\n                if (1 < attrValue && eleArray[rowMin][colIndex] === eleArray[rowMin + 1][colIndex]) {\n                  rowMin += count = Math.min(count, attrValue - 1);\n                }\n                // eslint-disable-next-line\n                else if (!(count = Math.max(0, count - 1))) {\n                  break;\n                }\n              }\n              if (!count) {\n                break;\n              }\n            }\n          }\n        }\n      }\n      if (count) {\n        this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n      }\n    }\n  };\n  TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n    var rowIndex;\n    var colIndex;\n    var spanCount;\n    for (rowIndex = min; rowIndex <= max; rowIndex++) {\n      for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n        spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1;\n        if (min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] || firstIndex < colIndex && elements[rowIndex][colIndex] === elements[rowIndex][colIndex - 1] || 1 < spanCount) {\n          if (1 < spanCount - index) {\n            elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString());\n          } else {\n            elements[rowIndex][colIndex].removeAttribute(attr);\n          }\n        }\n      }\n    }\n  };\n  TableCommand.prototype.mergeCellContent = function () {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    var innerHtml = selectedCells[0].innerHTML === '<br>' ? '' : selectedCells[0].innerHTML;\n    for (var i = 1; i < selectedCells.length; i++) {\n      if ('<br>' !== selectedCells[i].innerHTML) {\n        innerHtml = innerHtml ? innerHtml + '<br>' + selectedCells[i].innerHTML : innerHtml + selectedCells[i].innerHTML;\n      }\n    }\n    selectedCells[0].innerHTML = innerHtml;\n  };\n  TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n    var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n    if (0 < selectedCells.length) {\n      var minRow = correspondingCells.length;\n      var maxRow = 0;\n      var minCol = correspondingCells[0].length;\n      var maxCol = 0;\n      for (var i = 0; i < selectedCells.length; i++) {\n        var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n        var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n        minRow = Math.min(currentRowCol[0], minRow);\n        maxRow = Math.max(targetRowCol[0], maxRow);\n        minCol = Math.min(currentRowCol[1], minCol);\n        maxCol = Math.max(targetRowCol[1], maxCol);\n      }\n      return {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      };\n    }\n    return null;\n  };\n  TableCommand.prototype.HorizontalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n    if (activeCellRowSpan > 1) {\n      var avgCount = Math.ceil(activeCellRowSpan / 2);\n      // eslint-disable-next-line\n      1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) : this.activeCell.removeAttribute('rowspan');\n      // eslint-disable-next-line\n      1 < activeCellRowSpan - avgCount ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n      var avgRowIndex = void 0;\n      var colIndex = void 0;\n      for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2), colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1] : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] ===\n      // eslint-disable-next-line max-len\n      correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex] === correspondingCells[avgRowIndex - 1][colIndex]);) {\n        colIndex--;\n      }\n      if (colIndex === -1) {\n        if (this.curTable.rows[avgRowIndex].firstChild) {\n          this.curTable.rows[avgRowIndex].prepend(newCell);\n        } else {\n          this.curTable.appendChild(newCell);\n        }\n      } else {\n        correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n      }\n    } else {\n      var newTrEle = createElement('tr');\n      newTrEle.appendChild(newCell);\n      var selectedRow = correspondingCells[activeCellIndex[0]];\n      for (var j = 0; j <= selectedRow.length - 1; j++) {\n        if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n          selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ? parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n        }\n      }\n      this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n    }\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.VerticalSplit = function (e) {\n    var selectedCell = e.item.selection.range.startContainer;\n    this.curTable = closest(selectedCell.parentElement, 'table');\n    if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n      return;\n    }\n    this.activeCell = this.curTable.querySelector('.e-cell-select');\n    var allRows = this.curTable.rows;\n    var newCell = this.activeCell.cloneNode(true);\n    newCell.removeAttribute('class');\n    newCell.innerHTML = '</br>';\n    var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n    var correspondingColumns = this.getCorrespondingColumns();\n    var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10) || 1;\n    if (activeCellcolSpan > 1) {\n      var colSpan = Math.ceil(activeCellcolSpan / 2);\n      var getColSizes = this.getColSizes(this.curTable);\n      var activeCellUpdatedWidth = this.getSplitColWidth(activeCellIndex[1], activeCellIndex[1] + colSpan - 1, getColSizes);\n      var newCellWidth = this.getSplitColWidth(activeCellIndex[1] + colSpan, activeCellIndex[1] + activeCellcolSpan - 1, getColSizes);\n      var activeCellWidth = this.convertPixelToPercentage(this.activeCell.offsetWidth, this.curTable.offsetWidth);\n      newCellWidth = activeCellWidth - activeCellUpdatedWidth < newCellWidth ? activeCellWidth - activeCellUpdatedWidth : newCellWidth;\n      if (1 < colSpan) {\n        this.activeCell.setAttribute('colspan', colSpan.toString());\n      } else {\n        this.activeCell.removeAttribute('colspan');\n      }\n      if (1 < activeCellcolSpan - colSpan) {\n        newCell.setAttribute('colspan', (activeCellcolSpan - colSpan).toString());\n      } else {\n        newCell.removeAttribute('colspan');\n      }\n      this.activeCell.style.width = activeCellUpdatedWidth + '%';\n      newCell.style.width = newCellWidth + '%';\n    } else {\n      var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n      for (var i = 0; i <= allRows.length - 1; i++) {\n        if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n          var currentCell = correspondingColumns[i][activeCellIndex[1]];\n          if (currentCell !== this.activeCell) {\n            currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ? parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n          }\n        }\n      }\n      this.activeCell.style.width = avgWidth + '%';\n      newCell.style.width = avgWidth + '%';\n    }\n    this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n    if (e.callBack) {\n      e.callBack({\n        requestType: e.item.subCommand,\n        editorMode: 'HTML',\n        event: e.event,\n        range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n        elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n      });\n    }\n  };\n  TableCommand.prototype.getSplitColWidth = function (startIndex, endInex, sizes) {\n    var width = 0;\n    for (var i = startIndex; i <= endInex; i++) {\n      width += sizes[i];\n    }\n    return this.convertPixelToPercentage(width, this.curTable.offsetWidth);\n  };\n  TableCommand.prototype.getColSizes = function (curTable) {\n    var cellColl = curTable.rows[0].cells;\n    var cellCount = 0;\n    for (var cell = 0; cell < cellColl.length; cell++) {\n      cellCount = cellCount + cellColl[cell].colSpan;\n    }\n    var sizes = new Array(cellCount);\n    var rowSpanCells = new Map();\n    for (var i = 0; i < curTable.rows.length; i++) {\n      var currentColIndex = 0;\n      for (var k = 0; k < curTable.rows[i].cells.length; k++) {\n        for (var l = 1; l < curTable.rows[i].cells[k].rowSpan; l++) {\n          var key = \"\" + (i + l) + currentColIndex;\n          rowSpanCells.set(key, curTable.rows[i].cells[k]);\n        }\n        var cellIndex = this.getCellIndex(rowSpanCells, i, k);\n        if (cellIndex > currentColIndex) {\n          currentColIndex = cellIndex;\n        }\n        var width = curTable.rows[i].cells[k].offsetWidth;\n        if (!sizes[currentColIndex] || width < sizes[currentColIndex]) {\n          sizes[currentColIndex] = width;\n        }\n        currentColIndex += 1 + curTable.rows[i].cells[k].colSpan - 1;\n      }\n    }\n    return sizes;\n  };\n  TableCommand.prototype.getCellIndex = function (rowSpanCells, rowIndex, colIndex) {\n    var cellKey = \"\" + rowIndex + colIndex;\n    var spannedCell = rowSpanCells.get(cellKey);\n    if (spannedCell) {\n      return this.getCellIndex(rowSpanCells, rowIndex, colIndex + spannedCell.colSpan);\n    } else {\n      return colIndex;\n    }\n  };\n  TableCommand.prototype.convertPixelToPercentage = function (value, offsetValue) {\n    return value / offsetValue * 100;\n  };\n  TableCommand.prototype.getCorrespondingColumns = function () {\n    var elementArray = [];\n    // eslint-disable-next-line\n    var _this = this;\n    var colspan = 0;\n    var allRows = _this.curTable.rows;\n    for (var i = 0; i <= allRows.length - 1; i++) {\n      var ele = allRows[i];\n      var index = 0;\n      for (var j = 0; j <= ele.children.length - 1; j++) {\n        var colEle = ele.children[j];\n        for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n          for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n            if (!elementArray[rowIndex]) {\n              elementArray[rowIndex] = [];\n            }\n            if (elementArray[rowIndex][colIndex]) {\n              index++;\n            } else {\n              elementArray[rowIndex][colIndex] = colEle;\n            }\n          }\n        }\n        index += colspan;\n      }\n      /* eslint-enable */\n    }\n    return elementArray;\n  };\n  // eslint-disable-next-line\n  TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n    var nextIndex;\n    var nextCol;\n    for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n      if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n        nextIndex--;\n        break;\n      }\n      nextIndex++;\n    }\n    for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n      if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n        nextCol--;\n        break;\n      }\n      nextCol++;\n    }\n    return nextCol === cells[rowIndex].length && nextCol--, [nextIndex, nextCol];\n  };\n  TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n    //let value: RowCol = new RowCol();\n    for (var i = 0; i < allCells.length; i++) {\n      for (var j = 0; j < allCells[i].length; j++) {\n        if (allCells[i][j] === cell) {\n          return [i, j];\n        }\n      }\n    }\n    return [];\n  };\n  TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n    var j;\n    var k;\n    var startCell;\n    var endCell;\n    var minRowIndex = minRow;\n    var maxRowIndex = maxRow;\n    var minColIndex = minCol;\n    var maxColIndex = maxCol;\n    var minMaxValues = new MinMax();\n    for (j = minRowIndex; j <= maxRowIndex; j++) {\n      startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray);\n      endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n      if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) && endCell) {\n        minRowIndex = Math.min(startCell[0], minRowIndex);\n        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n        minColIndex = Math.min(startCell[1], minColIndex);\n        maxColIndex = Math.max(endCell[1], maxColIndex);\n      } else if (1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1)) {\n        startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray);\n        endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n        if (endCell) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        }\n      }\n      for (k = minColIndex; k <= maxColIndex; k++) {\n        startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray);\n        endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n        if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) && endCell) {\n          minRowIndex = Math.min(startCell[0], minRowIndex);\n          maxRowIndex = Math.max(endCell[0], maxRowIndex);\n          minColIndex = Math.min(startCell[1], minColIndex);\n          maxColIndex = Math.max(endCell[1], maxColIndex);\n        } else if (1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) || 1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1)) {\n          startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray);\n          endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n          if (endCell) {\n            minRowIndex = Math.min(startCell[0], minRowIndex);\n            maxRowIndex = Math.max(endCell[0], maxRowIndex);\n            minColIndex = Math.min(startCell[1], minColIndex);\n            maxColIndex = Math.max(endCell[1], maxColIndex);\n          }\n        }\n      }\n      minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n        startRow: minRow,\n        endRow: maxRow,\n        startColumn: minCol,\n        endColumn: maxCol\n      } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n    }\n    return minMaxValues;\n    /* eslint-enable */\n  };\n  TableCommand.prototype.restoreRange = function (target) {\n    if (this.parent.currentDocument.getSelection().rangeCount && (target.nodeName === 'TD' || target.nodeName === 'TH')) {\n      this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, target, 0);\n    }\n  };\n  TableCommand.prototype.tableMove = function (e) {\n    this.activeCell = e.selectNode[0];\n    var target = e.event.target;\n    var activeCellTag = this.activeCell.tagName;\n    var targetCellTag = target.tagName;\n    this.curTable = closest(target, 'table');\n    if (target.tagName !== 'TD' && target.tagName !== 'TH' && activeCellTag !== targetCellTag) {\n      return;\n    }\n    var activeCellTable = closest(this.activeCell, 'table');\n    if (isNOU(this.curTable) || isNOU(activeCellTable) || activeCellTable !== this.curTable) {\n      return;\n    }\n    var correspondingCells = this.getCorrespondingColumns();\n    var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n    var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n    var activeCellList = this.curTable.querySelectorAll('.e-cell-select, .e-multi-cells-select, .e-cell-select-end');\n    for (var i = activeCellList.length - 1; i >= 0; i--) {\n      if (this.activeCell !== activeCellList[i]) {\n        removeClassWithAttr([activeCellList[i]], ['e-cell-select']);\n      }\n      removeClassWithAttr([activeCellList[i]], ['e-multi-cells-select']);\n      removeClassWithAttr([activeCellList[i]], ['e-cell-select-end']);\n    }\n    if (activeIndexes[0] === targetIndexes[0] && activeIndexes[1] === targetIndexes[1]) {\n      if (activeCellList.length > 1) {\n        this.restoreRange(target);\n      }\n      return;\n    }\n    var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0], targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n    for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n      for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n        correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n        correspondingCells[rowIndex][colIndex].classList.add('e-multi-cells-select');\n      }\n    }\n    target.classList.add('e-cell-select-end');\n    if (e.event.type) {\n      e.event.preventDefault();\n    }\n    this.restoreRange(target);\n  };\n  TableCommand.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return TableCommand;\n}();\nexport { TableCommand };\nvar MinMax = /** @class */function () {\n  function MinMax() {}\n  return MinMax;\n}();","map":{"version":3,"names":["createElement","closest","detach","Browser","isNullOrUndefined","isNOU","CONSTANT","InsertHtml","removeClassWithAttr","EVENTS","TableCommand","parent","addEventListener","prototype","observer","on","TABLE","createTable","INSERT_ROW","insertRow","INSERT_COLUMN","insertColumn","DELETEROW","deleteRow","DELETECOLUMN","deleteColumn","REMOVETABLE","removeTable","TABLEHEADER","tableHeader","TABLE_VERTICAL_ALIGN","tableVerticalAlign","TABLE_MERGE","cellMerge","TABLE_HORIZONTAL_SPLIT","HorizontalSplit","TABLE_VERTICAL_SPLIT","VerticalSplit","TABLE_MOVE","tableMove","INTERNAL_DESTROY","destroy","removeEventListener","off","e","table","className","tblBody","item","width","style","calculateStyleValue","minWidth","maxWidth","tdWid","parseInt","columns","i","rows","row","j","cell","appendChild","selection","restore","Insert","currentDocument","editableElement","setSelectionText","querySelector","nextElementSibling","classList","contains","insertElem","enterAction","insertAfter","add","callBack","requestType","editorMode","event","range","nodeSelection","getRange","elements","value","styleValue","indexOf","newNode","referenceNode","parentNode","insertBefore","nextSibling","getSelectedCellMinMaxIndex","selectedCells","curTable","querySelectorAll","a","minI","length","maxI","minJ","maxJ","selectedCellIndex","getCorrespondingIndex","minMaxIndex","FindIndex","Math","min","max","startRow","endRow","startColumn","endColumn","isBelow","subCommand","selectedCell","startContainer","nodeName","parentElement","toLowerCase","lastRow","cloneRow","cloneNode","removeAttribute","allCells","getCorrespondingColumns","minVal","newRow","isHeaderSelect","setAttribute","getAttribute","toString","tdElement","selectedRow","childNodes","getSelectedNodes","curRow","curCell","allRows","colIndex","Array","slice","call","previousWidth","currentWidth","currentTabElm","thTdElm","dataset","oldWidth","offsetWidth","colTemplate","innerHTML","toFixed","Number","split","nodeType","tBodyHeadEle","tagName","rowIndex","deleteIndex","selectedMinMaxIndex","minCol","maxCol","currentRow","currentCell","currentCellIndex","colSpanVal","isIE","rowHeadEle","children","nextFocusCell","sContainer","startChildLength","startOffset","focusNode","setCursorPoint","rowSpanVal","getMergedRow","element","index","prepend","insertAdjacentElement","focusTrEle","cells","mergedRow","selectedTable","headerExit","forEach","el","cellCount","childElementCount","colSpanCount","header","createTHead","th","deleteTHead","tableCell","verticalAlign","mergeCellContent","minMaxIndexes","getSelectedMinMaxIndexes","firstCell","rowSelectedCells","maxHeight","cellHeight","offsetHeight","totalWidth","unit","match","parseFloat","height","trim","updateRowSpanStyle","updateColSpanStyle","colValue","colMin","attrValue","count","eleArray","updateCellAttribute","ele","rowValue","rowMin","attr","firstIndex","spanCount","innerHtml","correspondingCells","minRow","maxRow","currentRowCol","targetRowCol","activeCell","newCell","activeCellIndex","activeCellRowSpan","avgCount","ceil","avgRowIndex","firstChild","newTrEle","correspondingColumns","activeCellcolSpan","colSpan","getColSizes","activeCellUpdatedWidth","getSplitColWidth","newCellWidth","activeCellWidth","convertPixelToPercentage","avgWidth","startIndex","endInex","sizes","cellColl","rowSpanCells","Map","currentColIndex","k","l","rowSpan","key","set","cellIndex","getCellIndex","cellKey","spannedCell","get","offsetValue","elementArray","_this","colspan","colEle","ele_1","colspan_1","columnIndex","nextIndex","nextCol","highlightCells","startCell","endCell","minRowIndex","maxRowIndex","minColIndex","maxColIndex","minMaxValues","MinMax","restoreRange","target","getSelection","rangeCount","selectNode","activeCellTag","targetCellTag","activeCellTable","activeIndexes","targetIndexes","activeCellList","type","preventDefault"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/table.js"],"sourcesContent":["import { createElement, closest, detach, Browser, isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './../base/constant';\nimport { InsertHtml } from './inserthtml';\nimport { removeClassWithAttr } from '../../common/util';\nimport * as EVENTS from '../../common/constant';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar TableCommand = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {EditorManager} parent - specifies the parent element\n     * @hidden\n\n     */\n    function TableCommand(parent) {\n        this.parent = parent;\n        this.addEventListener();\n    }\n    TableCommand.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.TABLE, this.createTable, this);\n        this.parent.observer.on(CONSTANT.INSERT_ROW, this.insertRow, this);\n        this.parent.observer.on(CONSTANT.INSERT_COLUMN, this.insertColumn, this);\n        this.parent.observer.on(CONSTANT.DELETEROW, this.deleteRow, this);\n        this.parent.observer.on(CONSTANT.DELETECOLUMN, this.deleteColumn, this);\n        this.parent.observer.on(CONSTANT.REMOVETABLE, this.removeTable, this);\n        this.parent.observer.on(CONSTANT.TABLEHEADER, this.tableHeader, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign, this);\n        this.parent.observer.on(CONSTANT.TABLE_MERGE, this.cellMerge, this);\n        this.parent.observer.on(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit, this);\n        this.parent.observer.on(CONSTANT.TABLE_MOVE, this.tableMove, this);\n        this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n    };\n    TableCommand.prototype.removeEventListener = function () {\n        this.parent.observer.off(CONSTANT.TABLE, this.createTable);\n        this.parent.observer.off(CONSTANT.INSERT_ROW, this.insertRow);\n        this.parent.observer.off(CONSTANT.INSERT_COLUMN, this.insertColumn);\n        this.parent.observer.off(CONSTANT.DELETEROW, this.deleteRow);\n        this.parent.observer.off(CONSTANT.DELETECOLUMN, this.deleteColumn);\n        this.parent.observer.off(CONSTANT.REMOVETABLE, this.removeTable);\n        this.parent.observer.off(CONSTANT.TABLEHEADER, this.tableHeader);\n        this.parent.observer.off(CONSTANT.TABLE_VERTICAL_ALIGN, this.tableVerticalAlign);\n        this.parent.observer.off(CONSTANT.TABLE_MERGE, this.cellMerge);\n        this.parent.observer.off(CONSTANT.TABLE_HORIZONTAL_SPLIT, this.HorizontalSplit);\n        this.parent.observer.off(CONSTANT.TABLE_VERTICAL_SPLIT, this.VerticalSplit);\n        this.parent.observer.off(CONSTANT.TABLE_MOVE, this.tableMove);\n        this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n    };\n    TableCommand.prototype.createTable = function (e) {\n        var table = createElement('table', { className: 'e-rte-table' });\n        var tblBody = createElement('tbody');\n        if (!isNOU(e.item.width.width)) {\n            table.style.width = this.calculateStyleValue(e.item.width.width);\n        }\n        if (!isNOU(e.item.width.minWidth)) {\n            table.style.minWidth = this.calculateStyleValue(e.item.width.minWidth);\n        }\n        if (!isNOU(e.item.width.maxWidth)) {\n            table.style.maxWidth = this.calculateStyleValue(e.item.width.maxWidth);\n        }\n        var tdWid = parseInt(e.item.width.width, 10) > 100 ?\n            100 / e.item.columns : parseInt(e.item.width.width, 10) / e.item.columns;\n        for (var i = 0; i < e.item.rows; i++) {\n            var row = createElement('tr');\n            for (var j = 0; j < e.item.columns; j++) {\n                var cell = createElement('td');\n                cell.appendChild(createElement('br'));\n                cell.style.width = tdWid + '%';\n                row.appendChild(cell);\n            }\n            tblBody.appendChild(row);\n        }\n        table.appendChild(tblBody);\n        e.item.selection.restore();\n        InsertHtml.Insert(this.parent.currentDocument, table, this.parent.editableElement);\n        e.item.selection.setSelectionText(this.parent.currentDocument, table.querySelector('td'), table.querySelector('td'), 0, 0);\n        if (table.nextElementSibling === null && !table.classList.contains('ignore-table')) {\n            var insertElem = void 0;\n            if (e.enterAction === 'DIV') {\n                insertElem = createElement('div');\n                insertElem.appendChild(createElement('br'));\n            }\n            else if (e.enterAction === 'BR') {\n                insertElem = createElement('br');\n            }\n            else {\n                insertElem = createElement('p');\n                insertElem.appendChild(createElement('br'));\n            }\n            this.insertAfter(insertElem, table);\n        }\n        if (table.classList.contains('ignore-table')) {\n            removeClassWithAttr([table], ['ignore-table']);\n        }\n        table.querySelector('td').classList.add('e-cell-select');\n        if (e.callBack) {\n            e.callBack({\n                requestType: 'Table',\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: [table]\n            });\n        }\n        return table;\n    };\n    TableCommand.prototype.calculateStyleValue = function (value) {\n        var styleValue;\n        if (typeof (value) === 'string') {\n            if (value.indexOf('px') >= 0 || value.indexOf('%') >= 0 || value.indexOf('auto') >= 0) {\n                styleValue = value;\n            }\n            else {\n                styleValue = value + 'px';\n            }\n        }\n        else {\n            styleValue = value + 'px';\n        }\n        return styleValue;\n    };\n    TableCommand.prototype.insertAfter = function (newNode, referenceNode) {\n        referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n    };\n    TableCommand.prototype.getSelectedCellMinMaxIndex = function (e) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var a = 0;\n        var minI = e.length;\n        var maxI = 0;\n        var minJ = e[0].length;\n        var maxJ = 0;\n        //eslint-disable-next-line\n        for (var i = 0; a < selectedCells.length; a++) {\n            var selectedCellIndex = this.getCorrespondingIndex(selectedCells[a], e);\n            var minMaxIndex = this.FindIndex(selectedCellIndex[0], selectedCellIndex[1], e);\n            //eslint-disable-next-line\n            minI = Math.min(selectedCellIndex[0], minI),\n                maxI = Math.max(minMaxIndex[0], maxI),\n                minJ = Math.min(selectedCellIndex[1], minJ),\n                maxJ = Math.max(minMaxIndex[1], maxJ);\n        }\n        return {\n            startRow: minI,\n            endRow: maxI,\n            startColumn: minJ,\n            endColumn: maxJ\n        };\n    };\n    TableCommand.prototype.insertRow = function (e) {\n        var isBelow = e.item.subCommand === 'InsertRowBefore' ? false : true;\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        if (selectedCell.nodeName.toLowerCase() === 'th' && e.item.subCommand === 'InsertRowBefore') {\n            return;\n        }\n        this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length === 0) {\n            var lastRow = this.curTable.rows[this.curTable.rows.length - 1];\n            var cloneRow = lastRow.cloneNode(true);\n            cloneRow.removeAttribute('rowspan');\n            this.insertAfter(cloneRow, lastRow);\n        }\n        else {\n            var allCells = this.getCorrespondingColumns();\n            var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minVal = isBelow ? minMaxIndex.endRow : minMaxIndex.startRow;\n            var newRow = createElement('tr');\n            var isHeaderSelect = this.curTable.querySelectorAll('th.e-cell-select').length > 0;\n            for (var i = 0; i < allCells[minVal].length; i++) {\n                // eslint-disable-next-line max-len\n                if (isBelow && minVal < allCells.length - 1 && allCells[minVal][i] === allCells[minVal + 1][i] ||\n                    !isBelow && 0 < minVal && allCells[minVal][i] === allCells[minVal - 1][i]) {\n                    if (0 === i || 0 < i && allCells[minVal][i] !== allCells[minVal][i - 1]) {\n                        allCells[minVal][i].setAttribute('rowspan', (parseInt(allCells[minVal][i].getAttribute('rowspan'), 10) + 1).toString());\n                    }\n                }\n                else {\n                    var tdElement = createElement('td');\n                    tdElement.appendChild(createElement('br'));\n                    newRow.appendChild(tdElement);\n                    tdElement.setAttribute('style', allCells[(isHeaderSelect && isBelow) ? allCells[(minVal + 1)] ? (minVal + 1) : minVal : minVal][i].getAttribute('style'));\n                }\n            }\n            // eslint-disable-next-line\n            var selectedRow = void 0;\n            if (isHeaderSelect && isBelow) {\n                selectedRow = this.curTable.querySelector('tbody').childNodes[0];\n            }\n            else {\n                selectedRow = this.curTable.rows[minVal];\n            }\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertRowBefore') ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                (isHeaderSelect ? selectedRow.parentElement.insertBefore(newRow, selectedRow) :\n                    this.insertAfter(newRow, selectedRow));\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.insertColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (!(selectedCell.nodeName === 'TH' || selectedCell.nodeName === 'TD')) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var curRow = closest(selectedCell, 'tr');\n        var curCell;\n        var allRows = closest((curRow), 'table').rows;\n        var colIndex = Array.prototype.slice.call(curRow.querySelectorAll(':scope > td, :scope > th')).indexOf(selectedCell);\n        var previousWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length);\n        var currentWidth = parseInt(e.item.width, 10) / (curRow.querySelectorAll(':scope > td, :scope > th').length + 1);\n        var currentTabElm = closest(curRow, 'table');\n        var thTdElm = closest(curRow, 'table').querySelectorAll('th,td');\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].dataset.oldWidth = (thTdElm[i].offsetWidth / currentTabElm.offsetWidth * 100) + '%';\n        }\n        if (isNOU(currentTabElm.style.width) || currentTabElm.style.width === '') {\n            currentTabElm.style.width = currentTabElm.offsetWidth + 'px';\n        }\n        for (var i = 0; i < allRows.length; i++) {\n            curCell = allRows[i].querySelectorAll(':scope > td, :scope > th')[colIndex];\n            var colTemplate = curCell.cloneNode(true);\n            colTemplate.innerHTML = '';\n            colTemplate.appendChild(createElement('br'));\n            colTemplate.removeAttribute('class');\n            colTemplate.removeAttribute('colspan');\n            colTemplate.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            (e.item.subCommand === 'InsertColumnLeft') ? curCell.parentElement.insertBefore(colTemplate, curCell) :\n                this.insertAfter(colTemplate, curCell);\n            colTemplate.style.width = currentWidth.toFixed(4) + '%';\n            delete colTemplate.dataset.oldWidth;\n        }\n        for (var i = 0; i < thTdElm.length; i++) {\n            thTdElm[i].style.width = (Number(thTdElm[i].dataset.oldWidth.split('%')[0]) * currentWidth / previousWidth).toFixed(4) + '%';\n            delete thTdElm[i].dataset.oldWidth;\n        }\n        e.item.selection.setSelectionText(this.parent.currentDocument, selectedCell, selectedCell, 0, 0);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteColumn = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var tBodyHeadEle = closest(selectedCell, selectedCell.tagName === 'TH' ? 'thead' : 'tbody');\n        var rowIndex = tBodyHeadEle && Array.prototype.indexOf.call(tBodyHeadEle.childNodes, selectedCell.parentNode);\n        this.curTable = closest(selectedCell, 'table');\n        var curRow = closest(selectedCell, 'tr');\n        if (curRow.querySelectorAll('th,td').length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            var deleteIndex = void 0;\n            var allCells = this.getCorrespondingColumns();\n            //eslint-disable-next-line\n            var selectedMinMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n            var minCol = selectedMinMaxIndex.startColumn;\n            var maxCol = selectedMinMaxIndex.endColumn;\n            for (var i = 0; i < allCells.length; i++) {\n                var currentRow = allCells[i];\n                for (var j = 0; j < currentRow.length; j++) {\n                    var currentCell = currentRow[j];\n                    //eslint-disable-next-line\n                    var currentCellIndex = this.getCorrespondingIndex(currentCell, allCells);\n                    var colSpanVal = parseInt(currentCell.getAttribute('colspan'), 10) || 1;\n                    if (currentCellIndex[1] + (colSpanVal - 1) >= minCol && currentCellIndex[1] <= maxCol) {\n                        if (colSpanVal > 1) {\n                            currentCell.setAttribute('colspan', (colSpanVal - 1).toString());\n                        }\n                        else {\n                            detach(currentCell);\n                            deleteIndex = j;\n                            if (Browser.isIE) {\n                                e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                                this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                            }\n                        }\n                    }\n                }\n            }\n            if (deleteIndex > -1) {\n                var rowHeadEle = tBodyHeadEle.children[rowIndex];\n                var nextFocusCell = rowHeadEle &&\n                    rowHeadEle.children[(deleteIndex <= rowHeadEle.children.length - 1 ? deleteIndex : deleteIndex - 1)];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            var sContainer = this.parent.nodeSelection.getRange(this.parent.currentDocument).startContainer;\n            if (sContainer.nodeName !== 'TD') {\n                var startChildLength = this.parent.nodeSelection.getRange(this.parent.currentDocument).startOffset;\n                var focusNode = sContainer.children[startChildLength];\n                if (focusNode) {\n                    this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, focusNode, 0);\n                }\n            }\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.deleteRow = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        if (selectedCell.nodeType === 3) {\n            selectedCell = closest(selectedCell.parentElement, 'td,th');\n        }\n        var colIndex = Array.prototype.indexOf.call(selectedCell.parentNode.childNodes, selectedCell);\n        this.curTable = closest(selectedCell, 'table');\n        var currentRow;\n        var allCells = this.getCorrespondingColumns();\n        var minMaxIndex = this.getSelectedCellMinMaxIndex(allCells);\n        var maxI;\n        var j;\n        if (this.curTable.rows.length === 1) {\n            e.item.selection.restore();\n            detach(closest(selectedCell.parentElement, 'table'));\n        }\n        else {\n            for (maxI = minMaxIndex.endRow; maxI >= minMaxIndex.startRow; maxI--) {\n                currentRow = this.curTable.rows[maxI];\n                for (j = 0; j < allCells[maxI].length; j++) {\n                    if (j === 0 || allCells[maxI][j] !== allCells[maxI][j - 1]) {\n                        if (1 < parseInt(allCells[maxI][j].getAttribute('rowspan'), 10)) {\n                            var rowSpanVal = parseInt(allCells[maxI][j].getAttribute('rowspan'), 10) - 1;\n                            if (1 === rowSpanVal) {\n                                allCells[maxI][j].removeAttribute('rowspan');\n                                var cell = this.getMergedRow(this.getCorrespondingColumns())[j];\n                                if (cell) {\n                                    var cloneNode = cell.cloneNode(true);\n                                    cloneNode.innerHTML = '<br>';\n                                    if (cell.parentElement) {\n                                        cell.parentElement.insertBefore(cloneNode, cell);\n                                    }\n                                }\n                            }\n                            else {\n                                allCells[maxI][j].setAttribute('rowspan', rowSpanVal.toString());\n                            }\n                            /* eslint-enable */\n                        }\n                    }\n                    // eslint-disable-next-line max-len\n                    if (maxI < allCells.length - 1 && allCells[maxI][j] === allCells[maxI + 1][j] && (0 === maxI ||\n                        allCells[maxI][j] !== allCells[maxI - 1][j])) {\n                        var element = allCells[maxI][j];\n                        var index = void 0;\n                        // eslint-disable-next-line max-len\n                        for (index = j; 0 < index && allCells[maxI][index] === allCells[maxI][index - 1]; index--) {\n                            if (index === 0) {\n                                this.curTable.rows[maxI + 1].prepend(element);\n                            }\n                            else {\n                                allCells[maxI + 1][index - 1].insertAdjacentElement('afterend', element);\n                            }\n                        }\n                    }\n                }\n                var deleteIndex = currentRow.rowIndex;\n                this.curTable.deleteRow(deleteIndex);\n                var focusTrEle = !isNOU(this.curTable.rows[deleteIndex]) ? this.curTable.querySelectorAll('tbody tr')[deleteIndex]\n                    : this.curTable.querySelectorAll('tbody tr')[deleteIndex - 1];\n                var nextFocusCell = focusTrEle && focusTrEle.querySelectorAll('td')[colIndex];\n                if (nextFocusCell) {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, nextFocusCell, nextFocusCell, 0, 0);\n                    nextFocusCell.classList.add('e-cell-select');\n                }\n                else {\n                    e.item.selection.setSelectionText(this.parent.currentDocument, this.curTable.querySelector('td'), this.curTable.querySelector('td'), 0, 0);\n                    this.curTable.querySelector('td, th').classList.add('e-cell-select');\n                }\n            }\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.getMergedRow = function (cells) {\n        var mergedRow;\n        for (var i = 0; i < cells.length; i++) {\n            if (cells[i].length !== this.curTable.rows[0].childNodes.length) {\n                mergedRow = cells[i];\n            }\n        }\n        return mergedRow;\n    };\n    TableCommand.prototype.removeTable = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var selectedTable = closest(selectedCell.parentElement, 'table');\n        if (selectedTable) {\n            e.item.selection.restore();\n            detach(selectedTable);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableHeader = function (e) {\n        var headerExit = false;\n        var selectedCell = e.item.selection.range.startContainer;\n        selectedCell = (selectedCell.nodeType === 3) ? selectedCell.parentNode : selectedCell;\n        var table = closest(selectedCell.parentElement, 'table');\n        [].slice.call(table.childNodes).forEach(function (el) {\n            if (el.nodeName === 'THEAD') {\n                headerExit = true;\n            }\n        });\n        if (table && !headerExit) {\n            var cellCount = table.querySelector('tr').childElementCount;\n            var colSpanCount = 0;\n            for (var i = 0; i < cellCount; i++) {\n                colSpanCount = colSpanCount + (parseInt(table.querySelector('tr').children[i].getAttribute('colspan'), 10) || 1);\n            }\n            var header = table.createTHead();\n            var row = header.insertRow(0);\n            for (var j = 0; j < colSpanCount; j++) {\n                var th = createElement('th');\n                th.appendChild(createElement('br'));\n                row.appendChild(th);\n            }\n        }\n        else {\n            table.deleteTHead();\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.tableVerticalAlign = function (e) {\n        var value = '';\n        switch (e.item.subCommand) {\n            case 'AlignTop':\n                value = 'top';\n                break;\n            case 'AlignMiddle':\n                value = 'middle';\n                break;\n            case 'AlignBottom':\n                value = 'bottom';\n                break;\n        }\n        e.item.tableCell.style.verticalAlign = value;\n        if (value && value !== '' && e.item.tableCell.getAttribute('valign')) {\n            e.item.tableCell.removeAttribute('valign');\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.cellMerge = function (e) {\n        if (isNOU(this.curTable)) {\n            this.curTable = closest(this.parent.nodeSelection.range.startContainer.parentElement, 'table');\n        }\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (selectedCells.length < 2) {\n            return;\n        }\n        this.mergeCellContent();\n        var minMaxIndexes = this.getSelectedMinMaxIndexes(this.getCorrespondingColumns());\n        var firstCell = selectedCells[0];\n        var rowSelectedCells = firstCell.parentElement.querySelectorAll('.e-cell-select');\n        var maxHeight = 0;\n        for (var j = 0; j < rowSelectedCells.length; j++) {\n            var cellHeight = rowSelectedCells[j].offsetHeight;\n            if (cellHeight > maxHeight) {\n                maxHeight = cellHeight;\n            }\n        }\n        if (minMaxIndexes.startColumn < minMaxIndexes.endColumn) {\n            firstCell.setAttribute('colspan', (minMaxIndexes.endColumn - minMaxIndexes.startColumn + 1).toString());\n        }\n        if (minMaxIndexes.startRow < minMaxIndexes.endRow) {\n            firstCell.setAttribute('rowspan', (minMaxIndexes.endRow - minMaxIndexes.startRow + 1).toString());\n        }\n        var totalWidth = 0;\n        var unit;\n        for (var j = rowSelectedCells.length - 1; j >= 0; j--) {\n            if (!isNOU(rowSelectedCells[j].style.width)\n                && rowSelectedCells[j].style.width !== '') {\n                if (!unit) {\n                    var match = rowSelectedCells[j].style.width.match(/^([\\d.]+)([a-z%]+)$/i);\n                    unit = match ? match[2] : '%';\n                }\n                totalWidth = totalWidth + parseFloat(rowSelectedCells[j].style.width);\n            }\n            else {\n                totalWidth = totalWidth + ((rowSelectedCells[j].offsetWidth / this.curTable.offsetWidth) * 100);\n                unit = '%';\n            }\n        }\n        firstCell.style.width = totalWidth + unit;\n        firstCell.style.height = maxHeight + 'px';\n        for (var i = 1; i <= selectedCells.length - 1; i++) {\n            detach(selectedCells[i]);\n        }\n        for (var i = 0; i < this.curTable.rows.length; i++) {\n            if (this.curTable.rows[i].innerHTML.trim() === '') {\n                detach(this.curTable.rows[i]);\n            }\n        }\n        removeClassWithAttr(this.curTable.querySelectorAll('table td, table th'), 'e-multi-cells-select');\n        removeClassWithAttr(this.curTable.querySelectorAll('table td, table th'), 'e-cell-select-end');\n        this.updateRowSpanStyle(minMaxIndexes.startRow, minMaxIndexes.endRow, this.getCorrespondingColumns());\n        this.updateColSpanStyle(minMaxIndexes.startColumn, minMaxIndexes.endColumn, this.getCorrespondingColumns());\n        e.item.selection.setSelectionText(this.parent.currentDocument, e.item.selection.range.startContainer, e.item.selection.range.startContainer, 0, 0);\n        if (this.parent.nodeSelection && firstCell) {\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, \n            // eslint-disable-next-line\n            firstCell, 0);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.updateColSpanStyle = function (min, max, elements) {\n        var colValue;\n        var colIndex;\n        var colMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = elements;\n        //eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray[0].length - 1))) {\n            for (colIndex = min; colIndex <= max; colIndex++) {\n                index = Math.min(parseInt(eleArray[0][colIndex].getAttribute('colspan'), 10) || 1, max - min + 1);\n                if (!(min < colIndex && eleArray[0][colIndex] === eleArray[0][colIndex - 1]) && 1 < index &&\n                    eleArray[0][colIndex] === eleArray[0][colIndex + 1]) {\n                    for (count = index - 1, colValue = 1; colValue < eleArray.length; colValue++) {\n                        if (eleArray[colValue][colIndex] !== eleArray[colValue - 1][colIndex]) {\n                            for (colMin = colIndex; colMin < colIndex + index; colMin++) {\n                                attrValue = parseInt(eleArray[colValue][colMin].getAttribute('colspan'), 10) || 1;\n                                if (1 < attrValue &&\n                                    eleArray[colValue][colMin] === eleArray[colValue][colMin + 1]) {\n                                    colMin += count = Math.min(count, attrValue - 1);\n                                }\n                                else {\n                                    count = Math.max(0, count - 1);\n                                    if (count === 0) {\n                                        break;\n                                    }\n                                }\n                                /* eslint-enable */\n                            }\n                        }\n                        if (!count) {\n                            break;\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'colspan', 0, eleArray.length - 1, min, max);\n            }\n        }\n    };\n    TableCommand.prototype.updateRowSpanStyle = function (min, max, ele) {\n        var rowValue;\n        var colIndex;\n        var rowMin;\n        var index = 0;\n        var attrValue;\n        var count = 0;\n        var eleArray = ele;\n        // eslint-disable-next-line\n        if (min < (max = Math.min(max, eleArray.length - 1))) {\n            for (rowValue = min; rowValue <= max; rowValue++) {\n                if (!(min < rowValue && eleArray[rowValue][0] === eleArray[rowValue - 1][0])\n                    // eslint-disable-next-line no-cond-assign\n                    && eleArray[rowValue][0] && 1 < (index = Math.min(parseInt(eleArray[rowValue][0].getAttribute('rowspan'), 10) ||\n                    1, max - min + 1)) && eleArray[rowValue][0] === eleArray[rowValue + 1][0]) {\n                    for (count = index - 1, colIndex = 1; colIndex < eleArray[0].length; colIndex++) {\n                        if (eleArray[rowValue][colIndex] !== eleArray[rowValue][colIndex - 1]) {\n                            for (rowMin = rowValue; rowMin < rowValue + index; rowMin++) {\n                                attrValue = parseInt(eleArray[rowMin][colIndex].getAttribute('rowspan'), 10) || 1;\n                                if (1 < attrValue && eleArray[rowMin][colIndex] ===\n                                    eleArray[rowMin + 1][colIndex]) {\n                                    rowMin += count = Math.min(count, attrValue - 1);\n                                }\n                                // eslint-disable-next-line\n                                else if (!(count = Math.max(0, count - 1))) {\n                                    break;\n                                }\n                            }\n                            if (!count) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            if (count) {\n                this.updateCellAttribute(eleArray, count, 'rowspan', min, max, 0, eleArray[0].length - 1);\n            }\n        }\n    };\n    TableCommand.prototype.updateCellAttribute = function (elements, index, attr, min, max, firstIndex, length) {\n        var rowIndex;\n        var colIndex;\n        var spanCount;\n        for (rowIndex = min; rowIndex <= max; rowIndex++) {\n            for (colIndex = firstIndex; colIndex <= length; colIndex++) {\n                spanCount = parseInt(elements[rowIndex][colIndex].getAttribute(attr), 10) || 1;\n                if (min < rowIndex && elements[rowIndex][colIndex] === elements[rowIndex - 1][colIndex] ||\n                    firstIndex < colIndex && elements[rowIndex][colIndex] ===\n                        elements[rowIndex][colIndex - 1] || 1 < (spanCount)) {\n                    if ((1 < spanCount - index)) {\n                        elements[rowIndex][colIndex].setAttribute(attr, (spanCount - index).toString());\n                    }\n                    else {\n                        elements[rowIndex][colIndex].removeAttribute(attr);\n                    }\n                }\n            }\n        }\n    };\n    TableCommand.prototype.mergeCellContent = function () {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        var innerHtml = selectedCells[0].innerHTML === '<br>' ? '' : selectedCells[0].innerHTML;\n        for (var i = 1; i < selectedCells.length; i++) {\n            if ('<br>' !== selectedCells[i].innerHTML) {\n                innerHtml = innerHtml ? innerHtml + '<br>' + selectedCells[i].innerHTML : innerHtml + selectedCells[i].innerHTML;\n            }\n        }\n        selectedCells[0].innerHTML = innerHtml;\n    };\n    TableCommand.prototype.getSelectedMinMaxIndexes = function (correspondingCells) {\n        var selectedCells = this.curTable.querySelectorAll('.e-cell-select');\n        if (0 < selectedCells.length) {\n            var minRow = correspondingCells.length;\n            var maxRow = 0;\n            var minCol = correspondingCells[0].length;\n            var maxCol = 0;\n            for (var i = 0; i < selectedCells.length; i++) {\n                var currentRowCol = this.getCorrespondingIndex(selectedCells[i], correspondingCells);\n                var targetRowCol = this.FindIndex(currentRowCol[0], currentRowCol[1], correspondingCells);\n                minRow = Math.min(currentRowCol[0], minRow);\n                maxRow = Math.max(targetRowCol[0], maxRow);\n                minCol = Math.min(currentRowCol[1], minCol);\n                maxCol = Math.max(targetRowCol[1], maxCol);\n            }\n            return {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            };\n        }\n        return null;\n    };\n    TableCommand.prototype.HorizontalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeCellRowSpan = this.activeCell.getAttribute('rowspan') ? parseInt(this.activeCell.getAttribute('rowspan'), 10) : 1;\n        if (activeCellRowSpan > 1) {\n            var avgCount = Math.ceil(activeCellRowSpan / 2);\n            // eslint-disable-next-line\n            1 < avgCount ? this.activeCell.setAttribute('rowspan', avgCount.toString()) :\n                this.activeCell.removeAttribute('rowspan');\n            // eslint-disable-next-line\n            1 < (activeCellRowSpan - avgCount) ? newCell.setAttribute('rowspan', (activeCellRowSpan - avgCount).toString()) : newCell.removeAttribute('rowspan');\n            var avgRowIndex = void 0;\n            var colIndex = void 0;\n            for (avgRowIndex = activeCellIndex[0] + Math.ceil(activeCellRowSpan / 2),\n                colIndex = 0 === activeCellIndex[1] ? activeCellIndex[1]\n                    : activeCellIndex[1] - 1; 0 <= colIndex && (correspondingCells[avgRowIndex][colIndex] ===\n                // eslint-disable-next-line max-len\n                correspondingCells[avgRowIndex][colIndex - 1] || 0 < avgRowIndex && correspondingCells[avgRowIndex][colIndex]\n                === correspondingCells[avgRowIndex - 1][colIndex]);) {\n                colIndex--;\n            }\n            if (colIndex === -1) {\n                if (this.curTable.rows[avgRowIndex].firstChild) {\n                    this.curTable.rows[avgRowIndex].prepend(newCell);\n                }\n                else {\n                    this.curTable.appendChild(newCell);\n                }\n            }\n            else {\n                correspondingCells[avgRowIndex][colIndex].insertAdjacentElement('afterend', newCell);\n            }\n        }\n        else {\n            var newTrEle = createElement('tr');\n            newTrEle.appendChild(newCell);\n            var selectedRow = correspondingCells[activeCellIndex[0]];\n            for (var j = 0; j <= selectedRow.length - 1; j++) {\n                if (selectedRow[j] !== selectedRow[j - 1] && selectedRow[j] !== this.activeCell) {\n                    selectedRow[j].setAttribute('rowspan', ((parseInt(selectedRow[j].getAttribute('rowspan'), 10) ?\n                        parseInt(selectedRow[j].getAttribute('rowspan'), 10) : 1) + 1).toString());\n                }\n            }\n            this.activeCell.parentNode.insertAdjacentElement('afterend', newTrEle);\n        }\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.VerticalSplit = function (e) {\n        var selectedCell = e.item.selection.range.startContainer;\n        this.curTable = closest(selectedCell.parentElement, 'table');\n        if (this.curTable.querySelectorAll('.e-cell-select').length > 1) {\n            return;\n        }\n        this.activeCell = this.curTable.querySelector('.e-cell-select');\n        var allRows = this.curTable.rows;\n        var newCell = this.activeCell.cloneNode(true);\n        newCell.removeAttribute('class');\n        newCell.innerHTML = '</br>';\n        var activeCellIndex = this.getCorrespondingIndex(this.activeCell, this.getCorrespondingColumns());\n        var correspondingColumns = this.getCorrespondingColumns();\n        var activeCellcolSpan = parseInt(this.activeCell.getAttribute('colspan'), 10) || 1;\n        if (activeCellcolSpan > 1) {\n            var colSpan = Math.ceil(activeCellcolSpan / 2);\n            var getColSizes = this.getColSizes(this.curTable);\n            var activeCellUpdatedWidth = this.getSplitColWidth(activeCellIndex[1], activeCellIndex[1] + colSpan - 1, getColSizes);\n            var newCellWidth = this.getSplitColWidth(activeCellIndex[1] + colSpan, activeCellIndex[1] + activeCellcolSpan - 1, getColSizes);\n            var activeCellWidth = this.convertPixelToPercentage(this.activeCell.offsetWidth, this.curTable.offsetWidth);\n            newCellWidth = (activeCellWidth - activeCellUpdatedWidth) < newCellWidth ?\n                (activeCellWidth - activeCellUpdatedWidth) : newCellWidth;\n            if (1 < colSpan) {\n                this.activeCell.setAttribute('colspan', colSpan.toString());\n            }\n            else {\n                this.activeCell.removeAttribute('colspan');\n            }\n            if (1 < activeCellcolSpan - colSpan) {\n                newCell.setAttribute('colspan', (activeCellcolSpan - colSpan).toString());\n            }\n            else {\n                newCell.removeAttribute('colspan');\n            }\n            this.activeCell.style.width = activeCellUpdatedWidth + '%';\n            newCell.style.width = newCellWidth + '%';\n        }\n        else {\n            var avgWidth = parseFloat(this.activeCell.style.width) / 2;\n            for (var i = 0; i <= allRows.length - 1; i++) {\n                if (0 === i || correspondingColumns[i][activeCellIndex[1]] !== correspondingColumns[i - 1][activeCellIndex[1]]) {\n                    var currentCell = correspondingColumns[i][activeCellIndex[1]];\n                    if (currentCell !== this.activeCell) {\n                        currentCell.setAttribute('colspan', ((parseInt(currentCell.getAttribute('colspan'), 10) ?\n                            parseInt(currentCell.getAttribute('colspan'), 10) : 1) + 1).toString());\n                    }\n                }\n            }\n            this.activeCell.style.width = avgWidth + '%';\n            newCell.style.width = avgWidth + '%';\n        }\n        this.activeCell.parentNode.insertBefore(newCell, this.activeCell.nextSibling);\n        if (e.callBack) {\n            e.callBack({\n                requestType: e.item.subCommand,\n                editorMode: 'HTML',\n                event: e.event,\n                range: this.parent.nodeSelection.getRange(this.parent.currentDocument),\n                elements: this.parent.nodeSelection.getSelectedNodes(this.parent.currentDocument)\n            });\n        }\n    };\n    TableCommand.prototype.getSplitColWidth = function (startIndex, endInex, sizes) {\n        var width = 0;\n        for (var i = startIndex; i <= endInex; i++) {\n            width += sizes[i];\n        }\n        return this.convertPixelToPercentage(width, this.curTable.offsetWidth);\n    };\n    TableCommand.prototype.getColSizes = function (curTable) {\n        var cellColl = curTable.rows[0].cells;\n        var cellCount = 0;\n        for (var cell = 0; cell < cellColl.length; cell++) {\n            cellCount = cellCount + cellColl[cell].colSpan;\n        }\n        var sizes = new Array(cellCount);\n        var rowSpanCells = new Map();\n        for (var i = 0; i < curTable.rows.length; i++) {\n            var currentColIndex = 0;\n            for (var k = 0; k < curTable.rows[i].cells.length; k++) {\n                for (var l = 1; l < curTable.rows[i].cells[k].rowSpan; l++) {\n                    var key = \"\" + (i + l) + currentColIndex;\n                    rowSpanCells.set(key, curTable.rows[i].cells[k]);\n                }\n                var cellIndex = this.getCellIndex(rowSpanCells, i, k);\n                if (cellIndex > currentColIndex) {\n                    currentColIndex = cellIndex;\n                }\n                var width = curTable.rows[i].cells[k].offsetWidth;\n                if (!sizes[currentColIndex] || width < sizes[currentColIndex]) {\n                    sizes[currentColIndex] = width;\n                }\n                currentColIndex += 1 + curTable.rows[i].cells[k].colSpan - 1;\n            }\n        }\n        return sizes;\n    };\n    TableCommand.prototype.getCellIndex = function (rowSpanCells, rowIndex, colIndex) {\n        var cellKey = \"\" + rowIndex + colIndex;\n        var spannedCell = rowSpanCells.get(cellKey);\n        if (spannedCell) {\n            return this.getCellIndex(rowSpanCells, rowIndex, colIndex + spannedCell.colSpan);\n        }\n        else {\n            return colIndex;\n        }\n    };\n    TableCommand.prototype.convertPixelToPercentage = function (value, offsetValue) {\n        return (value / offsetValue) * 100;\n    };\n    TableCommand.prototype.getCorrespondingColumns = function () {\n        var elementArray = [];\n        // eslint-disable-next-line\n        var _this = this;\n        var colspan = 0;\n        var allRows = _this.curTable.rows;\n        for (var i = 0; i <= allRows.length - 1; i++) {\n            var ele = allRows[i];\n            var index = 0;\n            for (var j = 0; j <= ele.children.length - 1; j++) {\n                var colEle = ele.children[j];\n                for (var ele_1 = colEle, colspan_1 = parseInt(ele_1.getAttribute('colspan'), 10) || 1, rowSpan = parseInt(ele_1.getAttribute('rowspan'), 10) || 1, rowIndex = i; rowIndex < i + rowSpan; rowIndex++) {\n                    for (var colIndex = index; colIndex < index + colspan_1; colIndex++) {\n                        if (!elementArray[rowIndex]) {\n                            elementArray[rowIndex] = [];\n                        }\n                        if (elementArray[rowIndex][colIndex]) {\n                            index++;\n                        }\n                        else {\n                            elementArray[rowIndex][colIndex] = colEle;\n                        }\n                    }\n                }\n                index += colspan;\n            }\n            /* eslint-enable */\n        }\n        return elementArray;\n    };\n    // eslint-disable-next-line\n    TableCommand.prototype.FindIndex = function (rowIndex, columnIndex, cells) {\n        var nextIndex;\n        var nextCol;\n        for (nextIndex = rowIndex + 1, nextCol = columnIndex + 1; nextIndex < cells.length;) {\n            if (cells[nextIndex][columnIndex] !== cells[rowIndex][columnIndex]) {\n                nextIndex--;\n                break;\n            }\n            nextIndex++;\n        }\n        for (nextIndex === cells.length && nextIndex--; nextCol < cells[rowIndex].length;) {\n            if (cells[rowIndex][nextCol] !== cells[rowIndex][columnIndex]) {\n                nextCol--;\n                break;\n            }\n            nextCol++;\n        }\n        return nextCol === cells[rowIndex].length && nextCol--,\n            [\n                nextIndex,\n                nextCol\n            ];\n    };\n    TableCommand.prototype.getCorrespondingIndex = function (cell, allCells) {\n        //let value: RowCol = new RowCol();\n        for (var i = 0; i < allCells.length; i++) {\n            for (var j = 0; j < allCells[i].length; j++) {\n                if (allCells[i][j] === cell) {\n                    return [i, j];\n                }\n            }\n        }\n        return [];\n    };\n    TableCommand.prototype.highlightCells = function (minRow, maxRow, minCol, maxCol, eleArray) {\n        var j;\n        var k;\n        var startCell;\n        var endCell;\n        var minRowIndex = minRow;\n        var maxRowIndex = maxRow;\n        var minColIndex = minCol;\n        var maxColIndex = maxCol;\n        var minMaxValues = new MinMax();\n        for (j = minRowIndex; j <= maxRowIndex; j++) {\n            startCell = this.getCorrespondingIndex(eleArray[j][minColIndex], eleArray);\n            endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n            if ((1 < (parseInt(eleArray[j][minColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][minColIndex].getAttribute('colspan'), 10) || 1)) &&\n                endCell) {\n                minRowIndex = Math.min(startCell[0], minRowIndex);\n                maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                minColIndex = Math.min(startCell[1], minColIndex);\n                maxColIndex = Math.max(endCell[1], maxColIndex);\n            }\n            else if ((1 < (parseInt(eleArray[j][maxColIndex].getAttribute('rowspan'), 10) || 1) ||\n                1 < (parseInt(eleArray[j][maxColIndex].getAttribute('colspan'), 10) || 1))) {\n                startCell = this.getCorrespondingIndex(eleArray[j][maxColIndex], eleArray);\n                endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n                if (endCell) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n            }\n            for (k = minColIndex; k <= maxColIndex; k++) {\n                startCell = this.getCorrespondingIndex(eleArray[minRowIndex][k], eleArray);\n                endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n                if ((1 < (parseInt(eleArray[minRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[minRowIndex][k].getAttribute('colspan'), 10) || 1)) &&\n                    endCell) {\n                    minRowIndex = Math.min(startCell[0], minRowIndex);\n                    maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                    minColIndex = Math.min(startCell[1], minColIndex);\n                    maxColIndex = Math.max(endCell[1], maxColIndex);\n                }\n                else if ((1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('rowspan'), 10) || 1) ||\n                    1 < (parseInt(eleArray[maxRowIndex][k].getAttribute('colspan'), 10) || 1))) {\n                    startCell = this.getCorrespondingIndex(eleArray[maxRowIndex][k], eleArray);\n                    endCell = this.FindIndex(startCell[0], startCell[1], eleArray);\n                    if (endCell) {\n                        minRowIndex = Math.min(startCell[0], minRowIndex);\n                        maxRowIndex = Math.max(endCell[0], maxRowIndex);\n                        minColIndex = Math.min(startCell[1], minColIndex);\n                        maxColIndex = Math.max(endCell[1], maxColIndex);\n                    }\n                }\n            }\n            minMaxValues = minRowIndex === minRow && maxRowIndex === maxRow && minColIndex === minCol && maxColIndex === maxCol ? {\n                startRow: minRow,\n                endRow: maxRow,\n                startColumn: minCol,\n                endColumn: maxCol\n            } : this.highlightCells(minRowIndex, maxRowIndex, minColIndex, maxColIndex, eleArray);\n        }\n        return minMaxValues;\n        /* eslint-enable */\n    };\n    TableCommand.prototype.restoreRange = function (target) {\n        if (this.parent.currentDocument.getSelection().rangeCount && (target.nodeName === 'TD' || target.nodeName === 'TH')) {\n            this.parent.nodeSelection.setCursorPoint(this.parent.currentDocument, target, 0);\n        }\n    };\n    TableCommand.prototype.tableMove = function (e) {\n        this.activeCell = e.selectNode[0];\n        var target = e.event.target;\n        var activeCellTag = this.activeCell.tagName;\n        var targetCellTag = target.tagName;\n        this.curTable = closest(target, 'table');\n        if ((target.tagName !== 'TD' && target.tagName !== 'TH') && activeCellTag !== targetCellTag) {\n            return;\n        }\n        var activeCellTable = closest(this.activeCell, 'table');\n        if ((isNOU(this.curTable) || isNOU(activeCellTable)) || activeCellTable !== this.curTable) {\n            return;\n        }\n        var correspondingCells = this.getCorrespondingColumns();\n        var activeIndexes = this.getCorrespondingIndex(this.activeCell, correspondingCells);\n        var targetIndexes = this.getCorrespondingIndex(target, correspondingCells);\n        var activeCellList = this.curTable.querySelectorAll('.e-cell-select, .e-multi-cells-select, .e-cell-select-end');\n        for (var i = activeCellList.length - 1; i >= 0; i--) {\n            if (this.activeCell !== activeCellList[i]) {\n                removeClassWithAttr([activeCellList[i]], ['e-cell-select']);\n            }\n            removeClassWithAttr([activeCellList[i]], ['e-multi-cells-select']);\n            removeClassWithAttr([activeCellList[i]], ['e-cell-select-end']);\n        }\n        if (activeIndexes[0] === targetIndexes[0] && activeIndexes[1] === targetIndexes[1]) {\n            if (activeCellList.length > 1) {\n                this.restoreRange(target);\n            }\n            return;\n        }\n        var minMaxIndexes = this.highlightCells(Math.min(activeIndexes[0], targetIndexes[0]), Math.max(activeIndexes[0], targetIndexes[0]), Math.min(activeIndexes[1], targetIndexes[1]), Math.max(activeIndexes[1], targetIndexes[1]), correspondingCells);\n        for (var rowIndex = minMaxIndexes.startRow; rowIndex <= minMaxIndexes.endRow; rowIndex++) {\n            for (var colIndex = minMaxIndexes.startColumn; colIndex <= minMaxIndexes.endColumn; colIndex++) {\n                correspondingCells[rowIndex][colIndex].classList.add('e-cell-select');\n                correspondingCells[rowIndex][colIndex].classList.add('e-multi-cells-select');\n            }\n        }\n        target.classList.add('e-cell-select-end');\n        if (e.event.type) {\n            e.event.preventDefault();\n        }\n        this.restoreRange(target);\n    };\n    TableCommand.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return TableCommand;\n}());\nexport { TableCommand };\nvar MinMax = /** @class */ (function () {\n    function MinMax() {\n    }\n    return MinMax;\n}());\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}