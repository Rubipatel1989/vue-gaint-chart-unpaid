{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { Browser, remove, EventHandler, isUndefined, closest, classList, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { parentsUntil, isGroupAdaptive } from '../base/util';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar Clipboard = /** @class */function () {\n  /**\n   * Constructor for the Grid clipboard module\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} serviceLocator - specifies the serviceLocator\n   * @hidden\n   */\n  function Clipboard(parent, serviceLocator) {\n    this.copyContent = '';\n    this.isSelect = false;\n    this.parent = parent;\n    this.serviceLocator = serviceLocator;\n    this.addEventListener();\n  }\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Clipboard.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.on(events.contentReady, this.initialEnd, this);\n    this.parent.on(events.keyPressed, this.keyDownHandler, this);\n    this.parent.on(events.click, this.clickHandler, this);\n    this.parent.on(events.onEmpty, this.initialEnd, this);\n    EventHandler.add(this.parent.element, 'keydown', this.pasteHandler, this);\n  };\n  /**\n   * @returns {void}\n   * @hidden\n   */\n  Clipboard.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(events.keyPressed, this.keyDownHandler);\n    this.parent.off(events.contentReady, this.initialEnd);\n    this.parent.off(events.click, this.clickHandler);\n    this.parent.off(events.onEmpty, this.initialEnd);\n    EventHandler.remove(this.parent.element, 'keydown', this.pasteHandler);\n  };\n  Clipboard.prototype.clickHandler = function (e) {\n    var target = e.target;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    target = parentsUntil(target, 'e-rowcell');\n  };\n  Clipboard.prototype.pasteHandler = function (e) {\n    var _this = this;\n    var grid = this.parent;\n    var isMacLike = /(Mac)/i.test(navigator.platform);\n    var selectedRowCellIndexes = this.parent.getSelectedRowCellIndexes();\n    if (!grid.isEdit && e.keyCode === 67 && isMacLike && e.metaKey) {\n      this.copy();\n    }\n    if (selectedRowCellIndexes.length && e.keyCode === 86 && (!isMacLike && e.ctrlKey || isMacLike && e.metaKey) && !grid.isEdit) {\n      var target = closest(document.activeElement, '.' + literals.rowCell);\n      if (!this.clipBoardTextArea || !target || !grid.editSettings.allowEditing || grid.editSettings.mode !== 'Batch' || grid.selectionSettings.mode !== 'Cell' || grid.selectionSettings.cellSelectionMode === 'Flow') {\n        return;\n      }\n      this.activeElement = document.activeElement;\n      var x_1 = window.scrollX;\n      var y_1 = window.scrollY;\n      this.clipBoardTextArea.focus();\n      setTimeout(function () {\n        _this.activeElement.focus();\n        window.scrollTo(x_1, y_1);\n        _this.paste(_this.clipBoardTextArea.value, selectedRowCellIndexes[0].rowIndex, selectedRowCellIndexes[0].cellIndexes[0]);\n      }, isMacLike ? 100 : 10);\n    }\n  };\n  /**\n   * Paste data from clipboard to selected cells.\n   *\n   * @param {boolean} data - Specifies the date for paste.\n   * @param {boolean} rowIndex - Specifies the row index.\n   * @param {boolean} colIndex - Specifies the column index.\n   * @returns {void}\n   */\n  Clipboard.prototype.paste = function (data, rowIndex, colIndex) {\n    var grid = this.parent;\n    var cIdx = colIndex;\n    var rIdx = rowIndex;\n    var col;\n    var value;\n    var isAvail;\n    var rows = data.split('\\n');\n    var cols;\n    for (var r = 0; r < rows.length; r++) {\n      cols = rows[parseInt(r.toString(), 10)].split('\\t');\n      cIdx = colIndex;\n      if (r === rows.length - 1 && rows[parseInt(r.toString(), 10)] === '' || isUndefined(grid.getRowByIndex(rIdx))) {\n        cIdx++;\n        break;\n      }\n      for (var c = 0; c < cols.length; c++) {\n        isAvail = grid.getCellFromIndex(rIdx, cIdx);\n        if (!isAvail) {\n          cIdx++;\n          break;\n        }\n        col = grid.getColumnByIndex(cIdx);\n        value = col.getParser() ? col.getParser()(cols[parseInt(c.toString(), 10)]) : cols[parseInt(c.toString(), 10)];\n        if (col.allowEditing && !col.isPrimaryKey) {\n          var args = {\n            column: col,\n            data: value,\n            rowIndex: rIdx\n          };\n          this.parent.trigger(events.beforePaste, args);\n          rIdx = args.rowIndex;\n          if (!args.cancel) {\n            if (grid.editModule) {\n              if (col.type === 'number') {\n                this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.data));\n              } else {\n                grid.editModule.updateCell(rIdx, col.field, args.data);\n              }\n            }\n          }\n        }\n        cIdx++;\n      }\n      rIdx++;\n    }\n    grid.selectionModule.selectCellsByRange({\n      rowIndex: rowIndex,\n      cellIndex: colIndex\n    }, {\n      rowIndex: rIdx - 1,\n      cellIndex: cIdx - 1\n    });\n    var cell = this.parent.getCellFromIndex(rIdx - 1, cIdx - 1);\n    if (cell) {\n      classList(cell, ['e-focus', 'e-focused'], []);\n    }\n    this.clipBoardTextArea.value = '';\n  };\n  Clipboard.prototype.initialEnd = function () {\n    this.l10n = this.serviceLocator.getService('localization');\n    this.parent.off(events.contentReady, this.initialEnd);\n    this.clipBoardTextArea = this.parent.createElement('textarea', {\n      className: 'e-clipboard',\n      styles: 'opacity: 0',\n      attrs: {\n        tabindex: '-1',\n        'aria-label': this.l10n.getConstant('ClipBoard')\n      }\n    });\n    this.parent.element.appendChild(this.clipBoardTextArea);\n  };\n  Clipboard.prototype.keyDownHandler = function (e) {\n    if (e.action === 'ctrlPlusC') {\n      this.copy();\n    } else if (e.action === 'ctrlShiftPlusH') {\n      this.copy(true);\n    }\n  };\n  Clipboard.prototype.setCopyData = function (withHeader) {\n    if (window.getSelection().toString() === '') {\n      this.clipBoardTextArea.value = this.copyContent = '';\n      var rows = this.parent.getDataRows();\n      if (this.parent.selectionSettings.mode !== 'Cell') {\n        var selectedIndexes = this.parent.getSelectedRowIndexes().sort(function (a, b) {\n          return a - b;\n        });\n        if (withHeader) {\n          var headerTextArray = [];\n          for (var i = 0; i < this.parent.getVisibleColumns().length; i++) {\n            headerTextArray[parseInt(i.toString(), 10)] = this.parent.getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n          }\n          this.getCopyData(headerTextArray, false, '\\t', withHeader);\n          this.copyContent += '\\n';\n        }\n        if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && selectedIndexes.length > rows.length) {\n          selectedIndexes = [];\n          for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            if (row.getAttribute('aria-selected') === 'true') {\n              selectedIndexes.push(parseInt(row.getAttribute('data-rowindex'), 10));\n            }\n          }\n        }\n        for (var i = 0; i < selectedIndexes.length; i++) {\n          if (i > 0) {\n            this.copyContent += '\\n';\n          }\n          var leftCols = [];\n          var idx = selectedIndexes[parseInt(i.toString(), 10)];\n          if (!isGroupAdaptive(this.parent) && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache || this.parent.groupSettings.columns.length && this.parent.groupSettings.enableLazyLoading)) {\n            idx = rows.map(function (m) {\n              return m.getAttribute('data-rowindex');\n            }).indexOf(selectedIndexes[parseInt(i.toString(), 10)].toString());\n          }\n          var currentRow = rows[parseInt(idx.toString(), 10)];\n          if (!isNullOrUndefined(currentRow)) {\n            leftCols.push.apply(leftCols, [].slice.call(currentRow.querySelectorAll('.e-rowcell:not(.e-hide)')));\n            this.getCopyData(leftCols, false, '\\t', withHeader);\n          }\n        }\n      } else {\n        var obj = this.checkBoxSelection();\n        if (obj.status) {\n          if (withHeader) {\n            var headers = [];\n            for (var i = 0; i < obj.colIndexes.length; i++) {\n              var colHeader = this.parent.getColumnHeaderByIndex(obj.colIndexes[parseInt(i.toString(), 10)]);\n              if (!colHeader.classList.contains('e-hide')) {\n                headers.push(colHeader);\n              }\n            }\n            this.getCopyData(headers, false, '\\t', withHeader);\n            this.copyContent += '\\n';\n          }\n          for (var i = 0; i < obj.rowIndexes.length; i++) {\n            if (i > 0) {\n              this.copyContent += '\\n';\n            }\n            var cells = [].slice.call(rows[obj.rowIndexes[parseInt(i.toString(), 10)]].querySelectorAll('.e-cellselectionbackground:not(.e-hide)'));\n            this.getCopyData(cells, false, '\\t', withHeader);\n          }\n        } else {\n          this.getCopyData([].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground')), true, '\\n', withHeader);\n        }\n      }\n      var args = {\n        data: this.copyContent,\n        cancel: false\n      };\n      this.parent.trigger(events.beforeCopy, args);\n      if (args.cancel) {\n        return;\n      }\n      this.clipBoardTextArea.value = this.copyContent = args.data;\n      if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n        this.clipBoardTextArea.select();\n      } else {\n        this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n      }\n      this.isSelect = true;\n    }\n  };\n  Clipboard.prototype.getCopyData = function (cells, isCell, splitKey, withHeader) {\n    var isElement = typeof cells[0] !== 'string';\n    for (var j = 0; j < cells.length; j++) {\n      if (withHeader && isCell) {\n        var colIdx = parseInt(cells[parseInt(j.toString(), 10)].getAttribute(literals.dataColIndex), 10);\n        this.copyContent += this.parent.getColumns()[parseInt(colIdx.toString(), 10)].headerText + '\\n';\n      }\n      if (isElement) {\n        if (!cells[parseInt(j.toString(), 10)].classList.contains('e-hide')) {\n          this.copyContent += cells[parseInt(j.toString(), 10)].innerText;\n        }\n      } else {\n        this.copyContent += cells[parseInt(j.toString(), 10)];\n      }\n      if (j < cells.length - 1) {\n        this.copyContent += splitKey;\n      }\n    }\n  };\n  /**\n   * Copy selected rows or cells data into clipboard.\n   *\n   * @returns {void}\n   * @param {boolean} withHeader - Specifies whether the column header data need to be copied or not.\n   */\n  Clipboard.prototype.copy = function (withHeader) {\n    if (document.queryCommandSupported('copy') && this.clipBoardTextArea) {\n      this.setCopyData(withHeader);\n      document.execCommand('copy');\n      this.clipBoardTextArea.blur();\n    }\n    if (this.isSelect) {\n      window.getSelection().removeAllRanges();\n      this.isSelect = false;\n    }\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   * @private\n   */\n  Clipboard.prototype.getModuleName = function () {\n    return 'clipboard';\n  };\n  /**\n   * To destroy the clipboard\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Clipboard.prototype.destroy = function () {\n    this.removeEventListener();\n    if (this.clipBoardTextArea) {\n      remove(this.clipBoardTextArea);\n      this.clipBoardTextArea = null;\n    }\n  };\n  Clipboard.prototype.checkBoxSelection = function () {\n    var gridObj = this.parent;\n    var obj = {\n      status: false\n    };\n    if (gridObj.selectionSettings.mode === 'Cell') {\n      var rowCellIndxes = gridObj.getSelectedRowCellIndexes();\n      var str = void 0;\n      var rowIndexes = [];\n      var i = void 0;\n      for (i = 0; i < rowCellIndxes.length; i++) {\n        if (rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.length) {\n          rowIndexes.push(rowCellIndxes[parseInt(i.toString(), 10)].rowIndex);\n        }\n        if (rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.length) {\n          if (!str) {\n            str = JSON.stringify(rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.sort());\n          }\n          if (str !== JSON.stringify(rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.sort())) {\n            break;\n          }\n        }\n      }\n      rowIndexes.sort(function (a, b) {\n        return a - b;\n      });\n      if (i === rowCellIndxes.length) {\n        obj = {\n          status: true,\n          rowIndexes: rowIndexes,\n          colIndexes: rowCellIndxes[0].cellIndexes\n        };\n      }\n    }\n    return obj;\n  };\n  return Clipboard;\n}();\nexport { Clipboard };","map":{"version":3,"names":["Browser","remove","EventHandler","isUndefined","closest","classList","isNullOrUndefined","parentsUntil","isGroupAdaptive","events","literals","Clipboard","parent","serviceLocator","copyContent","isSelect","addEventListener","prototype","isDestroyed","on","contentReady","initialEnd","keyPressed","keyDownHandler","click","clickHandler","onEmpty","add","element","pasteHandler","removeEventListener","off","e","target","_this","grid","isMacLike","test","navigator","platform","selectedRowCellIndexes","getSelectedRowCellIndexes","isEdit","keyCode","metaKey","copy","length","ctrlKey","document","activeElement","rowCell","clipBoardTextArea","editSettings","allowEditing","mode","selectionSettings","cellSelectionMode","x_1","window","scrollX","y_1","scrollY","focus","setTimeout","scrollTo","paste","value","rowIndex","cellIndexes","data","colIndex","cIdx","rIdx","col","isAvail","rows","split","cols","r","parseInt","toString","getRowByIndex","c","getCellFromIndex","getColumnByIndex","getParser","isPrimaryKey","args","column","trigger","beforePaste","cancel","editModule","type","updateCell","field","parseFloat","selectionModule","selectCellsByRange","cellIndex","cell","l10n","getService","createElement","className","styles","attrs","tabindex","getConstant","appendChild","action","setCopyData","withHeader","getSelection","getDataRows","selectedIndexes","getSelectedRowIndexes","sort","a","b","headerTextArray","i","getVisibleColumns","headerText","getCopyData","enableVirtualization","enableInfiniteScrolling","row","getAttribute","push","leftCols","idx","infiniteScrollSettings","enableCache","groupSettings","columns","enableLazyLoading","map","m","indexOf","currentRow","apply","slice","call","querySelectorAll","obj","checkBoxSelection","status","headers","colIndexes","colHeader","getColumnHeaderByIndex","contains","rowIndexes","cells","getElementsByClassName","beforeCopy","userAgent","match","select","setSelectionRange","isCell","splitKey","isElement","j","colIdx","dataColIndex","getColumns","innerText","queryCommandSupported","execCommand","blur","removeAllRanges","getModuleName","destroy","gridObj","rowCellIndxes","str","JSON","stringify"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-grids/src/grid/actions/clipboard.js"],"sourcesContent":["import { Browser, remove, EventHandler, isUndefined, closest, classList, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { parentsUntil, isGroupAdaptive } from '../base/util';\nimport * as events from '../base/constant';\nimport * as literals from '../base/string-literals';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar Clipboard = /** @class */ (function () {\n    /**\n     * Constructor for the Grid clipboard module\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} serviceLocator - specifies the serviceLocator\n     * @hidden\n     */\n    function Clipboard(parent, serviceLocator) {\n        this.copyContent = '';\n        this.isSelect = false;\n        this.parent = parent;\n        this.serviceLocator = serviceLocator;\n        this.addEventListener();\n    }\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Clipboard.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on(events.contentReady, this.initialEnd, this);\n        this.parent.on(events.keyPressed, this.keyDownHandler, this);\n        this.parent.on(events.click, this.clickHandler, this);\n        this.parent.on(events.onEmpty, this.initialEnd, this);\n        EventHandler.add(this.parent.element, 'keydown', this.pasteHandler, this);\n    };\n    /**\n     * @returns {void}\n     * @hidden\n     */\n    Clipboard.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.keyPressed, this.keyDownHandler);\n        this.parent.off(events.contentReady, this.initialEnd);\n        this.parent.off(events.click, this.clickHandler);\n        this.parent.off(events.onEmpty, this.initialEnd);\n        EventHandler.remove(this.parent.element, 'keydown', this.pasteHandler);\n    };\n    Clipboard.prototype.clickHandler = function (e) {\n        var target = e.target;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        target = parentsUntil(target, 'e-rowcell');\n    };\n    Clipboard.prototype.pasteHandler = function (e) {\n        var _this = this;\n        var grid = this.parent;\n        var isMacLike = /(Mac)/i.test(navigator.platform);\n        var selectedRowCellIndexes = this.parent.getSelectedRowCellIndexes();\n        if (!grid.isEdit && e.keyCode === 67 && isMacLike && e.metaKey) {\n            this.copy();\n        }\n        if (selectedRowCellIndexes.length && e.keyCode === 86 && ((!isMacLike && e.ctrlKey) || (isMacLike && e.metaKey)) && !grid.isEdit) {\n            var target = closest(document.activeElement, '.' + literals.rowCell);\n            if (!this.clipBoardTextArea || !target || !grid.editSettings.allowEditing || grid.editSettings.mode !== 'Batch' ||\n                grid.selectionSettings.mode !== 'Cell' || grid.selectionSettings.cellSelectionMode === 'Flow') {\n                return;\n            }\n            this.activeElement = document.activeElement;\n            var x_1 = window.scrollX;\n            var y_1 = window.scrollY;\n            this.clipBoardTextArea.focus();\n            setTimeout(function () {\n                _this.activeElement.focus();\n                window.scrollTo(x_1, y_1);\n                _this.paste(_this.clipBoardTextArea.value, selectedRowCellIndexes[0].rowIndex, selectedRowCellIndexes[0].cellIndexes[0]);\n            }, isMacLike ? 100 : 10);\n        }\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    Clipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        var grid = this.parent;\n        var cIdx = colIndex;\n        var rIdx = rowIndex;\n        var col;\n        var value;\n        var isAvail;\n        var rows = data.split('\\n');\n        var cols;\n        for (var r = 0; r < rows.length; r++) {\n            cols = rows[parseInt(r.toString(), 10)].split('\\t');\n            cIdx = colIndex;\n            if ((r === rows.length - 1 && rows[parseInt(r.toString(), 10)] === '') || isUndefined(grid.getRowByIndex(rIdx))) {\n                cIdx++;\n                break;\n            }\n            for (var c = 0; c < cols.length; c++) {\n                isAvail = grid.getCellFromIndex(rIdx, cIdx);\n                if (!isAvail) {\n                    cIdx++;\n                    break;\n                }\n                col = grid.getColumnByIndex(cIdx);\n                value = col.getParser() ? col.getParser()(cols[parseInt(c.toString(), 10)]) : cols[parseInt(c.toString(), 10)];\n                if (col.allowEditing && !col.isPrimaryKey) {\n                    var args = {\n                        column: col,\n                        data: value,\n                        rowIndex: rIdx\n                    };\n                    this.parent.trigger(events.beforePaste, args);\n                    rIdx = args.rowIndex;\n                    if (!args.cancel) {\n                        if (grid.editModule) {\n                            if (col.type === 'number') {\n                                this.parent.editModule.updateCell(rIdx, col.field, parseFloat(args.data));\n                            }\n                            else {\n                                grid.editModule.updateCell(rIdx, col.field, args.data);\n                            }\n                        }\n                    }\n                }\n                cIdx++;\n            }\n            rIdx++;\n        }\n        grid.selectionModule.selectCellsByRange({ rowIndex: rowIndex, cellIndex: colIndex }, { rowIndex: rIdx - 1, cellIndex: cIdx - 1 });\n        var cell = this.parent.getCellFromIndex(rIdx - 1, cIdx - 1);\n        if (cell) {\n            classList(cell, ['e-focus', 'e-focused'], []);\n        }\n        this.clipBoardTextArea.value = '';\n    };\n    Clipboard.prototype.initialEnd = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.parent.off(events.contentReady, this.initialEnd);\n        this.clipBoardTextArea = this.parent.createElement('textarea', {\n            className: 'e-clipboard',\n            styles: 'opacity: 0',\n            attrs: { tabindex: '-1', 'aria-label': this.l10n.getConstant('ClipBoard') }\n        });\n        this.parent.element.appendChild(this.clipBoardTextArea);\n    };\n    Clipboard.prototype.keyDownHandler = function (e) {\n        if (e.action === 'ctrlPlusC') {\n            this.copy();\n        }\n        else if (e.action === 'ctrlShiftPlusH') {\n            this.copy(true);\n        }\n    };\n    Clipboard.prototype.setCopyData = function (withHeader) {\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this.copyContent = '';\n            var rows = this.parent.getDataRows();\n            if (this.parent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.parent.getSelectedRowIndexes().sort(function (a, b) { return a - b; });\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.parent.getVisibleColumns().length; i++) {\n                        headerTextArray[parseInt(i.toString(), 10)] = this.parent\n                            .getVisibleColumns()[parseInt(i.toString(), 10)].headerText;\n                    }\n                    this.getCopyData(headerTextArray, false, '\\t', withHeader);\n                    this.copyContent += '\\n';\n                }\n                if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && selectedIndexes.length > rows.length) {\n                    selectedIndexes = [];\n                    for (var i = 0; i < rows.length; i++) {\n                        var row = rows[parseInt(i.toString(), 10)];\n                        if (row.getAttribute('aria-selected') === 'true') {\n                            selectedIndexes.push(parseInt(row.getAttribute('data-rowindex'), 10));\n                        }\n                    }\n                }\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.copyContent += '\\n';\n                    }\n                    var leftCols = [];\n                    var idx = selectedIndexes[parseInt(i.toString(), 10)];\n                    if (!isGroupAdaptive(this.parent) && (this.parent.enableVirtualization ||\n                        (this.parent.enableInfiniteScrolling && this.parent.infiniteScrollSettings.enableCache) ||\n                        (this.parent.groupSettings.columns.length && this.parent.groupSettings.enableLazyLoading))) {\n                        idx = rows.map(function (m) { return m.getAttribute('data-rowindex'); }).indexOf(selectedIndexes[parseInt(i.toString(), 10)].toString());\n                    }\n                    var currentRow = rows[parseInt(idx.toString(), 10)];\n                    if (!(isNullOrUndefined(currentRow))) {\n                        leftCols.push.apply(leftCols, [].slice.call(currentRow.querySelectorAll('.e-rowcell:not(.e-hide)')));\n                        this.getCopyData(leftCols, false, '\\t', withHeader);\n                    }\n                }\n            }\n            else {\n                var obj = this.checkBoxSelection();\n                if (obj.status) {\n                    if (withHeader) {\n                        var headers = [];\n                        for (var i = 0; i < obj.colIndexes.length; i++) {\n                            var colHeader = this.parent\n                                .getColumnHeaderByIndex(obj.colIndexes[parseInt(i.toString(), 10)]);\n                            if (!colHeader.classList.contains('e-hide')) {\n                                headers.push(colHeader);\n                            }\n                        }\n                        this.getCopyData(headers, false, '\\t', withHeader);\n                        this.copyContent += '\\n';\n                    }\n                    for (var i = 0; i < obj.rowIndexes.length; i++) {\n                        if (i > 0) {\n                            this.copyContent += '\\n';\n                        }\n                        var cells = [].slice.call(rows[obj.rowIndexes[parseInt(i.toString(), 10)]].\n                            querySelectorAll('.e-cellselectionbackground:not(.e-hide)'));\n                        this.getCopyData(cells, false, '\\t', withHeader);\n                    }\n                }\n                else {\n                    this.getCopyData([].slice.call(this.parent.element.getElementsByClassName('e-cellselectionbackground')), true, '\\n', withHeader);\n                }\n            }\n            var args = {\n                data: this.copyContent,\n                cancel: false\n            };\n            this.parent.trigger(events.beforeCopy, args);\n            if (args.cancel) {\n                return;\n            }\n            this.clipBoardTextArea.value = this.copyContent = args.data;\n            if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                this.clipBoardTextArea.select();\n            }\n            else {\n                this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n            }\n            this.isSelect = true;\n        }\n    };\n    Clipboard.prototype.getCopyData = function (cells, isCell, splitKey, withHeader) {\n        var isElement = typeof cells[0] !== 'string';\n        for (var j = 0; j < cells.length; j++) {\n            if (withHeader && isCell) {\n                var colIdx = parseInt(cells[parseInt(j.toString(), 10)].getAttribute(literals.dataColIndex), 10);\n                this.copyContent += this.parent.getColumns()[parseInt(colIdx.toString(), 10)].headerText + '\\n';\n            }\n            if (isElement) {\n                if (!cells[parseInt(j.toString(), 10)].classList.contains('e-hide')) {\n                    this.copyContent += cells[parseInt(j.toString(), 10)].innerText;\n                }\n            }\n            else {\n                this.copyContent += cells[parseInt(j.toString(), 10)];\n            }\n            if (j < cells.length - 1) {\n                this.copyContent += splitKey;\n            }\n        }\n    };\n    /**\n     * Copy selected rows or cells data into clipboard.\n     *\n     * @returns {void}\n     * @param {boolean} withHeader - Specifies whether the column header data need to be copied or not.\n     */\n    Clipboard.prototype.copy = function (withHeader) {\n        if (document.queryCommandSupported('copy') && this.clipBoardTextArea) {\n            this.setCopyData(withHeader);\n            document.execCommand('copy');\n            this.clipBoardTextArea.blur();\n        }\n        if (this.isSelect) {\n            window.getSelection().removeAllRanges();\n            this.isSelect = false;\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     * @private\n     */\n    Clipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Clipboard.prototype.destroy = function () {\n        this.removeEventListener();\n        if (this.clipBoardTextArea) {\n            remove(this.clipBoardTextArea);\n            this.clipBoardTextArea = null;\n        }\n    };\n    Clipboard.prototype.checkBoxSelection = function () {\n        var gridObj = this.parent;\n        var obj = { status: false };\n        if (gridObj.selectionSettings.mode === 'Cell') {\n            var rowCellIndxes = gridObj.getSelectedRowCellIndexes();\n            var str = void 0;\n            var rowIndexes = [];\n            var i = void 0;\n            for (i = 0; i < rowCellIndxes.length; i++) {\n                if (rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.length) {\n                    rowIndexes.push(rowCellIndxes[parseInt(i.toString(), 10)].rowIndex);\n                }\n                if (rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.length) {\n                    if (!str) {\n                        str = JSON.stringify(rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.sort());\n                    }\n                    if (str !== JSON.stringify(rowCellIndxes[parseInt(i.toString(), 10)].cellIndexes.sort())) {\n                        break;\n                    }\n                }\n            }\n            rowIndexes.sort(function (a, b) { return a - b; });\n            if (i === rowCellIndxes.length) {\n                obj = { status: true, rowIndexes: rowIndexes, colIndexes: rowCellIndxes[0].cellIndexes };\n            }\n        }\n        return obj;\n    };\n    return Clipboard;\n}());\nexport { Clipboard };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}