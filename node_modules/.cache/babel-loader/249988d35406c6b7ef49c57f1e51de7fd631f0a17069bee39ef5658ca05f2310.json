{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar MDTable = /** @class */function () {\n  /**\n   * Constructor for creating the Formats plugin\n   *\n   * @param {IMDTable} options - specifies the options\n   * @hidden\n    */\n  function MDTable(options) {\n    extend(this, this, options, true);\n    this.selection = this.parent.markdownSelection;\n    this.addEventListener();\n  }\n  MDTable.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.MD_TABLE, this.createTable, this);\n    this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown, this);\n    this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n  };\n  MDTable.prototype.removeEventListener = function () {\n    this.parent.observer.off(CONSTANT.MD_TABLE, this.createTable);\n    this.parent.observer.off(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown);\n    this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n  };\n  /**\n   * markdown destroy method\n   *\n   * @returns {void}\n   * @hidden\n    */\n  MDTable.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  MDTable.prototype.onKeyDown = function (e) {\n    if (e.event.action === 'insert-table') {\n      e.item = e.value;\n      this.createTable(e);\n    }\n  };\n  MDTable.prototype.createTable = function (e) {\n    this.element = this.parent.element;\n    var start = this.element.selectionStart;\n    var end = this.element.selectionEnd;\n    var textAreaInitial = this.element.value;\n    this.locale = e;\n    this.selection.save(start, end);\n    this.restore(this.element.selectionStart, this.element.selectionEnd, null);\n    this.insertTable(start, end, textAreaInitial, e);\n  };\n  MDTable.prototype.getTable = function () {\n    var table = '';\n    table += this.textNonEmpty();\n    table += this.tableHeader(this.locale);\n    table += this.tableCell(this.locale);\n    return table;\n  };\n  MDTable.prototype.tableHeader = function (e) {\n    var text = '';\n    for (var i = 1; i <= 2; i++) {\n      text += '|';\n      for (var j = 1; j <= 2; j++) {\n        if (i === 1) {\n          text += e.item.headingText + ' ' + j + '|';\n        } else {\n          text += '---------|';\n        }\n      }\n      text += this.insertLine();\n    }\n    return text;\n  };\n  MDTable.prototype.tableCell = function (e) {\n    var text = '';\n    for (var i = 1; i <= 2; i++) {\n      text += '|';\n      for (var j = 1; j <= 2; j++) {\n        text += e.item.colText + ' ' + this.convertToLetters(i) + j + '|';\n      }\n      text += this.insertLine();\n    }\n    text += this.insertLine();\n    return text;\n  };\n  MDTable.prototype.insertLine = function () {\n    var dummyElement = document.createElement('div');\n    dummyElement.innerHTML = '\\n';\n    return dummyElement.textContent;\n  };\n  MDTable.prototype.insertTable = function (start, end, textAreaInitial, e) {\n    var parentText = this.selection.getSelectedParentPoints(this.element);\n    var lastLineSplit = parentText[parentText.length - 1].text.split(' ', 2);\n    var syntaxArr = this.getFormatTag();\n    // eslint-disable-next-line\n    var syntaxCount = 0;\n    if (lastLineSplit.length < 2) {\n      this.element.value = this.updateValue(this.getTable());\n      this.makeSelection(textAreaInitial, start, end);\n    } else {\n      if (this.ensureFormatApply(parentText[parentText.length - 1].text)) {\n        this.checkValid(start, end, this.getTable(), textAreaInitial, e, lastLineSplit, parentText, syntaxArr);\n      } else {\n        this.element.value = this.updateValue(this.getTable());\n        this.makeSelection(textAreaInitial, start, end);\n      }\n    }\n    this.restore(this.element.selectionStart, this.element.selectionEnd, e);\n  };\n  MDTable.prototype.makeSelection = function (textAreaInitial, start, end) {\n    end = start + (textAreaInitial.length > 0 ? 12 : 10); //end is added 12 or 10 because to make the table heading selected\n    start += textAreaInitial.length > 0 ? 3 : 1; // Start is added 3 or 1 because new lines are added when inserting table\n    this.selection.setSelection(this.element, start, end);\n  };\n  MDTable.prototype.getFormatTag = function () {\n    var syntaxFormatKey = Object.keys(this.syntaxTag.Formats);\n    var syntaxListKey = Object.keys(this.syntaxTag.List);\n    var syntaxArr = [];\n    for (var i = 0; i < syntaxFormatKey.length; i++) {\n      syntaxArr.push(this.syntaxTag.Formats[syntaxFormatKey[i]]);\n    }\n    for (var j = 0; j < syntaxListKey.length; j++) {\n      syntaxArr.push(this.syntaxTag.List[syntaxListKey[j]]);\n    }\n    return syntaxArr;\n  };\n  MDTable.prototype.ensureFormatApply = function (line) {\n    var formatTags = this.getFormatTag();\n    var formatSplitZero = line.trim().split(' ', 2)[0] + ' ';\n    for (var i = 0; i < formatTags.length; i++) {\n      if (formatSplitZero === formatTags[i] || /^[\\d.]+[ ]+$/.test(formatSplitZero)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  MDTable.prototype.ensureStartValid = function (firstLine, parentText) {\n    var firstLineSplit = parentText[0].text.split(' ', 2);\n    for (var i = firstLine + 1; i <= firstLine + firstLineSplit[0].length + 1; i++) {\n      if (this.element.selectionStart === i || this.element.selectionEnd === i) {\n        return false;\n      }\n    }\n    return true;\n  };\n  MDTable.prototype.ensureEndValid = function (lastLine, formatSplitLength) {\n    for (var i = lastLine + 1; i <= lastLine + formatSplitLength + 1; i++) {\n      if (this.element.selectionEnd === i) {\n        return false;\n      }\n    }\n    return true;\n  };\n  MDTable.prototype.updateValueWithFormat = function (formatSplit, text) {\n    var textApplyFormat = this.element.value.substring(this.element.selectionEnd, this.element.value.length);\n    text += textApplyFormat.replace(textApplyFormat, formatSplit[0] + ' ' + textApplyFormat);\n    return this.element.value.substr(0, this.element.selectionStart) + text;\n  };\n  MDTable.prototype.updateValue = function (text) {\n    return this.element.value.substr(0, this.element.selectionStart) + text + this.element.value.substr(this.element.selectionEnd, this.element.value.length);\n  };\n  MDTable.prototype.checkValid = function (start, end, text, textAreaInitial,\n  // eslint-disable-next-line\n  e, formatSplit, parentText, syntaxArr) {\n    if (this.ensureStartValid(parentText[0].start, parentText) && this.ensureEndValid(parentText[parentText.length - 1].start, formatSplit[0].length)) {\n      if (start === parentText[0].start) {\n        if (start !== end && end !== parentText[parentText.length - 1].end - 1) {\n          this.element.value = this.updateValueWithFormat(formatSplit, text);\n        } else {\n          this.element.value = this.updateValue(text);\n        }\n      } else if (end === parentText[parentText.length - 1].end - 1) {\n        this.element.value = this.updateValue(text);\n      } else {\n        this.element.value = this.updateValueWithFormat(formatSplit, text);\n      }\n      this.makeSelection(textAreaInitial, start, end);\n    }\n  };\n  MDTable.prototype.convertToLetters = function (rowNumber) {\n    var baseChar = 'A'.charCodeAt(0);\n    var letters = '';\n    do {\n      rowNumber -= 1;\n      letters = String.fromCharCode(baseChar + rowNumber % 26) + letters;\n      rowNumber = rowNumber / 26 >> 0;\n    } while (rowNumber > 0);\n    return letters;\n  };\n  MDTable.prototype.textNonEmpty = function () {\n    var emptyText = '';\n    if (this.isCursorBased() || this.isSelectionBased()) {\n      if (this.element.value.length > 0) {\n        emptyText += this.insertLine();\n        emptyText += this.insertLine(); // to append two new line when textarea having content.\n      }\n    }\n    return emptyText;\n  };\n  MDTable.prototype.isCursorBased = function () {\n    return this.element.selectionStart === this.element.selectionEnd;\n  };\n  MDTable.prototype.isSelectionBased = function () {\n    return this.element.selectionStart !== this.element.selectionEnd;\n  };\n  MDTable.prototype.restore = function (start, end, event) {\n    this.selection.save(start, end);\n    this.selection.restore(this.element);\n    if (event && event.callBack) {\n      event.callBack({\n        requestType: event.subCommand,\n        selectedText: this.selection.getSelectedText(this.element),\n        editorMode: 'Markdown',\n        event: event.event\n      });\n    }\n  };\n  return MDTable;\n}();\nexport { MDTable };","map":{"version":3,"names":["CONSTANT","extend","EVENTS","MDTable","options","selection","parent","markdownSelection","addEventListener","prototype","observer","on","MD_TABLE","createTable","KEY_DOWN_HANDLER","onKeyDown","INTERNAL_DESTROY","destroy","removeEventListener","off","e","event","action","item","value","element","start","selectionStart","end","selectionEnd","textAreaInitial","locale","save","restore","insertTable","getTable","table","textNonEmpty","tableHeader","tableCell","text","i","j","headingText","insertLine","colText","convertToLetters","dummyElement","document","createElement","innerHTML","textContent","parentText","getSelectedParentPoints","lastLineSplit","length","split","syntaxArr","getFormatTag","syntaxCount","updateValue","makeSelection","ensureFormatApply","checkValid","setSelection","syntaxFormatKey","Object","keys","syntaxTag","Formats","syntaxListKey","List","push","line","formatTags","formatSplitZero","trim","test","ensureStartValid","firstLine","firstLineSplit","ensureEndValid","lastLine","formatSplitLength","updateValueWithFormat","formatSplit","textApplyFormat","substring","replace","substr","rowNumber","baseChar","charCodeAt","letters","String","fromCharCode","emptyText","isCursorBased","isSelectionBased","callBack","requestType","subCommand","selectedText","getSelectedText","editorMode"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/plugin/table.js"],"sourcesContent":["import * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\n/**\n * Link internal component\n *\n * @hidden\n\n */\nvar MDTable = /** @class */ (function () {\n    /**\n     * Constructor for creating the Formats plugin\n     *\n     * @param {IMDTable} options - specifies the options\n     * @hidden\n\n     */\n    function MDTable(options) {\n        extend(this, this, options, true);\n        this.selection = this.parent.markdownSelection;\n        this.addEventListener();\n    }\n    MDTable.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.MD_TABLE, this.createTable, this);\n        this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown, this);\n        this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n    };\n    MDTable.prototype.removeEventListener = function () {\n        this.parent.observer.off(CONSTANT.MD_TABLE, this.createTable);\n        this.parent.observer.off(EVENTS.KEY_DOWN_HANDLER, this.onKeyDown);\n        this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n    };\n    /**\n     * markdown destroy method\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    MDTable.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    MDTable.prototype.onKeyDown = function (e) {\n        if (e.event.action === 'insert-table') {\n            e.item = e.value;\n            this.createTable(e);\n        }\n    };\n    MDTable.prototype.createTable = function (e) {\n        this.element = this.parent.element;\n        var start = this.element.selectionStart;\n        var end = this.element.selectionEnd;\n        var textAreaInitial = this.element.value;\n        this.locale = e;\n        this.selection.save(start, end);\n        this.restore(this.element.selectionStart, this.element.selectionEnd, null);\n        this.insertTable(start, end, textAreaInitial, e);\n    };\n    MDTable.prototype.getTable = function () {\n        var table = '';\n        table += this.textNonEmpty();\n        table += this.tableHeader(this.locale);\n        table += this.tableCell(this.locale);\n        return table;\n    };\n    MDTable.prototype.tableHeader = function (e) {\n        var text = '';\n        for (var i = 1; i <= 2; i++) {\n            text += '|';\n            for (var j = 1; j <= 2; j++) {\n                if (i === 1) {\n                    text += e.item.headingText + ' ' + j + '|';\n                }\n                else {\n                    text += '---------|';\n                }\n            }\n            text += this.insertLine();\n        }\n        return text;\n    };\n    MDTable.prototype.tableCell = function (e) {\n        var text = '';\n        for (var i = 1; i <= 2; i++) {\n            text += '|';\n            for (var j = 1; j <= 2; j++) {\n                text += e.item.colText + ' ' + this.convertToLetters(i) + j + '|';\n            }\n            text += this.insertLine();\n        }\n        text += this.insertLine();\n        return text;\n    };\n    MDTable.prototype.insertLine = function () {\n        var dummyElement = document.createElement('div');\n        dummyElement.innerHTML = '\\n';\n        return dummyElement.textContent;\n    };\n    MDTable.prototype.insertTable = function (start, end, textAreaInitial, e) {\n        var parentText = this.selection.getSelectedParentPoints(this.element);\n        var lastLineSplit = parentText[parentText.length - 1].text.split(' ', 2);\n        var syntaxArr = this.getFormatTag();\n        // eslint-disable-next-line\n        var syntaxCount = 0;\n        if (lastLineSplit.length < 2) {\n            this.element.value = this.updateValue(this.getTable());\n            this.makeSelection(textAreaInitial, start, end);\n        }\n        else {\n            if (this.ensureFormatApply(parentText[parentText.length - 1].text)) {\n                this.checkValid(start, end, this.getTable(), textAreaInitial, e, lastLineSplit, parentText, syntaxArr);\n            }\n            else {\n                this.element.value = this.updateValue(this.getTable());\n                this.makeSelection(textAreaInitial, start, end);\n            }\n        }\n        this.restore(this.element.selectionStart, this.element.selectionEnd, e);\n    };\n    MDTable.prototype.makeSelection = function (textAreaInitial, start, end) {\n        end = start + (textAreaInitial.length > 0 ? 12 : 10); //end is added 12 or 10 because to make the table heading selected\n        start += textAreaInitial.length > 0 ? 3 : 1; // Start is added 3 or 1 because new lines are added when inserting table\n        this.selection.setSelection(this.element, start, end);\n    };\n    MDTable.prototype.getFormatTag = function () {\n        var syntaxFormatKey = Object.keys(this.syntaxTag.Formats);\n        var syntaxListKey = Object.keys(this.syntaxTag.List);\n        var syntaxArr = [];\n        for (var i = 0; i < syntaxFormatKey.length; i++) {\n            syntaxArr.push(this.syntaxTag.Formats[syntaxFormatKey[i]]);\n        }\n        for (var j = 0; j < syntaxListKey.length; j++) {\n            syntaxArr.push(this.syntaxTag.List[syntaxListKey[j]]);\n        }\n        return syntaxArr;\n    };\n    MDTable.prototype.ensureFormatApply = function (line) {\n        var formatTags = this.getFormatTag();\n        var formatSplitZero = line.trim().split(' ', 2)[0] + ' ';\n        for (var i = 0; i < formatTags.length; i++) {\n            if (formatSplitZero === formatTags[i] || /^[\\d.]+[ ]+$/.test(formatSplitZero)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    MDTable.prototype.ensureStartValid = function (firstLine, parentText) {\n        var firstLineSplit = parentText[0].text.split(' ', 2);\n        for (var i = firstLine + 1; i <= firstLine + firstLineSplit[0].length + 1; i++) {\n            if (this.element.selectionStart === i || this.element.selectionEnd === i) {\n                return false;\n            }\n        }\n        return true;\n    };\n    MDTable.prototype.ensureEndValid = function (lastLine, formatSplitLength) {\n        for (var i = lastLine + 1; i <= lastLine + formatSplitLength + 1; i++) {\n            if (this.element.selectionEnd === i) {\n                return false;\n            }\n        }\n        return true;\n    };\n    MDTable.prototype.updateValueWithFormat = function (formatSplit, text) {\n        var textApplyFormat = this.element.value.substring(this.element.selectionEnd, this.element.value.length);\n        text += textApplyFormat.replace(textApplyFormat, (formatSplit[0] + ' ' + textApplyFormat));\n        return this.element.value.substr(0, this.element.selectionStart) + text;\n    };\n    MDTable.prototype.updateValue = function (text) {\n        return this.element.value.substr(0, this.element.selectionStart) + text +\n            this.element.value.substr(this.element.selectionEnd, this.element.value.length);\n    };\n    MDTable.prototype.checkValid = function (start, end, text, textAreaInitial, \n    // eslint-disable-next-line\n    e, formatSplit, parentText, syntaxArr) {\n        if (this.ensureStartValid(parentText[0].start, parentText) &&\n            this.ensureEndValid(parentText[parentText.length - 1].start, formatSplit[0].length)) {\n            if (start === parentText[0].start) {\n                if (start !== end && end !== (parentText[parentText.length - 1].end - 1)) {\n                    this.element.value = this.updateValueWithFormat(formatSplit, text);\n                }\n                else {\n                    this.element.value = this.updateValue(text);\n                }\n            }\n            else if (end === parentText[parentText.length - 1].end - 1) {\n                this.element.value = this.updateValue(text);\n            }\n            else {\n                this.element.value = this.updateValueWithFormat(formatSplit, text);\n            }\n            this.makeSelection(textAreaInitial, start, end);\n        }\n    };\n    MDTable.prototype.convertToLetters = function (rowNumber) {\n        var baseChar = ('A').charCodeAt(0);\n        var letters = '';\n        do {\n            rowNumber -= 1;\n            letters = String.fromCharCode(baseChar + (rowNumber % 26)) + letters;\n            rowNumber = (rowNumber / 26) >> 0;\n        } while (rowNumber > 0);\n        return letters;\n    };\n    MDTable.prototype.textNonEmpty = function () {\n        var emptyText = '';\n        if (this.isCursorBased() || this.isSelectionBased()) {\n            if (this.element.value.length > 0) {\n                emptyText += this.insertLine();\n                emptyText += this.insertLine(); // to append two new line when textarea having content.\n            }\n        }\n        return emptyText;\n    };\n    MDTable.prototype.isCursorBased = function () {\n        return this.element.selectionStart === this.element.selectionEnd;\n    };\n    MDTable.prototype.isSelectionBased = function () {\n        return this.element.selectionStart !== this.element.selectionEnd;\n    };\n    MDTable.prototype.restore = function (start, end, event) {\n        this.selection.save(start, end);\n        this.selection.restore(this.element);\n        if (event && event.callBack) {\n            event.callBack({\n                requestType: event.subCommand,\n                selectedText: this.selection.getSelectedText(this.element),\n                editorMode: 'Markdown',\n                event: event.event\n            });\n        }\n    };\n    return MDTable;\n}());\nexport { MDTable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}