{"ast":null,"code":"import { extend, isNullOrUndefined as isNOU, Browser, closest } from '@syncfusion/ej2-base';\nimport * as CONSTANT from '../base/constant';\nimport { updateUndoRedoStatus, isIDevice } from '../base/util';\nimport { KEY_DOWN, KEY_UP } from './../../common/constant';\n/**\n * Formatter\n *\n * @hidden\n\n */\nvar Formatter = /** @class */function () {\n  function Formatter() {}\n  /**\n   * To execute the command\n   *\n   * @param  {IRichTextEditor} self - specifies the self element.\n   * @param  {ActionBeginEventArgs} args - specifies the event arguments.\n   * @param  {MouseEvent|KeyboardEvent} event - specifies the keyboard event.\n   * @param  {IItemCollectionArgs} value - specifies the collection arguments\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.process = function (self, args, event, value) {\n    var _this = this;\n    var selection = self.contentModule.getDocument().getSelection();\n    var range = selection.rangeCount > 0 ? selection.getRangeAt(selection.rangeCount - 1) : null;\n    var saveSelection;\n    var newRange;\n    if (!isNOU(value) && !isNOU(value.selection)) {\n      newRange = value.selection.range;\n    }\n    var isKeyboardVideoInsert = !isNOU(value) && !isNOU(value.cssClass) && value.cssClass !== 'e-video-inline';\n    if (self.editorMode === 'HTML') {\n      if (!isNOU(args) && !isKeyboardVideoInsert) {\n        if (isNOU(args.name) || !isNOU(args.name) && args.name !== 'showDialog') {\n          if (newRange) {\n            saveSelection = this.editorManager.nodeSelection.save(newRange, self.contentModule.getDocument());\n          } else {\n            saveSelection = this.editorManager.nodeSelection.save(range, self.contentModule.getDocument());\n          }\n        }\n      }\n    }\n    if (!isNOU(args) && args.item.command && args.item.command !== 'Table' && args.item.command !== 'Actions' && args.item.command !== 'Links' && args.item.command !== 'Images' && args.item.command !== 'Files' && args.item.command !== 'Audios' && args.item.command !== 'Videos' && args.item.command !== 'EmojiPicker' && range && !(self.contentModule.getEditPanel().contains(this.getAncestorNode(range.commonAncestorContainer)) || self.contentModule.getEditPanel() === range.commonAncestorContainer || self.contentModule.getPanel() === range.commonAncestorContainer)) {\n      return;\n    }\n    if (!isNOU(args) && self.maxLength !== -1 && !isNOU(args.item.command)) {\n      var currentInsertContentLength = 0;\n      if (args.item.command === 'Links') {\n        currentInsertContentLength = value.text.length === 0 ? value.url.length : value.text.length;\n      }\n      if (args.item.command === 'Images' || args.item.command === 'Videos' || args.item.command === 'Table' || args.item.command === 'Files') {\n        currentInsertContentLength = 1;\n      }\n      var currentLength = self.getText().trim().replace(/(\\r\\n|\\n|\\r|\\t)/gm, '').replace(/\\u200B/g, '').length;\n      var selectionLength = self.getSelection().length;\n      var totalLength = currentLength - selectionLength + currentInsertContentLength;\n      if (!(self.maxLength === -1 || totalLength <= self.maxLength)) {\n        return;\n      }\n    }\n    if (isNOU(args)) {\n      var action_1 = event.action;\n      args = {};\n      var items = {\n        originalEvent: event,\n        cancel: false,\n        requestType: action_1 || event.key + 'Key',\n        itemCollection: value\n      };\n      extend(args, args, items, true);\n      if (action_1 !== 'tab' && action_1 !== 'enter' && action_1 !== 'space' && action_1 !== 'escape') {\n        if (self.editorMode === 'Markdown' && action_1 === 'insert-table') {\n          value = {\n            'headingText': self.localeObj.getConstant('TableHeadingText'),\n            'colText': self.localeObj.getConstant('TableColText')\n          };\n        }\n        self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n          if (actionBeginArgs.cancel) {\n            if (action_1 === 'paste' || action_1 === 'cut' || action_1 === 'copy') {\n              event.preventDefault();\n            }\n          }\n        });\n      }\n      if (!args.cancel) {\n        var isTableModule = isNOU(self.tableModule) ? true : self.tableModule ? self.tableModule.ensureInsideTableList : false;\n        if (event.which === 9 && isTableModule || event.which !== 9) {\n          if (event.which === 13 && self.editorMode === 'HTML') {\n            value = {\n              'enterAction': self.enterKey\n            };\n          }\n          this.editorManager.observer.notify(event.type === 'keydown' ? KEY_DOWN : KEY_UP, {\n            event: event,\n            callBack: this.onSuccess.bind(this, self),\n            value: value,\n            enterAction: self.enterKey\n          });\n        }\n      }\n    } else if (!isNOU(args) && args.item.command && args.item.subCommand && (args.item.command !== args.item.subCommand && args.item.command !== 'Font' && args.item.command !== 'Export' || (args.item.subCommand === 'FontName' || args.item.subCommand === 'FontSize') && args.name === 'dropDownSelect' || (args.item.subCommand === 'BackgroundColor' || args.item.subCommand === 'FontColor') && args.name === 'colorPickerChanged' || args.item.subCommand === 'FormatPainter' || args.item.subCommand === 'EmojiPicker')) {\n      extend(args, args, {\n        requestType: args.item.subCommand,\n        cancel: false,\n        itemCollection: value,\n        selectType: args.name\n      }, true);\n      self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n        if (!actionBeginArgs.cancel) {\n          var formatPainterCopy = !isNOU(actionBeginArgs.requestType) && actionBeginArgs.requestType === 'FormatPainter' && actionBeginArgs.name === 'format-copy';\n          var formatPainterPaste = !isNOU(actionBeginArgs.requestType) && actionBeginArgs.requestType === 'FormatPainter' && actionBeginArgs.name === 'format-paste';\n          if (_this.getUndoRedoStack().length === 0 && actionBeginArgs.item.command !== 'Links' && actionBeginArgs.item.command !== 'Images' && !formatPainterCopy || formatPainterPaste) {\n            _this.saveData();\n          }\n          self.isBlur = false;\n          var quickToolbarAction = !isNOU(event) && !isNOU(event.target) && (!isNOU(closest(event.target, '.e-rte-elements.e-dropdown-popup.e-rte-dropdown-popup.e-quick-dropdown.e-popup-open')) || !isNOU(closest(event.target, '.e-rte-elements.e-rte-quick-popup.e-popup-open')));\n          if (isNOU(saveSelection) || !quickToolbarAction && (isNOU(closest(saveSelection.range.startContainer.parentElement, '.e-img-caption')) ? true : !(closest(saveSelection.range.startContainer.parentElement, '.e-img-caption').getAttribute('contenteditable') === 'false')) && !(Browser.userAgent.indexOf('Firefox') !== -1)) {\n            self.contentModule.getEditPanel().focus();\n          }\n          if (self.editorMode === 'HTML' && !isKeyboardVideoInsert) {\n            if (isNOU(args.selectType) || !isNOU(args.selectType) && args.selectType !== 'showDialog') {\n              saveSelection.restore();\n            }\n          }\n          var command = actionBeginArgs.item.subCommand.toLocaleLowerCase();\n          if (command === 'image') {\n            value = actionBeginArgs.itemCollection;\n          }\n          if (command === 'paste' || command === 'cut' || command === 'copy') {\n            self.clipboardAction(command, event);\n          } else {\n            _this.editorManager.observer.notify(CONSTANT.checkUndo, {\n              subCommand: actionBeginArgs.item.subCommand\n            });\n            _this.editorManager.execCommand(actionBeginArgs.item.command, actionBeginArgs.item.subCommand, event, _this.onSuccess.bind(_this, self), actionBeginArgs.item.value, actionBeginArgs.item.subCommand === 'Pre' && actionBeginArgs.selectType === 'dropDownSelect' ? {\n              name: actionBeginArgs.selectType\n            } : value, '#' + self.getID() + ' iframe', self.enterKey);\n          }\n        }\n      });\n    }\n    if (isNOU(event) || event && event.action !== 'copy') {\n      this.enableUndo(self);\n    }\n  };\n  Formatter.prototype.getAncestorNode = function (node) {\n    node = node.nodeType === 3 ? node.parentNode : node;\n    return node;\n  };\n  /**\n   * onKeyHandler method\n   *\n   * @param {IRichTextEditor} self - specifies the self element.\n   * @param {KeyboardEvent} e - specifies the keyboard event.\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.onKeyHandler = function (self, e) {\n    var _this = this;\n    this.editorManager.observer.notify(KEY_UP, {\n      event: e,\n      callBack: function () {\n        self.notify(CONSTANT.contentChanged, {});\n        _this.enableUndo(self);\n      },\n      enterAction: self.enterKey\n    });\n  };\n  /**\n   * onSuccess method\n   *\n   * @param {IRichTextEditor} self - specifies the self element.\n   * @param {IMarkdownFormatterCallBack} events - specifies the event call back\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.onSuccess = function (self, events) {\n    self.notify(CONSTANT.contentChanged, {});\n    if (events && (isNOU(events.event) || events.event.action !== 'copy')) {\n      this.enableUndo(self);\n      self.notify(CONSTANT.execCommandCallBack, events);\n    }\n    self.trigger(CONSTANT.actionComplete, events, function (callbackArgs) {\n      self.setPlaceHolder();\n      if ((callbackArgs.requestType === 'Images' || callbackArgs.requestType === 'Links' || callbackArgs.requestType === 'Audios' || callbackArgs.requestType === 'Videos') && self.editorMode === 'HTML') {\n        var args = callbackArgs;\n        if (callbackArgs.requestType === 'Links' && callbackArgs.event && callbackArgs.event.type === 'keydown' && callbackArgs.event.keyCode === 32) {\n          return;\n        }\n        self.notify(CONSTANT.insertCompleted, {\n          args: args.event,\n          type: callbackArgs.requestType,\n          isNotify: true,\n          elements: args.elements\n        });\n      }\n      if (callbackArgs.requestType === 'VideosPlayPause') {\n        self.notify('editAreaClick', {\n          args: event\n        });\n      }\n      self.autoResize();\n    });\n  };\n  /**\n   * Save the data for undo and redo action.\n   *\n   * @param {KeyboardEvent} e - specifies the keyboard event.\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.saveData = function (e) {\n    this.editorManager.undoRedoManager.saveData(e);\n  };\n  /**\n   * getUndoStatus method\n   *\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.getUndoStatus = function () {\n    return this.editorManager.undoRedoManager.getUndoStatus();\n  };\n  /* eslint-disable */\n  /**\n   * getUndoRedoStack method\n   *\n   * @param {IHtmlUndoRedoData}  - specifies the redo data.\n   * @returns {void}\n   * @hidden\n    */\n  /* eslint-enable */\n  Formatter.prototype.getUndoRedoStack = function () {\n    return this.editorManager.undoRedoManager.undoRedoStack;\n  };\n  /**\n   * enableUndo method\n   *\n   * @param {IRichTextEditor} self - specifies the self element.\n   * @returns {void}\n   * @hidden\n    */\n  Formatter.prototype.enableUndo = function (self) {\n    var status = this.getUndoStatus();\n    if (self.inlineMode.enable && (!Browser.isDevice || isIDevice())) {\n      updateUndoRedoStatus(self.quickToolbarModule.inlineQTBar.quickTBarObj, status);\n    } else {\n      if (self.toolbarModule && self.toolbarModule.baseToolbar) {\n        updateUndoRedoStatus(self.toolbarModule.baseToolbar, status);\n      }\n    }\n  };\n  Formatter.prototype.beforeSlashMenuApply = function () {\n    this.editorManager.beforeSlashMenuApplyFormat();\n  };\n  return Formatter;\n}();\nexport { Formatter };","map":{"version":3,"names":["extend","isNullOrUndefined","isNOU","Browser","closest","CONSTANT","updateUndoRedoStatus","isIDevice","KEY_DOWN","KEY_UP","Formatter","prototype","process","self","args","event","value","_this","selection","contentModule","getDocument","getSelection","range","rangeCount","getRangeAt","saveSelection","newRange","isKeyboardVideoInsert","cssClass","editorMode","name","editorManager","nodeSelection","save","item","command","getEditPanel","contains","getAncestorNode","commonAncestorContainer","getPanel","maxLength","currentInsertContentLength","text","length","url","currentLength","getText","trim","replace","selectionLength","totalLength","action_1","action","items","originalEvent","cancel","requestType","key","itemCollection","localeObj","getConstant","trigger","actionBegin","actionBeginArgs","preventDefault","isTableModule","tableModule","ensureInsideTableList","which","enterKey","observer","notify","type","callBack","onSuccess","bind","enterAction","subCommand","selectType","formatPainterCopy","formatPainterPaste","getUndoRedoStack","saveData","isBlur","quickToolbarAction","target","startContainer","parentElement","getAttribute","userAgent","indexOf","focus","restore","toLocaleLowerCase","clipboardAction","checkUndo","execCommand","getID","enableUndo","node","nodeType","parentNode","onKeyHandler","e","contentChanged","events","execCommandCallBack","actionComplete","callbackArgs","setPlaceHolder","keyCode","insertCompleted","isNotify","elements","autoResize","undoRedoManager","getUndoStatus","undoRedoStack","status","inlineMode","enable","isDevice","quickToolbarModule","inlineQTBar","quickTBarObj","toolbarModule","baseToolbar","beforeSlashMenuApply","beforeSlashMenuApplyFormat"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/formatter/formatter.js"],"sourcesContent":["import { extend, isNullOrUndefined as isNOU, Browser, closest } from '@syncfusion/ej2-base';\nimport * as CONSTANT from '../base/constant';\nimport { updateUndoRedoStatus, isIDevice } from '../base/util';\nimport { KEY_DOWN, KEY_UP } from './../../common/constant';\n/**\n * Formatter\n *\n * @hidden\n\n */\nvar Formatter = /** @class */ (function () {\n    function Formatter() {\n    }\n    /**\n     * To execute the command\n     *\n     * @param  {IRichTextEditor} self - specifies the self element.\n     * @param  {ActionBeginEventArgs} args - specifies the event arguments.\n     * @param  {MouseEvent|KeyboardEvent} event - specifies the keyboard event.\n     * @param  {IItemCollectionArgs} value - specifies the collection arguments\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.process = function (self, args, event, value) {\n        var _this = this;\n        var selection = self.contentModule.getDocument().getSelection();\n        var range = (selection.rangeCount > 0) ? selection.getRangeAt(selection.rangeCount - 1) : null;\n        var saveSelection;\n        var newRange;\n        if (!isNOU(value) && !isNOU(value.selection)) {\n            newRange = value.selection.range;\n        }\n        var isKeyboardVideoInsert = (!isNOU(value) && !isNOU(value.cssClass) &&\n            value.cssClass !== 'e-video-inline');\n        if (self.editorMode === 'HTML') {\n            if (!isNOU(args) && !isKeyboardVideoInsert) {\n                if (isNOU(args.name) || (!isNOU(args.name) && args.name !== 'showDialog')) {\n                    if (newRange) {\n                        saveSelection = this.editorManager.nodeSelection.save(newRange, self.contentModule.getDocument());\n                    }\n                    else {\n                        saveSelection = this.editorManager.nodeSelection.save(range, self.contentModule.getDocument());\n                    }\n                }\n            }\n        }\n        if (!isNOU(args)\n            && args.item.command\n            && args.item.command !== 'Table'\n            && args.item.command !== 'Actions'\n            && args.item.command !== 'Links'\n            && args.item.command !== 'Images'\n            && args.item.command !== 'Files'\n            && args.item.command !== 'Audios'\n            && args.item.command !== 'Videos'\n            && args.item.command !== 'EmojiPicker'\n            && range\n            && !(self.contentModule.getEditPanel().contains(this.getAncestorNode(range.commonAncestorContainer))\n                || self.contentModule.getEditPanel() === range.commonAncestorContainer\n                || self.contentModule.getPanel() === range.commonAncestorContainer)) {\n            return;\n        }\n        if (!isNOU(args) && self.maxLength !== -1 && !isNOU(args.item.command)) {\n            var currentInsertContentLength = 0;\n            if (args.item.command === 'Links') {\n                currentInsertContentLength = value.text.length === 0 ? value.url.length : value.text.length;\n            }\n            if (args.item.command === 'Images' || args.item.command === 'Videos' || args.item.command === 'Table' || args.item.command === 'Files') {\n                currentInsertContentLength = 1;\n            }\n            var currentLength = self.getText().trim().replace(/(\\r\\n|\\n|\\r|\\t)/gm, '').replace(/\\u200B/g, '').length;\n            var selectionLength = self.getSelection().length;\n            var totalLength = (currentLength - selectionLength) + currentInsertContentLength;\n            if (!(self.maxLength === -1 || totalLength <= self.maxLength)) {\n                return;\n            }\n        }\n        if (isNOU(args)) {\n            var action_1 = event.action;\n            args = {};\n            var items = {\n                originalEvent: event, cancel: false,\n                requestType: action_1 || (event.key + 'Key'),\n                itemCollection: value\n            };\n            extend(args, args, items, true);\n            if (action_1 !== 'tab' && action_1 !== 'enter' && action_1 !== 'space' && action_1 !== 'escape') {\n                if (self.editorMode === 'Markdown' && action_1 === 'insert-table') {\n                    value = {\n                        'headingText': self.localeObj.getConstant('TableHeadingText'),\n                        'colText': self.localeObj.getConstant('TableColText')\n                    };\n                }\n                self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n                    if (actionBeginArgs.cancel) {\n                        if (action_1 === 'paste' || action_1 === 'cut' || action_1 === 'copy') {\n                            event.preventDefault();\n                        }\n                    }\n                });\n            }\n            if (!args.cancel) {\n                var isTableModule = isNOU(self.tableModule) ? true : self.tableModule ?\n                    self.tableModule.ensureInsideTableList : false;\n                if ((event.which === 9 && isTableModule) || event.which !== 9) {\n                    if (event.which === 13 && self.editorMode === 'HTML') {\n                        value = {\n                            'enterAction': self.enterKey\n                        };\n                    }\n                    this.editorManager.observer.notify((event.type === 'keydown' ? KEY_DOWN : KEY_UP), {\n                        event: event,\n                        callBack: this.onSuccess.bind(this, self),\n                        value: value,\n                        enterAction: self.enterKey\n                    });\n                }\n            }\n        }\n        else if (!isNOU(args) && args.item.command && args.item.subCommand && ((args.item.command !== args.item.subCommand\n            && args.item.command !== 'Font' && args.item.command !== 'Export')\n            || ((args.item.subCommand === 'FontName' || args.item.subCommand === 'FontSize') && args.name === 'dropDownSelect')\n            || ((args.item.subCommand === 'BackgroundColor' || args.item.subCommand === 'FontColor')\n                && args.name === 'colorPickerChanged') || args.item.subCommand === 'FormatPainter' || args.item.subCommand === 'EmojiPicker')) {\n            extend(args, args, { requestType: args.item.subCommand, cancel: false, itemCollection: value, selectType: args.name }, true);\n            self.trigger(CONSTANT.actionBegin, args, function (actionBeginArgs) {\n                if (!actionBeginArgs.cancel) {\n                    var formatPainterCopy = !isNOU(actionBeginArgs.requestType) && actionBeginArgs.requestType === 'FormatPainter' && actionBeginArgs.name === 'format-copy';\n                    var formatPainterPaste = !isNOU(actionBeginArgs.requestType) && actionBeginArgs.requestType === 'FormatPainter' && actionBeginArgs.name === 'format-paste';\n                    if ((_this.getUndoRedoStack().length === 0 && actionBeginArgs.item.command !== 'Links' && actionBeginArgs.item.command !== 'Images' && !formatPainterCopy)\n                        || formatPainterPaste) {\n                        _this.saveData();\n                    }\n                    self.isBlur = false;\n                    var quickToolbarAction = !isNOU(event) && !isNOU(event.target) && (!isNOU(closest(event.target, '.e-rte-elements.e-dropdown-popup.e-rte-dropdown-popup.e-quick-dropdown.e-popup-open')) || !isNOU(closest(event.target, '.e-rte-elements.e-rte-quick-popup.e-popup-open')));\n                    if (isNOU(saveSelection) || (!quickToolbarAction && (isNOU(closest(saveSelection.range.startContainer.parentElement, '.e-img-caption')) ? true : !(closest(saveSelection.range.startContainer.parentElement, '.e-img-caption').getAttribute('contenteditable') === 'false'))) && !(Browser.userAgent.indexOf('Firefox') !== -1)) {\n                        self.contentModule.getEditPanel().focus();\n                    }\n                    if (self.editorMode === 'HTML' && !isKeyboardVideoInsert) {\n                        if (isNOU(args.selectType) || (!isNOU(args.selectType) && args.selectType !== 'showDialog')) {\n                            saveSelection.restore();\n                        }\n                    }\n                    var command = actionBeginArgs.item.subCommand.toLocaleLowerCase();\n                    if (command === 'image') {\n                        value = actionBeginArgs.itemCollection;\n                    }\n                    if (command === 'paste' || command === 'cut' || command === 'copy') {\n                        self.clipboardAction(command, event);\n                    }\n                    else {\n                        _this.editorManager.observer.notify(CONSTANT.checkUndo, { subCommand: actionBeginArgs.item.subCommand });\n                        _this.editorManager.execCommand(actionBeginArgs.item.command, actionBeginArgs.item.subCommand, event, _this.onSuccess.bind(_this, self), actionBeginArgs.item.value, actionBeginArgs.item.subCommand === 'Pre' && actionBeginArgs.selectType === 'dropDownSelect' ?\n                            { name: actionBeginArgs.selectType } : value, ('#' + self.getID() + ' iframe'), self.enterKey);\n                    }\n                }\n            });\n        }\n        if ((isNOU(event) || event && event.action !== 'copy')) {\n            this.enableUndo(self);\n        }\n    };\n    Formatter.prototype.getAncestorNode = function (node) {\n        node = node.nodeType === 3 ? node.parentNode : node;\n        return node;\n    };\n    /**\n     * onKeyHandler method\n     *\n     * @param {IRichTextEditor} self - specifies the self element.\n     * @param {KeyboardEvent} e - specifies the keyboard event.\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.onKeyHandler = function (self, e) {\n        var _this = this;\n        this.editorManager.observer.notify(KEY_UP, {\n            event: e, callBack: function () {\n                self.notify(CONSTANT.contentChanged, {});\n                _this.enableUndo(self);\n            },\n            enterAction: self.enterKey\n        });\n    };\n    /**\n     * onSuccess method\n     *\n     * @param {IRichTextEditor} self - specifies the self element.\n     * @param {IMarkdownFormatterCallBack} events - specifies the event call back\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.onSuccess = function (self, events) {\n        self.notify(CONSTANT.contentChanged, {});\n        if (events && (isNOU(events.event) || events.event.action !== 'copy')) {\n            this.enableUndo(self);\n            self.notify(CONSTANT.execCommandCallBack, events);\n        }\n        self.trigger(CONSTANT.actionComplete, events, function (callbackArgs) {\n            self.setPlaceHolder();\n            if ((callbackArgs.requestType === 'Images' || callbackArgs.requestType === 'Links' || callbackArgs.requestType === 'Audios' || callbackArgs.requestType === 'Videos') && self.editorMode === 'HTML') {\n                var args = callbackArgs;\n                if (callbackArgs.requestType === 'Links' && callbackArgs.event &&\n                    callbackArgs.event.type === 'keydown' &&\n                    callbackArgs.event.keyCode === 32) {\n                    return;\n                }\n                self.notify(CONSTANT.insertCompleted, {\n                    args: args.event, type: callbackArgs.requestType, isNotify: true,\n                    elements: args.elements\n                });\n            }\n            if (callbackArgs.requestType === 'VideosPlayPause') {\n                self.notify('editAreaClick', { args: event });\n            }\n            self.autoResize();\n        });\n    };\n    /**\n     * Save the data for undo and redo action.\n     *\n     * @param {KeyboardEvent} e - specifies the keyboard event.\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.saveData = function (e) {\n        this.editorManager.undoRedoManager.saveData(e);\n    };\n    /**\n     * getUndoStatus method\n     *\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.getUndoStatus = function () {\n        return this.editorManager.undoRedoManager.getUndoStatus();\n    };\n    /* eslint-disable */\n    /**\n     * getUndoRedoStack method\n     *\n     * @param {IHtmlUndoRedoData}  - specifies the redo data.\n     * @returns {void}\n     * @hidden\n\n     */\n    /* eslint-enable */\n    Formatter.prototype.getUndoRedoStack = function () {\n        return this.editorManager.undoRedoManager.undoRedoStack;\n    };\n    /**\n     * enableUndo method\n     *\n     * @param {IRichTextEditor} self - specifies the self element.\n     * @returns {void}\n     * @hidden\n\n     */\n    Formatter.prototype.enableUndo = function (self) {\n        var status = this.getUndoStatus();\n        if (self.inlineMode.enable && (!Browser.isDevice || isIDevice())) {\n            updateUndoRedoStatus(self.quickToolbarModule.inlineQTBar.quickTBarObj, status);\n        }\n        else {\n            if (self.toolbarModule && self.toolbarModule.baseToolbar) {\n                updateUndoRedoStatus(self.toolbarModule.baseToolbar, status);\n            }\n        }\n    };\n    Formatter.prototype.beforeSlashMenuApply = function () {\n        this.editorManager.beforeSlashMenuApplyFormat();\n    };\n    return Formatter;\n}());\nexport { Formatter };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}