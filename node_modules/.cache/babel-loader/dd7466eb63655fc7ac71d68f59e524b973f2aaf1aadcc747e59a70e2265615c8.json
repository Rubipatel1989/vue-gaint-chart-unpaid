{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-row\"\n};\nconst _hoisted_2 = {\n  class: \"task-name\"\n};\nconst _hoisted_3 = {\n  class: \"task-bars\"\n};\nconst _hoisted_4 = {\n  class: \"task-label\",\n  style: {\n    \"padding\": \"10px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString($props.task.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"text-center\",\n    style: _normalizeStyle($options.barStyle)\n  }, [_createElementVNode(\"span\", _hoisted_4, _toDisplayString($props.task.name), 1 /* TEXT */)], 4 /* STYLE */)])]);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$props","task","name","_hoisted_3","_normalizeStyle","$options","barStyle","_hoisted_4"],"sources":["/var/www/vue/vue-gantt-chart/src/components/TaskRow.vue"],"sourcesContent":["<template>\n       <div class=\"task-row\">\n              <div class=\"task-name\">{{ task.name }}</div>\n              <div class=\"task-bars\">\n                     <div class=\"text-center\" :style=\"barStyle\">\n                            <span class=\"task-label\"  style=\"padding:10px\">{{ task.name }}</span>\n                     </div>\n              </div>\n       </div>\n</template>\n\n<script>\nexport default {\n       name: 'TaskRow',\n       props: {\n              task: Object,\n              dates: Array,\n       },\n       computed: {\n              barStyle() {\n                     const startIndex = this.dates.findIndex(\n                            (date) => date.toISOString().split(\"T\")[0] === this.task.start\n                     );\n                     const endIndex = this.dates.findIndex(\n                            (date) => date.toISOString().split(\"T\")[0] === this.task.end\n                     );\n                     const width = (endIndex - startIndex + 1) * 40; // 40px per day\n                     const left = startIndex * 40; // Offset from the start\n                     return {\n                            width: `${width}px`,\n                            left: `${left}px`,\n                            backgroundColor: \"lightgreen\",\n                            height: \"20px\",\n                            position: \"absolute\",\n                     };\n              }\n\n\n       },\n};\n</script>\n\n<style>\n.task-row {\n       display: flex;\n       align-items: center;\n       border-bottom: 1px solid #ccc;\n       height: 50px;\n}\n\n.task-name {\n       width: 100px;\n       text-align: left;\n       padding-left: 10px;\n       border-right: 1px solid #ccc;\n}\n\n.task-bars {\n       position: relative;\n       flex-grow: 1;\n       /* Takes the remaining width */\n       height: 20px;\n       /* Match the bar height */\n}\n</style>"],"mappings":";;EACYA,KAAK,EAAC;AAAU;;EACTA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAW;;EAEFA,KAAK,EAAC,YAAY;EAAEC,KAAoB,EAApB;IAAA;EAAA;;;uBAJ/CC,mBAAA,CAOM,OAPNC,UAOM,GANCC,mBAAA,CAA4C,OAA5CC,UAA4C,EAAAC,gBAAA,CAAlBC,MAAA,CAAAC,IAAI,CAACC,IAAI,kBACnCL,mBAAA,CAIM,OAJNM,UAIM,GAHCN,mBAAA,CAEM;IAFDJ,KAAK,EAAC,aAAa;IAAEC,KAAK,EAJpDU,eAAA,CAIsDC,QAAA,CAAAC,QAAQ;MAClCT,mBAAA,CAAqE,QAArEU,UAAqE,EAAAR,gBAAA,CAAnBC,MAAA,CAAAC,IAAI,CAACC,IAAI,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}