{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nconst _hoisted_3 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nconst _hoisted_4 = [\"x1\", \"y1\", \"x2\", \"y2\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"svg\", {\n    class: \"gantt-elastic__grid-lines-wrapper\",\n    style: _normalizeStyle({\n      ...$options.root.style['grid-lines-wrapper']\n    }),\n    ref: \"chart\",\n    x: \"0\",\n    y: \"0\",\n    width: $options.root.state.options.width,\n    height: $options.root.state.options.allVisibleTasksHeight,\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, [_createElementVNode(\"g\", {\n    class: \"gantt-elastic__grid-lines\",\n    style: _normalizeStyle({\n      ...$options.root.style['grid-lines']\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.horizontalLines, line => {\n    return _openBlock(), _createElementBlock(\"line\", {\n      class: \"gantt-elastic__grid-line-horizontal\",\n      style: _normalizeStyle({\n        ...$options.root.style['grid-line-horizontal']\n      }),\n      key: line.key,\n      x1: line.x1,\n      y1: line.y1,\n      x2: line.x2,\n      y2: line.y2\n    }, null, 12 /* STYLE, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.verticalLines, line => {\n    return _openBlock(), _createElementBlock(\"line\", {\n      class: \"gantt-elastic__grid-line-vertical\",\n      style: _normalizeStyle({\n        ...$options.root.style['grid-line-vertical']\n      }),\n      key: line.key,\n      x1: line.x1,\n      y1: line.y1,\n      x2: line.x2,\n      y2: line.y2\n    }, null, 12 /* STYLE, PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"line\", {\n    class: \"gantt-elastic__grid-line-time\",\n    style: _normalizeStyle({\n      ...$options.root.style['grid-line-time']\n    }),\n    x1: $options.timeLinePosition.x,\n    y1: $options.timeLinePosition.y1,\n    x2: $options.timeLinePosition.x,\n    y2: $options.timeLinePosition.y2\n  }, null, 12 /* STYLE, PROPS */, _hoisted_4)], 4 /* STYLE */)], 12 /* STYLE, PROPS */, _hoisted_1);\n}","map":{"version":3,"names":["_createElementBlock","class","style","_normalizeStyle","$options","root","ref","x","y","width","state","options","height","allVisibleTasksHeight","xmlns","_createElementVNode","_Fragment","_renderList","horizontalLines","line","key","x1","y1","x2","y2","_hoisted_2","verticalLines","_hoisted_3","timeLinePosition","_hoisted_4","_hoisted_1"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Chart/Grid.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview Grid component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <svg\n    class=\"gantt-elastic__grid-lines-wrapper\"\n    :style=\"{ ...root.style['grid-lines-wrapper'] }\"\n    ref=\"chart\"\n    x=\"0\"\n    y=\"0\"\n    :width=\"root.state.options.width\"\n    :height=\"root.state.options.allVisibleTasksHeight\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g class=\"gantt-elastic__grid-lines\" :style=\"{ ...root.style['grid-lines'] }\">\n      <line\n        class=\"gantt-elastic__grid-line-horizontal\"\n        :style=\"{ ...root.style['grid-line-horizontal'] }\"\n        v-for=\"line in horizontalLines\"\n        :key=\"line.key\"\n        :x1=\"line.x1\"\n        :y1=\"line.y1\"\n        :x2=\"line.x2\"\n        :y2=\"line.y2\"\n      ></line>\n      <line\n        class=\"gantt-elastic__grid-line-vertical\"\n        :style=\"{ ...root.style['grid-line-vertical'] }\"\n        v-for=\"line in verticalLines\"\n        :key=\"line.key\"\n        :x1=\"line.x1\"\n        :y1=\"line.y1\"\n        :x2=\"line.x2\"\n        :y2=\"line.y2\"\n      ></line>\n      <line\n        class=\"gantt-elastic__grid-line-time\"\n        :style=\"{ ...root.style['grid-line-time'] }\"\n        :x1=\"timeLinePosition.x\"\n        :y1=\"timeLinePosition.y1\"\n        :x2=\"timeLinePosition.x\"\n        :y2=\"timeLinePosition.y2\"\n      ></line>\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {\n  name: 'Grid',\n  inject: ['root'],\n  data() {\n    return {};\n  },\n  /**\n   * Created\n   */\n  created() {\n    this.root.$on('recenterPosition', this.recenterPosition);\n  },\n\n  /**\n   * Mounted\n   */\n  mounted() {\n    this.$nextTick(() => {\n      this.$nextTick(() => {\n        // because of stupid slider :/\n        this.root.scrollToTime(this.timeLinePosition.time);\n      });\n    });\n  },\n\n  methods: {\n    /**\n     * Recenter position - go to current time line\n     */\n    recenterPosition() {\n      this.root.scrollToTime(this.timeLinePosition.time);\n    }\n  },\n\n  computed: {\n    /**\n     * Generate vertical lines of the grid\n     *\n     * @returns {array}\n     */\n    verticalLines() {\n      let lines = [];\n      const state = this.root.state;\n      state.options.times.steps.forEach(step => {\n        if (this.root.isInsideViewPort(step.offset.px, 1)) {\n          lines.push({\n            key: step.time,\n            x1: step.offset.px,\n            y1: 0,\n            x2: step.offset.px,\n            y2:\n              state.tasks.length * (state.options.row.height + state.options.chart.grid.horizontal.gap * 2) +\n              this.root.style['grid-line-vertical']['stroke-width']\n          });\n        }\n      });\n      return lines;\n    },\n\n    /**\n     * Generate horizontal lines of the grid\n     *\n     * @returns {array}\n     */\n    horizontalLines() {\n      let lines = [];\n      const state = this.root.state.options;\n      let tasks = this.root.visibleTasks;\n      for (let index = 0, len = tasks.length; index <= len; index++) {\n        const y =\n          index * (state.row.height + state.chart.grid.horizontal.gap * 2) +\n          this.root.style['grid-line-vertical']['stroke-width'] / 2;\n        lines.push({\n          key: 'hl' + index,\n          x1: 0,\n          y1: y,\n          x2: '100%',\n          y2: y\n        });\n      }\n      return lines;\n    },\n\n    /**\n     * Check if specified line is inside viewport (visible)\n     *\n     * @returns {function}\n     */\n    inViewPort() {\n      return line => {\n        const state = this.root.state.options;\n        return line.x1 >= state.scroll.chart.left && line.x1 <= state.scroll.chart.right;\n      };\n    },\n\n    /**\n     * Get current time line position\n     *\n     * @returns {object}\n     */\n    timeLinePosition() {\n      const d = new Date();\n      const current = d.getTime();\n      const currentOffset = this.root.timeToPixelOffsetX(current);\n      const timeLine = {\n        x: 0,\n        y1: 0,\n        y2: '100%',\n        dateTime: '',\n        time: current\n      };\n      timeLine.x = currentOffset;\n      timeLine.dateTime = d.toLocaleDateString();\n      return timeLine;\n    }\n  }\n};\n</script>\n"],"mappings":";mBAAA;mBAAA;mBAAA;mBAAA;;uBASEA,mBAAA,CAwCM;IAvCJC,KAAK,EAAC,mCAAmC;IACxCC,KAAK,EAXVC,eAAA;MAAA,GAWiBC,QAAA,CAAAC,IAAI,CAACH,KAAK;IAAA;IACvBI,GAAG,EAAC,OAAO;IACXC,CAAC,EAAC,GAAG;IACLC,CAAC,EAAC,GAAG;IACJC,KAAK,EAAEL,QAAA,CAAAC,IAAI,CAACK,KAAK,CAACC,OAAO,CAACF,KAAK;IAC/BG,MAAM,EAAER,QAAA,CAAAC,IAAI,CAACK,KAAK,CAACC,OAAO,CAACE,qBAAqB;IACjDC,KAAK,EAAC;MAENC,mBAAA,CA6BI;IA7BDd,KAAK,EAAC,2BAA2B;IAAEC,KAAK,EAnB/CC,eAAA;MAAA,GAmBsDC,QAAA,CAAAC,IAAI,CAACH,KAAK;IAAA;yBAC1DF,mBAAA,CASQgB,SAAA,QA7BdC,WAAA,CAuBuBb,QAAA,CAAAc,eAAe,EAAvBC,IAAI;yBAHbnB,mBAAA,CASQ;MARNC,KAAK,EAAC,qCAAqC;MAC1CC,KAAK,EAtBdC,eAAA;QAAA,GAsBqBC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAA;MAEtBkB,GAAG,EAAED,IAAI,CAACC,GAAG;MACbC,EAAE,EAAEF,IAAI,CAACE,EAAE;MACXC,EAAE,EAAEH,IAAI,CAACG,EAAE;MACXC,EAAE,EAAEJ,IAAI,CAACI,EAAE;MACXC,EAAE,EAAEL,IAAI,CAACK;oCA5BlBC,UAAA;qDA8BMzB,mBAAA,CASQgB,SAAA,QAvCdC,WAAA,CAiCuBb,QAAA,CAAAsB,aAAa,EAArBP,IAAI;yBAHbnB,mBAAA,CASQ;MARNC,KAAK,EAAC,mCAAmC;MACxCC,KAAK,EAhCdC,eAAA;QAAA,GAgCqBC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAA;MAEtBkB,GAAG,EAAED,IAAI,CAACC,GAAG;MACbC,EAAE,EAAEF,IAAI,CAACE,EAAE;MACXC,EAAE,EAAEH,IAAI,CAACG,EAAE;MACXC,EAAE,EAAEJ,IAAI,CAACI,EAAE;MACXC,EAAE,EAAEL,IAAI,CAACK;oCAtClBG,UAAA;kCAwCMZ,mBAAA,CAOQ;IANNd,KAAK,EAAC,+BAA+B;IACpCC,KAAK,EA1CdC,eAAA;MAAA,GA0CqBC,QAAA,CAAAC,IAAI,CAACH,KAAK;IAAA;IACtBmB,EAAE,EAAEjB,QAAA,CAAAwB,gBAAgB,CAACrB,CAAC;IACtBe,EAAE,EAAElB,QAAA,CAAAwB,gBAAgB,CAACN,EAAE;IACvBC,EAAE,EAAEnB,QAAA,CAAAwB,gBAAgB,CAACrB,CAAC;IACtBiB,EAAE,EAAEpB,QAAA,CAAAwB,gBAAgB,CAACJ;kCA9C9BK,UAAA,E,0CAAAC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}