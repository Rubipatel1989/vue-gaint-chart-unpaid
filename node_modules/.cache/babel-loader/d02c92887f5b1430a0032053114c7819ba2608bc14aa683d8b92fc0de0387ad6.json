{"ast":null,"code":"/**\n * @fileoverview Task mixin\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n\nexport default {\n  computed: {\n    /**\n     * Get view box\n     *\n     * @returns {string}\n     */\n    getViewBox() {\n      const task = this.task;\n      return `0 0 ${task.width} ${task.height}`;\n    },\n    /**\n     * Get group transform\n     *\n     * @returns {string}\n     */\n    getGroupTransform() {\n      return `translate(${this.task.x} ${this.task.y})`;\n    },\n    /**\n     * Should we display expander?\n     *\n     * @returns {boolean}\n     */\n    displayExpander() {\n      const expander = this.root.state.options.chart.expander;\n      return expander.display || expander.displayIfTaskListHidden && !this.root.state.options.taskList.display;\n    }\n  },\n  methods: {\n    /**\n     * Emit event\n     *\n     * @param {string} eventName\n     * @param {Event} event\n     */\n    emitEvent(eventName, event) {\n      if (!this.root.state.options.scroll.scrolling) {\n        this.root.$emit(`chart-${this.task.type}-${eventName}`, {\n          event,\n          data: this.task\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["computed","getViewBox","task","width","height","getGroupTransform","x","y","displayExpander","expander","root","state","options","chart","display","displayIfTaskListHidden","taskList","methods","emitEvent","eventName","event","scroll","scrolling","$emit","type","data"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Chart/Row/Task.mixin.js"],"sourcesContent":["/**\n * @fileoverview Task mixin\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n\nexport default {\n  computed: {\n    /**\n     * Get view box\n     *\n     * @returns {string}\n     */\n    getViewBox() {\n      const task = this.task;\n      return `0 0 ${task.width} ${task.height}`;\n    },\n\n    /**\n     * Get group transform\n     *\n     * @returns {string}\n     */\n    getGroupTransform() {\n      return `translate(${this.task.x} ${this.task.y})`;\n    },\n\n    /**\n     * Should we display expander?\n     *\n     * @returns {boolean}\n     */\n    displayExpander() {\n      const expander = this.root.state.options.chart.expander;\n      return expander.display || (expander.displayIfTaskListHidden && !this.root.state.options.taskList.display);\n    }\n  },\n  methods: {\n    /**\n     * Emit event\n     *\n     * @param {string} eventName\n     * @param {Event} event\n     */\n    emitEvent(eventName, event) {\n      if (!this.root.state.options.scroll.scrolling) {\n        this.root.$emit(`chart-${this.task.type}-${eventName}`, { event, data: this.task });\n      }\n    }\n  }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe;EACbA,QAAQ,EAAE;IACR;AACJ;AACA;AACA;AACA;IACIC,UAAUA,CAAA,EAAG;MACX,MAAMC,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,OAAO,OAAOA,IAAI,CAACC,KAAK,IAAID,IAAI,CAACE,MAAM,EAAE;IAC3C,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,aAAa,IAAI,CAACH,IAAI,CAACI,CAAC,IAAI,IAAI,CAACJ,IAAI,CAACK,CAAC,GAAG;IACnD,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIC,eAAeA,CAAA,EAAG;MAChB,MAAMC,QAAQ,GAAG,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAACJ,QAAQ;MACvD,OAAOA,QAAQ,CAACK,OAAO,IAAKL,QAAQ,CAACM,uBAAuB,IAAI,CAAC,IAAI,CAACL,IAAI,CAACC,KAAK,CAACC,OAAO,CAACI,QAAQ,CAACF,OAAQ;IAC5G;EACF,CAAC;EACDG,OAAO,EAAE;IACP;AACJ;AACA;AACA;AACA;AACA;IACIC,SAASA,CAACC,SAAS,EAAEC,KAAK,EAAE;MAC1B,IAAI,CAAC,IAAI,CAACV,IAAI,CAACC,KAAK,CAACC,OAAO,CAACS,MAAM,CAACC,SAAS,EAAE;QAC7C,IAAI,CAACZ,IAAI,CAACa,KAAK,CAAC,SAAS,IAAI,CAACrB,IAAI,CAACsB,IAAI,IAAIL,SAAS,EAAE,EAAE;UAAEC,KAAK;UAAEK,IAAI,EAAE,IAAI,CAACvB;QAAK,CAAC,CAAC;MACrF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}