{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nexport default {\n  name: 'Expander',\n  inject: ['root'],\n  props: ['tasks', 'options', 'type'],\n  data() {\n    const border = 0.5;\n    return {\n      border,\n      borderStyle: {\n        'stroke-width': border\n      },\n      lineOffset: 5\n    };\n  },\n  computed: {\n    style() {\n      if (this.type !== 'taskList') {\n        return {};\n      }\n      const margin = this.root.state.options.taskList.expander.margin;\n      const padding = this.tasks[0].parents.length * this.root.state.options.taskList.expander.padding;\n      return {\n        'padding-left': padding + margin + 'px',\n        margin: 'auto 0'\n      };\n    },\n    /**\n     * Get all tasks\n     *\n     * @returns {array}\n     */\n    allChildren() {\n      const children = [];\n      this.tasks.forEach(task => {\n        task.allChildren.forEach(childId => {\n          children.push(childId);\n        });\n      });\n      return children;\n    },\n    /**\n     * Is current expander collapsed?\n     *\n     * @returns {boolean}\n     */\n    collapsed() {\n      if (this.tasks.length === 0) {\n        return false;\n      }\n      let collapsed = 0;\n      for (let i = 0, len = this.tasks.length; i < len; i++) {\n        if (this.tasks[i].collapsed) {\n          collapsed++;\n        }\n      }\n      return collapsed === this.tasks.length;\n    }\n  },\n  methods: {\n    /**\n     * Get specific class prefix\n     *\n     * @returns {string}\n     */\n    getClassPrefix(full = true) {\n      return `${full ? 'gantt-elastic__' : ''}${this.options.type}-expander`;\n    },\n    /**\n     * Toggle expander\n     */\n    toggle() {\n      if (this.tasks.length === 0) {\n        return;\n      }\n      const collapsed = !this.collapsed;\n      this.tasks.forEach(task => {\n        task.collapsed = collapsed;\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","inject","props","data","border","borderStyle","lineOffset","computed","style","type","margin","root","state","options","taskList","expander","padding","tasks","parents","length","allChildren","children","forEach","task","childId","push","collapsed","i","len","methods","getClassPrefix","full","toggle"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Expander.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview Expander component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div :class=\"getClassPrefix() + '-wrapper'\" :style=\"{ ...root.style[getClassPrefix(false) + '-wrapper'], ...style }\">\n    <svg\n      :class=\"getClassPrefix() + '-content'\"\n      :style=\"{ ...root.style[getClassPrefix(false) + '-content'] }\"\n      :width=\"options.size\"\n      :height=\"options.size\"\n      v-if=\"allChildren.length\"\n      @click=\"toggle\"\n    >\n      <rect\n        :class=\"getClassPrefix() + '-border'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-border'], ...borderStyle }\"\n        :x=\"border\"\n        :y=\"border\"\n        :width=\"options.size - border * 2\"\n        :height=\"options.size - border * 2\"\n        rx=\"2\"\n        ry=\"2\"\n      ></rect>\n      <line\n        :class=\"getClassPrefix() + '-line'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-line'] }\"\n        v-if=\"allChildren.length\"\n        :x1=\"lineOffset\"\n        :y1=\"options.size / 2\"\n        :x2=\"options.size - lineOffset\"\n        :y2=\"options.size / 2\"\n      ></line>\n      <line\n        :class=\"getClassPrefix() + '-line'\"\n        :style=\"{ ...root.style[getClassPrefix(false) + '-line'] }\"\n        v-if=\"collapsed\"\n        :x1=\"options.size / 2\"\n        :y1=\"lineOffset\"\n        :x2=\"options.size / 2\"\n        :y2=\"options.size - lineOffset\"\n      ></line>\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Expander',\n  inject: ['root'],\n  props: ['tasks', 'options', 'type'],\n  data() {\n    const border = 0.5;\n    return {\n      border,\n      borderStyle: {\n        'stroke-width': border\n      },\n      lineOffset: 5\n    };\n  },\n  computed: {\n    style() {\n      if (this.type !== 'taskList') {\n        return {};\n      }\n      const margin = this.root.state.options.taskList.expander.margin;\n      const padding = this.tasks[0].parents.length * this.root.state.options.taskList.expander.padding;\n      return {\n        'padding-left': padding + margin + 'px',\n        margin: 'auto 0'\n      };\n    },\n    /**\n     * Get all tasks\n     *\n     * @returns {array}\n     */\n    allChildren() {\n      const children = [];\n      this.tasks.forEach(task => {\n        task.allChildren.forEach(childId => {\n          children.push(childId);\n        });\n      });\n      return children;\n    },\n    /**\n     * Is current expander collapsed?\n     *\n     * @returns {boolean}\n     */\n    collapsed() {\n      if (this.tasks.length === 0) {\n        return false;\n      }\n      let collapsed = 0;\n      for (let i = 0, len = this.tasks.length; i < len; i++) {\n        if (this.tasks[i].collapsed) {\n          collapsed++;\n        }\n      }\n      return collapsed === this.tasks.length;\n    }\n  },\n  methods: {\n    /**\n     * Get specific class prefix\n     *\n     * @returns {string}\n     */\n    getClassPrefix(full = true) {\n      return `${full ? 'gantt-elastic__' : ''}${this.options.type}-expander`;\n    },\n    /**\n     * Toggle expander\n     */\n    toggle() {\n      if (this.tasks.length === 0) {\n        return;\n      }\n      const collapsed = !this.collapsed;\n      this.tasks.forEach(task => {\n        task.collapsed = collapsed;\n      });\n    }\n  }\n};\n</script>\n"],"mappings":";;;AAmDA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,MAAM,EAAE,CAAC,MAAM,CAAC;EAChBC,KAAK,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC;EACnCC,IAAIA,CAAA,EAAG;IACL,MAAMC,MAAK,GAAI,GAAG;IAClB,OAAO;MACLA,MAAM;MACNC,WAAW,EAAE;QACX,cAAc,EAAED;MAClB,CAAC;MACDE,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAKA,CAAA,EAAG;MACN,IAAI,IAAI,CAACC,IAAG,KAAM,UAAU,EAAE;QAC5B,OAAO,CAAC,CAAC;MACX;MACA,MAAMC,MAAK,GAAI,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACL,MAAM;MAC/D,MAAMM,OAAM,GAAI,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAACC,MAAK,GAAI,IAAI,CAACR,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACC,QAAQ,CAACC,OAAO;MAChG,OAAO;QACL,cAAc,EAAEA,OAAM,GAAIN,MAAK,GAAI,IAAI;QACvCA,MAAM,EAAE;MACV,CAAC;IACH,CAAC;IACD;;;;;IAKAU,WAAWA,CAAA,EAAG;MACZ,MAAMC,QAAO,GAAI,EAAE;MACnB,IAAI,CAACJ,KAAK,CAACK,OAAO,CAACC,IAAG,IAAK;QACzBA,IAAI,CAACH,WAAW,CAACE,OAAO,CAACE,OAAM,IAAK;UAClCH,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC;QACxB,CAAC,CAAC;MACJ,CAAC,CAAC;MACF,OAAOH,QAAQ;IACjB,CAAC;IACD;;;;;IAKAK,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACT,KAAK,CAACE,MAAK,KAAM,CAAC,EAAE;QAC3B,OAAO,KAAK;MACd;MACA,IAAIO,SAAQ,GAAI,CAAC;MACjB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEC,GAAE,GAAI,IAAI,CAACX,KAAK,CAACE,MAAM,EAAEQ,CAAA,GAAIC,GAAG,EAAED,CAAC,EAAE,EAAE;QACrD,IAAI,IAAI,CAACV,KAAK,CAACU,CAAC,CAAC,CAACD,SAAS,EAAE;UAC3BA,SAAS,EAAE;QACb;MACF;MACA,OAAOA,SAAQ,KAAM,IAAI,CAACT,KAAK,CAACE,MAAM;IACxC;EACF,CAAC;EACDU,OAAO,EAAE;IACP;;;;;IAKAC,cAAcA,CAACC,IAAG,GAAI,IAAI,EAAE;MAC1B,OAAO,GAAGA,IAAG,GAAI,iBAAgB,GAAI,EAAE,GAAG,IAAI,CAAClB,OAAO,CAACJ,IAAI,WAAW;IACxE,CAAC;IACD;;;IAGAuB,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAACf,KAAK,CAACE,MAAK,KAAM,CAAC,EAAE;QAC3B;MACF;MACA,MAAMO,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS;MACjC,IAAI,CAACT,KAAK,CAACK,OAAO,CAACC,IAAG,IAAK;QACzBA,IAAI,CAACG,SAAQ,GAAIA,SAAS;MAC5B,CAAC,CAAC;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}