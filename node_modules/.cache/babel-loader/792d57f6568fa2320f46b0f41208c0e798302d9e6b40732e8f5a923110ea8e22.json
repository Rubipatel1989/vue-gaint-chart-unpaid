{"ast":null,"code":"import { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"y2\"];\nconst _hoisted_3 = [\"width\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = [\"x\", \"width\"];\nconst _hoisted_6 = [\"d\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"g\", {\n    class: \"gantt-elastic__chart-row-progress-bar-wrapper\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-row-progress-bar-wrapper'],\n      ...$props.task.style['chart-row-progress-bar-wrapper']\n    })\n  }, [_createElementVNode(\"defs\", null, [_createElementVNode(\"pattern\", {\n    id: \"diagonalHatch\",\n    width: $options.root.state.options.chart.progress.width,\n    height: $options.root.state.options.chart.progress.width,\n    patternTransform: \"rotate(45 0 0)\",\n    patternUnits: \"userSpaceOnUse\"\n  }, [_createElementVNode(\"line\", {\n    class: \"chart-row-progress-bar-line\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-row-progress-bar-line'],\n      ...$props.task.style['chart-row-progress-bar-line']\n    }),\n    x1: \"0\",\n    y1: \"0\",\n    x2: \"0\",\n    y2: $options.root.state.options.chart.progress.width\n  }, null, 12 /* STYLE, PROPS */, _hoisted_2)], 8 /* PROPS */, _hoisted_1)]), $options.root.state.options.chart.progress.bar ? (_openBlock(), _createElementBlock(\"rect\", {\n    key: 0,\n    class: \"gantt-elastic__chart-row-progress-bar-solid\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-row-progress-bar-solid'],\n      ...$props.task.style['chart-row-progress-bar-solid']\n    }),\n    x: \"0\",\n    y: \"0\",\n    width: $options.getProgressWidth\n  }, null, 12 /* STYLE, PROPS */, _hoisted_3)) : _createCommentVNode(\"v-if\", true), $options.root.state.options.chart.progress.pattern ? (_openBlock(), _createElementBlock(\"g\", _hoisted_4, [_createElementVNode(\"rect\", {\n    class: \"gantt-elastic__chart-row-progress-bar-pattern\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-row-progress-bar-pattern'],\n      ...$props.task.style['chart-row-progress-bar-pattern']\n    }),\n    x: $options.getProgressWidth,\n    y: \"0\",\n    width: 100 - $props.task.progress + '%',\n    height: \"100%\"\n  }, null, 12 /* STYLE, PROPS */, _hoisted_5), _createElementVNode(\"path\", {\n    class: \"gantt-elastic__chart-row-progress-bar-outline\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-row-progress-bar-outline'],\n      ...$props.task.style['base'],\n      ...$props.task.style['chart-row-progress-bar-outline']\n    }),\n    d: $options.getLinePoints\n  }, null, 12 /* STYLE, PROPS */, _hoisted_6)])) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */);\n}","map":{"version":3,"names":["key","_createElementBlock","class","style","_normalizeStyle","$options","root","$props","task","_createElementVNode","id","width","state","options","chart","progress","height","patternTransform","patternUnits","x1","y1","x2","y2","_hoisted_2","_hoisted_1","bar","x","y","getProgressWidth","_hoisted_3","_createCommentVNode","pattern","_hoisted_4","_hoisted_5","d","getLinePoints","_hoisted_6"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Chart/ProgressBar.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview ProgressBar component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <g\n    class=\"gantt-elastic__chart-row-progress-bar-wrapper\"\n    :style=\"{ ...root.style['chart-row-progress-bar-wrapper'], ...task.style['chart-row-progress-bar-wrapper'] }\"\n  >\n    <defs>\n      <pattern\n        id=\"diagonalHatch\"\n        :width=\"root.state.options.chart.progress.width\"\n        :height=\"root.state.options.chart.progress.width\"\n        patternTransform=\"rotate(45 0 0)\"\n        patternUnits=\"userSpaceOnUse\"\n      >\n        <line\n          class=\"chart-row-progress-bar-line\"\n          :style=\"{ ...root.style['chart-row-progress-bar-line'], ...task.style['chart-row-progress-bar-line'] }\"\n          x1=\"0\"\n          y1=\"0\"\n          x2=\"0\"\n          :y2=\"root.state.options.chart.progress.width\"\n        />\n      </pattern>\n    </defs>\n    <rect\n      v-if=\"root.state.options.chart.progress.bar\"\n      class=\"gantt-elastic__chart-row-progress-bar-solid\"\n      :style=\"{ ...root.style['chart-row-progress-bar-solid'], ...task.style['chart-row-progress-bar-solid'] }\"\n      x=\"0\"\n      y=\"0\"\n      :width=\"getProgressWidth\"\n    ></rect>\n    <g v-if=\"root.state.options.chart.progress.pattern\">\n      <rect\n        class=\"gantt-elastic__chart-row-progress-bar-pattern\"\n        :style=\"{ ...root.style['chart-row-progress-bar-pattern'], ...task.style['chart-row-progress-bar-pattern'] }\"\n        :x=\"getProgressWidth\"\n        y=\"0\"\n        :width=\"100 - task.progress + '%'\"\n        height=\"100%\"\n      ></rect>\n      <path\n        class=\"gantt-elastic__chart-row-progress-bar-outline\"\n        :style=\"{\n          ...root.style['chart-row-progress-bar-outline'],\n          ...task.style['base'],\n          ...task.style['chart-row-progress-bar-outline']\n        }\"\n        :d=\"getLinePoints\"\n      ></path>\n    </g>\n  </g>\n</template>\n\n<script>\nexport default {\n  name: 'ProgressBar',\n  inject: ['root'],\n  props: ['task'],\n  data() {\n    return {};\n  },\n\n  computed: {\n    /**\n     * Get progress width\n     *\n     * @returns {string}\n     */\n    getProgressWidth() {\n      return this.task.progress + '%';\n    },\n\n    /**\n     * Get line points\n     *\n     * @returns {string}\n     */\n    getLinePoints() {\n      const start = (this.task.width / 100) * this.task.progress;\n      return `M ${start} 0 L ${start} ${this.task.height}`;\n    },\n\n    /**\n     * Get solid style\n     *\n     * @returns {object}\n     */\n    getSolidStyle() {\n      return Object.assign({}, this.root.state.options.chart.progress.styles.bar.solid, this.task.progressBarStyle.bar);\n    },\n\n    /**\n     * Get line style\n     *\n     * @returns {object}\n     */\n    getLineStyle() {\n      return Object.assign(\n        {},\n        {\n          stroke: this.root.state.options.row.styles.bar.stroke + 'a0',\n          'stroke-width': this.root.state.options.row.styles.bar['stroke-width'] / 2\n        },\n        this.task.style\n      );\n    }\n  }\n};\n</script>\n"],"mappings":";mBAAA;mBAAA;mBAAA;;EAAAA,GAAA;AAAA;mBAAA;mBAAA;;uBASEC,mBAAA,CAiDI;IAhDFC,KAAK,EAAC,+CAA+C;IACpDC,KAAK,EAXVC,eAAA;MAAA,GAWiBC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAA,GAAuCI,MAAA,CAAAC,IAAI,CAACL,KAAK;IAAA;MAExEM,mBAAA,CAiBO,eAhBLA,mBAAA,CAeU;IAdRC,EAAE,EAAC,eAAe;IACjBC,KAAK,EAAEN,QAAA,CAAAC,IAAI,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ,CAACJ,KAAK;IAC9CK,MAAM,EAAEX,QAAA,CAAAC,IAAI,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ,CAACJ,KAAK;IAChDM,gBAAgB,EAAC,gBAAgB;IACjCC,YAAY,EAAC;MAEbT,mBAAA,CAOE;IANAP,KAAK,EAAC,6BAA6B;IAClCC,KAAK,EAvBhBC,eAAA;MAAA,GAuBuBC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAA,GAAoCI,MAAA,CAAAC,IAAI,CAACL,KAAK;IAAA;IACrEgB,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC,GAAG;IACNC,EAAE,EAAC,GAAG;IACLC,EAAE,EAAEjB,QAAA,CAAAC,IAAI,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ,CAACJ;kCA3BjDY,UAAA,E,iBAAAC,UAAA,E,GAgCYnB,QAAA,CAAAC,IAAI,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ,CAACU,GAAG,I,cAD7CxB,mBAAA,CAOQ;IAtCZD,GAAA;IAiCME,KAAK,EAAC,6CAA6C;IAClDC,KAAK,EAlCZC,eAAA;MAAA,GAkCmBC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAA,GAAqCI,MAAA,CAAAC,IAAI,CAACL,KAAK;IAAA;IACtEuB,CAAC,EAAC,GAAG;IACLC,CAAC,EAAC,GAAG;IACJhB,KAAK,EAAEN,QAAA,CAAAuB;kCArCdC,UAAA,KAAAC,mBAAA,gBAuCazB,QAAA,CAAAC,IAAI,CAACM,KAAK,CAACC,OAAO,CAACC,KAAK,CAACC,QAAQ,CAACgB,OAAO,I,cAAlD9B,mBAAA,CAkBI,KAzDR+B,UAAA,GAwCMvB,mBAAA,CAOQ;IANNP,KAAK,EAAC,+CAA+C;IACpDC,KAAK,EA1CdC,eAAA;MAAA,GA0CqBC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAA,GAAuCI,MAAA,CAAAC,IAAI,CAACL,KAAK;IAAA;IACvEuB,CAAC,EAAErB,QAAA,CAAAuB,gBAAgB;IACpBD,CAAC,EAAC,GAAG;IACJhB,KAAK,QAAQJ,MAAA,CAAAC,IAAI,CAACO,QAAQ;IAC3BC,MAAM,EAAC;kCA9CfiB,UAAA,GAgDMxB,mBAAA,CAQQ;IAPNP,KAAK,EAAC,+CAA+C;IACpDC,KAAK,EAlDdC,eAAA;SAkD+BC,QAAA,CAAAC,IAAI,CAACH,KAAK;SAAiDI,MAAA,CAAAC,IAAI,CAACL,KAAK;SAAuBI,MAAA,CAAAC,IAAI,CAACL,KAAK;;IAK5H+B,CAAC,EAAE7B,QAAA,CAAA8B;kCAvDZC,UAAA,E,KAAAN,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}