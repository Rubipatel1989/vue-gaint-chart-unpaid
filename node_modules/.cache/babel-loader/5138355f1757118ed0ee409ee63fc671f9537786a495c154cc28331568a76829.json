{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"gantt\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["/var/www/vue/vue-gantt-chart/src/components/TimeGantt.vue"],"sourcesContent":["<template>\n       <div id=\"gantt\"></div>\n</template>\n\n<script>\nimport Gantt from \"gantt-schedule-timeline-calendar\";\nimport \"gantt-schedule-timeline-calendar/dist/style.css\";\nimport { onMounted, onBeforeUnmount } from \"vue\";\n\nexport default {\n       name: \"TimeGantt\",\n       setup() {\n              let gstcInstance;\n\n              onMounted(() => {\n                     // Initialize Gantt\n                     gstcInstance = Gantt({\n                            element: document.getElementById(\"gantt\"),\n                            state: {\n                                   config: {\n                                          list: {\n                                                 rows: {\n                                                        P001: { id: \"P001\", label: \"Product A\" },\n                                                        P002: { id: \"P002\", label: \"Product B\" },\n                                                 },\n                                          },\n                                          chart: {\n                                                 items: {\n                                                        task1: {\n                                                               id: \"task1\",\n                                                               label: \"Selling Product A\",\n                                                               time: {\n                                                                      start: new Date(\"2024-12-01\").getTime(),\n                                                                      end: new Date(\"2024-12-10\").getTime(),\n                                                               },\n                                                               rowId: \"P001\",\n                                                        },\n                                                        task2: {\n                                                               id: \"task2\",\n                                                               label: \"Selling Product B\",\n                                                               time: {\n                                                                      start: new Date(\"2024-12-02\").getTime(),\n                                                                      end: new Date(\"2024-12-07\").getTime(),\n                                                               },\n                                                               rowId: \"P002\",\n                                                        },\n                                                 },\n                                          },\n                                   },\n                            },\n                     });\n              });\n\n              onBeforeUnmount(() => {\n                     if (gstcInstance) {\n                            gstcInstance.destroy();\n                     }\n              });\n       },\n};\n</script>\n\n<style>\n#gantt {\n       width: 100%;\n       height: 500px;\n       border: 1px solid #ccc;\n}\n</style>"],"mappings":";;EACYA,EAAE,EAAC;AAAO;;uBAAfC,mBAAA,CAAsB,OAAtBC,UAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}