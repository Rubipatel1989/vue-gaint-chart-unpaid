{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * `Clear Format` module is used to handle Clear Format.\n */\nimport { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport { DOMNode } from './dom-node';\nimport { InsertMethods } from './insert-methods';\nimport { IsFormatted } from './isformatted';\nimport { isIDevice, setEditFrameFocus } from '../../common/util';\nvar ClearFormat = /** @class */function () {\n  function ClearFormat() {}\n  /**\n   * clear method\n   *\n   * @param {Document} docElement - specifies the document element.\n   * @param {Node} endNode - specifies the end node\n   * @param {string} enterAction - specifies the enter key action\n   * @param {string} selector - specifies the string value\n   * @param {string} command - specifies the command value\n   * @returns {void}\n   * @hidden\n    */\n  ClearFormat.clear = function (docElement, endNode, enterAction, selector, command) {\n    this.domNode = new DOMNode(endNode, docElement);\n    this.defaultTag = enterAction === 'P' ? this.defaultTag : 'div';\n    var nodeSelection = new NodeSelection(endNode);\n    var nodeCutter = new NodeCutter();\n    var range = nodeSelection.getRange(docElement);\n    var nodes = range.collapsed ? nodeSelection.getSelectionNodeCollection(range) : nodeSelection.getSelectionNodeCollectionBr(range);\n    var save = nodeSelection.save(range, docElement);\n    var cursorRange = false;\n    if (range.collapsed && command !== 'ClearFormat') {\n      cursorRange = true;\n      range = nodeCutter.GetCursorRange(docElement, range, nodes[0]);\n    }\n    var isCollapsed = range.collapsed;\n    if (!isCollapsed) {\n      var preNode = void 0;\n      if (nodes.length > 0 && nodes[0].nodeName === 'BR' && closest(nodes[0], 'table')) {\n        preNode = nodeCutter.GetSpliceNode(range, closest(nodes[0], 'table'));\n      } else {\n        preNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length > 1 && nodes[0].nodeName === 'IMG' ? 1 : 0]);\n      }\n      if (nodes.length === 1) {\n        nodeSelection.setSelectionContents(docElement, preNode);\n        range = nodeSelection.getRange(docElement);\n      } else if (nodes.length > 1) {\n        var i = 1;\n        var lastText = nodes[nodes.length - i];\n        while (nodes.length <= i && nodes[nodes.length - i].nodeName === 'BR') {\n          i++;\n          lastText = nodes[nodes.length - i];\n        }\n        var lasNode = nodeCutter.GetSpliceNode(range, lastText);\n        if (lasNode) {\n          nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, lasNode.nodeType === 3 ? lasNode.textContent.length : lasNode.childNodes.length);\n        }\n        range = nodeSelection.getRange(docElement);\n      }\n      var exactNodes = nodeSelection.getNodeCollection(range);\n      var cloneSelectNodes = exactNodes.slice();\n      this.clearInlines(nodeSelection.getSelectionNodes(cloneSelectNodes), cloneSelectNodes, nodeSelection.getRange(docElement), nodeCutter, endNode);\n      this.reSelection(docElement, save, exactNodes);\n      range = nodeSelection.getRange(docElement);\n      exactNodes = nodeSelection.getNodeCollection(range);\n      var cloneParentNodes = exactNodes.slice();\n      this.clearBlocks(docElement, cloneParentNodes, endNode, nodeCutter, nodeSelection);\n      if (isIDevice()) {\n        setEditFrameFocus(endNode, selector);\n      }\n      this.reSelection(docElement, save, exactNodes);\n    }\n    if (cursorRange) {\n      nodeSelection.setCursorPoint(docElement, range.endContainer, range.endOffset);\n    }\n  };\n  ClearFormat.reSelection = function (docElement, save, exactNodes) {\n    var selectionNodes = save.getInsertNodes(exactNodes);\n    save.startContainer = save.getNodeArray(selectionNodes[0], true, docElement);\n    save.startOffset = 0;\n    save.endContainer = save.getNodeArray(selectionNodes[selectionNodes.length - 1], false, docElement);\n    var endIndexNode = selectionNodes[selectionNodes.length - 1];\n    save.endOffset = endIndexNode.nodeType === 3 ? endIndexNode.textContent.length : endIndexNode.childNodes.length;\n    save.restore();\n  };\n  ClearFormat.clearBlocks = function (docElement, nodes, endNode, nodeCutter, nodeSelection) {\n    var parentNodes = [];\n    for (var index = 0; index < nodes.length; index++) {\n      if (this.BLOCK_TAGS.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1 && parentNodes.indexOf(nodes[index]) === -1) {\n        parentNodes.push(nodes[index]);\n      } else if (this.BLOCK_TAGS.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1 && parentNodes.indexOf(nodes[index].parentNode) === -1 && endNode !== nodes[index].parentNode) {\n        parentNodes.push(nodes[index].parentNode);\n      }\n    }\n    parentNodes = this.spliceParent(parentNodes, nodes)[0];\n    parentNodes = this.removeParent(parentNodes);\n    this.unWrap(docElement, parentNodes, nodeCutter, nodeSelection);\n  };\n  ClearFormat.spliceParent = function (parentNodes, nodes) {\n    for (var index1 = 0; index1 < parentNodes.length; index1++) {\n      var len = parentNodes[index1].childNodes.length;\n      for (var index2 = 0; index2 < len; index2++) {\n        if (nodes.indexOf(parentNodes[index1].childNodes[index2]) > 0 && parentNodes[index1].childNodes[index2].childNodes.length > 0) {\n          nodes = this.spliceParent([parentNodes[index1].childNodes[index2]], nodes)[1];\n        }\n        if (nodes.indexOf(parentNodes[index1].childNodes[index2]) <= -1 && parentNodes[index1].childNodes[index2].textContent.trim() !== '') {\n          for (var index3 = 0; index3 < len; index3++) {\n            if (nodes.indexOf(parentNodes[index1].childNodes[index3]) > -1) {\n              nodes.splice(nodes.indexOf(parentNodes[index1].childNodes[index3]), 1);\n            }\n          }\n          index2 = parentNodes[index1].childNodes.length;\n          var parentIndex = parentNodes.indexOf(parentNodes[index1].parentNode);\n          var nodeIndex = nodes.indexOf(parentNodes[index1].parentNode);\n          if (parentIndex > -1) {\n            parentNodes.splice(parentIndex, 1);\n          }\n          if (nodeIndex > -1) {\n            nodes.splice(nodeIndex, 1);\n          }\n          var elementIndex = nodes.indexOf(parentNodes[index1]);\n          if (elementIndex > -1) {\n            nodes.splice(elementIndex, 1);\n          }\n          parentNodes.splice(index1, 1);\n          index1--;\n        }\n      }\n    }\n    return [parentNodes, nodes];\n  };\n  ClearFormat.removeChild = function (parentNodes, parentNode) {\n    var count = parentNode.childNodes.length;\n    if (count > 0) {\n      for (var index = 0; index < count; index++) {\n        if (parentNodes.indexOf(parentNode.childNodes[index]) > -1) {\n          parentNodes = this.removeChild(parentNodes, parentNode.childNodes[index]);\n          parentNodes.splice(parentNodes.indexOf(parentNode.childNodes[index]), 1);\n        }\n      }\n    }\n    return parentNodes;\n  };\n  ClearFormat.removeParent = function (parentNodes) {\n    for (var index = 0; index < parentNodes.length; index++) {\n      if (parentNodes.indexOf(parentNodes[index].parentNode) > -1) {\n        parentNodes = this.removeChild(parentNodes, parentNodes[index]);\n        parentNodes.splice(index, 1);\n        index--;\n      }\n    }\n    return parentNodes;\n  };\n  ClearFormat.unWrap = function (docElement, parentNodes, nodeCutter, nodeSelection) {\n    for (var index1 = 0; index1 < parentNodes.length; index1++) {\n      if (this.NONVALID_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) > -1 && parentNodes[index1].parentNode && this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].parentNode.nodeName.toLowerCase()) > -1) {\n        nodeSelection.setSelectionText(docElement, parentNodes[index1], parentNodes[index1], 0, parentNodes[index1].childNodes.length);\n        InsertMethods.unwrap(nodeCutter.GetSpliceNode(nodeSelection.getRange(docElement), parentNodes[index1].parentNode));\n      }\n      var blockquoteNode = closest(parentNodes[index1], 'blockquote');\n      if (parentNodes[index1].nodeName.toLocaleLowerCase() !== 'blockquote' && !isNullOrUndefined(blockquoteNode) && blockquoteNode.textContent === parentNodes[index1].textContent) {\n        var blockNodes = this.removeParent([blockquoteNode]);\n        this.unWrap(docElement, blockNodes, nodeCutter, nodeSelection);\n      }\n      if (parentNodes[index1].nodeName.toLocaleLowerCase() !== 'p') {\n        if (this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) < 0 && !((parentNodes[index1].nodeName.toLocaleLowerCase() === 'blockquote' || parentNodes[index1].nodeName.toLocaleLowerCase() === 'li') && this.IGNORE_PARENT_TAGS.indexOf(parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase()) > -1) && !(parentNodes[index1].childNodes.length === 1 && parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase() === 'p')) {\n          InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n        }\n        var childNodes = InsertMethods.unwrap(parentNodes[index1]);\n        if (childNodes.length === 1 && childNodes[0].parentNode.nodeName.toLocaleLowerCase() === 'p') {\n          InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n          InsertMethods.unwrap(parentNodes[index1]);\n        }\n        for (var index2 = 0; index2 < childNodes.length; index2++) {\n          if (this.NONVALID_TAGS.indexOf(childNodes[index2].nodeName.toLowerCase()) > -1) {\n            this.unWrap(docElement, [childNodes[index2]], nodeCutter, nodeSelection);\n          } else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 && childNodes[index2].nodeName.toLocaleLowerCase() !== 'p') {\n            var blockNodes = this.removeParent([childNodes[index2]]);\n            this.unWrap(docElement, blockNodes, nodeCutter, nodeSelection);\n          } else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 && childNodes[index2].nodeName.toLocaleLowerCase() === 'p') {\n            if (childNodes[index2].parentNode.nodeName.toLocaleLowerCase() === 'p') {\n              InsertMethods.unwrap(childNodes[index2].parentNode);\n            }\n            InsertMethods.Wrap(childNodes[index2], docElement.createElement(this.defaultTag));\n            InsertMethods.unwrap(childNodes[index2]);\n          } else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 && childNodes[index2].parentNode.nodeName.toLocaleLowerCase() === childNodes[index2].nodeName.toLocaleLowerCase()) {\n            InsertMethods.unwrap(childNodes[index2]);\n          }\n        }\n      } else {\n        InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n        InsertMethods.unwrap(parentNodes[index1]);\n      }\n    }\n  };\n  ClearFormat.clearInlines = function (textNodes, nodes, range, nodeCutter,\n  // eslint-disable-next-line\n  endNode) {\n    for (var index = 0; index < textNodes.length; index++) {\n      var currentInlineNode = textNodes[index];\n      var currentNode = void 0;\n      while (!this.domNode.isBlockNode(currentInlineNode) && currentInlineNode.parentElement && !currentInlineNode.parentElement.classList.contains('e-img-inner')) {\n        currentNode = currentInlineNode;\n        currentInlineNode = currentInlineNode.parentElement;\n      }\n      if (currentNode && IsFormatted.inlineTags.indexOf(currentNode.nodeName.toLocaleLowerCase()) > -1) {\n        nodeCutter.GetSpliceNode(range, currentNode);\n        this.removeInlineParent(currentNode);\n      }\n    }\n  };\n  ClearFormat.removeInlineParent = function (textNodes) {\n    var nodes = InsertMethods.unwrap(textNodes);\n    for (var index = 0; index < nodes.length; index++) {\n      if (nodes[index].parentNode.childNodes.length === 1 && !nodes[index].parentNode.classList.contains('e-img-inner') && IsFormatted.inlineTags.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1) {\n        this.removeInlineParent(nodes[index].parentNode);\n      } else if (IsFormatted.inlineTags.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1) {\n        this.removeInlineParent(nodes[index]);\n      }\n    }\n  };\n  ClearFormat.BLOCK_TAGS = ['address', 'article', 'aside', 'blockquote', 'details', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'li', 'main', 'nav', 'noscript', 'ol', 'p', 'pre', 'section', 'ul'];\n  ClearFormat.NONVALID_PARENT_TAGS = ['thead', 'tbody', 'ul', 'ol', 'table', 'tfoot', 'tr'];\n  ClearFormat.IGNORE_PARENT_TAGS = ['ul', 'ol', 'table'];\n  ClearFormat.NONVALID_TAGS = ['thead', 'tbody', 'figcaption', 'td', 'tr', 'th', 'tfoot', 'figcaption', 'li'];\n  ClearFormat.defaultTag = 'p';\n  return ClearFormat;\n}();\nexport { ClearFormat };","map":{"version":3,"names":["closest","isNullOrUndefined","NodeSelection","NodeCutter","DOMNode","InsertMethods","IsFormatted","isIDevice","setEditFrameFocus","ClearFormat","clear","docElement","endNode","enterAction","selector","command","domNode","defaultTag","nodeSelection","nodeCutter","range","getRange","nodes","collapsed","getSelectionNodeCollection","getSelectionNodeCollectionBr","save","cursorRange","GetCursorRange","isCollapsed","preNode","length","nodeName","GetSpliceNode","setSelectionContents","i","lastText","lasNode","setSelectionText","nodeType","textContent","childNodes","exactNodes","getNodeCollection","cloneSelectNodes","slice","clearInlines","getSelectionNodes","reSelection","cloneParentNodes","clearBlocks","setCursorPoint","endContainer","endOffset","selectionNodes","getInsertNodes","startContainer","getNodeArray","startOffset","endIndexNode","restore","parentNodes","index","BLOCK_TAGS","indexOf","toLocaleLowerCase","push","parentNode","spliceParent","removeParent","unWrap","index1","len","index2","trim","index3","splice","parentIndex","nodeIndex","elementIndex","removeChild","count","NONVALID_TAGS","toLowerCase","NONVALID_PARENT_TAGS","unwrap","blockquoteNode","blockNodes","IGNORE_PARENT_TAGS","Wrap","createElement","textNodes","currentInlineNode","currentNode","isBlockNode","parentElement","classList","contains","inlineTags","removeInlineParent"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/clearformat.js"],"sourcesContent":["/**\n * `Clear Format` module is used to handle Clear Format.\n */\nimport { closest, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { NodeSelection } from './../../selection/index';\nimport { NodeCutter } from './nodecutter';\nimport { DOMNode } from './dom-node';\nimport { InsertMethods } from './insert-methods';\nimport { IsFormatted } from './isformatted';\nimport { isIDevice, setEditFrameFocus } from '../../common/util';\nvar ClearFormat = /** @class */ (function () {\n    function ClearFormat() {\n    }\n    /**\n     * clear method\n     *\n     * @param {Document} docElement - specifies the document element.\n     * @param {Node} endNode - specifies the end node\n     * @param {string} enterAction - specifies the enter key action\n     * @param {string} selector - specifies the string value\n     * @param {string} command - specifies the command value\n     * @returns {void}\n     * @hidden\n\n     */\n    ClearFormat.clear = function (docElement, endNode, enterAction, selector, command) {\n        this.domNode = new DOMNode(endNode, docElement);\n        this.defaultTag = enterAction === 'P' ? this.defaultTag : 'div';\n        var nodeSelection = new NodeSelection(endNode);\n        var nodeCutter = new NodeCutter();\n        var range = nodeSelection.getRange(docElement);\n        var nodes = range.collapsed ? nodeSelection.getSelectionNodeCollection(range) :\n            nodeSelection.getSelectionNodeCollectionBr(range);\n        var save = nodeSelection.save(range, docElement);\n        var cursorRange = false;\n        if (range.collapsed && command !== 'ClearFormat') {\n            cursorRange = true;\n            range = nodeCutter.GetCursorRange(docElement, range, nodes[0]);\n        }\n        var isCollapsed = range.collapsed;\n        if (!isCollapsed) {\n            var preNode = void 0;\n            if (nodes.length > 0 && nodes[0].nodeName === 'BR' && closest(nodes[0], 'table')) {\n                preNode = nodeCutter.GetSpliceNode(range, closest(nodes[0], 'table'));\n            }\n            else {\n                preNode = nodeCutter.GetSpliceNode(range, nodes[nodes.length > 1 && nodes[0].nodeName === 'IMG' ? 1 : 0]);\n            }\n            if (nodes.length === 1) {\n                nodeSelection.setSelectionContents(docElement, preNode);\n                range = nodeSelection.getRange(docElement);\n            }\n            else if (nodes.length > 1) {\n                var i = 1;\n                var lastText = nodes[nodes.length - i];\n                while (nodes.length <= i && nodes[nodes.length - i].nodeName === 'BR') {\n                    i++;\n                    lastText = nodes[nodes.length - i];\n                }\n                var lasNode = nodeCutter.GetSpliceNode(range, lastText);\n                if (lasNode) {\n                    nodeSelection.setSelectionText(docElement, preNode, lasNode, 0, (lasNode.nodeType === 3) ?\n                        lasNode.textContent.length : lasNode.childNodes.length);\n                }\n                range = nodeSelection.getRange(docElement);\n            }\n            var exactNodes = nodeSelection.getNodeCollection(range);\n            var cloneSelectNodes = exactNodes.slice();\n            this.clearInlines(nodeSelection.getSelectionNodes(cloneSelectNodes), cloneSelectNodes, nodeSelection.getRange(docElement), nodeCutter, endNode);\n            this.reSelection(docElement, save, exactNodes);\n            range = nodeSelection.getRange(docElement);\n            exactNodes = nodeSelection.getNodeCollection(range);\n            var cloneParentNodes = exactNodes.slice();\n            this.clearBlocks(docElement, cloneParentNodes, endNode, nodeCutter, nodeSelection);\n            if (isIDevice()) {\n                setEditFrameFocus(endNode, selector);\n            }\n            this.reSelection(docElement, save, exactNodes);\n        }\n        if (cursorRange) {\n            nodeSelection.setCursorPoint(docElement, range.endContainer, range.endOffset);\n        }\n    };\n    ClearFormat.reSelection = function (docElement, save, exactNodes) {\n        var selectionNodes = save.getInsertNodes(exactNodes);\n        save.startContainer = save.getNodeArray(selectionNodes[0], true, docElement);\n        save.startOffset = 0;\n        save.endContainer = save.getNodeArray(selectionNodes[selectionNodes.length - 1], false, docElement);\n        var endIndexNode = selectionNodes[selectionNodes.length - 1];\n        save.endOffset = (endIndexNode.nodeType === 3) ? endIndexNode.textContent.length\n            : endIndexNode.childNodes.length;\n        save.restore();\n    };\n    ClearFormat.clearBlocks = function (docElement, nodes, endNode, nodeCutter, nodeSelection) {\n        var parentNodes = [];\n        for (var index = 0; index < nodes.length; index++) {\n            if (this.BLOCK_TAGS.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1\n                && parentNodes.indexOf(nodes[index]) === -1) {\n                parentNodes.push(nodes[index]);\n            }\n            else if ((this.BLOCK_TAGS.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1)\n                && parentNodes.indexOf(nodes[index].parentNode) === -1\n                && endNode !== nodes[index].parentNode) {\n                parentNodes.push(nodes[index].parentNode);\n            }\n        }\n        parentNodes = this.spliceParent(parentNodes, nodes)[0];\n        parentNodes = this.removeParent(parentNodes);\n        this.unWrap(docElement, parentNodes, nodeCutter, nodeSelection);\n    };\n    ClearFormat.spliceParent = function (parentNodes, nodes) {\n        for (var index1 = 0; index1 < parentNodes.length; index1++) {\n            var len = parentNodes[index1].childNodes.length;\n            for (var index2 = 0; index2 < len; index2++) {\n                if ((nodes.indexOf(parentNodes[index1].childNodes[index2]) > 0)\n                    && (parentNodes[index1].childNodes[index2].childNodes.length > 0)) {\n                    nodes = this.spliceParent([parentNodes[index1].childNodes[index2]], nodes)[1];\n                }\n                if ((nodes.indexOf(parentNodes[index1].childNodes[index2]) <= -1) &&\n                    (parentNodes[index1].childNodes[index2].textContent.trim() !== '')) {\n                    for (var index3 = 0; index3 < len; index3++) {\n                        if (nodes.indexOf(parentNodes[index1].childNodes[index3]) > -1) {\n                            nodes.splice(nodes.indexOf(parentNodes[index1].childNodes[index3]), 1);\n                        }\n                    }\n                    index2 = parentNodes[index1].childNodes.length;\n                    var parentIndex = parentNodes.indexOf(parentNodes[index1].parentNode);\n                    var nodeIndex = nodes.indexOf(parentNodes[index1].parentNode);\n                    if (parentIndex > -1) {\n                        parentNodes.splice(parentIndex, 1);\n                    }\n                    if (nodeIndex > -1) {\n                        nodes.splice(nodeIndex, 1);\n                    }\n                    var elementIndex = nodes.indexOf(parentNodes[index1]);\n                    if (elementIndex > -1) {\n                        nodes.splice(elementIndex, 1);\n                    }\n                    parentNodes.splice(index1, 1);\n                    index1--;\n                }\n            }\n        }\n        return [parentNodes, nodes];\n    };\n    ClearFormat.removeChild = function (parentNodes, parentNode) {\n        var count = parentNode.childNodes.length;\n        if (count > 0) {\n            for (var index = 0; index < count; index++) {\n                if (parentNodes.indexOf(parentNode.childNodes[index]) > -1) {\n                    parentNodes = this.removeChild(parentNodes, parentNode.childNodes[index]);\n                    parentNodes.splice(parentNodes.indexOf(parentNode.childNodes[index]), 1);\n                }\n            }\n        }\n        return parentNodes;\n    };\n    ClearFormat.removeParent = function (parentNodes) {\n        for (var index = 0; index < parentNodes.length; index++) {\n            if (parentNodes.indexOf(parentNodes[index].parentNode) > -1) {\n                parentNodes = this.removeChild(parentNodes, parentNodes[index]);\n                parentNodes.splice(index, 1);\n                index--;\n            }\n        }\n        return parentNodes;\n    };\n    ClearFormat.unWrap = function (docElement, parentNodes, nodeCutter, nodeSelection) {\n        for (var index1 = 0; index1 < parentNodes.length; index1++) {\n            if (this.NONVALID_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) > -1\n                && parentNodes[index1].parentNode\n                && this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].parentNode.nodeName.toLowerCase()) > -1) {\n                nodeSelection.setSelectionText(docElement, parentNodes[index1], parentNodes[index1], 0, parentNodes[index1].childNodes.length);\n                InsertMethods.unwrap(nodeCutter.GetSpliceNode(nodeSelection.getRange(docElement), parentNodes[index1].parentNode));\n            }\n            var blockquoteNode = closest(parentNodes[index1], 'blockquote');\n            if (parentNodes[index1].nodeName.toLocaleLowerCase() !== 'blockquote' && !isNullOrUndefined(blockquoteNode) && blockquoteNode.textContent === parentNodes[index1].textContent) {\n                var blockNodes = this.removeParent([blockquoteNode]);\n                this.unWrap(docElement, blockNodes, nodeCutter, nodeSelection);\n            }\n            if (parentNodes[index1].nodeName.toLocaleLowerCase() !== 'p') {\n                if (this.NONVALID_PARENT_TAGS.indexOf(parentNodes[index1].nodeName.toLowerCase()) < 0\n                    && !((parentNodes[index1].nodeName.toLocaleLowerCase() === 'blockquote'\n                        || parentNodes[index1].nodeName.toLocaleLowerCase() === 'li')\n                        && this.IGNORE_PARENT_TAGS.indexOf(parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase()) > -1)\n                    && !(parentNodes[index1].childNodes.length === 1\n                        && parentNodes[index1].childNodes[0].nodeName.toLocaleLowerCase() === 'p')) {\n                    InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n                }\n                var childNodes = InsertMethods.unwrap(parentNodes[index1]);\n                if (childNodes.length === 1\n                    && childNodes[0].parentNode.nodeName.toLocaleLowerCase() === 'p') {\n                    InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n                    InsertMethods.unwrap(parentNodes[index1]);\n                }\n                for (var index2 = 0; index2 < childNodes.length; index2++) {\n                    if (this.NONVALID_TAGS.indexOf(childNodes[index2].nodeName.toLowerCase()) > -1) {\n                        this.unWrap(docElement, [childNodes[index2]], nodeCutter, nodeSelection);\n                    }\n                    else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 &&\n                        childNodes[index2].nodeName.toLocaleLowerCase() !== 'p') {\n                        var blockNodes = this.removeParent([childNodes[index2]]);\n                        this.unWrap(docElement, blockNodes, nodeCutter, nodeSelection);\n                    }\n                    else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 &&\n                        childNodes[index2].nodeName.toLocaleLowerCase() === 'p') {\n                        if (childNodes[index2].parentNode.nodeName.toLocaleLowerCase() === 'p') {\n                            InsertMethods.unwrap(childNodes[index2].parentNode);\n                        }\n                        InsertMethods.Wrap(childNodes[index2], docElement.createElement(this.defaultTag));\n                        InsertMethods.unwrap(childNodes[index2]);\n                    }\n                    else if (this.BLOCK_TAGS.indexOf(childNodes[index2].nodeName.toLocaleLowerCase()) > -1 &&\n                        childNodes[index2].parentNode.nodeName.toLocaleLowerCase() ===\n                            childNodes[index2].nodeName.toLocaleLowerCase()) {\n                        InsertMethods.unwrap(childNodes[index2]);\n                    }\n                }\n            }\n            else {\n                InsertMethods.Wrap(parentNodes[index1], docElement.createElement(this.defaultTag));\n                InsertMethods.unwrap(parentNodes[index1]);\n            }\n        }\n    };\n    ClearFormat.clearInlines = function (textNodes, nodes, range, nodeCutter, \n    // eslint-disable-next-line\n    endNode) {\n        for (var index = 0; index < textNodes.length; index++) {\n            var currentInlineNode = textNodes[index];\n            var currentNode = void 0;\n            while (!this.domNode.isBlockNode(currentInlineNode) &&\n                (currentInlineNode.parentElement && !currentInlineNode.parentElement.classList.contains('e-img-inner'))) {\n                currentNode = currentInlineNode;\n                currentInlineNode = currentInlineNode.parentElement;\n            }\n            if (currentNode &&\n                IsFormatted.inlineTags.indexOf(currentNode.nodeName.toLocaleLowerCase()) > -1) {\n                nodeCutter.GetSpliceNode(range, currentNode);\n                this.removeInlineParent(currentNode);\n            }\n        }\n    };\n    ClearFormat.removeInlineParent = function (textNodes) {\n        var nodes = InsertMethods.unwrap(textNodes);\n        for (var index = 0; index < nodes.length; index++) {\n            if (nodes[index].parentNode.childNodes.length === 1 && !nodes[index].parentNode.classList.contains('e-img-inner')\n                && IsFormatted.inlineTags.indexOf(nodes[index].parentNode.nodeName.toLocaleLowerCase()) > -1) {\n                this.removeInlineParent(nodes[index].parentNode);\n            }\n            else if (IsFormatted.inlineTags.indexOf(nodes[index].nodeName.toLocaleLowerCase()) > -1) {\n                this.removeInlineParent(nodes[index]);\n            }\n        }\n    };\n    ClearFormat.BLOCK_TAGS = ['address', 'article', 'aside', 'blockquote',\n        'details', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer',\n        'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'li', 'main', 'nav',\n        'noscript', 'ol', 'p', 'pre', 'section', 'ul'];\n    ClearFormat.NONVALID_PARENT_TAGS = ['thead', 'tbody', 'ul', 'ol', 'table', 'tfoot', 'tr'];\n    ClearFormat.IGNORE_PARENT_TAGS = ['ul', 'ol', 'table'];\n    ClearFormat.NONVALID_TAGS = ['thead', 'tbody', 'figcaption', 'td', 'tr', 'th', 'tfoot', 'figcaption', 'li'];\n    ClearFormat.defaultTag = 'p';\n    return ClearFormat;\n}());\nexport { ClearFormat };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}