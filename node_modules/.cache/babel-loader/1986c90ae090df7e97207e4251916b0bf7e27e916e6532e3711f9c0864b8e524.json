{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = [\"width\", \"height\"];\nconst _hoisted_2 = [\"task\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_calendar = _resolveComponent(\"calendar\");\n  const _component_days_highlight = _resolveComponent(\"days-highlight\");\n  const _component_grid = _resolveComponent(\"grid\");\n  const _component_dependency_lines = _resolveComponent(\"dependency-lines\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"gantt-elastic__chart\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart']\n    }),\n    ref: \"chart\"\n  }, [_createElementVNode(\"div\", {\n    class: \"gantt-elastic__chart-calendar-container\",\n    ref: \"chartCalendarContainer\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-calendar-container'],\n      height: $options.root.state.options.calendar.height + 'px',\n      'margin-bottom': $options.root.state.options.calendar.gap + 'px'\n    })\n  }, [_createVNode(_component_calendar)], 4 /* STYLE */), _createElementVNode(\"div\", {\n    class: \"gantt-elastic__chart-graph-container\",\n    ref: \"chartGraphContainer\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-graph-container'],\n      height: $options.root.state.options.height - $options.root.state.options.calendar.height + 'px'\n    })\n  }, [_createElementVNode(\"div\", {\n    style: _normalizeStyle({\n      ...$options.root.style['chart-area'],\n      width: $options.root.state.options.width + 'px',\n      height: $options.root.state.options.rowsHeight + 'px'\n    })\n  }, [_createElementVNode(\"div\", {\n    class: \"gantt-elastic__chart-graph\",\n    ref: \"chartGraph\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-graph'],\n      height: '100%'\n    })\n  }, [(_openBlock(), _createElementBlock(\"svg\", {\n    class: \"gantt-elastic__chart-graph-svg\",\n    style: _normalizeStyle({\n      ...$options.root.style['chart-graph-svg']\n    }),\n    ref: \"chartGraphSvg\",\n    x: \"0\",\n    y: \"0\",\n    width: $options.root.state.options.width + 'px',\n    height: $options.root.state.options.allVisibleTasksHeight + 'px',\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, [_createVNode(_component_days_highlight), _createVNode(_component_grid), _createVNode(_component_dependency_lines, {\n    tasks: $options.root.visibleTasks\n  }, null, 8 /* PROPS */, [\"tasks\"]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.root.visibleTasks, task => {\n    return _openBlock(), _createElementBlock(\"g\", {\n      class: \"gantt-elastic__chart-row-wrapper\",\n      style: _normalizeStyle({\n        ...$options.root.style['chart-row-wrapper']\n      }),\n      task: task,\n      key: task.id\n    }, [(_openBlock(), _createBlock(_resolveDynamicComponent(task.type), {\n      task: task\n    }, null, 8 /* PROPS */, [\"task\"]))], 12 /* STYLE, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))], 12 /* STYLE, PROPS */, _hoisted_1))], 4 /* STYLE */)], 4 /* STYLE */)], 4 /* STYLE */)], 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","class","style","_normalizeStyle","$options","root","ref","_createElementVNode","state","options","calendar","height","gap","_createVNode","_component_calendar","width","rowsHeight","x","y","allVisibleTasksHeight","xmlns","_component_days_highlight","_component_grid","_component_dependency_lines","tasks","visibleTasks","_Fragment","_renderList","task","key","id","_createBlock","_resolveDynamicComponent","type","_hoisted_2","_hoisted_1"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Chart/Chart.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview Chart component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div class=\"gantt-elastic__chart\" :style=\"{ ...root.style['chart'] }\" ref=\"chart\">\n    <div\n      class=\"gantt-elastic__chart-calendar-container\"\n      ref=\"chartCalendarContainer\"\n      :style=\"{\n        ...root.style['chart-calendar-container'],\n        height: root.state.options.calendar.height + 'px',\n        'margin-bottom': root.state.options.calendar.gap + 'px'\n      }\"\n    >\n      <calendar></calendar>\n    </div>\n    <div\n      class=\"gantt-elastic__chart-graph-container\"\n      ref=\"chartGraphContainer\"\n      :style=\"{\n        ...root.style['chart-graph-container'],\n        height: root.state.options.height - root.state.options.calendar.height + 'px'\n      }\"\n    >\n      <div\n        :style=\"{\n          ...root.style['chart-area'],\n          width: root.state.options.width + 'px',\n          height: root.state.options.rowsHeight + 'px'\n        }\"\n      >\n        <div\n          class=\"gantt-elastic__chart-graph\"\n          ref=\"chartGraph\"\n          :style=\"{ ...root.style['chart-graph'], height: '100%' }\"\n        >\n          <svg\n            class=\"gantt-elastic__chart-graph-svg\"\n            :style=\"{ ...root.style['chart-graph-svg'] }\"\n            ref=\"chartGraphSvg\"\n            x=\"0\"\n            y=\"0\"\n            :width=\"root.state.options.width + 'px'\"\n            :height=\"root.state.options.allVisibleTasksHeight + 'px'\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <days-highlight></days-highlight>\n            <grid></grid>\n            <dependency-lines :tasks=\"root.visibleTasks\"></dependency-lines>\n            <g\n              class=\"gantt-elastic__chart-row-wrapper\"\n              :style=\"{ ...root.style['chart-row-wrapper'] }\"\n              v-for=\"task in root.visibleTasks\"\n              :task=\"task\"\n              :key=\"task.id\"\n            >\n              <component :task=\"task\" :is=\"task.type\"></component>\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Grid from './Grid.vue';\nimport DaysHighlight from './DaysHighlight.vue';\nimport Calendar from '../Calendar/Calendar.vue';\nimport DependencyLines from './DependencyLines.vue';\nimport Task from './Row/Task.vue';\nimport Milestone from './Row/Milestone.vue';\nimport Project from './Row/Project.vue';\nexport default {\n  name: 'Chart',\n  components: {\n    Grid,\n    DependencyLines,\n    Calendar,\n    Task,\n    Milestone,\n    Project,\n    DaysHighlight\n  },\n  inject: ['root'],\n  data() {\n    return {\n      moving: false\n    };\n  },\n  /**\n   * Mounted\n   */\n  mounted() {\n    this.root.state.refs.chart = this.$refs.chart;\n    this.root.state.refs.chartCalendarContainer = this.$refs.chartCalendarContainer;\n    this.root.state.refs.chartGraphContainer = this.$refs.chartGraphContainer;\n    this.root.state.refs.chartGraph = this.$refs.chartGraph;\n    this.root.state.refs.chartGraphSvg = this.$refs.chartGraphSvg;\n  },\n\n  computed: {\n    /**\n     * Get view box\n     *\n     * @returns {string}\n     */\n    getViewBox() {\n      return `0 0 ${this.root.state.options.width} ${this.root.state.options.allVisibleTasksHeight}`;\n    }\n  }\n};\n</script>\n"],"mappings":";mBAAA;mBAAA;;;;;;uBASEA,mBAAA,CA0DM;IA1DDC,KAAK,EAAC,sBAAsB;IAAEC,KAAK,EAT1CC,eAAA;MAAA,GASiDC,QAAA,CAAAC,IAAI,CAACH,KAAK;IAAA;IAAaI,GAAG,EAAC;MACxEC,mBAAA,CAUM;IATJN,KAAK,EAAC,yCAAyC;IAC/CK,GAAG,EAAC,wBAAwB;IAC3BJ,KAAK,EAbZC,eAAA;SAa2BC,QAAA,CAAAC,IAAI,CAACH,KAAK;cAA8CE,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACC,MAAM;uBAAkCP,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACE,GAAG;;MAMhLC,YAAA,CAAqBC,mBAAA,E,kBAEvBP,mBAAA,CA6CM;IA5CJN,KAAK,EAAC,sCAAsC;IAC5CK,GAAG,EAAC,qBAAqB;IACxBJ,KAAK,EAxBZC,eAAA;SAwB2BC,QAAA,CAAAC,IAAI,CAACH,KAAK;cAA2CE,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACE,MAAM,GAAGP,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACC,MAAM;;MAKxIJ,mBAAA,CAoCM;IAnCHL,KAAK,EA9BdC,eAAA;SA8B+BC,QAAA,CAAAC,IAAI,CAACH,KAAK;aAAiCE,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACM,KAAK;cAA2BX,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACO,UAAU;;MAMlJT,mBAAA,CA4BM;IA3BJN,KAAK,EAAC,4BAA4B;IAClCK,GAAG,EAAC,YAAY;IACfJ,KAAK,EAvChBC,eAAA;MAAA,GAuCuBC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAAS,MAAA;IAAA;qBAEvBX,mBAAA,CAsBM;IArBJC,KAAK,EAAC,gCAAgC;IACrCC,KAAK,EA3ClBC,eAAA;MAAA,GA2CyBC,QAAA,CAAAC,IAAI,CAACH,KAAK;IAAA;IACvBI,GAAG,EAAC,eAAe;IACnBW,CAAC,EAAC,GAAG;IACLC,CAAC,EAAC,GAAG;IACJH,KAAK,EAAEX,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACM,KAAK;IAC/BJ,MAAM,EAAEP,QAAA,CAAAC,IAAI,CAACG,KAAK,CAACC,OAAO,CAACU,qBAAqB;IACjDC,KAAK,EAAC;MAENP,YAAA,CAAiCQ,yBAAA,GACjCR,YAAA,CAAaS,eAAA,GACbT,YAAA,CAAgEU,2BAAA;IAA7CC,KAAK,EAAEpB,QAAA,CAAAC,IAAI,CAACoB;yDAC/BzB,mBAAA,CAQI0B,SAAA,QA9DhBC,WAAA,CAyD6BvB,QAAA,CAAAC,IAAI,CAACoB,YAAY,EAAzBG,IAAI;yBAHb5B,mBAAA,CAQI;MAPFC,KAAK,EAAC,kCAAkC;MACvCC,KAAK,EAxDpBC,eAAA;QAAA,GAwD2BC,QAAA,CAAAC,IAAI,CAACH,KAAK;MAAA;MAEtB0B,IAAI,EAAEA,IAAI;MACVC,GAAG,EAAED,IAAI,CAACE;uBAEXC,YAAA,CAAoDC,wBA7DlE,CA6D2CJ,IAAI,CAACK,IAAI;MAA1BL,IAAI,EAAEA;IAAI,mC,yBA7DpCM,UAAA;0DAAAC,UAAA,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}