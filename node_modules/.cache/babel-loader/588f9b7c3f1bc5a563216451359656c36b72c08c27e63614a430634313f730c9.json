{"ast":null,"code":"import * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Lists internal component\n *\n * @hidden\n */\nvar MDLists = /** @class */function () {\n  /**\n   * Constructor for creating the Lists plugin\n   *\n   * @param {IMDFormats} options - specifies the options\n   * @hidden\n   */\n  function MDLists(options) {\n    extend(this, this, options, true);\n    this.selection = this.parent.markdownSelection;\n    this.addEventListener();\n  }\n  MDLists.prototype.addEventListener = function () {\n    this.parent.observer.on(CONSTANT.LISTS_COMMAND, this.applyListsHandler, this);\n    this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler, this);\n    this.parent.observer.on(EVENTS.KEY_UP_HANDLER, this.keyUpHandler, this);\n    this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n  };\n  MDLists.prototype.removeEventListener = function () {\n    this.parent.observer.off(CONSTANT.LISTS_COMMAND, this.applyListsHandler);\n    this.parent.observer.off(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler);\n    this.parent.observer.off(EVENTS.KEY_UP_HANDLER, this.keyUpHandler);\n    this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n  };\n  MDLists.prototype.keyDownHandler = function (event) {\n    switch (event.event.which) {\n      case 9:\n        this.tabKey(event);\n        break;\n    }\n    switch (event.event.action) {\n      case 'ordered-list':\n        this.applyListsHandler({\n          subCommand: 'OL',\n          callBack: event.callBack\n        });\n        event.event.preventDefault();\n        break;\n      case 'unordered-list':\n        this.applyListsHandler({\n          subCommand: 'UL',\n          callBack: event.callBack\n        });\n        event.event.preventDefault();\n        break;\n    }\n  };\n  MDLists.prototype.keyUpHandler = function (event) {\n    switch (event.event.which) {\n      case 13:\n        this.enterKey(event);\n        break;\n    }\n  };\n  MDLists.prototype.tabKey = function (event) {\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var addedLength = 0;\n    var isNotFirst = this.isNotFirstLine(textArea, parents[0]);\n    if (!isNotFirst && !event.event.shiftKey) {\n      this.restore(textArea, start, end + addedLength, event);\n      return;\n    }\n    var listFormat = this.olListType();\n    var regex = this.getListRegex();\n    this.currentAction = this.getAction(parents[0].text);\n    for (var i = 0; i < parents.length; i++) {\n      // eslint-disable-next-line max-len\n      var prevIndex = event.event.shiftKey ? parents[i].line - 1 : parents[i].line - 1;\n      var prevLine = this.selection.getLine(textArea, prevIndex);\n      if (prevLine && (!event.event.shiftKey && isNotFirst || event.event.shiftKey)) {\n        var prevLineSplit = prevLine.split('. ');\n        var tabSpace = '\\t';\n        var tabSpaceLength = event.event.shiftKey ? -tabSpace.length : tabSpace.length;\n        var splitTab = parents[i].text.split('\\t');\n        if (event.event.shiftKey && splitTab.length === 1) {\n          break;\n        }\n        if (this.currentAction === 'OL' && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat) {\n          event.event.preventDefault();\n          parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n          var curTabSpace = this.getTabSpace(parents[i].text);\n          var prevTabSpace = this.getTabSpace(prevLine);\n          var splitText = parents[i].text.split('. ');\n          if (curTabSpace === prevTabSpace) {\n            this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit[0].trim()), event, textArea, parents, i, end);\n          } else if (prevTabSpace < curTabSpace) {\n            this.changeTextAreaValue(splitText, '1. ', event, textArea, parents, i, end);\n          } else {\n            for (; prevTabSpace.length > curTabSpace.length; null) {\n              prevIndex = prevIndex - 1;\n              prevLine = this.selection.getLine(textArea, prevIndex);\n              var prevLineSplit_1 = prevLine.trim().split('. ');\n              if (/^\\d+$/.test(prevLineSplit_1[0])) {\n                prevTabSpace = this.getTabSpace(prevLine);\n                if (prevTabSpace.length <= curTabSpace.length) {\n                  this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit_1[0]), event, textArea, parents, i, end);\n                  break;\n                }\n              }\n            }\n          }\n        } else if (this.currentAction === 'UL' && regex.test(prevLine.trim()) || !listFormat) {\n          event.event.preventDefault();\n          parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n          textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n        }\n        start = i === 0 ? start + tabSpaceLength : start;\n        addedLength += tabSpaceLength;\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            // eslint-disable-next-line max-len\n            parents[j].start = j !== 0 ? parents[j].start + tabSpaceLength : parents[j].start;\n            parents[j].end = parents[j].end + tabSpaceLength;\n          }\n        }\n      }\n    }\n    this.restore(textArea, start, end + addedLength, event);\n  };\n  MDLists.prototype.changeTextAreaValue = function (splitText, prefixValue, event,\n  // eslint-disable-next-line\n  textArea, parents, k, end) {\n    var prefix = prefixValue;\n    splitText.splice(0, 1);\n    var textAreaLength = this.selection.getAllParents(textArea.value).length;\n    var changedList = '';\n    var curTabSpace = this.getTabSpace(parents[k].text);\n    // eslint-disable-next-line\n    var prefixNumber = parseInt(prefix.split('.')[0], null);\n    var nestedTabSpace = this.getTabSpace(parents[k].text);\n    var nestedlistorder = true;\n    var nestedListStart = true;\n    var curTabSpaceLength;\n    var nextPrefixValue = -1;\n    var traversIncreased = true;\n    var nextLineLength = 0;\n    var lineBreak = '';\n    changedList = this.selection.getLine(textArea, parents[0].line + 1) !== '' ? '' : changedList + textArea.value.substr(parents[0].end, textArea.value.length);\n    for (var i = 1; i < textAreaLength && !isNullOrUndefined(this.selection.getLine(textArea, parents[0].line + i)) && this.selection.getLine(textArea, parents[0].line + i) !== ''; i++) {\n      var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n      var nextTabSpace = this.getTabSpace(nextLine);\n      var nextLineSplit = nextLine.split('. ');\n      if (nextLineSplit.length === 1) {\n        changedList += textArea.value.substr(parents[0].end + nextLineLength, textArea.value.length);\n        break;\n      } else {\n        nextLineLength += nextLine.length;\n        var shiftTabTargetList = false;\n        curTabSpaceLength = event.event.shiftKey ? curTabSpace.length + 1 : curTabSpace.length - 1;\n        if (nextTabSpace.length > nestedTabSpace.length) {\n          traversIncreased = false;\n        }\n        if (curTabSpace.length !== nextTabSpace.length && nextTabSpace.length < nestedTabSpace.length) {\n          nestedListStart = true;\n          nestedlistorder = false;\n          shiftTabTargetList = event.event.shiftKey && curTabSpace.length === nextTabSpace.length ? (nestedListStart = false, true) : false;\n        } else if (traversIncreased && event.event.shiftKey && curTabSpace.length === nextTabSpace.length && nextTabSpace.length === nestedTabSpace.length) {\n          nestedListStart = false;\n          shiftTabTargetList = true;\n        }\n        lineBreak = changedList === '' ? '' : '\\n';\n        if (curTabSpaceLength === nextTabSpace.length && nestedListStart) {\n          var nextPrefix = event.event.shiftKey ? (nextPrefixValue++, this.nextOrderedListValue(nextPrefixValue.toString())) : this.previousOrderedListValue(nextLineSplit[0]);\n          nextLineSplit.splice(0, 1);\n          changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n        } else if (curTabSpace.length === nextTabSpace.length && nestedlistorder || shiftTabTargetList) {\n          var nextPrefix = this.nextOrderedListValue(prefixNumber.toString());\n          prefixNumber++;\n          nextLineSplit.splice(0, 1);\n          changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n        } else {\n          changedList = changedList + lineBreak + nextLine;\n          nestedListStart = false;\n        }\n        nestedTabSpace = this.getTabSpace(nextLine);\n      }\n    }\n    parents[k].text = this.getTabSpace(parents[k].text) + prefix + splitText.join('. ') + '\\n';\n    textArea.value = textArea.value.substr(0, parents[k].start) + parents[k].text + changedList;\n  };\n  MDLists.prototype.getTabSpace = function (line) {\n    var split = line.split('\\t');\n    var tabs = '';\n    for (var i = 0; i < split.length; i++) {\n      if (split[i] === '') {\n        tabs += '\\t';\n      } else {\n        break;\n      }\n    }\n    return tabs;\n  };\n  MDLists.prototype.isNotFirstLine = function (textArea, points) {\n    var currentLine = points.text;\n    var prevIndex = points.line - 1;\n    var prevLine = this.selection.getLine(textArea, prevIndex);\n    var regex = this.getListRegex();\n    var isNotFirst = false;\n    var regexFirstCondition;\n    if (prevLine) {\n      this.currentAction = this.getAction(prevLine);\n      var prevLineSplit = prevLine.split('. ');\n      regexFirstCondition = this.currentAction === 'OL' ? /^\\d+$/.test(prevLineSplit[0].trim()) : regex.test(prevLine.trim());\n    }\n    if (prevLine && regexFirstCondition) {\n      var curTabSpace = this.getTabSpace(currentLine);\n      var prevTabSpace = this.getTabSpace(prevLine);\n      isNotFirst = curTabSpace === prevTabSpace ? true : isNotFirst;\n      for (; prevTabSpace.length > curTabSpace.length; null) {\n        prevIndex = prevIndex - 1;\n        prevLine = this.selection.getLine(textArea, prevIndex);\n        var prevLineSplit = prevLine.trim().split('. ');\n        var regexSecondCondition = this.currentAction === 'OL' ? /^\\d+$/.test(prevLineSplit[0]) : regex.test(prevLine.trim());\n        if (regexSecondCondition) {\n          prevTabSpace = this.getTabSpace(prevLine);\n          if (prevTabSpace.length <= curTabSpace.length) {\n            isNotFirst = true;\n            break;\n          }\n        }\n      }\n    }\n    return isNotFirst;\n  };\n  MDLists.prototype.getAction = function (line) {\n    var ol = line.split('. ')[0];\n    // eslint-disable-next-line\n    var currentState = /^\\d+$/.test(ol.trim());\n    // eslint-disable-next-line\n    var ul = line.trim().split(new RegExp('^(' + this.selection.replaceSpecialChar(this.syntax.UL).trim() + ')'))[1];\n    return currentState ? 'OL' : ul ? 'UL' : 'NOTLIST';\n  };\n  MDLists.prototype.nextOrderedListValue = function (previousLine) {\n    // eslint-disable-next-line\n    var currentValue = parseInt(previousLine, null);\n    var nextValue = currentValue + 1;\n    return nextValue.toString() + '. ';\n  };\n  MDLists.prototype.previousOrderedListValue = function (previousLine) {\n    // eslint-disable-next-line\n    var currentValue = parseInt(previousLine, null);\n    var nextValue = currentValue - 1;\n    return nextValue.toString() + '. ';\n  };\n  MDLists.prototype.enterKey = function (event) {\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var prevLine = this.selection.getLine(textArea, parents[0].line - 1);\n    var listFormat = this.olListType();\n    var regex = this.getListRegex();\n    var prevLineSplit = [];\n    if (!isNullOrUndefined(prevLine)) {\n      prevLineSplit = prevLine.split('. ');\n      this.currentAction = this.getAction(prevLine);\n    }\n    var addedLength = 0;\n    if (this.currentAction === 'OL' && prevLineSplit.length > 1 && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat && prevLineSplit[1] !== '') {\n      var tabSpace = this.getTabSpace(prevLine);\n      this.currentAction = this.getAction(prevLine);\n      var prefix = this.nextOrderedListValue(prevLineSplit[0]);\n      parents[0].text = tabSpace + prefix + parents[0].text;\n      var textAreaLength = this.selection.getAllParents(textArea.value).length;\n      var changedList = '\\n';\n      var curTabSpace = this.getTabSpace(prevLine);\n      var nestedTabSpace = this.getTabSpace(parents[0].text);\n      var nestedListOrder = true;\n      for (var i = 1; i < textAreaLength && textArea.value.substr(parents[0].end, textArea.value.length) !== ''; i++) {\n        var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n        if (isNullOrUndefined(nextLine)) {\n          changedList = changedList + '';\n        } else {\n          var nextLineSplit = nextLine.split('. ');\n          var nextTabSpace = this.getTabSpace(nextLine);\n          if (nextTabSpace.length < nestedTabSpace.length) {\n            nestedListOrder = false;\n          }\n          if (nextLineSplit.length > 1 && /^\\d+$/.test(nextLineSplit[0].trim()) && curTabSpace.length === nextTabSpace.length && nestedListOrder) {\n            var nextPrefix = this.nextOrderedListValue(nextLineSplit[0]);\n            nextLineSplit.splice(0, 1);\n            changedList = changedList + nextTabSpace + nextPrefix + nextLineSplit.join('. ') + '\\n';\n          } else {\n            changedList = changedList + nextLine + '\\n';\n            nestedTabSpace = this.getTabSpace(nextLine);\n          }\n        }\n      }\n      textArea.value = textArea.value.substr(0, parents[0].start) + curTabSpace + prefix + this.selection.getLine(textArea, parents[0].line) + changedList;\n      start = start + prefix.length + tabSpace.length;\n      addedLength += prefix.length + tabSpace.length;\n    } else if (this.currentAction === 'UL' && prevLine && regex.test(prevLine.trim()) && prevLine.trim().replace(regex, '') !== '' || this.currentAction === 'OL' && !listFormat) {\n      var tabSpace = this.getTabSpace(prevLine);\n      var prefix = this.syntax[this.currentAction];\n      parents[0].text = tabSpace + prefix + parents[0].text + (parents[0].text.trim().length > 0 ? '\\n' : '');\n      textArea.value = textArea.value.substr(0, parents[0].start) + parents[0].text + textArea.value.substr(parents[0].end, textArea.value.length);\n      start = start + prefix.length + tabSpace.length;\n      addedLength += prefix.length + tabSpace.length;\n    }\n    this.restore(textArea, start, end + addedLength, event);\n  };\n  MDLists.prototype.olListType = function () {\n    var olSyntaxList = this.syntax.OL.split('.,');\n    var listType = olSyntaxList.length === 1 ? null :\n    // eslint-disable-next-line\n    parseInt(olSyntaxList[2].trim(), null) - parseInt(olSyntaxList[0].trim(), null);\n    if (listType) {\n      return 1;\n    } else {\n      return 0;\n    }\n  };\n  MDLists.prototype.applyListsHandler = function (e) {\n    var textArea = this.parent.element;\n    this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n    this.currentAction = e.subCommand;\n    var start = textArea.selectionStart;\n    var end = textArea.selectionEnd;\n    var addedLength = 0;\n    var startLength = 0;\n    var endLength = 0;\n    var parents = this.selection.getSelectedParentPoints(textArea);\n    var prefix = '';\n    var listFormat = this.olListType();\n    var regex;\n    var perfixObj = {};\n    for (var i = 0; i < parents.length; i++) {\n      if (listFormat) {\n        regex = this.currentAction === 'OL' ? i + listFormat + '. ' : this.syntax[this.currentAction];\n      } else {\n        regex = this.currentAction === 'OL' ? this.syntax.OL : this.syntax[this.currentAction];\n      }\n      if (!this.selection.isStartWith(parents[i].text, regex)) {\n        if (parents[i].text === '' && i === 0) {\n          this.selection.save(start, end);\n          if (parents.length !== 1) {\n            for (var j = i; j < parents.length; j++) {\n              parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n              parents[j].end = 1 + parents[j].end;\n            }\n          }\n        }\n        var preLineTabSpaceLength = !isNullOrUndefined(parents[i - 1]) ? this.getTabSpace(parents[i - 1].text).length : 0;\n        var replace = this.appliedLine(parents[i].text, regex, perfixObj, preLineTabSpaceLength);\n        prefix = replace.line ? prefix : regex;\n        parents[i].text = replace.line ? replace.line : prefix + parents[i].text;\n        replace.space = replace.space ? replace.space : 0;\n        textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end, textArea.value.length);\n        start = i === 0 ? start + prefix.length + replace.space > 0 ? start + prefix.length + replace.space : 0 : start;\n        addedLength += prefix.length + replace.space;\n        if (parents.length !== 1) {\n          for (var j = i; j < parents.length; j++) {\n            parents[j].start = j !== 0 ? prefix.length + parents[j].start + replace.space : parents[j].start;\n            parents[j].end = prefix.length + parents[j].end + replace.space;\n          }\n        }\n        this.restore(textArea, start, end + addedLength, null);\n      } else {\n        parents[i].text = parents[i].text.replace(regex, '');\n        textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' + textArea.value.substr(parents[i].end + endLength, textArea.value.length);\n        endLength -= regex.length;\n        startLength = regex.length;\n        this.restore(textArea, start - startLength, end + endLength, null);\n      }\n    }\n    this.restore(textArea, null, null, e);\n  };\n  MDLists.prototype.appliedLine = function (line, prefixPattern, perfixObj, preTabSpaceLength) {\n    var points = {};\n    // eslint-disable-next-line\n    var regex = new RegExp('^[' + this.syntax.UL.trim() + ']');\n    var lineSplit = line.split('. ');\n    var currentPrefix = lineSplit[0] + '. ';\n    var isExist = regex.test(line.trim()) || line.trim() === this.syntax.OL.trim() || line.trim() === this.syntax.UL.trim() || /^\\d+$/.test(lineSplit[0].trim());\n    var listFormat = this.olListType();\n    var curTabSpaceLength = this.getTabSpace(line).length;\n    if (this.currentAction === 'OL' && listFormat) {\n      perfixObj[curTabSpaceLength.toString()] = !isNullOrUndefined(perfixObj[curTabSpaceLength.toString()]) ? perfixObj[curTabSpaceLength.toString()].valueOf() + 1 : 1;\n      prefixPattern = perfixObj[curTabSpaceLength.toString()].valueOf().toString() + '. ';\n      if (!isNullOrUndefined(preTabSpaceLength) && preTabSpaceLength > curTabSpaceLength) {\n        perfixObj[preTabSpaceLength.toString()] = 0;\n      }\n    }\n    if (isExist) {\n      var replace = void 0;\n      var pattern = void 0;\n      // eslint-disable-next-line\n      var space = 0;\n      if (regex.test(line.trim())) {\n        pattern = this.syntax.UL;\n        replace = prefixPattern;\n        points.space = prefixPattern.trim().length - this.syntax.UL.trim().length;\n      } else if (/^\\d+$/.test(lineSplit[0].trim()) && listFormat) {\n        pattern = lineSplit[0].trim() + '. ';\n        replace = prefixPattern;\n        points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n      } else if (/^\\d+$/.test(lineSplit[0].trim())) {\n        pattern = lineSplit[0].trim() + '. ';\n        replace = this.syntax.UL;\n        points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n      }\n      points.line = line.replace(pattern, replace);\n    }\n    return points;\n  };\n  MDLists.prototype.restore = function (textArea, start, end, event) {\n    if (!isNullOrUndefined(start) && !isNullOrUndefined(start)) {\n      this.selection.save(start, end);\n    }\n    if (!isNullOrUndefined(event)) {\n      this.selection.restore(textArea);\n    }\n    if (event && event.callBack) {\n      event.callBack({\n        requestType: this.currentAction,\n        selectedText: this.selection.getSelectedText(textArea),\n        editorMode: 'Markdown',\n        event: event.event\n      });\n    }\n  };\n  MDLists.prototype.getListRegex = function () {\n    var regex = '';\n    var configKey = Object.keys(this.syntax);\n    var regExp = RegExp;\n    for (var j = 0; j < configKey.length; j++) {\n      var syntax = this.selection.replaceSpecialChar(this.syntax[configKey[j]]);\n      regex += regex === '' ? '^(' + syntax + ')|^(' + syntax.trim() + ')' : '|^(' + syntax + ')|^(' + syntax.trim() + ')';\n    }\n    return new regExp(regex);\n  };\n  MDLists.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return MDLists;\n}();\nexport { MDLists };","map":{"version":3,"names":["CONSTANT","extend","EVENTS","isNullOrUndefined","MDLists","options","selection","parent","markdownSelection","addEventListener","prototype","observer","on","LISTS_COMMAND","applyListsHandler","KEY_DOWN_HANDLER","keyDownHandler","KEY_UP_HANDLER","keyUpHandler","INTERNAL_DESTROY","destroy","removeEventListener","off","event","which","tabKey","action","subCommand","callBack","preventDefault","enterKey","textArea","element","save","selectionStart","selectionEnd","start","end","parents","getSelectedParentPoints","addedLength","isNotFirst","isNotFirstLine","shiftKey","restore","listFormat","olListType","regex","getListRegex","currentAction","getAction","text","i","length","prevIndex","line","prevLine","getLine","prevLineSplit","split","tabSpace","tabSpaceLength","splitTab","test","trim","splice","join","curTabSpace","getTabSpace","prevTabSpace","splitText","changeTextAreaValue","nextOrderedListValue","prevLineSplit_1","value","substr","j","prefixValue","k","prefix","textAreaLength","getAllParents","changedList","prefixNumber","parseInt","nestedTabSpace","nestedlistorder","nestedListStart","curTabSpaceLength","nextPrefixValue","traversIncreased","nextLineLength","lineBreak","nextLine","nextTabSpace","nextLineSplit","shiftTabTargetList","nextPrefix","toString","previousOrderedListValue","tabs","points","currentLine","regexFirstCondition","regexSecondCondition","ol","currentState","ul","RegExp","replaceSpecialChar","syntax","UL","previousLine","currentValue","nextValue","nestedListOrder","replace","olSyntaxList","OL","listType","e","startLength","endLength","perfixObj","isStartWith","preLineTabSpaceLength","appliedLine","space","prefixPattern","preTabSpaceLength","lineSplit","currentPrefix","isExist","valueOf","pattern","requestType","selectedText","getSelectedText","editorMode","configKey","Object","keys","regExp"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/markdown-parser/plugin/lists.js"],"sourcesContent":["import * as CONSTANT from './../base/constant';\nimport { extend } from '@syncfusion/ej2-base';\nimport * as EVENTS from './../../common/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Lists internal component\n *\n * @hidden\n */\nvar MDLists = /** @class */ (function () {\n    /**\n     * Constructor for creating the Lists plugin\n     *\n     * @param {IMDFormats} options - specifies the options\n     * @hidden\n     */\n    function MDLists(options) {\n        extend(this, this, options, true);\n        this.selection = this.parent.markdownSelection;\n        this.addEventListener();\n    }\n    MDLists.prototype.addEventListener = function () {\n        this.parent.observer.on(CONSTANT.LISTS_COMMAND, this.applyListsHandler, this);\n        this.parent.observer.on(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler, this);\n        this.parent.observer.on(EVENTS.KEY_UP_HANDLER, this.keyUpHandler, this);\n        this.parent.observer.on(EVENTS.INTERNAL_DESTROY, this.destroy, this);\n    };\n    MDLists.prototype.removeEventListener = function () {\n        this.parent.observer.off(CONSTANT.LISTS_COMMAND, this.applyListsHandler);\n        this.parent.observer.off(EVENTS.KEY_DOWN_HANDLER, this.keyDownHandler);\n        this.parent.observer.off(EVENTS.KEY_UP_HANDLER, this.keyUpHandler);\n        this.parent.observer.off(EVENTS.INTERNAL_DESTROY, this.destroy);\n    };\n    MDLists.prototype.keyDownHandler = function (event) {\n        switch (event.event.which) {\n            case 9:\n                this.tabKey(event);\n                break;\n        }\n        switch (event.event.action) {\n            case 'ordered-list':\n                this.applyListsHandler({ subCommand: 'OL', callBack: event.callBack });\n                event.event.preventDefault();\n                break;\n            case 'unordered-list':\n                this.applyListsHandler({ subCommand: 'UL', callBack: event.callBack });\n                event.event.preventDefault();\n                break;\n        }\n    };\n    MDLists.prototype.keyUpHandler = function (event) {\n        switch (event.event.which) {\n            case 13:\n                this.enterKey(event);\n                break;\n        }\n    };\n    MDLists.prototype.tabKey = function (event) {\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var addedLength = 0;\n        var isNotFirst = this.isNotFirstLine(textArea, parents[0]);\n        if (!isNotFirst && !event.event.shiftKey) {\n            this.restore(textArea, start, end + addedLength, event);\n            return;\n        }\n        var listFormat = this.olListType();\n        var regex = this.getListRegex();\n        this.currentAction = this.getAction(parents[0].text);\n        for (var i = 0; i < parents.length; i++) {\n            // eslint-disable-next-line max-len\n            var prevIndex = event.event.shiftKey ? parents[i].line - 1 : parents[i].line - 1;\n            var prevLine = this.selection.getLine(textArea, prevIndex);\n            if (prevLine && (!event.event.shiftKey && isNotFirst || (event.event.shiftKey))) {\n                var prevLineSplit = prevLine.split('. ');\n                var tabSpace = '\\t';\n                var tabSpaceLength = event.event.shiftKey ? -tabSpace.length : tabSpace.length;\n                var splitTab = parents[i].text.split('\\t');\n                if (event.event.shiftKey && splitTab.length === 1) {\n                    break;\n                }\n                if (this.currentAction === 'OL' && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat) {\n                    event.event.preventDefault();\n                    parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n                    var curTabSpace = this.getTabSpace(parents[i].text);\n                    var prevTabSpace = this.getTabSpace(prevLine);\n                    var splitText = parents[i].text.split('. ');\n                    if (curTabSpace === prevTabSpace) {\n                        this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit[0].trim()), event, textArea, parents, i, end);\n                    }\n                    else if (prevTabSpace < curTabSpace) {\n                        this.changeTextAreaValue(splitText, '1. ', event, textArea, parents, i, end);\n                    }\n                    else {\n                        for (; prevTabSpace.length > curTabSpace.length; null) {\n                            prevIndex = prevIndex - 1;\n                            prevLine = this.selection.getLine(textArea, prevIndex);\n                            var prevLineSplit_1 = prevLine.trim().split('. ');\n                            if (/^\\d+$/.test(prevLineSplit_1[0])) {\n                                prevTabSpace = this.getTabSpace(prevLine);\n                                if (prevTabSpace.length <= curTabSpace.length) {\n                                    this.changeTextAreaValue(splitText, this.nextOrderedListValue(prevLineSplit_1[0]), event, textArea, parents, i, end);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (this.currentAction === 'UL' && regex.test(prevLine.trim()) || !listFormat) {\n                    event.event.preventDefault();\n                    parents[i].text = event.event.shiftKey ? splitTab.splice(1, splitTab.length).join('\\t') : tabSpace + parents[i].text;\n                    textArea.value = textArea.value.substr(0, parents[i].start) + parents[i].text + '\\n' +\n                        textArea.value.substr(parents[i].end, textArea.value.length);\n                }\n                start = i === 0 ? start + tabSpaceLength : start;\n                addedLength += tabSpaceLength;\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        // eslint-disable-next-line max-len\n                        parents[j].start = j !== 0 ? parents[j].start + tabSpaceLength : parents[j].start;\n                        parents[j].end = parents[j].end + tabSpaceLength;\n                    }\n                }\n            }\n        }\n        this.restore(textArea, start, end + addedLength, event);\n    };\n    MDLists.prototype.changeTextAreaValue = function (splitText, prefixValue, event, \n    // eslint-disable-next-line\n    textArea, parents, k, end) {\n        var prefix = prefixValue;\n        splitText.splice(0, 1);\n        var textAreaLength = this.selection.getAllParents(textArea.value).length;\n        var changedList = '';\n        var curTabSpace = this.getTabSpace(parents[k].text);\n        // eslint-disable-next-line\n        var prefixNumber = parseInt(prefix.split('.')[0], null);\n        var nestedTabSpace = this.getTabSpace(parents[k].text);\n        var nestedlistorder = true;\n        var nestedListStart = true;\n        var curTabSpaceLength;\n        var nextPrefixValue = -1;\n        var traversIncreased = true;\n        var nextLineLength = 0;\n        var lineBreak = '';\n        changedList = (this.selection.getLine(textArea, parents[0].line + 1) !== '') ?\n            '' : changedList + textArea.value.substr(parents[0].end, textArea.value.length);\n        for (var i = 1; i < textAreaLength &&\n            !isNullOrUndefined(this.selection.getLine(textArea, parents[0].line + i))\n            && this.selection.getLine(textArea, parents[0].line + i) !== ''; i++) {\n            var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n            var nextTabSpace = this.getTabSpace(nextLine);\n            var nextLineSplit = nextLine.split('. ');\n            if (nextLineSplit.length === 1) {\n                changedList += textArea.value.substr(parents[0].end + nextLineLength, textArea.value.length);\n                break;\n            }\n            else {\n                nextLineLength += nextLine.length;\n                var shiftTabTargetList = false;\n                curTabSpaceLength = event.event.shiftKey ? curTabSpace.length + 1 : curTabSpace.length - 1;\n                if (nextTabSpace.length > nestedTabSpace.length) {\n                    traversIncreased = false;\n                }\n                if (curTabSpace.length !== nextTabSpace.length && nextTabSpace.length < nestedTabSpace.length) {\n                    nestedListStart = true;\n                    nestedlistorder = false;\n                    shiftTabTargetList = event.event.shiftKey &&\n                        curTabSpace.length === nextTabSpace.length ? (nestedListStart = false, true) : false;\n                }\n                else if (traversIncreased && event.event.shiftKey &&\n                    curTabSpace.length === nextTabSpace.length && nextTabSpace.length === nestedTabSpace.length) {\n                    nestedListStart = false;\n                    shiftTabTargetList = true;\n                }\n                lineBreak = changedList === '' ? '' : '\\n';\n                if (curTabSpaceLength === nextTabSpace.length && nestedListStart) {\n                    var nextPrefix = event.event.shiftKey ?\n                        (nextPrefixValue++, this.nextOrderedListValue(nextPrefixValue.toString()))\n                        : this.previousOrderedListValue(nextLineSplit[0]);\n                    nextLineSplit.splice(0, 1);\n                    changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n                }\n                else if (curTabSpace.length === nextTabSpace.length && nestedlistorder || shiftTabTargetList) {\n                    var nextPrefix = this.nextOrderedListValue(prefixNumber.toString());\n                    prefixNumber++;\n                    nextLineSplit.splice(0, 1);\n                    changedList = changedList + lineBreak + nextTabSpace + nextPrefix + nextLineSplit.join('. ');\n                }\n                else {\n                    changedList = changedList + lineBreak + nextLine;\n                    nestedListStart = false;\n                }\n                nestedTabSpace = this.getTabSpace(nextLine);\n            }\n        }\n        parents[k].text = this.getTabSpace(parents[k].text) + prefix + splitText.join('. ') + '\\n';\n        textArea.value = textArea.value.substr(0, parents[k].start) + parents[k].text + changedList;\n    };\n    MDLists.prototype.getTabSpace = function (line) {\n        var split = line.split('\\t');\n        var tabs = '';\n        for (var i = 0; i < split.length; i++) {\n            if (split[i] === '') {\n                tabs += '\\t';\n            }\n            else {\n                break;\n            }\n        }\n        return tabs;\n    };\n    MDLists.prototype.isNotFirstLine = function (textArea, points) {\n        var currentLine = points.text;\n        var prevIndex = points.line - 1;\n        var prevLine = this.selection.getLine(textArea, prevIndex);\n        var regex = this.getListRegex();\n        var isNotFirst = false;\n        var regexFirstCondition;\n        if (prevLine) {\n            this.currentAction = this.getAction(prevLine);\n            var prevLineSplit = prevLine.split('. ');\n            regexFirstCondition = this.currentAction === 'OL' ? /^\\d+$/.test(prevLineSplit[0].trim()) : regex.test(prevLine.trim());\n        }\n        if (prevLine && regexFirstCondition) {\n            var curTabSpace = this.getTabSpace(currentLine);\n            var prevTabSpace = this.getTabSpace(prevLine);\n            isNotFirst = curTabSpace === prevTabSpace ? true : isNotFirst;\n            for (; prevTabSpace.length > curTabSpace.length; null) {\n                prevIndex = prevIndex - 1;\n                prevLine = this.selection.getLine(textArea, prevIndex);\n                var prevLineSplit = prevLine.trim().split('. ');\n                var regexSecondCondition = this.currentAction === 'OL' ?\n                    /^\\d+$/.test(prevLineSplit[0]) : regex.test(prevLine.trim());\n                if (regexSecondCondition) {\n                    prevTabSpace = this.getTabSpace(prevLine);\n                    if (prevTabSpace.length <= curTabSpace.length) {\n                        isNotFirst = true;\n                        break;\n                    }\n                }\n            }\n        }\n        return isNotFirst;\n    };\n    MDLists.prototype.getAction = function (line) {\n        var ol = line.split('. ')[0];\n        // eslint-disable-next-line\n        var currentState = /^\\d+$/.test(ol.trim());\n        // eslint-disable-next-line\n        var ul = line.trim().split(new RegExp('^(' + this.selection.replaceSpecialChar(this.syntax.UL).trim() + ')'))[1];\n        return (currentState ? 'OL' : ul ? 'UL' : 'NOTLIST');\n    };\n    MDLists.prototype.nextOrderedListValue = function (previousLine) {\n        // eslint-disable-next-line\n        var currentValue = parseInt(previousLine, null);\n        var nextValue = currentValue + 1;\n        return nextValue.toString() + '. ';\n    };\n    MDLists.prototype.previousOrderedListValue = function (previousLine) {\n        // eslint-disable-next-line\n        var currentValue = parseInt(previousLine, null);\n        var nextValue = currentValue - 1;\n        return nextValue.toString() + '. ';\n    };\n    MDLists.prototype.enterKey = function (event) {\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var prevLine = this.selection.getLine(textArea, parents[0].line - 1);\n        var listFormat = this.olListType();\n        var regex = this.getListRegex();\n        var prevLineSplit = [];\n        if (!isNullOrUndefined(prevLine)) {\n            prevLineSplit = prevLine.split('. ');\n            this.currentAction = this.getAction(prevLine);\n        }\n        var addedLength = 0;\n        if (this.currentAction === 'OL' && prevLineSplit.length > 1 && /^\\d+$/.test(prevLineSplit[0].trim()) && listFormat\n            && prevLineSplit[1] !== '') {\n            var tabSpace = this.getTabSpace(prevLine);\n            this.currentAction = this.getAction(prevLine);\n            var prefix = this.nextOrderedListValue(prevLineSplit[0]);\n            parents[0].text = tabSpace + prefix + parents[0].text;\n            var textAreaLength = this.selection.getAllParents(textArea.value).length;\n            var changedList = '\\n';\n            var curTabSpace = this.getTabSpace(prevLine);\n            var nestedTabSpace = this.getTabSpace(parents[0].text);\n            var nestedListOrder = true;\n            for (var i = 1; i < textAreaLength &&\n                textArea.value.substr(parents[0].end, textArea.value.length) !== ''; i++) {\n                var nextLine = this.selection.getLine(textArea, parents[0].line + i);\n                if (isNullOrUndefined(nextLine)) {\n                    changedList = changedList + '';\n                }\n                else {\n                    var nextLineSplit = nextLine.split('. ');\n                    var nextTabSpace = this.getTabSpace(nextLine);\n                    if (nextTabSpace.length < nestedTabSpace.length) {\n                        nestedListOrder = false;\n                    }\n                    if (nextLineSplit.length > 1 && /^\\d+$/.test(nextLineSplit[0].trim()) &&\n                        curTabSpace.length === nextTabSpace.length && nestedListOrder) {\n                        var nextPrefix = this.nextOrderedListValue(nextLineSplit[0]);\n                        nextLineSplit.splice(0, 1);\n                        changedList = changedList + nextTabSpace + nextPrefix + nextLineSplit.join('. ') + '\\n';\n                    }\n                    else {\n                        changedList = changedList + nextLine + '\\n';\n                        nestedTabSpace = this.getTabSpace(nextLine);\n                    }\n                }\n            }\n            textArea.value = textArea.value.substr(0, parents[0].start) + curTabSpace +\n                prefix + this.selection.getLine(textArea, parents[0].line) + changedList;\n            start = start + prefix.length + tabSpace.length;\n            addedLength += prefix.length + tabSpace.length;\n        }\n        else if (this.currentAction === 'UL' && (prevLine && regex.test(prevLine.trim())) &&\n            prevLine.trim().replace(regex, '') !== '' || this.currentAction === 'OL' && !listFormat) {\n            var tabSpace = this.getTabSpace(prevLine);\n            var prefix = this.syntax[this.currentAction];\n            parents[0].text = tabSpace + prefix + parents[0].text +\n                (parents[0].text.trim().length > 0 ? '\\n' : '');\n            textArea.value = textArea.value.substr(0, parents[0].start) + parents[0].text +\n                textArea.value.substr(parents[0].end, textArea.value.length);\n            start = start + prefix.length + tabSpace.length;\n            addedLength += prefix.length + tabSpace.length;\n        }\n        this.restore(textArea, start, end + addedLength, event);\n    };\n    MDLists.prototype.olListType = function () {\n        var olSyntaxList = this.syntax.OL.split('.,');\n        var listType = olSyntaxList.length === 1 ? null :\n            // eslint-disable-next-line\n            parseInt(olSyntaxList[2].trim(), null) - parseInt(olSyntaxList[0].trim(), null);\n        if (listType) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    MDLists.prototype.applyListsHandler = function (e) {\n        var textArea = this.parent.element;\n        this.selection.save(textArea.selectionStart, textArea.selectionEnd);\n        this.currentAction = e.subCommand;\n        var start = textArea.selectionStart;\n        var end = textArea.selectionEnd;\n        var addedLength = 0;\n        var startLength = 0;\n        var endLength = 0;\n        var parents = this.selection.getSelectedParentPoints(textArea);\n        var prefix = '';\n        var listFormat = this.olListType();\n        var regex;\n        var perfixObj = {};\n        for (var i = 0; i < parents.length; i++) {\n            if (listFormat) {\n                regex = this.currentAction === 'OL' ? i + listFormat + '. ' : this.syntax[this.currentAction];\n            }\n            else {\n                regex = this.currentAction === 'OL' ? this.syntax.OL : this.syntax[this.currentAction];\n            }\n            if (!this.selection.isStartWith(parents[i].text, regex)) {\n                if (parents[i].text === '' && i === 0) {\n                    this.selection.save(start, end);\n                    if (parents.length !== 1) {\n                        for (var j = i; j < parents.length; j++) {\n                            parents[j].start = j !== 0 ? 1 + parents[j].start : parents[j].start;\n                            parents[j].end = 1 + parents[j].end;\n                        }\n                    }\n                }\n                var preLineTabSpaceLength = !isNullOrUndefined(parents[i - 1]) ?\n                    this.getTabSpace(parents[i - 1].text).length : 0;\n                var replace = this.appliedLine(parents[i].text, regex, perfixObj, preLineTabSpaceLength);\n                prefix = replace.line ? prefix : regex;\n                parents[i].text = replace.line ? replace.line : prefix + parents[i].text;\n                replace.space = replace.space ? replace.space : 0;\n                textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' +\n                    textArea.value.substr(parents[i].end, textArea.value.length);\n                start = i === 0 ? (start + prefix.length + replace.space) > 0 ?\n                    start + prefix.length + replace.space : 0 : start;\n                addedLength += prefix.length + replace.space;\n                if (parents.length !== 1) {\n                    for (var j = i; j < parents.length; j++) {\n                        parents[j].start = j !== 0 ? prefix.length +\n                            parents[j].start + replace.space : parents[j].start;\n                        parents[j].end = prefix.length + parents[j].end + replace.space;\n                    }\n                }\n                this.restore(textArea, start, end + addedLength, null);\n            }\n            else {\n                parents[i].text = parents[i].text.replace(regex, '');\n                textArea.value = textArea.value.substr(0, parents[i].start + endLength) + parents[i].text + '\\n' +\n                    textArea.value.substr(parents[i].end + endLength, textArea.value.length);\n                endLength -= regex.length;\n                startLength = regex.length;\n                this.restore(textArea, start - startLength, end + endLength, null);\n            }\n        }\n        this.restore(textArea, null, null, e);\n    };\n    MDLists.prototype.appliedLine = function (line, prefixPattern, perfixObj, preTabSpaceLength) {\n        var points = {};\n        // eslint-disable-next-line\n        var regex = new RegExp('^[' + this.syntax.UL.trim() + ']');\n        var lineSplit = line.split('. ');\n        var currentPrefix = lineSplit[0] + '. ';\n        var isExist = regex.test(line.trim()) || line.trim() === this.syntax.OL.trim()\n            || line.trim() === this.syntax.UL.trim() || /^\\d+$/.test(lineSplit[0].trim());\n        var listFormat = this.olListType();\n        var curTabSpaceLength = this.getTabSpace(line).length;\n        if (this.currentAction === 'OL' && listFormat) {\n            perfixObj[curTabSpaceLength.toString()] = !isNullOrUndefined(perfixObj[curTabSpaceLength.toString()]) ?\n                perfixObj[curTabSpaceLength.toString()].valueOf() + 1 : 1;\n            prefixPattern = perfixObj[curTabSpaceLength.toString()].valueOf().toString() + '. ';\n            if (!isNullOrUndefined(preTabSpaceLength) && preTabSpaceLength > curTabSpaceLength) {\n                perfixObj[preTabSpaceLength.toString()] = 0;\n            }\n        }\n        if (isExist) {\n            var replace = void 0;\n            var pattern = void 0;\n            // eslint-disable-next-line\n            var space = 0;\n            if (regex.test(line.trim())) {\n                pattern = this.syntax.UL;\n                replace = prefixPattern;\n                points.space = prefixPattern.trim().length - this.syntax.UL.trim().length;\n            }\n            else if (/^\\d+$/.test(lineSplit[0].trim()) && listFormat) {\n                pattern = lineSplit[0].trim() + '. ';\n                replace = prefixPattern;\n                points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n            }\n            else if (/^\\d+$/.test(lineSplit[0].trim())) {\n                pattern = lineSplit[0].trim() + '. ';\n                replace = this.syntax.UL;\n                points.space = this.syntax.UL.trim().length - currentPrefix.trim().length;\n            }\n            points.line = line.replace(pattern, replace);\n        }\n        return points;\n    };\n    MDLists.prototype.restore = function (textArea, start, end, event) {\n        if (!isNullOrUndefined(start) && !isNullOrUndefined(start)) {\n            this.selection.save(start, end);\n        }\n        if (!isNullOrUndefined(event)) {\n            this.selection.restore(textArea);\n        }\n        if (event && event.callBack) {\n            event.callBack({\n                requestType: this.currentAction,\n                selectedText: this.selection.getSelectedText(textArea),\n                editorMode: 'Markdown',\n                event: event.event\n            });\n        }\n    };\n    MDLists.prototype.getListRegex = function () {\n        var regex = '';\n        var configKey = Object.keys(this.syntax);\n        var regExp = RegExp;\n        for (var j = 0; j < configKey.length; j++) {\n            var syntax = this.selection.replaceSpecialChar(this.syntax[configKey[j]]);\n            regex += regex === '' ? '^(' + syntax + ')|^(' + syntax.trim() + ')' :\n                '|^(' + syntax + ')|^(' + syntax.trim() + ')';\n        }\n        return new regExp(regex);\n    };\n    MDLists.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MDLists;\n}());\nexport { MDLists };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}