{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    id: \"gantt-chart\",\n    style: {\n      \"overflow-x\": \"scroll\",\n      \"height\": \"400px\"\n    }\n  }, null, -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createElementVNode(\"p\", null, \"this.products\", -1 /* HOISTED */))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","id","style"],"sources":["/var/www/vue/vue-gantt-chart/src/components/GanttChart.vue"],"sourcesContent":["<template>\n  <div id=\"gantt-chart\" style=\"overflow-x: scroll; height: 400px;\"></div>\n  <p>this.products</p>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"GanttChart\",\n  props: [\"products\"],\n  mounted() {\n    this.renderGanttChart();\n  },\n  methods: {\n    renderGanttChart() {\n      const data = this.products.map(product => ({\n        name: product.Name,\n        startDate: new Date(product.SellingDate),\n        endDate: new Date(product.SellingDate),\n      }));\n\n      const containerWidth = 800;\n      const containerHeight = this.products.length * 50;\n\n      const svg = d3\n        .select(\"#gantt-chart\")\n        .append(\"svg\")\n        .attr(\"width\", containerWidth)\n        .attr(\"height\", containerHeight);\n\n      const xScale = d3\n        .scaleTime()\n        .domain([\n          d3.min(data, d => d.startDate),\n          d3.max(data, d => d.endDate),\n        ])\n        .range([0, containerWidth]);\n\n      const yScale = d3\n        .scaleBand()\n        .domain(data.map(d => d.name))\n        .range([0, containerHeight])\n        .padding(0.1);\n\n      svg\n        .selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", d => xScale(d.startDate))\n        .attr(\"y\", d => yScale(d.name))\n        .attr(\"width\", d => xScale(d.endDate) - xScale(d.startDate))\n        .attr(\"height\", yScale.bandwidth())\n        .attr(\"fill\", \"teal\");\n\n      svg\n        .selectAll(\"text\")\n        .data(data)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", d => xScale(d.startDate) + 5)\n        .attr(\"y\", d => yScale(d.name) + yScale.bandwidth() / 2)\n        .text(d => d.name)\n        .attr(\"fill\", \"white\")\n        .attr(\"alignment-baseline\", \"middle\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n#gantt-chart {\n  border: 1px solid #ddd;\n}\n</style>\n"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,S,0BACEC,mBAAA,CAAuE;IAAlEC,EAAE,EAAC,aAAa;IAACC,KAA0C,EAA1C;MAAA;MAAA;IAAA;yDACtBF,mBAAA,CAAoB,WAAjB,eAAa,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}