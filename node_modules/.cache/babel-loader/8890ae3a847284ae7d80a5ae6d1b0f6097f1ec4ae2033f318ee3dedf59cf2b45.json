{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */function (_super) {\n  __extends(PaneProperties, _super);\n  function PaneProperties() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property()], PaneProperties.prototype, \"size\", void 0);\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsible\", void 0);\n  __decorate([Property(false)], PaneProperties.prototype, \"collapsed\", void 0);\n  __decorate([Property(true)], PaneProperties.prototype, \"resizable\", void 0);\n  __decorate([Property(null)], PaneProperties.prototype, \"min\", void 0);\n  __decorate([Property(null)], PaneProperties.prototype, \"max\", void 0);\n  __decorate([Property()], PaneProperties.prototype, \"content\", void 0);\n  __decorate([Property('')], PaneProperties.prototype, \"cssClass\", void 0);\n  return PaneProperties;\n}(ChildProperty);\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */function (_super) {\n  __extends(Splitter, _super);\n  /**\n   * Initializes a new instance of the Splitter class.\n   *\n   * @param options  - Specifies Splitter model properties as options.\n   * @param element  - Specifies the element that is rendered as an Splitter.\n   */\n  function Splitter(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.needsID = true;\n    return _this;\n  }\n  /**\n   * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n   *\n   * @param  {SplitterModel} newProp - specifies the new property\n   * @param  {SplitterModel} oldProp - specifies the old property\n   * @returns {void}\n   * @private\n   */\n  Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (!this.element.classList.contains(ROOT)) {\n      return;\n    }\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'height':\n          this.setSplitterSize(this.element, newProp.height, 'height');\n          break;\n        case 'width':\n          this.setSplitterSize(this.element, newProp.width, 'width');\n          break;\n        case 'cssClass':\n          this.setCssClass(this.element, newProp.cssClass);\n          break;\n        case 'enabled':\n          this.isEnabled(this.enabled);\n          break;\n        case 'enableReversePanes':\n          this.setReversePane();\n          break;\n        case 'separatorSize':\n          this.setSeparatorSize(newProp.separatorSize);\n          break;\n        case 'orientation':\n          this.changeOrientation(newProp.orientation);\n          break;\n        case 'paneSettings':\n          {\n            if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n              var paneCounts = Object.keys(newProp.paneSettings);\n              var isPaneContentChanged = paneCounts.some(function (count) {\n                return !isNullOrUndefined(newProp.paneSettings[count].content);\n              });\n              if (this.isReact && isPaneContentChanged) {\n                var cPaneCount = 0;\n                for (var k = 0; k < this.paneSettings.length; k++) {\n                  if (typeof this.paneSettings[k].content === 'function') {\n                    cPaneCount = cPaneCount + 1;\n                  }\n                }\n                var hasAllContent = cPaneCount === this.paneSettings.length;\n                if (hasAllContent) {\n                  this.clearTemplate();\n                }\n              }\n              for (var i = 0; i < paneCounts.length; i++) {\n                var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                for (var j = 0; j < changedPropsCount; j++) {\n                  var property = Object.keys(newProp.paneSettings[index])[j];\n                  switch (property) {\n                    case 'content':\n                      {\n                        var newValue = Object(newProp.paneSettings[index])[\"\" + property];\n                        if (!isNullOrUndefined(newValue)) {\n                          this.allPanes[index].innerHTML = '';\n                          this.setTemplate(newValue, this.allPanes[index]);\n                        }\n                        break;\n                      }\n                    case 'resizable':\n                      {\n                        var newVal = Object(newProp.paneSettings[index])[\"\" + property];\n                        this.resizableModel(index, newVal);\n                        break;\n                      }\n                    case 'collapsible':\n                      this.collapsibleModelUpdate(index);\n                      break;\n                    case 'collapsed':\n                      if (newProp.paneSettings[index].collapsed) {\n                        this.isCollapsed(index);\n                      } else {\n                        this.collapsedOnchange(index);\n                      }\n                      break;\n                    case 'cssClass':\n                      this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                      break;\n                    case 'size':\n                      {\n                        var newValSize = Object(newProp.paneSettings[index])[\"\" + property];\n                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                          this.updatePaneSize(newValSize, index);\n                        }\n                        break;\n                      }\n                  }\n                }\n              }\n            } else {\n              this.clearTemplate();\n              this.destroyPaneSettings();\n              this.allBars = [];\n              this.allPanes = [];\n              this.createSplitPane(this.element);\n              this.addSeparator(this.element);\n              this.getPanesDimensions();\n              this.setRTL(this.enableRtl);\n              this.isCollapsed();\n            }\n            break;\n          }\n        case 'enableRtl':\n          this.setRTL(newProp.enableRtl);\n          break;\n      }\n    }\n  };\n  Splitter.prototype.updatePaneSize = function (newValSize, index) {\n    this.allPanes[index].style.flexBasis = newValSize;\n    var flexPaneIndexes = [];\n    var staticPaneWidth;\n    var flexCount = 0;\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      } else if (this.paneSettings[i].size) {\n        staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n      }\n    }\n    staticPaneWidth = this.orientation === 'Horizontal' ? this.allBars[0].offsetWidth * this.allBars.length + staticPaneWidth : this.allBars[0].offsetHeight * this.allBars.length + staticPaneWidth;\n    var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight) - staticPaneWidth - this.border * 2;\n    var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n    for (var j = 0; j < flexPaneIndexes.length; j++) {\n      if (this.allPanes[flexPaneIndexes[j]].style.flexBasis !== '') {\n        this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n      }\n    }\n    this.allPanes[index].classList.add(STATIC_PANE);\n  };\n  Splitter.prototype.initializeValues = function () {\n    this.allPanes = [];\n    this.paneOrder = [];\n    this.separatorOrder = [];\n    this.allBars = [];\n    this.previousCoordinates = {};\n    this.currentCoordinates = {};\n    this.updatePrePaneInPercentage = false;\n    this.updateNextPaneInPercentage = false;\n    this.panesDimensions = [];\n    this.border = 0;\n    this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible', 'data-resizable', 'data-content', 'data-collapsed'];\n    this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n    this.iconsDelay = 300;\n    this.templateElement = [];\n    this.collapseFlag = false;\n    this.expandFlag = true;\n  };\n  Splitter.prototype.preRender = function () {\n    this.initializeValues();\n    this.onReportWindowSize = this.reportWindowSize.bind(this);\n    this.onMouseMoveHandler = this.onMouseMove.bind(this);\n    this.onMouseUpHandler = this.onMouseUp.bind(this);\n    this.onTouchMoveHandler = this.onMouseMove.bind(this);\n    this.onTouchEndHandler = this.onMouseUp.bind(this);\n    this.wrapper = this.element.cloneNode(true);\n    this.wrapperParent = this.element.parentElement;\n    removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n    var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n    addClass([this.element], orientation);\n    var name = Browser.info.name;\n    var css = name === 'msie' ? 'e-ie' : '';\n    this.setCssClass(this.element, css);\n    if (Browser.isDevice) {\n      addClass([this.element], SPLIT_TOUCH);\n    }\n  };\n  Splitter.prototype.getPersistData = function () {\n    return this.addOnPersist(['paneSettings']);\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns {string} - returns the string value\n   * @private\n   */\n  Splitter.prototype.getModuleName = function () {\n    return 'splitter';\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @returns {void}\n   * @private\n   */\n  Splitter.prototype.render = function () {\n    this.checkDataAttributes();\n    this.setCssClass(this.element, this.cssClass);\n    this.isEnabled(this.enabled);\n    this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n    this.createSplitPane(this.element);\n    this.addSeparator(this.element);\n    this.getPanesDimensions();\n    this.setPaneSettings();\n    this.setRTL(this.enableRtl);\n    if (this.enableReversePanes) {\n      this.setReversePane();\n    }\n    this.collapseFlag = true;\n    this.isCollapsed();\n    this.collapseFlag = false;\n    EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n    this.renderComplete();\n    this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n    EventHandler.add(this.element, 'keydown', this.onMove, this);\n  };\n  Splitter.prototype.onDocumentClick = function (e) {\n    if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n      this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n      this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n    }\n  };\n  Splitter.prototype.checkPaneSize = function (e) {\n    var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n    var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n    var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n    if (this.previousPane.style.flexBasis.indexOf('%') > 0 || this.previousPane.style.flexBasis.indexOf('p') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0) {\n      var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n      var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n      this.totalPercent = previousFlexBasis + nextFlexBasis;\n      this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < this.convertPercentageToPixel(nextFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis + 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis - 1 + '%';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < this.convertPercentageToPixel(previousFlexBasis - 1 + '%')) {\n          this.previousPane.style.flexBasis = previousFlexBasis - 1 + '%';\n          this.nextPane.style.flexBasis = nextFlexBasis + 1 + '%';\n        }\n      }\n    } else {\n      this.totalWidth = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth + this.nextPane.offsetWidth : this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n      if (e.type === 'keydown' && !isNullOrUndefined(e.keyCode)) {\n        if ((e.keyCode === 39 || e.keyCode === 40) && nextPaneSize > 0 && this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < nextPaneSize + splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize + splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize < splitBarSize ? '0px' : nextPaneSize - splitBarSize + 'px';\n        } else if ((e.keyCode === 37 || e.keyCode === 38) && prePaneSize > 0 && this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < prePaneSize - splitBarSize) {\n          this.addStaticPaneClass();\n          this.previousPane.style.flexBasis = prePaneSize < splitBarSize ? '0px' : prePaneSize - splitBarSize + 'px';\n          this.nextPane.style.flexBasis = nextPaneSize + splitBarSize + 'px';\n        }\n      }\n    }\n  };\n  Splitter.prototype.onMove = function (event) {\n    if (this.allPanes.length > 1) {\n      var index = this.getSeparatorIndex(this.currentSeparator);\n      var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n      var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n      var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n      if ((this.orientation !== 'Horizontal' && event.keyCode === 38 || this.orientation === 'Horizontal' && event.keyCode === 39 || this.orientation === 'Horizontal' && event.keyCode === 37 || this.orientation !== 'Horizontal' && event.keyCode === 40) && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || isPrevpaneExpanded && !isNextpaneCollapsed) && document.activeElement.classList.contains(SPLIT_BAR) && this.paneSettings[index].resizable && this.paneSettings[index + 1].resizable) {\n        event.preventDefault();\n        this.checkPaneSize(event);\n        this.triggerResizing(event);\n      } else if (event.keyCode === 13 && this.paneSettings[index].collapsible && document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n          this.collapse(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        } else {\n          this.expand(index);\n          addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        }\n      }\n    }\n  };\n  Splitter.prototype.getMinInPixel = function (minValue) {\n    if (isNullOrUndefined(minValue)) {\n      return 0;\n    }\n    var paneMinRange = this.convertPixelToNumber(minValue.toString());\n    if (minValue.indexOf('%') > 0) {\n      paneMinRange = this.convertPercentageToPixel(minValue);\n    }\n    var min = this.convertPixelToNumber(paneMinRange.toString());\n    return min;\n  };\n  /**\n   * @param {string} value - specifies the string value\n   * @returns {string} returns the string\n   * @hidden\n   */\n  Splitter.prototype.sanitizeHelper = function (value) {\n    if (this.enableHtmlSanitizer) {\n      var item = SanitizeHtmlHelper.beforeSanitize();\n      var beforeEvent = {\n        cancel: false,\n        helper: null\n      };\n      extend(item, item, beforeEvent);\n      this.trigger('beforeSanitizeHtml', item);\n      if (item.cancel && !isNullOrUndefined(item.helper)) {\n        value = item.helper(value);\n      } else if (!item.cancel) {\n        value = SanitizeHtmlHelper.serializeValue(item, value);\n      }\n    }\n    return value;\n  };\n  Splitter.prototype.checkDataAttributes = function () {\n    var api;\n    var value;\n    // Element values\n    for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n      value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n      if (!isNullOrUndefined(value)) {\n        api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n        // eslint-disable-next-line\n        this[api] = value;\n      }\n    }\n    // Pane values\n    for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n      for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n        value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n        if (!isNullOrUndefined(value)) {\n          api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n          value = api === 'collapsible' || api === 'resizable' ? value === 'true' : value;\n          if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n            this.paneSettings[paneIndex] = {\n              size: '',\n              min: null,\n              max: null,\n              content: '',\n              resizable: true,\n              collapsible: false,\n              collapsed: false\n            };\n          }\n          // eslint-disable-next-line\n          var paneAPI = this.paneSettings[paneIndex][api];\n          if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n          if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n            // eslint-disable-next-line\n            this.paneSettings[paneIndex][api] = value;\n          }\n        }\n      }\n    }\n  };\n  Splitter.prototype.destroyPaneSettings = function () {\n    [].slice.call(this.element.children).forEach(function (el) {\n      detach(el);\n    });\n    this.restoreElem();\n  };\n  Splitter.prototype.setPaneSettings = function () {\n    var childCount = this.allPanes.length;\n    var paneCollection = [];\n    var paneValue = {\n      size: '',\n      min: null,\n      max: null,\n      content: '',\n      resizable: true,\n      collapsed: false,\n      collapsible: false,\n      cssClass: ''\n    };\n    for (var i = 0; i < childCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i])) {\n        paneCollection[i] = paneValue;\n      } else {\n        paneCollection[i] = this.paneSettings[i];\n      }\n    }\n    this.setProperties({\n      'paneSettings': paneCollection\n    }, true);\n  };\n  Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n    return this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow);\n  };\n  Splitter.prototype.removeDataPrefix = function (attribute) {\n    return attribute.slice(attribute.lastIndexOf('-') + 1);\n  };\n  Splitter.prototype.setRTL = function (rtl) {\n    if (rtl) {\n      addClass([this.element], RTL);\n    } else {\n      removeClass([this.element], RTL);\n    }\n  };\n  Splitter.prototype.setReversePane = function () {\n    this.allPanes = this.allPanes.reverse();\n    this.allBars = this.allBars.reverse();\n    addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n    removeClass([this.allBars[0]], LAST_BAR);\n    this.setProperties({\n      'paneSettings': this.paneSettings.reverse()\n    }, true);\n    if (this.enableReversePanes) {\n      this.element.setAttribute('dir', 'rtl');\n    } else {\n      this.element.removeAttribute('dir');\n    }\n  };\n  Splitter.prototype.setSplitterSize = function (element, size, property) {\n    var style = property === 'width' ? {\n      'width': formatUnit(size)\n    } : {\n      'height': formatUnit(size)\n    };\n    setStyleAttribute(element, style);\n  };\n  Splitter.prototype.getPanesDimensions = function () {\n    for (var index = 0; index < this.allPanes.length; index++) {\n      if (this.orientation === 'Horizontal') {\n        this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n      } else {\n        this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n      }\n    }\n  };\n  Splitter.prototype.setCssClass = function (element, className) {\n    if (className) {\n      addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n    }\n  };\n  Splitter.prototype.hideResizer = function (target) {\n    addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n  };\n  Splitter.prototype.showResizer = function (target) {\n    if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) && !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n      removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    }\n  };\n  Splitter.prototype.resizableModel = function (index, newVal) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var i = index;\n    EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n    if (newVal) {\n      EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n      if (this.isResizable()) {\n        this.showResizer(this.allBars[paneIndex]);\n        removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n        this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n        if (index === this.allBars.length) {\n          this.allPanes[index].classList.add(RESIZABLE_PANE);\n        } else {\n          this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n        }\n        this.updateResizablePanes(i);\n      }\n    } else {\n      this.updateResizablePanes(i);\n      this.hideResizer(this.allBars[paneIndex]);\n      this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n      if (index === this.allBars.length) {\n        this.allPanes[index].classList.remove(RESIZABLE_PANE);\n      } else {\n        this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n      }\n    }\n  };\n  Splitter.prototype.collapsibleModelUpdate = function (index) {\n    var paneIndex = index === this.allBars.length ? index - 1 : index;\n    var arrow2 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n    var arrow1 = this.orientation === 'Horizontal' ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n    this.paneCollapsible(this.allPanes[index], index);\n    this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n  };\n  Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n    return selectAll('.' + arrow, this.allBars[barIndex])[0];\n  };\n  Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n    if (!isNullOrUndefined(index)) {\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n      }\n      targetEle.click();\n    }\n  };\n  Splitter.prototype.isCollapsed = function (index) {\n    var _this = this;\n    if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n      return;\n    }\n    this.expandFlag = false;\n    if (!isNullOrUndefined(index)) {\n      this.collapseFlag = true;\n      var targetEle = void 0;\n      var lastBarIndex = index === this.allBars.length;\n      var barIndex = lastBarIndex ? index - 1 : index;\n      if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n        targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n      } else {\n        targetEle = lastBarIndex ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) : this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n      }\n      var event_1 = {\n        target: targetEle\n      };\n      var eventArgs = this.beforeAction(event_1);\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          var collapsedindex = [];\n          collapsedindex[0] = index;\n          var j = 1;\n          for (var i = 0; i < _this.allPanes.length; i++) {\n            if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n              collapsedindex[j] = i;\n              j++;\n            }\n          }\n          collapsedindex = collapsedindex.sort();\n          _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n          for (var i = 0; i < collapsedindex.length; i++) {\n            if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n              _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n            }\n          }\n          for (var i = collapsedindex.length; i > 0; i--) {\n            if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n              var targetArrow = _this.targetArrows();\n              _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n            }\n          }\n          var collapseEventArgs = _this.afterAction(event_1);\n          _this.trigger('collapsed', collapseEventArgs);\n          _this.collapseFlag = false;\n        }\n      });\n    } else {\n      for (var m = 0; m < this.allPanes.length; m++) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n          this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n        }\n      }\n      for (var m = this.allPanes.length - 1; m >= 0; m--) {\n        if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed && !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n          var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n          if (m !== 0) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n          if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            var targetEle = this.collapseArrow(m - 1, collapseArrow);\n            targetEle.click();\n          }\n        }\n      }\n    }\n    this.expandFlag = true;\n  };\n  Splitter.prototype.targetArrows = function () {\n    this.splitterProperty();\n    return {\n      collapseArrow: this.orientation === 'Horizontal' ? ARROW_LEFT : ARROW_UP,\n      lastBarArrow: this.orientation === 'Vertical' ? ARROW_DOWN : ARROW_RIGHT\n    };\n  };\n  Splitter.prototype.collapsedOnchange = function (index) {\n    if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed) && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n      this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n    }\n  };\n  Splitter.prototype.isEnabled = function (enabled) {\n    if (enabled) {\n      removeClass([this.element], DISABLED);\n    } else {\n      addClass([this.element], DISABLED);\n    }\n  };\n  Splitter.prototype.setSeparatorSize = function (size) {\n    var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n    var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n    for (var index = 0; index < this.allBars.length; index++) {\n      var splitBar = selectAll('.' + separator, this.element)[index];\n      var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n      if (this.orientation === 'Horizontal') {\n        splitBar.style.width = sizeValue;\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.width = sizeValue;\n        }\n      } else {\n        splitBar.style.height = sizeValue;\n        if (!isNullOrUndefined(resizeBar)) {\n          resizeBar.style.height = sizeValue;\n        }\n      }\n    }\n  };\n  Splitter.prototype.changeOrientation = function (orientation) {\n    var isVertical = orientation === 'Vertical';\n    this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n    this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n    for (var index = 0; index < this.allPanes.length; index++) {\n      this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n      this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n    }\n    for (var index = 0; index < this.allBars.length; index++) {\n      detach(this.allBars[index]);\n    }\n    this.allBars = [];\n    this.addSeparator(this.element);\n  };\n  Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n    var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n    return paneEle;\n  };\n  Splitter.prototype.collectPanes = function (childNodes) {\n    var elements = [];\n    for (var i = 0; i < childNodes.length; i++) {\n      if (childNodes[i].classList.contains(PANE)) {\n        elements.push(childNodes[i]);\n      }\n    }\n    return elements;\n  };\n  Splitter.prototype.getPrevPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n  };\n  Splitter.prototype.getNextPane = function (order) {\n    return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n  };\n  Splitter.prototype.getOrderPane = function (order) {\n    var pane;\n    for (var i = 0; i < this.element.children.length; i++) {\n      if (parseInt(this.element.children[i].style.order, 10) === order) {\n        pane = this.element.children[i];\n      }\n    }\n    return pane;\n  };\n  Splitter.prototype.getOrderIndex = function (order, type) {\n    var index;\n    var panes;\n    if (type === 'pane') {\n      panes = this.allPanes;\n    } else {\n      panes = this.allBars;\n    }\n    for (var i = 0; i < panes.length; i++) {\n      if (parseInt(panes[i].style.order, 10) === order) {\n        index = i;\n      }\n    }\n    return index;\n  };\n  Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n    var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n    if (this.orientation === 'Horizontal') {\n      resizeHanlder.style.width = sizeValue;\n    } else {\n      resizeHanlder.style.height = sizeValue;\n    }\n  };\n  Splitter.prototype.addResizeHandler = function (currentBar) {\n    var resizeHanlder = this.createElement('div');\n    addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n    this.updateSeparatorSize(resizeHanlder);\n    currentBar.appendChild(resizeHanlder);\n  };\n  Splitter.prototype.getHeight = function (target) {\n    var height = this.height;\n    height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n    return height;\n  };\n  Splitter.prototype.getWidth = function (target) {\n    var width = this.width;\n    width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n    return width;\n  };\n  Splitter.prototype.setDimension = function (height, width) {\n    setStyleAttribute(this.element, {\n      'height': height,\n      'width': width\n    });\n  };\n  Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n        if (this.paneSettings[index].collapsible) {\n          removeClass([arrow2], [HIDE_ICON]);\n        } else {\n          addClass([arrow2], [HIDE_ICON]);\n        }\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          if (this.paneSettings[index + 1].collapsible) {\n            removeClass([arrow1], [HIDE_ICON]);\n          } else {\n            addClass([arrow1], [HIDE_ICON]);\n          }\n        }\n        if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n          if (this.paneSettings[index + 1].collapsible) {\n            if (this.paneSettings[index + 1].collapsible) {\n              removeClass([arrow1], [HIDE_ICON]);\n            } else {\n              addClass([arrow1], [HIDE_ICON]);\n            }\n          }\n        }\n      }\n    }\n  };\n  Splitter.prototype.updateIconClass = function () {\n    if (this.orientation === 'Horizontal') {\n      this.leftArrow = ARROW_LEFT;\n      this.rightArrow = ARROW_RIGHT;\n    } else {\n      this.leftArrow = ARROW_UP;\n      this.rightArrow = ARROW_DOWN;\n    }\n  };\n  Splitter.prototype.createSeparator = function (i) {\n    var separator = this.createElement('div');\n    this.allBars.push(separator);\n    var arrow1 = this.createElement('button');\n    var arrow2 = this.createElement('button');\n    arrow1.setAttribute('tabindex', '-1');\n    arrow2.setAttribute('tabindex', '-1');\n    arrow1.setAttribute('aria-label', 'Toggle navigation');\n    arrow2.setAttribute('aria-label', 'Toggle navigation');\n    arrow1.setAttribute('type', 'button');\n    arrow2.setAttribute('type', 'button');\n    var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n    var proxy = null || this;\n    if (this.orientation === 'Horizontal') {\n      this.updateIconClass();\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n      separator.style.width = size;\n    } else {\n      addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n      addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n      addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n      this.updateIconClass();\n      separator.style.height = size;\n    }\n    this.addMouseActions(separator);\n    separator.appendChild(arrow2);\n    this.addResizeHandler(separator);\n    separator.appendChild(arrow1);\n    this.updateCollapseIcons(i, arrow1, arrow2);\n    separator.setAttribute('tabindex', '-1');\n    separator.setAttribute('aria-hidden', 'true');\n    if (this.enableReversePanes) {\n      separator.setAttribute('dir', 'ltr');\n    } else {\n      separator.removeAttribute('dir');\n    }\n    separator.addEventListener('focus', function () {\n      separator.classList.add(SPLIT_BAR_ACTIVE);\n      proxy.currentSeparator = separator;\n      proxy.getPaneDetails();\n    });\n    separator.addEventListener('blur', function () {\n      separator.classList.remove(SPLIT_BAR_ACTIVE);\n    });\n    return separator;\n  };\n  Splitter.prototype.updateResizablePanes = function (index) {\n    this.getPaneDetails();\n    if (this.isResizable()) {\n      this.allPanes[index].classList.add(RESIZABLE_PANE);\n    } else {\n      this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    }\n  };\n  Splitter.prototype.addSeparator = function (target) {\n    var childCount = this.allPanes.length;\n    var clonedEle = target.children;\n    var separator;\n    for (var i = 0; i < childCount; i++) {\n      if (i < childCount - 1) {\n        separator = this.createSeparator(i);\n        setStyleAttribute(separator, {\n          'order': i * 2 + 1\n        });\n        this.separatorOrder.push(i * 2 + 1);\n        clonedEle[i].parentNode.appendChild(separator);\n        this.currentSeparator = separator;\n        separator.setAttribute('role', 'separator');\n        separator.setAttribute('aria-valuenow', i.toString());\n        if (!isNullOrUndefined(this.orientation)) {\n          separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n        }\n        this.wireClickEvents();\n        if (!isNullOrUndefined(separator)) {\n          if (this.isResizable()) {\n            EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n            var eventName = Browser.info.name === 'msie' ? 'pointerdown' : 'touchstart';\n            EventHandler.add(separator, eventName, this.onMouseDown, this);\n            separator.classList.add(RESIZABLE_BAR);\n            this.updateResizablePanes(i);\n          } else {\n            addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n          }\n        }\n      } else {\n        if (separator) {\n          addClass([separator], LAST_BAR);\n        }\n        if (childCount > 1) {\n          this.updateResizablePanes(i);\n        }\n      }\n    }\n    if (Browser.info.name === 'msie') {\n      var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n      for (var i = 0; i < allBar.length; i++) {\n        var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n        allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n        allBar[i].style.paddingRight = sepSize / 2 + 'px';\n      }\n    }\n  };\n  Splitter.prototype.isResizable = function () {\n    var resizable = false;\n    if (!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) && this.paneSettings[this.getPreviousPaneIndex()].resizable && !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) && this.paneSettings[this.getNextPaneIndex()].resizable || isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n      resizable = true;\n    }\n    return resizable;\n  };\n  Splitter.prototype.addMouseActions = function (separator) {\n    var _this = this;\n    var sTout;\n    var hoverTimeOut;\n    separator.addEventListener('mouseenter', function () {\n      /* istanbul ignore next */\n      sTout = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      }, _this.iconsDelay);\n    });\n    separator.addEventListener('mouseleave', function () {\n      clearTimeout(sTout);\n      removeClass([separator], [SPLIT_BAR_HOVER]);\n    });\n    separator.addEventListener('mouseout', function () {\n      clearTimeout(hoverTimeOut);\n    });\n    separator.addEventListener('mouseover', function () {\n      /* istanbul ignore next */\n      hoverTimeOut = setTimeout(function () {\n        addClass([separator], [SPLIT_BAR_HOVER]);\n      });\n    });\n  };\n  Splitter.prototype.getEventType = function (e) {\n    return e.indexOf('mouse') > -1 ? 'mouse' : 'touch';\n  };\n  Splitter.prototype.updateCurrentSeparator = function (target) {\n    this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n  };\n  Splitter.prototype.isSeparator = function (target) {\n    return target.classList.contains(SPLIT_BAR) ? false : true;\n  };\n  Splitter.prototype.isMouseEvent = function (e) {\n    var isMouse = false;\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      isMouse = true;\n    }\n    return isMouse;\n  };\n  Splitter.prototype.updateCursorPosition = function (e, type) {\n    if (this.isMouseEvent(e)) {\n      this.changeCoordinates({\n        x: e.pageX,\n        y: e.pageY\n      }, type);\n    } else {\n      var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n      this.changeCoordinates({\n        x: eventType.pageX,\n        y: eventType.pageY\n      }, type);\n    }\n  };\n  Splitter.prototype.changeCoordinates = function (coordinates, type) {\n    if (type === 'previous') {\n      this.previousCoordinates = coordinates;\n    } else {\n      this.currentCoordinates = coordinates;\n    }\n  };\n  Splitter.prototype.reportWindowSize = function () {\n    var _this = this;\n    var paneCount = this.allPanes.length;\n    if (!document.body.contains(this.element)) {\n      document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n      return;\n    }\n    for (var i = 0; i < paneCount; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n      if (paneCount - 1 === i) {\n        var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n        if (staticPaneCount === paneCount) {\n          if (this.allPanes[i].style.flexBasis === '') {\n            removeClass([this.allPanes[i]], STATIC_PANE);\n          }\n        }\n      }\n    }\n    if (paneCount > 0) {\n      setTimeout(function () {\n        _this.updateSplitterSize(true);\n      }, 200);\n    }\n  };\n  Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n    var totalWidth = 0;\n    var flexPaneIndexes = [];\n    var flexCount = 0;\n    var children = this.element.children;\n    for (var i = 0, len = children.length; i < len; i++) {\n      totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth : children[i].offsetHeight;\n    }\n    for (var j = 0, len = this.allBars.length; j < len; j++) {\n      totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) + parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) + parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n    }\n    var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth - (this.border * 2 + totalWidth) : this.element.offsetHeight - (this.border * 2 + totalWidth);\n    for (var i = 0, len = this.allPanes.length; i < len; i++) {\n      if (this.allPanes[i].innerText === '' ? !this.paneSettings[i].size || !(this.allPanes[i].innerText === '') : !this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n        flexPaneIndexes[flexCount] = i;\n        flexCount++;\n      }\n    }\n    var avgDiffWidth = diff / flexPaneIndexes.length;\n    for (var j = 0, len = flexPaneIndexes.length; j < len; j++) {\n      if (this.allPanes[flexPaneIndexes[j]].style.flexBasis !== '') {\n        this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ? this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth + 'px' : this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth + 'px';\n      }\n    }\n    if (this.allPanes.length === 2 && iswindowResize) {\n      var paneCount = this.allPanes.length;\n      var minValue = void 0;\n      var paneMinRange = void 0;\n      var paneIndex = 0;\n      var updatePane = void 0;\n      var flexPane = void 0;\n      for (var i = 0; i < paneCount; i++) {\n        if (!isNullOrUndefined(this.paneSettings[i].min)) {\n          paneMinRange = this.convertPixelToNumber(this.paneSettings[i].min.toString());\n          if (this.paneSettings[i].min.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n          }\n          minValue = this.convertPixelToNumber(paneMinRange.toString());\n          if ((this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight) < minValue) {\n            if (i === paneIndex) {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i + 1];\n            } else {\n              updatePane = this.allPanes[i];\n              flexPane = this.allPanes[i - 1];\n            }\n            var sizeDiff = minValue - (this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight);\n            var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n            var updatePaneOffset = this.orientation === 'Horizontal' ? updatePane.offsetWidth : updatePane.offsetHeight;\n            if (!isNullOrUndefined(updatePane) && updatePane.style.flexBasis !== '' && updatePane.classList.contains(STATIC_PANE)) {\n              updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePaneOffset + sizeDiff) + '%' : updatePaneOffset + sizeDiff + 'px';\n            }\n            var flexPaneOffset = this.orientation === 'Horizontal' ? flexPane.offsetWidth : flexPane.offsetHeight;\n            if (!isNullOrUndefined(flexPane) && flexPane.style.flexBasis !== '' && !flexPane.classList.contains(STATIC_PANE)) {\n              flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ? this.convertPixelToPercentage(flexPaneOffset - sizeDiff) + '%' : flexPaneOffset - sizeDiff + 'px';\n            }\n          }\n        }\n      }\n    }\n  };\n  Splitter.prototype.wireResizeEvents = function () {\n    document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.addEventListener('mouseup', this.onMouseUpHandler, true);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n  Splitter.prototype.unwireResizeEvents = function () {\n    this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n    var touchMoveEvent = Browser.info.name === 'msie' ? 'pointermove' : 'touchmove';\n    var touchEndEvent = Browser.info.name === 'msie' ? 'pointerup' : 'touchend';\n    document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n    document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n    document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n    document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n  };\n  Splitter.prototype.wireClickEvents = function () {\n    EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n  };\n  Splitter.prototype.clickHandler = function (e) {\n    if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n      var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n      if (hoverBars.length > 0) {\n        removeClass(hoverBars, SPLIT_BAR_HOVER);\n      }\n      e.target.classList.add(SPLIT_BAR_HOVER);\n    }\n    this.splitterDetails(e);\n    var icon = e.target;\n    if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN) || icon.classList.contains(ARROW_UP)) {\n      if (!this.nextPane.classList.contains(PANE_HIDDEN) && !this.previousPane.classList.contains(PANE_HIDDEN)) {\n        this.collapseAction(e);\n      } else {\n        this.expandAction(e);\n      }\n      this.updateSplitterSize();\n    }\n  };\n  Splitter.prototype.expandAction = function (e) {\n    var _this = this;\n    var eventArgs = this.beforeAction(e);\n    if (this.expandFlag) {\n      this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n        if (!beforeExpandArgs.cancel) {\n          _this.expandPane(e);\n        }\n        var expandEventArgs = _this.afterAction(e);\n        _this.trigger('expanded', expandEventArgs);\n      });\n    } else {\n      this.expandPane(e);\n    }\n  };\n  Splitter.prototype.getIcon = function (e) {\n    var targetClass = e.target.className.split(' ').filter(function (className) {\n      return className !== NAVIGATE_ARROW && className !== HIDE_ICON;\n    });\n    return targetClass[0];\n  };\n  Splitter.prototype.expandPane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = !this.previousPane.classList.contains(COLLAPSE_PANE) && this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n    var icon = this.getIcon(e);\n    var isLeftOrUp = icon === ARROW_LEFT || icon === ARROW_UP;\n    var collapsePane = isLeftOrUp ? this.nextPane : this.previousPane;\n    var expandPane = isLeftOrUp ? this.previousPane : this.nextPane;\n    var expandPaneIndex = isLeftOrUp ? this.nextPaneIndex : this.prevPaneIndex;\n    removeClass([collapsePane], collapseClass);\n    collapsePane.setAttribute('aria-hidden', 'false');\n    // cCount is calculated after removing the COLLAPSE_PANE\n    var cCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    if (cCount > 0) {\n      if (!expandPane.classList.contains(COLLAPSE_PANE)) {\n        addClass([expandPane], EXPAND_PANE);\n        expandPane.setAttribute('aria-expanded', 'true');\n      }\n    } else if (cCount === 0) {\n      for (var i = 0; i < this.allPanes.length; i++) {\n        if (!this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n          removeClass([this.allPanes[i]], EXPAND_PANE);\n          this.allPanes[i].setAttribute('aria-expanded', 'false');\n        }\n      }\n    }\n    if (this.expandFlag) {\n      this.updatePaneSettings(expandPaneIndex, false);\n    }\n    this.updateIconsOnExpand(e, icon);\n    this.updateFlexGrow();\n    if (flexStatus) {\n      this.previousPane.classList.remove(EXPAND_PANE);\n      this.previousPane.setAttribute('aria-expanded', 'false');\n      this.previousPane.style.flexGrow = '';\n    }\n  };\n  Splitter.prototype.updateFlexGrow = function () {\n    var collapseCount = 0;\n    for (var j = 0; j < this.element.children.length; j++) {\n      if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n        collapseCount = collapseCount + 1;\n      }\n    }\n    var visiblePane = collapseCount === this.allPanes.length - 2;\n    var panes = this.allPanes;\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.flexGrow = '';\n      if (visiblePane && this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size && i !== this.allPanes.length - 1) {\n        panes[i].style.flexGrow = '';\n      }\n      if (panes[i].classList.contains(EXPAND_PANE)) {\n        panes[i].style.flexGrow = '1';\n      } else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n        panes[i].style.flexGrow = '0';\n      }\n    }\n  };\n  Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n    addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n  Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n    removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n  };\n  Splitter.prototype.updateIconsOnCollapse = function (e, targetIcon) {\n    this.splitterProperty();\n    var removeIcon = this.arrow;\n    var otherBar = this.currentBarIndex === this.allBars.length - 1 ? this.prevBar : this.nextBar;\n    var otherBarIndex = this.currentBarIndex === this.allBars.length - 1 ? this.currentBarIndex - 1 : this.currentBarIndex + 1;\n    if (!e.target.classList.contains(HIDE_ICON)) {\n      if (this.splitInstance.prevPaneCollapsed || this.splitInstance.nextPaneCollapsed) {\n        if (this.paneSettings[this.prevPaneIndex].collapsible && this.paneSettings[this.nextPaneIndex].collapsible) {\n          this.resizableModel(this.currentBarIndex, false);\n          this.hideTargetBarIcon(this.currentSeparator, targetIcon);\n          if (!isNullOrUndefined(otherBar)) {\n            var otherPrevPaneIndex = otherBarIndex;\n            var otherNextPaneIndex = otherBarIndex + 1;\n            var collapsecount = this.getCollapseCount(otherPrevPaneIndex, otherNextPaneIndex);\n            if (this.paneSettings[otherPrevPaneIndex].collapsible && this.paneSettings[otherNextPaneIndex].collapsible) {\n              if (collapsecount === 1) {\n                this.hideTargetBarIcon(otherBar, removeIcon);\n                this.resizableModel(otherBarIndex, false);\n              } else if (collapsecount === 2) {\n                this.hideBarIcons(otherBar);\n                this.resizableModel(otherBarIndex, false);\n              }\n              if (!this.paneSettings[otherPrevPaneIndex].collapsible || !this.paneSettings[otherNextPaneIndex].collapsible) {\n                this.hideTargetBarIcon(otherBar, targetIcon);\n              }\n            }\n          }\n        } else {\n          this.showTargetBarIcon(this.currentSeparator, removeIcon);\n          this.hideTargetBarIcon(this.currentSeparator, targetIcon);\n          this.resizableModel(this.currentBarIndex, false);\n        }\n      }\n    } else {\n      this.resizableModel(this.currentBarIndex, false);\n      if (!isNullOrUndefined(otherBar)) {\n        this.resizableModel(otherBarIndex, true);\n      }\n      if (!this.paneSettings[this.prevPaneIndex].collapsible || !this.paneSettings[this.nextPaneIndex].collapsible) {\n        if (!isNullOrUndefined(otherBar)) {\n          this.hideTargetBarIcon(otherBar, targetIcon);\n        }\n        this.hideTargetBarIcon(this.currentSeparator, removeIcon);\n      } else {\n        if (!isNullOrUndefined(otherBar)) {\n          this.hideTargetBarIcon(otherBar, removeIcon);\n        }\n        this.showTargetBarIcon(this.currentSeparator, removeIcon);\n      }\n    }\n  };\n  Splitter.prototype.collapseAction = function (e) {\n    var _this = this;\n    var eventArgs = this.beforeAction(e);\n    if (this.collapseFlag) {\n      this.collapsePane(e);\n    } else {\n      this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n        if (!beforeCollapseArgs.cancel) {\n          _this.collapsePane(e);\n          var collapseEventArgs = _this.afterAction(e);\n          _this.trigger('collapsed', collapseEventArgs);\n        }\n      });\n    }\n  };\n  Splitter.prototype.collapsePane = function (e) {\n    this.removeStaticPanes();\n    var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n    var flexStatus = this.previousPane.classList.contains(STATIC_PANE) && !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) && !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) && !(collapseCount === this.allPanes.length - 2) || this.nextPane.classList.contains(COLLAPSE_PANE) && !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE);\n    var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n    var icon = this.getIcon(e);\n    var isLeftOrUp = icon === ARROW_LEFT || icon === ARROW_UP;\n    var collapsePane = isLeftOrUp ? this.previousPane : this.nextPane;\n    var expandPane = isLeftOrUp ? this.nextPane : this.previousPane;\n    var collapsePaneIndex = isLeftOrUp ? this.prevPaneIndex : this.nextPaneIndex;\n    removeClass([collapsePane], EXPAND_PANE);\n    collapsePane.setAttribute('aria-expanded', 'false');\n    addClass([collapsePane], collapseClass);\n    collapsePane.setAttribute('aria-hidden', 'true');\n    var isFlexPane = collapsePane.style.flexBasis === '';\n    if (isFlexPane) {\n      addClass([expandPane], EXPAND_PANE);\n      expandPane.setAttribute('aria-expanded', 'true');\n    } else {\n      var isFlexPaneHidden = true;\n      for (var i = 0; i < this.allPanes.length; i++) {\n        if (!this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n          if (this.allPanes[i].style.flexBasis === '' && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && !this.allPanes[i].classList.contains(EXPAND_PANE)) {\n            addClass([this.allPanes[i]], EXPAND_PANE);\n            this.allPanes[i].setAttribute('aria-expanded', 'true');\n            isFlexPaneHidden = false;\n            break;\n          }\n        }\n      }\n      if (isFlexPaneHidden) {\n        addClass([expandPane], EXPAND_PANE);\n        expandPane.setAttribute('aria-expanded', 'true');\n      }\n    }\n    if (!this.collapseFlag) {\n      this.updatePaneSettings(collapsePaneIndex, true);\n    }\n    this.updateIconsOnCollapse(e, icon);\n    this.updateFlexGrow();\n    if (flexStatus) {\n      this.nextPane.classList.remove(EXPAND_PANE);\n      this.nextPane.style.flexGrow = '';\n    }\n  };\n  Splitter.prototype.removeStaticPanes = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      if (isNullOrUndefined(this.paneSettings[i].size)) {\n        this.allPanes[i].classList.remove(STATIC_PANE);\n      }\n    }\n  };\n  Splitter.prototype.beforeAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    return eventArgs;\n  };\n  Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n    var paneValues = this.paneSettings;\n    paneValues[index].collapsed = collapsed;\n    this.setProperties({\n      'paneSettings': paneValues\n    }, true);\n  };\n  Splitter.prototype.splitterProperty = function () {\n    this.splitInstance = {\n      currentBarIndex: this.currentBarIndex,\n      nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n      prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n      prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n      nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n      nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n      prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n      nextPaneIndex: this.getNextPaneIndex(),\n      prevPaneIndex: this.getPreviousPaneIndex(),\n      nextPaneNextEle: this.nextPane.nextElementSibling,\n      prevPanePreEle: this.previousPane.previousElementSibling\n    };\n  };\n  Splitter.prototype.showCurrentBarIcons = function () {\n    removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n  };\n  Splitter.prototype.hideBarIcons = function (bar) {\n    addClass([select('.' + this.arrow, bar)], HIDE_ICON);\n  };\n  Splitter.prototype.getCollapseCount = function (prevPaneIndex, nextPaneIndex) {\n    var collapsecount = 0;\n    if (this.allPanes[prevPaneIndex].classList.contains(COLLAPSE_PANE)) {\n      collapsecount = collapsecount + 1;\n    }\n    if (this.allPanes[nextPaneIndex].classList.contains(COLLAPSE_PANE)) {\n      collapsecount = collapsecount + 1;\n    }\n    return collapsecount;\n  };\n  Splitter.prototype.checkResizableProp = function (prevPaneIndex, nextPaneIndex) {\n    if (this.paneSettings[prevPaneIndex].resizable && this.paneSettings[nextPaneIndex].resizable) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  Splitter.prototype.updateIconsOnExpand = function (e, targetIcon) {\n    this.splitterProperty();\n    var showIcon = this.arrow;\n    var otherBar = this.currentBarIndex === this.allBars.length - 1 ? this.prevBar : this.nextBar;\n    var otherBarIndex = this.currentBarIndex === this.allBars.length - 1 ? this.currentBarIndex - 1 : this.currentBarIndex + 1;\n    if (!e.target.classList.contains(HIDE_ICON)) {\n      // prevPane ! collapsed && nextPane ! collapsed\n      if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneCollapsed) {\n        if (this.paneSettings[this.prevPaneIndex].collapsible && this.paneSettings[this.nextPaneIndex].collapsible) {\n          this.showCurrentBarIcons();\n          if (this.checkResizableProp(this.prevPaneIndex, this.nextPaneIndex)) {\n            this.resizableModel(this.currentBarIndex, true);\n          } else {\n            this.resizableModel(this.currentBarIndex, false);\n          }\n          if (!isNullOrUndefined(otherBar)) {\n            var otherPrevPaneIndex = otherBarIndex;\n            var otherNextPaneIndex = otherBarIndex + 1;\n            var collapsecount = this.getCollapseCount(otherPrevPaneIndex, otherNextPaneIndex);\n            if (this.paneSettings[otherPrevPaneIndex].collapsible && this.paneSettings[otherNextPaneIndex].collapsible) {\n              if (collapsecount === 0) {\n                this.showTargetBarIcon(otherBar, targetIcon);\n                this.showTargetBarIcon(otherBar, showIcon);\n                if (this.checkResizableProp(otherPrevPaneIndex, otherNextPaneIndex)) {\n                  this.resizableModel(otherBarIndex, true);\n                }\n              } else if (collapsecount === 1) {\n                this.hideBarIcons(otherBar);\n                // If condition Edge case in flexible cases\n                if (this.allPanes[otherPrevPaneIndex].classList.contains(EXPAND_PANE) || this.allPanes[otherNextPaneIndex].classList.contains(EXPAND_PANE)) {\n                  this.showTargetBarIcon(otherBar, showIcon);\n                } else {\n                  // Common case\n                  this.showTargetBarIcon(otherBar, targetIcon);\n                }\n                this.resizableModel(otherBarIndex, false);\n              }\n            }\n          }\n        } else {\n          this.hideTargetBarIcon(this.currentSeparator, targetIcon);\n          this.showTargetBarIcon(this.currentSeparator, showIcon);\n          if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneCollapsed) {\n            if (this.checkResizableProp(this.prevPaneIndex, this.nextPaneIndex)) {\n              this.resizableModel(this.currentBarIndex, true);\n            }\n          } else {\n            this.resizableModel(this.currentBarIndex, false);\n          }\n        }\n      }\n    } else {\n      if (!this.paneSettings[this.prevPaneIndex].collapsible && !this.paneSettings[this.nextPaneIndex].collapsible) {\n        if (this.checkResizableProp(this.prevPaneIndex, this.nextPaneIndex)) {\n          this.resizableModel(this.currentBarIndex, true);\n        }\n      }\n    }\n  };\n  Splitter.prototype.afterAction = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator\n    };\n    return eventArgs;\n  };\n  Splitter.prototype.currentIndex = function (e) {\n    this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n  };\n  Splitter.prototype.getSeparatorIndex = function (target) {\n    var array = [].slice.call(this.allBars);\n    array = this.enableReversePanes ? array.reverse() : array;\n    return array.indexOf(target);\n  };\n  Splitter.prototype.getPrevBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar - 1];\n    return prevbar;\n  };\n  Splitter.prototype.getNextBar = function (currentBar) {\n    var prevbar = this.allBars[currentBar + 1];\n    return prevbar;\n  };\n  Splitter.prototype.updateBars = function (index) {\n    this.prevBar = this.getPrevBar(index);\n    this.nextBar = this.getNextBar(index);\n  };\n  Splitter.prototype.splitterDetails = function (e) {\n    if (this.orientation === 'Horizontal') {\n      this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n    } else {\n      this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n    }\n    this.updateCurrentSeparator(e.target);\n    this.currentIndex(e);\n    this.updateBars(this.currentBarIndex);\n    this.getPaneDetails();\n  };\n  Splitter.prototype.triggerResizing = function (e) {\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n      separator: this.currentSeparator\n    };\n    this.trigger('resizing', eventArgs);\n  };\n  Splitter.prototype.onMouseDown = function (e) {\n    var _this = this;\n    e.preventDefault();\n    var target = e.target;\n    if (target.classList.contains(NAVIGATE_ARROW)) {\n      return;\n    }\n    this.updateCurrentSeparator(target);\n    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.updateCursorPosition(e, 'previous');\n    this.getPaneDetails();\n    var eventArgs = {\n      element: this.element,\n      event: e,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n      separator: this.currentSeparator,\n      cancel: false\n    };\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n    }\n    this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n      if (!resizeStartArgs.cancel) {\n        _this.wireResizeEvents();\n        _this.checkPaneSize(e);\n      }\n    });\n  };\n  Splitter.prototype.updatePaneFlexBasis = function (pane) {\n    var previous;\n    if (pane.style.flexBasis.indexOf('%') > 0) {\n      previous = this.removePercentageUnit(pane.style.flexBasis);\n    } else {\n      if (pane.style.flexBasis !== '') {\n        previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n      } else {\n        var offset = this.orientation === 'Horizontal' ? pane.offsetWidth : pane.offsetHeight;\n        previous = this.convertPixelToPercentage(offset);\n      }\n    }\n    return previous;\n  };\n  Splitter.prototype.removePercentageUnit = function (value) {\n    return parseFloat(value.slice(0, value.indexOf('%')));\n  };\n  Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n    var percentage = value.toString();\n    var convertedValue;\n    if (percentage.indexOf('%') > -1) {\n      convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n      var offsetValue = void 0;\n      if (!isNullOrUndefined(targetElement)) {\n        offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n      } else {\n        offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n      }\n      convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n    } else {\n      convertedValue = parseInt(percentage, 10);\n    }\n    return convertedValue;\n  };\n  Splitter.prototype.convertPixelToPercentage = function (value) {\n    var offsetValue = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return value / offsetValue * 100;\n  };\n  Splitter.prototype.convertPixelToNumber = function (value) {\n    value = value.toString();\n    if (value.indexOf('p') > -1) {\n      return parseFloat(value.slice(0, value.indexOf('p')));\n    } else {\n      return parseFloat(value);\n    }\n  };\n  Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n    var separatorPosition = this.orientation === 'Horizontal' ? this.currentCoordinates.x - rectValue : this.currentCoordinates.y - rectValue;\n    var separator;\n    separator = separatorPosition / offsetValue;\n    separator = separator > 1 ? 1 : separator < 0 ? 0 : separator;\n    return separator * offsetValue;\n  };\n  Splitter.prototype.getSeparatorPosition = function (e) {\n    this.updateCursorPosition(e, 'current');\n    var rectBound = this.orientation === 'Horizontal' ? this.element.getBoundingClientRect().left + window.scrollX : this.element.getBoundingClientRect().top + window.scrollY;\n    var offSet = this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight;\n    return this.calcDragPosition(rectBound, offSet);\n  };\n  Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n    var defaultVal = selection === 'min' ? 0 : null;\n    // eslint-disable-next-line\n    var paneValue = null;\n    if (selection === 'min') {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n        paneValue = this.paneSettings[paneIndex].min;\n      }\n    } else {\n      if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n        paneValue = this.paneSettings[paneIndex].max;\n      }\n    }\n    if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(paneValue)) {\n      if (paneValue.indexOf('%') > 0) {\n        paneValue = this.convertPercentageToPixel(paneValue).toString();\n      }\n      return this.convertPixelToNumber(paneValue);\n    } else {\n      return defaultVal;\n    }\n  };\n  Splitter.prototype.getPreviousPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 : parseInt(this.currentSeparator.style.order, 10) - 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n  Splitter.prototype.getNextPaneIndex = function () {\n    var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 : parseInt(this.currentSeparator.style.order, 10) + 1;\n    return this.getOrderIndex(separatorIndex, 'pane');\n  };\n  Splitter.prototype.getPaneDetails = function () {\n    var prevPane = null;\n    var nextPane = null;\n    this.order = parseInt(this.currentSeparator.style.order, 10);\n    if (this.allPanes.length > 1) {\n      prevPane = this.getPrevPane(this.order);\n      nextPane = this.getNextPane(this.order);\n    }\n    if (prevPane && nextPane) {\n      this.previousPane = prevPane;\n      this.nextPane = nextPane;\n      this.prevPaneIndex = this.getPreviousPaneIndex();\n      this.nextPaneIndex = this.getNextPaneIndex();\n    } else {\n      return;\n    }\n  };\n  Splitter.prototype.getPaneHeight = function (pane) {\n    return this.orientation === 'Horizontal' ? pane.offsetWidth.toString() : pane.offsetHeight.toString();\n  };\n  Splitter.prototype.isValidSize = function (paneIndex) {\n    var isValid = false;\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].size) && this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n      isValid = true;\n    }\n    return isValid;\n  };\n  Splitter.prototype.getPaneDimensions = function () {\n    this.previousPaneHeightWidth = this.previousPane.style.flexBasis === '' ? this.getPaneHeight(this.previousPane) : this.previousPane.style.flexBasis;\n    this.nextPaneHeightWidth = this.nextPane.style.flexBasis === '' ? this.getPaneHeight(this.nextPane) : this.nextPane.style.flexBasis;\n    if (this.isValidSize(this.prevPaneIndex)) {\n      this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n      this.updatePrePaneInPercentage = true;\n    }\n    if (this.isValidSize(this.nextPaneIndex)) {\n      this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n      this.updateNextPaneInPercentage = true;\n    }\n    this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n    this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n  };\n  Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n    var coordinatesChanged = true;\n    if (pageX === this.previousCoordinates.x && pageY === this.previousCoordinates.y) {\n      coordinatesChanged = false;\n    }\n    return coordinatesChanged;\n  };\n  Splitter.prototype.isCursorMoved = function (e) {\n    var cursorMoved = true;\n    if (this.getEventType(e.type) === 'mouse' || !isNullOrUndefined(e.pointerType) && this.getEventType(e.pointerType) === 'mouse') {\n      cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n    } else {\n      cursorMoved = Browser.info.name !== 'msie' ? this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) : this.checkCoordinates(e.pageX, e.pageY);\n    }\n    return cursorMoved;\n  };\n  Splitter.prototype.getBorder = function () {\n    this.border = 0;\n    var border = this.orientation === 'Horizontal' ? (this.element.offsetWidth - this.element.clientWidth) / 2 : (this.element.offsetHeight - this.element.clientHeight) / 2;\n    this.border = Browser.info.name !== 'chrome' ? this.border : border;\n  };\n  Splitter.prototype.onMouseMove = function (e) {\n    if (!this.isCursorMoved(e)) {\n      return;\n    }\n    this.getPaneDetails();\n    this.getPaneDimensions();\n    this.triggerResizing(e);\n    var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n    var separatorNewPosition;\n    this.getBorder();\n    if (this.orientation === 'Horizontal') {\n      separatorNewPosition = this.element.getBoundingClientRect().left + left - this.currentSeparator.getBoundingClientRect().left + this.border;\n    } else {\n      separatorNewPosition = this.element.getBoundingClientRect().top + left - this.currentSeparator.getBoundingClientRect().top + this.border;\n    }\n    this.nextPaneHeightWidth = typeof this.nextPaneHeightWidth === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1 ? this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n    this.previousPaneHeightWidth = typeof this.previousPaneHeightWidth === 'string' && this.previousPaneHeightWidth.indexOf('p') > -1 ? this.convertPixelToNumber(this.previousPaneHeightWidth) : parseInt(this.previousPaneHeightWidth, 10);\n    this.prevPaneCurrentWidth = separatorNewPosition + this.previousPaneHeightWidth;\n    this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n    this.validateMinMaxValues();\n    if (this.nextPaneCurrentWidth < 0) {\n      this.nextPaneCurrentWidth = 0;\n    }\n    /* istanbul ignore next */\n    if (this.prevPaneCurrentWidth < 0) {\n      this.prevPaneCurrentWidth = 0;\n    }\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth > this.totalWidth) {\n      if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      } else {\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth - this.totalWidth);\n      }\n    }\n    /* istanbul ignore next */\n    if (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth < this.totalWidth) {\n      var difference = this.totalWidth - (this.nextPaneCurrentWidth + this.prevPaneCurrentWidth);\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n    }\n    this.calculateCurrentDimensions();\n    this.addStaticPaneClass();\n    var flexPaneCount = 0;\n    for (var i = 0; i < this.paneSettings.length; i++) {\n      if (this.paneSettings[i].size === '') {\n        flexPaneCount = flexPaneCount + 1;\n      } else if (this.allPanes[i].style.flexBasis !== '') {\n        this.paneSettings[i].size = this.allPanes[i].style.flexBasis;\n      }\n    }\n    var allFlexiblePanes = flexPaneCount === this.allPanes.length;\n    // Two flexible Pane Case.\n    if (this.previousPane.style.flexBasis === '' && this.nextPane.style.flexBasis === '' && !allFlexiblePanes) {\n      var middlePaneIndex = this.allPanes.length % this.allBars.length;\n      if (this.prevPaneIndex === middlePaneIndex) {\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        addClass([this.nextPane], STATIC_PANE);\n      } else if (this.nextPaneIndex === middlePaneIndex) {\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        addClass([this.previousPane], STATIC_PANE);\n      } else {\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        addClass([this.nextPane], STATIC_PANE);\n      }\n    } // All panes are flexible\n    else if (allFlexiblePanes) {\n      this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n      addClass([this.previousPane], STATIC_PANE);\n      this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n      addClass([this.nextPane], STATIC_PANE);\n    } // Two Panesa are Static Pane\n    else {\n      if (this.previousPane.style.flexBasis !== '' && this.previousPane.classList.contains(STATIC_PANE)) {\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n      }\n      if (this.nextPane.style.flexBasis !== '' && this.nextPane.classList.contains(STATIC_PANE)) {\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n      }\n    }\n    var isStaticPanes = this.previousPane.style.flexBasis !== '' && this.nextPane.style.flexBasis !== '';\n    if (!(this.allPanes.length > 2) && isStaticPanes) {\n      this.updateSplitterSize();\n    }\n  };\n  Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth) {\n    var paneMinRange = null;\n    var paneMinDimensions;\n    var difference = 0;\n    var validatedVal;\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n      paneMinRange = this.paneSettings[paneIndex].min.toString();\n    }\n    if (!isNullOrUndefined(paneMinRange)) {\n      if (paneMinRange.indexOf('%') > 0) {\n        paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n      }\n      paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n      if (paneCurrentWidth < paneMinDimensions) {\n        difference = paneCurrentWidth - paneMinDimensions <= 0 ? 0 : paneCurrentWidth - paneMinDimensions;\n        this.totalWidth = this.totalWidth - difference;\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMinDimensions;\n      }\n    }\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n  Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth) {\n    var paneMaxRange = null;\n    var paneMaxDimensions;\n    var validatedVal;\n    if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n      paneMaxRange = this.paneSettings[paneIndex].max.toString();\n    }\n    if (!isNullOrUndefined(paneMaxRange)) {\n      if (paneMaxRange.indexOf('%') > 0) {\n        paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n      }\n      paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n      if (paneCurrentWidth > paneMaxDimensions) {\n        this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n        this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n        validatedVal = paneMaxDimensions;\n      }\n    }\n    return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n  };\n  Splitter.prototype.validateMinMaxValues = function () {\n    //validate previous pane minimum range\n    this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth);\n    // Validate next pane minimum range\n    this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth);\n    // validate previous pane maximum range\n    this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth);\n    // validate next pane maximum range\n    this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth);\n  };\n  Splitter.prototype.equatePaneWidths = function () {\n    var difference;\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth > this.totalPercent) {\n      difference = this.prevPaneCurrentWidth + this.nextPaneCurrentWidth - this.totalPercent;\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - difference / 2 + '%';\n    }\n    if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth < this.totalPercent) {\n      difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + difference / 2 + '%';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference / 2 + '%';\n    }\n  };\n  Splitter.prototype.calculateCurrentDimensions = function () {\n    if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n      this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth) * 10) / 10));\n      this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth) * 10) / 10));\n      if (this.prevPaneCurrentWidth === 0) {\n        this.nextPaneCurrentWidth = this.totalPercent;\n      }\n      if (this.nextPaneCurrentWidth === 0) {\n        this.prevPaneCurrentWidth = this.totalPercent;\n      }\n      if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n        this.equatePaneWidths();\n      } else {\n        this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n        this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n      }\n      this.prevPaneCurrentWidth = this.updatePrePaneInPercentage ? this.prevPaneCurrentWidth : this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n      this.nextPaneCurrentWidth = this.updateNextPaneInPercentage ? this.nextPaneCurrentWidth : this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n      this.updatePrePaneInPercentage = false;\n      this.updateNextPaneInPercentage = false;\n    } else {\n      this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n      this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n    }\n  };\n  Splitter.prototype.addStaticPaneClass = function () {\n    if (!this.previousPane.classList.contains(STATIC_PANE) && !(this.previousPane.style.flexBasis === '') && !this.previousPane.classList.contains(EXPAND_PANE)) {\n      this.previousPane.classList.add(STATIC_PANE);\n    }\n    if (!this.nextPane.classList.contains(STATIC_PANE) && !(this.nextPane.style.flexBasis === '') && !this.nextPane.classList.contains(EXPAND_PANE)) {\n      this.nextPane.classList.add(STATIC_PANE);\n    }\n  };\n  Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n    var separatorTopLeft = this.orientation === 'Horizontal' ? this.currentSeparator.offsetLeft : this.currentSeparator.offsetTop;\n    var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n    var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n    var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n    var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n    var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n    var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n    var validatedSize = draggedPos;\n    if (draggedPos > nextPaneRange - pane2MinSize) {\n      validatedSize = nextPaneRange - pane2MinSize;\n    } else if (draggedPos < prePaneRange + pane1MinSize) {\n      validatedSize = prePaneRange + pane1MinSize;\n    }\n    if (!isNullOrUndefined(pane1MaxSize)) {\n      if (draggedPos > prePaneRange + pane1MaxSize) {\n        validatedSize = prePaneRange + pane1MaxSize;\n      }\n    } else if (!isNullOrUndefined(pane2MaxSize)) {\n      if (draggedPos < nextPaneRange - pane2MaxSize) {\n        validatedSize = nextPaneRange - pane2MaxSize;\n      }\n    }\n    return validatedSize;\n  };\n  Splitter.prototype.onMouseUp = function (e) {\n    removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n    this.unwireResizeEvents();\n    var eventArgs = {\n      event: e,\n      element: this.element,\n      pane: [this.previousPane, this.nextPane],\n      index: [this.prevPaneIndex, this.nextPaneIndex],\n      separator: this.currentSeparator,\n      paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n    };\n    for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n      this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n    }\n    this.trigger('resizeStop', eventArgs);\n    if (this.enablePersistence) {\n      var paneValues = this.paneSettings;\n      paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n      paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n      this.setProperties({\n        'paneSettings': paneValues\n      }, true);\n    }\n  };\n  Splitter.prototype.panesDimension = function (index, child) {\n    var childCount = child.length;\n    var size;\n    parseInt(this.getHeight(this.element), 10);\n    if (!isNullOrUndefined(this.paneSettings[index])) {\n      if (!isNullOrUndefined(this.paneSettings[index].size)) {\n        size = this.paneSettings[index].size;\n        if (index < childCount) {\n          setStyleAttribute(child[index], {\n            'flex-basis': size,\n            'order': index * 2\n          });\n          if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          } else if (!this.sizeFlag) {\n            child[index].style.flexBasis = null;\n          }\n          if (index === childCount - 1 && this.sizeFlag && this.paneSettings[index].size !== '') {\n            addClass([child[index]], STATIC_PANE);\n          }\n        }\n      } else {\n        this.sizeFlag = true;\n        setStyleAttribute(child[index], {\n          'order': index * 2\n        });\n      }\n    } else {\n      setStyleAttribute(child[index], {\n        'order': index * 2\n      });\n    }\n    this.paneOrder.push(index * 2);\n  };\n  Splitter.prototype.setTemplate = function (template, toElement) {\n    toElement.innerHTML = '';\n    template = typeof template === 'string' ? this.sanitizeHelper(template) : template;\n    this.templateCompile(toElement, template);\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (this.isReact) {\n      this.renderReactTemplates();\n    }\n  };\n  // eslint-disable-next-line\n  Splitter.prototype.templateCompile = function (ele, cnt) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n    var tempEle = this.createElement('div');\n    this.compileElement(tempEle, cnt, 'content');\n    if (tempEle.childNodes.length !== 0) {\n      [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n        ele.appendChild(childEle);\n      });\n    }\n  };\n  Splitter.prototype.compileElement = function (ele, val, prop) {\n    // eslint-disable-next-line\n    var blazorContain = Object.keys(window);\n    if (typeof val === 'string') {\n      if (val[0] === '.' || val[0] === '#') {\n        var eleVal = document.querySelector(val);\n        if (!isNullOrUndefined(eleVal)) {\n          this.templateElement.push(eleVal);\n          if (eleVal.style.display === 'none') {\n            eleVal.style.removeProperty('display');\n          }\n          if (eleVal.getAttribute('style') === '') {\n            eleVal.removeAttribute('style');\n          }\n          ele.appendChild(eleVal);\n          return;\n        } else {\n          val = val.trim();\n        }\n      } else {\n        val = val.trim();\n      }\n    }\n    var templateFn;\n    if (!isNullOrUndefined(val.outerHTML)) {\n      templateFn = compile(val.outerHTML);\n    } else {\n      templateFn = compile(val);\n    }\n    var templateFUN;\n    if (!isNullOrUndefined(templateFn)) {\n      templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n    }\n    if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n      [].slice.call(templateFUN).forEach(function (el) {\n        ele.appendChild(el);\n      });\n    }\n  };\n  Splitter.prototype.paneCollapsible = function (pane, index) {\n    // eslint-disable-next-line\n    this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n  };\n  Splitter.prototype.createSplitPane = function (target) {\n    var childCount = target.children.length;\n    for (var i = 0; i < this.paneSettings.length; i++) {\n      if (childCount < this.paneSettings.length) {\n        var childElement = this.createElement('div');\n        this.element.appendChild(childElement);\n        childCount = childCount + 1;\n      }\n    }\n    childCount = target.children.length;\n    var child = [].slice.call(target.children);\n    this.sizeFlag = false;\n    if (childCount > 0) {\n      for (var i = 0; i < childCount; i++) {\n        // To accept only div and span element as pane\n        if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n          this.allPanes.push(child[i]);\n          if (this.orientation === 'Horizontal') {\n            addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          } else {\n            addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n            this.panesDimension(i, child);\n          }\n          if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n            this.setTemplate(this.paneSettings[i].content, child[i]);\n          }\n          if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n            this.setCssClass(child[i], this.paneSettings[i].cssClass);\n          }\n          if (!isNullOrUndefined(this.paneSettings[i])) {\n            this.paneCollapsible(child[i], i);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * expands corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n   * @returns {void}\n   */\n  Splitter.prototype.expand = function (index) {\n    this.collapsedOnchange(index);\n    this.updatePaneSettings(index, false);\n  };\n  /**\n   * collapses corresponding pane based on the index is passed.\n   *\n   * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n   * @returns {void}\n   */\n  Splitter.prototype.collapse = function (index) {\n    this.isCollapsed(index);\n    this.updatePaneSettings(index, true);\n  };\n  /**\n   * Removes the control from the DOM and also removes all its related events.\n   *\n   * @returns {void}\n   */\n  Splitter.prototype.destroy = function () {\n    if (!this.isDestroyed) {\n      _super.prototype.destroy.call(this);\n      EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n      EventHandler.remove(this.element, 'keydown', this.onMove);\n      this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n      while (this.element.attributes.length > 0) {\n        this.element.removeAttribute(this.element.attributes[0].name);\n      }\n      this.element.innerHTML = this.wrapper.innerHTML;\n      for (var i = 0; i < this.wrapper.attributes.length; i++) {\n        this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n      }\n      if (this.refreshing) {\n        addClass([this.element], ['e-control', 'e-lib', ROOT]);\n        this.allBars = [];\n        this.allPanes = [];\n      }\n      this.restoreElem();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (this.isReact) {\n        this.clearTemplate();\n      }\n      this.allBars = [];\n      this.allPanes = [];\n      this.previousPane = null;\n      this.nextPane = null;\n      this.currentSeparator = null;\n    }\n  };\n  Splitter.prototype.restoreElem = function () {\n    if (this.templateElement.length > 0) {\n      for (var i = 0; i < this.templateElement.length; i++) {\n        this.templateElement[i].style.display = 'none';\n        document.body.appendChild(this.templateElement[i]);\n      }\n    }\n  };\n  Splitter.prototype.addPaneClass = function (pane) {\n    if (this.orientation === 'Horizontal') {\n      addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n    } else {\n      addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n    }\n    return pane;\n  };\n  Splitter.prototype.removePaneOrders = function (paneClass) {\n    var childNodes = this.element.childNodes;\n    var panes = [];\n    for (var i = 0; childNodes.length < 0; i++) {\n      if (childNodes[i].classList.contains(paneClass)) {\n        panes.push(childNodes[i]);\n      }\n    }\n    for (var i = 0; i < panes.length; i++) {\n      panes[i].style.removeProperty('order');\n    }\n  };\n  Splitter.prototype.setPaneOrder = function () {\n    for (var i = 0; i < this.allPanes.length; i++) {\n      this.panesDimension(i, this.allPanes);\n    }\n  };\n  Splitter.prototype.removeSeparator = function () {\n    for (var i = 0; i < this.allBars.length; i++) {\n      detach(this.allBars[i]);\n    }\n    this.allBars = [];\n  };\n  Splitter.prototype.updatePanes = function () {\n    this.setPaneOrder();\n    this.removeSeparator();\n    this.addSeparator(this.element);\n  };\n  /**\n   * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n   *\n   * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n   * @param { number } index - Specifies the index where the pane will be inserted.\n   * @returns {void}\n   */\n  Splitter.prototype.addPane = function (paneProperties, index) {\n    var newPane = this.createElement('div');\n    newPane = this.addPaneClass(newPane);\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var paneDetails = {\n      size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n      min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n      max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n      content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n      resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n      collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n      collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n      cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n    };\n    this.paneSettings.splice(index, 0, paneDetails);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n    if (this.orientation === 'Horizontal') {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n      this.removePaneOrders(SPLIT_H_PANE);\n    } else {\n      this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n      this.removePaneOrders(SPLIT_V_PANE);\n    }\n    this.allPanes.splice(index, 0, newPane);\n    this.updatePanes();\n    this.setTemplate(this.paneSettings[index].content, newPane);\n    this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n    this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n  };\n  /**\n   * Allows you to remove the specified pane dynamically by passing its index value.\n   *\n   * @param { number } index - Specifies the index value to remove the corresponding pane.\n   * @returns {void}\n   */\n  Splitter.prototype.removePane = function (index) {\n    index = index > this.allPanes.length + 1 ? this.allPanes.length : index;\n    var elementClass = this.orientation === 'Horizontal' ? SPLIT_H_PANE : SPLIT_V_PANE;\n    if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n      return;\n    }\n    detach(this.element.querySelectorAll('.' + elementClass)[index]);\n    this.allPanes.splice(index, 1);\n    this.removePaneOrders(elementClass);\n    this.updatePanes();\n    this.paneSettings.splice(index, 1);\n    this.setProperties({\n      'paneSettings': this.paneSettings\n    }, true);\n    if (this.allPanes.length > 0) {\n      this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    }\n  };\n  __decorate([Property('100%')], Splitter.prototype, \"height\", void 0);\n  __decorate([Property(false)], Splitter.prototype, \"enableReversePanes\", void 0);\n  __decorate([Property('100%')], Splitter.prototype, \"width\", void 0);\n  __decorate([Property(false)], Splitter.prototype, \"enablePersistence\", void 0);\n  __decorate([Collection([], PaneProperties)], Splitter.prototype, \"paneSettings\", void 0);\n  __decorate([Property('Horizontal')], Splitter.prototype, \"orientation\", void 0);\n  __decorate([Property('')], Splitter.prototype, \"cssClass\", void 0);\n  __decorate([Property(true)], Splitter.prototype, \"enabled\", void 0);\n  __decorate([Property(true)], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(null)], Splitter.prototype, \"separatorSize\", void 0);\n  __decorate([Event()], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n  __decorate([Event()], Splitter.prototype, \"created\", void 0);\n  __decorate([Event()], Splitter.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], Splitter.prototype, \"resizing\", void 0);\n  __decorate([Event()], Splitter.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], Splitter.prototype, \"beforeCollapse\", void 0);\n  __decorate([Event()], Splitter.prototype, \"beforeExpand\", void 0);\n  __decorate([Event()], Splitter.prototype, \"collapsed\", void 0);\n  __decorate([Event()], Splitter.prototype, \"expanded\", void 0);\n  Splitter = __decorate([NotifyPropertyChanges], Splitter);\n  return Splitter;\n}(Component);\nexport { Splitter };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","setStyleAttribute","ChildProperty","compile","NotifyPropertyChanges","addClass","Collection","isNullOrUndefined","Event","EventHandler","selectAll","removeClass","select","Browser","detach","formatUnit","SanitizeHtmlHelper","extend","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","SPLIT_TOUCH","DISABLED","RTL","E_ICONS","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","BAR_SIZE_DEFAULT","PaneProperties","_super","apply","Splitter","options","element","_this","call","needsID","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","prop","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","paneCounts","isPaneContentChanged","some","count","content","isReact","cPaneCount","k","hasAllContent","clearTemplate","index","parseInt","changedPropsCount","j","property","newValue","allPanes","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","isCollapsed","collapsedOnchange","newValSize","updatePaneSize","destroyPaneSettings","allBars","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","style","flexBasis","flexPaneIndexes","staticPaneWidth","flexCount","size","innerText","offsetWidth","offsetHeight","flexPaneWidth","border","avgDiffWidth","add","initializeValues","paneOrder","separatorOrder","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","name","info","css","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","collapse","expand","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","beforeSanitize","beforeEvent","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","paneAPI","slice","forEach","el","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","push","getBoundingClientRect","className","split","hideResizer","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","updateIsCollapsed","lastBarArrow","targetEle","lastBarIndex","click","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","m","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","paneEle","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","removeEventListener","staticPaneCount","updateSplitterSize","iswindowResize","len","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","updatePaneOffset","convertPixelToPercentage","flexPaneOffset","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","splitterDetails","icon","collapseAction","expandAction","beforeExpandArgs","expandPane","expandEventArgs","getIcon","targetClass","filter","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","isLeftOrUp","collapsePane","expandPaneIndex","cCount","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","flexGrow","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","targetIcon","removeIcon","otherBar","currentBarIndex","prevBar","nextBar","otherBarIndex","splitInstance","prevPaneCollapsed","nextPaneCollapsed","otherPrevPaneIndex","otherNextPaneIndex","collapsecount","getCollapseCount","hideBarIcons","collapsePaneIndex","isFlexPane","isFlexPaneHidden","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneExpanded","nextPaneNextEle","prevPanePreEle","previousElementSibling","showCurrentBarIcons","bar","checkResizableProp","showIcon","currentIndex","array","getPrevBar","prevbar","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","percentage","convertedValue","offsetValue","Math","ceil","calcDragPosition","rectValue","separatorPosition","getSeparatorPosition","rectBound","left","window","scrollX","top","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","cursorMoved","getBorder","clientWidth","clientHeight","validateDraggedPosition","separatorNewPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","flexPaneCount","allFlexiblePanes","middlePaneIndex","isStaticPanes","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxRange","paneMaxDimensions","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","template","toElement","templateCompile","renderReactTemplates","ele","cnt","blazorContain","tempEle","compileElement","childEle","val","eleVal","display","removeProperty","trim","templateFn","outerHTML","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-layouts/src/splitter/splitter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.needsID = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        var isPaneContentChanged = paneCounts.some(function (count) {\n                            return !isNullOrUndefined(newProp.paneSettings[count].content);\n                        });\n                        if (this.isReact && isPaneContentChanged) {\n                            var cPaneCount = 0;\n                            for (var k = 0; k < this.paneSettings.length; k++) {\n                                if (typeof (this.paneSettings[k].content) === 'function') {\n                                    cPaneCount = cPaneCount + 1;\n                                }\n                            }\n                            var hasAllContent = cPaneCount === this.paneSettings.length;\n                            if (hasAllContent) {\n                                this.clearTemplate();\n                            }\n                        }\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[\"\" + property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[\"\" + property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        if (newProp.paneSettings[index].collapsed) {\n                                            this.isCollapsed(index);\n                                        }\n                                        else {\n                                            this.collapsedOnchange(index);\n                                        }\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[\"\" + property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.clearTemplate();\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            if (this.allPanes[flexPaneIndexes[j]].style.flexBasis !== '') {\n                this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n            }\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.initializeValues = function () {\n        this.allPanes = [];\n        this.paneOrder = [];\n        this.separatorOrder = [];\n        this.allBars = [];\n        this.previousCoordinates = {};\n        this.currentCoordinates = {};\n        this.updatePrePaneInPercentage = false;\n        this.updateNextPaneInPercentage = false;\n        this.panesDimensions = [];\n        this.border = 0;\n        this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        this.iconsDelay = 300;\n        this.templateElement = [];\n        this.collapseFlag = false;\n        this.expandFlag = true;\n    };\n    Splitter.prototype.preRender = function () {\n        this.initializeValues();\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.previousPane.style.flexBasis.indexOf('p') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        var min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        if (rtl) {\n            addClass([this.element], RTL);\n        }\n        else {\n            removeClass([this.element], RTL);\n        }\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            if (this.orientation === 'Horizontal') {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width);\n            }\n            else {\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n            }\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                if (index === (this.allBars.length)) {\n                    this.allPanes[index].classList.add(RESIZABLE_PANE);\n                }\n                else {\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                }\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            if (index === (this.allBars.length)) {\n                this.allPanes[index].classList.remove(RESIZABLE_PANE);\n            }\n            else {\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n            }\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        if (enabled) {\n            removeClass([this.element], DISABLED);\n        }\n        else {\n            addClass([this.element], DISABLED);\n        }\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        if (this.orientation === 'Horizontal') {\n            resizeHanlder.style.width = sizeValue;\n        }\n        else {\n            resizeHanlder.style.height = sizeValue;\n        }\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                if (this.paneSettings[index].collapsible) {\n                    removeClass([arrow2], [HIDE_ICON]);\n                }\n                else {\n                    addClass([arrow2], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if (this.paneSettings[index + 1].collapsible) {\n                        removeClass([arrow1], [HIDE_ICON]);\n                    }\n                    else {\n                        addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        if (this.paneSettings[index + 1].collapsible) {\n                            removeClass([arrow1], [HIDE_ICON]);\n                        }\n                        else {\n                            addClass([arrow1], [HIDE_ICON]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        var proxy = null || this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '-1');\n        separator.setAttribute('aria-hidden', 'true');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        if (this.isResizable()) {\n            this.allPanes[index].classList.add(RESIZABLE_PANE);\n        }\n        else {\n            this.allPanes[index].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-valuenow', i.toString());\n                if (!isNullOrUndefined(this.orientation)) {\n                    separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                }\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            });\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    if (this.allPanes[i].style.flexBasis === '') {\n                        removeClass([this.allPanes[i]], STATIC_PANE);\n                    }\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0, len = children.length; i < len; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0, len = this.allBars.length; j < len; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) :\n                parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                    parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0, len = this.allPanes.length; i < len; i++) {\n            if (this.allPanes[i].innerText === '' ? !(this.paneSettings[i].size) || !(this.allPanes[i].innerText === '')\n                : !(this.paneSettings[i].size) && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0, len = flexPaneIndexes.length; j < len; j++) {\n            if (this.allPanes[flexPaneIndexes[j]].style.flexBasis !== '') {\n                this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                    (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                    (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n            }\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if ((this.orientation === 'Horizontal' ? this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight) < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - (this.orientation === 'Horizontal' ?\n                            this.allPanes[i].offsetWidth : this.allPanes[i].offsetHeight);\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        var updatePaneOffset = this.orientation === 'Horizontal' ? updatePane.offsetWidth : updatePane.offsetHeight;\n                        if (!isNullOrUndefined(updatePane) && updatePane.style.flexBasis !== '' && updatePane.classList.contains(STATIC_PANE)) {\n                            updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePaneOffset + sizeDiff) + '%'\n                                : (updatePaneOffset + sizeDiff) + 'px';\n                        }\n                        var flexPaneOffset = this.orientation === 'Horizontal' ? flexPane.offsetWidth : flexPane.offsetHeight;\n                        if (!isNullOrUndefined(flexPane) && flexPane.style.flexBasis !== '' && !flexPane.classList.contains(STATIC_PANE)) {\n                            flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                                this.convertPixelToPercentage(flexPaneOffset - sizeDiff) + '%' : (flexPaneOffset - sizeDiff) + 'px';\n                        }\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        this.splitterDetails(e);\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_RIGHT) ||\n            icon.classList.contains(ARROW_DOWN) || icon.classList.contains(ARROW_UP)) {\n            if (!this.nextPane.classList.contains(PANE_HIDDEN) && !this.previousPane.classList.contains(PANE_HIDDEN)) {\n                this.collapseAction(e);\n            }\n            else {\n                this.expandAction(e);\n            }\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.getIcon = function (e) {\n        var targetClass = e.target.className.split(' ').filter(function (className) {\n            return className !== NAVIGATE_ARROW && className !== HIDE_ICON;\n        });\n        return targetClass[0];\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var icon = this.getIcon(e);\n        var isLeftOrUp = icon === ARROW_LEFT || icon === ARROW_UP;\n        var collapsePane = isLeftOrUp ? this.nextPane : this.previousPane;\n        var expandPane = isLeftOrUp ? this.previousPane : this.nextPane;\n        var expandPaneIndex = isLeftOrUp ? this.nextPaneIndex : this.prevPaneIndex;\n        removeClass([collapsePane], collapseClass);\n        collapsePane.setAttribute('aria-hidden', 'false');\n        // cCount is calculated after removing the COLLAPSE_PANE\n        var cCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        if (cCount > 0) {\n            if (!expandPane.classList.contains(COLLAPSE_PANE)) {\n                addClass([expandPane], EXPAND_PANE);\n                expandPane.setAttribute('aria-expanded', 'true');\n            }\n        }\n        else if (cCount === 0) {\n            for (var i = 0; i < this.allPanes.length; i++) {\n                if (!this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                    removeClass([this.allPanes[i]], EXPAND_PANE);\n                    this.allPanes[i].setAttribute('aria-expanded', 'false');\n                }\n            }\n        }\n        if (this.expandFlag) {\n            this.updatePaneSettings(expandPaneIndex, false);\n        }\n        this.updateIconsOnExpand(e, icon);\n        this.updateFlexGrow();\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.setAttribute('aria-expanded', 'false');\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.updateFlexGrow = function () {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.flexGrow = '';\n            if (visiblePane && this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e, targetIcon) {\n        this.splitterProperty();\n        var removeIcon = this.arrow;\n        var otherBar = this.currentBarIndex === (this.allBars.length - 1) ? this.prevBar : this.nextBar;\n        var otherBarIndex = this.currentBarIndex === (this.allBars.length - 1) ? this.currentBarIndex - 1\n            : this.currentBarIndex + 1;\n        if (!e.target.classList.contains(HIDE_ICON)) {\n            if (this.splitInstance.prevPaneCollapsed || this.splitInstance.nextPaneCollapsed) {\n                if (this.paneSettings[this.prevPaneIndex].collapsible && this.paneSettings[this.nextPaneIndex].collapsible) {\n                    this.resizableModel(this.currentBarIndex, false);\n                    this.hideTargetBarIcon(this.currentSeparator, targetIcon);\n                    if (!isNullOrUndefined(otherBar)) {\n                        var otherPrevPaneIndex = otherBarIndex;\n                        var otherNextPaneIndex = otherBarIndex + 1;\n                        var collapsecount = this.getCollapseCount(otherPrevPaneIndex, otherNextPaneIndex);\n                        if (this.paneSettings[otherPrevPaneIndex].collapsible &&\n                            this.paneSettings[otherNextPaneIndex].collapsible) {\n                            if (collapsecount === 1) {\n                                this.hideTargetBarIcon(otherBar, removeIcon);\n                                this.resizableModel(otherBarIndex, false);\n                            }\n                            else if (collapsecount === 2) {\n                                this.hideBarIcons(otherBar);\n                                this.resizableModel(otherBarIndex, false);\n                            }\n                            if (!this.paneSettings[otherPrevPaneIndex].collapsible ||\n                                !this.paneSettings[otherNextPaneIndex].collapsible) {\n                                this.hideTargetBarIcon(otherBar, targetIcon);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this.showTargetBarIcon(this.currentSeparator, removeIcon);\n                    this.hideTargetBarIcon(this.currentSeparator, targetIcon);\n                    this.resizableModel(this.currentBarIndex, false);\n                }\n            }\n        }\n        else {\n            this.resizableModel(this.currentBarIndex, false);\n            if (!isNullOrUndefined(otherBar)) {\n                this.resizableModel(otherBarIndex, true);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible || !this.paneSettings[this.nextPaneIndex].collapsible) {\n                if (!isNullOrUndefined(otherBar)) {\n                    this.hideTargetBarIcon(otherBar, targetIcon);\n                }\n                this.hideTargetBarIcon(this.currentSeparator, removeIcon);\n            }\n            else {\n                if (!isNullOrUndefined(otherBar)) {\n                    this.hideTargetBarIcon(otherBar, removeIcon);\n                }\n                this.showTargetBarIcon(this.currentSeparator, removeIcon);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        var icon = this.getIcon(e);\n        var isLeftOrUp = icon === ARROW_LEFT || icon === ARROW_UP;\n        var collapsePane = isLeftOrUp ? this.previousPane : this.nextPane;\n        var expandPane = isLeftOrUp ? this.nextPane : this.previousPane;\n        var collapsePaneIndex = isLeftOrUp ? this.prevPaneIndex : this.nextPaneIndex;\n        removeClass([collapsePane], EXPAND_PANE);\n        collapsePane.setAttribute('aria-expanded', 'false');\n        addClass([collapsePane], collapseClass);\n        collapsePane.setAttribute('aria-hidden', 'true');\n        var isFlexPane = collapsePane.style.flexBasis === '';\n        if (isFlexPane) {\n            addClass([expandPane], EXPAND_PANE);\n            expandPane.setAttribute('aria-expanded', 'true');\n        }\n        else {\n            var isFlexPaneHidden = true;\n            for (var i = 0; i < this.allPanes.length; i++) {\n                if (!this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                    if (this.allPanes[i].style.flexBasis === '' && !this.allPanes[i].classList.contains(COLLAPSE_PANE)\n                        && !this.allPanes[i].classList.contains(EXPAND_PANE)) {\n                        addClass([this.allPanes[i]], EXPAND_PANE);\n                        this.allPanes[i].setAttribute('aria-expanded', 'true');\n                        isFlexPaneHidden = false;\n                        break;\n                    }\n                }\n            }\n            if (isFlexPaneHidden) {\n                addClass([expandPane], EXPAND_PANE);\n                expandPane.setAttribute('aria-expanded', 'true');\n            }\n        }\n        if (!this.collapseFlag) {\n            this.updatePaneSettings(collapsePaneIndex, true);\n        }\n        this.updateIconsOnCollapse(e, icon);\n        this.updateFlexGrow();\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcons = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.hideBarIcons = function (bar) {\n        addClass([select('.' + this.arrow, bar)], HIDE_ICON);\n    };\n    Splitter.prototype.getCollapseCount = function (prevPaneIndex, nextPaneIndex) {\n        var collapsecount = 0;\n        if (this.allPanes[prevPaneIndex].classList.contains(COLLAPSE_PANE)) {\n            collapsecount = collapsecount + 1;\n        }\n        if (this.allPanes[nextPaneIndex].classList.contains(COLLAPSE_PANE)) {\n            collapsecount = collapsecount + 1;\n        }\n        return collapsecount;\n    };\n    Splitter.prototype.checkResizableProp = function (prevPaneIndex, nextPaneIndex) {\n        if (this.paneSettings[prevPaneIndex].resizable && this.paneSettings[nextPaneIndex].resizable) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e, targetIcon) {\n        this.splitterProperty();\n        var showIcon = this.arrow;\n        var otherBar = this.currentBarIndex === (this.allBars.length - 1) ? this.prevBar : this.nextBar;\n        var otherBarIndex = this.currentBarIndex === (this.allBars.length - 1) ?\n            this.currentBarIndex - 1 : this.currentBarIndex + 1;\n        if (!e.target.classList.contains(HIDE_ICON)) {\n            // prevPane ! collapsed && nextPane ! collapsed\n            if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneCollapsed) {\n                if (this.paneSettings[this.prevPaneIndex].collapsible && this.paneSettings[this.nextPaneIndex].collapsible) {\n                    this.showCurrentBarIcons();\n                    if (this.checkResizableProp(this.prevPaneIndex, this.nextPaneIndex)) {\n                        this.resizableModel(this.currentBarIndex, true);\n                    }\n                    else {\n                        this.resizableModel(this.currentBarIndex, false);\n                    }\n                    if (!isNullOrUndefined(otherBar)) {\n                        var otherPrevPaneIndex = otherBarIndex;\n                        var otherNextPaneIndex = otherBarIndex + 1;\n                        var collapsecount = this.getCollapseCount(otherPrevPaneIndex, otherNextPaneIndex);\n                        if (this.paneSettings[otherPrevPaneIndex].collapsible &&\n                            this.paneSettings[otherNextPaneIndex].collapsible) {\n                            if (collapsecount === 0) {\n                                this.showTargetBarIcon(otherBar, targetIcon);\n                                this.showTargetBarIcon(otherBar, showIcon);\n                                if (this.checkResizableProp(otherPrevPaneIndex, otherNextPaneIndex)) {\n                                    this.resizableModel(otherBarIndex, true);\n                                }\n                            }\n                            else if (collapsecount === 1) {\n                                this.hideBarIcons(otherBar);\n                                // If condition Edge case in flexible cases\n                                if (this.allPanes[otherPrevPaneIndex].classList.contains(EXPAND_PANE) ||\n                                    this.allPanes[otherNextPaneIndex].classList.contains(EXPAND_PANE)) {\n                                    this.showTargetBarIcon(otherBar, showIcon);\n                                }\n                                else {\n                                    // Common case\n                                    this.showTargetBarIcon(otherBar, targetIcon);\n                                }\n                                this.resizableModel(otherBarIndex, false);\n                            }\n                        }\n                    }\n                }\n                else {\n                    this.hideTargetBarIcon(this.currentSeparator, targetIcon);\n                    this.showTargetBarIcon(this.currentSeparator, showIcon);\n                    if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneCollapsed) {\n                        if (this.checkResizableProp(this.prevPaneIndex, this.nextPaneIndex)) {\n                            this.resizableModel(this.currentBarIndex, true);\n                        }\n                    }\n                    else {\n                        this.resizableModel(this.currentBarIndex, false);\n                    }\n                }\n            }\n        }\n        else {\n            if (!this.paneSettings[this.prevPaneIndex].collapsible && !this.paneSettings[this.nextPaneIndex].collapsible) {\n                if (this.checkResizableProp(this.prevPaneIndex, this.nextPaneIndex)) {\n                    this.resizableModel(this.currentBarIndex, true);\n                }\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        value = value.toString();\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left + window.scrollX :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x && pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.previousPaneHeightWidth =\n            (typeof (this.previousPaneHeightWidth) === 'string' && this.previousPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.previousPaneHeightWidth) : parseInt(this.previousPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.previousPaneHeightWidth;\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        var flexPaneCount = 0;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (this.paneSettings[i].size === '') {\n                flexPaneCount = flexPaneCount + 1;\n            }\n            else if (this.allPanes[i].style.flexBasis !== '') {\n                this.paneSettings[i].size = this.allPanes[i].style.flexBasis;\n            }\n        }\n        var allFlexiblePanes = flexPaneCount === this.allPanes.length;\n        // Two flexible Pane Case.\n        if (this.previousPane.style.flexBasis === '' && this.nextPane.style.flexBasis === '' && !allFlexiblePanes) {\n            var middlePaneIndex = this.allPanes.length % this.allBars.length;\n            if (this.prevPaneIndex === middlePaneIndex) {\n                this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n                addClass([this.nextPane], STATIC_PANE);\n            }\n            else if (this.nextPaneIndex === middlePaneIndex) {\n                this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n                addClass([this.previousPane], STATIC_PANE);\n            }\n            else {\n                this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n                addClass([this.nextPane], STATIC_PANE);\n            }\n        } // All panes are flexible\n        else if (allFlexiblePanes) {\n            this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n            addClass([this.previousPane], STATIC_PANE);\n            this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n            addClass([this.nextPane], STATIC_PANE);\n        } // Two Panesa are Static Pane\n        else {\n            if (this.previousPane.style.flexBasis !== '' && this.previousPane.classList.contains(STATIC_PANE)) {\n                this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n            }\n            if (this.nextPane.style.flexBasis !== '' && this.nextPane.classList.contains(STATIC_PANE)) {\n                this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n            }\n        }\n        var isStaticPanes = this.previousPane.style.flexBasis !== '' && this.nextPane.style.flexBasis !== '';\n        if (!(this.allPanes.length > 2) && isStaticPanes) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE) && !(this.previousPane.style.flexBasis === '') && !this.previousPane.classList.contains(EXPAND_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE) && !(this.nextPane.style.flexBasis === '') && !this.nextPane.classList.contains(EXPAND_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            EventHandler.remove(this.element, 'keydown', this.onMove);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n            this.allBars = [];\n            this.allPanes = [];\n            this.previousPane = null;\n            this.nextPane = null;\n            this.currentSeparator = null;\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        if (this.orientation === 'Horizontal') {\n            addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n        }\n        else {\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        }\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}