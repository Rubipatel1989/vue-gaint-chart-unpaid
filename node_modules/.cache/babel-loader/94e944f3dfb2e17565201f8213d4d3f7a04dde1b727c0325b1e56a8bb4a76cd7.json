{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-row\"\n};\nconst _hoisted_2 = {\n  class: \"task-name\"\n};\nconst _hoisted_3 = {\n  class: \"task-bar-container\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(_ctx.task.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n    class: \"task-bar\",\n    style: _normalizeStyle(_ctx.barStyle)\n  }, null, 4 /* STYLE */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","task","name","_hoisted_3","style","_normalizeStyle","barStyle"],"sources":["/var/www/vue/vue-gantt-chart/src/components/TaskRow.vue"],"sourcesContent":["<template>\n       <div class=\"task-row\">\n         <div class=\"task-name\">{{ task.name }}</div>\n         <div class=\"task-bar-container\">\n           <div\n             class=\"task-bar\"\n             :style=\"barStyle\"\n           ></div>\n         </div>\n       </div>\n     </template>\n     \n     <script>\n     export default {\n       name:''\n       props: {\n         task: Object,\n         dates: Array,\n       },\n       computed: {\n         barStyle() {\n           const totalDays = this.dates.length;\n           const startIndex = this.dates.findIndex(\n             (date) => date.toISOString().split(\"T\")[0] === this.task.start\n           );\n           const endIndex = this.dates.findIndex(\n             (date) => date.toISOString().split(\"T\")[0] === this.task.end\n           );\n           const width = ((endIndex - startIndex + 1) / totalDays) * 100;\n           const left = (startIndex / totalDays) * 100;\n           return {\n             width: `${width}%`,\n             left: `${left}%`,\n             backgroundColor: \"blue\",\n             height: \"20px\",\n             position: \"absolute\",\n           };\n         },\n       },\n     };\n     </script>\n     \n     <style>\n     .task-row {\n       display: flex;\n       align-items: center;\n       border-bottom: 1px solid #ccc;\n       position: relative;\n     }\n     .task-name {\n       width: 100px;\n       text-align: left;\n     }\n     .task-bar-container {\n       position: relative;\n       flex-grow: 1;\n       height: 20px;\n     }\n     .task-bar {\n       position: absolute;\n     }\n     </style>\n     "],"mappings":";;EACYA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAoB;;uBAFjCC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAA4C,OAA5CC,UAA4C,EAAAC,gBAAA,CAAlBC,IAAA,CAAAC,IAAI,CAACC,IAAI,kBACnCL,mBAAA,CAKM,OALNM,UAKM,GAJJN,mBAAA,CAGO;IAFLH,KAAK,EAAC,UAAU;IACfU,KAAK,EANnBC,eAAA,CAMqBL,IAAA,CAAAM,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}