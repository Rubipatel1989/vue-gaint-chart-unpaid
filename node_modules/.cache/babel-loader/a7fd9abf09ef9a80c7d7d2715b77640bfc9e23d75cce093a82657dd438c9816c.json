{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport * as CLS from '../base/classes';\nimport * as events from '../base/constant';\nimport { read, paste, Search, filter, Download, Delete, isFileSystemData } from '../common/operations';\nimport { getValue, setValue, isNullOrUndefined as isNOU, matches, select, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest, detach } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createDialog } from '../pop-up/dialog';\n/**\n * Utility function to compare two strings in a way similar to Windows Explorer.\n * Files and folders are sorted separately, with folders coming before files.\n *\n * @param {string} reference - The first string to compare. This could be a file or folder name.\n * @param {string} comparer - The second string to compare. This could be a file or folder name.\n * @returns {number} - A negative number if `reference` should come before `comparer`, a positive number if `comparer` should come before `reference`, and 0 if they are considered equal.\n */\nexport function sortComparer(reference, comparer) {\n  // Check if reference and comparer are files or folders\n  var referenceIsFile = /\\.\\S+/.test(reference);\n  var comparerIsFile = /\\.\\S+/.test(comparer);\n  // If one is a file and the other is a folder, the folder should come first\n  if (referenceIsFile && !comparerIsFile) {\n    return 1;\n  }\n  if (!referenceIsFile && comparerIsFile) {\n    return -1;\n  }\n  var referenceParts = [];\n  var comparerParts = [];\n  (reference + '').replace(/(\\d+)|(\\D+)/g, function (_, $1, $2) {\n    referenceParts.push([$1 || Infinity, $2 || '']);\n    return '';\n  });\n  (comparer + '').replace(/(\\d+)|(\\D+)/g, function (_, $1, $2) {\n    comparerParts.push([$1 || Infinity, $2 || '']);\n    return '';\n  });\n  // Compare each part of reference and comparer\n  while (referenceParts.length && comparerParts.length) {\n    var referencePart = referenceParts.shift();\n    var comparerPart = comparerParts.shift();\n    if (referencePart && comparerPart) {\n      var comparisonResult = referencePart[0] - comparerPart[0] || referencePart[1].localeCompare(comparerPart[1]);\n      if (comparisonResult) {\n        return comparisonResult;\n      }\n    }\n  }\n  return referenceParts.length - comparerParts.length;\n}\n/**\n * Utility file for common actions\n *\n * @param {HTMLLIElement} node - specifies the node.\n * @param {Object} data - specifies the data.\n * @param {IFileManager} instance - specifies the control instance.\n * @returns {void}\n * @private\n */\nexport function updatePath(node, data, instance) {\n  var text = getValue('name', data);\n  var id = node.getAttribute('data-id');\n  var newText = isNOU(id) ? text : id;\n  instance.setProperties({\n    path: getPath(node, newText, instance.hasId)\n  }, true);\n  instance.pathId = getPathId(node);\n  instance.pathNames = getPathNames(node, text);\n}\n/**\n * Functions for get path in FileManager\n *\n * @param {Element | Node} element - specifies the element.\n * @param {string} text - specifies the text.\n * @param {boolean} hasId - specifies the id.\n * @returns {string} returns the path.\n * @private\n */\nexport function getPath(element, text, hasId) {\n  var matched = getParents(element, text, false, hasId);\n  var path = '/';\n  var len = matched.length - 2;\n  for (var i = len; i >= 0; i--) {\n    path += matched[i] + '/';\n  }\n  return path;\n}\n/**\n * Functions for get path id in FileManager\n *\n * @param {Element} node - specifies the node element.\n * @returns {string[]} returns the path ids.\n * @private\n */\nexport function getPathId(node) {\n  var matched = getParents(node, node.getAttribute('data-uid'), true);\n  var ids = [];\n  for (var i = matched.length - 1; i >= 0; i--) {\n    ids.push(matched[i]);\n  }\n  return ids;\n}\n/**\n * Functions for get path names in FileManager\n *\n * @param {Element} element - specifies the node element.\n * @param {string} text - specifies the text.\n * @returns {string[]} returns the path names.\n * @private\n */\nexport function getPathNames(element, text) {\n  var matched = getParents(element, text, false);\n  var names = [];\n  for (var i = matched.length - 1; i >= 0; i--) {\n    names.push(matched[i]);\n  }\n  return names;\n}\n/**\n * Functions for get path id in FileManager\n *\n * @param {Element} element - specifies the node element.\n * @param {string} text - specifies the text.\n * @param {boolean} isId - specifies the id.\n * @param {boolean} hasId - checks the id exists.\n * @returns {string[]} returns parent element.\n * @private\n */\nexport function getParents(element, text, isId, hasId) {\n  var matched = [text];\n  var el = element.parentNode;\n  while (!isNOU(el)) {\n    if (matches(el, '.' + CLS.LIST_ITEM)) {\n      var parentText = isId ? el.getAttribute('data-uid') : hasId ? el.getAttribute('data-id') : select('.' + CLS.LIST_TEXT, el).textContent;\n      matched.push(parentText);\n    }\n    el = el.parentNode;\n    if (el.classList.contains(CLS.TREE_VIEW)) {\n      break;\n    }\n  }\n  return matched;\n}\n/**\n * Functions for generate path\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function generatePath(parent) {\n  var key = parent.hasId ? 'id' : 'name';\n  var newPath = '/';\n  var i = 1;\n  for (i; i < parent.pathId.length; i++) {\n    var data = getValue(parent.pathId[parseInt(i.toString(), 10)], parent.feParent);\n    newPath += getValue(key, data) + '/';\n  }\n  parent.setProperties({\n    path: newPath\n  }, true);\n}\n/**\n * Functions for remove active element\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function removeActive(parent) {\n  if (parent.isCut) {\n    removeBlur(parent);\n    parent.selectedNodes = [];\n    parent.actionRecords = [];\n    parent.enablePaste = false;\n    parent.notify(events.hidePaste, {});\n  }\n}\n/**\n * Selects active element in File Manager\n *\n * @param {string} action - specifies the action.\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {boolean} - returns active element.\n * @private\n */\nexport function activeElement(action, parent) {\n  parent.isSearchCut = false;\n  parent.actionRecords = [];\n  parent.activeElements = [];\n  parent.notify(events.cutCopyInit, {});\n  if (parent.activeElements.length === 0) {\n    return false;\n  }\n  removeBlur(parent);\n  var blurEle = parent.activeElements;\n  if (parent.activeModule !== 'navigationpane') {\n    parent.targetPath = parent.path;\n  } else {\n    parent.targetPath = getParentPath(parent.path);\n  }\n  var i = 0;\n  if (blurEle) {\n    getModule(parent, blurEle[0]);\n    if (action === 'cut') {\n      while (i < blurEle.length) {\n        addBlur(blurEle[i]);\n        i++;\n      }\n    }\n  }\n  i = 0;\n  parent.selectedNodes = [];\n  parent.enablePaste = true;\n  parent.notify(events.showPaste, {});\n  while (i < parent.activeRecords.length) {\n    parent.actionRecords.push(parent.activeRecords[i]);\n    parent.selectedNodes.push(getValue('name', parent.activeRecords[i]));\n    i++;\n  }\n  if ((parent.breadcrumbbarModule.searchObj.element.value !== '' || parent.isFiltered) && parent.activeModule !== 'navigationpane') {\n    parent.selectedNodes = [];\n    parent.isSearchCut = true;\n    var i_1 = 0;\n    while (i_1 < parent.selectedItems.length) {\n      parent.selectedNodes.push(parent.selectedItems[i_1]);\n      i_1++;\n    }\n  }\n  return true;\n}\n/**\n * Adds blur to the elements\n *\n * @param {Element} nodes - specifies the nodes.\n * @returns {void}\n * @private\n */\nexport function addBlur(nodes) {\n  nodes.classList.add(CLS.BLUR);\n}\n/**\n * Removes blur from elements\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} hover - specifies the hover string.\n * @returns {void}\n * @private\n */\nexport function removeBlur(parent, hover) {\n  var blurEle = !hover ? parent.element.querySelectorAll('.' + CLS.BLUR) : parent.element.querySelectorAll('.' + CLS.HOVER);\n  var i = 0;\n  while (i < blurEle.length) {\n    blurEle[i].classList.remove(!hover ? CLS.BLUR : CLS.HOVER);\n    i++;\n  }\n}\n/**\n * Gets module name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Element} element - specifies the element.\n * @returns {void}\n * @private\n */\nexport function getModule(parent, element) {\n  if (element) {\n    if (element.classList.contains(CLS.ROW)) {\n      parent.activeModule = 'detailsview';\n    } else if (closest(element, '.' + CLS.LARGE_ICON)) {\n      parent.activeModule = 'largeiconsview';\n    } else {\n      parent.activeModule = 'navigationpane';\n    }\n  }\n}\n/**\n * Get all child items\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string | number} parentId - specifies the parent ID.\n * @returns {Object[]} An array of child items\n * @private\n */\nexport function getAllChildItems(parent, parentId) {\n  var children = parent.fileSystemData.filter(function (item) {\n    return String(item.parentId) === String(parentId);\n  });\n  var allChildren = children.slice();\n  children.forEach(function (child) {\n    var childId = child.id;\n    allChildren = allChildren.concat(getAllChildItems(parent, childId));\n  });\n  return allChildren;\n}\n/**\n * Gets module name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} value - specifies the value.\n * @param {boolean} isLayoutChange - specifies the layout change.\n * @returns {void}\n * @private\n */\nexport function searchWordHandler(parent, value, isLayoutChange) {\n  var searchWord;\n  if (value.length === 0 && !parent.isFiltered) {\n    parent.notify(events.pathColumn, {\n      args: parent\n    });\n  }\n  if (isFileSystemData(parent)) {\n    if (value === '') {\n      parent.itemData = parent.fileSystemData;\n      read(parent, events.layoutChange, parent.path);\n    } else {\n      parent.searchSettings.filterType = isNOU(parent.searchSettings.filterType) ? 'contains' : parent.searchSettings.filterType;\n      var currData = getValue(parent.pathId[parent.pathId.length - 1], parent.feParent);\n      var parentId = getValue('id', currData);\n      var filteredData = getAllChildItems(parent, parentId);\n      var data = new DataManager(filteredData).executeLocal(new Query().where('name', parent.searchSettings.filterType, value, parent.searchSettings.ignoreCase));\n      var searchValue = parent.searchSettings.ignoreCase ? value.toLowerCase() : value;\n      parent.itemData = data;\n      Search(parent, isLayoutChange ? events.layoutChange : events.search, parent.path, searchValue, parent.showHiddenItems, !parent.searchSettings.ignoreCase);\n    }\n    return;\n  }\n  if (parent.searchSettings.filterType === 'startsWith') {\n    searchWord = value + '*';\n  } else if (parent.searchSettings.filterType === 'endsWith') {\n    searchWord = '*' + value;\n  } else {\n    searchWord = '*' + value + '*';\n  }\n  parent.searchWord = searchWord;\n  parent.itemData = [getPathObject(parent)];\n  if (value.length > 0) {\n    var caseSensitive = parent.searchSettings.ignoreCase;\n    var hiddenItems = parent.showHiddenItems;\n    Search(parent, isLayoutChange ? events.layoutChange : events.search, parent.path, searchWord, hiddenItems, !caseSensitive);\n  } else {\n    if (!parent.isFiltered) {\n      if (parent.isSortByClicked) {\n        parent.notify(events.layoutChange, {\n          files: parent.oldView === 'Details' ? parent.detailsviewModule.gridObj.dataSource : parent.largeiconsviewModule.allItems\n        });\n        parent.isSortByClicked = false;\n      } else {\n        read(parent, isLayoutChange ? events.layoutChange : events.search, parent.path);\n      }\n    } else {\n      filter(parent, events.layoutChange);\n    }\n  }\n}\n/**\n * Gets updated layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} view - specifies the view.\n * @returns {void}\n * @private\n */\nexport function updateLayout(parent, view) {\n  parent.oldView = parent.view;\n  parent.setProperties({\n    view: view\n  }, true);\n  if (parent.breadcrumbbarModule.searchObj.element.value !== '' || parent.isFiltered) {\n    parent.layoutSelectedItems = parent.selectedItems;\n  }\n  var searchWord = '';\n  if (parent.breadcrumbbarModule.searchObj.element.value) {\n    searchWord = parent.breadcrumbbarModule.searchObj.element.value;\n  }\n  parent.isLayoutChange = true;\n  searchWordHandler(parent, searchWord, true);\n}\n/* istanbul ignore next */\n/**\n * Gets updated layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Element} element - specifies the element.\n * @returns {void}\n * @private\n */\nexport function getTargetModule(parent, element) {\n  var tartgetModule = '';\n  if (element) {\n    if (closest(element, '.' + CLS.ROOT + '.' + CLS.CONTROL + ' .' + CLS.GRID_CONTENT)) {\n      tartgetModule = 'detailsview';\n    } else if (closest(element, '.' + CLS.LARGE_ICONS)) {\n      tartgetModule = 'largeiconsview';\n    } else if (element.classList.contains('e-fullrow') || element.classList.contains('e-icon-expandable')) {\n      tartgetModule = 'navigationpane';\n    } else if (closest(element, '.e-address-list-item')) {\n      tartgetModule = 'breadcrumbbar';\n    } else {\n      tartgetModule = '';\n    }\n  }\n  parent.targetModule = tartgetModule;\n}\n/* istanbul ignore next */\n/**\n * refresh the layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function refresh(parent) {\n  parent.itemData = [getPathObject(parent)];\n  if (!hasReadAccess(parent.itemData[0])) {\n    createDeniedDialog(parent, parent.itemData[0], events.permissionRead);\n  } else {\n    read(parent, events.refreshEnd, parent.path);\n  }\n}\n/**\n * open action in the layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function openAction(parent) {\n  read(parent, events.openEnd, parent.path);\n}\n/**\n * open action in the layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {Object} - returns the path data.\n * @private\n */\nexport function getPathObject(parent) {\n  return getValue(parent.pathId[parent.pathId.length - 1], parent.feParent);\n}\n/**\n * Copy files\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function copyFiles(parent) {\n  if (!activeElement('copy', parent)) {\n    return;\n  } else {\n    parent.fileAction = 'copy';\n  }\n}\n/**\n * Cut files\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function cutFiles(parent) {\n  if (!activeElement('cut', parent)) {\n    return;\n  } else {\n    parent.isCut = true;\n    parent.fileAction = 'move';\n  }\n}\n/**\n * To add class for fileType\n *\n * @param {Object} file - specifies the file.\n * @returns {string} - returns the file type.\n * @private\n */\nexport function fileType(file) {\n  var isFile = getValue('isFile', file);\n  if (!isFile) {\n    return CLS.FOLDER;\n  }\n  var imageFormat = ['bmp', 'dib', 'jpg', 'jpeg', 'jpe', 'jfif', 'gif', 'tif', 'tiff', 'png', 'ico'];\n  var audioFormat = ['mp3', 'wav', 'aac', 'ogg', 'wma', 'aif', 'fla', 'm4a'];\n  var videoFormat = ['webm', 'mkv', 'flv', 'vob', 'ogv', 'ogg', 'avi', 'wmv', 'mp4', '3gp'];\n  var knownFormat = ['css', 'exe', 'html', 'js', 'msi', 'pdf', 'pptx', 'ppt', 'rar', 'zip', 'txt', 'docx', 'doc', 'xlsx', 'xls', 'xml', 'rtf', 'php'];\n  var filetype = getValue('type', file);\n  filetype = filetype.toLowerCase();\n  if (filetype.indexOf('.') !== -1) {\n    filetype = filetype.split('.').join('');\n  }\n  var iconType;\n  if (imageFormat.indexOf(filetype) !== -1) {\n    iconType = CLS.ICON_IMAGE;\n  } else if (audioFormat.indexOf(filetype) !== -1) {\n    iconType = CLS.ICON_MUSIC;\n  } else if (videoFormat.indexOf(filetype) !== -1) {\n    iconType = CLS.ICON_VIDEO;\n  } else if (knownFormat.indexOf(filetype) !== -1) {\n    iconType = 'e-fe-' + filetype;\n  } else {\n    iconType = 'e-fe-unknown e-fe-' + filetype;\n  }\n  return iconType;\n}\n/* istanbul ignore next */\n/**\n * To get the image URL\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} item - specifies the item.\n * @returns {string} - returns the image url.\n * @private\n */\nexport function getImageUrl(parent, item) {\n  var imgUrl = isFileSystemData(parent) ? getValue('imageUrl', item) : '';\n  if (isFileSystemData(parent)) {\n    var eventArgs_1 = {\n      fileDetails: [item],\n      imageUrl: imgUrl\n    };\n    parent.trigger('beforeImageLoad', eventArgs_1);\n    return eventArgs_1.imageUrl;\n  }\n  var baseUrl = parent.ajaxSettings.getImageUrl ? parent.ajaxSettings.getImageUrl : parent.ajaxSettings.url;\n  var pathUrl = baseUrl.indexOf('?') !== -1 ? '&path=' : '?path=';\n  var fileName = encodeURIComponent(getValue('name', item));\n  var fPath = getValue('filterPath', item);\n  if (parent.hasId) {\n    var imgId = getValue('id', item);\n    imgUrl = baseUrl + pathUrl + parent.path + '&id=' + imgId;\n  } else if (!isNOU(fPath)) {\n    imgUrl = baseUrl + pathUrl + encodeURIComponent(fPath.replace(/\\\\/g, '/')) + fileName;\n  } else {\n    imgUrl = baseUrl + pathUrl + parent.path + fileName;\n  }\n  imgUrl = imgUrl + '&time=' + new Date().getTime().toString();\n  var eventArgs = {\n    fileDetails: [item],\n    imageUrl: imgUrl\n  };\n  parent.trigger('beforeImageLoad', eventArgs);\n  return eventArgs.imageUrl;\n}\n/* istanbul ignore next */\n/**\n * Gets the full path\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {string} path - specifies the path.\n * @returns {string} - returns the image url.\n * @private\n */\nexport function getFullPath(parent, data, path) {\n  var filePath = getValue(parent.hasId ? 'id' : 'name', data) + '/';\n  var fPath = getValue(parent.hasId ? 'filterId' : 'filterPath', data);\n  if (!isNOU(fPath)) {\n    return fPath.replace(/\\\\/g, '/') + filePath;\n  } else {\n    return path + filePath;\n  }\n}\n/**\n * Gets the name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @returns {string} - returns the name.\n * @private\n */\nexport function getName(parent, data) {\n  var name = getValue('name', data);\n  var fPath = getValue('filterPath', data);\n  if ((parent.breadcrumbbarModule.searchObj.element.value !== '' || parent.isFiltered) && !isNOU(fPath)) {\n    fPath = fPath.replace(/\\\\/g, '/');\n    name = fPath.replace(parent.path, '') + name;\n  }\n  return name;\n}\n/**\n * Gets the name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object[]} items - specifies the item elements.\n * @returns {Object[]} - returns the sorted data.\n * @private\n */\nexport function getSortedData(parent, items) {\n  if (items.length === 0) {\n    return items;\n  }\n  var query;\n  if (parent.sortOrder !== 'None' && !isNullOrUndefined(parent.sortOrder)) {\n    query = new Query().sortBy(parent.sortBy, parent.sortOrder.toLowerCase(), true).group('isFile');\n  } else {\n    query = new Query().group('isFile');\n  }\n  var lists = new DataManager(items).executeLocal(query);\n  return getValue('records', lists);\n}\n/**\n * Gets the data object\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} key - specifies the key.\n * @param {string} value - specifies the value.\n * @returns {Object} - returns the sorted data.\n * @private\n */\nexport function getObject(parent, key, value) {\n  var currFiles = getValue(parent.pathId[parent.pathId.length - 1], parent.feFiles);\n  var result = currFiles.filter(function (data) {\n    return data[key].toString() === value;\n  });\n  return result.length > 0 ? result[0] : null;\n}\n/**\n * Creates empty element\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {HTMLElement} element - specifies the element.\n * @param {ReadArgs | SearchArgs} args - specifies the args.\n * @returns {void}\n * @private\n */\nexport function createEmptyElement(parent, element, args) {\n  var top;\n  var layoutElement = select('#' + parent.element.id + CLS.LAYOUT_ID, parent.element);\n  var addressBarHeight = select('#' + parent.element.id + CLS.BREADCRUMBBAR_ID, layoutElement).offsetHeight;\n  top = layoutElement.offsetHeight - addressBarHeight;\n  if (parent.view === 'Details') {\n    top = top - select('.' + CLS.GRID_HEADER, layoutElement).offsetHeight;\n  }\n  if (isNOU(element.querySelector('.' + CLS.EMPTY))) {\n    var emptyDiv = createElement('div', {\n      className: CLS.EMPTY\n    });\n    var emptyFolder = createElement('div', {\n      className: CLS.LARGE_EMPTY_FOLDER\n    });\n    var emptyEle = createElement('div', {\n      className: CLS.EMPTY_CONTENT\n    });\n    var dragFile = createElement('div', {\n      className: CLS.EMPTY_INNER_CONTENT\n    });\n    if (parent.view === 'Details') {\n      element.querySelector('.' + CLS.GRID_VIEW).appendChild(emptyDiv);\n    } else {\n      element.appendChild(emptyDiv);\n    }\n    emptyDiv.appendChild(emptyFolder);\n    emptyDiv.appendChild(emptyEle);\n    emptyDiv.appendChild(dragFile);\n  }\n  if (element.querySelector('.' + CLS.EMPTY)) {\n    if (!isNOU(args.error)) {\n      element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Access-Denied');\n      element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'Access-Details');\n    } else if (parent.isFiltered) {\n      element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Filter-Empty');\n      element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'Filter-Key');\n    } else if (parent.breadcrumbbarModule.searchObj.element.value !== '') {\n      element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Search-Empty');\n      element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'Search-Key');\n    } else {\n      element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Folder-Empty');\n      element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'File-Upload');\n    }\n  }\n  var eDiv = select('.' + CLS.EMPTY, element);\n  top = (top - eDiv.offsetHeight) / 2;\n  eDiv.style.marginTop = top + 'px';\n}\n/**\n * Gets the directories\n *\n * @param {Object[]} files - specifies the file object.\n * @returns {Object[]} - returns the sorted data.\n * @private\n */\nexport function getDirectories(files) {\n  return new DataManager(files).executeLocal(new Query().where(events.isFile, 'equal', false, false));\n}\n/**\n * set the Node ID\n *\n * @param {ReadArgs} result - specifies the result.\n * @param {string} rootId - specifies the rootId.\n * @returns {void}\n * @private\n */\nexport function setNodeId(result, rootId) {\n  var dirs = getDirectories(result.files);\n  for (var i = 0, len = dirs.length; i < len; i++) {\n    setValue('_fm_id', rootId + '_' + i, dirs[i]);\n  }\n}\n/**\n * set the date object\n *\n * @param {Object[]} args - specifies the file object.\n * @param {Internationalization} localeString - The internationalization object for formatting dates.\n * @param {string} dateFormat - The date format string.\n * @returns {void}\n * @private\n */\nexport function setDateObject(args, localeString, dateFormat) {\n  for (var i = 0; i < args.length; i++) {\n    var createdDate = new Date(getValue('dateCreated', args[i]));\n    var modifiedDate = new Date(getValue('dateModified', args[i]));\n    if (isNOU(dateFormat)) {\n      dateFormat = 'MM/dd/yyyy';\n    }\n    setValue('_fm_created', localeString.formatDate(createdDate, {\n      format: dateFormat\n    }), args[i]);\n    setValue('_fm_modified', localeString.formatDate(modifiedDate, {\n      format: dateFormat\n    }), args[i]);\n  }\n}\n/**\n * get the locale text\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} text - specifies the text.\n * @returns {string} - returns the locale text.\n * @private\n */\nexport function getLocaleText(parent, text) {\n  var locale = parent.localeObj.getConstant(text);\n  return locale === '' ? text : locale;\n}\n/**\n * get the CSS class\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} css - specifies the css.\n * @returns {string} - returns the css classes.\n * @private\n */\nexport function getCssClass(parent, css) {\n  var cssClass = parent.cssClass;\n  cssClass = isNOU(cssClass) || cssClass === '' ? css : cssClass + ' ' + css;\n  return cssClass;\n}\n/**\n * sort on click\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {MenuEventArgs} args - specifies the menu event arguements.\n * @returns {void}\n * @private\n */\nexport function sortbyClickHandler(parent, args) {\n  var tick;\n  parent.isSortByClicked = true;\n  if (args.item.id.indexOf('ascending') !== -1 || args.item.id.indexOf('descending') !== -1 || args.item.id.indexOf('none') !== -1) {\n    tick = true;\n  } else {\n    tick = false;\n  }\n  if (!tick) {\n    parent.sortBy = getSortField(args.item.id, parent);\n  } else {\n    parent.sortOrder = getSortField(args.item.id);\n  }\n  parent.itemData = [getPathObject(parent)];\n  if (parent.view === 'Details') {\n    if (parent.isMobile) {\n      updateLayout(parent, 'Details');\n    } else {\n      parent.notify(events.sortColumn, {\n        module: 'detailsview'\n      });\n      parent.isSortByClicked = false;\n    }\n  }\n  if (parent.view === 'LargeIcons') {\n    updateLayout(parent, 'LargeIcons');\n  }\n  parent.notify(events.sortByChange, {});\n}\n/**\n * Gets the sorted fields\n *\n * @param {string} id - specifies the id.\n * @param {IFileManager} [parent] - optional parameter representing the parent IFileManager.\n * @returns {string} - returns the sorted fields\n * @private\n */\nexport function getSortField(id, parent) {\n  var text = id.substring(id.lastIndexOf('_') + 1);\n  var field = text;\n  var column;\n  if (parent) {\n    column = parent.detailsViewSettings.columns;\n  }\n  switch (text) {\n    case 'date':\n      for (var i = 0, len = column.length; i < len; i++) {\n        if (column[i].field === 'dateModified' || column[i].field === 'dateCreated') {\n          field = column[i].field;\n          break;\n        } else {\n          field = '_fm_modified';\n        }\n      }\n      break;\n    case 'ascending':\n      field = 'Ascending';\n      break;\n    case 'descending':\n      field = 'Descending';\n      break;\n    case 'none':\n      field = 'None';\n      break;\n  }\n  return field;\n}\n/**\n * Sets the next path\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nexport function setNextPath(parent, path) {\n  var currfolders = path.split('/');\n  var folders = parent.originalPath.split('/');\n  var root = getValue(parent.pathId[0], parent.feParent);\n  var key = isNOU(getValue('id', root)) ? 'name' : 'id';\n  for (var i = currfolders.length - 1, len = folders.length - 1; i < len; i++) {\n    var eventName = folders[i + 1] === '' ? events.finalizeEnd : events.initialEnd;\n    var newPath = folders[i] === '' ? '/' : parent.path + folders[i] + '/';\n    var data = getObject(parent, key, folders[parseInt(i.toString(), 10)]);\n    if (!isNullOrUndefined(data)) {\n      var id = getValue('_fm_id', data);\n      parent.setProperties({\n        path: newPath\n      }, true);\n      parent.pathId.push(id);\n      parent.itemData = [data];\n      parent.pathNames.push(getValue('name', data));\n    } else {\n      parent.originalPath = newPath;\n    }\n    read(parent, eventName, parent.path);\n    break;\n  }\n}\n/**\n * Opens the searched folder\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data\n * @returns {void}\n * @private\n */\nexport function openSearchFolder(parent, data) {\n  parent.originalPath = getFullPath(parent, data, parent.path);\n  var root = getValue(parent.pathId[0], parent.feParent);\n  var navData = parent.feParent[getValue('_fm_id', parent.itemData[0])];\n  var isRoot = isNullOrUndefined(navData) || getValue('_fm_id', navData) === 'fe_tree';\n  var key = isNOU(getValue('id', root)) ? 'name' : 'id';\n  var searchData = getObject(parent, key, isFileSystemData(parent) ? getValue('id', data) : getValue('name', data));\n  if (isNullOrUndefined(searchData)) {\n    if (!isRoot) {\n      parent.notify(events.clearPathInit, {\n        selectedNode: parent.pathId[parent.pathId.length - 1]\n      });\n    } else {\n      setNextPath(parent, parent.path);\n      return;\n    }\n  } else {\n    var id = getValue('_fm_id', searchData);\n    parent.setProperties({\n      path: parent.originalPath\n    }, true);\n    parent.pathId.push(id);\n    parent.itemData = [searchData];\n    parent.pathNames.push(getValue('name', searchData));\n  }\n  read(parent, parent.path !== parent.originalPath ? events.initialEnd : events.finalizeEnd, parent.path);\n}\n/**\n * Paste handling function\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function pasteHandler(parent) {\n  parent.isDragDrop = false;\n  if (parent.selectedNodes.length !== 0 && parent.enablePaste) {\n    var path = parent.folderPath === '' ? parent.path : parent.folderPath;\n    if (parent.activeModule === 'navigationpane' && !parent.selectedNodes[0].includes('/')) {\n      parent.targetPath = getValue('filterPath', parent.actionRecords[0]).replace(/\\\\/g, '/');\n    }\n    var subFolder = validateSubFolder(parent, parent.actionRecords, path, parent.path);\n    if (!subFolder) {\n      if (parent.fileAction === 'move' && parent.targetPath !== path || parent.fileAction === 'copy') {\n        parent.notify(events.pasteInit, {});\n        paste(parent, parent.targetPath, parent.selectedNodes, path, parent.fileAction, [], parent.actionRecords);\n      } else {\n        parent.enablePaste = false;\n        parent.notify(events.hidePaste, {});\n        removeBlur(parent);\n        var result = {\n          files: null,\n          error: {\n            code: '402',\n            message: getLocaleText(parent, 'Same-Folder-Error'),\n            fileExists: null\n          }\n        };\n        createDialog(parent, 'Error', result);\n      }\n    }\n  }\n}\n/**\n * Validates the sub folders\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {'{ [key: string]: Object; }[]'} data - specifies the data.\n * @param {string} dropPath - specifies the drop path.\n * @param {string} dragPath - specifies the drag path.\n * @returns {boolean} - returns the validated sub folder.\n * @private\n */\nexport function validateSubFolder(parent, data, dropPath, dragPath) {\n  var subFolder = false;\n  for (var i = 0; i < data.length; i++) {\n    if (!getValue('isFile', data[i])) {\n      var tempTarget = getFullPath(parent, data[i], dragPath);\n      if (dropPath.indexOf(tempTarget) === 0) {\n        var result = {\n          files: null,\n          error: {\n            code: '402',\n            message: getLocaleText(parent, 'Sub-Folder-Error'),\n            fileExists: null\n          }\n        };\n        createDialog(parent, 'Error', result);\n        subFolder = true;\n        break;\n      }\n    } else {\n      var name_1 = parent.dragData[i] ? parent.dragData[i].name : null;\n      var srcData = isFileSystemData(parent) ? name_1 : parent.dragNodes[i];\n      var len = 0;\n      if (srcData) {\n        len = srcData.lastIndexOf('/');\n      }\n      var path = '';\n      if (len > 0) {\n        path = dragPath + srcData.substring(0, len + 1);\n      }\n      if (path === dropPath) {\n        var result = {\n          files: null,\n          error: {\n            code: '402',\n            message: getLocaleText(parent, 'Same-Folder-Error'),\n            fileExists: null\n          }\n        };\n        createDialog(parent, 'Error', result);\n        subFolder = true;\n        break;\n      }\n    }\n  }\n  return subFolder;\n}\n/**\n * Validates the drop handler\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function dropHandler(parent) {\n  parent.isDragDrop = true;\n  if (parent.dragData.length !== 0) {\n    parent.dragPath = parent.dragPath.replace(/\\\\/g, '/');\n    parent.dropPath = parent.dropPath.replace(/\\\\/g, '/');\n    var subFolder = validateSubFolder(parent, parent.dragData, parent.dropPath, parent.dragPath);\n    if (!subFolder && parent.dragPath !== parent.dropPath) {\n      parent.itemData = [parent.dropData];\n      paste(parent, parent.dragPath, parent.dragNodes, parent.dropPath, 'move', [], parent.dragData);\n      parent.notify(events.pasteInit, {});\n    }\n  }\n}\n/**\n * Gets the parent path\n *\n * @param {string} oldPath - specifies the old path.\n * @returns {string} - returns the parent path.\n * @private\n */\nexport function getParentPath(oldPath) {\n  var path = oldPath.split('/');\n  var newPath = path[0] + '/';\n  for (var i = 1; i < path.length - 2; i++) {\n    newPath += path[i] + '/';\n  }\n  return newPath;\n}\n/**\n * Gets the directory path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {ReadArgs} args - returns the read arguements.\n * @returns {string} - returns the directory path\n * @private\n */\nexport function getDirectoryPath(parent, args) {\n  var filePath = getValue(parent.hasId ? 'id' : 'name', args.cwd) + '/';\n  var fPath = getValue(parent.hasId && !isNullOrUndefined(parent.ajaxSettings.url) ? 'filterId' : 'filterPath', args.cwd);\n  if (!isNOU(fPath)) {\n    if (fPath === '') {\n      return parent.hasId && !isNullOrUndefined(parent.ajaxSettings.url) ? filePath : '/';\n    }\n    return fPath.replace(/\\\\/g, '/') + filePath;\n  } else {\n    return isFileSystemData(parent) ? filePath : parent.path + filePath;\n  }\n}\n/**\n * Gets the do paste path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} operation - specifies the operations.\n * @param {ReadArgs} result - returns the result.\n * @returns {void}\n * @private\n */\nexport function doPasteUpdate(parent, operation, result) {\n  if (operation === 'move') {\n    if (!parent.isDragDrop) {\n      parent.enablePaste = false;\n      parent.notify(events.hidePaste, {});\n      parent.notify(events.cutEnd, result);\n    } else {\n      parent.notify(events.dragEnd, result);\n    }\n  }\n  if (parent.duplicateItems.length === 0) {\n    parent.pasteNodes = [];\n  }\n  var flag = false;\n  for (var count = 0; count < result.files.length && !flag; count++) {\n    parent.pasteNodes.push(result.files[count][parent.hasId ? 'id' : 'name']);\n    if (parent.isDragDrop) {\n      parent.droppedObjects.push(result.files[count]);\n    }\n  }\n  parent.duplicateItems = [];\n  parent.duplicateRecords = [];\n  if (parent.isDragDrop && !parent.isPasteError) {\n    parent.isDropEnd = true;\n  } else {\n    parent.isDropEnd = false;\n  }\n  parent.trigger('success', {\n    action: operation,\n    result: result\n  });\n  if (!parent.isDragDrop || parent.path === parent.dragPath || parent.path === parent.dropPath || parent.isSearchDrag) {\n    parent.isPathDrag = false;\n    read(parent, events.pasteEnd, parent.path);\n  } else {\n    readDropPath(parent);\n  }\n}\n/**\n * Reads the drop path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function readDropPath(parent) {\n  var pathId = getValue('_fm_id', parent.dropData);\n  parent.expandedId = pathId;\n  parent.itemData = [parent.dropData];\n  if (parent.isPathDrag) {\n    parent.notify(events.pathDrag, parent.itemData);\n  } else {\n    if (parent.navigationpaneModule) {\n      var node = select('[data-uid=\"' + pathId + '\"]', parent.navigationpaneModule.treeObj.element);\n      if (!node) {\n        var liElement = document.querySelector('[data-id = \"' + getValue('id', parent.dropData) + '\"]');\n        pathId = liElement.getAttribute('data-uid');\n        node = select('[data-uid=\"' + pathId + '\"]', parent.navigationpaneModule.treeObj.element);\n      }\n      updatePath(node, parent.dropData, parent);\n    }\n    read(parent, events.dropPath, parent.dropPath);\n  }\n}\n/**\n * Gets the duplicated path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} name - specifies the name.\n * @returns {object} - returns the duplicated path.\n * @private\n */\nexport function getDuplicateData(parent, name) {\n  var data = null;\n  var records = parent.isDragDrop ? parent.dragData : parent.actionRecords;\n  for (var i = 0; i < records.length; i++) {\n    if (getValue('name', records[i]) === name) {\n      data = records[i];\n      break;\n    }\n  }\n  return data;\n}\n/**\n * Gets the create the virtual drag element\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function createVirtualDragElement(parent) {\n  parent.isSearchDrag = false;\n  if (parent.breadcrumbbarModule.searchObj.element.value !== '') {\n    parent.isSearchDrag = true;\n  }\n  if (parent.activeModule !== 'navigationpane') {\n    parent.dragNodes = [];\n    var i = 0;\n    while (i < parent.selectedItems.length) {\n      parent.dragNodes.push(parent.selectedItems[i]);\n      i++;\n    }\n    if (parent.selectedItems.length === 0 && parent.dragData && parent.dragData.length === 1) {\n      parent.dragNodes.push(getItemName(parent, parent.dragData[0]));\n    }\n  }\n  var cloneIcon = parent.createElement('div', {\n    className: 'e-fe-icon ' + fileType(parent.dragData[0])\n  });\n  var cloneName = parent.createElement('div', {\n    className: 'e-fe-name',\n    innerHTML: parent.dragData[0].name\n  });\n  var virtualEle = parent.createElement('div', {\n    className: 'e-fe-content'\n  });\n  virtualEle.appendChild(cloneIcon);\n  virtualEle.appendChild(cloneName);\n  var ele = parent.createElement('div', {\n    className: CLS.CLONE\n  });\n  ele.appendChild(virtualEle);\n  if (parent.dragNodes.length > 1) {\n    var badge = parent.createElement('span', {\n      className: 'e-fe-count',\n      innerHTML: parent.dragNodes.length.toString(10)\n    });\n    ele.appendChild(badge);\n  }\n  parent.virtualDragElement = ele;\n  parent.element.appendChild(parent.virtualDragElement);\n}\n/**\n * Drops the stop handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {DragEventArgs} args - specifies the drag event arguements.\n * @returns {void}\n * @private\n */\nexport function dragStopHandler(parent, args) {\n  var dragArgs = args;\n  dragArgs.cancel = false;\n  if (parent.treeExpandTimer != null) {\n    window.clearTimeout(parent.treeExpandTimer);\n    parent.treeExpandTimer = null;\n  }\n  removeDropTarget(parent);\n  parent.element.classList.remove('e-fe-drop', 'e-no-drop');\n  removeBlur(parent);\n  parent.uploadObj.dropArea = select('#' + parent.element.id + CLS.CONTENT_ID, parent.element);\n  var virtualEle = select('.' + CLS.CLONE, parent.element);\n  if (virtualEle) {\n    detach(virtualEle);\n  }\n  getTargetModule(parent, args.target);\n  parent.notify(events.dropInit, args);\n  removeBlur(parent, 'hover');\n  dragArgs.fileDetails = parent.dragData;\n  parent.trigger('fileDragStop', dragArgs, function (dragArgs) {\n    if (!dragArgs.cancel && !isNOU(parent.targetModule) && parent.targetModule !== '' && parent.dragCount > 2) {\n      dropHandler(parent);\n    }\n    parent.dragCount = 0;\n  });\n}\n/**\n * Drag the start handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {'DragEventArgs'} args - specifies the drag event arguements.\n * @param {Draggable} dragObj - specifies the drag event arguements.\n * @returns {void}\n * @private\n */\nexport function dragStartHandler(parent, args, dragObj) {\n  var dragArgs = args;\n  dragArgs.cancel = false;\n  dragArgs.fileDetails = parent.dragData;\n  parent.dragCount = 0;\n  parent.droppedObjects = [];\n  if (!parent.allowDragAndDrop || parent.activeModule === 'navigationpane' && closest(args.element, 'li').getAttribute('data-uid') === parent.pathId[0]) {\n    dragArgs.cancel = true;\n  }\n  if (parent.activeModule === 'navigationpane' && parent.pathId.indexOf(closest(args.element, 'li').getAttribute('data-uid')) !== -1) {\n    parent.isPathDrag = true;\n  } else {\n    parent.isPathDrag = false;\n  }\n  removeBlur(parent);\n  if (dragArgs.cancel) {\n    dragObj.intDestroy(args.event);\n    dragCancel(parent);\n  } else if (!dragArgs.cancel) {\n    var i = 0;\n    while (i < parent.activeElements.length) {\n      addBlur(parent.activeElements[i]);\n      i++;\n    }\n    parent.trigger('fileDragStart', dragArgs, function (dragArgs) {\n      if (dragArgs.cancel) {\n        dragObj.intDestroy(args.event);\n        dragCancel(parent);\n      } else {\n        parent.uploadObj.dropArea = null;\n      }\n    });\n  }\n}\n/**\n * Drag the cancel handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function dragCancel(parent) {\n  removeBlur(parent);\n  var virtualEle = select('.' + CLS.CLONE, parent.element);\n  if (virtualEle) {\n    detach(virtualEle);\n  }\n}\n/**\n * Remove drop target handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function removeDropTarget(parent) {\n  removeItemClass(parent, CLS.DROP_FOLDER);\n  removeItemClass(parent, CLS.DROP_FILE);\n}\n/**\n * Remove item class handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} value - specifies the value.\n * @returns {void}\n * @private\n */\nexport function removeItemClass(parent, value) {\n  var ele = parent.element.querySelectorAll('.' + value);\n  for (var i = 0; i < ele.length; i++) {\n    ele[i].classList.remove(value);\n  }\n}\n/**\n * Remove item class handler\n *\n * @param {Element} scrollParent - specifies the scrolling target.\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} nodeClass - specifies the node class.\n * @param {number} clientY - specifies the vertical (Y) coordinate of the mouse cursor position relative to the target element.\n * @returns {void}\n * @private\n */\nexport function scrollHandler(scrollParent, parent, nodeClass, clientY) {\n  var position;\n  var elementData = scrollParent.getBoundingClientRect();\n  var node = select('.' + nodeClass, scrollParent);\n  if (clientY >= elementData.top + scrollParent.clientHeight - 30 && !isNullOrUndefined(node)) {\n    position = parent.targetModule === 'navigationpane' || parent.targetModule === 'detailsview' ? node.offsetHeight / 2.5 : node.offsetHeight / 4.5;\n    scrollParent.scrollBy(0, position);\n  }\n  if (!isNullOrUndefined(node) && clientY <= elementData.top + 30) {\n    position = parent.targetModule === 'navigationpane' || parent.targetModule === 'detailsview' ? node.offsetHeight / 2.5 : node.offsetHeight / 4.5;\n    scrollParent.scrollBy(0, -position);\n  }\n}\n/**\n * Dragging handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {DragEventArgs} args - specifies the arguements.\n * @returns {void}\n * @private\n */\nexport function draggingHandler(parent, args) {\n  var dragArgs = args;\n  dragArgs.fileDetails = parent.dragData;\n  var canDrop = false;\n  getTargetModule(parent, args.target);\n  removeDropTarget(parent);\n  if (parent.treeExpandTimer != null) {\n    window.clearTimeout(parent.treeExpandTimer);\n    parent.treeExpandTimer = null;\n  }\n  removeBlur(parent, 'hover');\n  var node = null;\n  var scrollParent;\n  if (parent.targetModule === 'navigationpane') {\n    node = closest(args.target, 'li');\n    node.classList.add(CLS.HOVER, CLS.DROP_FOLDER);\n    canDrop = true;\n    /* istanbul ignore next */\n    parent.treeExpandTimer = window.setTimeout(function () {\n      parent.notify(events.dragging, args);\n    }, 800);\n    scrollParent = parent.navigationpaneModule.treeObj.element.parentElement;\n    scrollHandler(scrollParent, parent, 'e-level-2', args.event.y);\n  } else if (parent.targetModule === 'detailsview') {\n    node = closest(args.target, 'tr');\n    if (node && node.querySelector('.' + CLS.FOLDER) && !node.classList.contains(CLS.BLUR)) {\n      node.classList.add(CLS.DROP_FOLDER);\n    } else if (node && !node.querySelector('.' + CLS.FOLDER) && !node.classList.contains(CLS.BLUR)) {\n      node.classList.add(CLS.DROP_FILE);\n    }\n    canDrop = true;\n    scrollParent = parent.detailsviewModule.gridObj.element.querySelector('.e-content');\n    scrollHandler(scrollParent, parent, 'e-row', args.event.y);\n  } else if (parent.targetModule === 'largeiconsview') {\n    node = closest(args.target, 'li');\n    if (node && node.querySelector('.' + CLS.FOLDER) && !node.classList.contains(CLS.BLUR)) {\n      node.classList.add(CLS.HOVER, CLS.DROP_FOLDER);\n    }\n    canDrop = true;\n    scrollParent = parent.largeiconsviewModule.element.firstElementChild;\n    scrollHandler(scrollParent, parent, 'e-large-icon', args.event.y);\n    /* istanbul ignore next */\n  } else if (parent.targetModule === 'breadcrumbbar') {\n    canDrop = true;\n  }\n  parent.element.classList.remove('e-fe-drop', 'e-no-drop');\n  parent.element.classList.add(canDrop ? 'e-fe-drop' : 'e-no-drop');\n  parent.dragCount = parent.dragCount + 1;\n  parent.trigger('fileDragging', dragArgs);\n}\n/**\n * Object to string handler\n *\n * @param {Object} data - specifies the data.\n * @returns {string} returns string converted from Object.\n * @private\n */\n// Ignored the message key value in permission object\nexport function objectToString(data) {\n  var str = '';\n  var keys = Object.keys(data);\n  for (var i = 0; i < keys.length; i++) {\n    if (keys[i] !== 'message') {\n      str += (i === 0 ? '' : ', ') + keys[i] + ': ' + getValue(keys[i], data);\n    }\n  }\n  return str;\n}\n/**\n * Get item name handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object} data - specifies the data.\n * @returns {string} returns the item name.\n * @private\n */\nexport function getItemName(parent, data) {\n  if (parent.hasId) {\n    return getValue('id', data);\n  }\n  return getName(parent, data);\n}\n/**\n * Get item name handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object} data - specifies the data.\n * @returns {void}\n * @private\n */\nexport function updateRenamingData(parent, data) {\n  parent.itemData = [data];\n  parent.currentItemText = getValue('name', data);\n  parent.isFile = getValue('isFile', data);\n  parent.filterPath = getValue('filterPath', data);\n}\n/**\n * Get item name handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function doRename(parent) {\n  if (!hasEditAccess(parent.itemData[0])) {\n    createDeniedDialog(parent, parent.itemData[0], events.permissionEdit);\n  } else {\n    createDialog(parent, 'Rename');\n  }\n}\n/* istanbul ignore next */\n/**\n * Download handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function doDownload(parent) {\n  var items = parent.itemData;\n  for (var i = 0; i < items.length; i++) {\n    if (!hasDownloadAccess(items[i])) {\n      createDeniedDialog(parent, items[i], events.permissionDownload);\n      return;\n    }\n  }\n  if (parent.selectedItems.length > 0) {\n    Download(parent, parent.path, parent.selectedItems);\n  }\n}\n/**\n * Delete Files handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object[]} data - specifies the data.\n * @param {string[]} newIds - specifies the new Ids.\n * @returns {void}\n * @private\n */\nexport function doDeleteFiles(parent, data, newIds) {\n  for (var i = 0; i < data.length; i++) {\n    if (!hasEditAccess(data[i])) {\n      createDeniedDialog(parent, data[i], events.permissionEdit);\n      return;\n    }\n  }\n  parent.itemData = data;\n  Delete(parent, newIds, parent.path, 'delete');\n}\n/* istanbul ignore next */\n/**\n * Download files handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object[]} data - specifies the data.\n * @param {string[]} newIds - specifies the new Ids.\n * @returns {void}\n * @private\n */\nexport function doDownloadFiles(parent, data, newIds) {\n  for (var i = 0; i < data.length; i++) {\n    if (!hasDownloadAccess(data[i])) {\n      createDeniedDialog(parent, data[i], events.permissionDownload);\n      return;\n    }\n  }\n  parent.itemData = data;\n  if (newIds.length > 0) {\n    Download(parent, parent.path, newIds);\n  }\n}\n/**\n * Download files handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object} data - specifies the data.\n * @param {string} action - specifies the actions.\n * @returns {void}\n * @private\n */\nexport function createDeniedDialog(parent, data, action) {\n  var message = getValue('message', getValue('permission', data));\n  if (message === '') {\n    message = getLocaleText(parent, 'Access-Message').replace('{0}', getValue('name', data)).replace('{1}', action);\n  }\n  var response = {\n    error: {\n      code: '401',\n      fileExists: null,\n      message: message\n    }\n  };\n  createDialog(parent, 'Error', response);\n}\n/**\n * Get Access Classes\n *\n * @param {Object} data - specifies the data.\n * @returns {string} - returns accesses classes.\n * @private\n */\nexport function getAccessClass(data) {\n  return !hasReadAccess(data) ? 'e-fe-locked e-fe-hidden' : 'e-fe-locked';\n}\n/**\n * Check read access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns read access.\n * @private\n */\nexport function hasReadAccess(data) {\n  var permission = getValue('permission', data);\n  return permission && !getValue('read', permission) ? false : true;\n}\n/**\n * Check edit access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns edit access.\n * @private\n */\nexport function hasEditAccess(data) {\n  var permission = getValue('permission', data);\n  return permission ? getValue('read', permission) && getValue('write', permission) : true;\n}\n/**\n * Check content access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns content access.\n * @private\n */\nexport function hasContentAccess(data) {\n  var permission = getValue('permission', data);\n  return permission ? getValue('read', permission) && getValue('writeContents', permission) : true;\n}\n/**\n * Check upload access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns upload access.\n * @private\n */\nexport function hasUploadAccess(data) {\n  var permission = getValue('permission', data);\n  return permission ? getValue('read', permission) && getValue('upload', permission) : true;\n}\n/**\n * Check download access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns download access.\n * @private\n */\nexport function hasDownloadAccess(data) {\n  var permission = getValue('permission', data);\n  return permission ? getValue('read', permission) && getValue('download', permission) : true;\n}\n/**\n * Create new folder handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function createNewFolder(parent) {\n  var details = parent.itemData[0];\n  if (!hasContentAccess(details)) {\n    createDeniedDialog(parent, details, events.permissionEditContents);\n  } else {\n    createDialog(parent, 'NewFolder');\n  }\n}\n/**\n * Upload item handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function uploadItem(parent) {\n  var details = parent.itemData[0];\n  if (!hasUploadAccess(details)) {\n    createDeniedDialog(parent, details, events.permissionUpload);\n  } else {\n    var eleId = '#' + parent.element.id + CLS.UPLOAD_ID;\n    var uploadEle = document.querySelector(eleId);\n    uploadEle.click();\n  }\n}\n/**\n * Close dialog popup handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function closePopup(parent) {\n  if (!isNullOrUndefined(parent.dialogObj)) {\n    parent.dialogObj.hide();\n  }\n}\n/**\n * Access control handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object[]} itemData - specifies the item elements.\n * @param {string} action - specifies the action.\n * @param {boolean} isPathPermision - specifies the path permission.\n * @returns {string} returns the path.\n * @private\n */\nexport function getAccessDetails(parent, itemData, action, isPathPermision) {\n  var accessMessage = '';\n  for (var i = 0; i < itemData.length; i++) {\n    var permission = getValue('permission', itemData[i]);\n    if (permission == null) {\n      permission = undefined;\n    }\n    if (isPathPermision) {\n      if (permission && (!getValue('read', permission) || !getValue('writeContents', permission))) {\n        accessMessage = getValue('message', getValue('permission', itemData[i]));\n        if (accessMessage === '') {\n          accessMessage = getLocaleText(parent, 'Access-Message').replace('{0}', getValue('name', itemData[i])).replace('{1}', 'writeContents');\n        }\n      }\n    } else {\n      var copyOrMovePermission = action === 'copy' ? getValue('copy', permission) : getValue('write', permission);\n      if (permission && (!getValue('read', permission) || !copyOrMovePermission)) {\n        accessMessage = getValue('message', getValue('permission', itemData[i]));\n        if (accessMessage === '') {\n          accessMessage = getLocaleText(parent, 'Access-Message').replace('{0}', getValue('name', itemData[i])).replace('{1}', action);\n        }\n      }\n    }\n    if (accessMessage !== '') {\n      parent.responseData = {\n        cwd: null,\n        details: null,\n        error: {\n          code: '401',\n          message: accessMessage,\n          fileExists: null\n        },\n        files: null\n      };\n      break;\n    }\n  }\n  return accessMessage;\n}","map":{"version":3,"names":["CLS","events","read","paste","Search","filter","Download","Delete","isFileSystemData","getValue","setValue","isNullOrUndefined","isNOU","matches","select","createElement","closest","detach","DataManager","Query","createDialog","sortComparer","reference","comparer","referenceIsFile","test","comparerIsFile","referenceParts","comparerParts","replace","_","$1","$2","push","Infinity","length","referencePart","shift","comparerPart","comparisonResult","localeCompare","updatePath","node","data","instance","text","id","getAttribute","newText","setProperties","path","getPath","hasId","pathId","getPathId","pathNames","getPathNames","element","matched","getParents","len","i","ids","names","isId","el","parentNode","LIST_ITEM","parentText","LIST_TEXT","textContent","classList","contains","TREE_VIEW","generatePath","parent","key","newPath","parseInt","toString","feParent","removeActive","isCut","removeBlur","selectedNodes","actionRecords","enablePaste","notify","hidePaste","activeElement","action","isSearchCut","activeElements","cutCopyInit","blurEle","activeModule","targetPath","getParentPath","getModule","addBlur","showPaste","activeRecords","breadcrumbbarModule","searchObj","value","isFiltered","i_1","selectedItems","nodes","add","BLUR","hover","querySelectorAll","HOVER","remove","ROW","LARGE_ICON","getAllChildItems","parentId","children","fileSystemData","item","String","allChildren","slice","forEach","child","childId","concat","searchWordHandler","isLayoutChange","searchWord","pathColumn","args","itemData","layoutChange","searchSettings","filterType","currData","filteredData","executeLocal","where","ignoreCase","searchValue","toLowerCase","search","showHiddenItems","getPathObject","caseSensitive","hiddenItems","isSortByClicked","files","oldView","detailsviewModule","gridObj","dataSource","largeiconsviewModule","allItems","updateLayout","view","layoutSelectedItems","getTargetModule","tartgetModule","ROOT","CONTROL","GRID_CONTENT","LARGE_ICONS","targetModule","refresh","hasReadAccess","createDeniedDialog","permissionRead","refreshEnd","openAction","openEnd","copyFiles","fileAction","cutFiles","fileType","file","isFile","FOLDER","imageFormat","audioFormat","videoFormat","knownFormat","filetype","indexOf","split","join","iconType","ICON_IMAGE","ICON_MUSIC","ICON_VIDEO","getImageUrl","imgUrl","eventArgs_1","fileDetails","imageUrl","trigger","baseUrl","ajaxSettings","url","pathUrl","fileName","encodeURIComponent","fPath","imgId","Date","getTime","eventArgs","getFullPath","filePath","getName","name","getSortedData","items","query","sortOrder","sortBy","group","lists","getObject","currFiles","feFiles","result","createEmptyElement","top","layoutElement","LAYOUT_ID","addressBarHeight","BREADCRUMBBAR_ID","offsetHeight","GRID_HEADER","querySelector","EMPTY","emptyDiv","className","emptyFolder","LARGE_EMPTY_FOLDER","emptyEle","EMPTY_CONTENT","dragFile","EMPTY_INNER_CONTENT","GRID_VIEW","appendChild","error","innerHTML","getLocaleText","eDiv","style","marginTop","getDirectories","setNodeId","rootId","dirs","setDateObject","localeString","dateFormat","createdDate","modifiedDate","formatDate","format","locale","localeObj","getConstant","getCssClass","css","cssClass","sortbyClickHandler","tick","getSortField","isMobile","sortColumn","module","sortByChange","substring","lastIndexOf","field","column","detailsViewSettings","columns","setNextPath","currfolders","folders","originalPath","root","eventName","finalizeEnd","initialEnd","openSearchFolder","navData","isRoot","searchData","clearPathInit","selectedNode","pasteHandler","isDragDrop","folderPath","includes","subFolder","validateSubFolder","pasteInit","code","message","fileExists","dropPath","dragPath","tempTarget","name_1","dragData","srcData","dragNodes","dropHandler","dropData","oldPath","getDirectoryPath","cwd","doPasteUpdate","operation","cutEnd","dragEnd","duplicateItems","pasteNodes","flag","count","droppedObjects","duplicateRecords","isPasteError","isDropEnd","isSearchDrag","isPathDrag","pasteEnd","readDropPath","expandedId","pathDrag","navigationpaneModule","treeObj","liElement","document","getDuplicateData","records","createVirtualDragElement","getItemName","cloneIcon","cloneName","virtualEle","ele","CLONE","badge","virtualDragElement","dragStopHandler","dragArgs","cancel","treeExpandTimer","window","clearTimeout","removeDropTarget","uploadObj","dropArea","CONTENT_ID","target","dropInit","dragCount","dragStartHandler","dragObj","allowDragAndDrop","intDestroy","event","dragCancel","removeItemClass","DROP_FOLDER","DROP_FILE","scrollHandler","scrollParent","nodeClass","clientY","position","elementData","getBoundingClientRect","clientHeight","scrollBy","draggingHandler","canDrop","setTimeout","dragging","parentElement","y","firstElementChild","objectToString","str","keys","Object","updateRenamingData","currentItemText","filterPath","doRename","hasEditAccess","permissionEdit","doDownload","hasDownloadAccess","permissionDownload","doDeleteFiles","newIds","doDownloadFiles","response","getAccessClass","permission","hasContentAccess","hasUploadAccess","createNewFolder","details","permissionEditContents","uploadItem","permissionUpload","eleId","UPLOAD_ID","uploadEle","click","closePopup","dialogObj","hide","getAccessDetails","isPathPermision","accessMessage","undefined","copyOrMovePermission","responseData"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-filemanager/src/file-manager/common/utility.js"],"sourcesContent":["import * as CLS from '../base/classes';\nimport * as events from '../base/constant';\nimport { read, paste, Search, filter, Download, Delete, isFileSystemData } from '../common/operations';\nimport { getValue, setValue, isNullOrUndefined as isNOU, matches, select, createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { closest, detach } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { createDialog } from '../pop-up/dialog';\n/**\n * Utility function to compare two strings in a way similar to Windows Explorer.\n * Files and folders are sorted separately, with folders coming before files.\n *\n * @param {string} reference - The first string to compare. This could be a file or folder name.\n * @param {string} comparer - The second string to compare. This could be a file or folder name.\n * @returns {number} - A negative number if `reference` should come before `comparer`, a positive number if `comparer` should come before `reference`, and 0 if they are considered equal.\n */\nexport function sortComparer(reference, comparer) {\n    // Check if reference and comparer are files or folders\n    var referenceIsFile = /\\.\\S+/.test(reference);\n    var comparerIsFile = /\\.\\S+/.test(comparer);\n    // If one is a file and the other is a folder, the folder should come first\n    if (referenceIsFile && !comparerIsFile) {\n        return 1;\n    }\n    if (!referenceIsFile && comparerIsFile) {\n        return -1;\n    }\n    var referenceParts = [];\n    var comparerParts = [];\n    (reference + '').replace(/(\\d+)|(\\D+)/g, function (_, $1, $2) { referenceParts.push([$1 || Infinity, $2 || '']); return ''; });\n    (comparer + '').replace(/(\\d+)|(\\D+)/g, function (_, $1, $2) { comparerParts.push([$1 || Infinity, $2 || '']); return ''; });\n    // Compare each part of reference and comparer\n    while (referenceParts.length && comparerParts.length) {\n        var referencePart = referenceParts.shift();\n        var comparerPart = comparerParts.shift();\n        if (referencePart && comparerPart) {\n            var comparisonResult = referencePart[0] - comparerPart[0] ||\n                referencePart[1].localeCompare(comparerPart[1]);\n            if (comparisonResult) {\n                return comparisonResult;\n            }\n        }\n    }\n    return referenceParts.length - comparerParts.length;\n}\n/**\n * Utility file for common actions\n *\n * @param {HTMLLIElement} node - specifies the node.\n * @param {Object} data - specifies the data.\n * @param {IFileManager} instance - specifies the control instance.\n * @returns {void}\n * @private\n */\nexport function updatePath(node, data, instance) {\n    var text = getValue('name', data);\n    var id = node.getAttribute('data-id');\n    var newText = isNOU(id) ? text : id;\n    instance.setProperties({ path: getPath(node, newText, instance.hasId) }, true);\n    instance.pathId = getPathId(node);\n    instance.pathNames = getPathNames(node, text);\n}\n/**\n * Functions for get path in FileManager\n *\n * @param {Element | Node} element - specifies the element.\n * @param {string} text - specifies the text.\n * @param {boolean} hasId - specifies the id.\n * @returns {string} returns the path.\n * @private\n */\nexport function getPath(element, text, hasId) {\n    var matched = getParents(element, text, false, hasId);\n    var path = '/';\n    var len = matched.length - (2);\n    for (var i = len; i >= 0; i--) {\n        path += matched[i] + '/';\n    }\n    return path;\n}\n/**\n * Functions for get path id in FileManager\n *\n * @param {Element} node - specifies the node element.\n * @returns {string[]} returns the path ids.\n * @private\n */\nexport function getPathId(node) {\n    var matched = getParents(node, node.getAttribute('data-uid'), true);\n    var ids = [];\n    for (var i = matched.length - 1; i >= 0; i--) {\n        ids.push(matched[i]);\n    }\n    return ids;\n}\n/**\n * Functions for get path names in FileManager\n *\n * @param {Element} element - specifies the node element.\n * @param {string} text - specifies the text.\n * @returns {string[]} returns the path names.\n * @private\n */\nexport function getPathNames(element, text) {\n    var matched = getParents(element, text, false);\n    var names = [];\n    for (var i = matched.length - 1; i >= 0; i--) {\n        names.push(matched[i]);\n    }\n    return names;\n}\n/**\n * Functions for get path id in FileManager\n *\n * @param {Element} element - specifies the node element.\n * @param {string} text - specifies the text.\n * @param {boolean} isId - specifies the id.\n * @param {boolean} hasId - checks the id exists.\n * @returns {string[]} returns parent element.\n * @private\n */\nexport function getParents(element, text, isId, hasId) {\n    var matched = [text];\n    var el = element.parentNode;\n    while (!isNOU(el)) {\n        if (matches(el, '.' + CLS.LIST_ITEM)) {\n            var parentText = isId ? el.getAttribute('data-uid') : (hasId ? el.getAttribute('data-id') :\n                select('.' + CLS.LIST_TEXT, el).textContent);\n            matched.push(parentText);\n        }\n        el = el.parentNode;\n        if (el.classList.contains(CLS.TREE_VIEW)) {\n            break;\n        }\n    }\n    return matched;\n}\n/**\n * Functions for generate path\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function generatePath(parent) {\n    var key = parent.hasId ? 'id' : 'name';\n    var newPath = '/';\n    var i = 1;\n    for (i; i < parent.pathId.length; i++) {\n        var data = getValue(parent.pathId[parseInt(i.toString(), 10)], parent.feParent);\n        newPath += getValue(key, data) + '/';\n    }\n    parent.setProperties({ path: newPath }, true);\n}\n/**\n * Functions for remove active element\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function removeActive(parent) {\n    if (parent.isCut) {\n        removeBlur(parent);\n        parent.selectedNodes = [];\n        parent.actionRecords = [];\n        parent.enablePaste = false;\n        parent.notify(events.hidePaste, {});\n    }\n}\n/**\n * Selects active element in File Manager\n *\n * @param {string} action - specifies the action.\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {boolean} - returns active element.\n * @private\n */\nexport function activeElement(action, parent) {\n    parent.isSearchCut = false;\n    parent.actionRecords = [];\n    parent.activeElements = [];\n    parent.notify(events.cutCopyInit, {});\n    if (parent.activeElements.length === 0) {\n        return false;\n    }\n    removeBlur(parent);\n    var blurEle = parent.activeElements;\n    if (parent.activeModule !== 'navigationpane') {\n        parent.targetPath = parent.path;\n    }\n    else {\n        parent.targetPath = getParentPath(parent.path);\n    }\n    var i = 0;\n    if (blurEle) {\n        getModule(parent, blurEle[0]);\n        if (action === 'cut') {\n            while (i < blurEle.length) {\n                addBlur(blurEle[i]);\n                i++;\n            }\n        }\n    }\n    i = 0;\n    parent.selectedNodes = [];\n    parent.enablePaste = true;\n    parent.notify(events.showPaste, {});\n    while (i < parent.activeRecords.length) {\n        parent.actionRecords.push(parent.activeRecords[i]);\n        parent.selectedNodes.push(getValue('name', parent.activeRecords[i]));\n        i++;\n    }\n    if ((parent.breadcrumbbarModule.searchObj.element.value !== '' || parent.isFiltered) &&\n        parent.activeModule !== 'navigationpane') {\n        parent.selectedNodes = [];\n        parent.isSearchCut = true;\n        var i_1 = 0;\n        while (i_1 < parent.selectedItems.length) {\n            parent.selectedNodes.push(parent.selectedItems[i_1]);\n            i_1++;\n        }\n    }\n    return true;\n}\n/**\n * Adds blur to the elements\n *\n * @param {Element} nodes - specifies the nodes.\n * @returns {void}\n * @private\n */\nexport function addBlur(nodes) {\n    nodes.classList.add(CLS.BLUR);\n}\n/**\n * Removes blur from elements\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} hover - specifies the hover string.\n * @returns {void}\n * @private\n */\nexport function removeBlur(parent, hover) {\n    var blurEle = (!hover) ? parent.element.querySelectorAll('.' + CLS.BLUR) :\n        parent.element.querySelectorAll('.' + CLS.HOVER);\n    var i = 0;\n    while (i < blurEle.length) {\n        blurEle[i].classList.remove((!hover) ? CLS.BLUR : CLS.HOVER);\n        i++;\n    }\n}\n/**\n * Gets module name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Element} element - specifies the element.\n * @returns {void}\n * @private\n */\nexport function getModule(parent, element) {\n    if (element) {\n        if (element.classList.contains(CLS.ROW)) {\n            parent.activeModule = 'detailsview';\n        }\n        else if (closest(element, '.' + CLS.LARGE_ICON)) {\n            parent.activeModule = 'largeiconsview';\n        }\n        else {\n            parent.activeModule = 'navigationpane';\n        }\n    }\n}\n/**\n * Get all child items\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string | number} parentId - specifies the parent ID.\n * @returns {Object[]} An array of child items\n * @private\n */\nexport function getAllChildItems(parent, parentId) {\n    var children = parent.fileSystemData.filter(function (item) {\n        return String(item.parentId) === String(parentId);\n    });\n    var allChildren = children.slice();\n    children.forEach(function (child) {\n        var childId = child.id;\n        allChildren = allChildren.concat(getAllChildItems(parent, childId));\n    });\n    return allChildren;\n}\n/**\n * Gets module name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} value - specifies the value.\n * @param {boolean} isLayoutChange - specifies the layout change.\n * @returns {void}\n * @private\n */\nexport function searchWordHandler(parent, value, isLayoutChange) {\n    var searchWord;\n    if (value.length === 0 && !parent.isFiltered) {\n        parent.notify(events.pathColumn, { args: parent });\n    }\n    if (isFileSystemData(parent)) {\n        if (value === '') {\n            parent.itemData = parent.fileSystemData;\n            read(parent, events.layoutChange, parent.path);\n        }\n        else {\n            parent.searchSettings.filterType = isNOU(parent.searchSettings.filterType) ? 'contains' : parent.searchSettings.filterType;\n            var currData = getValue(parent.pathId[parent.pathId.length - 1], parent.feParent);\n            var parentId = getValue('id', currData);\n            var filteredData = getAllChildItems(parent, parentId);\n            var data = new DataManager(filteredData).\n                executeLocal(new Query().where('name', parent.searchSettings.filterType, value, parent.searchSettings.ignoreCase));\n            var searchValue = parent.searchSettings.ignoreCase ? value.toLowerCase() : value;\n            parent.itemData = data;\n            Search(parent, isLayoutChange ? events.layoutChange : events.search, parent.path, searchValue, parent.showHiddenItems, !parent.searchSettings.ignoreCase);\n        }\n        return;\n    }\n    if (parent.searchSettings.filterType === 'startsWith') {\n        searchWord = value + '*';\n    }\n    else if (parent.searchSettings.filterType === 'endsWith') {\n        searchWord = '*' + value;\n    }\n    else {\n        searchWord = '*' + value + '*';\n    }\n    parent.searchWord = searchWord;\n    parent.itemData = [getPathObject(parent)];\n    if (value.length > 0) {\n        var caseSensitive = parent.searchSettings.ignoreCase;\n        var hiddenItems = parent.showHiddenItems;\n        Search(parent, isLayoutChange ? events.layoutChange : events.search, parent.path, searchWord, hiddenItems, !caseSensitive);\n    }\n    else {\n        if (!parent.isFiltered) {\n            if (parent.isSortByClicked) {\n                parent.notify(events.layoutChange, { files: (parent.oldView === 'Details') ? parent.detailsviewModule.gridObj.dataSource : parent.largeiconsviewModule.allItems });\n                parent.isSortByClicked = false;\n            }\n            else {\n                read(parent, isLayoutChange ? events.layoutChange : events.search, parent.path);\n            }\n        }\n        else {\n            filter(parent, events.layoutChange);\n        }\n    }\n}\n/**\n * Gets updated layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} view - specifies the view.\n * @returns {void}\n * @private\n */\nexport function updateLayout(parent, view) {\n    parent.oldView = parent.view;\n    parent.setProperties({ view: view }, true);\n    if (parent.breadcrumbbarModule.searchObj.element.value !== '' || parent.isFiltered) {\n        parent.layoutSelectedItems = parent.selectedItems;\n    }\n    var searchWord = '';\n    if (parent.breadcrumbbarModule.searchObj.element.value) {\n        searchWord = parent.breadcrumbbarModule.searchObj.element.value;\n    }\n    parent.isLayoutChange = true;\n    searchWordHandler(parent, searchWord, true);\n}\n/* istanbul ignore next */\n/**\n * Gets updated layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Element} element - specifies the element.\n * @returns {void}\n * @private\n */\nexport function getTargetModule(parent, element) {\n    var tartgetModule = '';\n    if (element) {\n        if (closest(element, '.' + CLS.ROOT + '.' + CLS.CONTROL + ' .' + CLS.GRID_CONTENT)) {\n            tartgetModule = 'detailsview';\n        }\n        else if (closest(element, '.' + CLS.LARGE_ICONS)) {\n            tartgetModule = 'largeiconsview';\n        }\n        else if (element.classList.contains('e-fullrow') ||\n            element.classList.contains('e-icon-expandable')) {\n            tartgetModule = 'navigationpane';\n        }\n        else if (closest(element, '.e-address-list-item')) {\n            tartgetModule = 'breadcrumbbar';\n        }\n        else {\n            tartgetModule = '';\n        }\n    }\n    parent.targetModule = tartgetModule;\n}\n/* istanbul ignore next */\n/**\n * refresh the layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function refresh(parent) {\n    parent.itemData = [getPathObject(parent)];\n    if (!hasReadAccess(parent.itemData[0])) {\n        createDeniedDialog(parent, parent.itemData[0], events.permissionRead);\n    }\n    else {\n        read(parent, events.refreshEnd, parent.path);\n    }\n}\n/**\n * open action in the layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function openAction(parent) {\n    read(parent, events.openEnd, parent.path);\n}\n/**\n * open action in the layout\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {Object} - returns the path data.\n * @private\n */\nexport function getPathObject(parent) {\n    return getValue(parent.pathId[parent.pathId.length - 1], parent.feParent);\n}\n/**\n * Copy files\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function copyFiles(parent) {\n    if (!activeElement('copy', parent)) {\n        return;\n    }\n    else {\n        parent.fileAction = 'copy';\n    }\n}\n/**\n * Cut files\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function cutFiles(parent) {\n    if (!activeElement('cut', parent)) {\n        return;\n    }\n    else {\n        parent.isCut = true;\n        parent.fileAction = 'move';\n    }\n}\n/**\n * To add class for fileType\n *\n * @param {Object} file - specifies the file.\n * @returns {string} - returns the file type.\n * @private\n */\nexport function fileType(file) {\n    var isFile = getValue('isFile', file);\n    if (!isFile) {\n        return CLS.FOLDER;\n    }\n    var imageFormat = ['bmp', 'dib', 'jpg', 'jpeg', 'jpe', 'jfif', 'gif', 'tif', 'tiff', 'png', 'ico'];\n    var audioFormat = ['mp3', 'wav', 'aac', 'ogg', 'wma', 'aif', 'fla', 'm4a'];\n    var videoFormat = ['webm', 'mkv', 'flv', 'vob', 'ogv', 'ogg', 'avi', 'wmv', 'mp4', '3gp'];\n    var knownFormat = ['css', 'exe', 'html', 'js', 'msi', 'pdf', 'pptx', 'ppt', 'rar', 'zip', 'txt', 'docx', 'doc',\n        'xlsx', 'xls', 'xml', 'rtf', 'php'];\n    var filetype = getValue('type', file);\n    filetype = filetype.toLowerCase();\n    if (filetype.indexOf('.') !== -1) {\n        filetype = filetype.split('.').join('');\n    }\n    var iconType;\n    if (imageFormat.indexOf(filetype) !== -1) {\n        iconType = CLS.ICON_IMAGE;\n    }\n    else if (audioFormat.indexOf(filetype) !== -1) {\n        iconType = CLS.ICON_MUSIC;\n    }\n    else if (videoFormat.indexOf(filetype) !== -1) {\n        iconType = CLS.ICON_VIDEO;\n    }\n    else if (knownFormat.indexOf(filetype) !== -1) {\n        iconType = 'e-fe-' + filetype;\n    }\n    else {\n        iconType = 'e-fe-unknown e-fe-' + filetype;\n    }\n    return iconType;\n}\n/* istanbul ignore next */\n/**\n * To get the image URL\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} item - specifies the item.\n * @returns {string} - returns the image url.\n * @private\n */\nexport function getImageUrl(parent, item) {\n    var imgUrl = isFileSystemData(parent) ? getValue('imageUrl', item) : '';\n    if (isFileSystemData(parent)) {\n        var eventArgs_1 = {\n            fileDetails: [item],\n            imageUrl: imgUrl\n        };\n        parent.trigger('beforeImageLoad', eventArgs_1);\n        return eventArgs_1.imageUrl;\n    }\n    var baseUrl = parent.ajaxSettings.getImageUrl ? parent.ajaxSettings.getImageUrl : parent.ajaxSettings.url;\n    var pathUrl = (baseUrl.indexOf('?') !== -1) ? '&path=' : '?path=';\n    var fileName = encodeURIComponent(getValue('name', item));\n    var fPath = getValue('filterPath', item);\n    if (parent.hasId) {\n        var imgId = getValue('id', item);\n        imgUrl = baseUrl + pathUrl + parent.path + '&id=' + imgId;\n    }\n    else if (!isNOU(fPath)) {\n        imgUrl = baseUrl + pathUrl + encodeURIComponent(fPath.replace(/\\\\/g, '/')) + fileName;\n    }\n    else {\n        imgUrl = baseUrl + pathUrl + parent.path + fileName;\n    }\n    imgUrl = imgUrl + '&time=' + (new Date().getTime()).toString();\n    var eventArgs = {\n        fileDetails: [item],\n        imageUrl: imgUrl\n    };\n    parent.trigger('beforeImageLoad', eventArgs);\n    return eventArgs.imageUrl;\n}\n/* istanbul ignore next */\n/**\n * Gets the full path\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @param {string} path - specifies the path.\n * @returns {string} - returns the image url.\n * @private\n */\nexport function getFullPath(parent, data, path) {\n    var filePath = getValue(parent.hasId ? 'id' : 'name', data) + '/';\n    var fPath = getValue(parent.hasId ? 'filterId' : 'filterPath', data);\n    if (!isNOU(fPath)) {\n        return fPath.replace(/\\\\/g, '/') + filePath;\n    }\n    else {\n        return path + filePath;\n    }\n}\n/**\n * Gets the name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data.\n * @returns {string} - returns the name.\n * @private\n */\nexport function getName(parent, data) {\n    var name = getValue('name', data);\n    var fPath = getValue('filterPath', data);\n    if ((parent.breadcrumbbarModule.searchObj.element.value !== '' || parent.isFiltered) && !isNOU(fPath)) {\n        fPath = fPath.replace(/\\\\/g, '/');\n        name = fPath.replace(parent.path, '') + name;\n    }\n    return name;\n}\n/**\n * Gets the name\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object[]} items - specifies the item elements.\n * @returns {Object[]} - returns the sorted data.\n * @private\n */\nexport function getSortedData(parent, items) {\n    if (items.length === 0) {\n        return items;\n    }\n    var query;\n    if (parent.sortOrder !== 'None' && !isNullOrUndefined(parent.sortOrder)) {\n        query = new Query().sortBy(parent.sortBy, parent.sortOrder.toLowerCase(), true).group('isFile');\n    }\n    else {\n        query = new Query().group('isFile');\n    }\n    var lists = new DataManager(items).executeLocal(query);\n    return getValue('records', lists);\n}\n/**\n * Gets the data object\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} key - specifies the key.\n * @param {string} value - specifies the value.\n * @returns {Object} - returns the sorted data.\n * @private\n */\nexport function getObject(parent, key, value) {\n    var currFiles = getValue(parent.pathId[parent.pathId.length - 1], parent.feFiles);\n    var result = currFiles.filter(function (data) { return data[key].toString() === value; });\n    return result.length > 0 ? result[0] : null;\n}\n/**\n * Creates empty element\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {HTMLElement} element - specifies the element.\n * @param {ReadArgs | SearchArgs} args - specifies the args.\n * @returns {void}\n * @private\n */\nexport function createEmptyElement(parent, element, args) {\n    var top;\n    var layoutElement = select('#' + parent.element.id + CLS.LAYOUT_ID, parent.element);\n    var addressBarHeight = select('#' + parent.element.id + CLS.BREADCRUMBBAR_ID, layoutElement).offsetHeight;\n    top = layoutElement.offsetHeight - addressBarHeight;\n    if (parent.view === 'Details') {\n        top = top - select('.' + CLS.GRID_HEADER, layoutElement).offsetHeight;\n    }\n    if (isNOU(element.querySelector('.' + CLS.EMPTY))) {\n        var emptyDiv = createElement('div', { className: CLS.EMPTY });\n        var emptyFolder = createElement('div', { className: CLS.LARGE_EMPTY_FOLDER });\n        var emptyEle = createElement('div', { className: CLS.EMPTY_CONTENT });\n        var dragFile = createElement('div', { className: CLS.EMPTY_INNER_CONTENT });\n        if (parent.view === 'Details') {\n            element.querySelector('.' + CLS.GRID_VIEW).appendChild(emptyDiv);\n        }\n        else {\n            element.appendChild(emptyDiv);\n        }\n        emptyDiv.appendChild(emptyFolder);\n        emptyDiv.appendChild(emptyEle);\n        emptyDiv.appendChild(dragFile);\n    }\n    if (element.querySelector('.' + CLS.EMPTY)) {\n        if (!isNOU(args.error)) {\n            element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Access-Denied');\n            element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'Access-Details');\n        }\n        else if (parent.isFiltered) {\n            element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Filter-Empty');\n            element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'Filter-Key');\n        }\n        else if (parent.breadcrumbbarModule.searchObj.element.value !== '') {\n            element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Search-Empty');\n            element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'Search-Key');\n        }\n        else {\n            element.querySelector('.' + CLS.EMPTY_CONTENT).innerHTML = getLocaleText(parent, 'Folder-Empty');\n            element.querySelector('.' + CLS.EMPTY_INNER_CONTENT).innerHTML = getLocaleText(parent, 'File-Upload');\n        }\n    }\n    var eDiv = select('.' + CLS.EMPTY, element);\n    top = (top - eDiv.offsetHeight) / 2;\n    eDiv.style.marginTop = top + 'px';\n}\n/**\n * Gets the directories\n *\n * @param {Object[]} files - specifies the file object.\n * @returns {Object[]} - returns the sorted data.\n * @private\n */\nexport function getDirectories(files) {\n    return new DataManager(files).executeLocal(new Query().where(events.isFile, 'equal', false, false));\n}\n/**\n * set the Node ID\n *\n * @param {ReadArgs} result - specifies the result.\n * @param {string} rootId - specifies the rootId.\n * @returns {void}\n * @private\n */\nexport function setNodeId(result, rootId) {\n    var dirs = getDirectories(result.files);\n    for (var i = 0, len = dirs.length; i < len; i++) {\n        setValue('_fm_id', rootId + '_' + i, dirs[i]);\n    }\n}\n/**\n * set the date object\n *\n * @param {Object[]} args - specifies the file object.\n * @param {Internationalization} localeString - The internationalization object for formatting dates.\n * @param {string} dateFormat - The date format string.\n * @returns {void}\n * @private\n */\nexport function setDateObject(args, localeString, dateFormat) {\n    for (var i = 0; i < args.length; i++) {\n        var createdDate = new Date(getValue('dateCreated', args[i]));\n        var modifiedDate = new Date(getValue('dateModified', args[i]));\n        if (isNOU(dateFormat)) {\n            dateFormat = 'MM/dd/yyyy';\n        }\n        setValue('_fm_created', localeString.formatDate(createdDate, { format: dateFormat }), args[i]);\n        setValue('_fm_modified', localeString.formatDate(modifiedDate, { format: dateFormat }), args[i]);\n    }\n}\n/**\n * get the locale text\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} text - specifies the text.\n * @returns {string} - returns the locale text.\n * @private\n */\nexport function getLocaleText(parent, text) {\n    var locale = parent.localeObj.getConstant(text);\n    return (locale === '') ? text : locale;\n}\n/**\n * get the CSS class\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} css - specifies the css.\n * @returns {string} - returns the css classes.\n * @private\n */\nexport function getCssClass(parent, css) {\n    var cssClass = parent.cssClass;\n    cssClass = (isNOU(cssClass) || cssClass === '') ? css : (cssClass + ' ' + css);\n    return cssClass;\n}\n/**\n * sort on click\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {MenuEventArgs} args - specifies the menu event arguements.\n * @returns {void}\n * @private\n */\nexport function sortbyClickHandler(parent, args) {\n    var tick;\n    parent.isSortByClicked = true;\n    if (args.item.id.indexOf('ascending') !== -1 || args.item.id.indexOf('descending') !== -1 || args.item.id.indexOf('none') !== -1) {\n        tick = true;\n    }\n    else {\n        tick = false;\n    }\n    if (!tick) {\n        parent.sortBy = getSortField(args.item.id, parent);\n    }\n    else {\n        parent.sortOrder = getSortField(args.item.id);\n    }\n    parent.itemData = [getPathObject(parent)];\n    if (parent.view === 'Details') {\n        if (parent.isMobile) {\n            updateLayout(parent, 'Details');\n        }\n        else {\n            parent.notify(events.sortColumn, { module: 'detailsview' });\n            parent.isSortByClicked = false;\n        }\n    }\n    if (parent.view === 'LargeIcons') {\n        updateLayout(parent, 'LargeIcons');\n    }\n    parent.notify(events.sortByChange, {});\n}\n/**\n * Gets the sorted fields\n *\n * @param {string} id - specifies the id.\n * @param {IFileManager} [parent] - optional parameter representing the parent IFileManager.\n * @returns {string} - returns the sorted fields\n * @private\n */\nexport function getSortField(id, parent) {\n    var text = id.substring(id.lastIndexOf('_') + 1);\n    var field = text;\n    var column;\n    if (parent) {\n        column = parent.detailsViewSettings.columns;\n    }\n    switch (text) {\n        case 'date':\n            for (var i = 0, len = column.length; i < len; i++) {\n                if (column[i].field === 'dateModified' || column[i].field === 'dateCreated') {\n                    field = column[i].field;\n                    break;\n                }\n                else {\n                    field = '_fm_modified';\n                }\n            }\n            break;\n        case 'ascending':\n            field = 'Ascending';\n            break;\n        case 'descending':\n            field = 'Descending';\n            break;\n        case 'none':\n            field = 'None';\n            break;\n    }\n    return field;\n}\n/**\n * Sets the next path\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {string} path - specifies the path.\n * @returns {void}\n * @private\n */\nexport function setNextPath(parent, path) {\n    var currfolders = path.split('/');\n    var folders = parent.originalPath.split('/');\n    var root = getValue(parent.pathId[0], parent.feParent);\n    var key = isNOU(getValue('id', root)) ? 'name' : 'id';\n    for (var i = currfolders.length - 1, len = folders.length - 1; i < len; i++) {\n        var eventName = (folders[i + 1] === '') ? events.finalizeEnd : events.initialEnd;\n        var newPath = (folders[i] === '') ? '/' : (parent.path + folders[i] + '/');\n        var data = getObject(parent, key, folders[parseInt(i.toString(), 10)]);\n        if (!isNullOrUndefined(data)) {\n            var id = getValue('_fm_id', data);\n            parent.setProperties({ path: newPath }, true);\n            parent.pathId.push(id);\n            parent.itemData = [data];\n            parent.pathNames.push(getValue('name', data));\n        }\n        else {\n            parent.originalPath = newPath;\n        }\n        read(parent, eventName, parent.path);\n        break;\n    }\n}\n/**\n * Opens the searched folder\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {Object} data - specifies the data\n * @returns {void}\n * @private\n */\nexport function openSearchFolder(parent, data) {\n    parent.originalPath = getFullPath(parent, data, parent.path);\n    var root = getValue(parent.pathId[0], parent.feParent);\n    var navData = parent.feParent[getValue('_fm_id', parent.itemData[0])];\n    var isRoot = isNullOrUndefined(navData) || getValue('_fm_id', navData) === 'fe_tree';\n    var key = isNOU(getValue('id', root)) ? 'name' : 'id';\n    var searchData = getObject(parent, key, isFileSystemData(parent) ? getValue('id', data) : getValue('name', data));\n    if (isNullOrUndefined(searchData)) {\n        if (!isRoot) {\n            parent.notify(events.clearPathInit, { selectedNode: parent.pathId[parent.pathId.length - 1] });\n        }\n        else {\n            setNextPath(parent, parent.path);\n            return;\n        }\n    }\n    else {\n        var id = getValue('_fm_id', searchData);\n        parent.setProperties({ path: parent.originalPath }, true);\n        parent.pathId.push(id);\n        parent.itemData = [searchData];\n        parent.pathNames.push(getValue('name', searchData));\n    }\n    read(parent, (parent.path !== parent.originalPath) ? events.initialEnd : events.finalizeEnd, parent.path);\n}\n/**\n * Paste handling function\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function pasteHandler(parent) {\n    parent.isDragDrop = false;\n    if (parent.selectedNodes.length !== 0 && parent.enablePaste) {\n        var path = (parent.folderPath === '') ? parent.path : parent.folderPath;\n        if (parent.activeModule === 'navigationpane' && !parent.selectedNodes[0].includes('/')) {\n            parent.targetPath = getValue('filterPath', parent.actionRecords[0]).replace(/\\\\/g, '/');\n        }\n        var subFolder = validateSubFolder(parent, parent.actionRecords, path, parent.path);\n        if (!subFolder) {\n            if ((parent.fileAction === 'move' && parent.targetPath !== path) || parent.fileAction === 'copy') {\n                parent.notify(events.pasteInit, {});\n                paste(parent, parent.targetPath, parent.selectedNodes, path, parent.fileAction, [], parent.actionRecords);\n            }\n            else {\n                parent.enablePaste = false;\n                parent.notify(events.hidePaste, {});\n                removeBlur(parent);\n                var result = {\n                    files: null,\n                    error: {\n                        code: '402',\n                        message: getLocaleText(parent, 'Same-Folder-Error'),\n                        fileExists: null\n                    }\n                };\n                createDialog(parent, 'Error', result);\n            }\n        }\n    }\n}\n/**\n * Validates the sub folders\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @param {'{ [key: string]: Object; }[]'} data - specifies the data.\n * @param {string} dropPath - specifies the drop path.\n * @param {string} dragPath - specifies the drag path.\n * @returns {boolean} - returns the validated sub folder.\n * @private\n */\nexport function validateSubFolder(parent, data, dropPath, dragPath) {\n    var subFolder = false;\n    for (var i = 0; i < data.length; i++) {\n        if (!getValue('isFile', data[i])) {\n            var tempTarget = getFullPath(parent, data[i], dragPath);\n            if (dropPath.indexOf(tempTarget) === 0) {\n                var result = {\n                    files: null,\n                    error: {\n                        code: '402',\n                        message: getLocaleText(parent, 'Sub-Folder-Error'),\n                        fileExists: null\n                    }\n                };\n                createDialog(parent, 'Error', result);\n                subFolder = true;\n                break;\n            }\n        }\n        else {\n            var name_1 = parent.dragData[i] ? parent.dragData[i].name : null;\n            var srcData = isFileSystemData(parent) ? name_1 : parent.dragNodes[i];\n            var len = 0;\n            if (srcData) {\n                len = srcData.lastIndexOf('/');\n            }\n            var path = '';\n            if (len > 0) {\n                path = dragPath + srcData.substring(0, len + 1);\n            }\n            if (path === dropPath) {\n                var result = {\n                    files: null,\n                    error: {\n                        code: '402',\n                        message: getLocaleText(parent, 'Same-Folder-Error'),\n                        fileExists: null\n                    }\n                };\n                createDialog(parent, 'Error', result);\n                subFolder = true;\n                break;\n            }\n        }\n    }\n    return subFolder;\n}\n/**\n * Validates the drop handler\n *\n * @param {IFileManager} parent - specifies the parent element.\n * @returns {void}\n * @private\n */\nexport function dropHandler(parent) {\n    parent.isDragDrop = true;\n    if (parent.dragData.length !== 0) {\n        parent.dragPath = parent.dragPath.replace(/\\\\/g, '/');\n        parent.dropPath = parent.dropPath.replace(/\\\\/g, '/');\n        var subFolder = validateSubFolder(parent, parent.dragData, parent.dropPath, parent.dragPath);\n        if (!subFolder && (parent.dragPath !== parent.dropPath)) {\n            parent.itemData = [parent.dropData];\n            paste(parent, parent.dragPath, parent.dragNodes, parent.dropPath, 'move', [], parent.dragData);\n            parent.notify(events.pasteInit, {});\n        }\n    }\n}\n/**\n * Gets the parent path\n *\n * @param {string} oldPath - specifies the old path.\n * @returns {string} - returns the parent path.\n * @private\n */\nexport function getParentPath(oldPath) {\n    var path = oldPath.split('/');\n    var newPath = path[0] + '/';\n    for (var i = 1; i < path.length - 2; i++) {\n        newPath += path[i] + '/';\n    }\n    return newPath;\n}\n/**\n * Gets the directory path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {ReadArgs} args - returns the read arguements.\n * @returns {string} - returns the directory path\n * @private\n */\nexport function getDirectoryPath(parent, args) {\n    var filePath = getValue(parent.hasId ? 'id' : 'name', args.cwd) + '/';\n    var fPath = getValue(parent.hasId && !isNullOrUndefined(parent.ajaxSettings.url) ? 'filterId' : 'filterPath', args.cwd);\n    if (!isNOU(fPath)) {\n        if (fPath === '') {\n            return parent.hasId && !isNullOrUndefined(parent.ajaxSettings.url) ? filePath : '/';\n        }\n        return fPath.replace(/\\\\/g, '/') + filePath;\n    }\n    else {\n        return isFileSystemData(parent) ? filePath : parent.path + filePath;\n    }\n}\n/**\n * Gets the do paste path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} operation - specifies the operations.\n * @param {ReadArgs} result - returns the result.\n * @returns {void}\n * @private\n */\nexport function doPasteUpdate(parent, operation, result) {\n    if (operation === 'move') {\n        if (!parent.isDragDrop) {\n            parent.enablePaste = false;\n            parent.notify(events.hidePaste, {});\n            parent.notify(events.cutEnd, result);\n        }\n        else {\n            parent.notify(events.dragEnd, result);\n        }\n    }\n    if (parent.duplicateItems.length === 0) {\n        parent.pasteNodes = [];\n    }\n    var flag = false;\n    for (var count = 0; (count < result.files.length) && !flag; count++) {\n        parent.pasteNodes.push(result.files[count][parent.hasId ? 'id' : 'name']);\n        if (parent.isDragDrop) {\n            parent.droppedObjects.push(result.files[count]);\n        }\n    }\n    parent.duplicateItems = [];\n    parent.duplicateRecords = [];\n    if (parent.isDragDrop && !parent.isPasteError) {\n        parent.isDropEnd = true;\n    }\n    else {\n        parent.isDropEnd = false;\n    }\n    parent.trigger('success', { action: operation, result: result });\n    if (!parent.isDragDrop || (parent.path === parent.dragPath) || (parent.path === parent.dropPath)\n        || parent.isSearchDrag) {\n        parent.isPathDrag = false;\n        read(parent, events.pasteEnd, parent.path);\n    }\n    else {\n        readDropPath(parent);\n    }\n}\n/**\n * Reads the drop path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function readDropPath(parent) {\n    var pathId = getValue('_fm_id', parent.dropData);\n    parent.expandedId = pathId;\n    parent.itemData = [parent.dropData];\n    if (parent.isPathDrag) {\n        parent.notify(events.pathDrag, parent.itemData);\n    }\n    else {\n        if (parent.navigationpaneModule) {\n            var node = select('[data-uid=\"' + pathId + '\"]', parent.navigationpaneModule.treeObj.element);\n            if (!node) {\n                var liElement = document.querySelector('[data-id = \"' + getValue('id', parent.dropData) + '\"]');\n                pathId = liElement.getAttribute('data-uid');\n                node = select('[data-uid=\"' + pathId + '\"]', parent.navigationpaneModule.treeObj.element);\n            }\n            updatePath(node, parent.dropData, parent);\n        }\n        read(parent, events.dropPath, parent.dropPath);\n    }\n}\n/**\n * Gets the duplicated path\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} name - specifies the name.\n * @returns {object} - returns the duplicated path.\n * @private\n */\nexport function getDuplicateData(parent, name) {\n    var data = null;\n    var records = parent.isDragDrop ? parent.dragData : parent.actionRecords;\n    for (var i = 0; i < records.length; i++) {\n        if (getValue('name', records[i]) === name) {\n            data = records[i];\n            break;\n        }\n    }\n    return data;\n}\n/**\n * Gets the create the virtual drag element\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function createVirtualDragElement(parent) {\n    parent.isSearchDrag = false;\n    if (parent.breadcrumbbarModule.searchObj.element.value !== '') {\n        parent.isSearchDrag = true;\n    }\n    if (parent.activeModule !== 'navigationpane') {\n        parent.dragNodes = [];\n        var i = 0;\n        while (i < parent.selectedItems.length) {\n            parent.dragNodes.push(parent.selectedItems[i]);\n            i++;\n        }\n        if (parent.selectedItems.length === 0 && parent.dragData && parent.dragData.length === 1) {\n            parent.dragNodes.push(getItemName(parent, parent.dragData[0]));\n        }\n    }\n    var cloneIcon = parent.createElement('div', {\n        className: 'e-fe-icon ' + fileType(parent.dragData[0])\n    });\n    var cloneName = parent.createElement('div', {\n        className: 'e-fe-name',\n        innerHTML: parent.dragData[0].name\n    });\n    var virtualEle = parent.createElement('div', {\n        className: 'e-fe-content'\n    });\n    virtualEle.appendChild(cloneIcon);\n    virtualEle.appendChild(cloneName);\n    var ele = parent.createElement('div', {\n        className: CLS.CLONE\n    });\n    ele.appendChild(virtualEle);\n    if (parent.dragNodes.length > 1) {\n        var badge = parent.createElement('span', {\n            className: 'e-fe-count',\n            innerHTML: (parent.dragNodes.length).toString(10)\n        });\n        ele.appendChild(badge);\n    }\n    parent.virtualDragElement = ele;\n    parent.element.appendChild(parent.virtualDragElement);\n}\n/**\n * Drops the stop handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {DragEventArgs} args - specifies the drag event arguements.\n * @returns {void}\n * @private\n */\nexport function dragStopHandler(parent, args) {\n    var dragArgs = args;\n    dragArgs.cancel = false;\n    if (parent.treeExpandTimer != null) {\n        window.clearTimeout(parent.treeExpandTimer);\n        parent.treeExpandTimer = null;\n    }\n    removeDropTarget(parent);\n    parent.element.classList.remove('e-fe-drop', 'e-no-drop');\n    removeBlur(parent);\n    parent.uploadObj.dropArea = select('#' + parent.element.id + CLS.CONTENT_ID, parent.element);\n    var virtualEle = select('.' + CLS.CLONE, parent.element);\n    if (virtualEle) {\n        detach(virtualEle);\n    }\n    getTargetModule(parent, args.target);\n    parent.notify(events.dropInit, args);\n    removeBlur(parent, 'hover');\n    dragArgs.fileDetails = parent.dragData;\n    parent.trigger('fileDragStop', dragArgs, function (dragArgs) {\n        if (!dragArgs.cancel && !isNOU(parent.targetModule) && parent.targetModule !== '' && parent.dragCount > 2) {\n            dropHandler(parent);\n        }\n        parent.dragCount = 0;\n    });\n}\n/**\n * Drag the start handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {'DragEventArgs'} args - specifies the drag event arguements.\n * @param {Draggable} dragObj - specifies the drag event arguements.\n * @returns {void}\n * @private\n */\nexport function dragStartHandler(parent, args, dragObj) {\n    var dragArgs = args;\n    dragArgs.cancel = false;\n    dragArgs.fileDetails = parent.dragData;\n    parent.dragCount = 0;\n    parent.droppedObjects = [];\n    if (!parent.allowDragAndDrop || ((parent.activeModule === 'navigationpane') &&\n        (closest(args.element, 'li').getAttribute('data-uid') === parent.pathId[0]))) {\n        dragArgs.cancel = true;\n    }\n    if ((parent.activeModule === 'navigationpane') &&\n        (parent.pathId.indexOf(closest(args.element, 'li').getAttribute('data-uid')) !== -1)) {\n        parent.isPathDrag = true;\n    }\n    else {\n        parent.isPathDrag = false;\n    }\n    removeBlur(parent);\n    if (dragArgs.cancel) {\n        dragObj.intDestroy(args.event);\n        dragCancel(parent);\n    }\n    else if (!dragArgs.cancel) {\n        var i = 0;\n        while (i < parent.activeElements.length) {\n            addBlur(parent.activeElements[i]);\n            i++;\n        }\n        parent.trigger('fileDragStart', dragArgs, function (dragArgs) {\n            if (dragArgs.cancel) {\n                dragObj.intDestroy(args.event);\n                dragCancel(parent);\n            }\n            else {\n                parent.uploadObj.dropArea = null;\n            }\n        });\n    }\n}\n/**\n * Drag the cancel handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function dragCancel(parent) {\n    removeBlur(parent);\n    var virtualEle = select('.' + CLS.CLONE, parent.element);\n    if (virtualEle) {\n        detach(virtualEle);\n    }\n}\n/**\n * Remove drop target handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function removeDropTarget(parent) {\n    removeItemClass(parent, CLS.DROP_FOLDER);\n    removeItemClass(parent, CLS.DROP_FILE);\n}\n/**\n * Remove item class handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} value - specifies the value.\n * @returns {void}\n * @private\n */\nexport function removeItemClass(parent, value) {\n    var ele = parent.element.querySelectorAll('.' + value);\n    for (var i = 0; i < ele.length; i++) {\n        ele[i].classList.remove(value);\n    }\n}\n/**\n * Remove item class handler\n *\n * @param {Element} scrollParent - specifies the scrolling target.\n * @param {IFileManager} parent - specifies the parent.\n * @param {string} nodeClass - specifies the node class.\n * @param {number} clientY - specifies the vertical (Y) coordinate of the mouse cursor position relative to the target element.\n * @returns {void}\n * @private\n */\nexport function scrollHandler(scrollParent, parent, nodeClass, clientY) {\n    var position;\n    var elementData = scrollParent.getBoundingClientRect();\n    var node = select('.' + nodeClass, scrollParent);\n    if ((clientY >= (elementData.top + scrollParent.clientHeight - 30)) && !isNullOrUndefined(node)) {\n        position = (parent.targetModule === 'navigationpane' || parent.targetModule === 'detailsview') ? node.offsetHeight / 2.5 : node.offsetHeight / 4.5;\n        scrollParent.scrollBy(0, position);\n    }\n    if (!isNullOrUndefined(node) && (clientY <= (elementData.top + 30))) {\n        position = (parent.targetModule === 'navigationpane' || parent.targetModule === 'detailsview') ? node.offsetHeight / 2.5 : node.offsetHeight / 4.5;\n        scrollParent.scrollBy(0, -position);\n    }\n}\n/**\n * Dragging handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {DragEventArgs} args - specifies the arguements.\n * @returns {void}\n * @private\n */\nexport function draggingHandler(parent, args) {\n    var dragArgs = args;\n    dragArgs.fileDetails = parent.dragData;\n    var canDrop = false;\n    getTargetModule(parent, args.target);\n    removeDropTarget(parent);\n    if (parent.treeExpandTimer != null) {\n        window.clearTimeout(parent.treeExpandTimer);\n        parent.treeExpandTimer = null;\n    }\n    removeBlur(parent, 'hover');\n    var node = null;\n    var scrollParent;\n    if (parent.targetModule === 'navigationpane') {\n        node = closest(args.target, 'li');\n        node.classList.add(CLS.HOVER, CLS.DROP_FOLDER);\n        canDrop = true;\n        /* istanbul ignore next */\n        parent.treeExpandTimer = window.setTimeout(function () { parent.notify(events.dragging, args); }, 800);\n        scrollParent = parent.navigationpaneModule.treeObj.element.parentElement;\n        scrollHandler(scrollParent, parent, 'e-level-2', args.event.y);\n    }\n    else if (parent.targetModule === 'detailsview') {\n        node = closest(args.target, 'tr');\n        if (node && node.querySelector('.' + CLS.FOLDER) && !node.classList.contains(CLS.BLUR)) {\n            node.classList.add(CLS.DROP_FOLDER);\n        }\n        else if (node && !node.querySelector('.' + CLS.FOLDER) && !node.classList.contains(CLS.BLUR)) {\n            node.classList.add(CLS.DROP_FILE);\n        }\n        canDrop = true;\n        scrollParent = parent.detailsviewModule.gridObj.element.querySelector('.e-content');\n        scrollHandler(scrollParent, parent, 'e-row', args.event.y);\n    }\n    else if (parent.targetModule === 'largeiconsview') {\n        node = closest(args.target, 'li');\n        if (node && node.querySelector('.' + CLS.FOLDER) && !node.classList.contains(CLS.BLUR)) {\n            node.classList.add(CLS.HOVER, CLS.DROP_FOLDER);\n        }\n        canDrop = true;\n        scrollParent = parent.largeiconsviewModule.element.firstElementChild;\n        scrollHandler(scrollParent, parent, 'e-large-icon', args.event.y);\n        /* istanbul ignore next */\n    }\n    else if (parent.targetModule === 'breadcrumbbar') {\n        canDrop = true;\n    }\n    parent.element.classList.remove('e-fe-drop', 'e-no-drop');\n    parent.element.classList.add(canDrop ? 'e-fe-drop' : 'e-no-drop');\n    parent.dragCount = parent.dragCount + 1;\n    parent.trigger('fileDragging', dragArgs);\n}\n/**\n * Object to string handler\n *\n * @param {Object} data - specifies the data.\n * @returns {string} returns string converted from Object.\n * @private\n */\n// Ignored the message key value in permission object\nexport function objectToString(data) {\n    var str = '';\n    var keys = Object.keys(data);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'message') {\n            str += (i === 0 ? '' : ', ') + keys[i] + ': ' + getValue(keys[i], data);\n        }\n    }\n    return str;\n}\n/**\n * Get item name handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object} data - specifies the data.\n * @returns {string} returns the item name.\n * @private\n */\nexport function getItemName(parent, data) {\n    if (parent.hasId) {\n        return getValue('id', data);\n    }\n    return getName(parent, data);\n}\n/**\n * Get item name handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object} data - specifies the data.\n * @returns {void}\n * @private\n */\nexport function updateRenamingData(parent, data) {\n    parent.itemData = [data];\n    parent.currentItemText = getValue('name', data);\n    parent.isFile = getValue('isFile', data);\n    parent.filterPath = getValue('filterPath', data);\n}\n/**\n * Get item name handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function doRename(parent) {\n    if (!hasEditAccess(parent.itemData[0])) {\n        createDeniedDialog(parent, parent.itemData[0], events.permissionEdit);\n    }\n    else {\n        createDialog(parent, 'Rename');\n    }\n}\n/* istanbul ignore next */\n/**\n * Download handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function doDownload(parent) {\n    var items = parent.itemData;\n    for (var i = 0; i < items.length; i++) {\n        if (!hasDownloadAccess(items[i])) {\n            createDeniedDialog(parent, items[i], events.permissionDownload);\n            return;\n        }\n    }\n    if (parent.selectedItems.length > 0) {\n        Download(parent, parent.path, parent.selectedItems);\n    }\n}\n/**\n * Delete Files handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object[]} data - specifies the data.\n * @param {string[]} newIds - specifies the new Ids.\n * @returns {void}\n * @private\n */\nexport function doDeleteFiles(parent, data, newIds) {\n    for (var i = 0; i < data.length; i++) {\n        if (!hasEditAccess(data[i])) {\n            createDeniedDialog(parent, data[i], events.permissionEdit);\n            return;\n        }\n    }\n    parent.itemData = data;\n    Delete(parent, newIds, parent.path, 'delete');\n}\n/* istanbul ignore next */\n/**\n * Download files handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object[]} data - specifies the data.\n * @param {string[]} newIds - specifies the new Ids.\n * @returns {void}\n * @private\n */\nexport function doDownloadFiles(parent, data, newIds) {\n    for (var i = 0; i < data.length; i++) {\n        if (!hasDownloadAccess(data[i])) {\n            createDeniedDialog(parent, data[i], events.permissionDownload);\n            return;\n        }\n    }\n    parent.itemData = data;\n    if (newIds.length > 0) {\n        Download(parent, parent.path, newIds);\n    }\n}\n/**\n * Download files handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object} data - specifies the data.\n * @param {string} action - specifies the actions.\n * @returns {void}\n * @private\n */\nexport function createDeniedDialog(parent, data, action) {\n    var message = getValue('message', getValue('permission', data));\n    if (message === '') {\n        message = getLocaleText(parent, 'Access-Message').replace('{0}', getValue('name', data)).replace('{1}', action);\n    }\n    var response = {\n        error: {\n            code: '401',\n            fileExists: null,\n            message: message\n        }\n    };\n    createDialog(parent, 'Error', response);\n}\n/**\n * Get Access Classes\n *\n * @param {Object} data - specifies the data.\n * @returns {string} - returns accesses classes.\n * @private\n */\nexport function getAccessClass(data) {\n    return !hasReadAccess(data) ? 'e-fe-locked e-fe-hidden' : 'e-fe-locked';\n}\n/**\n * Check read access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns read access.\n * @private\n */\nexport function hasReadAccess(data) {\n    var permission = getValue('permission', data);\n    return (permission && !getValue('read', permission)) ? false : true;\n}\n/**\n * Check edit access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns edit access.\n * @private\n */\nexport function hasEditAccess(data) {\n    var permission = getValue('permission', data);\n    return permission ? ((getValue('read', permission) && getValue('write', permission))) : true;\n}\n/**\n * Check content access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns content access.\n * @private\n */\nexport function hasContentAccess(data) {\n    var permission = getValue('permission', data);\n    return permission ? ((getValue('read', permission) && getValue('writeContents', permission))) : true;\n}\n/**\n * Check upload access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns upload access.\n * @private\n */\nexport function hasUploadAccess(data) {\n    var permission = getValue('permission', data);\n    return permission ? ((getValue('read', permission) && getValue('upload', permission))) : true;\n}\n/**\n * Check download access handler\n *\n * @param {Object} data - specifies the data.\n * @returns {boolean} - returns download access.\n * @private\n */\nexport function hasDownloadAccess(data) {\n    var permission = getValue('permission', data);\n    return permission ? ((getValue('read', permission) && getValue('download', permission))) : true;\n}\n/**\n * Create new folder handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function createNewFolder(parent) {\n    var details = parent.itemData[0];\n    if (!hasContentAccess(details)) {\n        createDeniedDialog(parent, details, events.permissionEditContents);\n    }\n    else {\n        createDialog(parent, 'NewFolder');\n    }\n}\n/**\n * Upload item handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function uploadItem(parent) {\n    var details = parent.itemData[0];\n    if (!hasUploadAccess(details)) {\n        createDeniedDialog(parent, details, events.permissionUpload);\n    }\n    else {\n        var eleId = '#' + parent.element.id + CLS.UPLOAD_ID;\n        var uploadEle = document.querySelector(eleId);\n        uploadEle.click();\n    }\n}\n/**\n * Close dialog popup handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @returns {void}\n * @private\n */\nexport function closePopup(parent) {\n    if (!isNullOrUndefined(parent.dialogObj)) {\n        parent.dialogObj.hide();\n    }\n}\n/**\n * Access control handler\n *\n * @param {IFileManager} parent - specifies the parent.\n * @param {Object[]} itemData - specifies the item elements.\n * @param {string} action - specifies the action.\n * @param {boolean} isPathPermision - specifies the path permission.\n * @returns {string} returns the path.\n * @private\n */\nexport function getAccessDetails(parent, itemData, action, isPathPermision) {\n    var accessMessage = '';\n    for (var i = 0; i < itemData.length; i++) {\n        var permission = getValue('permission', itemData[i]);\n        if (permission == null) {\n            permission = undefined;\n        }\n        if (isPathPermision) {\n            if (permission && (!getValue('read', permission) || !getValue('writeContents', permission))) {\n                accessMessage = getValue('message', getValue('permission', itemData[i]));\n                if (accessMessage === '') {\n                    accessMessage = getLocaleText(parent, 'Access-Message').replace('{0}', getValue('name', itemData[i])).replace('{1}', 'writeContents');\n                }\n            }\n        }\n        else {\n            var copyOrMovePermission = action === 'copy' ? getValue('copy', permission) : getValue('write', permission);\n            if (permission && (!getValue('read', permission) || !copyOrMovePermission)) {\n                accessMessage = getValue('message', getValue('permission', itemData[i]));\n                if (accessMessage === '') {\n                    accessMessage = getLocaleText(parent, 'Access-Message').replace('{0}', getValue('name', itemData[i])).replace('{1}', action);\n                }\n            }\n        }\n        if (accessMessage !== '') {\n            parent.responseData = {\n                cwd: null,\n                details: null,\n                error: {\n                    code: '401',\n                    message: accessMessage,\n                    fileExists: null\n                },\n                files: null\n            };\n            break;\n        }\n    }\n    return accessMessage;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}