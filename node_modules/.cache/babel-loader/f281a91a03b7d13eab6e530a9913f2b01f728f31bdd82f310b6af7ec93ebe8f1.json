{"ast":null,"code":"import TaskListExpander from '../Expander.vue';\nimport ItemColumn from './ItemColumn.vue';\nexport default {\n  name: 'TaskListItem',\n  components: {\n    TaskListExpander,\n    ItemColumn\n  },\n  inject: ['root'],\n  props: ['task'],\n  data() {\n    return {};\n  },\n  computed: {\n    columns() {\n      return this.root.state.options.taskList.columns;\n    }\n  }\n};","map":{"version":3,"names":["TaskListExpander","ItemColumn","name","components","inject","props","data","computed","columns","root","state","options","taskList"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/TaskList/TaskListItem.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview TaskListItem component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div class=\"gantt-elastic__task-list-item\" :style=\"{ ...root.style['task-list-item'] }\">\n    <item-column v-for=\"column in columns\" :key=\"column._id\" :column=\"column\" :task=\"task\">\n      <task-list-expander\n        v-if=\"column.expander\"\n        :tasks=\"[task]\"\n        :options=\"root.state.options.taskList.expander\"\n        type=\"taskList\"\n      ></task-list-expander>\n    </item-column>\n  </div>\n</template>\n<script>\nimport TaskListExpander from '../Expander.vue';\nimport ItemColumn from './ItemColumn.vue';\n\nexport default {\n  name: 'TaskListItem',\n  components: {\n    TaskListExpander,\n    ItemColumn\n  },\n  inject: ['root'],\n  props: ['task'],\n  data() {\n    return {};\n  },\n  computed: {\n    columns() {\n      return this.root.state.options.taskList.columns;\n    }\n  }\n};\n</script>\n"],"mappings":"AAqBA,OAAOA,gBAAe,MAAO,iBAAiB;AAC9C,OAAOC,UAAS,MAAO,kBAAkB;AAEzC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVH,gBAAgB;IAChBC;EACF,CAAC;EACDG,MAAM,EAAE,CAAC,MAAM,CAAC;EAChBC,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO,CAAC,CAAC;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACJ,OAAO;IACjD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}