{"ast":null,"code":"import ChartText from '../Text.vue';\nimport ProgressBar from '../ProgressBar.vue';\nimport Expander from '../../Expander.vue';\nimport taskMixin from './Task.mixin.js';\nexport default {\n  name: 'Project',\n  components: {\n    ChartText,\n    ProgressBar,\n    Expander\n  },\n  inject: ['root'],\n  props: ['task'],\n  mixins: [taskMixin],\n  data() {\n    return {};\n  },\n  computed: {\n    /**\n     * Get clip path id\n     *\n     * @returns {string}\n     */\n    clipPathId() {\n      return 'gantt-elastic__project-clip-path-' + this.task.id;\n    },\n    /**\n     * Get points\n     *\n     * @returns {string}\n     */\n    getPoints() {\n      const task = this.task;\n      const bottom = task.height - task.height / 4;\n      const corner = task.height / 6;\n      const smallCorner = task.height / 8;\n      return `M ${smallCorner},0\n                L ${task.width - smallCorner} 0\n                L ${task.width} ${smallCorner}\n                L ${task.width} ${bottom}\n                L ${task.width - corner} ${task.height}\n                L ${task.width - corner * 2} ${bottom}\n                L ${corner * 2} ${bottom}\n                L ${corner} ${task.height}\n                L 0 ${bottom}\n                L 0 ${smallCorner}\n                Z\n        `;\n    },\n    /**\n     * Should we display expander?\n     *\n     * @returns {boolean}\n     */\n    displayExpander() {\n      const expander = this.root.state.options.chart.expander;\n      return expander.display || expander.displayIfTaskListHidden && !this.root.state.options.taskList.display;\n    }\n  }\n};","map":{"version":3,"names":["ChartText","ProgressBar","Expander","taskMixin","name","components","inject","props","mixins","data","computed","clipPathId","task","id","getPoints","bottom","height","corner","smallCorner","width","displayExpander","expander","root","state","options","chart","display","displayIfTaskListHidden","taskList"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Chart/Row/Project.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview Project component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <g\n    class=\"gantt-elastic__chart-row-bar-wrapper gantt-elastic__chart-row-project-wrapper\"\n    :style=\"{\n      ...root.style['chart-row-bar-wrapper'],\n      ...root.style['chart-row-project-wrapper'],\n      ...task.style['chart-row-bar-wrapper']\n    }\"\n  >\n    <foreignObject\n      class=\"gantt-elastic__chart-expander gantt-elastic__chart-expander--project\"\n      :style=\"{\n        ...root.style['chart-expander'],\n        ...root.style['chart-expander--project'],\n        ...task.style['chart-expander']\n      }\"\n      :x=\"task.x - root.state.options.chart.expander.offset - root.state.options.chart.expander.size\"\n      :y=\"task.y + (root.state.options.row.height - root.state.options.chart.expander.size) / 2\"\n      :width=\"root.state.options.chart.expander.size\"\n      :height=\"root.state.options.chart.expander.size\"\n      v-if=\"displayExpander\"\n    >\n      <expander :tasks=\"[task]\" :options=\"root.state.options.chart.expander\" type=\"chart\"></expander>\n    </foreignObject>\n    <svg\n      class=\"gantt-elastic__chart-row-bar gantt-elastic__chart-row-project\"\n      :style=\"{ ...root.style['chart-row-bar'], ...root.style['chart-row-project'], ...task.style['chart-row-bar'] }\"\n      :x=\"task.x\"\n      :y=\"task.y\"\n      :width=\"task.width\"\n      :height=\"task.height\"\n      :viewBox=\"`0 0 ${task.width} ${task.height}`\"\n      @click=\"emitEvent('click', $event)\"\n      @mouseenter=\"emitEvent('mouseenter', $event)\"\n      @mouseover=\"emitEvent('mouseover', $event)\"\n      @mouseout=\"emitEvent('mouseout', $event)\"\n      @mousemove=\"emitEvent('mousemove', $event)\"\n      @mousedown=\"emitEvent('mousedown', $event)\"\n      @mouseup=\"emitEvent('mouseup', $event)\"\n      @mousewheel=\"emitEvent('mousewheel', $event)\"\n      @touchstart=\"emitEvent('touchstart', $event)\"\n      @touchmove=\"emitEvent('touchmove', $event)\"\n      @touchend=\"emitEvent('touchend', $event)\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <defs>\n        <clipPath :id=\"clipPathId\">\n          <path :d=\"getPoints\"></path>\n        </clipPath>\n      </defs>\n      <path\n        class=\"gantt-elastic__chart-row-bar-polygon gantt-elastic__chart-row-project-polygon\"\n        :style=\"{\n          ...root.style['chart-row-bar-polygon'],\n          ...root.style['chart-row-project-polygon'],\n          ...task.style['base'],\n          ...task.style['chart-row-bar-polygon']\n        }\"\n        :d=\"getPoints\"\n      ></path>\n      <progress-bar :task=\"task\" :clip-path=\"'url(#' + clipPathId + ')'\"></progress-bar>\n    </svg>\n    <chart-text :task=\"task\" v-if=\"root.state.options.chart.text.display\"></chart-text>\n  </g>\n</template>\n\n<script>\nimport ChartText from '../Text.vue';\nimport ProgressBar from '../ProgressBar.vue';\nimport Expander from '../../Expander.vue';\nimport taskMixin from './Task.mixin.js';\nexport default {\n  name: 'Project',\n  components: {\n    ChartText,\n    ProgressBar,\n    Expander\n  },\n  inject: ['root'],\n  props: ['task'],\n  mixins: [taskMixin],\n  data() {\n    return {};\n  },\n  computed: {\n    /**\n     * Get clip path id\n     *\n     * @returns {string}\n     */\n    clipPathId() {\n      return 'gantt-elastic__project-clip-path-' + this.task.id;\n    },\n\n    /**\n     * Get points\n     *\n     * @returns {string}\n     */\n    getPoints() {\n      const task = this.task;\n      const bottom = task.height - task.height / 4;\n      const corner = task.height / 6;\n      const smallCorner = task.height / 8;\n      return `M ${smallCorner},0\n                L ${task.width - smallCorner} 0\n                L ${task.width} ${smallCorner}\n                L ${task.width} ${bottom}\n                L ${task.width - corner} ${task.height}\n                L ${task.width - corner * 2} ${bottom}\n                L ${corner * 2} ${bottom}\n                L ${corner} ${task.height}\n                L 0 ${bottom}\n                L 0 ${smallCorner}\n                Z\n        `;\n    },\n\n    /**\n     * Should we display expander?\n     *\n     * @returns {boolean}\n     */\n    displayExpander() {\n      const expander = this.root.state.options.chart.expander;\n      return expander.display || (expander.displayIfTaskListHidden && !this.root.state.options.taskList.display);\n    }\n  }\n};\n</script>\n"],"mappings":"AA2EA,OAAOA,SAAQ,MAAO,aAAa;AACnC,OAAOC,WAAU,MAAO,oBAAoB;AAC5C,OAAOC,QAAO,MAAO,oBAAoB;AACzC,OAAOC,SAAQ,MAAO,iBAAiB;AACvC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE;IACVL,SAAS;IACTC,WAAW;IACXC;EACF,CAAC;EACDI,MAAM,EAAE,CAAC,MAAM,CAAC;EAChBC,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,MAAM,EAAE,CAACL,SAAS,CAAC;EACnBM,IAAIA,CAAA,EAAG;IACL,OAAO,CAAC,CAAC;EACX,CAAC;EACDC,QAAQ,EAAE;IACR;;;;;IAKAC,UAAUA,CAAA,EAAG;MACX,OAAO,mCAAkC,GAAI,IAAI,CAACC,IAAI,CAACC,EAAE;IAC3D,CAAC;IAED;;;;;IAKAC,SAASA,CAAA,EAAG;MACV,MAAMF,IAAG,GAAI,IAAI,CAACA,IAAI;MACtB,MAAMG,MAAK,GAAIH,IAAI,CAACI,MAAK,GAAIJ,IAAI,CAACI,MAAK,GAAI,CAAC;MAC5C,MAAMC,MAAK,GAAIL,IAAI,CAACI,MAAK,GAAI,CAAC;MAC9B,MAAME,WAAU,GAAIN,IAAI,CAACI,MAAK,GAAI,CAAC;MACnC,OAAO,KAAKE,WAAW;oBACTN,IAAI,CAACO,KAAI,GAAID,WAAW;oBACxBN,IAAI,CAACO,KAAK,IAAID,WAAW;oBACzBN,IAAI,CAACO,KAAK,IAAIJ,MAAM;oBACpBH,IAAI,CAACO,KAAI,GAAIF,MAAM,IAAIL,IAAI,CAACI,MAAM;oBAClCJ,IAAI,CAACO,KAAI,GAAIF,MAAK,GAAI,CAAC,IAAIF,MAAM;oBACjCE,MAAK,GAAI,CAAC,IAAIF,MAAM;oBACpBE,MAAM,IAAIL,IAAI,CAACI,MAAM;sBACnBD,MAAM;sBACNG,WAAW;;SAExB;IACL,CAAC;IAED;;;;;IAKAE,eAAeA,CAAA,EAAG;MAChB,MAAMC,QAAO,GAAI,IAAI,CAACC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAACJ,QAAQ;MACvD,OAAOA,QAAQ,CAACK,OAAM,IAAML,QAAQ,CAACM,uBAAsB,IAAK,CAAC,IAAI,CAACL,IAAI,CAACC,KAAK,CAACC,OAAO,CAACI,QAAQ,CAACF,OAAQ;IAC5G;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}