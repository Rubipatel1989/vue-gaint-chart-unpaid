{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"column\"];\nconst _hoisted_2 = [\"column\", \"onMousedown\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_task_list_expander = _resolveComponent(\"task-list-expander\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"gantt-elastic__task-list-header\",\n    style: _normalizeStyle({\n      ...$options.root.style['task-list-header'],\n      height: `${$options.root.state.options.calendar.height}px`,\n      'margin-bottom': `${$options.root.state.options.calendar.gap}px`\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.root.getTaskListColumns, column => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"gantt-elastic__task-list-header-column\",\n      style: _normalizeStyle({\n        ...$options.root.style['task-list-header-column'],\n        ...column.style['task-list-header-column'],\n        ...$options.getStyle(column)\n      }),\n      key: column._id\n    }, [column.expander ? (_openBlock(), _createBlock(_component_task_list_expander, {\n      key: 0,\n      tasks: $options.collapsible,\n      options: $options.root.state.options.taskList.expander\n    }, null, 8 /* PROPS */, [\"tasks\", \"options\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", {\n      class: \"gantt-elastic__task-list-header-label\",\n      style: _normalizeStyle({\n        ...$options.root.style['task-list-header-label'],\n        ...column.style['task-list-header-label']\n      }),\n      column: column,\n      onMouseup: _cache[0] || (_cache[0] = (...args) => $options.resizerMouseUp && $options.resizerMouseUp(...args))\n    }, _toDisplayString(column.label), 45 /* TEXT, STYLE, PROPS, NEED_HYDRATION */, _hoisted_1), _createElementVNode(\"div\", {\n      class: \"gantt-elastic__task-list-header-resizer-wrapper\",\n      style: _normalizeStyle({\n        ...$options.root.style['task-list-header-resizer-wrapper'],\n        ...column.style['task-list-header-resizer-wrapper']\n      }),\n      column: column,\n      onMousedown: $event => $options.resizerMouseDown($event, column)\n    }, [_createElementVNode(\"div\", {\n      class: \"gantt-elastic__task-list-header-resizer\",\n      style: _normalizeStyle({\n        ...$options.root.style['task-list-header-resizer'],\n        ...column.style['task-list-header-resizer']\n      })\n    }, [_createElementVNode(\"div\", {\n      class: \"gantt-elastic__task-list-header-resizer-dot\",\n      style: _normalizeStyle({\n        ...$options.root.style['task-list-header-resizer-dot'],\n        ...column.style['task-list-header-resizer-dot']\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n      class: \"gantt-elastic__task-list-header-resizer-dot\",\n      style: _normalizeStyle({\n        ...$options.root.style['task-list-header-resizer-dot'],\n        ...column.style['task-list-header-resizer-dot']\n      })\n    }, null, 4 /* STYLE */), _createElementVNode(\"div\", {\n      class: \"gantt-elastic__task-list-header-resizer-dot\",\n      style: _normalizeStyle({\n        ...$options.root.style['task-list-header-resizer-dot'],\n        ...column.style['task-list-header-resizer-dot']\n      })\n    }, null, 4 /* STYLE */)], 4 /* STYLE */)], 44 /* STYLE, PROPS, NEED_HYDRATION */, _hoisted_2)], 4 /* STYLE */);\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","class","style","_normalizeStyle","$options","root","state","options","calendar","height","gap","_Fragment","_renderList","getTaskListColumns","column","getStyle","key","_id","expander","_createBlock","_component_task_list_expander","tasks","collapsible","taskList","_createCommentVNode","_createElementVNode","onMouseup","_cache","args","resizerMouseUp","label","_hoisted_1","onMousedown","$event","resizerMouseDown","_hoisted_2"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/TaskList/TaskListHeader.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview TaskListHeader component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div\n    class=\"gantt-elastic__task-list-header\"\n    :style=\"{\n      ...root.style['task-list-header'],\n      height: `${root.state.options.calendar.height}px`,\n      'margin-bottom': `${root.state.options.calendar.gap}px`\n    }\"\n  >\n    <div\n      class=\"gantt-elastic__task-list-header-column\"\n      :style=\"{\n        ...root.style['task-list-header-column'],\n        ...column.style['task-list-header-column'],\n        ...getStyle(column)\n      }\"\n      v-for=\"column in root.getTaskListColumns\"\n      :key=\"column._id\"\n    >\n      <task-list-expander\n        v-if=\"column.expander\"\n        :tasks=\"collapsible\"\n        :options=\"root.state.options.taskList.expander\"\n      ></task-list-expander>\n      <div\n        class=\"gantt-elastic__task-list-header-label\"\n        :style=\"{ ...root.style['task-list-header-label'], ...column.style['task-list-header-label'] }\"\n        :column=\"column\"\n        @mouseup=\"resizerMouseUp\"\n      >\n        {{ column.label }}\n      </div>\n      <div\n        class=\"gantt-elastic__task-list-header-resizer-wrapper\"\n        :style=\"{\n          ...root.style['task-list-header-resizer-wrapper'],\n          ...column.style['task-list-header-resizer-wrapper']\n        }\"\n        :column=\"column\"\n        @mousedown=\"resizerMouseDown($event, column)\"\n      >\n        <div\n          class=\"gantt-elastic__task-list-header-resizer\"\n          :style=\"{ ...root.style['task-list-header-resizer'], ...column.style['task-list-header-resizer'] }\"\n        >\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TaskListExpander from '../Expander.vue';\nexport default {\n  name: 'TaskListHeader',\n  components: {\n    TaskListExpander\n  },\n\n  inject: ['root'],\n\n  data() {\n    return {\n      resizer: {\n        moving: false,\n        x: 0\n      }\n    };\n  },\n\n  computed: {\n    /**\n     * Is this row collapsible?\n     *\n     * @returns {bool}\n     */\n    collapsible() {\n      return this.root.state.tasks.filter(task => task.allChildren.length > 0);\n    }\n  },\n\n  methods: {\n    /**\n     * Get style\n     *\n     * @returns {object}\n     */\n    getStyle(column) {\n      return {\n        width: column.finalWidth + 'px'\n      };\n    },\n    /**\n     * Resizer mouse down event handler\n     */\n    resizerMouseDown(event, column) {\n      if (!this.resizer.moving) {\n        this.resizer.moving = column;\n        this.resizer.x = event.clientX;\n        this.resizer.initialWidth = column.width;\n        this.root.$emit('taskList-column-width-change-start', this.resizer.moving);\n      }\n    },\n\n    /**\n     * Resizer mouse move event handler\n     */\n    resizerMouseMove(event) {\n      if (this.resizer.moving) {\n        const lastWidth = this.resizer.moving.width;\n        this.resizer.moving.width = this.resizer.initialWidth + event.clientX - this.resizer.x;\n        if (this.resizer.moving.width < this.root.state.options.taskList.minWidth) {\n          this.resizer.moving.width = this.root.state.options.taskList.minWidth;\n        }\n        if (lastWidth !== this.resizer.moving.width) {\n          this.root.$emit('taskList-column-width-change', this.resizer.moving);\n        }\n      }\n    },\n\n    /**\n     * Resizer mouse up event handler\n     */\n    resizerMouseUp(event) {\n      if (this.resizer.moving) {\n        this.root.$emit('taskList-column-width-change-stop', this.resizer.moving);\n        this.resizer.moving = false;\n      }\n    }\n  },\n\n  /**\n   * Created\n   */\n  created() {\n    this.mouseUpListener = document.addEventListener('mouseup', this.resizerMouseUp.bind(this));\n    this.mouseMoveListener = document.addEventListener('mousemove', this.resizerMouseMove.bind(this));\n    this.root.$on('main-view-mousemove', this.resizerMouseMove);\n    this.root.$on('main-view-mouseup', this.resizerMouseUp);\n  },\n\n  /**\n   * Before destroy event - clear all event listeners\n   */\n  beforeDestroy() {\n    document.removeEventListener('mouseup', this.resizerMouseUp);\n    document.removeEventListener('mousemove', this.resizerMouseMove);\n  }\n};\n</script>\n"],"mappings":";mBAAA;mBAAA;;;uBASEA,mBAAA,CA2DM;IA1DJC,KAAK,EAAC,iCAAiC;IACtCC,KAAK,EAXVC,eAAA;SAWuBC,QAAA,CAAAC,IAAI,CAACH,KAAK;iBAAuCE,QAAA,CAAAC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACC,MAAM;0BAAgCL,QAAA,CAAAC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,QAAQ,CAACE,GAAG;;yBAMrKV,mBAAA,CAkDMW,SAAA,QAnEVC,WAAA,CAwBuBR,QAAA,CAAAC,IAAI,CAACQ,kBAAkB,EAAjCC,MAAM;yBAPfd,mBAAA,CAkDM;MAjDJC,KAAK,EAAC,wCAAwC;MAC7CC,KAAK,EAnBZC,eAAA;WAmB2BC,QAAA,CAAAC,IAAI,CAACH,KAAK;WAAwCY,MAAM,CAACZ,KAAK;WAAwCE,QAAA,CAAAW,QAAQ,CAACD,MAAM;;MAMzIE,GAAG,EAAEF,MAAM,CAACG;QAGLH,MAAM,CAACI,QAAQ,I,cADvBC,YAAA,CAIsBC,6BAAA;MA/B5BJ,GAAA;MA6BSK,KAAK,EAAEjB,QAAA,CAAAkB,WAAW;MAClBf,OAAO,EAAEH,QAAA,CAAAC,IAAI,CAACC,KAAK,CAACC,OAAO,CAACgB,QAAQ,CAACL;qDA9B9CM,mBAAA,gBAgCMC,mBAAA,CAOM;MANJxB,KAAK,EAAC,uCAAuC;MAC5CC,KAAK,EAlCdC,eAAA;QAAA,GAkCqBC,QAAA,CAAAC,IAAI,CAACH,KAAK;QAAA,GAA+BY,MAAM,CAACZ,KAAK;MAAA;MACjEY,MAAM,EAAEA,MAAM;MACdY,SAAO,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAExB,QAAA,CAAAyB,cAAA,IAAAzB,QAAA,CAAAyB,cAAA,IAAAD,IAAA,CAAc;wBAErBd,MAAM,CAACgB,KAAK,gDAtCvBC,UAAA,GAwCMN,mBAAA,CA0BM;MAzBJxB,KAAK,EAAC,iDAAiD;MACtDC,KAAK,EA1CdC,eAAA;WA0C+BC,QAAA,CAAAC,IAAI,CAACH,KAAK;WAAmDY,MAAM,CAACZ,KAAK;;MAI/FY,MAAM,EAAEA,MAAM;MACdkB,WAAS,EAAAC,MAAA,IAAE7B,QAAA,CAAA8B,gBAAgB,CAACD,MAAM,EAAEnB,MAAM;QAE3CW,mBAAA,CAgBM;MAfJxB,KAAK,EAAC,yCAAyC;MAC9CC,KAAK,EAnDhBC,eAAA;QAAA,GAmDuBC,QAAA,CAAAC,IAAI,CAACH,KAAK;QAAA,GAAiCY,MAAM,CAACZ,KAAK;MAAA;QAEpEuB,mBAAA,CAGO;MAFLxB,KAAK,EAAC,6CAA6C;MAClDC,KAAK,EAvDlBC,eAAA;QAAA,GAuDyBC,QAAA,CAAAC,IAAI,CAACH,KAAK;QAAA,GAAqCY,MAAM,CAACZ,KAAK;MAAA;6BAE1EuB,mBAAA,CAGO;MAFLxB,KAAK,EAAC,6CAA6C;MAClDC,KAAK,EA3DlBC,eAAA;QAAA,GA2DyBC,QAAA,CAAAC,IAAI,CAACH,KAAK;QAAA,GAAqCY,MAAM,CAACZ,KAAK;MAAA;6BAE1EuB,mBAAA,CAGO;MAFLxB,KAAK,EAAC,6CAA6C;MAClDC,KAAK,EA/DlBC,eAAA;QAAA,GA+DyBC,QAAA,CAAAC,IAAI,CAACH,KAAK;QAAA,GAAqCY,MAAM,CAACZ,KAAK;MAAA;sFA/DpFiC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}