{"ast":null,"code":"import { isNullOrUndefined, getEnumValue } from '@syncfusion/ej2-base';\nimport { RenderType } from '../base/enum';\n/**\n * RendererFactory\n *\n * @hidden\n\n */\nvar RendererFactory = /** @class */function () {\n  function RendererFactory() {\n    this.rendererMap = {};\n  }\n  /**\n   * addRenderer method\n   *\n   * @param {RenderType} name - specifies the render type\n   * @param {IRenderer} type - specifies the renderer.\n   * @returns {void}\n   * @hidden\n    */\n  RendererFactory.prototype.addRenderer = function (name, type) {\n    var rName = getEnumValue(RenderType, name);\n    if (isNullOrUndefined(this.rendererMap[\"\" + rName])) {\n      this.rendererMap[\"\" + rName] = type;\n    }\n  };\n  /**\n   * getRenderer method\n   *\n   * @param {RenderType} name - specifies the render type\n   * @returns {void}\n   * @hidden\n    */\n  RendererFactory.prototype.getRenderer = function (name) {\n    var rName = getEnumValue(RenderType, name);\n    if (isNullOrUndefined(this.rendererMap[\"\" + rName])) {\n      // eslint-disable-next-line\n      throw \"The renderer \" + rName + \" is not found\";\n    } else {\n      return this.rendererMap[\"\" + rName];\n    }\n  };\n  RendererFactory.prototype.destroy = function () {\n    this.rendererMap = {};\n  };\n  return RendererFactory;\n}();\nexport { RendererFactory };","map":{"version":3,"names":["isNullOrUndefined","getEnumValue","RenderType","RendererFactory","rendererMap","prototype","addRenderer","name","type","rName","getRenderer","destroy"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/rich-text-editor/services/renderer-factory.js"],"sourcesContent":["import { isNullOrUndefined, getEnumValue } from '@syncfusion/ej2-base';\nimport { RenderType } from '../base/enum';\n/**\n * RendererFactory\n *\n * @hidden\n\n */\nvar RendererFactory = /** @class */ (function () {\n    function RendererFactory() {\n        this.rendererMap = {};\n    }\n    /**\n     * addRenderer method\n     *\n     * @param {RenderType} name - specifies the render type\n     * @param {IRenderer} type - specifies the renderer.\n     * @returns {void}\n     * @hidden\n\n     */\n    RendererFactory.prototype.addRenderer = function (name, type) {\n        var rName = getEnumValue(RenderType, name);\n        if (isNullOrUndefined(this.rendererMap[\"\" + rName])) {\n            this.rendererMap[\"\" + rName] = type;\n        }\n    };\n    /**\n     * getRenderer method\n     *\n     * @param {RenderType} name - specifies the render type\n     * @returns {void}\n     * @hidden\n\n     */\n    RendererFactory.prototype.getRenderer = function (name) {\n        var rName = getEnumValue(RenderType, name);\n        if (isNullOrUndefined(this.rendererMap[\"\" + rName])) {\n            // eslint-disable-next-line\n            throw \"The renderer \" + rName + \" is not found\";\n        }\n        else {\n            return this.rendererMap[\"\" + rName];\n        }\n    };\n    RendererFactory.prototype.destroy = function () {\n        this.rendererMap = {};\n    };\n    return RendererFactory;\n}());\nexport { RendererFactory };\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,YAAY,QAAQ,sBAAsB;AACtE,SAASC,UAAU,QAAQ,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,eAAe,GAAG,aAAe,YAAY;EAC7C,SAASA,eAAeA,CAAA,EAAG;IACvB,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEID,eAAe,CAACE,SAAS,CAACC,WAAW,GAAG,UAAUC,IAAI,EAAEC,IAAI,EAAE;IAC1D,IAAIC,KAAK,GAAGR,YAAY,CAACC,UAAU,EAAEK,IAAI,CAAC;IAC1C,IAAIP,iBAAiB,CAAC,IAAI,CAACI,WAAW,CAAC,EAAE,GAAGK,KAAK,CAAC,CAAC,EAAE;MACjD,IAAI,CAACL,WAAW,CAAC,EAAE,GAAGK,KAAK,CAAC,GAAGD,IAAI;IACvC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EAEIL,eAAe,CAACE,SAAS,CAACK,WAAW,GAAG,UAAUH,IAAI,EAAE;IACpD,IAAIE,KAAK,GAAGR,YAAY,CAACC,UAAU,EAAEK,IAAI,CAAC;IAC1C,IAAIP,iBAAiB,CAAC,IAAI,CAACI,WAAW,CAAC,EAAE,GAAGK,KAAK,CAAC,CAAC,EAAE;MACjD;MACA,MAAM,eAAe,GAAGA,KAAK,GAAG,eAAe;IACnD,CAAC,MACI;MACD,OAAO,IAAI,CAACL,WAAW,CAAC,EAAE,GAAGK,KAAK,CAAC;IACvC;EACJ,CAAC;EACDN,eAAe,CAACE,SAAS,CAACM,OAAO,GAAG,YAAY;IAC5C,IAAI,CAACP,WAAW,GAAG,CAAC,CAAC;EACzB,CAAC;EACD,OAAOD,eAAe;AAC1B,CAAC,CAAC,CAAE;AACJ,SAASA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}