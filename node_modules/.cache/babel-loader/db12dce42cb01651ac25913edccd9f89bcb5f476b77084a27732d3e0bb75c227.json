{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Chart = _resolveComponent(\"Chart\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Chart, {\n    type: \"bar\",\n    data: $setup.chartData,\n    options: $setup.chartOptions,\n    class: \"h-[30rem]\"\n  }, null, 8 /* PROPS */, [\"data\", \"options\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Chart","type","data","$setup","chartData","options","chartOptions"],"sources":["/var/www/vue/vue-gantt-chart/src/components/TimeGantt.vue"],"sourcesContent":["\n<template>\n       <div class=\"card\">\n           <Chart type=\"bar\" :data=\"chartData\" :options=\"chartOptions\" class=\"h-[30rem]\"  />\n       </div>\n   </template>\n   \n   <script setup>\n   import { ref, onMounted } from \"vue\";\n   \n   onMounted(() => {\n       chartData.value = setChartData();\n       chartOptions.value = setChartOptions();\n   });\n   \n   const chartData = ref();\n   const chartOptions = ref();\n   \n   const setChartData = () => {\n       const documentStyle = getComputedStyle(document.documentElement);\n   \n       return {\n           labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n           datasets: [\n               {\n                   label: 'My First dataset',\n                   backgroundColor: documentStyle.getPropertyValue('--p-cyan-500'),\n                   borderColor: documentStyle.getPropertyValue('--p-cyan-500'),\n                   data: [65, 59, 80, 81, 56, 55, 40]\n               },\n               {\n                   label: 'My Second dataset',\n                   backgroundColor: documentStyle.getPropertyValue('--p-gray-500'),\n                   borderColor: documentStyle.getPropertyValue('--p-gray-500'),\n                   data: [28, 48, 40, 19, 86, 27, 90]\n               }\n           ]\n       };\n   };\n   const setChartOptions = () => {\n       const documentStyle = getComputedStyle(document.documentElement);\n       const textColor = documentStyle.getPropertyValue('--p-text-color');\n       const textColorSecondary = documentStyle.getPropertyValue('--p-text-muted-color');\n       const surfaceBorder = documentStyle.getPropertyValue('--p-content-border-color');\n   \n       return {\n           maintainAspectRatio: false,\n           aspectRatio: 0.8,\n           plugins: {\n               legend: {\n                   labels: {\n                       color: textColor\n                   }\n               }\n           },\n           scales: {\n               x: {\n                   ticks: {\n                       color: textColorSecondary,\n                       font: {\n                           weight: 500\n                       }\n                   },\n                   grid: {\n                       display: false,\n                       drawBorder: false\n                   }\n               },\n               y: {\n                   ticks: {\n                       color: textColorSecondary\n                   },\n                   grid: {\n                       color: surfaceBorder,\n                       drawBorder: false\n                   }\n               }\n           }\n       };\n   }\n   </script>\n   "],"mappings":";;EAEYA,KAAK,EAAC;AAAM;;;uBAAjBC,mBAAA,CAEM,OAFNC,UAEM,GADFC,YAAA,CAAiFC,gBAAA;IAA1EC,IAAI,EAAC,KAAK;IAAEC,IAAI,EAAEC,MAAA,CAAAC,SAAS;IAAGC,OAAO,EAAEF,MAAA,CAAAG,YAAY;IAAEV,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}