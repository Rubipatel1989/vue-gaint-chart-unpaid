{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nexport default {\n  name: 'DependencyLines',\n  inject: ['root'],\n  props: ['tasks'],\n  data() {\n    return {};\n  },\n  methods: {\n    /**\n     * Get path points\n     *\n     * @param {any} fromTaskId\n     * @param {any} toTaskId\n     * @returns {string}\n     */\n    getPoints(fromTaskId, toTaskId) {\n      const fromTask = this.root.getTask(fromTaskId);\n      const toTask = this.root.getTask(toTaskId);\n      if (fromTask === null || toTask === null || !this.root.isTaskVisible(toTask) || !this.root.isTaskVisible(fromTask)) {\n        return null;\n      }\n      const startX = fromTask.x + fromTask.width;\n      const startY = fromTask.y + fromTask.height / 2;\n      const stopX = toTask.x;\n      const stopY = toTask.y + toTask.height / 2;\n      const distanceX = stopX - startX;\n      let distanceY;\n      let yMultiplier = 1;\n      if (stopY >= startY) {\n        distanceY = stopY - startY;\n      } else {\n        distanceY = startY - stopY;\n        yMultiplier = -1;\n      }\n      const offset = 10;\n      const roundness = 4;\n      const isBefore = distanceX <= offset + roundness;\n      let points = `M ${startX} ${startY}\n          L ${startX + offset},${startY} `;\n      if (isBefore) {\n        points += `Q ${startX + offset + roundness},${startY} ${startX + offset + roundness},${startY + roundness * yMultiplier}\n            L ${startX + offset + roundness},${startY + distanceY * yMultiplier / 2 - roundness * yMultiplier}\n            Q ${startX + offset + roundness},${startY + distanceY * yMultiplier / 2} ${startX + offset},${startY + distanceY * yMultiplier / 2}\n            L ${startX - offset + distanceX},${startY + distanceY * yMultiplier / 2}\n            Q ${startX - offset + distanceX - roundness},${startY + distanceY * yMultiplier / 2} ${startX - offset + distanceX - roundness},${startY + distanceY * yMultiplier / 2 + roundness * yMultiplier}\n            L ${startX - offset + distanceX - roundness},${stopY - roundness * yMultiplier}\n            Q ${startX - offset + distanceX - roundness},${stopY} ${startX - offset + distanceX},${stopY}\n            L ${stopX},${stopY}`;\n      } else {\n        points += `L ${startX + distanceX / 2 - roundness},${startY}\n            Q ${startX + distanceX / 2},${startY} ${startX + distanceX / 2},${startY + roundness * yMultiplier}\n            L ${startX + distanceX / 2},${stopY - roundness * yMultiplier}\n            Q ${startX + distanceX / 2},${stopY} ${startX + distanceX / 2 + roundness},${stopY}\n            L ${stopX},${stopY}`;\n      }\n      return points;\n    }\n  },\n  computed: {\n    /**\n     * Get tasks which are dependent on other tasks\n     *\n     * @returns {array}\n     */\n    dependencyTasks() {\n      return this.tasks.filter(task => typeof task.dependentOn !== 'undefined').map(task => {\n        task.dependencyLines = task.dependentOn.map(id => {\n          return {\n            points: this.getPoints(id, task.id),\n            task_id: id\n          };\n        });\n        return task;\n      }).filter(task => task.dependencyLines.points !== null);\n    }\n  }\n};","map":{"version":3,"names":["name","inject","props","data","methods","getPoints","fromTaskId","toTaskId","fromTask","root","getTask","toTask","isTaskVisible","startX","x","width","startY","y","height","stopX","stopY","distanceX","distanceY","yMultiplier","offset","roundness","isBefore","points","computed","dependencyTasks","tasks","filter","task","dependentOn","map","dependencyLines","id","task_id"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/Chart/DependencyLines.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview DependencyLines component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <svg\n    x=\"0\"\n    y=\"0\"\n    width=\"100%\"\n    height=\"100%\"\n    class=\"gantt-elastic__chart-dependency-lines-container\"\n    :style=\"{ ...root.style['chart-dependency-lines-container'] }\"\n  >\n    <g v-for=\"task in dependencyTasks\" :key=\"task.id\" :task=\"task\">\n      <path\n        class=\"gantt-elastic__chart-dependency-lines-path\"\n        :style=\"{ ...root.style['chart-dependency-lines-path'], ...task.style['chart-dependency-lines-path'], ...task.style['chart-dependency-lines-path-' + dependencyLine.task_id] }\"\n        v-for=\"dependencyLine in task.dependencyLines\"\n        :key=\"dependencyLine.id\"\n        :task=\"task\"\n        :d=\"dependencyLine.points\"\n      ></path>\n    </g>\n  </svg>\n</template>\n\n<script>\nexport default {\n  name: 'DependencyLines',\n  inject: ['root'],\n  props: ['tasks'],\n  data() {\n    return {};\n  },\n  methods: {\n    /**\n     * Get path points\n     *\n     * @param {any} fromTaskId\n     * @param {any} toTaskId\n     * @returns {string}\n     */\n    getPoints(fromTaskId, toTaskId) {\n      const fromTask = this.root.getTask(fromTaskId);\n      const toTask = this.root.getTask(toTaskId);\n      if (\n        fromTask === null ||\n        toTask === null ||\n        !this.root.isTaskVisible(toTask) ||\n        !this.root.isTaskVisible(fromTask)\n      ) {\n        return null;\n      }\n      const startX = fromTask.x + fromTask.width;\n      const startY = fromTask.y + fromTask.height / 2;\n      const stopX = toTask.x;\n      const stopY = toTask.y + toTask.height / 2;\n      const distanceX = stopX - startX;\n      let distanceY;\n      let yMultiplier = 1;\n      if (stopY >= startY) {\n        distanceY = stopY - startY;\n      } else {\n        distanceY = startY - stopY;\n        yMultiplier = -1;\n      }\n      const offset = 10;\n      const roundness = 4;\n      const isBefore = distanceX <= offset + roundness;\n      let points = `M ${startX} ${startY}\n          L ${startX + offset},${startY} `;\n      if (isBefore) {\n        points += `Q ${startX + offset + roundness},${startY} ${startX + offset + roundness},${startY +\n          roundness * yMultiplier}\n            L ${startX + offset + roundness},${startY + (distanceY * yMultiplier) / 2 - roundness * yMultiplier}\n            Q ${startX + offset + roundness},${startY + (distanceY * yMultiplier) / 2} ${startX + offset},${startY +\n          (distanceY * yMultiplier) / 2}\n            L ${startX - offset + distanceX},${startY + (distanceY * yMultiplier) / 2}\n            Q ${startX - offset + distanceX - roundness},${startY + (distanceY * yMultiplier) / 2} ${startX -\n          offset +\n          distanceX -\n          roundness},${startY + (distanceY * yMultiplier) / 2 + roundness * yMultiplier}\n            L ${startX - offset + distanceX - roundness},${stopY - roundness * yMultiplier}\n            Q ${startX - offset + distanceX - roundness},${stopY} ${startX - offset + distanceX},${stopY}\n            L ${stopX},${stopY}`;\n      } else {\n        points += `L ${startX + distanceX / 2 - roundness},${startY}\n            Q ${startX + distanceX / 2},${startY} ${startX + distanceX / 2},${startY + roundness * yMultiplier}\n            L ${startX + distanceX / 2},${stopY - roundness * yMultiplier}\n            Q ${startX + distanceX / 2},${stopY} ${startX + distanceX / 2 + roundness},${stopY}\n            L ${stopX},${stopY}`;\n      }\n      return points;\n    }\n  },\n  computed: {\n    /**\n     * Get tasks which are dependent on other tasks\n     *\n     * @returns {array}\n     */\n    dependencyTasks() {\n      return this.tasks\n        .filter(task => typeof task.dependentOn !== 'undefined')\n        .map(task => {\n          task.dependencyLines = task.dependentOn.map(id => {\n            return { points: this.getPoints(id, task.id), task_id: id };\n          });\n          return task;\n        })\n        .filter(task => task.dependencyLines.points !== null);\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}