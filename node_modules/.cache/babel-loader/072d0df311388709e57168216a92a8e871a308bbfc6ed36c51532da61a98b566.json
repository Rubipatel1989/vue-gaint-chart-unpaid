{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */function () {\n  /**\n   * Constructor for Aggregate module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function Aggregate(parent) {\n    Grid.Inject(GridAggregate);\n    this.parent = parent;\n    this.flatChildRecords = [];\n    this.summaryQuery = [];\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns Summary module name\n   */\n  Aggregate.prototype.getModuleName = function () {\n    return 'summary';\n  };\n  Aggregate.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n  };\n  /**\n   * Function to calculate summary values\n   *\n   * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n   * @param {Object[]} filteredData - Filtered data collection\n   * @param {boolean} isSort - Specified whether sorting operation performed\n   * @hidden\n   * @returns {Object[]} -  return flat records with summary values\n   */\n  Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n    this.summaryQuery = summaryQuery;\n    var parentRecord;\n    var parentDataLength = Object.keys(filteredData).length;\n    var parentData = [];\n    for (var p = 0, len = parentDataLength; p < len; p++) {\n      var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n      if (!summaryRow) {\n        parentData.push(filteredData[parseInt(p.toString(), 10)]);\n      }\n    }\n    var parentRecords = findParentRecords(parentData);\n    var flatRecords = parentData.slice();\n    var summaryLength = Object.keys(this.parent.aggregates).length;\n    var dataLength = Object.keys(parentRecords).length;\n    var childRecordsLength;\n    var columns = this.parent.getColumns();\n    if (this.parent.aggregates.filter(function (x) {\n      return x.showChildSummary;\n    }).length) {\n      for (var i = 0, len = dataLength; i < len; i++) {\n        parentRecord = parentRecords[parseInt(i.toString(), 10)];\n        childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n        if (childRecordsLength) {\n          var _loop_1 = function (summaryRowIndex, len_1) {\n            var item = void 0;\n            item = {};\n            for (var i_1 = 0; i_1 < columns.length; i_1++) {\n              var field = isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)])) ? columns[parseInt(i_1.toString(), 10)] : getObject('field', columns[parseInt(i_1.toString(), 10)]);\n              item[\"\" + field] = null;\n            }\n            item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n            if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n              var idx_1;\n              flatRecords.map(function (e, i) {\n                if (e.uniqueID === parentRecord.uniqueID) {\n                  idx_1 = i;\n                  return;\n                }\n              });\n              var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n              var summaryParent = extend({}, parentRecord);\n              delete summaryParent.childRecords;\n              delete summaryParent[this_1.parent.childMapping];\n              setValue('parentItem', summaryParent, item);\n              var level = getObject('level', summaryParent);\n              setValue('level', level + 1, item);\n              setValue('isSummaryRow', true, item);\n              setValue('parentUniqueID', summaryParent.uniqueID, item);\n              if (isSort) {\n                var childRecords = getObject('childRecords', parentRecord);\n                if (childRecords.length) {\n                  childRecords.push(item);\n                }\n              }\n              flatRecords.splice(currentIndex, 0, item);\n            } else {\n              return \"continue\";\n            }\n          };\n          var this_1 = this;\n          for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n            _loop_1(summaryRowIndex, len_1);\n          }\n          this.flatChildRecords = [];\n        }\n      }\n    } else {\n      var items = {};\n      for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n        var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ? columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n        items[\"\" + fields] = null;\n      }\n      for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n        this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n      }\n    }\n    return flatRecords;\n  };\n  Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n    var recordLength = Object.keys(flatData).length;\n    var record;\n    for (var i = 0, len = recordLength; i < len; i++) {\n      record = flatData[parseInt(i.toString(), 10)];\n      var parent_1 = isNullOrUndefined(record.parentItem) ? null : flatData.filter(function (e) {\n        return e.uniqueID === record.parentItem.uniqueID;\n      })[0];\n      if (parentData === parent_1) {\n        this.flatChildRecords.push(record);\n        var hasChild = getObject('hasChildRecords', record);\n        if (hasChild) {\n          this.getChildRecordsLength(record, flatData);\n        } else {\n          continue;\n        }\n      }\n    }\n    return this.flatChildRecords.length;\n  };\n  Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n    var summaryColumnLength = Object.keys(summary.columns).length;\n    for (var i = 0, len = summaryColumnLength; i < len; i++) {\n      var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ? summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n      var keys = Object.keys(itemData);\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (key === displayColumn) {\n          if (this.flatChildRecords.length) {\n            itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n          } else if (this.parent.isLocalData) {\n            var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json : this.parent.flatData;\n            itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n          }\n        } else {\n          continue;\n        }\n      }\n    }\n    return itemData;\n  };\n  Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n    var qry = new Query();\n    var single = {};\n    var helper = {};\n    var type = !isNullOrUndefined(summaryColumn.field) ? this.parent.getColumnByField(summaryColumn.field).type : undefined;\n    summaryColumn.setPropertiesSilent({\n      format: this.getFormatFromType(summaryColumn.format, type)\n    });\n    summaryColumn.setFormatter(this.parent.grid.locale);\n    var formatFn = summaryColumn.getFormatter() || function () {\n      return function (a) {\n        return a;\n      };\n    }();\n    summaryColumn.setTemplate(helper);\n    var tempObj = summaryColumn.getTemplate(2);\n    qry.queries = this.summaryQuery;\n    qry.requiresCount();\n    var sumData = new DataManager(summaryData).executeLocal(qry);\n    var types = summaryColumn.type;\n    var summaryKey;\n    types = [summaryColumn.type];\n    for (var i = 0; i < types.length; i++) {\n      summaryKey = types[parseInt(i.toString(), 10)];\n      var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n      var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) : /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n      calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n      var disp = summaryColumn.columnName;\n      var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n      single[\"\" + disp] = single[\"\" + disp] || {};\n      single[\"\" + disp][\"\" + key] = value_1;\n      single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n    }\n    helper.format = summaryColumn.getFormatter();\n    var cellElement = createElement('td', {\n      className: 'e-summary'\n    });\n    if (this.parent.isReact) {\n      var renderReactTemplates = 'renderReactTemplates';\n      tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n      this.parent[\"\" + renderReactTemplates]();\n    } else {\n      appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n    }\n    var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n    var summaryValue;\n    if (cellElement.innerHTML.indexOf(value) === -1) {\n      summaryValue = cellElement.innerHTML + value;\n      return summaryValue;\n    } else {\n      return cellElement.innerHTML;\n    }\n  };\n  Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n    if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n      return summaryformat;\n    }\n    var obj;\n    switch (type) {\n      case 'number':\n        obj = {\n          format: summaryformat\n        };\n        break;\n      case 'datetime':\n        obj = {\n          type: 'dateTime',\n          skeleton: summaryformat\n        };\n        break;\n      case 'date':\n        obj = {\n          type: type,\n          skeleton: summaryformat\n        };\n        break;\n    }\n    return obj;\n  };\n  /**\n   * To destroy the Aggregate module\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Aggregate.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return Aggregate;\n}();\nexport { Aggregate };","map":{"version":3,"names":["Query","DataManager","getObject","calculateAggregate","Aggregate","GridAggregate","Grid","appendChildren","findParentRecords","isNullOrUndefined","setValue","createElement","extend","parent","Inject","flatChildRecords","summaryQuery","prototype","getModuleName","removeEventListener","isDestroyed","calculateSummaryValue","filteredData","isSort","parentRecord","parentDataLength","Object","keys","length","parentData","p","len","summaryRow","parseInt","toString","push","parentRecords","flatRecords","slice","summaryLength","aggregates","dataLength","childRecordsLength","columns","getColumns","filter","x","showChildSummary","i","getChildRecordsLength","_loop_1","summaryRowIndex","len_1","item","i_1","field","this_1","createSummaryItem","idx_1","map","e","uniqueID","currentIndex","summaryParent","childRecords","childMapping","level","splice","items","columnIndex","length_1","fields","length_2","flatData","recordLength","record","parent_1","parentItem","hasChild","itemData","summary","summaryColumnLength","displayColumn","columnName","_i","keys_1","key","getSummaryValues","isLocalData","data","dataSource","json","summaryColumn","summaryData","qry","single","helper","type","getColumnByField","undefined","setPropertiesSilent","format","getFormatFromType","setFormatter","grid","locale","formatFn","getFormatter","a","setTemplate","tempObj","getTemplate","queries","requiresCount","sumData","executeLocal","types","summaryKey","toLowerCase","val","disp","value_1","cellElement","className","isReact","renderReactTemplates","fn","property","value","summaryValue","innerHTML","indexOf","summaryformat","obj","skeleton","destroy"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/summary.js"],"sourcesContent":["import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[parseInt(p.toString(), 10)]);\n            if (!summaryRow) {\n                parentData.push(filteredData[parseInt(p.toString(), 10)]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        var columns = this.parent.getColumns();\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[parseInt(i.toString(), 10)];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var i_1 = 0; i_1 < columns.length; i_1++) {\n                            var field = (isNullOrUndefined(getObject('field', columns[parseInt(i_1.toString(), 10)]))) ?\n                                columns[parseInt(i_1.toString(), 10)] : getObject('field', (columns[parseInt(i_1.toString(), 10)]));\n                            item[\"\" + field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columns.length; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', columns[parseInt(columnIndex.toString(), 10)])) ?\n                    columns[parseInt(columnIndex.toString(), 10)] : getObject('field', columns[parseInt(columnIndex.toString(), 10)]);\n                items[\"\" + fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[parseInt(i.toString(), 10)];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[parseInt(i.toString(), 10)].columnName) ?\n                summary.columns[parseInt(i.toString(), 10)].field : summary.columns[parseInt(i.toString(), 10)].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[\"\" + key] = this.getSummaryValues(summary.columns[parseInt(i.toString(), 10)], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[parseInt(i.toString(), 10)];\n            var key = summaryColumn.field + ' - ' + types[parseInt(i.toString(), 10)].toLowerCase();\n            var val = types[parseInt(i.toString(), 10)] !== 'Custom' ? getObject('aggregates', sumData) :\n                /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n                calculateAggregate(types[parseInt(i.toString(), 10)], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[parseInt(i.toString(), 10)] !== 'Custom' ? val[\"\" + key] : val;\n            single[\"\" + disp] = single[\"\" + disp] || {};\n            single[\"\" + disp][\"\" + key] = value_1;\n            single[\"\" + disp][types[parseInt(i.toString(), 10)]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[\"\" + renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[\"\" + summaryColumn.columnName][\"\" + summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}