{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport VueInstance from 'vue';\nimport dayjs from 'dayjs';\nimport MainView from './components/MainView.vue';\nimport getStyle from './style.js';\nimport ResizeObserver from 'resize-observer-polyfill';\nconst ctx = document.createElement('canvas').getContext('2d');\nlet VueInst = VueInstance;\nfunction initVue() {\n  if (typeof Vue !== 'undefined' && typeof VueInst === 'undefined') {\n    VueInst = Vue;\n  }\n}\ninitVue();\nlet hourWidthCache = null;\n\n/**\n * Helper function to fill out empty options in user settings\n *\n * @param {object} userOptions - initial user options that will merge with those below\n * @returns {object} merged options\n */\nfunction getOptions(userOptions) {\n  let localeName = 'en';\n  if (typeof userOptions.locale !== 'undefined' && typeof userOptions.locale.name !== 'undefined') {\n    localeName = userOptions.locale.name;\n  }\n  return {\n    slots: {\n      header: {}\n    },\n    taskMapping: {\n      //*\n      id: 'id',\n      start: 'start',\n      label: 'label',\n      duration: 'duration',\n      progress: 'progress',\n      type: 'type',\n      style: 'style',\n      collapsed: 'collapsed'\n    },\n    width: 0,\n    height: 0,\n    clientWidth: 0,\n    outerHeight: 0,\n    rowsHeight: 0,\n    allVisibleTasksHeight: 0,\n    scroll: {\n      scrolling: false,\n      dragXMoveMultiplier: 3,\n      //*\n      dragYMoveMultiplier: 2,\n      //*\n      top: 0,\n      taskList: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      },\n      chart: {\n        left: 0,\n        right: 0,\n        percent: 0,\n        timePercent: 0,\n        top: 0,\n        bottom: 0,\n        time: 0,\n        timeCenter: 0,\n        dateTime: {\n          left: '',\n          right: ''\n        }\n      }\n    },\n    scope: {\n      //*\n      before: 1,\n      after: 1\n    },\n    times: {\n      timeScale: 60 * 1000,\n      timeZoom: 17,\n      //*\n      timePerPixel: 0,\n      firstTime: null,\n      lastTime: null,\n      firstTaskTime: 0,\n      lastTaskTime: 0,\n      totalViewDurationMs: 0,\n      totalViewDurationPx: 0,\n      stepDuration: 'day',\n      steps: []\n    },\n    row: {\n      height: 24 //*\n    },\n    maxRows: 20,\n    //*\n    maxHeight: 0,\n    //*\n    chart: {\n      grid: {\n        horizontal: {\n          gap: 6 //*\n        }\n      },\n      progress: {\n        width: 20,\n        //*\n        height: 6,\n        //*\n        pattern: true,\n        bar: false\n      },\n      text: {\n        offset: 4,\n        //*\n        xPadding: 10,\n        //*\n        display: true //*\n      },\n      expander: {\n        type: 'chart',\n        display: false,\n        //*\n        displayIfTaskListHidden: true,\n        //*\n        offset: 4,\n        //*\n        size: 18\n      }\n    },\n    taskList: {\n      display: true,\n      //*\n      resizeAfterThreshold: true,\n      //*\n      widthThreshold: 75,\n      //*\n      columns: [\n      //*\n      {\n        id: 0,\n        label: 'ID',\n        value: 'id',\n        width: 40\n      }],\n      percent: 100,\n      //*\n      width: 0,\n      finalWidth: 0,\n      widthFromPercentage: 0,\n      minWidth: 18,\n      expander: {\n        type: 'task-list',\n        size: 16,\n        columnWidth: 24,\n        padding: 16,\n        margin: 10,\n        straight: false\n      }\n    },\n    calendar: {\n      workingDays: [1, 2, 3, 4, 5],\n      //*\n      gap: 6,\n      //*\n      height: 0,\n      strokeWidth: 1,\n      hour: {\n        height: 20,\n        //*\n        display: true,\n        //*\n        widths: [],\n        maxWidths: {\n          short: 0,\n          medium: 0,\n          long: 0\n        },\n        formatted: {\n          long: [],\n          medium: [],\n          short: []\n        },\n        format: {\n          //*\n          long(date) {\n            return date.format('HH:mm');\n          },\n          medium(date) {\n            return date.format('HH:mm');\n          },\n          short(date) {\n            return date.format('HH');\n          }\n        }\n      },\n      day: {\n        height: 20,\n        //*\n        display: true,\n        //*\n        widths: [],\n        maxWidths: {\n          short: 0,\n          medium: 0,\n          long: 0\n        },\n        format: {\n          long(date) {\n            return date.format('DD dddd');\n          },\n          medium(date) {\n            return date.format('DD ddd');\n          },\n          short(date) {\n            return date.format('DD');\n          }\n        }\n      },\n      month: {\n        height: 20,\n        //*\n        display: true,\n        //*\n        widths: [],\n        maxWidths: {\n          short: 0,\n          medium: 0,\n          long: 0\n        },\n        format: {\n          //*\n          short(date) {\n            return date.format('MM');\n          },\n          medium(date) {\n            return date.format(\"MMM 'YY\");\n          },\n          long(date) {\n            return date.format('MMMM YYYY');\n          }\n        }\n      }\n    },\n    locale: {\n      //*\n      name: 'en',\n      weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n      weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n      weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n      months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n      monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n      weekStart: 1,\n      relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n      },\n      formats: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n      },\n      ordinal: n => {\n        const s = ['th', 'st', 'nd', 'rd'];\n        const v = n % 100;\n        return `[${n}${s[(v - 20) % 10] || s[v] || s[0]}]`;\n      }\n    }\n  };\n}\n\n/**\n * Prepare style\n *\n * @returns {object}\n */\nfunction prepareStyle(userStyle) {\n  let fontSize = '12px';\n  let fontFamily = window.getComputedStyle(document.body).getPropertyValue('font-family').toString();\n  if (typeof userStyle !== 'undefined') {\n    if (typeof userStyle.fontSize !== 'undefined') {\n      fontSize = userStyle.fontSize;\n    }\n    if (typeof userStyle.fontFamily !== 'undefined') {\n      fontFamily = userStyle.fontFamily;\n    }\n  }\n  return getStyle(fontSize, fontFamily);\n}\n\n/**\n * Helper function to determine if specified variable is an object\n *\n * @param {any} item\n *\n * @returns {boolean}\n */\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item) && !(item instanceof HTMLElement) && !(item instanceof CanvasRenderingContext2D) && typeof item !== 'function';\n}\n\n/**\n * Helper function which will merge objects recursively - creating brand new one - like clone\n *\n * @param {object} target\n * @params {object} sources\n *\n * @returns {object}\n */\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof target[key] === 'undefined') {\n          target[key] = {};\n        }\n        target[key] = mergeDeep(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        target[key] = [];\n        for (let item of source[key]) {\n          if (isObject(item)) {\n            target[key].push(mergeDeep({}, item));\n            continue;\n          }\n          target[key].push(item);\n        }\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n  return mergeDeep(target, ...sources);\n}\n\n/**\n * Detect if object or array is observable\n *\n * @param {object|array} obj\n *\n * @returns {boolean}\n */\nfunction isObservable(obj) {\n  return typeof obj === 'object' && obj.hasOwnProperty('__ob__');\n}\n\n/**\n * Same as above but with reactivity in mind\n *\n * @param {object} target\n * @params {object} sources\n *\n * @returns {object}\n */\nexport function mergeDeepReactive(component, target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof target[key] === 'undefined') {\n          component.$set(target, key, {});\n        }\n        mergeDeepReactive(component, target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        component.$set(target, key, source[key]);\n      } else if (typeof source[key] === 'function') {\n        if (source[key].toString().indexOf('[native code]') === -1) {\n          target[key] = source[key];\n        }\n      } else {\n        component.$set(target, key, source[key]);\n      }\n    }\n  }\n  return mergeDeepReactive(component, target, ...sources);\n}\n/**\n * Check if objects or arrays are equal by comparing nested values\n *\n * @param {object|array} left\n * @param {object|array} right\n *\n * @returns {boolean}\n */\nexport function notEqualDeep(left, right, cache = [], path = '') {\n  if (typeof right !== typeof left) {\n    return {\n      left,\n      right,\n      what: path + '.typeof'\n    };\n  } else if (Array.isArray(left) && !Array.isArray(right)) {\n    return {\n      left,\n      right,\n      what: path + '.isArray'\n    };\n  } else if (Array.isArray(right) && !Array.isArray(left)) {\n    return {\n      left,\n      right,\n      what: path + '.isArray'\n    };\n  } else if (Array.isArray(left) && Array.isArray(right)) {\n    if (left.length !== right.length) {\n      return {\n        left,\n        right,\n        what: path + '.length'\n      };\n    }\n    let what;\n    for (let index = 0, len = left.length; index < len; index++) {\n      if (what = notEqualDeep(left[index], right[index], cache, path + '.' + index)) {\n        return what;\n      }\n    }\n  } else if (isObject(left) && !isObject(right)) {\n    return {\n      left,\n      right,\n      what: path + '.isObject'\n    };\n  } else if (isObject(right) && !isObject(left)) {\n    return {\n      left,\n      right,\n      what: path + '.isObject'\n    };\n  } else if (isObject(left) && isObject(right)) {\n    for (let key in left) {\n      if (!left.hasOwnProperty(key) || !left.propertyIsEnumerable(key)) {\n        continue;\n      }\n      if (!right.hasOwnProperty(key)) {\n        return {\n          left,\n          right,\n          what: path + '.' + key\n        };\n      }\n      let what;\n      if (what = notEqualDeep(left[key], right[key], cache, path + '.' + key)) {\n        return what;\n      }\n    }\n  } else if (left !== right) {\n    return {\n      left,\n      right,\n      what: path + '. !=='\n    };\n  }\n  return false;\n}\n\n/**\n * GanttElastic\n * Main vue component\n */\nconst GanttElastic = {\n  name: 'GanttElastic',\n  components: {\n    MainView\n  },\n  props: ['tasks', 'options', 'dynamicStyle'],\n  provide() {\n    const provider = {};\n    const self = this;\n    Object.defineProperty(provider, 'root', {\n      enumerable: true,\n      get: () => self\n    });\n    return provider;\n  },\n  data() {\n    return {\n      state: {\n        tasks: [],\n        options: {\n          scrollBarHeight: 0,\n          allVisibleTasksHeight: 0,\n          outerHeight: 0,\n          scroll: {\n            left: 0,\n            top: 0\n          }\n        },\n        dynamicStyle: {},\n        refs: {},\n        tasksById: {},\n        taskTree: {},\n        ctx,\n        emitTasksChanges: true,\n        // some operations may pause emitting changes to parent component\n        emitOptionsChanges: true,\n        // some operations may pause emitting changes to parent component\n        resizeObserver: null,\n        unwatchTasks: null,\n        unwatchOptions: null,\n        unwatchStyle: null,\n        unwatchOutputTasks: null,\n        unwatchOutputOptions: null,\n        unwatchOutputStyle: null\n      }\n    };\n  },\n  methods: {\n    mergeDeep,\n    mergeDeepReactive,\n    /**\n     * Calculate height of scrollbar in current browser\n     *\n     * @returns {number}\n     */\n    getScrollBarHeight() {\n      const outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.height = '100px';\n      outer.style.msOverflowStyle = 'scrollbar';\n      document.body.appendChild(outer);\n      var noScroll = outer.offsetHeight;\n      outer.style.overflow = 'scroll';\n      var inner = document.createElement('div');\n      inner.style.height = '100%';\n      outer.appendChild(inner);\n      var withScroll = inner.offsetHeight;\n      outer.parentNode.removeChild(outer);\n      const height = noScroll - withScroll;\n      this.style['chart-scroll-container--vertical']['margin-left'] = `-${height}px`;\n      return this.state.options.scrollBarHeight = height;\n    },\n    /**\n     * Fill out empty task properties and make it reactive\n     *\n     * @param {array} tasks\n     */\n    fillTasks(tasks) {\n      for (let task of tasks) {\n        if (typeof task.x === 'undefined') {\n          task.x = 0;\n        }\n        if (typeof task.y === 'undefined') {\n          task.y = 0;\n        }\n        if (typeof task.width === 'undefined') {\n          task.width = 0;\n        }\n        if (typeof task.height === 'undefined') {\n          task.height = 0;\n        }\n        if (typeof task.mouseOver === 'undefined') {\n          task.mouseOver = false;\n        }\n        if (typeof task.collapsed === 'undefined') {\n          task.collapsed = false;\n        }\n        if (typeof task.dependentOn === 'undefined') {\n          task.dependentOn = [];\n        }\n        if (typeof task.parentId === 'undefined') {\n          task.parentId = null;\n        }\n        if (typeof task.style === 'undefined') {\n          task.style = {};\n        }\n        if (typeof task.children === 'undefined') {\n          task.children = [];\n        }\n        if (typeof task.allChildren === 'undefined') {\n          task.allChildren = [];\n        }\n        if (typeof task.parents === 'undefined') {\n          task.parents = [];\n        }\n        if (typeof task.parent === 'undefined') {\n          task.parent = null;\n        }\n        if (typeof task.startTime === 'undefined') {\n          task.startTime = dayjs(task.start).valueOf();\n        }\n        if (typeof task.endTime === 'undefined' && task.hasOwnProperty('end')) {\n          task.endTime = dayjs(task.end).valueOf();\n        } else if (typeof task.endTime === 'undefined' && task.hasOwnProperty('duration')) {\n          task.endTime = task.startTime + task.duration;\n        }\n        if (typeof task.duration === 'undefined' && task.hasOwnProperty('endTime')) {\n          task.duration = task.endTime - task.startTime;\n        }\n      }\n      return tasks;\n    },\n    /**\n     * Map tasks\n     *\n     * @param {Array} tasks\n     * @param {Object} options\n     */\n    mapTasks(tasks, options) {\n      for (let [index, task] of tasks.entries()) {\n        tasks[index] = {\n          ...task,\n          id: task[options.taskMapping.id],\n          start: task[options.taskMapping.start],\n          label: task[options.taskMapping.label],\n          duration: task[options.taskMapping.duration],\n          progress: task[options.taskMapping.progress],\n          type: task[options.taskMapping.type],\n          style: task[options.taskMapping.style],\n          collapsed: task[options.taskMapping.collapsed]\n        };\n      }\n      return tasks;\n    },\n    /**\n     * Initialize component\n     */\n    initialize(itsUpdate = '') {\n      let options = mergeDeep({}, this.state.options, getOptions(this.options), this.options);\n      let tasks = this.mapTasks(this.tasks, options);\n      if (Object.keys(this.state.dynamicStyle).length === 0) {\n        this.initializeStyle();\n      }\n      dayjs.locale(options.locale, null, true);\n      dayjs.locale(options.locale.name);\n      if (typeof options.taskList === 'undefined') {\n        options.taskList = {};\n      }\n      options.taskList.columns = options.taskList.columns.map((column, index) => {\n        column.thresholdPercent = 100;\n        column.widthFromPercentage = 0;\n        column.finalWidth = 0;\n        if (typeof column.height === 'undefined') {\n          column.height = 0;\n        }\n        if (typeof column.style === 'undefined') {\n          column.style = {};\n        }\n        column._id = `${index}-${column.label}`;\n        return column;\n      });\n      this.state.options = options;\n      tasks = this.fillTasks(tasks);\n      this.state.tasksById = this.resetTaskTree(tasks);\n      this.state.taskTree = this.makeTaskTree(this.state.rootTask, tasks);\n      this.state.tasks = this.state.taskTree.allChildren.map(childId => this.getTask(childId));\n      this.calculateTaskListColumnsDimensions();\n      this.state.options.scrollBarHeight = this.getScrollBarHeight();\n      this.state.options.outerHeight = this.state.options.height + this.state.options.scrollBarHeight;\n      this.globalOnResize();\n    },\n    /**\n     * Initialize style\n     */\n    initializeStyle() {\n      this.state.dynamicStyle = mergeDeep({}, prepareStyle(this.dynamicStyle), this.dynamicStyle);\n    },\n    /**\n     * Get calendar rows outer height\n     *\n     * @returns {int}\n     */\n    getCalendarHeight() {\n      return this.state.options.calendar.height + this.state.options.calendar.strokeWidth;\n    },\n    /**\n     * Get maximal level of nested task children\n     *\n     * @returns {int}\n     */\n    getMaximalLevel() {\n      let maximalLevel = 0;\n      this.state.tasks.forEach(task => {\n        if (task.parents.length > maximalLevel) {\n          maximalLevel = task.parents.length;\n        }\n      });\n      return maximalLevel - 1;\n    },\n    /**\n     * Get maximal expander width - to calculate straight task list text\n     *\n     * @returns {int}\n     */\n    getMaximalExpanderWidth() {\n      return this.getMaximalLevel() * this.state.options.taskList.expander.padding + this.state.options.taskList.expander.margin;\n    },\n    /**\n     * Synchronize scrollTop property when row height is changed\n     */\n    syncScrollTop() {\n      if (this.state.refs.taskListItems && this.state.refs.chartGraph.scrollTop !== this.state.refs.taskListItems.scrollTop) {\n        this.state.options.scroll.top = this.state.refs.taskListItems.scrollTop = this.state.refs.chartScrollContainerVertical.scrollTop = this.state.refs.chartGraph.scrollTop;\n      }\n    },\n    /**\n     * Calculate task list columns dimensions\n     */\n    calculateTaskListColumnsDimensions() {\n      let final = 0;\n      let percentage = 0;\n      for (let column of this.state.options.taskList.columns) {\n        if (column.expander) {\n          column.widthFromPercentage = (this.getMaximalExpanderWidth() + column.width) / 100 * this.state.options.taskList.percent;\n        } else {\n          column.widthFromPercentage = column.width / 100 * this.state.options.taskList.percent;\n        }\n        percentage += column.widthFromPercentage;\n        column.finalWidth = column.thresholdPercent * column.widthFromPercentage / 100;\n        final += column.finalWidth;\n        column.height = this.getTaskHeight() - this.style['grid-line-horizontal']['stroke-width'];\n      }\n      this.state.options.taskList.widthFromPercentage = percentage;\n      this.state.options.taskList.finalWidth = final;\n    },\n    /**\n     * Reset task tree - which is used to create tree like structure inside task list\n     */\n    resetTaskTree(tasks) {\n      this.$set(this.state, 'rootTask', {\n        id: null,\n        label: 'root',\n        children: [],\n        allChildren: [],\n        parents: [],\n        parent: null,\n        __root: true\n      });\n      const tasksById = {};\n      for (let i = 0, len = tasks.length; i < len; i++) {\n        let current = tasks[i];\n        current.children = [];\n        current.allChildren = [];\n        current.parent = null;\n        current.parents = [];\n        tasksById[current.id] = current;\n      }\n      return tasksById;\n    },\n    /**\n     * Make task tree, after reset - look above\n     *\n     * @param {object} task\n     * @returns {object} tasks with children and parents\n     */\n    makeTaskTree(task, tasks) {\n      for (let i = 0, len = tasks.length; i < len; i++) {\n        let current = tasks[i];\n        if (current.parentId === task.id) {\n          if (task.parents.length) {\n            task.parents.forEach(parent => current.parents.push(parent));\n          }\n          if (!task.propertyIsEnumerable('__root')) {\n            current.parents.push(task.id);\n            current.parent = task.id;\n          } else {\n            current.parents = [];\n            current.parent = null;\n          }\n          current = this.makeTaskTree(current, tasks);\n          task.allChildren.push(current.id);\n          task.children.push(current.id);\n          current.allChildren.forEach(childId => task.allChildren.push(childId));\n        }\n      }\n      return task;\n    },\n    /**\n     * Get task by id\n     *\n     * @param {any} taskId\n     * @returns {object|null} task\n     */\n    getTask(taskId) {\n      if (typeof this.state.tasksById[taskId] !== 'undefined') {\n        return this.state.tasksById[taskId];\n      }\n      return null;\n    },\n    /**\n     * Get children tasks for specified taskId\n     *\n     * @param {any} taskId\n     * @returns {array} children\n     */\n    getChildren(taskId) {\n      return this.state.tasks.filter(task => task.parent === taskId);\n    },\n    /**\n     * Is task visible\n     *\n     * @param {Number|String|Task} task\n     */\n    isTaskVisible(task) {\n      if (typeof task === 'number' || typeof task === 'string') {\n        task = this.getTask(task);\n      }\n      for (let i = 0, len = task.parents.length; i < len; i++) {\n        if (this.getTask(task.parents[i]).collapsed) {\n          return false;\n        }\n      }\n      return true;\n    },\n    /**\n     * Get svg\n     *\n     * @returns {string} html svg image of gantt\n     */\n    getSVG() {\n      return this.state.options.mainView.outerHTML;\n    },\n    /**\n     * Get image\n     *\n     * @param {string} type image format\n     * @returns {Promise} when resolved returns base64 image string of gantt\n     */\n    getImage(type = 'image/png') {\n      return new Promise(resolve => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = this.state.options.mainView.clientWidth;\n          canvas.height = this.state.options.rowsHeight;\n          canvas.getContext('2d').drawImage(img, 0, 0);\n          resolve(canvas.toDataURL(type));\n        };\n        img.src = 'data:image/svg+xml,' + encodeURIComponent(this.getSVG());\n      });\n    },\n    /**\n     * Get gantt total height\n     *\n     * @returns {number}\n     */\n    getHeight(visibleTasks, outer = false) {\n      let height = visibleTasks.length * (this.state.options.row.height + this.state.options.chart.grid.horizontal.gap * 2) + this.state.options.calendar.height + this.state.options.calendar.strokeWidth + this.state.options.calendar.gap;\n      if (outer) {\n        height += this.state.options.scrollBarHeight;\n      }\n      return height;\n    },\n    /**\n     * Get one task height\n     *\n     * @returns {number}\n     */\n    getTaskHeight(withStroke = false) {\n      if (withStroke) {\n        return this.state.options.row.height + this.state.options.chart.grid.horizontal.gap * 2 + this.style['grid-line-horizontal']['stroke-width'];\n      }\n      return this.state.options.row.height + this.state.options.chart.grid.horizontal.gap * 2;\n    },\n    /**\n     * Get specified tasks height\n     *\n     * @returns {number}\n     */\n    getTasksHeight(visibleTasks) {\n      return visibleTasks.length * this.getTaskHeight();\n    },\n    /**\n     * Convert time (in milliseconds) to pixel offset inside chart\n     *\n     * @param {int} ms\n     * @returns {number}\n     */\n    timeToPixelOffsetX(ms) {\n      let x = ms - this.state.options.times.firstTime;\n      if (x) {\n        x = x / this.state.options.times.timePerPixel;\n      }\n      return x;\n    },\n    /**\n     * Convert pixel offset inside chart to corresponding time offset in milliseconds\n     *\n     * @param {number} pixelOffsetX\n     * @returns {int} milliseconds\n     */\n    pixelOffsetXToTime(pixelOffsetX) {\n      let offset = pixelOffsetX + this.style['grid-line-vertical']['stroke-width'] / 2;\n      return offset * this.state.options.times.timePerPixel + this.state.options.times.firstTime;\n    },\n    /**\n     * Determine if element is inside current view port\n     *\n     * @param {number} x - element placement\n     * @param {number} width - element width\n     * @param {int} buffer - or threshold, if element is outside viewport but offset from view port is below this value return true\n     * @returns {boolean}\n     */\n    isInsideViewPort(x, width, buffer = 5000) {\n      return x + width + buffer >= this.state.options.scroll.chart.left && x - buffer <= this.state.options.scroll.chart.right || x - buffer <= this.state.options.scroll.chart.left && x + width + buffer >= this.state.options.scroll.chart.right;\n    },\n    /**\n     * Chart scroll event handler\n     *\n     * @param {event} ev\n     */\n    onScrollChart(ev) {\n      this._onScrollChart(this.state.refs.chartScrollContainerHorizontal.scrollLeft, this.state.refs.chartScrollContainerVertical.scrollTop);\n    },\n    /**\n     * After same as above but with different arguments - normalized\n     *\n     * @param {number} left\n     * @param {number} top\n     */\n    _onScrollChart(left, top) {\n      if (this.state.options.scroll.chart.left === left && this.state.options.scroll.chart.top === top) {\n        return;\n      }\n      const chartContainerWidth = this.state.refs.chartContainer.clientWidth;\n      this.state.options.scroll.chart.left = left;\n      this.state.options.scroll.chart.right = left + chartContainerWidth;\n      this.state.options.scroll.chart.percent = left / this.state.options.times.totalViewDurationPx * 100;\n      this.state.options.scroll.chart.top = top;\n      this.state.options.scroll.chart.time = this.pixelOffsetXToTime(left);\n      this.state.options.scroll.chart.timeCenter = this.pixelOffsetXToTime(left + chartContainerWidth / 2);\n      this.state.options.scroll.chart.dateTime.left = dayjs(this.state.options.scroll.chart.time).valueOf();\n      this.state.options.scroll.chart.dateTime.right = dayjs(this.pixelOffsetXToTime(left + this.state.refs.chart.clientWidth)).valueOf();\n      this.scrollTo(left, top);\n    },\n    /**\n     * Scroll current chart to specified time (in milliseconds)\n     *\n     * @param {int} time\n     */\n    scrollToTime(time) {\n      let pos = this.timeToPixelOffsetX(time);\n      const chartContainerWidth = this.state.refs.chartContainer.clientWidth;\n      pos = pos - chartContainerWidth / 2;\n      if (pos > this.state.options.width) {\n        pos = this.state.options.width - chartContainerWidth;\n      }\n      this.scrollTo(pos);\n    },\n    /**\n     * Scroll chart or task list to specified pixel values\n     *\n     * @param {number|null} left\n     * @param {number|null} top\n     */\n    scrollTo(left = null, top = null) {\n      if (left !== null) {\n        this.state.refs.chartCalendarContainer.scrollLeft = left;\n        this.state.refs.chartGraphContainer.scrollLeft = left;\n        this.state.refs.chartScrollContainerHorizontal.scrollLeft = left;\n        this.state.options.scroll.left = left;\n      }\n      if (top !== null) {\n        this.state.refs.chartScrollContainerVertical.scrollTop = top;\n        this.state.refs.chartGraph.scrollTop = top;\n        this.state.refs.taskListItems.scrollTop = top;\n        this.state.options.scroll.top = top;\n        this.syncScrollTop();\n      }\n    },\n    /**\n     * After some actions like time zoom change we need to recompensate scroll position\n     * so as a result everything will be in same place\n     */\n    fixScrollPos() {\n      this.scrollToTime(this.state.options.scroll.chart.timeCenter);\n    },\n    /**\n     * Mouse wheel event handler\n     */\n    onWheelChart(ev) {\n      if (!ev.shiftKey && ev.deltaX === 0) {\n        let top = this.state.options.scroll.top + ev.deltaY;\n        const chartClientHeight = this.state.options.rowsHeight;\n        const scrollHeight = this.state.refs.chartGraph.scrollHeight - chartClientHeight;\n        if (top < 0) {\n          top = 0;\n        } else if (top > scrollHeight) {\n          top = scrollHeight;\n        }\n        this.scrollTo(null, top);\n      } else if (ev.shiftKey && ev.deltaX === 0) {\n        let left = this.state.options.scroll.left + ev.deltaY;\n        const chartClientWidth = this.state.refs.chartScrollContainerHorizontal.clientWidth;\n        const scrollWidth = this.state.refs.chartScrollContainerHorizontal.scrollWidth - chartClientWidth;\n        if (left < 0) {\n          left = 0;\n        } else if (left > scrollWidth) {\n          left = scrollWidth;\n        }\n        this.scrollTo(left);\n      } else {\n        let left = this.state.options.scroll.left + ev.deltaX;\n        const chartClientWidth = this.state.refs.chartScrollContainerHorizontal.clientWidth;\n        const scrollWidth = this.state.refs.chartScrollContainerHorizontal.scrollWidth - chartClientWidth;\n        if (left < 0) {\n          left = 0;\n        } else if (left > scrollWidth) {\n          left = scrollWidth;\n        }\n        this.scrollTo(left);\n      }\n    },\n    /**\n     * Time zoom change event handler\n     */\n    onTimeZoomChange(timeZoom) {\n      this.state.options.times.timeZoom = timeZoom;\n      this.recalculateTimes();\n      this.calculateSteps();\n      this.fixScrollPos();\n    },\n    /**\n     * Row height change event handler\n     */\n    onRowHeightChange(height) {\n      this.state.options.row.height = height;\n      this.calculateTaskListColumnsDimensions();\n      this.syncScrollTop();\n    },\n    /**\n     * Scope change event handler\n     */\n    onScopeChange(value) {\n      this.state.options.scope.before = value;\n      this.state.options.scope.after = value;\n      this.initTimes();\n      this.calculateSteps();\n      this.computeCalendarWidths();\n      this.fixScrollPos();\n    },\n    /**\n     * Task list width change event handler\n     */\n    onTaskListWidthChange(value) {\n      this.state.options.taskList.percent = value;\n      this.calculateTaskListColumnsDimensions();\n      this.fixScrollPos();\n    },\n    /**\n     * Task list column width change event handler\n     */\n    onTaskListColumnWidthChange() {\n      this.calculateTaskListColumnsDimensions();\n      this.fixScrollPos();\n    },\n    /**\n     * Listen to specified event names\n     */\n    initializeEvents() {\n      this.$on('chart-scroll-horizontal', this.onScrollChart);\n      this.$on('chart-scroll-vertical', this.onScrollChart);\n      this.$on('chart-wheel', this.onWheelChart);\n      this.$on('times-timeZoom-change', this.onTimeZoomChange);\n      this.$on('row-height-change', this.onRowHeightChange);\n      this.$on('scope-change', this.onScopeChange);\n      this.$on('taskList-width-change', this.onTaskListWidthChange);\n      this.$on('taskList-column-width-change', this.onTaskListColumnWidthChange);\n    },\n    /**\n     * When some action was performed (scale change for example) - recalculate time variables\n     */\n    recalculateTimes() {\n      let max = this.state.options.times.timeScale * 60;\n      let min = this.state.options.times.timeScale;\n      let steps = max / min;\n      let percent = this.state.options.times.timeZoom / 100;\n      this.state.options.times.timePerPixel = this.state.options.times.timeScale * steps * percent + Math.pow(2, this.state.options.times.timeZoom);\n      this.state.options.times.totalViewDurationMs = dayjs(this.state.options.times.lastTime).diff(this.state.options.times.firstTime, 'milliseconds');\n      this.state.options.times.totalViewDurationPx = this.state.options.times.totalViewDurationMs / this.state.options.times.timePerPixel;\n      this.state.options.width = this.state.options.times.totalViewDurationPx + this.style['grid-line-vertical']['stroke-width'];\n    },\n    /**\n     * Initialize time variables\n     */\n    initTimes() {\n      this.state.options.times.firstTime = dayjs(this.state.options.times.firstTaskTime).locale(this.state.options.locale.name).startOf('day').subtract(this.state.options.scope.before, 'days').startOf('day').valueOf();\n      this.state.options.times.lastTime = dayjs(this.state.options.times.lastTaskTime).locale(this.state.options.locale.name).endOf('day').add(this.state.options.scope.after, 'days').endOf('day').valueOf();\n      this.recalculateTimes();\n    },\n    /**\n     * Calculate steps\n     * Steps are days by default\n     * Each step contain information about time offset and pixel offset of this time inside gantt chart\n     */\n    calculateSteps() {\n      const steps = [];\n      const lastMs = dayjs(this.state.options.times.lastTime).valueOf();\n      const currentDate = dayjs(this.state.options.times.firstTime);\n      steps.push({\n        time: currentDate.valueOf(),\n        offset: {\n          ms: 0,\n          px: 0\n        }\n      });\n      for (let currentDate = dayjs(this.state.options.times.firstTime).add(1, this.state.options.times.stepDuration).startOf('day'); currentDate.valueOf() <= lastMs; currentDate = currentDate.add(1, this.state.options.times.stepDuration).startOf('day')) {\n        const offsetMs = currentDate.diff(this.state.options.times.firstTime, 'milliseconds');\n        const offsetPx = offsetMs / this.state.options.times.timePerPixel;\n        const step = {\n          time: currentDate.valueOf(),\n          offset: {\n            ms: offsetMs,\n            px: offsetPx\n          }\n        };\n        const previousStep = steps[steps.length - 1];\n        previousStep.width = {\n          ms: offsetMs - previousStep.offset.ms,\n          px: offsetPx - previousStep.offset.px\n        };\n        steps.push(step);\n      }\n      const lastStep = steps[steps.length - 1];\n      lastStep.width = {\n        ms: this.state.options.times.totalViewDurationMs - lastStep.offset.ms,\n        px: this.state.options.times.totalViewDurationPx - lastStep.offset.px\n      };\n      this.state.options.times.steps = steps;\n    },\n    /**\n     * Calculate calendar widths - when scale was changed for example\n     */\n    computeCalendarWidths() {\n      this.computeDayWidths();\n      this.computeHourWidths();\n      this.computeMonthWidths();\n    },\n    /**\n     * Compute width of calendar hours column widths basing on text widths\n     */\n    computeHourWidths() {\n      const style = {\n        ...this.style['calendar-row-text'],\n        ...this.style['calendar-row-text--hour']\n      };\n      this.state.ctx.font = style['font-size'] + ' ' + style['font-family'];\n      const localeName = this.state.options.locale.name;\n      let currentDate = dayjs('2018-01-01T00:00:00').locale(localeName); // any date will be good for hours\n      let maxWidths = this.state.options.calendar.hour.maxWidths;\n      if (maxWidths.length) {\n        return;\n      }\n      for (let formatName in this.state.options.calendar.hour.format) {\n        maxWidths[formatName] = 0;\n      }\n      for (let hour = 0; hour < 24; hour++) {\n        let widths = {\n          hour\n        };\n        for (let formatName in this.state.options.calendar.hour.format) {\n          const hourFormatted = this.state.options.calendar.hour.format[formatName](currentDate);\n          this.state.options.calendar.hour.formatted[formatName].push(hourFormatted);\n          widths[formatName] = this.state.ctx.measureText(hourFormatted).width;\n        }\n        this.state.options.calendar.hour.widths.push(widths);\n        for (let formatName in this.state.options.calendar.hour.format) {\n          if (widths[formatName] > maxWidths[formatName]) {\n            maxWidths[formatName] = widths[formatName];\n          }\n        }\n        currentDate = currentDate.add(1, 'hour');\n      }\n    },\n    /**\n     * Compute calendar days column widths basing on text widths\n     */\n    computeDayWidths() {\n      const style = {\n        ...this.style['calendar-row-text'],\n        ...this.style['calendar-row-text--day']\n      };\n      this.state.ctx.font = style['font-size'] + ' ' + style['font-family'];\n      const localeName = this.state.options.locale.name;\n      let currentDate = dayjs(this.state.options.times.steps[0].time).locale(localeName);\n      let maxWidths = this.state.options.calendar.day.maxWidths;\n      this.state.options.calendar.day.widths = [];\n      Object.keys(this.state.options.calendar.day.format).forEach(formatName => {\n        maxWidths[formatName] = 0;\n      });\n      for (let day = 0, daysLen = this.state.options.times.steps.length; day < daysLen; day++) {\n        const widths = {\n          day\n        };\n        Object.keys(this.state.options.calendar.day.format).forEach(formatName => {\n          widths[formatName] = this.state.ctx.measureText(this.state.options.calendar.day.format[formatName](currentDate)).width;\n        });\n        this.state.options.calendar.day.widths.push(widths);\n        Object.keys(this.state.options.calendar.day.format).forEach(formatName => {\n          if (widths[formatName] > maxWidths[formatName]) {\n            maxWidths[formatName] = widths[formatName];\n          }\n        });\n        currentDate = currentDate.add(1, 'day');\n      }\n    },\n    /**\n     * Months count\n     *\n     * @description Returns number of different months in specified time range\n     *\n     * @param {number} fromTime - date in ms\n     * @param {number} toTime - date in ms\n     *\n     * @returns {number} different months count\n     */\n    monthsCount(fromTime, toTime) {\n      if (fromTime > toTime) {\n        return 0;\n      }\n      let currentMonth = dayjs(fromTime);\n      let previousMonth = currentMonth.clone();\n      let monthsCount = 1;\n      while (currentMonth.valueOf() <= toTime) {\n        currentMonth = currentMonth.add(1, 'day');\n        if (previousMonth.month() !== currentMonth.month()) {\n          monthsCount++;\n        }\n        previousMonth = currentMonth.clone();\n      }\n      return monthsCount;\n    },\n    /**\n     * Compute month calendar columns widths basing on text widths\n     */\n    computeMonthWidths() {\n      const style = {\n        ...this.style['calendar-row-text'],\n        ...this.style['calendar-row-text--month']\n      };\n      this.state.ctx.font = style['font-size'] + ' ' + style['font-family'];\n      let maxWidths = this.state.options.calendar.month.maxWidths;\n      this.state.options.calendar.month.widths = [];\n      Object.keys(this.state.options.calendar.month.format).forEach(formatName => {\n        maxWidths[formatName] = 0;\n      });\n      const localeName = this.state.options.locale.name;\n      let currentDate = dayjs(this.state.options.times.firstTime).locale(localeName);\n      const monthsCount = this.monthsCount(this.state.options.times.firstTime, this.state.options.times.lastTime);\n      for (let month = 0; month < monthsCount; month++) {\n        const widths = {\n          month\n        };\n        Object.keys(this.state.options.calendar.month.format).forEach(formatName => {\n          widths[formatName] = this.state.ctx.measureText(this.state.options.calendar.month.format[formatName](currentDate)).width;\n        });\n        this.state.options.calendar.month.widths.push(widths);\n        Object.keys(this.state.options.calendar.month.format).forEach(formatName => {\n          if (widths[formatName] > maxWidths[formatName]) {\n            maxWidths[formatName] = widths[formatName];\n          }\n        });\n        currentDate = currentDate.add(1, 'month');\n      }\n    },\n    /**\n     * Prepare time and date variables for gantt\n     */\n    prepareDates() {\n      let firstTaskTime = Number.MAX_SAFE_INTEGER;\n      let lastTaskTime = 0;\n      for (let index = 0, len = this.state.tasks.length; index < len; index++) {\n        let task = this.state.tasks[index];\n        if (task.startTime < firstTaskTime) {\n          firstTaskTime = task.startTime;\n        }\n        if (task.startTime + task.duration > lastTaskTime) {\n          lastTaskTime = task.startTime + task.duration;\n        }\n      }\n      this.state.options.times.firstTaskTime = firstTaskTime;\n      this.state.options.times.lastTaskTime = lastTaskTime;\n      this.state.options.times.firstTime = dayjs(firstTaskTime).locale(this.state.options.locale.name).startOf('day').subtract(this.state.options.scope.before, 'days').startOf('day').valueOf();\n      this.state.options.times.lastTime = dayjs(lastTaskTime).locale(this.state.options.locale.name).endOf('day').add(this.state.options.scope.after, 'days').endOf('day').valueOf();\n    },\n    /**\n     * Setup and calculate everything\n     */\n    setup(itsUpdate = '') {\n      this.initialize(itsUpdate);\n      this.prepareDates();\n      this.initTimes();\n      this.calculateSteps();\n      this.computeCalendarWidths();\n      this.state.options.taskList.width = this.state.options.taskList.columns.reduce((prev, current) => {\n        return {\n          width: prev.width + current.width\n        };\n      }, {\n        width: 0\n      }).width;\n    },\n    /**\n     * Global resize event (from window.addEventListener)\n     */\n    globalOnResize() {\n      if (typeof this.$el === 'undefined' || !this.$el) {\n        return;\n      }\n      this.state.options.clientWidth = this.$el.clientWidth;\n      if (this.state.options.taskList.widthFromPercentage > this.state.options.clientWidth / 100 * this.state.options.taskList.widthThreshold) {\n        const diff = this.state.options.taskList.widthFromPercentage - this.state.options.clientWidth / 100 * this.state.options.taskList.widthThreshold;\n        let diffPercent = 100 - diff / this.state.options.taskList.widthFromPercentage * 100;\n        if (diffPercent < 0) {\n          diffPercent = 0;\n        }\n        this.state.options.taskList.columns.forEach(column => {\n          column.thresholdPercent = diffPercent;\n        });\n      } else {\n        this.state.options.taskList.columns.forEach(column => {\n          column.thresholdPercent = 100;\n        });\n      }\n      this.calculateTaskListColumnsDimensions();\n      this.$emit('calendar-recalculate');\n      this.syncScrollTop();\n    }\n  },\n  computed: {\n    /**\n     * Get visible tasks\n     * Very important method which will bring us only those tasks that are visible inside gantt chart\n     * For example when task is collapsed - children of this task are not visible - we should not render them\n     */\n    visibleTasks() {\n      const visibleTasks = this.state.tasks.filter(task => this.isTaskVisible(task));\n      const maxRows = visibleTasks.slice(0, this.state.options.maxRows);\n      this.state.options.rowsHeight = this.getTasksHeight(maxRows);\n      let heightCompensation = 0;\n      if (this.state.options.maxHeight && this.state.options.rowsHeight > this.state.options.maxHeight) {\n        heightCompensation = this.state.options.rowsHeight - this.state.options.maxHeight;\n        this.state.options.rowsHeight = this.state.options.maxHeight;\n      }\n      this.state.options.height = this.getHeight(maxRows) - heightCompensation;\n      this.state.options.allVisibleTasksHeight = this.getTasksHeight(visibleTasks);\n      this.state.options.outerHeight = this.getHeight(maxRows, true) - heightCompensation;\n      let len = visibleTasks.length;\n      for (let index = 0; index < len; index++) {\n        let task = visibleTasks[index];\n        task.width = task.duration / this.state.options.times.timePerPixel - this.style['grid-line-vertical']['stroke-width'];\n        if (task.width < 0) {\n          task.width = 0;\n        }\n        task.height = this.state.options.row.height;\n        task.x = this.timeToPixelOffsetX(task.startTime);\n        task.y = (this.state.options.row.height + this.state.options.chart.grid.horizontal.gap * 2) * index + this.state.options.chart.grid.horizontal.gap;\n      }\n      return visibleTasks;\n    },\n    /**\n     * Style shortcut\n     */\n    style() {\n      return this.state.dynamicStyle;\n    },\n    /**\n     * Get columns and compute dimensions on the fly\n     */\n    getTaskListColumns() {\n      this.calculateTaskListColumnsDimensions();\n      return this.state.options.taskList.columns;\n    },\n    /**\n     * Tasks used for communicate with parent component\n     */\n    outputTasks() {\n      return this.state.tasks;\n    },\n    /**\n     * Options used to communicate with parent component\n     */\n    outputOptions() {\n      return this.state.options;\n    }\n  },\n  /**\n   * Watch tasks after gantt instance is created and react when we have new kids on the block\n   */\n  created() {\n    this.initializeEvents();\n    this.setup();\n    this.state.unwatchTasks = this.$watch('tasks', tasks => {\n      const notEqual = notEqualDeep(tasks, this.outputTasks);\n      if (notEqual) {\n        this.setup('tasks');\n      }\n    }, {\n      deep: true\n    });\n    this.state.unwatchOptions = this.$watch('options', opts => {\n      const notEqual = notEqualDeep(opts, this.outputOptions);\n      if (notEqual) {\n        this.setup('options');\n      }\n    }, {\n      deep: true\n    });\n    this.state.unwatchStyle = this.$watch('dynamicStyle', style => {\n      const notEqual = notEqualDeep(style, this.dynamicStyle);\n      if (notEqual) {\n        this.initializeStyle();\n      }\n    }, {\n      deep: true,\n      immediate: true\n    });\n    this.state.unwatchOutputTasks = this.$watch('outputTasks', tasks => {\n      this.$emit('tasks-changed', tasks.map(task => task));\n    }, {\n      deep: true\n    });\n    this.state.unwatchOutputOptions = this.$watch('outputOptions', options => {\n      this.$emit('options-changed', mergeDeep({}, options));\n    }, {\n      deep: true\n    });\n    this.state.unwatchOutputStyle = this.$watch('style', style => {\n      this.$emit('dynamic-style-changed', mergeDeep({}, style));\n    }, {\n      deep: true\n    });\n    this.$root.$emit('gantt-elastic-created', this);\n    this.$emit('created', this);\n  },\n  /**\n   * Emit before-mount event\n   */\n  beforeMount() {\n    this.$emit('before-mount', this);\n  },\n  /**\n   * Emit ready/mounted events and deliver this gantt instance to outside world when needed\n   */\n  mounted() {\n    this.state.options.clientWidth = this.$el.clientWidth;\n    this.state.resizeObserver = new ResizeObserver((entries, observer) => {\n      this.globalOnResize();\n    });\n    this.state.resizeObserver.observe(this.$el.parentNode);\n    this.globalOnResize();\n    this.$emit('ready', this);\n    this.$root.$emit('gantt-elastic-mounted', this);\n    this.$emit('mounted', this);\n    this.$root.$emit('gantt-elastic-ready', this);\n  },\n  /**\n   * Emit event when data was changed and before update (you can cleanup dom events here for example)\n   */\n  beforeUpdate() {\n    this.$emit('before-update');\n  },\n  /**\n   * Emit event when gantt-elastic view was updated\n   */\n  updated() {\n    this.$nextTick(() => {\n      this.$emit('updated');\n    });\n  },\n  /**\n   * Before destroy event - clean up\n   */\n  beforeDestroy() {\n    this.state.resizeObserver.unobserve(this.$el.parentNode);\n    this.state.unwatchTasks();\n    this.state.unwatchOptions();\n    this.state.unwatchStyle();\n    this.state.unwatchOutputTasks();\n    this.state.unwatchOutputOptions();\n    this.state.unwatchOutputStyle();\n    this.$emit('before-destroy');\n  },\n  /**\n   * Emit event after gantt-elastic was destroyed\n   */\n  destroyed() {\n    this.$emit('destroyed');\n  }\n};\nexport default GanttElastic;","map":{"version":3,"names":["VueInstance","dayjs","MainView","getStyle","ResizeObserver","ctx","document","createElement","getContext","VueInst","initVue","Vue","hourWidthCache","getOptions","userOptions","localeName","locale","name","slots","header","taskMapping","id","start","label","duration","progress","type","style","collapsed","width","height","clientWidth","outerHeight","rowsHeight","allVisibleTasksHeight","scroll","scrolling","dragXMoveMultiplier","dragYMoveMultiplier","top","taskList","left","right","bottom","chart","percent","timePercent","time","timeCenter","dateTime","scope","before","after","times","timeScale","timeZoom","timePerPixel","firstTime","lastTime","firstTaskTime","lastTaskTime","totalViewDurationMs","totalViewDurationPx","stepDuration","steps","row","maxRows","maxHeight","grid","horizontal","gap","pattern","bar","text","offset","xPadding","display","expander","displayIfTaskListHidden","size","resizeAfterThreshold","widthThreshold","columns","value","finalWidth","widthFromPercentage","minWidth","columnWidth","padding","margin","straight","calendar","workingDays","strokeWidth","hour","widths","maxWidths","short","medium","long","formatted","format","date","day","month","weekdays","split","weekdaysShort","weekdaysMin","months","monthsShort","weekStart","relativeTime","future","past","s","m","mm","h","hh","d","dd","M","MM","y","yy","formats","LT","LTS","L","LL","LLL","LLLL","ordinal","n","v","prepareStyle","userStyle","fontSize","fontFamily","window","getComputedStyle","body","getPropertyValue","toString","isObject","item","Array","isArray","HTMLElement","CanvasRenderingContext2D","mergeDeep","target","sources","length","source","shift","key","push","isObservable","obj","hasOwnProperty","mergeDeepReactive","component","$set","indexOf","notEqualDeep","cache","path","what","index","len","propertyIsEnumerable","GanttElastic","components","props","provide","provider","self","Object","defineProperty","enumerable","get","data","state","tasks","options","scrollBarHeight","dynamicStyle","refs","tasksById","taskTree","emitTasksChanges","emitOptionsChanges","resizeObserver","unwatchTasks","unwatchOptions","unwatchStyle","unwatchOutputTasks","unwatchOutputOptions","unwatchOutputStyle","methods","getScrollBarHeight","outer","visibility","msOverflowStyle","appendChild","noScroll","offsetHeight","overflow","inner","withScroll","parentNode","removeChild","fillTasks","task","x","mouseOver","dependentOn","parentId","children","allChildren","parents","parent","startTime","valueOf","endTime","end","mapTasks","entries","initialize","itsUpdate","keys","initializeStyle","map","column","thresholdPercent","_id","resetTaskTree","makeTaskTree","rootTask","childId","getTask","calculateTaskListColumnsDimensions","globalOnResize","getCalendarHeight","getMaximalLevel","maximalLevel","forEach","getMaximalExpanderWidth","syncScrollTop","taskListItems","chartGraph","scrollTop","chartScrollContainerVertical","final","percentage","getTaskHeight","__root","i","current","taskId","getChildren","filter","isTaskVisible","getSVG","mainView","outerHTML","getImage","Promise","resolve","img","Image","onload","canvas","drawImage","toDataURL","src","encodeURIComponent","getHeight","visibleTasks","withStroke","getTasksHeight","timeToPixelOffsetX","ms","pixelOffsetXToTime","pixelOffsetX","isInsideViewPort","buffer","onScrollChart","ev","_onScrollChart","chartScrollContainerHorizontal","scrollLeft","chartContainerWidth","chartContainer","scrollTo","scrollToTime","pos","chartCalendarContainer","chartGraphContainer","fixScrollPos","onWheelChart","shiftKey","deltaX","deltaY","chartClientHeight","scrollHeight","chartClientWidth","scrollWidth","onTimeZoomChange","recalculateTimes","calculateSteps","onRowHeightChange","onScopeChange","initTimes","computeCalendarWidths","onTaskListWidthChange","onTaskListColumnWidthChange","initializeEvents","$on","max","min","Math","pow","diff","startOf","subtract","endOf","add","lastMs","currentDate","px","offsetMs","offsetPx","step","previousStep","lastStep","computeDayWidths","computeHourWidths","computeMonthWidths","font","formatName","hourFormatted","measureText","daysLen","monthsCount","fromTime","toTime","currentMonth","previousMonth","clone","prepareDates","Number","MAX_SAFE_INTEGER","setup","reduce","prev","$el","diffPercent","$emit","computed","slice","heightCompensation","getTaskListColumns","outputTasks","outputOptions","created","$watch","notEqual","deep","opts","immediate","$root","beforeMount","mounted","observer","observe","beforeUpdate","updated","$nextTick","beforeDestroy","unobserve","destroyed"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/GanttElastic.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview GanttElastic component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div class=\"gantt-elastic\" style=\"width:100%\">\n    <slot name=\"header\"></slot>\n    <main-view ref=\"mainView\"></main-view>\n    <slot name=\"footer\"></slot>\n  </div>\n</template>\n\n<script>\nimport VueInstance from 'vue';\nimport dayjs from 'dayjs';\nimport MainView from './components/MainView.vue';\nimport getStyle from './style.js';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nconst ctx = document.createElement('canvas').getContext('2d');\nlet VueInst = VueInstance;\nfunction initVue() {\n  if (typeof Vue !== 'undefined' && typeof VueInst === 'undefined') {\n    VueInst = Vue;\n  }\n}\ninitVue();\n\nlet hourWidthCache = null;\n\n/**\n * Helper function to fill out empty options in user settings\n *\n * @param {object} userOptions - initial user options that will merge with those below\n * @returns {object} merged options\n */\nfunction getOptions(userOptions) {\n  let localeName = 'en';\n  if (typeof userOptions.locale !== 'undefined' && typeof userOptions.locale.name !== 'undefined') {\n    localeName = userOptions.locale.name;\n  }\n  return {\n    slots: {\n      header: {}\n    },\n    taskMapping: {\n      //*\n      id: 'id',\n      start: 'start',\n      label: 'label',\n      duration: 'duration',\n      progress: 'progress',\n      type: 'type',\n      style: 'style',\n      collapsed: 'collapsed'\n    },\n    width: 0,\n    height: 0,\n    clientWidth: 0,\n    outerHeight: 0,\n    rowsHeight: 0,\n    allVisibleTasksHeight: 0,\n    scroll: {\n      scrolling: false,\n      dragXMoveMultiplier: 3, //*\n      dragYMoveMultiplier: 2, //*\n      top: 0,\n      taskList: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      },\n      chart: {\n        left: 0,\n        right: 0,\n        percent: 0,\n        timePercent: 0,\n        top: 0,\n        bottom: 0,\n        time: 0,\n        timeCenter: 0,\n        dateTime: {\n          left: '',\n          right: ''\n        }\n      }\n    },\n    scope: {\n      //*\n      before: 1,\n      after: 1\n    },\n    times: {\n      timeScale: 60 * 1000,\n      timeZoom: 17, //*\n      timePerPixel: 0,\n      firstTime: null,\n      lastTime: null,\n      firstTaskTime: 0,\n      lastTaskTime: 0,\n      totalViewDurationMs: 0,\n      totalViewDurationPx: 0,\n      stepDuration: 'day',\n      steps: []\n    },\n    row: {\n      height: 24 //*\n    },\n    maxRows: 20, //*\n    maxHeight: 0, //*\n    chart: {\n      grid: {\n        horizontal: {\n          gap: 6 //*\n        }\n      },\n      progress: {\n        width: 20, //*\n        height: 6, //*\n        pattern: true,\n        bar: false\n      },\n      text: {\n        offset: 4, //*\n        xPadding: 10, //*\n        display: true //*\n      },\n      expander: {\n        type: 'chart',\n        display: false, //*\n        displayIfTaskListHidden: true, //*\n        offset: 4, //*\n        size: 18\n      }\n    },\n    taskList: {\n      display: true, //*\n      resizeAfterThreshold: true, //*\n      widthThreshold: 75, //*\n      columns: [\n        //*\n        {\n          id: 0,\n          label: 'ID',\n          value: 'id',\n          width: 40\n        }\n      ],\n      percent: 100, //*\n      width: 0,\n      finalWidth: 0,\n      widthFromPercentage: 0,\n      minWidth: 18,\n      expander: {\n        type: 'task-list',\n        size: 16,\n        columnWidth: 24,\n        padding: 16,\n        margin: 10,\n        straight: false\n      }\n    },\n    calendar: {\n      workingDays: [1, 2, 3, 4, 5], //*\n      gap: 6, //*\n      height: 0,\n      strokeWidth: 1,\n      hour: {\n        height: 20, //*\n        display: true, //*\n        widths: [],\n        maxWidths: { short: 0, medium: 0, long: 0 },\n        formatted: {\n          long: [],\n          medium: [],\n          short: []\n        },\n        format: {\n          //*\n          long(date) {\n            return date.format('HH:mm');\n          },\n          medium(date) {\n            return date.format('HH:mm');\n          },\n          short(date) {\n            return date.format('HH');\n          }\n        }\n      },\n      day: {\n        height: 20, //*\n        display: true, //*\n        widths: [],\n        maxWidths: { short: 0, medium: 0, long: 0 },\n        format: {\n          long(date) {\n            return date.format('DD dddd');\n          },\n          medium(date) {\n            return date.format('DD ddd');\n          },\n          short(date) {\n            return date.format('DD');\n          }\n        }\n      },\n      month: {\n        height: 20, //*\n        display: true, //*\n        widths: [],\n        maxWidths: { short: 0, medium: 0, long: 0 },\n        format: {\n          //*\n          short(date) {\n            return date.format('MM');\n          },\n          medium(date) {\n            return date.format(\"MMM 'YY\");\n          },\n          long(date) {\n            return date.format('MMMM YYYY');\n          }\n        }\n      }\n    },\n    locale: {\n      //*\n      name: 'en',\n      weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n      weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n      weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n      months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n      monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n      weekStart: 1,\n      relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n      },\n      formats: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n      },\n      ordinal: n => {\n        const s = ['th', 'st', 'nd', 'rd'];\n        const v = n % 100;\n        return `[${n}${s[(v - 20) % 10] || s[v] || s[0]}]`;\n      }\n    }\n  };\n}\n\n/**\n * Prepare style\n *\n * @returns {object}\n */\nfunction prepareStyle(userStyle) {\n  let fontSize = '12px';\n  let fontFamily = window\n    .getComputedStyle(document.body)\n    .getPropertyValue('font-family')\n    .toString();\n  if (typeof userStyle !== 'undefined') {\n    if (typeof userStyle.fontSize !== 'undefined') {\n      fontSize = userStyle.fontSize;\n    }\n    if (typeof userStyle.fontFamily !== 'undefined') {\n      fontFamily = userStyle.fontFamily;\n    }\n  }\n  return getStyle(fontSize, fontFamily);\n}\n\n/**\n * Helper function to determine if specified variable is an object\n *\n * @param {any} item\n *\n * @returns {boolean}\n */\nfunction isObject(item) {\n  return (\n    item &&\n    typeof item === 'object' &&\n    !Array.isArray(item) &&\n    !(item instanceof HTMLElement) &&\n    !(item instanceof CanvasRenderingContext2D) &&\n    typeof item !== 'function'\n  );\n}\n\n/**\n * Helper function which will merge objects recursively - creating brand new one - like clone\n *\n * @param {object} target\n * @params {object} sources\n *\n * @returns {object}\n */\nexport function mergeDeep(target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof target[key] === 'undefined') {\n          target[key] = {};\n        }\n        target[key] = mergeDeep(target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        target[key] = [];\n        for (let item of source[key]) {\n          if (isObject(item)) {\n            target[key].push(mergeDeep({}, item));\n            continue;\n          }\n          target[key].push(item);\n        }\n      } else {\n        target[key] = source[key];\n      }\n    }\n  }\n  return mergeDeep(target, ...sources);\n}\n\n/**\n * Detect if object or array is observable\n *\n * @param {object|array} obj\n *\n * @returns {boolean}\n */\nfunction isObservable(obj) {\n  return typeof obj === 'object' && obj.hasOwnProperty('__ob__');\n}\n\n/**\n * Same as above but with reactivity in mind\n *\n * @param {object} target\n * @params {object} sources\n *\n * @returns {object}\n */\nexport function mergeDeepReactive(component, target, ...sources) {\n  if (!sources.length) {\n    return target;\n  }\n  const source = sources.shift();\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (typeof target[key] === 'undefined') {\n          component.$set(target, key, {});\n        }\n        mergeDeepReactive(component, target[key], source[key]);\n      } else if (Array.isArray(source[key])) {\n        component.$set(target, key, source[key]);\n      } else if (typeof source[key] === 'function') {\n        if (source[key].toString().indexOf('[native code]') === -1) {\n          target[key] = source[key];\n        }\n      } else {\n        component.$set(target, key, source[key]);\n      }\n    }\n  }\n  return mergeDeepReactive(component, target, ...sources);\n}\n/**\n * Check if objects or arrays are equal by comparing nested values\n *\n * @param {object|array} left\n * @param {object|array} right\n *\n * @returns {boolean}\n */\nexport function notEqualDeep(left, right, cache = [], path = '') {\n  if (typeof right !== typeof left) {\n    return { left, right, what: path + '.typeof' };\n  } else if (Array.isArray(left) && !Array.isArray(right)) {\n    return { left, right, what: path + '.isArray' };\n  } else if (Array.isArray(right) && !Array.isArray(left)) {\n    return { left, right, what: path + '.isArray' };\n  } else if (Array.isArray(left) && Array.isArray(right)) {\n    if (left.length !== right.length) {\n      return { left, right, what: path + '.length' };\n    }\n    let what;\n    for (let index = 0, len = left.length; index < len; index++) {\n      if ((what = notEqualDeep(left[index], right[index], cache, path + '.' + index))) {\n        return what;\n      }\n    }\n  } else if (isObject(left) && !isObject(right)) {\n    return { left, right, what: path + '.isObject' };\n  } else if (isObject(right) && !isObject(left)) {\n    return { left, right, what: path + '.isObject' };\n  } else if (isObject(left) && isObject(right)) {\n    for (let key in left) {\n      if (!left.hasOwnProperty(key) || !left.propertyIsEnumerable(key)) {\n        continue;\n      }\n      if (!right.hasOwnProperty(key)) {\n        return { left, right, what: path + '.' + key };\n      }\n      let what;\n      if ((what = notEqualDeep(left[key], right[key], cache, path + '.' + key))) {\n        return what;\n      }\n    }\n  } else if (left !== right) {\n    return { left, right, what: path + '. !==' };\n  }\n  return false;\n}\n\n/**\n * GanttElastic\n * Main vue component\n */\nconst GanttElastic = {\n  name: 'GanttElastic',\n  components: {\n    MainView\n  },\n  props: ['tasks', 'options', 'dynamicStyle'],\n  provide() {\n    const provider = {};\n    const self = this;\n    Object.defineProperty(provider, 'root', {\n      enumerable: true,\n      get: () => self\n    });\n    return provider;\n  },\n  data() {\n    return {\n      state: {\n        tasks: [],\n        options: {\n          scrollBarHeight: 0,\n          allVisibleTasksHeight: 0,\n          outerHeight: 0,\n          scroll: {\n            left: 0,\n            top: 0\n          }\n        },\n        dynamicStyle: {},\n        refs: {},\n        tasksById: {},\n        taskTree: {},\n        ctx,\n        emitTasksChanges: true, // some operations may pause emitting changes to parent component\n        emitOptionsChanges: true, // some operations may pause emitting changes to parent component\n        resizeObserver: null,\n        unwatchTasks: null,\n        unwatchOptions: null,\n        unwatchStyle: null,\n        unwatchOutputTasks: null,\n        unwatchOutputOptions: null,\n        unwatchOutputStyle: null\n      }\n    };\n  },\n  methods: {\n    mergeDeep,\n    mergeDeepReactive,\n\n    /**\n     * Calculate height of scrollbar in current browser\n     *\n     * @returns {number}\n     */\n    getScrollBarHeight() {\n      const outer = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.height = '100px';\n      outer.style.msOverflowStyle = 'scrollbar';\n      document.body.appendChild(outer);\n      var noScroll = outer.offsetHeight;\n      outer.style.overflow = 'scroll';\n      var inner = document.createElement('div');\n      inner.style.height = '100%';\n      outer.appendChild(inner);\n      var withScroll = inner.offsetHeight;\n      outer.parentNode.removeChild(outer);\n      const height = noScroll - withScroll;\n      this.style['chart-scroll-container--vertical']['margin-left'] = `-${height}px`;\n      return (this.state.options.scrollBarHeight = height);\n    },\n\n    /**\n     * Fill out empty task properties and make it reactive\n     *\n     * @param {array} tasks\n     */\n    fillTasks(tasks) {\n      for (let task of tasks) {\n        if (typeof task.x === 'undefined') {\n          task.x = 0;\n        }\n        if (typeof task.y === 'undefined') {\n          task.y = 0;\n        }\n        if (typeof task.width === 'undefined') {\n          task.width = 0;\n        }\n        if (typeof task.height === 'undefined') {\n          task.height = 0;\n        }\n        if (typeof task.mouseOver === 'undefined') {\n          task.mouseOver = false;\n        }\n        if (typeof task.collapsed === 'undefined') {\n          task.collapsed = false;\n        }\n        if (typeof task.dependentOn === 'undefined') {\n          task.dependentOn = [];\n        }\n        if (typeof task.parentId === 'undefined') {\n          task.parentId = null;\n        }\n        if (typeof task.style === 'undefined') {\n          task.style = {};\n        }\n        if (typeof task.children === 'undefined') {\n          task.children = [];\n        }\n        if (typeof task.allChildren === 'undefined') {\n          task.allChildren = [];\n        }\n        if (typeof task.parents === 'undefined') {\n          task.parents = [];\n        }\n        if (typeof task.parent === 'undefined') {\n          task.parent = null;\n        }\n        if (typeof task.startTime === 'undefined') {\n          task.startTime = dayjs(task.start).valueOf();\n        }\n        if (typeof task.endTime === 'undefined' && task.hasOwnProperty('end')) {\n          task.endTime = dayjs(task.end).valueOf();\n        } else if (typeof task.endTime === 'undefined' && task.hasOwnProperty('duration')) {\n          task.endTime = task.startTime + task.duration;\n        }\n        if (typeof task.duration === 'undefined' && task.hasOwnProperty('endTime')) {\n          task.duration = task.endTime - task.startTime;\n        }\n      }\n      return tasks;\n    },\n\n    /**\n     * Map tasks\n     *\n     * @param {Array} tasks\n     * @param {Object} options\n     */\n    mapTasks(tasks, options) {\n      for (let [index, task] of tasks.entries()) {\n        tasks[index] = {\n          ...task,\n          id: task[options.taskMapping.id],\n          start: task[options.taskMapping.start],\n          label: task[options.taskMapping.label],\n          duration: task[options.taskMapping.duration],\n          progress: task[options.taskMapping.progress],\n          type: task[options.taskMapping.type],\n          style: task[options.taskMapping.style],\n          collapsed: task[options.taskMapping.collapsed]\n        };\n      }\n      return tasks;\n    },\n\n    /**\n     * Initialize component\n     */\n    initialize(itsUpdate = '') {\n      let options = mergeDeep({}, this.state.options, getOptions(this.options), this.options);\n      let tasks = this.mapTasks(this.tasks, options);\n      if (Object.keys(this.state.dynamicStyle).length === 0) {\n        this.initializeStyle();\n      }\n      dayjs.locale(options.locale, null, true);\n      dayjs.locale(options.locale.name);\n      if (typeof options.taskList === 'undefined') {\n        options.taskList = {};\n      }\n      options.taskList.columns = options.taskList.columns.map((column, index) => {\n        column.thresholdPercent = 100;\n        column.widthFromPercentage = 0;\n        column.finalWidth = 0;\n        if (typeof column.height === 'undefined') {\n          column.height = 0;\n        }\n        if (typeof column.style === 'undefined') {\n          column.style = {};\n        }\n        column._id = `${index}-${column.label}`;\n        return column;\n      });\n      this.state.options = options;\n      tasks = this.fillTasks(tasks);\n      this.state.tasksById = this.resetTaskTree(tasks);\n      this.state.taskTree = this.makeTaskTree(this.state.rootTask, tasks);\n      this.state.tasks = this.state.taskTree.allChildren.map(childId => this.getTask(childId));\n      this.calculateTaskListColumnsDimensions();\n      this.state.options.scrollBarHeight = this.getScrollBarHeight();\n      this.state.options.outerHeight = this.state.options.height + this.state.options.scrollBarHeight;\n      this.globalOnResize();\n    },\n\n    /**\n     * Initialize style\n     */\n    initializeStyle() {\n      this.state.dynamicStyle = mergeDeep({}, prepareStyle(this.dynamicStyle), this.dynamicStyle);\n    },\n\n    /**\n     * Get calendar rows outer height\n     *\n     * @returns {int}\n     */\n    getCalendarHeight() {\n      return this.state.options.calendar.height + this.state.options.calendar.strokeWidth;\n    },\n\n    /**\n     * Get maximal level of nested task children\n     *\n     * @returns {int}\n     */\n    getMaximalLevel() {\n      let maximalLevel = 0;\n      this.state.tasks.forEach(task => {\n        if (task.parents.length > maximalLevel) {\n          maximalLevel = task.parents.length;\n        }\n      });\n      return maximalLevel - 1;\n    },\n\n    /**\n     * Get maximal expander width - to calculate straight task list text\n     *\n     * @returns {int}\n     */\n    getMaximalExpanderWidth() {\n      return (\n        this.getMaximalLevel() * this.state.options.taskList.expander.padding +\n        this.state.options.taskList.expander.margin\n      );\n    },\n\n    /**\n     * Synchronize scrollTop property when row height is changed\n     */\n    syncScrollTop() {\n      if (\n        this.state.refs.taskListItems &&\n        this.state.refs.chartGraph.scrollTop !== this.state.refs.taskListItems.scrollTop\n      ) {\n        this.state.options.scroll.top = this.state.refs.taskListItems.scrollTop = this.state.refs.chartScrollContainerVertical.scrollTop = this.state.refs.chartGraph.scrollTop;\n      }\n    },\n\n    /**\n     * Calculate task list columns dimensions\n     */\n    calculateTaskListColumnsDimensions() {\n      let final = 0;\n      let percentage = 0;\n      for (let column of this.state.options.taskList.columns) {\n        if (column.expander) {\n          column.widthFromPercentage =\n            ((this.getMaximalExpanderWidth() + column.width) / 100) * this.state.options.taskList.percent;\n        } else {\n          column.widthFromPercentage = (column.width / 100) * this.state.options.taskList.percent;\n        }\n        percentage += column.widthFromPercentage;\n        column.finalWidth = (column.thresholdPercent * column.widthFromPercentage) / 100;\n        final += column.finalWidth;\n        column.height = this.getTaskHeight() - this.style['grid-line-horizontal']['stroke-width'];\n      }\n      this.state.options.taskList.widthFromPercentage = percentage;\n      this.state.options.taskList.finalWidth = final;\n    },\n\n    /**\n     * Reset task tree - which is used to create tree like structure inside task list\n     */\n    resetTaskTree(tasks) {\n      this.$set(this.state, 'rootTask', {\n        id: null,\n        label: 'root',\n        children: [],\n        allChildren: [],\n        parents: [],\n        parent: null,\n        __root: true\n      });\n      const tasksById = {};\n      for (let i = 0, len = tasks.length; i < len; i++) {\n        let current = tasks[i];\n        current.children = [];\n        current.allChildren = [];\n        current.parent = null;\n        current.parents = [];\n        tasksById[current.id] = current;\n      }\n      return tasksById;\n    },\n\n    /**\n     * Make task tree, after reset - look above\n     *\n     * @param {object} task\n     * @returns {object} tasks with children and parents\n     */\n    makeTaskTree(task, tasks) {\n      for (let i = 0, len = tasks.length; i < len; i++) {\n        let current = tasks[i];\n        if (current.parentId === task.id) {\n          if (task.parents.length) {\n            task.parents.forEach(parent => current.parents.push(parent));\n          }\n          if (!task.propertyIsEnumerable('__root')) {\n            current.parents.push(task.id);\n            current.parent = task.id;\n          } else {\n            current.parents = [];\n            current.parent = null;\n          }\n          current = this.makeTaskTree(current, tasks);\n          task.allChildren.push(current.id);\n          task.children.push(current.id);\n          current.allChildren.forEach(childId => task.allChildren.push(childId));\n        }\n      }\n      return task;\n    },\n\n    /**\n     * Get task by id\n     *\n     * @param {any} taskId\n     * @returns {object|null} task\n     */\n    getTask(taskId) {\n      if (typeof this.state.tasksById[taskId] !== 'undefined') {\n        return this.state.tasksById[taskId];\n      }\n      return null;\n    },\n\n    /**\n     * Get children tasks for specified taskId\n     *\n     * @param {any} taskId\n     * @returns {array} children\n     */\n    getChildren(taskId) {\n      return this.state.tasks.filter(task => task.parent === taskId);\n    },\n\n    /**\n     * Is task visible\n     *\n     * @param {Number|String|Task} task\n     */\n    isTaskVisible(task) {\n      if (typeof task === 'number' || typeof task === 'string') {\n        task = this.getTask(task);\n      }\n      for (let i = 0, len = task.parents.length; i < len; i++) {\n        if (this.getTask(task.parents[i]).collapsed) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Get svg\n     *\n     * @returns {string} html svg image of gantt\n     */\n    getSVG() {\n      return this.state.options.mainView.outerHTML;\n    },\n\n    /**\n     * Get image\n     *\n     * @param {string} type image format\n     * @returns {Promise} when resolved returns base64 image string of gantt\n     */\n    getImage(type = 'image/png') {\n      return new Promise(resolve => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          canvas.width = this.state.options.mainView.clientWidth;\n          canvas.height = this.state.options.rowsHeight;\n          canvas.getContext('2d').drawImage(img, 0, 0);\n          resolve(canvas.toDataURL(type));\n        };\n        img.src = 'data:image/svg+xml,' + encodeURIComponent(this.getSVG());\n      });\n    },\n\n    /**\n     * Get gantt total height\n     *\n     * @returns {number}\n     */\n    getHeight(visibleTasks, outer = false) {\n      let height =\n        visibleTasks.length * (this.state.options.row.height + this.state.options.chart.grid.horizontal.gap * 2) +\n        this.state.options.calendar.height +\n        this.state.options.calendar.strokeWidth +\n        this.state.options.calendar.gap;\n      if (outer) {\n        height += this.state.options.scrollBarHeight;\n      }\n      return height;\n    },\n\n    /**\n     * Get one task height\n     *\n     * @returns {number}\n     */\n    getTaskHeight(withStroke = false) {\n      if (withStroke) {\n        return (\n          this.state.options.row.height +\n          this.state.options.chart.grid.horizontal.gap * 2 +\n          this.style['grid-line-horizontal']['stroke-width']\n        );\n      }\n      return this.state.options.row.height + this.state.options.chart.grid.horizontal.gap * 2;\n    },\n\n    /**\n     * Get specified tasks height\n     *\n     * @returns {number}\n     */\n    getTasksHeight(visibleTasks) {\n      return visibleTasks.length * this.getTaskHeight();\n    },\n\n    /**\n     * Convert time (in milliseconds) to pixel offset inside chart\n     *\n     * @param {int} ms\n     * @returns {number}\n     */\n    timeToPixelOffsetX(ms) {\n      let x = ms - this.state.options.times.firstTime;\n      if (x) {\n        x = x / this.state.options.times.timePerPixel;\n      }\n      return x;\n    },\n\n    /**\n     * Convert pixel offset inside chart to corresponding time offset in milliseconds\n     *\n     * @param {number} pixelOffsetX\n     * @returns {int} milliseconds\n     */\n    pixelOffsetXToTime(pixelOffsetX) {\n      let offset = pixelOffsetX + this.style['grid-line-vertical']['stroke-width'] / 2;\n      return offset * this.state.options.times.timePerPixel + this.state.options.times.firstTime;\n    },\n\n    /**\n     * Determine if element is inside current view port\n     *\n     * @param {number} x - element placement\n     * @param {number} width - element width\n     * @param {int} buffer - or threshold, if element is outside viewport but offset from view port is below this value return true\n     * @returns {boolean}\n     */\n    isInsideViewPort(x, width, buffer = 5000) {\n      return (\n        (x + width + buffer >= this.state.options.scroll.chart.left &&\n          x - buffer <= this.state.options.scroll.chart.right) ||\n        (x - buffer <= this.state.options.scroll.chart.left &&\n          x + width + buffer >= this.state.options.scroll.chart.right)\n      );\n    },\n\n    /**\n     * Chart scroll event handler\n     *\n     * @param {event} ev\n     */\n    onScrollChart(ev) {\n      this._onScrollChart(\n        this.state.refs.chartScrollContainerHorizontal.scrollLeft,\n        this.state.refs.chartScrollContainerVertical.scrollTop\n      );\n    },\n\n    /**\n     * After same as above but with different arguments - normalized\n     *\n     * @param {number} left\n     * @param {number} top\n     */\n    _onScrollChart(left, top) {\n      if (this.state.options.scroll.chart.left === left && this.state.options.scroll.chart.top === top) {\n        return;\n      }\n      const chartContainerWidth = this.state.refs.chartContainer.clientWidth;\n      this.state.options.scroll.chart.left = left;\n      this.state.options.scroll.chart.right = left + chartContainerWidth;\n      this.state.options.scroll.chart.percent = (left / this.state.options.times.totalViewDurationPx) * 100;\n      this.state.options.scroll.chart.top = top;\n      this.state.options.scroll.chart.time = this.pixelOffsetXToTime(left);\n      this.state.options.scroll.chart.timeCenter = this.pixelOffsetXToTime(left + chartContainerWidth / 2);\n      this.state.options.scroll.chart.dateTime.left = dayjs(this.state.options.scroll.chart.time).valueOf();\n      this.state.options.scroll.chart.dateTime.right = dayjs(\n        this.pixelOffsetXToTime(left + this.state.refs.chart.clientWidth)\n      ).valueOf();\n      this.scrollTo(left, top);\n    },\n\n    /**\n     * Scroll current chart to specified time (in milliseconds)\n     *\n     * @param {int} time\n     */\n    scrollToTime(time) {\n      let pos = this.timeToPixelOffsetX(time);\n      const chartContainerWidth = this.state.refs.chartContainer.clientWidth;\n      pos = pos - chartContainerWidth / 2;\n      if (pos > this.state.options.width) {\n        pos = this.state.options.width - chartContainerWidth;\n      }\n      this.scrollTo(pos);\n    },\n\n    /**\n     * Scroll chart or task list to specified pixel values\n     *\n     * @param {number|null} left\n     * @param {number|null} top\n     */\n    scrollTo(left = null, top = null) {\n      if (left !== null) {\n        this.state.refs.chartCalendarContainer.scrollLeft = left;\n        this.state.refs.chartGraphContainer.scrollLeft = left;\n        this.state.refs.chartScrollContainerHorizontal.scrollLeft = left;\n        this.state.options.scroll.left = left;\n      }\n      if (top !== null) {\n        this.state.refs.chartScrollContainerVertical.scrollTop = top;\n        this.state.refs.chartGraph.scrollTop = top;\n        this.state.refs.taskListItems.scrollTop = top;\n        this.state.options.scroll.top = top;\n        this.syncScrollTop();\n      }\n    },\n\n    /**\n     * After some actions like time zoom change we need to recompensate scroll position\n     * so as a result everything will be in same place\n     */\n    fixScrollPos() {\n      this.scrollToTime(this.state.options.scroll.chart.timeCenter);\n    },\n\n    /**\n     * Mouse wheel event handler\n     */\n    onWheelChart(ev) {\n      if (!ev.shiftKey && ev.deltaX === 0) {\n        let top = this.state.options.scroll.top + ev.deltaY;\n        const chartClientHeight = this.state.options.rowsHeight;\n        const scrollHeight = this.state.refs.chartGraph.scrollHeight - chartClientHeight;\n        if (top < 0) {\n          top = 0;\n        } else if (top > scrollHeight) {\n          top = scrollHeight;\n        }\n        this.scrollTo(null, top);\n      } else if (ev.shiftKey && ev.deltaX === 0) {\n        let left = this.state.options.scroll.left + ev.deltaY;\n        const chartClientWidth = this.state.refs.chartScrollContainerHorizontal.clientWidth;\n        const scrollWidth = this.state.refs.chartScrollContainerHorizontal.scrollWidth - chartClientWidth;\n        if (left < 0) {\n          left = 0;\n        } else if (left > scrollWidth) {\n          left = scrollWidth;\n        }\n        this.scrollTo(left);\n      } else {\n        let left = this.state.options.scroll.left + ev.deltaX;\n        const chartClientWidth = this.state.refs.chartScrollContainerHorizontal.clientWidth;\n        const scrollWidth = this.state.refs.chartScrollContainerHorizontal.scrollWidth - chartClientWidth;\n        if (left < 0) {\n          left = 0;\n        } else if (left > scrollWidth) {\n          left = scrollWidth;\n        }\n        this.scrollTo(left);\n      }\n    },\n\n    /**\n     * Time zoom change event handler\n     */\n    onTimeZoomChange(timeZoom) {\n      this.state.options.times.timeZoom = timeZoom;\n      this.recalculateTimes();\n      this.calculateSteps();\n      this.fixScrollPos();\n    },\n\n    /**\n     * Row height change event handler\n     */\n    onRowHeightChange(height) {\n      this.state.options.row.height = height;\n      this.calculateTaskListColumnsDimensions();\n      this.syncScrollTop();\n    },\n\n    /**\n     * Scope change event handler\n     */\n    onScopeChange(value) {\n      this.state.options.scope.before = value;\n      this.state.options.scope.after = value;\n      this.initTimes();\n      this.calculateSteps();\n      this.computeCalendarWidths();\n      this.fixScrollPos();\n    },\n\n    /**\n     * Task list width change event handler\n     */\n    onTaskListWidthChange(value) {\n      this.state.options.taskList.percent = value;\n      this.calculateTaskListColumnsDimensions();\n      this.fixScrollPos();\n    },\n\n    /**\n     * Task list column width change event handler\n     */\n    onTaskListColumnWidthChange() {\n      this.calculateTaskListColumnsDimensions();\n      this.fixScrollPos();\n    },\n\n    /**\n     * Listen to specified event names\n     */\n    initializeEvents() {\n      this.$on('chart-scroll-horizontal', this.onScrollChart);\n      this.$on('chart-scroll-vertical', this.onScrollChart);\n      this.$on('chart-wheel', this.onWheelChart);\n      this.$on('times-timeZoom-change', this.onTimeZoomChange);\n      this.$on('row-height-change', this.onRowHeightChange);\n      this.$on('scope-change', this.onScopeChange);\n      this.$on('taskList-width-change', this.onTaskListWidthChange);\n      this.$on('taskList-column-width-change', this.onTaskListColumnWidthChange);\n    },\n\n    /**\n     * When some action was performed (scale change for example) - recalculate time variables\n     */\n    recalculateTimes() {\n      let max = this.state.options.times.timeScale * 60;\n      let min = this.state.options.times.timeScale;\n      let steps = max / min;\n      let percent = this.state.options.times.timeZoom / 100;\n      this.state.options.times.timePerPixel =\n        this.state.options.times.timeScale * steps * percent + Math.pow(2, this.state.options.times.timeZoom);\n      this.state.options.times.totalViewDurationMs = dayjs(this.state.options.times.lastTime).diff(\n        this.state.options.times.firstTime,\n        'milliseconds'\n      );\n      this.state.options.times.totalViewDurationPx =\n        this.state.options.times.totalViewDurationMs / this.state.options.times.timePerPixel;\n      this.state.options.width =\n        this.state.options.times.totalViewDurationPx + this.style['grid-line-vertical']['stroke-width'];\n    },\n\n    /**\n     * Initialize time variables\n     */\n    initTimes() {\n      this.state.options.times.firstTime = dayjs(this.state.options.times.firstTaskTime)\n        .locale(this.state.options.locale.name)\n        .startOf('day')\n        .subtract(this.state.options.scope.before, 'days')\n        .startOf('day')\n        .valueOf();\n      this.state.options.times.lastTime = dayjs(this.state.options.times.lastTaskTime)\n        .locale(this.state.options.locale.name)\n        .endOf('day')\n        .add(this.state.options.scope.after, 'days')\n        .endOf('day')\n        .valueOf();\n      this.recalculateTimes();\n    },\n\n    /**\n     * Calculate steps\n     * Steps are days by default\n     * Each step contain information about time offset and pixel offset of this time inside gantt chart\n     */\n    calculateSteps() {\n      const steps = [];\n      const lastMs = dayjs(this.state.options.times.lastTime).valueOf();\n      const currentDate = dayjs(this.state.options.times.firstTime);\n      steps.push({\n        time: currentDate.valueOf(),\n        offset: {\n          ms: 0,\n          px: 0\n        }\n      });\n      for (\n        let currentDate = dayjs(this.state.options.times.firstTime)\n          .add(1, this.state.options.times.stepDuration)\n          .startOf('day');\n        currentDate.valueOf() <= lastMs;\n        currentDate = currentDate.add(1, this.state.options.times.stepDuration).startOf('day')\n      ) {\n        const offsetMs = currentDate.diff(this.state.options.times.firstTime, 'milliseconds');\n        const offsetPx = offsetMs / this.state.options.times.timePerPixel;\n        const step = {\n          time: currentDate.valueOf(),\n          offset: {\n            ms: offsetMs,\n            px: offsetPx\n          }\n        };\n        const previousStep = steps[steps.length - 1];\n        previousStep.width = {\n          ms: offsetMs - previousStep.offset.ms,\n          px: offsetPx - previousStep.offset.px\n        };\n        steps.push(step);\n      }\n      const lastStep = steps[steps.length - 1];\n      lastStep.width = {\n        ms: this.state.options.times.totalViewDurationMs - lastStep.offset.ms,\n        px: this.state.options.times.totalViewDurationPx - lastStep.offset.px\n      };\n      this.state.options.times.steps = steps;\n    },\n\n    /**\n     * Calculate calendar widths - when scale was changed for example\n     */\n    computeCalendarWidths() {\n      this.computeDayWidths();\n      this.computeHourWidths();\n      this.computeMonthWidths();\n    },\n\n    /**\n     * Compute width of calendar hours column widths basing on text widths\n     */\n    computeHourWidths() {\n      const style = { ...this.style['calendar-row-text'], ...this.style['calendar-row-text--hour'] };\n      this.state.ctx.font = style['font-size'] + ' ' + style['font-family'];\n      const localeName = this.state.options.locale.name;\n      let currentDate = dayjs('2018-01-01T00:00:00').locale(localeName); // any date will be good for hours\n      let maxWidths = this.state.options.calendar.hour.maxWidths;\n      if (maxWidths.length) {\n        return;\n      }\n      for (let formatName in this.state.options.calendar.hour.format) {\n        maxWidths[formatName] = 0;\n      }\n      for (let hour = 0; hour < 24; hour++) {\n        let widths = { hour };\n        for (let formatName in this.state.options.calendar.hour.format) {\n          const hourFormatted = this.state.options.calendar.hour.format[formatName](currentDate);\n          this.state.options.calendar.hour.formatted[formatName].push(hourFormatted);\n          widths[formatName] = this.state.ctx.measureText(hourFormatted).width;\n        }\n        this.state.options.calendar.hour.widths.push(widths);\n        for (let formatName in this.state.options.calendar.hour.format) {\n          if (widths[formatName] > maxWidths[formatName]) {\n            maxWidths[formatName] = widths[formatName];\n          }\n        }\n        currentDate = currentDate.add(1, 'hour');\n      }\n    },\n\n    /**\n     * Compute calendar days column widths basing on text widths\n     */\n    computeDayWidths() {\n      const style = { ...this.style['calendar-row-text'], ...this.style['calendar-row-text--day'] };\n      this.state.ctx.font = style['font-size'] + ' ' + style['font-family'];\n      const localeName = this.state.options.locale.name;\n      let currentDate = dayjs(this.state.options.times.steps[0].time).locale(localeName);\n      let maxWidths = this.state.options.calendar.day.maxWidths;\n      this.state.options.calendar.day.widths = [];\n      Object.keys(this.state.options.calendar.day.format).forEach(formatName => {\n        maxWidths[formatName] = 0;\n      });\n      for (let day = 0, daysLen = this.state.options.times.steps.length; day < daysLen; day++) {\n        const widths = {\n          day\n        };\n        Object.keys(this.state.options.calendar.day.format).forEach(formatName => {\n          widths[formatName] = this.state.ctx.measureText(\n            this.state.options.calendar.day.format[formatName](currentDate)\n          ).width;\n        });\n        this.state.options.calendar.day.widths.push(widths);\n        Object.keys(this.state.options.calendar.day.format).forEach(formatName => {\n          if (widths[formatName] > maxWidths[formatName]) {\n            maxWidths[formatName] = widths[formatName];\n          }\n        });\n        currentDate = currentDate.add(1, 'day');\n      }\n    },\n\n    /**\n     * Months count\n     *\n     * @description Returns number of different months in specified time range\n     *\n     * @param {number} fromTime - date in ms\n     * @param {number} toTime - date in ms\n     *\n     * @returns {number} different months count\n     */\n    monthsCount(fromTime, toTime) {\n      if (fromTime > toTime) {\n        return 0;\n      }\n      let currentMonth = dayjs(fromTime);\n      let previousMonth = currentMonth.clone();\n      let monthsCount = 1;\n      while (currentMonth.valueOf() <= toTime) {\n        currentMonth = currentMonth.add(1, 'day');\n        if (previousMonth.month() !== currentMonth.month()) {\n          monthsCount++;\n        }\n        previousMonth = currentMonth.clone();\n      }\n      return monthsCount;\n    },\n\n    /**\n     * Compute month calendar columns widths basing on text widths\n     */\n    computeMonthWidths() {\n      const style = { ...this.style['calendar-row-text'], ...this.style['calendar-row-text--month'] };\n      this.state.ctx.font = style['font-size'] + ' ' + style['font-family'];\n      let maxWidths = this.state.options.calendar.month.maxWidths;\n      this.state.options.calendar.month.widths = [];\n      Object.keys(this.state.options.calendar.month.format).forEach(formatName => {\n        maxWidths[formatName] = 0;\n      });\n      const localeName = this.state.options.locale.name;\n      let currentDate = dayjs(this.state.options.times.firstTime).locale(localeName);\n      const monthsCount = this.monthsCount(this.state.options.times.firstTime, this.state.options.times.lastTime);\n      for (let month = 0; month < monthsCount; month++) {\n        const widths = {\n          month\n        };\n        Object.keys(this.state.options.calendar.month.format).forEach(formatName => {\n          widths[formatName] = this.state.ctx.measureText(\n            this.state.options.calendar.month.format[formatName](currentDate)\n          ).width;\n        });\n        this.state.options.calendar.month.widths.push(widths);\n        Object.keys(this.state.options.calendar.month.format).forEach(formatName => {\n          if (widths[formatName] > maxWidths[formatName]) {\n            maxWidths[formatName] = widths[formatName];\n          }\n        });\n        currentDate = currentDate.add(1, 'month');\n      }\n    },\n\n    /**\n     * Prepare time and date variables for gantt\n     */\n    prepareDates() {\n      let firstTaskTime = Number.MAX_SAFE_INTEGER;\n      let lastTaskTime = 0;\n      for (let index = 0, len = this.state.tasks.length; index < len; index++) {\n        let task = this.state.tasks[index];\n        if (task.startTime < firstTaskTime) {\n          firstTaskTime = task.startTime;\n        }\n        if (task.startTime + task.duration > lastTaskTime) {\n          lastTaskTime = task.startTime + task.duration;\n        }\n      }\n      this.state.options.times.firstTaskTime = firstTaskTime;\n      this.state.options.times.lastTaskTime = lastTaskTime;\n      this.state.options.times.firstTime = dayjs(firstTaskTime)\n        .locale(this.state.options.locale.name)\n        .startOf('day')\n        .subtract(this.state.options.scope.before, 'days')\n        .startOf('day')\n        .valueOf();\n      this.state.options.times.lastTime = dayjs(lastTaskTime)\n        .locale(this.state.options.locale.name)\n        .endOf('day')\n        .add(this.state.options.scope.after, 'days')\n        .endOf('day')\n        .valueOf();\n    },\n\n    /**\n     * Setup and calculate everything\n     */\n    setup(itsUpdate = '') {\n      this.initialize(itsUpdate);\n      this.prepareDates();\n      this.initTimes();\n      this.calculateSteps();\n      this.computeCalendarWidths();\n      this.state.options.taskList.width = this.state.options.taskList.columns.reduce(\n        (prev, current) => {\n          return { width: prev.width + current.width };\n        },\n        { width: 0 }\n      ).width;\n    },\n\n    /**\n     * Global resize event (from window.addEventListener)\n     */\n    globalOnResize() {\n      if (typeof this.$el === 'undefined' || !this.$el) {\n        return;\n      }\n      this.state.options.clientWidth = this.$el.clientWidth;\n      if (\n        this.state.options.taskList.widthFromPercentage >\n        (this.state.options.clientWidth / 100) * this.state.options.taskList.widthThreshold\n      ) {\n        const diff =\n          this.state.options.taskList.widthFromPercentage -\n          (this.state.options.clientWidth / 100) * this.state.options.taskList.widthThreshold;\n        let diffPercent = 100 - (diff / this.state.options.taskList.widthFromPercentage) * 100;\n        if (diffPercent < 0) {\n          diffPercent = 0;\n        }\n        this.state.options.taskList.columns.forEach(column => {\n          column.thresholdPercent = diffPercent;\n        });\n      } else {\n        this.state.options.taskList.columns.forEach(column => {\n          column.thresholdPercent = 100;\n        });\n      }\n      this.calculateTaskListColumnsDimensions();\n      this.$emit('calendar-recalculate');\n      this.syncScrollTop();\n    }\n  },\n\n  computed: {\n    /**\n     * Get visible tasks\n     * Very important method which will bring us only those tasks that are visible inside gantt chart\n     * For example when task is collapsed - children of this task are not visible - we should not render them\n     */\n    visibleTasks() {\n      const visibleTasks = this.state.tasks.filter(task => this.isTaskVisible(task));\n      const maxRows = visibleTasks.slice(0, this.state.options.maxRows);\n      this.state.options.rowsHeight = this.getTasksHeight(maxRows);\n      let heightCompensation = 0;\n      if (this.state.options.maxHeight && this.state.options.rowsHeight > this.state.options.maxHeight) {\n        heightCompensation = this.state.options.rowsHeight - this.state.options.maxHeight;\n        this.state.options.rowsHeight = this.state.options.maxHeight;\n      }\n      this.state.options.height = this.getHeight(maxRows) - heightCompensation;\n      this.state.options.allVisibleTasksHeight = this.getTasksHeight(visibleTasks);\n      this.state.options.outerHeight = this.getHeight(maxRows, true) - heightCompensation;\n      let len = visibleTasks.length;\n      for (let index = 0; index < len; index++) {\n        let task = visibleTasks[index];\n        task.width =\n          task.duration / this.state.options.times.timePerPixel - this.style['grid-line-vertical']['stroke-width'];\n        if (task.width < 0) {\n          task.width = 0;\n        }\n        task.height = this.state.options.row.height;\n        task.x = this.timeToPixelOffsetX(task.startTime);\n        task.y =\n          (this.state.options.row.height + this.state.options.chart.grid.horizontal.gap * 2) * index +\n          this.state.options.chart.grid.horizontal.gap;\n      }\n      return visibleTasks;\n    },\n\n    /**\n     * Style shortcut\n     */\n    style() {\n      return this.state.dynamicStyle;\n    },\n\n    /**\n     * Get columns and compute dimensions on the fly\n     */\n    getTaskListColumns() {\n      this.calculateTaskListColumnsDimensions();\n      return this.state.options.taskList.columns;\n    },\n\n    /**\n     * Tasks used for communicate with parent component\n     */\n    outputTasks() {\n      return this.state.tasks;\n    },\n\n    /**\n     * Options used to communicate with parent component\n     */\n    outputOptions() {\n      return this.state.options;\n    }\n  },\n\n  /**\n   * Watch tasks after gantt instance is created and react when we have new kids on the block\n   */\n  created() {\n    this.initializeEvents();\n    this.setup();\n    this.state.unwatchTasks = this.$watch(\n      'tasks',\n      tasks => {\n        const notEqual = notEqualDeep(tasks, this.outputTasks);\n        if (notEqual) {\n          this.setup('tasks');\n        }\n      },\n      { deep: true }\n    );\n    this.state.unwatchOptions = this.$watch(\n      'options',\n      opts => {\n        const notEqual = notEqualDeep(opts, this.outputOptions);\n        if (notEqual) {\n          this.setup('options');\n        }\n      },\n      { deep: true }\n    );\n    this.state.unwatchStyle = this.$watch(\n      'dynamicStyle',\n      style => {\n        const notEqual = notEqualDeep(style, this.dynamicStyle);\n        if (notEqual) {\n          this.initializeStyle();\n        }\n      },\n      { deep: true, immediate: true }\n    );\n\n    this.state.unwatchOutputTasks = this.$watch(\n      'outputTasks',\n      tasks => {\n        this.$emit('tasks-changed', tasks.map(task => task));\n      },\n      { deep: true }\n    );\n    this.state.unwatchOutputOptions = this.$watch(\n      'outputOptions',\n      options => {\n        this.$emit('options-changed', mergeDeep({}, options));\n      },\n      { deep: true }\n    );\n    this.state.unwatchOutputStyle = this.$watch(\n      'style',\n      style => {\n        this.$emit('dynamic-style-changed', mergeDeep({}, style));\n      },\n      { deep: true }\n    );\n\n    this.$root.$emit('gantt-elastic-created', this);\n    this.$emit('created', this);\n  },\n\n  /**\n   * Emit before-mount event\n   */\n  beforeMount() {\n    this.$emit('before-mount', this);\n  },\n\n  /**\n   * Emit ready/mounted events and deliver this gantt instance to outside world when needed\n   */\n  mounted() {\n    this.state.options.clientWidth = this.$el.clientWidth;\n    this.state.resizeObserver = new ResizeObserver((entries, observer) => {\n      this.globalOnResize();\n    });\n    this.state.resizeObserver.observe(this.$el.parentNode);\n    this.globalOnResize();\n    this.$emit('ready', this);\n    this.$root.$emit('gantt-elastic-mounted', this);\n    this.$emit('mounted', this);\n    this.$root.$emit('gantt-elastic-ready', this);\n  },\n\n  /**\n   * Emit event when data was changed and before update (you can cleanup dom events here for example)\n   */\n  beforeUpdate() {\n    this.$emit('before-update');\n  },\n\n  /**\n   * Emit event when gantt-elastic view was updated\n   */\n  updated() {\n    this.$nextTick(() => {\n      this.$emit('updated');\n    });\n  },\n\n  /**\n   * Before destroy event - clean up\n   */\n  beforeDestroy() {\n    this.state.resizeObserver.unobserve(this.$el.parentNode);\n    this.state.unwatchTasks();\n    this.state.unwatchOptions();\n    this.state.unwatchStyle();\n    this.state.unwatchOutputTasks();\n    this.state.unwatchOutputOptions();\n    this.state.unwatchOutputStyle();\n    this.$emit('before-destroy');\n  },\n\n  /**\n   * Emit event after gantt-elastic was destroyed\n   */\n  destroyed() {\n    this.$emit('destroyed');\n  }\n};\nexport default GanttElastic;\n</script>\n\n<style>\n[class^='gantt-elastic'],\n[class*=' gantt-elastic'] {\n  box-sizing: border-box;\n}\n.gantt-elastic__main-view svg {\n  display: block;\n}\n.gantt-elastic__grid-horizontal-line,\n.gantt-elastic__grid-vertical-line {\n  stroke: #a0a0a0;\n  stroke-width: 1;\n}\nforeignObject > * {\n  margin: 0px;\n}\n.gantt-elastic .p-2 {\n  padding: 10rem;\n}\n.gantt-elastic__main-view-main-container,\n.gantt-elastic__main-view-container {\n  overflow: hidden;\n  max-width: 100%;\n}\n.gantt-elastic__task-list-header-column:last-of-type {\n  border-right: 1px solid #00000050;\n}\n.gantt-elastic__task-list-item:last-of-type {\n  border-bottom: 1px solid #00000050;\n}\n.gantt-elastic__task-list-item-value-wrapper:hover {\n  overflow: visible !important;\n}\n.gantt-elastic__task-list-item-value-wrapper:hover > .gantt-elastic__task-list-item-value-container {\n  position: relative;\n  overflow: visible !important;\n}\n.gantt-elastic__task-list-item-value-wrapper:hover > .gantt-elastic__task-list-item-value {\n  position: absolute;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}