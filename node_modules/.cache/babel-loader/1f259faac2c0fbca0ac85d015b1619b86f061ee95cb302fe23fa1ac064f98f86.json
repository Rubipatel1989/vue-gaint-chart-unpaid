{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport { isScheduledTask } from '../base/utils';\nimport { getValue, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nvar Dependency = /** @class */function () {\n  function Dependency(gantt) {\n    this.parentRecord = [];\n    this.parentIds = [];\n    this.parentPredecessors = [];\n    this.validatedParentIds = [];\n    this.storeId = null;\n    this.isChildRecordValidated = [];\n    this.parent = gantt;\n    this.dateValidateModule = this.parent.dateValidationModule;\n  }\n  /**\n   * Method to populate predecessor collections in records\n   *\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.ensurePredecessorCollection = function () {\n    var predecessorTasks = this.parent.predecessorsCollection;\n    var length = predecessorTasks.length - 1;\n    for (var count = length; count >= 0; count--) {\n      var ganttData = predecessorTasks[count];\n      var ganttProp = ganttData.ganttProperties;\n      if (!ganttData.hasChildRecords && !this.parent.allowParentDependency || this.parent.allowParentDependency) {\n        this.ensurePredecessorCollectionHelper(ganttData, ganttProp);\n      }\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData .\n   * @param {ITaskData} ganttProp .\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.ensurePredecessorCollectionHelper = function (ganttData, ganttProp) {\n    var predecessorVal = ganttProp.predecessorsName;\n    if (predecessorVal && (typeof predecessorVal === 'string' || typeof predecessorVal === 'number')) {\n      this.parent.setRecordValue('predecessor', this.calculatePredecessor(predecessorVal, ganttData), ganttProp, true);\n    } else if (predecessorVal && typeof predecessorVal === 'object' && predecessorVal.length) {\n      var preValues = [];\n      for (var c = 0; c < predecessorVal.length; c++) {\n        var predecessorItem = predecessorVal[c];\n        var preValue = {};\n        preValue.from = getValue('from', predecessorItem) ? getValue('from', predecessorItem) : predecessorVal[c];\n        preValue.to = getValue('to', predecessorItem) ? getValue('to', predecessorItem) : ganttProp.rowUniqueID;\n        preValue.type = getValue('type', predecessorItem) ? getValue('type', predecessorItem) : 'FS';\n        var offsetUnits = getValue('offset', predecessorItem);\n        if (isNullOrUndefined(offsetUnits)) {\n          preValue.offset = 0;\n          preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n        } else if (typeof offsetUnits === 'string') {\n          var tempOffsetUnits = this.getOffsetDurationUnit(getValue('offset', predecessorItem));\n          preValue.offset = tempOffsetUnits.duration;\n          preValue.offsetUnit = tempOffsetUnits.durationUnit;\n        } else {\n          preValue.offset = parseFloat(offsetUnits.toString());\n          preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n        var isOwnParent = this.checkIsParent(preValue.from.toString());\n        if (!isOwnParent) {\n          preValues.push(preValue);\n        }\n      }\n      this.parent.setRecordValue('predecessor', preValues, ganttProp, true);\n    }\n    this.parent.setRecordValue('predecessorsName', this.getPredecessorStringValue(ganttData), ganttProp, true);\n    this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n    this.parent.setRecordValue(this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n  };\n  /**\n   * To render unscheduled empty task with 1 day duration during predecessor map\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.updateUnscheduledDependency = function (data) {\n    var task = this.parent.taskFields;\n    var prdList = !isNullOrUndefined(data[task.dependency]) ? data[task.dependency].toString().split(',') : [];\n    for (var i = 0; i < prdList.length; i++) {\n      var predId = parseInt(prdList[i], 10);\n      if (!isNaN(predId)) {\n        var predData = this.parent.getRecordByID(predId.toString());\n        var record = !isNullOrUndefined(predData) ? extend({}, {}, predData.taskData, true) : null;\n        if (!isNullOrUndefined(record) && isNullOrUndefined(record[task.startDate]) && isNullOrUndefined(record[task.duration]) && isNullOrUndefined(record[task.endDate])) {\n          record[task.duration] = 1;\n          var startDate = void 0;\n          var parentItem = predData.parentItem;\n          if (parentItem) {\n            var parentTask = this.parent.getParentTask(predData.parentItem);\n            while (parentTask && !parentTask.ganttProperties.startDate) {\n              parentTask = this.parent.getParentTask(parentTask.parentItem);\n            }\n            startDate = parentTask ? parentTask.ganttProperties.startDate : this.parent.cloneProjectStartDate;\n          } else {\n            startDate = this.parent.cloneProjectStartDate;\n          }\n          record[task.startDate] = startDate;\n          this.parent.updateRecordByID(record);\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {string} fromId .\n   * @returns {boolean} .\n   */\n  Dependency.prototype.checkIsParent = function (fromId) {\n    var boolValue = false;\n    var task = this.parent.connectorLineModule.getRecordByID(fromId);\n    if (task.hasChildRecords) {\n      boolValue = true;\n    }\n    return boolValue;\n  };\n  /**\n   * Get predecessor collection object from predecessor string value\n   *\n   * @param {string | number} predecessorValue .\n   * @param {IGanttData} ganttRecord .\n   * @returns {IPredecessor[]} .\n   * @private\n   */\n  Dependency.prototype.calculatePredecessor = function (predecessorValue, ganttRecord) {\n    var _this = this;\n    var predecessor = predecessorValue.toString();\n    var collection = [];\n    var match;\n    var values = [];\n    var offsetValue;\n    var predecessorText;\n    var parentRecords = [];\n    predecessor.split(',').forEach(function (el) {\n      var isGUId = false;\n      var firstPart;\n      var predecessorName;\n      var isAlpha = false;\n      var regex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\n      var elSplit = el.split('-');\n      var id;\n      if (elSplit.length === 6) {\n        elSplit[4] = elSplit[4] + '-' + elSplit[5];\n        elSplit.pop();\n      }\n      if (elSplit.length === 5 && elSplit[4].length >= 12) {\n        id = el.substring(0, 36);\n        if (regex.test(id)) {\n          isGUId = true;\n        }\n      }\n      if (el.includes('-')) {\n        var lastIndex = el.lastIndexOf('-');\n        var lastPart = el.substring(lastIndex + 1);\n        var baseString = el.replace(lastPart, '').trim();\n        var match_1 = baseString.match(/(FS|SS|SF|FF)-$/);\n        var processedResult = (match_1 ? match_1[0] : '') + lastPart;\n        if (!/^(FS|SS|SF|FF)/.test(processedResult)) {\n          var prefixMatch = processedResult.match(/(FS|SS|SF|FF)/);\n          processedResult = prefixMatch ? prefixMatch[0] + processedResult.slice(processedResult.indexOf(prefixMatch[0]) + prefixMatch[0].length) : el;\n        }\n        predecessorName = processedResult;\n        if (el.includes('-') && /[A-Za-z]/.test(predecessorName)) {\n          var indexFS = el.indexOf(predecessorName);\n          if (indexFS !== -1) {\n            firstPart = el.substring(0, indexFS);\n            if (firstPart.includes('-')) {\n              isAlpha = true;\n            }\n          }\n        }\n      }\n      if (isGUId) {\n        var split = void 0;\n        split = elSplit[4].split('+');\n        var spliceLength = void 0;\n        if (split.length === 1) {\n          values[0] = el;\n        } else {\n          spliceLength = split[1].length;\n          values[0] = el.slice(0, -(spliceLength + 1));\n          values[1] = split[1];\n        }\n        offsetValue = '+';\n        if (elSplit[4].indexOf('-') >= 0) {\n          split = elSplit[4].split('-');\n          if (split.length === 1) {\n            values[0] = el;\n          } else {\n            spliceLength = split[1].length;\n            values[0] = el.slice(0, -(spliceLength + 1));\n            values[1] = split[1];\n          }\n          offsetValue = '-';\n        }\n      } else {\n        if (isAlpha && firstPart.includes('-')) {\n          values[0] = firstPart;\n        } else {\n          values = el.split('+');\n          offsetValue = '+';\n          if (el.indexOf('-') >= 0) {\n            values = el.split('-');\n            offsetValue = '-';\n          }\n        }\n      }\n      match = [];\n      var ids = _this.parent.viewType === 'ResourceView' ? _this.parent.getTaskIds() : _this.parent.ids;\n      var isExist1 = _this.parent.viewType === 'ResourceView' ? ids.indexOf('T' + values[0]) : ids.indexOf(values[0]);\n      if (isExist1 !== -1) {\n        match[0] = values[0];\n      } else {\n        if (ids.indexOf(values[0]) === -1) {\n          match = values[0].split(' ');\n          if (match.length === 1) {\n            if (match[0].indexOf(' ') !== -1) {\n              match = values[0].match(/(\\d+|[A-z]+)/g);\n            } else {\n              match[0] = values[0].slice(0, -2);\n              match[1] = values[0].slice(-2);\n            }\n          }\n        } else {\n          match[0] = values[0];\n        }\n      }\n      var isExist = _this.parent.viewType === 'ResourceView' ? ids.indexOf('T' + match[0]) : ids.indexOf(match[0]);\n      /*Validate for appropriate predecessor*/\n      if (match[0] && isExist !== -1) {\n        if (match.length > 1) {\n          var type = match[1].toUpperCase();\n          if (type === 'FS' || type === 'FF' || type === 'SF' || type === 'SS') {\n            predecessorText = type;\n          } else {\n            var e = \"The provided dependency type, \" + type + \", is invalid. Please ensure that the Dependency Type is FS or FF or SS or SF\";\n            _this.parent.trigger('actionFailure', {\n              error: e\n            });\n            predecessorText = 'FS';\n          }\n        } else if (el.includes('-') && /[A-Za-z]/.test(predecessorName) && firstPart.includes('-')) {\n          var type = el.slice(-2).toString();\n          type.toUpperCase();\n          if (type === 'FS' || type === 'FF' || type === 'SF' || type === 'SS') {\n            predecessorText = type;\n          } else {\n            predecessorText = 'FS';\n          }\n        } else {\n          predecessorText = 'FS';\n        }\n      } else {\n        return; // exit current loop for invalid id (match[0])\n      }\n      var tempOffset = values.length > 1 ? offsetValue + '' + values[1] : '0';\n      var offsetUnits = _this.getOffsetDurationUnit(tempOffset);\n      var obj = {\n        from: match[0],\n        type: predecessorText,\n        isDrawn: false,\n        to: _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString() : ganttRecord.ganttProperties.rowUniqueID.toString(),\n        offsetUnit: offsetUnits.durationUnit,\n        offset: offsetUnits.duration\n      };\n      var isOwnParent = _this.checkIsParent(match[0]);\n      if (!_this.parent.allowParentDependency) {\n        if (!isOwnParent) {\n          collection.push(obj);\n        }\n      } else {\n        var fromData = _this.parent.connectorLineModule.getRecordByID(obj.to);\n        var toData = _this.parent.connectorLineModule.getRecordByID(obj.from);\n        var isValid = void 0;\n        if (_this.parent.connectorLineEditModule && toData && fromData) {\n          isValid = _this.parent.connectorLineEditModule.validateParentPredecessor(toData, fromData);\n          if (isValid) {\n            collection.push(obj);\n            if (parentRecords.indexOf(toData) === -1 && toData.hasChildRecords && _this.parent.editModule.cellEditModule && _this.parent.editModule.cellEditModule.isCellEdit) {\n              parentRecords.push(extend([], [], [toData], true)[0]);\n            }\n          }\n        } else {\n          collection.push(obj);\n        }\n        match.splice(0);\n      }\n    });\n    if (parentRecords.length > 0 && this.parent.undoRedoModule && this.parent.editModule && this.parent.editModule.cellEditModule && this.parent.editModule.cellEditModule.isCellEdit) {\n      this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1]['connectedRecords'] = parentRecords;\n    }\n    var creatCollection = [];\n    collection.map(function (data) {\n      var from = data.from;\n      var to = data.to;\n      var checkColloction = [];\n      checkColloction = collection.filter(function (fdata) {\n        return fdata.from === from && fdata.to === to;\n      });\n      if (creatCollection.indexOf(checkColloction[checkColloction.length - 1]) === -1) {\n        creatCollection.push(checkColloction[checkColloction.length - 1]);\n      }\n    });\n    return creatCollection;\n  };\n  /**\n   * Get predecessor value as string with offset values\n   *\n   * @param {IGanttData} data .\n   * @returns {string} .\n   * @private\n   */\n  Dependency.prototype.getPredecessorStringValue = function (data) {\n    var predecessors = data.ganttProperties.predecessor;\n    var resultString = '';\n    var temp1;\n    var match = [];\n    if (predecessors) {\n      var length_1 = predecessors.length;\n      for (var i = 0; i < length_1; i++) {\n        var currentValue = predecessors[i];\n        var temp = '';\n        var id = this.parent.viewType === 'ResourceView' ? data.ganttProperties.taskId : data.ganttProperties.rowUniqueID;\n        if (currentValue.from !== id.toString()) {\n          temp = currentValue.from + currentValue.type;\n          if (typeof data.ganttProperties.taskId === 'string') {\n            match[0] = temp.slice(0, -2);\n            match[1] = temp.slice(-2);\n            temp1 = match[0] + ' ' + match[1];\n          } else {\n            temp1 = temp;\n          }\n          temp = temp1;\n          if (currentValue.offset !== 0) {\n            temp += currentValue.offset > 0 ? '+' + currentValue.offset + ' ' : currentValue.offset + ' ';\n            var multiple = currentValue.offset !== 1;\n            if (currentValue.offsetUnit === 'day') {\n              temp += multiple ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n            } else if (currentValue.offsetUnit === 'hour') {\n              temp += multiple ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n            } else {\n              temp += multiple ? this.parent.localeObj.getConstant('minutes') : this.parent.localeObj.getConstant('minute');\n            }\n          }\n          if (resultString.length > 0) {\n            resultString = resultString + ',' + temp;\n          } else {\n            resultString = temp;\n          }\n        }\n      }\n    }\n    return resultString;\n  };\n  /*Get duration and duration unit value from tasks*/\n  Dependency.prototype.getOffsetDurationUnit = function (val) {\n    var duration = 0;\n    var durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n    var durationUnitLabels = this.parent.durationUnitEditText;\n    if (typeof val === 'string') {\n      var values = val.match(/[^0-9]+|[0-9]+/g);\n      for (var x = 0; x < values.length; x++) {\n        values[x] = values[x].trim();\n      }\n      if (values[0] === '-' && values[1]) {\n        values[1] = values[0] + values[1];\n        values.shift();\n      } else if (values[0] === '+') {\n        values.shift();\n      }\n      if (values[1] === '.' && !isNaN(parseInt(values[2], 10))) {\n        values[0] += values[1] + values[2];\n        values.splice(1, 2);\n      }\n      if (values && values.length <= 2) {\n        duration = parseFloat(values[0]);\n        durationUnit = values[1] ? values[1].toLowerCase().trim() : '';\n        if (getValue('minute', durationUnitLabels).indexOf(durationUnit) !== -1) {\n          durationUnit = 'minute';\n        } else if (getValue('hour', durationUnitLabels).indexOf(durationUnit) !== -1) {\n          durationUnit = 'hour';\n        } else if (getValue('day', durationUnitLabels).indexOf(durationUnit) !== -1) {\n          durationUnit = 'day';\n        } else {\n          durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n      }\n    } else {\n      duration = val;\n      durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n    }\n    if (isNaN(duration)) {\n      var err = 'The provided value for the offset field is invalid.Please ensure the offset field contains only valid numeric values';\n      this.parent.trigger('actionFailure', {\n        error: err\n      });\n      duration = 0;\n      durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n    }\n    return {\n      duration: duration,\n      durationUnit: durationUnit\n    };\n  };\n  /**\n   * Update predecessor object in both from and to tasks collection\n   *\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.updatePredecessors = function () {\n    var predecessorsCollection = this.parent.predecessorsCollection;\n    var ganttRecord;\n    var length = predecessorsCollection.length;\n    for (var count = 0; count < length; count++) {\n      ganttRecord = predecessorsCollection[count];\n      if (!ganttRecord.hasChildRecords && !this.parent.allowParentDependency || this.parent.allowParentDependency) {\n        this.updatePredecessorHelper(ganttRecord, predecessorsCollection);\n        if (!ganttRecord.ganttProperties.isAutoSchedule && this.parent.editSettings.allowEditing) {\n          this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n          this.parent.connectorLineEditModule['calculateOffset'](ganttRecord);\n        }\n      }\n    }\n  };\n  /**\n   * To update predecessor collection to successor tasks\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {IGanttData[]} predecessorsCollection .\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.updatePredecessorHelper = function (ganttRecord, predecessorsCollection) {\n    var connectorsCollection = ganttRecord.ganttProperties.predecessor;\n    var successorGanttRecord;\n    var connectorCount = connectorsCollection.length;\n    predecessorsCollection = isNullOrUndefined(predecessorsCollection) ? [] : predecessorsCollection;\n    for (var i = 0; i < connectorCount; i++) {\n      var connector = connectorsCollection[i];\n      successorGanttRecord = this.parent.connectorLineModule.getRecordByID(connector.from);\n      var id = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId : ganttRecord.ganttProperties.rowUniqueID;\n      if (connector.from !== id.toString()) {\n        if (successorGanttRecord) {\n          var predecessorCollection = void 0;\n          if (successorGanttRecord.ganttProperties.predecessor) {\n            predecessorCollection = extend([], successorGanttRecord.ganttProperties.predecessor, [], true);\n            predecessorCollection.push(connector);\n            this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true);\n            //  successorGanttRecord.ganttProperties.predecessor.push(connector);\n          } else {\n            predecessorCollection = [];\n            predecessorCollection.push(connector);\n            this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true);\n            // this.parent.setRecordValue('predecessor', [], successorGanttRecord.ganttProperties, true);\n            // successorGanttRecord.ganttProperties.predecessor.push(connector);\n            predecessorsCollection.push(successorGanttRecord);\n          }\n        }\n      }\n    }\n  };\n  Dependency.prototype.traverseParents = function (record) {\n    this.parent.dataOperation.updateParentItems(record);\n  };\n  /**\n   * Method to validate date of tasks with predecessor values for all records\n   *\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.updatedRecordsDateByPredecessor = function () {\n    if (!this.parent.autoCalculateDateScheduling || this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      return;\n    }\n    var flatData = this.parent.flatData;\n    var totLength = this.parent.flatData.length;\n    for (var count = 0; count < totLength; count++) {\n      if (flatData[count].ganttProperties.predecessorsName) {\n        this.validatePredecessorDates(flatData[count]);\n        var predecessorCollection = flatData[count].ganttProperties.predecessor;\n        if (predecessorCollection && predecessorCollection.length > 1) {\n          for (var i = 0; i < predecessorCollection.length; i++) {\n            var validateRecord = this.parent.getRecordByID(predecessorCollection[i].to);\n            if (validateRecord) {\n              this.validatePredecessorDates(validateRecord);\n            }\n          }\n        }\n        if (flatData[count].hasChildRecords && this.parent.editModule && flatData[count].ganttProperties.startDate && this.parent.allowParentDependency) {\n          this.updateChildItems(flatData[count]);\n        }\n        if (flatData[count].parentItem) {\n          var recordId = flatData[count].parentItem.taskId;\n          this.traverseParents(this.parent.getRecordByID(recordId));\n        }\n      }\n    }\n  };\n  Dependency.prototype.updateParentPredecessor = function () {\n    if (this.parent.enablePredecessorValidation) {\n      var parentPredecessorLength = this.parentPredecessors.length;\n      for (var i = parentPredecessorLength - 1; i >= 0; i--) {\n        var item = this.parentPredecessors[i];\n        this.validatePredecessorDates(item);\n        if (item.ganttProperties.startDate) {\n          this.updateChildItems(item);\n        }\n      }\n    }\n  };\n  /**\n   * To validate task date values with dependency\n   *\n   * @param {IGanttData} ganttRecord .\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.validatePredecessorDates = function (ganttRecord) {\n    if (ganttRecord.ganttProperties.predecessor) {\n      var predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n      var count = void 0;\n      var parentGanttRecord = void 0;\n      var record = null;\n      var currentTaskId_1 = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString() : ganttRecord.ganttProperties.rowUniqueID.toString();\n      var predecessors = predecessorsCollection.filter(function (data) {\n        if (data.to === currentTaskId_1) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n      for (count = 0; count < predecessors.length; count++) {\n        var predecessor = predecessors[count];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n        if (this.parent.allowParentDependency && parentGanttRecord.hasChildRecords) {\n          this.parent.dataOperation.updateParentItems(parentGanttRecord);\n        }\n        record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n        if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop) {\n          var index = void 0;\n          if (isNullOrUndefined(record)) {\n            index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.to);\n            record = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n          } else if (isNullOrUndefined(parentGanttRecord)) {\n            index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.from);\n            parentGanttRecord = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n          }\n        }\n        if (this.parent.allowParentDependency && this.parent.isLoad && this.parentPredecessors.indexOf(ganttRecord) === -1 && (ganttRecord.hasChildRecords || record.hasChildRecords)) {\n          this.parentPredecessors.push(ganttRecord);\n        }\n        if (record.ganttProperties.isAutoSchedule || this.parent.validateManualTasksOnLinking) {\n          this.validateChildGanttRecord(parentGanttRecord, record);\n        }\n      }\n    }\n  };\n  /**\n   * Method to validate task with predecessor\n   *\n   * @param {IGanttData} parentGanttRecord .\n   * @param {IGanttData} childGanttRecord .\n   * @returns {void} .\n   */\n  Dependency.prototype.validateChildGanttRecord = function (parentGanttRecord, childGanttRecord) {\n    if (this.parent.editedTaskBarItem === childGanttRecord || parentGanttRecord && isNullOrUndefined(isScheduledTask(parentGanttRecord.ganttProperties)) || childGanttRecord && isNullOrUndefined(isScheduledTask(childGanttRecord.ganttProperties))) {\n      return;\n    }\n    if (this.parent.isInPredecessorValidation && (childGanttRecord.ganttProperties.isAutoSchedule || this.parent.validateManualTasksOnLinking)) {\n      var childRecordProperty = childGanttRecord.ganttProperties;\n      var currentTaskId_2 = this.parent.viewType === 'ResourceView' ? childRecordProperty.taskId.toString() : childRecordProperty.rowUniqueID.toString();\n      var predecessorsCollection = childRecordProperty.predecessor;\n      var childPredecessor = predecessorsCollection.filter(function (data) {\n        if (data.to === currentTaskId_2) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n      var startDate = this.getPredecessorDate(childGanttRecord, childPredecessor);\n      this.parent.setRecordValue('startDate', startDate, childRecordProperty, true);\n      this.parent.dataOperation.updateMappingData(childGanttRecord, 'startDate');\n      var segments = childGanttRecord.ganttProperties.segments;\n      if (isNullOrUndefined(segments) || !isNullOrUndefined(segments) && segments.length === 0) {\n        this.dateValidateModule.calculateEndDate(childGanttRecord);\n      }\n      this.parent.dataOperation.updateWidthLeft(childGanttRecord);\n      if (!this.parent.isLoad && !this.parent.isFromOnPropertyChange && childGanttRecord.parentItem && this.parent.isInPredecessorValidation && this.parent.getParentTask(childGanttRecord.parentItem).ganttProperties.isAutoSchedule) {\n        if (this.parentIds.indexOf(childGanttRecord.parentItem.uniqueID) === -1) {\n          this.parentIds.push(childGanttRecord.parentItem.uniqueID);\n          this.parentRecord.push(childGanttRecord.parentItem);\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttRecord .\n   * @param {IPredecessor[]} predecessorsCollection .\n   * @returns {Date} .\n   * @private\n   */\n  Dependency.prototype.getPredecessorDate = function (ganttRecord, predecessorsCollection) {\n    var _this = this;\n    var maxStartDate;\n    var tempStartDate;\n    var parentGanttRecord;\n    var childGanttRecord;\n    var validatedPredecessor = predecessorsCollection.filter(function (data) {\n      var id = _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId : ganttRecord.ganttProperties.rowUniqueID;\n      if (data.to === id.toString()) {\n        return data;\n      } else {\n        return null;\n      }\n    });\n    if (validatedPredecessor) {\n      var length_2 = validatedPredecessor.length;\n      for (var i = 0; i < length_2; i++) {\n        var predecessor = validatedPredecessor[i];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n        childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n        if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop && !(isNullOrUndefined(childGanttRecord) && isNullOrUndefined(parentGanttRecord))) {\n          childGanttRecord = isNullOrUndefined(childGanttRecord) ? this.getRecord(parentGanttRecord, childGanttRecord, predecessor) : childGanttRecord;\n          parentGanttRecord = isNullOrUndefined(parentGanttRecord) ? this.getRecord(parentGanttRecord, childGanttRecord, predecessor) : parentGanttRecord;\n        }\n        if (childGanttRecord && parentGanttRecord) {\n          tempStartDate = this.getValidatedStartDate(childGanttRecord.ganttProperties, parentGanttRecord.ganttProperties, predecessor);\n        }\n        if (maxStartDate === null || this.dateValidateModule.compareDates(tempStartDate, maxStartDate) === 1) {\n          maxStartDate = tempStartDate;\n        }\n      }\n    }\n    return maxStartDate;\n  };\n  /**\n   * Get validated start date as per predecessor type\n   *\n   * @param {ITaskData} ganttProperty .\n   * @param {ITaskData} parentRecordProperty .\n   * @param {IPredecessor} predecessor .\n   * @returns {Date} .\n   */\n  Dependency.prototype.getValidatedStartDate = function (ganttProperty, parentRecordProperty, predecessor) {\n    var type = predecessor.type;\n    var offset = predecessor.offset;\n    var tempDate;\n    var returnStartDate;\n    switch (type) {\n      case 'FS':\n        tempDate = this.dateValidateModule.getValidEndDate(parentRecordProperty);\n        if (!ganttProperty.isMilestone || offset !== 0) {\n          tempDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n        }\n        if (offset !== 0) {\n          tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n        }\n        if (!ganttProperty.isMilestone) {\n          returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n        } else {\n          returnStartDate = tempDate;\n        }\n        break;\n      case 'FF':\n      case 'SF':\n        tempDate = type === 'FF' ? this.dateValidateModule.getValidEndDate(parentRecordProperty) : this.dateValidateModule.getValidStartDate(parentRecordProperty);\n        if (offset !== 0) {\n          tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n        }\n        if (!ganttProperty.isMilestone) {\n          var date = new Date(tempDate);\n          date.setDate(date.getDate() - 1);\n          tempDate = this.dateValidateModule.checkEndDate(tempDate, ganttProperty);\n        }\n        if (ganttProperty.segments && ganttProperty.segments.length !== 0) {\n          var duration = this.dateValidateModule.getDuration(ganttProperty.startDate, ganttProperty.endDate, ganttProperty.durationUnit, ganttProperty.isAutoSchedule, ganttProperty.isMilestone);\n          returnStartDate = this.dateValidateModule.getStartDate(tempDate, duration, ganttProperty.durationUnit, ganttProperty);\n        } else {\n          returnStartDate = this.dateValidateModule.getStartDate(tempDate, ganttProperty.duration, ganttProperty.durationUnit, ganttProperty);\n        }\n        break;\n      case 'SS':\n        tempDate = this.dateValidateModule.getValidStartDate(parentRecordProperty);\n        if (offset !== 0) {\n          tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n        }\n        if (!ganttProperty.isMilestone) {\n          returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n        } else {\n          returnStartDate = tempDate;\n        }\n        break;\n    }\n    return returnStartDate;\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @param {IPredecessor} predecessor .\n   * @param {ITaskData} record .\n   * @returns {void} .\n   */\n  Dependency.prototype.updateDateByOffset = function (date, predecessor, record) {\n    var resultDate;\n    var offsetValue = predecessor.offset;\n    var durationUnit = predecessor.offsetUnit;\n    if (offsetValue < 0 && !isNullOrUndefined(date)) {\n      resultDate = this.dateValidateModule.getStartDate(this.dateValidateModule.checkEndDate(date, record), offsetValue * -1, durationUnit, record, true);\n    } else {\n      if (!isNullOrUndefined(date)) {\n        resultDate = this.dateValidateModule.getEndDate(date, offsetValue, durationUnit, record, false);\n      }\n      if (!record.isMilestone) {\n        resultDate = this.dateValidateModule.checkStartDate(resultDate, record);\n      }\n    }\n    return resultDate;\n  };\n  /**\n   *\n   * @param {IGanttData} records .\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.createConnectorLinesCollection = function (records) {\n    var ganttRecords = records ? records : this.parent.currentViewData;\n    if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth && this.parent.pdfExportModule.isPdfExport) {\n      ganttRecords = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneCurrentViewData'];\n    }\n    var recordLength = ganttRecords.length;\n    var count;\n    var ganttRecord;\n    var predecessorsCollection;\n    if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth && this.parent.pdfExportModule.isPdfExport) {\n      this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'] : this.parent.getExpandedRecords(this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData']);\n    } else {\n      this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n    }\n    for (count = 0; count < recordLength; count++) {\n      if (this.parent.editModule && this.parent.editModule.deletedTaskDetails.length > 0) {\n        if (ganttRecords[count].parentItem) {\n          var parentItem = this.parent.getRecordByID(ganttRecords[count].parentItem.taskId.toString());\n          this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentItem), ganttRecords[count]);\n        }\n      }\n      if (this.parent.undoRedoModule && this.parent.undoRedoModule['canUpdateIndex']) {\n        ganttRecords[count].index = count;\n        if (ganttRecords[count].parentItem && this.parent.getParentTask(ganttRecords[count].parentItem)) {\n          ganttRecords[count].parentItem.index = this.parent.getParentTask(ganttRecords[count].parentItem).index;\n        }\n      }\n      ganttRecord = ganttRecords[count];\n      predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n      if (predecessorsCollection) {\n        this.addPredecessorsCollection(predecessorsCollection);\n      }\n    }\n  };\n  /**\n   *\n   * @param {object[]} predecessorsCollection .\n   * @returns {void} .\n   */\n  Dependency.prototype.addPredecessorsCollection = function (predecessorsCollection) {\n    var predecessorsLength;\n    var predecessorCount;\n    var predecessor;\n    var parentGanttRecord;\n    var childGanttRecord;\n    if (predecessorsCollection) {\n      predecessorsLength = predecessorsCollection.length;\n      for (predecessorCount = 0; predecessorCount < predecessorsLength; predecessorCount++) {\n        predecessor = predecessorsCollection[predecessorCount];\n        var from = 'from';\n        var to = 'to';\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[from]);\n        childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[to]);\n        var isValid = true;\n        if ((parentGanttRecord && parentGanttRecord.hasChildRecords && !parentGanttRecord.expanded || childGanttRecord && childGanttRecord.hasChildRecords && !childGanttRecord.expanded) && !this.parent.allowTaskbarOverlap && this.parent.viewType === 'ProjectView') {\n          isValid = false;\n        }\n        if (isValid && this.parent.connectorLineModule.expandedRecords && this.parent.connectorLineModule.expandedRecords.indexOf(parentGanttRecord) !== -1 && this.parent.connectorLineModule.expandedRecords.indexOf(childGanttRecord) !== -1) {\n          this.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n        }\n      }\n    }\n  };\n  /**\n   * To refresh connector line object collections\n   *\n   * @param {IGanttData} parentGanttRecord .\n   * @param {IGanttData} childGanttRecord .\n   * @param {IPredecessor} predecessor .\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.updateConnectorLineObject = function (parentGanttRecord, childGanttRecord, predecessor) {\n    var connectorObj = this.parent.connectorLineModule.createConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n    if (connectorObj) {\n      if (childGanttRecord.isCritical && parentGanttRecord.isCritical) {\n        connectorObj.isCritical = true;\n      }\n      if (this.parent.connectorLineIds.length > 0 && this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) === -1 || this.parent.connectorLineIds.length === 0) {\n        this.parent.updatedConnectorLineCollection.push(connectorObj);\n        this.parent.connectorLineIds.push(connectorObj.connectorLineId);\n      } else if (this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) !== -1) {\n        var index = this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId);\n        this.parent.updatedConnectorLineCollection[index] = connectorObj;\n      }\n      predecessor.isDrawn = true;\n    }\n    return connectorObj;\n  };\n  /**\n   *\n   * @param {IGanttData} childGanttRecord .\n   * @param {IPredecessor[]} previousValue .\n   * @param {string} validationOn .\n   * @returns {void} .\n   * @private\n   */\n  Dependency.prototype.validatePredecessor = function (childGanttRecord, previousValue, validationOn) {\n    if (!this.parent.isInPredecessorValidation) {\n      return;\n    }\n    if (childGanttRecord.ganttProperties.predecessor) {\n      var taskBarModule = this.parent.editModule.taskbarEditModule;\n      var ganttProp = void 0;\n      if (taskBarModule) {\n        ganttProp = taskBarModule.taskBarEditRecord;\n      }\n      var predecessorsCollection = childGanttRecord.ganttProperties.predecessor;\n      var parentGanttRecord = void 0;\n      var record = null;\n      var predecessor = void 0;\n      var successor = void 0;\n      var currentTaskId_3 = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId.toString() : childGanttRecord.ganttProperties.rowUniqueID.toString();\n      var predecessors = predecessorsCollection.filter(function (data) {\n        if (data.to === currentTaskId_3) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n      var successors = predecessorsCollection.filter(function (data) {\n        if (data.from === currentTaskId_3) {\n          return data;\n        } else {\n          return null;\n        }\n      });\n      var parentRec = void 0;\n      for (var count = 0; count < predecessors.length; count++) {\n        predecessor = predecessors[count];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n        record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n        if (record.parentItem) {\n          parentRec = this.parent.getTaskByUniqueID(record.parentItem.uniqueID);\n          if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n            this.parent.editModule['updateParentRecords'].push(parentRec);\n          }\n        }\n        if (parentGanttRecord.parentItem) {\n          parentRec = this.parent.getTaskByUniqueID(parentGanttRecord.parentItem.uniqueID);\n          if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n            this.parent.editModule['updateParentRecords'].push(parentRec);\n          }\n        }\n        if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop && !(isNullOrUndefined(record) && isNullOrUndefined(parentGanttRecord))) {\n          record = isNullOrUndefined(record) ? this.getRecord(parentGanttRecord, record, predecessor) : record;\n          parentGanttRecord = isNullOrUndefined(parentGanttRecord) ? this.getRecord(parentGanttRecord, record, predecessor) : parentGanttRecord;\n        }\n        if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n          this.parent.isValidationEnabled = true;\n        } else {\n          this.parent.isValidationEnabled = false;\n        }\n        var id = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId : childGanttRecord.ganttProperties.rowUniqueID;\n        if ((id.toString() === predecessor.to || id.toString() === predecessor.from) && (!validationOn || validationOn === 'predecessor')) {\n          this.validateChildGanttRecord(parentGanttRecord, record);\n          if (this.parent.editModule['editedRecord'] && this.parent.editModule['editedRecord'].hasChildRecords && !this.parent.editModule['editedRecord'].parentItem) {\n            this.isValidatedParentTaskID = record.ganttProperties.taskId;\n          }\n        }\n      }\n      for (var count = 0; count < successors.length; count++) {\n        successor = successors[count];\n        parentGanttRecord = this.parent.connectorLineModule.getRecordByID(successor.from);\n        record = this.parent.connectorLineModule.getRecordByID(successor.to);\n        if (record.parentItem) {\n          parentRec = this.parent.getTaskByUniqueID(record.parentItem.uniqueID);\n          if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n            this.parent.editModule['updateParentRecords'].push(parentRec);\n          }\n        }\n        if (parentGanttRecord.parentItem) {\n          parentRec = this.parent.getTaskByUniqueID(parentGanttRecord.parentItem.uniqueID);\n          if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n            this.parent.editModule['updateParentRecords'].push(parentRec);\n          }\n        }\n        if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop && !(isNullOrUndefined(record) && isNullOrUndefined(parentGanttRecord))) {\n          record = isNullOrUndefined(record) ? this.getRecord(parentGanttRecord, record, successor) : record;\n          parentGanttRecord = isNullOrUndefined(parentGanttRecord) ? this.getRecord(parentGanttRecord, record, successor) : parentGanttRecord;\n        }\n        if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n          this.parent.isValidationEnabled = true;\n        } else {\n          this.parent.isValidationEnabled = false;\n        }\n        if (validationOn !== 'predecessor' && this.parent.isValidationEnabled) {\n          this.validateChildGanttRecord(parentGanttRecord, record);\n          if (this.parent.editModule['editedRecord'] && record) {\n            var rootParent = parentGanttRecord.parentItem ? this.parent.connectorLineEditModule.getRootParent(parentGanttRecord) : null;\n            if (record.hasChildRecords && (!this.parent.editModule['editedRecord'].hasChildRecords || !record.parentItem && (!rootParent || rootParent && rootParent.ganttProperties.taskId === this.parent.editModule['editedRecord'].ganttProperties.taskId)) && this.isValidatedParentTaskID !== record.ganttProperties.taskId) {\n              this.updateChildItems(record);\n              for (var i = 0; i < record.childRecords.length; i++) {\n                var ganttProp_1 = record.childRecords[i].ganttProperties;\n                if (this.isChildRecordValidated.indexOf(ganttProp_1.taskId) !== -1) {\n                  return;\n                }\n                this.isChildRecordValidated.push(ganttProp_1.taskId);\n                if (ganttProp_1.predecessor && ganttProp_1.predecessor.length > 0) {\n                  for (var j = 0; j < ganttProp_1.predecessor.length; j++) {\n                    var childRec = void 0;\n                    if (ganttProp_1.predecessor[j].to !== record.ganttProperties.taskId.toString()) {\n                      childRec = this.parent.flatData[this.parent.ids.indexOf(ganttProp_1.predecessor[j].to)];\n                    } else {\n                      childRec = this.parent.flatData[this.parent.ids.indexOf(ganttProp_1.predecessor[j].from)];\n                    }\n                    if (childRec) {\n                      this.validatePredecessor(childRec, [], '');\n                      if (childRec.hasChildRecords && this.parent.editModule['editedRecord'].hasChildRecords) {\n                        this.updateChildItems(childRec);\n                      }\n                      this.isValidatedParentTaskID = childRec.ganttProperties.taskId;\n                    }\n                  }\n                }\n              }\n              this.isValidatedParentTaskID = record.ganttProperties.taskId;\n            }\n            if (this.parent.editModule['editedRecord'].hasChildRecords && !this.parent.editModule['editedRecord'].parentItem) {\n              this.isValidatedParentTaskID = record.ganttProperties.taskId;\n            }\n          }\n        } else if (!record.ganttProperties.isAutoSchedule && this.parent.updateOffsetOnTaskbarEdit) {\n          this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n          this.parent.connectorLineEditModule['calculateOffset'](record);\n        }\n        if (parentGanttRecord.expanded === false || record.expanded === false) {\n          if (record) {\n            this.validatePredecessor(record, undefined, 'successor');\n          }\n          continue;\n        }\n        if (record) {\n          if (this.parent.editModule.isFirstCall) {\n            this.storeId = JSON.parse(JSON.stringify(this.parent.ids));\n            this.parent.editModule.isFirstCall = false;\n          }\n          if (this.storeId) {\n            var index = this.storeId.indexOf(record[this.parent.taskFields.id].toString()) !== -1 ? this.storeId.indexOf(record[this.parent.taskFields.id].toString()) : -1;\n            if (index !== -1) {\n              this.storeId = this.storeId.slice(0, index).concat(this.storeId.slice(index + 1));\n              this.validatePredecessor(record, undefined, 'successor');\n            }\n          } else {\n            this.validatePredecessor(record, undefined, 'successor');\n          }\n        }\n      }\n      if (record && !record.hasChildRecords && record.parentItem && this.validatedParentIds.indexOf(record.parentItem.taskId) === -1) {\n        this.validatedParentIds.push(record.parentItem.taskId);\n      }\n      var validUpdate = true;\n      if (record && record.hasChildRecords && this.validatedParentIds.indexOf(record.ganttProperties.taskId.toString()) !== -1) {\n        validUpdate = false;\n      }\n      if (validUpdate) {\n        if (record && record.ganttProperties.taskId !== this.isValidatedParentTaskID && ganttProp) {\n          if (taskBarModule.taskBarEditAction !== 'ParentDrag' && taskBarModule.taskBarEditAction !== 'ChildDrag') {\n            if (!ganttProp.hasChildRecords && record.hasChildRecords) {\n              this.updateChildItems(record);\n              this.isValidatedParentTaskID = record.ganttProperties.taskId;\n            }\n          }\n          if (record.parentItem) {\n            this.parent.dataOperation.updateParentItems(record, true);\n            var parentData = this.parent.getParentTask(record.parentItem);\n            var index = this.storeId && this.storeId.indexOf(parentData[this.parent.taskFields.id].toString()) !== -1 ? this.storeId.indexOf(parentData[this.parent.taskFields.id].toString()) : -1;\n            if (parentData.ganttProperties.predecessor && parentData.ganttProperties.predecessor.length > 0 && index !== -1) {\n              for (var i = 0; i < parentData.ganttProperties.predecessor.length; i++) {\n                if (parentData.ganttProperties.predecessor[i].to !== parentData.ganttProperties.taskId.toString()) {\n                  var childRec = this.parent.flatData[this.parent.ids.indexOf(parentData.ganttProperties.predecessor[i].to)];\n                  if (childRec && childRec.parentItem) {\n                    this.validateChildGanttRecord(record, childRec);\n                  }\n                }\n              }\n            }\n          }\n        } else if (record && record.hasChildRecords && this.isValidatedParentTaskID !== record.ganttProperties.taskId && !ganttProp) {\n          this.updateChildItems(record);\n          this.isValidatedParentTaskID = record.ganttProperties.taskId;\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttRecord .\n   * @returns {void} .\n   */\n  Dependency.prototype.updateChildItems = function (ganttRecord) {\n    var _this = this;\n    if (ganttRecord.childRecords.length > 0 && this.validatedChildItems.length > 0) {\n      var isPresent = true;\n      isPresent = !ganttRecord.childRecords.some(function (record) {\n        return _this.validatedChildItems['includes'](record);\n      });\n      if (!isPresent) {\n        return;\n      }\n    }\n    var previousData = this.parent.previousRecords[ganttRecord.uniqueID];\n    var previousStartDate;\n    if (isNullOrUndefined(previousData) || isNullOrUndefined(previousData) && !isNullOrUndefined(previousData.ganttProperties)) {\n      previousStartDate = new Date(ganttRecord.ganttProperties.startDate.getTime());\n    } else {\n      if (!isNullOrUndefined(previousData.ganttProperties.startDate)) {\n        previousStartDate = new Date(previousData.ganttProperties.startDate.getTime());\n      }\n    }\n    var currentStartDate = ganttRecord.ganttProperties.startDate;\n    var childRecords = [];\n    var validStartDate;\n    var validEndDate;\n    var calcEndDate;\n    var isRightMove;\n    var durationDiff;\n    this.getUpdatableChildRecords(ganttRecord, childRecords);\n    if (childRecords.length === 0) {\n      return;\n    }\n    if (!isNullOrUndefined(previousStartDate) && !isNullOrUndefined(currentStartDate) && previousStartDate.getTime() > currentStartDate.getTime()) {\n      validStartDate = this.parent.dateValidationModule.checkStartDate(currentStartDate);\n      validEndDate = this.parent.dateValidationModule.checkEndDate(previousStartDate, ganttRecord.ganttProperties);\n      isRightMove = false;\n    } else {\n      validStartDate = this.parent.dateValidationModule.checkStartDate(previousStartDate);\n      validEndDate = this.parent.dateValidationModule.checkEndDate(currentStartDate, ganttRecord.ganttProperties);\n      isRightMove = true;\n    }\n    //Get Duration\n    if (!isNullOrUndefined(validStartDate) && !isNullOrUndefined(validEndDate) && validStartDate.getTime() >= validEndDate.getTime()) {\n      durationDiff = 0;\n    } else {\n      durationDiff = this.parent.dateValidationModule.getDuration(validStartDate, validEndDate, 'minute', true, false);\n    }\n    for (var i = 0; i < childRecords.length; i++) {\n      if (childRecords[i].ganttProperties.isAutoSchedule) {\n        if (durationDiff > 0) {\n          var startDate = isScheduledTask(childRecords[i].ganttProperties) ? childRecords[i].ganttProperties.startDate : childRecords[i].ganttProperties.startDate ? childRecords[i].ganttProperties.startDate : childRecords[i].ganttProperties.endDate ? childRecords[i].ganttProperties.endDate : new Date(previousStartDate.toString());\n          if (isRightMove) {\n            calcEndDate = this.parent.dateValidationModule.getEndDate(this.parent.dateValidationModule.checkStartDate(startDate, childRecords[i].ganttProperties, childRecords[i].ganttProperties.isMilestone), durationDiff, 'minute', childRecords[i].ganttProperties, false);\n          } else {\n            calcEndDate = this.parent.dateValidationModule.getStartDate(this.parent.dateValidationModule.checkEndDate(startDate, childRecords[i].ganttProperties), durationDiff, 'minute', childRecords[i].ganttProperties);\n          }\n          this.calculateDateByRoundOffDuration(childRecords[i], calcEndDate);\n          if (this.parent.isOnEdit && this.validatedChildItems.indexOf(childRecords[i]) === -1) {\n            this.validatedChildItems.push(childRecords[i]);\n          }\n        } else if (isNullOrUndefined(previousData)) {\n          calcEndDate = previousStartDate;\n          if (childRecords[i].ganttProperties.startDate.getTime() <= calcEndDate.getTime()) {\n            this.calculateDateByRoundOffDuration(childRecords[i], calcEndDate);\n          }\n          if (this.parent.isOnEdit && this.validatedChildItems.indexOf(childRecords[i]) === -1) {\n            this.validatedChildItems.push(childRecords[i]);\n          }\n        }\n      }\n    }\n    if (childRecords.length) {\n      this.parent.dataOperation.updateParentItems(ganttRecord, true);\n    }\n  };\n  /**\n   * To get updated child records.\n   *\n   * @param {IGanttData} parentRecord .\n   * @param {IGanttData} childLists .\n   * @returns {void} .\n   */\n  Dependency.prototype.getUpdatableChildRecords = function (parentRecord, childLists) {\n    var childRecords = parentRecord.childRecords;\n    for (var i = 0; i < childRecords.length; i++) {\n      if (childRecords[i].ganttProperties.isAutoSchedule) {\n        childLists.push(childRecords[i]);\n        if (childRecords[i].hasChildRecords) {\n          this.getUpdatableChildRecords(childRecords[i], childLists);\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} data .\n   * @param {Date} newStartDate .\n   * @returns {void} .\n   */\n  Dependency.prototype.calculateDateByRoundOffDuration = function (data, newStartDate) {\n    var ganttRecord = data;\n    var taskData = ganttRecord.ganttProperties;\n    var projectStartDate = new Date(newStartDate.getTime());\n    if (!isNullOrUndefined(taskData.endDate) && isNullOrUndefined(taskData.startDate)) {\n      var endDate = this.parent.dateValidationModule.checkStartDate(projectStartDate, taskData, null);\n      this.parent.setRecordValue('endDate', this.parent.dateValidationModule.checkEndDate(endDate, ganttRecord.ganttProperties), taskData, true);\n    } else {\n      this.parent.setRecordValue('startDate', this.parent.dateValidationModule.checkStartDate(projectStartDate, taskData, false), taskData, true);\n      if (!isNullOrUndefined(taskData.duration)) {\n        this.parent.dateValidationModule.calculateEndDate(ganttRecord);\n      }\n    }\n    this.parent.dataOperation.updateWidthLeft(data);\n    this.parent.dataOperation.updateTaskData(ganttRecord);\n  };\n  Dependency.prototype.getRecord = function (parentGanttRecord, record, predecessor) {\n    var index;\n    var data;\n    if (isNullOrUndefined(record)) {\n      index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.to);\n      data = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n    } else if (isNullOrUndefined(parentGanttRecord)) {\n      index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.from);\n      data = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n    }\n    return data;\n  };\n  /**\n   * Method to get validate able predecessor alone from record\n   *\n   * @param {IGanttData} record .\n   * @returns {IPredecessor[]} .\n   * @private\n   */\n  Dependency.prototype.getValidPredecessor = function (record) {\n    var _this = this;\n    var validPredecessor = [];\n    if (!isNullOrUndefined(record)) {\n      var recPredecessor = record.ganttProperties.predecessor;\n      if (recPredecessor && recPredecessor.length > 0) {\n        validPredecessor = recPredecessor.filter(function (value) {\n          var id = _this.parent.viewType === 'ResourceView' ? record.ganttProperties.taskId : record.ganttProperties.rowUniqueID;\n          return value.from !== id.toString();\n        });\n      }\n    }\n    return validPredecessor;\n  };\n  return Dependency;\n}();\nexport { Dependency };","map":{"version":3,"names":["isScheduledTask","getValue","isNullOrUndefined","extend","Dependency","gantt","parentRecord","parentIds","parentPredecessors","validatedParentIds","storeId","isChildRecordValidated","parent","dateValidateModule","dateValidationModule","prototype","ensurePredecessorCollection","predecessorTasks","predecessorsCollection","length","count","ganttData","ganttProp","ganttProperties","hasChildRecords","allowParentDependency","ensurePredecessorCollectionHelper","predecessorVal","predecessorsName","setRecordValue","calculatePredecessor","preValues","c","predecessorItem","preValue","from","to","rowUniqueID","type","offsetUnits","offset","offsetUnit","durationUnit","toLocaleLowerCase","tempOffsetUnits","getOffsetDurationUnit","duration","parseFloat","toString","isOwnParent","checkIsParent","push","getPredecessorStringValue","taskFields","dependency","updateUnscheduledDependency","data","task","prdList","split","i","predId","parseInt","isNaN","predData","getRecordByID","record","taskData","startDate","endDate","parentItem","parentTask","getParentTask","cloneProjectStartDate","updateRecordByID","fromId","boolValue","connectorLineModule","predecessorValue","ganttRecord","_this","predecessor","collection","match","values","offsetValue","predecessorText","parentRecords","forEach","el","isGUId","firstPart","predecessorName","isAlpha","regex","elSplit","id","pop","substring","test","includes","lastIndex","lastIndexOf","lastPart","baseString","replace","trim","match_1","processedResult","prefixMatch","slice","indexOf","indexFS","spliceLength","ids","viewType","getTaskIds","isExist1","isExist","toUpperCase","e","trigger","error","tempOffset","obj","isDrawn","taskId","fromData","toData","isValid","connectorLineEditModule","validateParentPredecessor","editModule","cellEditModule","isCellEdit","splice","undoRedoModule","creatCollection","map","checkColloction","filter","fdata","predecessors","resultString","temp1","length_1","currentValue","temp","multiple","localeObj","getConstant","val","durationUnitLabels","durationUnitEditText","x","shift","toLowerCase","err","updatePredecessors","updatePredecessorHelper","isAutoSchedule","editSettings","allowEditing","connectorsCollection","successorGanttRecord","connectorCount","connector","predecessorCollection","traverseParents","dataOperation","updateParentItems","updatedRecordsDateByPredecessor","autoCalculateDateScheduling","isLoad","treeGrid","loadChildOnDemand","hasChildMapping","flatData","totLength","validatePredecessorDates","validateRecord","updateChildItems","recordId","updateParentPredecessor","enablePredecessorValidation","parentPredecessorLength","item","parentGanttRecord","currentTaskId_1","allowTaskbarDragAndDrop","index","taskbarEditModule","previousIds","previousFlatData","validateManualTasksOnLinking","validateChildGanttRecord","childGanttRecord","editedTaskBarItem","isInPredecessorValidation","childRecordProperty","currentTaskId_2","childPredecessor","getPredecessorDate","updateMappingData","segments","calculateEndDate","updateWidthLeft","isFromOnPropertyChange","uniqueID","maxStartDate","tempStartDate","validatedPredecessor","length_2","getRecord","getValidatedStartDate","compareDates","ganttProperty","parentRecordProperty","tempDate","returnStartDate","getValidEndDate","isMilestone","checkStartDate","updateDateByOffset","getValidStartDate","date","Date","setDate","getDate","checkEndDate","getDuration","getStartDate","resultDate","getEndDate","createConnectorLinesCollection","records","ganttRecords","currentViewData","pdfExportModule","isPdfExport","helper","exportProps","fitToWidthSettings","isFitToWidth","beforeSinglePageExport","recordLength","expandedRecords","virtualScrollModule","enableVirtualization","getExpandedRecords","updatedRecords","deletedTaskDetails","getCloneParent","addPredecessorsCollection","predecessorsLength","predecessorCount","expanded","allowTaskbarOverlap","updateConnectorLineObject","connectorObj","createConnectorLineObject","isCritical","connectorLineIds","connectorLineId","updatedConnectorLineCollection","validatePredecessor","previousValue","validationOn","taskBarModule","taskBarEditRecord","successor","currentTaskId_3","successors","parentRec","getTaskByUniqueID","isValidationEnabled","isValidatedParentTaskID","rootParent","getRootParent","childRecords","ganttProp_1","j","childRec","updateOffsetOnTaskbarEdit","undefined","isFirstCall","JSON","parse","stringify","concat","validUpdate","taskBarEditAction","parentData","validatedChildItems","isPresent","some","previousData","previousRecords","previousStartDate","getTime","currentStartDate","validStartDate","validEndDate","calcEndDate","isRightMove","durationDiff","getUpdatableChildRecords","calculateDateByRoundOffDuration","isOnEdit","childLists","newStartDate","projectStartDate","updateTaskData","getValidPredecessor","validPredecessor","recPredecessor","value"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/dependency.js"],"sourcesContent":["import { isScheduledTask } from '../base/utils';\nimport { getValue, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nvar Dependency = /** @class */ (function () {\n    function Dependency(gantt) {\n        this.parentRecord = [];\n        this.parentIds = [];\n        this.parentPredecessors = [];\n        this.validatedParentIds = [];\n        this.storeId = null;\n        this.isChildRecordValidated = [];\n        this.parent = gantt;\n        this.dateValidateModule = this.parent.dateValidationModule;\n    }\n    /**\n     * Method to populate predecessor collections in records\n     *\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.ensurePredecessorCollection = function () {\n        var predecessorTasks = this.parent.predecessorsCollection;\n        var length = predecessorTasks.length - 1;\n        for (var count = length; count >= 0; count--) {\n            var ganttData = predecessorTasks[count];\n            var ganttProp = ganttData.ganttProperties;\n            if ((!ganttData.hasChildRecords && !this.parent.allowParentDependency) || this.parent.allowParentDependency) {\n                this.ensurePredecessorCollectionHelper(ganttData, ganttProp);\n            }\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData .\n     * @param {ITaskData} ganttProp .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.ensurePredecessorCollectionHelper = function (ganttData, ganttProp) {\n        var predecessorVal = ganttProp.predecessorsName;\n        if (predecessorVal && (typeof predecessorVal === 'string' || typeof predecessorVal === 'number')) {\n            this.parent.setRecordValue('predecessor', this.calculatePredecessor(predecessorVal, ganttData), ganttProp, true);\n        }\n        else if (predecessorVal && typeof predecessorVal === 'object' && predecessorVal.length) {\n            var preValues = [];\n            for (var c = 0; c < predecessorVal.length; c++) {\n                var predecessorItem = predecessorVal[c];\n                var preValue = {};\n                preValue.from = getValue('from', predecessorItem) ? getValue('from', predecessorItem) : predecessorVal[c];\n                preValue.to = getValue('to', predecessorItem) ? getValue('to', predecessorItem) : ganttProp.rowUniqueID;\n                preValue.type = getValue('type', predecessorItem) ? getValue('type', predecessorItem) : 'FS';\n                var offsetUnits = getValue('offset', predecessorItem);\n                if (isNullOrUndefined(offsetUnits)) {\n                    preValue.offset = 0;\n                    preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n                }\n                else if (typeof offsetUnits === 'string') {\n                    var tempOffsetUnits = this.getOffsetDurationUnit(getValue('offset', predecessorItem));\n                    preValue.offset = tempOffsetUnits.duration;\n                    preValue.offsetUnit = tempOffsetUnits.durationUnit;\n                }\n                else {\n                    preValue.offset = parseFloat(offsetUnits.toString());\n                    preValue.offsetUnit = this.parent.durationUnit.toLocaleLowerCase();\n                }\n                var isOwnParent = this.checkIsParent(preValue.from.toString());\n                if (!isOwnParent) {\n                    preValues.push(preValue);\n                }\n            }\n            this.parent.setRecordValue('predecessor', preValues, ganttProp, true);\n        }\n        this.parent.setRecordValue('predecessorsName', this.getPredecessorStringValue(ganttData), ganttProp, true);\n        this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n        this.parent.setRecordValue(this.parent.taskFields.dependency, ganttProp.predecessorsName, ganttData);\n    };\n    /**\n     * To render unscheduled empty task with 1 day duration during predecessor map\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updateUnscheduledDependency = function (data) {\n        var task = this.parent.taskFields;\n        var prdList = !isNullOrUndefined(data[task.dependency]) ?\n            data[task.dependency].toString().split(',') : [];\n        for (var i = 0; i < prdList.length; i++) {\n            var predId = parseInt(prdList[i], 10);\n            if (!isNaN(predId)) {\n                var predData = this.parent.getRecordByID(predId.toString());\n                var record = !isNullOrUndefined(predData) ?\n                    extend({}, {}, predData.taskData, true) : null;\n                if (!isNullOrUndefined(record) && isNullOrUndefined(record[task.startDate])\n                    && isNullOrUndefined(record[task.duration]) && isNullOrUndefined(record[task.endDate])) {\n                    record[task.duration] = 1;\n                    var startDate = void 0;\n                    var parentItem = predData.parentItem;\n                    if (parentItem) {\n                        var parentTask = this.parent.getParentTask(predData.parentItem);\n                        while (parentTask && !parentTask.ganttProperties.startDate) {\n                            parentTask = this.parent.getParentTask(parentTask.parentItem);\n                        }\n                        startDate = parentTask ? parentTask.ganttProperties.startDate : this.parent.cloneProjectStartDate;\n                    }\n                    else {\n                        startDate = this.parent.cloneProjectStartDate;\n                    }\n                    record[task.startDate] = startDate;\n                    this.parent.updateRecordByID(record);\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {string} fromId .\n     * @returns {boolean} .\n     */\n    Dependency.prototype.checkIsParent = function (fromId) {\n        var boolValue = false;\n        var task = this.parent.connectorLineModule.getRecordByID(fromId);\n        if (task.hasChildRecords) {\n            boolValue = true;\n        }\n        return boolValue;\n    };\n    /**\n     * Get predecessor collection object from predecessor string value\n     *\n     * @param {string | number} predecessorValue .\n     * @param {IGanttData} ganttRecord .\n     * @returns {IPredecessor[]} .\n     * @private\n     */\n    Dependency.prototype.calculatePredecessor = function (predecessorValue, ganttRecord) {\n        var _this = this;\n        var predecessor = predecessorValue.toString();\n        var collection = [];\n        var match;\n        var values = [];\n        var offsetValue;\n        var predecessorText;\n        var parentRecords = [];\n        predecessor.split(',').forEach(function (el) {\n            var isGUId = false;\n            var firstPart;\n            var predecessorName;\n            var isAlpha = false;\n            var regex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/;\n            var elSplit = el.split('-');\n            var id;\n            if (elSplit.length === 6) {\n                elSplit[4] = elSplit[4] + '-' + elSplit[5];\n                elSplit.pop();\n            }\n            if (elSplit.length === 5 && elSplit[4].length >= 12) {\n                id = el.substring(0, 36);\n                if (regex.test(id)) {\n                    isGUId = true;\n                }\n            }\n            if (el.includes('-')) {\n                var lastIndex = el.lastIndexOf('-');\n                var lastPart = el.substring(lastIndex + 1);\n                var baseString = el.replace(lastPart, '').trim();\n                var match_1 = baseString.match(/(FS|SS|SF|FF)-$/);\n                var processedResult = (match_1 ? match_1[0] : '') + lastPart;\n                if (!/^(FS|SS|SF|FF)/.test(processedResult)) {\n                    var prefixMatch = processedResult.match(/(FS|SS|SF|FF)/);\n                    processedResult = prefixMatch\n                        ? prefixMatch[0] + processedResult.slice(processedResult.indexOf(prefixMatch[0]) + prefixMatch[0].length)\n                        : el;\n                }\n                predecessorName = processedResult;\n                if (el.includes('-') && /[A-Za-z]/.test(predecessorName)) {\n                    var indexFS = el.indexOf(predecessorName);\n                    if (indexFS !== -1) {\n                        firstPart = el.substring(0, indexFS);\n                        if (firstPart.includes('-')) {\n                            isAlpha = true;\n                        }\n                    }\n                }\n            }\n            if (isGUId) {\n                var split = void 0;\n                split = elSplit[4].split('+');\n                var spliceLength = void 0;\n                if (split.length === 1) {\n                    values[0] = el;\n                }\n                else {\n                    spliceLength = split[1].length;\n                    values[0] = el.slice(0, -(spliceLength + 1));\n                    values[1] = split[1];\n                }\n                offsetValue = '+';\n                if (elSplit[4].indexOf('-') >= 0) {\n                    split = elSplit[4].split('-');\n                    if (split.length === 1) {\n                        values[0] = el;\n                    }\n                    else {\n                        spliceLength = split[1].length;\n                        values[0] = el.slice(0, -(spliceLength + 1));\n                        values[1] = split[1];\n                    }\n                    offsetValue = '-';\n                }\n            }\n            else {\n                if (isAlpha && firstPart.includes('-')) {\n                    values[0] = firstPart;\n                }\n                else {\n                    values = el.split('+');\n                    offsetValue = '+';\n                    if (el.indexOf('-') >= 0) {\n                        values = el.split('-');\n                        offsetValue = '-';\n                    }\n                }\n            }\n            match = [];\n            var ids = _this.parent.viewType === 'ResourceView' ? _this.parent.getTaskIds() : _this.parent.ids;\n            var isExist1 = _this.parent.viewType === 'ResourceView' ? ids.indexOf('T' + values[0]) : ids.indexOf(values[0]);\n            if (isExist1 !== -1) {\n                match[0] = values[0];\n            }\n            else {\n                if (ids.indexOf(values[0]) === -1) {\n                    match = values[0].split(' ');\n                    if (match.length === 1) {\n                        if (match[0].indexOf(' ') !== -1) {\n                            match = values[0].match(/(\\d+|[A-z]+)/g);\n                        }\n                        else {\n                            match[0] = values[0].slice(0, -2);\n                            match[1] = values[0].slice(-2);\n                        }\n                    }\n                }\n                else {\n                    match[0] = values[0];\n                }\n            }\n            var isExist = _this.parent.viewType === 'ResourceView' ? ids.indexOf('T' + match[0]) : ids.indexOf(match[0]);\n            /*Validate for appropriate predecessor*/\n            if (match[0] && isExist !== -1) {\n                if (match.length > 1) {\n                    var type = match[1].toUpperCase();\n                    if (type === 'FS' || type === 'FF' || type === 'SF' || type === 'SS') {\n                        predecessorText = type;\n                    }\n                    else {\n                        var e = \"The provided dependency type, \" + type + \", is invalid. Please ensure that the Dependency Type is FS or FF or SS or SF\";\n                        _this.parent.trigger('actionFailure', { error: e });\n                        predecessorText = 'FS';\n                    }\n                }\n                else if (el.includes('-') && /[A-Za-z]/.test(predecessorName) && firstPart.includes('-')) {\n                    var type = el.slice(-2).toString();\n                    type.toUpperCase();\n                    if (type === 'FS' || type === 'FF' || type === 'SF' || type === 'SS') {\n                        predecessorText = type;\n                    }\n                    else {\n                        predecessorText = 'FS';\n                    }\n                }\n                else {\n                    predecessorText = 'FS';\n                }\n            }\n            else {\n                return; // exit current loop for invalid id (match[0])\n            }\n            var tempOffset = values.length > 1 ? offsetValue + '' + values[1] : '0';\n            var offsetUnits = _this.getOffsetDurationUnit(tempOffset);\n            var obj = {\n                from: match[0],\n                type: predecessorText,\n                isDrawn: false,\n                to: _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString()\n                    : ganttRecord.ganttProperties.rowUniqueID.toString(),\n                offsetUnit: offsetUnits.durationUnit,\n                offset: offsetUnits.duration\n            };\n            var isOwnParent = _this.checkIsParent(match[0]);\n            if (!_this.parent.allowParentDependency) {\n                if (!isOwnParent) {\n                    collection.push(obj);\n                }\n            }\n            else {\n                var fromData = _this.parent.connectorLineModule.getRecordByID(obj.to);\n                var toData = _this.parent.connectorLineModule.getRecordByID(obj.from);\n                var isValid = void 0;\n                if (_this.parent.connectorLineEditModule && toData && fromData) {\n                    isValid = _this.parent.connectorLineEditModule.validateParentPredecessor(toData, fromData);\n                    if (isValid) {\n                        collection.push(obj);\n                        if (parentRecords.indexOf(toData) === -1 && toData.hasChildRecords && _this.parent.editModule.cellEditModule &&\n                            _this.parent.editModule.cellEditModule.isCellEdit) {\n                            parentRecords.push(extend([], [], [toData], true)[0]);\n                        }\n                    }\n                }\n                else {\n                    collection.push(obj);\n                }\n                match.splice(0);\n            }\n        });\n        if (parentRecords.length > 0 && this.parent.undoRedoModule && this.parent.editModule && this.parent.editModule.cellEditModule &&\n            this.parent.editModule.cellEditModule.isCellEdit) {\n            this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1]['connectedRecords'] = parentRecords;\n        }\n        var creatCollection = [];\n        collection.map(function (data) {\n            var from = data.from;\n            var to = data.to;\n            var checkColloction = [];\n            checkColloction = collection.filter(function (fdata) { return fdata.from === from && fdata.to === to; });\n            if (creatCollection.indexOf(checkColloction[checkColloction.length - 1]) === -1) {\n                creatCollection.push(checkColloction[checkColloction.length - 1]);\n            }\n        });\n        return creatCollection;\n    };\n    /**\n     * Get predecessor value as string with offset values\n     *\n     * @param {IGanttData} data .\n     * @returns {string} .\n     * @private\n     */\n    Dependency.prototype.getPredecessorStringValue = function (data) {\n        var predecessors = data.ganttProperties.predecessor;\n        var resultString = '';\n        var temp1;\n        var match = [];\n        if (predecessors) {\n            var length_1 = predecessors.length;\n            for (var i = 0; i < length_1; i++) {\n                var currentValue = predecessors[i];\n                var temp = '';\n                var id = this.parent.viewType === 'ResourceView' ? data.ganttProperties.taskId\n                    : data.ganttProperties.rowUniqueID;\n                if (currentValue.from !== id.toString()) {\n                    temp = currentValue.from + currentValue.type;\n                    if (typeof (data.ganttProperties.taskId) === 'string') {\n                        match[0] = temp.slice(0, -2);\n                        match[1] = temp.slice(-2);\n                        temp1 = match[0] + ' ' + match[1];\n                    }\n                    else {\n                        temp1 = temp;\n                    }\n                    temp = temp1;\n                    if (currentValue.offset !== 0) {\n                        temp += currentValue.offset > 0 ? ('+' + currentValue.offset + ' ') : (currentValue.offset + ' ');\n                        var multiple = currentValue.offset !== 1;\n                        if (currentValue.offsetUnit === 'day') {\n                            temp += multiple ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n                        }\n                        else if (currentValue.offsetUnit === 'hour') {\n                            temp += multiple ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n                        }\n                        else {\n                            temp += multiple ? this.parent.localeObj.getConstant('minutes') : this.parent.localeObj.getConstant('minute');\n                        }\n                    }\n                    if (resultString.length > 0) {\n                        resultString = resultString + ',' + temp;\n                    }\n                    else {\n                        resultString = temp;\n                    }\n                }\n            }\n        }\n        return resultString;\n    };\n    /*Get duration and duration unit value from tasks*/\n    Dependency.prototype.getOffsetDurationUnit = function (val) {\n        var duration = 0;\n        var durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        var durationUnitLabels = this.parent.durationUnitEditText;\n        if (typeof val === 'string') {\n            var values = val.match(/[^0-9]+|[0-9]+/g);\n            for (var x = 0; x < values.length; x++) {\n                values[x] = (values[x]).trim();\n            }\n            if (values[0] === '-' && values[1]) {\n                values[1] = values[0] + values[1];\n                values.shift();\n            }\n            else if (values[0] === '+') {\n                values.shift();\n            }\n            if (values[1] === '.' && !isNaN(parseInt(values[2], 10))) {\n                values[0] += values[1] + values[2];\n                values.splice(1, 2);\n            }\n            if (values && values.length <= 2) {\n                duration = parseFloat(values[0]);\n                durationUnit = values[1] ? (values[1].toLowerCase()).trim() : '';\n                if (getValue('minute', durationUnitLabels).indexOf(durationUnit) !== -1) {\n                    durationUnit = 'minute';\n                }\n                else if (getValue('hour', durationUnitLabels).indexOf(durationUnit) !== -1) {\n                    durationUnit = 'hour';\n                }\n                else if (getValue('day', durationUnitLabels).indexOf(durationUnit) !== -1) {\n                    durationUnit = 'day';\n                }\n                else {\n                    durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n                }\n            }\n        }\n        else {\n            duration = val;\n            durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n        if (isNaN(duration)) {\n            var err = 'The provided value for the offset field is invalid.Please ensure the offset field contains only valid numeric values';\n            this.parent.trigger('actionFailure', { error: err });\n            duration = 0;\n            durationUnit = this.parent.durationUnit.toLocaleLowerCase();\n        }\n        return {\n            duration: duration,\n            durationUnit: durationUnit\n        };\n    };\n    /**\n     * Update predecessor object in both from and to tasks collection\n     *\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updatePredecessors = function () {\n        var predecessorsCollection = this.parent.predecessorsCollection;\n        var ganttRecord;\n        var length = predecessorsCollection.length;\n        for (var count = 0; count < length; count++) {\n            ganttRecord = predecessorsCollection[count];\n            if ((!ganttRecord.hasChildRecords && !this.parent.allowParentDependency) || this.parent.allowParentDependency) {\n                this.updatePredecessorHelper(ganttRecord, predecessorsCollection);\n                if (!ganttRecord.ganttProperties.isAutoSchedule && this.parent.editSettings.allowEditing) {\n                    this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n                    this.parent.connectorLineEditModule['calculateOffset'](ganttRecord);\n                }\n            }\n        }\n    };\n    /**\n     * To update predecessor collection to successor tasks\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {IGanttData[]} predecessorsCollection .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updatePredecessorHelper = function (ganttRecord, predecessorsCollection) {\n        var connectorsCollection = ganttRecord.ganttProperties.predecessor;\n        var successorGanttRecord;\n        var connectorCount = connectorsCollection.length;\n        predecessorsCollection = isNullOrUndefined(predecessorsCollection) ? [] : predecessorsCollection;\n        for (var i = 0; i < connectorCount; i++) {\n            var connector = connectorsCollection[i];\n            successorGanttRecord = this.parent.connectorLineModule.getRecordByID(connector.from);\n            var id = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId\n                : ganttRecord.ganttProperties.rowUniqueID;\n            if (connector.from !== id.toString()) {\n                if (successorGanttRecord) {\n                    var predecessorCollection = void 0;\n                    if (successorGanttRecord.ganttProperties.predecessor) {\n                        predecessorCollection = (extend([], successorGanttRecord.ganttProperties.predecessor, [], true));\n                        predecessorCollection.push(connector);\n                        this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true);\n                        //  successorGanttRecord.ganttProperties.predecessor.push(connector);\n                    }\n                    else {\n                        predecessorCollection = [];\n                        predecessorCollection.push(connector);\n                        this.parent.setRecordValue('predecessor', predecessorCollection, successorGanttRecord.ganttProperties, true);\n                        // this.parent.setRecordValue('predecessor', [], successorGanttRecord.ganttProperties, true);\n                        // successorGanttRecord.ganttProperties.predecessor.push(connector);\n                        predecessorsCollection.push(successorGanttRecord);\n                    }\n                }\n            }\n        }\n    };\n    Dependency.prototype.traverseParents = function (record) {\n        this.parent.dataOperation.updateParentItems(record);\n    };\n    /**\n     * Method to validate date of tasks with predecessor values for all records\n     *\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updatedRecordsDateByPredecessor = function () {\n        if (!this.parent.autoCalculateDateScheduling || (this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand\n            && this.parent.taskFields.hasChildMapping)) {\n            return;\n        }\n        var flatData = this.parent.flatData;\n        var totLength = this.parent.flatData.length;\n        for (var count = 0; count < totLength; count++) {\n            if (flatData[count].ganttProperties.predecessorsName) {\n                this.validatePredecessorDates(flatData[count]);\n                var predecessorCollection = flatData[count].ganttProperties.predecessor;\n                if (predecessorCollection && predecessorCollection.length > 1) {\n                    for (var i = 0; i < predecessorCollection.length; i++) {\n                        var validateRecord = this.parent.getRecordByID(predecessorCollection[i].to);\n                        if (validateRecord) {\n                            this.validatePredecessorDates(validateRecord);\n                        }\n                    }\n                }\n                if (flatData[count].hasChildRecords && this.parent.editModule &&\n                    flatData[count].ganttProperties.startDate\n                    && this.parent.allowParentDependency) {\n                    this.updateChildItems(flatData[count]);\n                }\n                if (flatData[count].parentItem) {\n                    var recordId = flatData[count].parentItem.taskId;\n                    this.traverseParents(this.parent.getRecordByID(recordId));\n                }\n            }\n        }\n    };\n    Dependency.prototype.updateParentPredecessor = function () {\n        if (this.parent.enablePredecessorValidation) {\n            var parentPredecessorLength = this.parentPredecessors.length;\n            for (var i = parentPredecessorLength - 1; i >= 0; i--) {\n                var item = this.parentPredecessors[i];\n                this.validatePredecessorDates(item);\n                if (item.ganttProperties.startDate) {\n                    this.updateChildItems(item);\n                }\n            }\n        }\n    };\n    /**\n     * To validate task date values with dependency\n     *\n     * @param {IGanttData} ganttRecord .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.validatePredecessorDates = function (ganttRecord) {\n        if (ganttRecord.ganttProperties.predecessor) {\n            var predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n            var count = void 0;\n            var parentGanttRecord = void 0;\n            var record = null;\n            var currentTaskId_1 = this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId.toString()\n                : ganttRecord.ganttProperties.rowUniqueID.toString();\n            var predecessors = predecessorsCollection.filter(function (data) {\n                if (data.to === currentTaskId_1) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            for (count = 0; count < predecessors.length; count++) {\n                var predecessor = predecessors[count];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n                if (this.parent.allowParentDependency && parentGanttRecord.hasChildRecords) {\n                    this.parent.dataOperation.updateParentItems(parentGanttRecord);\n                }\n                record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n                if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop) {\n                    var index = void 0;\n                    if (isNullOrUndefined(record)) {\n                        index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.to);\n                        record = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n                    }\n                    else if (isNullOrUndefined(parentGanttRecord)) {\n                        index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.from);\n                        parentGanttRecord = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n                    }\n                }\n                if (this.parent.allowParentDependency && this.parent.isLoad && this.parentPredecessors.indexOf(ganttRecord) === -1\n                    && (ganttRecord.hasChildRecords || record.hasChildRecords)) {\n                    this.parentPredecessors.push(ganttRecord);\n                }\n                if (record.ganttProperties.isAutoSchedule || this.parent.validateManualTasksOnLinking) {\n                    this.validateChildGanttRecord(parentGanttRecord, record);\n                }\n            }\n        }\n    };\n    /**\n     * Method to validate task with predecessor\n     *\n     * @param {IGanttData} parentGanttRecord .\n     * @param {IGanttData} childGanttRecord .\n     * @returns {void} .\n     */\n    Dependency.prototype.validateChildGanttRecord = function (parentGanttRecord, childGanttRecord) {\n        if (this.parent.editedTaskBarItem === childGanttRecord || (parentGanttRecord &&\n            isNullOrUndefined(isScheduledTask(parentGanttRecord.ganttProperties)))\n            || (childGanttRecord && isNullOrUndefined(isScheduledTask(childGanttRecord.ganttProperties)))) {\n            return;\n        }\n        if (this.parent.isInPredecessorValidation && (childGanttRecord.ganttProperties.isAutoSchedule ||\n            this.parent.validateManualTasksOnLinking)) {\n            var childRecordProperty = childGanttRecord.ganttProperties;\n            var currentTaskId_2 = this.parent.viewType === 'ResourceView' ? childRecordProperty.taskId.toString()\n                : childRecordProperty.rowUniqueID.toString();\n            var predecessorsCollection = childRecordProperty.predecessor;\n            var childPredecessor = predecessorsCollection.filter(function (data) {\n                if (data.to === currentTaskId_2) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            var startDate = this.getPredecessorDate(childGanttRecord, childPredecessor);\n            this.parent.setRecordValue('startDate', startDate, childRecordProperty, true);\n            this.parent.dataOperation.updateMappingData(childGanttRecord, 'startDate');\n            var segments = childGanttRecord.ganttProperties.segments;\n            if (isNullOrUndefined(segments) || !isNullOrUndefined(segments) && segments.length === 0) {\n                this.dateValidateModule.calculateEndDate(childGanttRecord);\n            }\n            this.parent.dataOperation.updateWidthLeft(childGanttRecord);\n            if (!this.parent.isLoad && !this.parent.isFromOnPropertyChange && childGanttRecord.parentItem &&\n                this.parent.isInPredecessorValidation &&\n                this.parent.getParentTask(childGanttRecord.parentItem).ganttProperties.isAutoSchedule) {\n                if (this.parentIds.indexOf(childGanttRecord.parentItem.uniqueID) === -1) {\n                    this.parentIds.push(childGanttRecord.parentItem.uniqueID);\n                    this.parentRecord.push(childGanttRecord.parentItem);\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttRecord .\n     * @param {IPredecessor[]} predecessorsCollection .\n     * @returns {Date} .\n     * @private\n     */\n    Dependency.prototype.getPredecessorDate = function (ganttRecord, predecessorsCollection) {\n        var _this = this;\n        var maxStartDate;\n        var tempStartDate;\n        var parentGanttRecord;\n        var childGanttRecord;\n        var validatedPredecessor = predecessorsCollection.filter(function (data) {\n            var id = _this.parent.viewType === 'ResourceView' ? ganttRecord.ganttProperties.taskId\n                : ganttRecord.ganttProperties.rowUniqueID;\n            if (data.to === id.toString()) {\n                return data;\n            }\n            else {\n                return null;\n            }\n        });\n        if (validatedPredecessor) {\n            var length_2 = validatedPredecessor.length;\n            for (var i = 0; i < length_2; i++) {\n                var predecessor = validatedPredecessor[i];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n                childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n                if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop && !(isNullOrUndefined(childGanttRecord) &&\n                    isNullOrUndefined(parentGanttRecord))) {\n                    childGanttRecord = isNullOrUndefined(childGanttRecord) ?\n                        this.getRecord(parentGanttRecord, childGanttRecord, predecessor) : childGanttRecord;\n                    parentGanttRecord = isNullOrUndefined(parentGanttRecord) ?\n                        this.getRecord(parentGanttRecord, childGanttRecord, predecessor) : parentGanttRecord;\n                }\n                if (childGanttRecord && parentGanttRecord) {\n                    tempStartDate =\n                        this.getValidatedStartDate(childGanttRecord.ganttProperties, parentGanttRecord.ganttProperties, predecessor);\n                }\n                if (maxStartDate === null || this.dateValidateModule.compareDates(tempStartDate, maxStartDate) === 1) {\n                    maxStartDate = tempStartDate;\n                }\n            }\n        }\n        return maxStartDate;\n    };\n    /**\n     * Get validated start date as per predecessor type\n     *\n     * @param {ITaskData} ganttProperty .\n     * @param {ITaskData} parentRecordProperty .\n     * @param {IPredecessor} predecessor .\n     * @returns {Date} .\n     */\n    Dependency.prototype.getValidatedStartDate = function (ganttProperty, parentRecordProperty, predecessor) {\n        var type = predecessor.type;\n        var offset = predecessor.offset;\n        var tempDate;\n        var returnStartDate;\n        switch (type) {\n            case 'FS':\n                tempDate = this.dateValidateModule.getValidEndDate(parentRecordProperty);\n                if (!ganttProperty.isMilestone || offset !== 0) {\n                    tempDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n                }\n                if (offset !== 0) {\n                    tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n                }\n                if (!ganttProperty.isMilestone) {\n                    returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n                }\n                else {\n                    returnStartDate = tempDate;\n                }\n                break;\n            case 'FF':\n            case 'SF':\n                tempDate = type === 'FF' ? this.dateValidateModule.getValidEndDate(parentRecordProperty) :\n                    this.dateValidateModule.getValidStartDate(parentRecordProperty);\n                if (offset !== 0) {\n                    tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n                }\n                if (!ganttProperty.isMilestone) {\n                    var date = new Date(tempDate);\n                    date.setDate(date.getDate() - 1);\n                    tempDate = this.dateValidateModule.checkEndDate(tempDate, ganttProperty);\n                }\n                if (ganttProperty.segments && ganttProperty.segments.length !== 0) {\n                    var duration = this.dateValidateModule.getDuration(ganttProperty.startDate, ganttProperty.endDate, ganttProperty.durationUnit, ganttProperty.isAutoSchedule, ganttProperty.isMilestone);\n                    returnStartDate = this.dateValidateModule.getStartDate(tempDate, duration, ganttProperty.durationUnit, ganttProperty);\n                }\n                else {\n                    returnStartDate = this.dateValidateModule.getStartDate(tempDate, ganttProperty.duration, ganttProperty.durationUnit, ganttProperty);\n                }\n                break;\n            case 'SS':\n                tempDate = this.dateValidateModule.getValidStartDate(parentRecordProperty);\n                if (offset !== 0) {\n                    tempDate = this.updateDateByOffset(tempDate, predecessor, ganttProperty);\n                }\n                if (!ganttProperty.isMilestone) {\n                    returnStartDate = this.dateValidateModule.checkStartDate(tempDate, ganttProperty);\n                }\n                else {\n                    returnStartDate = tempDate;\n                }\n                break;\n        }\n        return returnStartDate;\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @param {IPredecessor} predecessor .\n     * @param {ITaskData} record .\n     * @returns {void} .\n     */\n    Dependency.prototype.updateDateByOffset = function (date, predecessor, record) {\n        var resultDate;\n        var offsetValue = predecessor.offset;\n        var durationUnit = predecessor.offsetUnit;\n        if (offsetValue < 0 && !isNullOrUndefined(date)) {\n            resultDate = this.dateValidateModule.getStartDate(this.dateValidateModule.checkEndDate(date, record), (offsetValue * -1), durationUnit, record, true);\n        }\n        else {\n            if (!isNullOrUndefined(date)) {\n                resultDate = this.dateValidateModule.getEndDate(date, offsetValue, durationUnit, record, false);\n            }\n            if (!record.isMilestone) {\n                resultDate = this.dateValidateModule.checkStartDate(resultDate, record);\n            }\n        }\n        return resultDate;\n    };\n    /**\n     *\n     * @param {IGanttData} records .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.createConnectorLinesCollection = function (records) {\n        var ganttRecords = records ? records : this.parent.currentViewData;\n        if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth && this.parent.pdfExportModule.isPdfExport) {\n            ganttRecords = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneCurrentViewData'];\n        }\n        var recordLength = ganttRecords.length;\n        var count;\n        var ganttRecord;\n        var predecessorsCollection;\n        if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth && this.parent.pdfExportModule.isPdfExport) {\n            this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n                this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'] : this.parent.getExpandedRecords(this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData']);\n        }\n        else {\n            this.parent.connectorLineModule.expandedRecords = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n                this.parent.updatedRecords : this.parent.getExpandedRecords(this.parent.updatedRecords);\n        }\n        for (count = 0; count < recordLength; count++) {\n            if (this.parent.editModule && this.parent.editModule.deletedTaskDetails.length > 0) {\n                if (ganttRecords[count].parentItem) {\n                    var parentItem = this.parent.getRecordByID(ganttRecords[count].parentItem.taskId.toString());\n                    this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentItem), ganttRecords[count]);\n                }\n            }\n            if (this.parent.undoRedoModule && this.parent.undoRedoModule['canUpdateIndex']) {\n                ganttRecords[count].index = count;\n                if (ganttRecords[count].parentItem && this.parent.getParentTask(ganttRecords[count].parentItem)) {\n                    ganttRecords[count].parentItem.index = this.parent.getParentTask(ganttRecords[count].parentItem).index;\n                }\n            }\n            ganttRecord = ganttRecords[count];\n            predecessorsCollection = ganttRecord.ganttProperties.predecessor;\n            if (predecessorsCollection) {\n                this.addPredecessorsCollection(predecessorsCollection);\n            }\n        }\n    };\n    /**\n     *\n     * @param {object[]} predecessorsCollection .\n     * @returns {void} .\n     */\n    Dependency.prototype.addPredecessorsCollection = function (predecessorsCollection) {\n        var predecessorsLength;\n        var predecessorCount;\n        var predecessor;\n        var parentGanttRecord;\n        var childGanttRecord;\n        if (predecessorsCollection) {\n            predecessorsLength = predecessorsCollection.length;\n            for (predecessorCount = 0; predecessorCount < predecessorsLength; predecessorCount++) {\n                predecessor = predecessorsCollection[predecessorCount];\n                var from = 'from';\n                var to = 'to';\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[from]);\n                childGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor[to]);\n                var isValid = true;\n                if (((parentGanttRecord && parentGanttRecord.hasChildRecords && !parentGanttRecord.expanded) ||\n                    (childGanttRecord && childGanttRecord.hasChildRecords && !childGanttRecord.expanded)) &&\n                    !this.parent.allowTaskbarOverlap && this.parent.viewType === 'ProjectView') {\n                    isValid = false;\n                }\n                if (isValid && this.parent.connectorLineModule.expandedRecords &&\n                    this.parent.connectorLineModule.expandedRecords.indexOf(parentGanttRecord) !== -1 &&\n                    this.parent.connectorLineModule.expandedRecords.indexOf(childGanttRecord) !== -1) {\n                    this.updateConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n                }\n            }\n        }\n    };\n    /**\n     * To refresh connector line object collections\n     *\n     * @param {IGanttData} parentGanttRecord .\n     * @param {IGanttData} childGanttRecord .\n     * @param {IPredecessor} predecessor .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.updateConnectorLineObject = function (parentGanttRecord, childGanttRecord, predecessor) {\n        var connectorObj = this.parent.connectorLineModule.createConnectorLineObject(parentGanttRecord, childGanttRecord, predecessor);\n        if (connectorObj) {\n            if (childGanttRecord.isCritical && parentGanttRecord.isCritical) {\n                connectorObj.isCritical = true;\n            }\n            if ((this.parent.connectorLineIds.length > 0 && this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) === -1) ||\n                this.parent.connectorLineIds.length === 0) {\n                this.parent.updatedConnectorLineCollection.push(connectorObj);\n                this.parent.connectorLineIds.push(connectorObj.connectorLineId);\n            }\n            else if (this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId) !== -1) {\n                var index = this.parent.connectorLineIds.indexOf(connectorObj.connectorLineId);\n                this.parent.updatedConnectorLineCollection[index] = connectorObj;\n            }\n            predecessor.isDrawn = true;\n        }\n        return connectorObj;\n    };\n    /**\n     *\n     * @param {IGanttData} childGanttRecord .\n     * @param {IPredecessor[]} previousValue .\n     * @param {string} validationOn .\n     * @returns {void} .\n     * @private\n     */\n    Dependency.prototype.validatePredecessor = function (childGanttRecord, previousValue, validationOn) {\n        if (!this.parent.isInPredecessorValidation) {\n            return;\n        }\n        if (childGanttRecord.ganttProperties.predecessor) {\n            var taskBarModule = this.parent.editModule.taskbarEditModule;\n            var ganttProp = void 0;\n            if (taskBarModule) {\n                ganttProp = taskBarModule.taskBarEditRecord;\n            }\n            var predecessorsCollection = childGanttRecord.ganttProperties.predecessor;\n            var parentGanttRecord = void 0;\n            var record = null;\n            var predecessor = void 0;\n            var successor = void 0;\n            var currentTaskId_3 = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId.toString()\n                : childGanttRecord.ganttProperties.rowUniqueID.toString();\n            var predecessors = predecessorsCollection.filter(function (data) {\n                if (data.to === currentTaskId_3) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            var successors = predecessorsCollection.filter(function (data) {\n                if (data.from === currentTaskId_3) {\n                    return data;\n                }\n                else {\n                    return null;\n                }\n            });\n            var parentRec = void 0;\n            for (var count = 0; count < predecessors.length; count++) {\n                predecessor = predecessors[count];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from);\n                record = this.parent.connectorLineModule.getRecordByID(predecessor.to);\n                if (record.parentItem) {\n                    parentRec = this.parent.getTaskByUniqueID(record.parentItem.uniqueID);\n                    if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n                        this.parent.editModule['updateParentRecords'].push(parentRec);\n                    }\n                }\n                if (parentGanttRecord.parentItem) {\n                    parentRec = this.parent.getTaskByUniqueID(parentGanttRecord.parentItem.uniqueID);\n                    if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n                        this.parent.editModule['updateParentRecords'].push(parentRec);\n                    }\n                }\n                if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop && !(isNullOrUndefined(record) && isNullOrUndefined(parentGanttRecord))) {\n                    record = isNullOrUndefined(record) ? this.getRecord(parentGanttRecord, record, predecessor) : record;\n                    parentGanttRecord = isNullOrUndefined(parentGanttRecord) ?\n                        this.getRecord(parentGanttRecord, record, predecessor) : parentGanttRecord;\n                }\n                if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n                    this.parent.isValidationEnabled = true;\n                }\n                else {\n                    this.parent.isValidationEnabled = false;\n                }\n                var id = this.parent.viewType === 'ResourceView' ? childGanttRecord.ganttProperties.taskId\n                    : childGanttRecord.ganttProperties.rowUniqueID;\n                if ((id.toString() === predecessor.to\n                    || id.toString() === predecessor.from)\n                    && (!validationOn || validationOn === 'predecessor')) {\n                    this.validateChildGanttRecord(parentGanttRecord, record);\n                    if (this.parent.editModule['editedRecord'] && this.parent.editModule['editedRecord'].hasChildRecords && !this.parent.editModule['editedRecord'].parentItem) {\n                        this.isValidatedParentTaskID = record.ganttProperties.taskId;\n                    }\n                }\n            }\n            for (var count = 0; count < successors.length; count++) {\n                successor = successors[count];\n                parentGanttRecord = this.parent.connectorLineModule.getRecordByID(successor.from);\n                record = this.parent.connectorLineModule.getRecordByID(successor.to);\n                if (record.parentItem) {\n                    parentRec = this.parent.getTaskByUniqueID(record.parentItem.uniqueID);\n                    if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n                        this.parent.editModule['updateParentRecords'].push(parentRec);\n                    }\n                }\n                if (parentGanttRecord.parentItem) {\n                    parentRec = this.parent.getTaskByUniqueID(parentGanttRecord.parentItem.uniqueID);\n                    if (this.parent.editModule['updateParentRecords'].indexOf(parentRec) === -1) {\n                        this.parent.editModule['updateParentRecords'].push(parentRec);\n                    }\n                }\n                if (this.parent.viewType === 'ProjectView' && this.parent.allowTaskbarDragAndDrop && !(isNullOrUndefined(record) && isNullOrUndefined(parentGanttRecord))) {\n                    record = isNullOrUndefined(record) ? this.getRecord(parentGanttRecord, record, successor) : record;\n                    parentGanttRecord = isNullOrUndefined(parentGanttRecord) ?\n                        this.getRecord(parentGanttRecord, record, successor) : parentGanttRecord;\n                }\n                if (this.parent.isInPredecessorValidation && record.ganttProperties.isAutoSchedule) {\n                    this.parent.isValidationEnabled = true;\n                }\n                else {\n                    this.parent.isValidationEnabled = false;\n                }\n                if (validationOn !== 'predecessor' && this.parent.isValidationEnabled) {\n                    this.validateChildGanttRecord(parentGanttRecord, record);\n                    if (this.parent.editModule['editedRecord'] && record) {\n                        var rootParent = parentGanttRecord.parentItem ?\n                            this.parent.connectorLineEditModule.getRootParent(parentGanttRecord) : null;\n                        if (record.hasChildRecords && (!this.parent.editModule['editedRecord'].hasChildRecords || (!record.parentItem &&\n                            (!rootParent || (rootParent && rootParent.ganttProperties.taskId === this.parent.editModule['editedRecord'].ganttProperties.taskId)))) &&\n                            this.isValidatedParentTaskID !== record.ganttProperties.taskId) {\n                            this.updateChildItems(record);\n                            for (var i = 0; i < record.childRecords.length; i++) {\n                                var ganttProp_1 = record.childRecords[i].ganttProperties;\n                                if (this.isChildRecordValidated.indexOf(ganttProp_1.taskId) !== -1) {\n                                    return;\n                                }\n                                this.isChildRecordValidated.push(ganttProp_1.taskId);\n                                if (ganttProp_1.predecessor && ganttProp_1.predecessor.length > 0) {\n                                    for (var j = 0; j < ganttProp_1.predecessor.length; j++) {\n                                        var childRec = void 0;\n                                        if (ganttProp_1.predecessor[j].to !== record.ganttProperties.taskId.toString()) {\n                                            childRec = this.parent.flatData[this.parent.ids.indexOf(ganttProp_1.predecessor[j].to)];\n                                        }\n                                        else {\n                                            childRec = this.parent.flatData[this.parent.ids.indexOf(ganttProp_1.predecessor[j].from)];\n                                        }\n                                        if (childRec) {\n                                            this.validatePredecessor(childRec, [], '');\n                                            if (childRec.hasChildRecords && this.parent.editModule['editedRecord'].hasChildRecords) {\n                                                this.updateChildItems(childRec);\n                                            }\n                                            this.isValidatedParentTaskID = childRec.ganttProperties.taskId;\n                                        }\n                                    }\n                                }\n                            }\n                            this.isValidatedParentTaskID = record.ganttProperties.taskId;\n                        }\n                        if (this.parent.editModule['editedRecord'].hasChildRecords && !this.parent.editModule['editedRecord'].parentItem) {\n                            this.isValidatedParentTaskID = record.ganttProperties.taskId;\n                        }\n                    }\n                }\n                else if (!record.ganttProperties.isAutoSchedule && this.parent.updateOffsetOnTaskbarEdit) {\n                    this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n                    this.parent.connectorLineEditModule['calculateOffset'](record);\n                }\n                if (parentGanttRecord.expanded === false || record.expanded === false) {\n                    if (record) {\n                        this.validatePredecessor(record, undefined, 'successor');\n                    }\n                    continue;\n                }\n                if (record) {\n                    if (this.parent.editModule.isFirstCall) {\n                        this.storeId = JSON.parse(JSON.stringify(this.parent.ids));\n                        this.parent.editModule.isFirstCall = false;\n                    }\n                    if (this.storeId) {\n                        var index = (this.storeId.indexOf(record[this.parent.taskFields.id].toString()) !== -1) ?\n                            this.storeId.indexOf(record[this.parent.taskFields.id].toString()) : -1;\n                        if (index !== -1) {\n                            this.storeId = this.storeId.slice(0, index).concat(this.storeId.slice(index + 1));\n                            this.validatePredecessor(record, undefined, 'successor');\n                        }\n                    }\n                    else {\n                        this.validatePredecessor(record, undefined, 'successor');\n                    }\n                }\n            }\n            if (record && !record.hasChildRecords && record.parentItem &&\n                this.validatedParentIds.indexOf(record.parentItem.taskId) === -1) {\n                this.validatedParentIds.push(record.parentItem.taskId);\n            }\n            var validUpdate = true;\n            if (record && record.hasChildRecords && this.validatedParentIds.indexOf(record.ganttProperties.taskId.toString()) !== -1) {\n                validUpdate = false;\n            }\n            if (validUpdate) {\n                if (record && record.ganttProperties.taskId !== this.isValidatedParentTaskID && ganttProp) {\n                    if ((taskBarModule.taskBarEditAction !== 'ParentDrag' && taskBarModule.taskBarEditAction !== 'ChildDrag')) {\n                        if (!ganttProp.hasChildRecords && record.hasChildRecords) {\n                            this.updateChildItems(record);\n                            this.isValidatedParentTaskID = record.ganttProperties.taskId;\n                        }\n                    }\n                    if (record.parentItem) {\n                        this.parent.dataOperation.updateParentItems(record, true);\n                        var parentData = this.parent.getParentTask(record.parentItem);\n                        var index = (this.storeId && this.storeId.indexOf(parentData[this.parent.taskFields.id].toString()) !== -1) ?\n                            this.storeId.indexOf(parentData[this.parent.taskFields.id].toString()) : -1;\n                        if (parentData.ganttProperties.predecessor && parentData.ganttProperties.predecessor.length > 0 && index !== -1) {\n                            for (var i = 0; i < parentData.ganttProperties.predecessor.length; i++) {\n                                if (parentData.ganttProperties.predecessor[i].to !==\n                                    parentData.ganttProperties.taskId.toString()) {\n                                    var childRec = this.parent.flatData[this.parent.ids.indexOf(parentData.ganttProperties.predecessor[i].to)];\n                                    if (childRec && childRec.parentItem) {\n                                        this.validateChildGanttRecord(record, childRec);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                else if (record && record.hasChildRecords && this.isValidatedParentTaskID !== record.ganttProperties.taskId && !ganttProp) {\n                    this.updateChildItems(record);\n                    this.isValidatedParentTaskID = record.ganttProperties.taskId;\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttRecord .\n     * @returns {void} .\n     */\n    Dependency.prototype.updateChildItems = function (ganttRecord) {\n        var _this = this;\n        if (ganttRecord.childRecords.length > 0 && this.validatedChildItems.length > 0) {\n            var isPresent = true;\n            isPresent = !ganttRecord.childRecords.some(function (record) {\n                return _this.validatedChildItems['includes'](record);\n            });\n            if (!isPresent) {\n                return;\n            }\n        }\n        var previousData = this.parent.previousRecords[ganttRecord.uniqueID];\n        var previousStartDate;\n        if (isNullOrUndefined(previousData) ||\n            (isNullOrUndefined(previousData) && !isNullOrUndefined(previousData.ganttProperties))) {\n            previousStartDate = new Date(ganttRecord.ganttProperties.startDate.getTime());\n        }\n        else {\n            if (!isNullOrUndefined(previousData.ganttProperties.startDate)) {\n                previousStartDate = new Date(previousData.ganttProperties.startDate.getTime());\n            }\n        }\n        var currentStartDate = ganttRecord.ganttProperties.startDate;\n        var childRecords = [];\n        var validStartDate;\n        var validEndDate;\n        var calcEndDate;\n        var isRightMove;\n        var durationDiff;\n        this.getUpdatableChildRecords(ganttRecord, childRecords);\n        if (childRecords.length === 0) {\n            return;\n        }\n        if (!isNullOrUndefined(previousStartDate) && !isNullOrUndefined(currentStartDate) &&\n            previousStartDate.getTime() > currentStartDate.getTime()) {\n            validStartDate = this.parent.dateValidationModule.checkStartDate(currentStartDate);\n            validEndDate = this.parent.dateValidationModule.checkEndDate(previousStartDate, ganttRecord.ganttProperties);\n            isRightMove = false;\n        }\n        else {\n            validStartDate = this.parent.dateValidationModule.checkStartDate(previousStartDate);\n            validEndDate = this.parent.dateValidationModule.checkEndDate(currentStartDate, ganttRecord.ganttProperties);\n            isRightMove = true;\n        }\n        //Get Duration\n        if (!isNullOrUndefined(validStartDate) && !isNullOrUndefined(validEndDate) && validStartDate.getTime() >= validEndDate.getTime()) {\n            durationDiff = 0;\n        }\n        else {\n            durationDiff = this.parent.dateValidationModule.getDuration(validStartDate, validEndDate, 'minute', true, false);\n        }\n        for (var i = 0; i < childRecords.length; i++) {\n            if (childRecords[i].ganttProperties.isAutoSchedule) {\n                if (durationDiff > 0) {\n                    var startDate = isScheduledTask(childRecords[i].ganttProperties) ?\n                        childRecords[i].ganttProperties.startDate : childRecords[i].ganttProperties.startDate ?\n                        childRecords[i].ganttProperties.startDate : childRecords[i].ganttProperties.endDate ?\n                        childRecords[i].ganttProperties.endDate : new Date(previousStartDate.toString());\n                    if (isRightMove) {\n                        calcEndDate = this.parent.dateValidationModule.getEndDate(this.parent.dateValidationModule.checkStartDate(startDate, childRecords[i].ganttProperties, childRecords[i].ganttProperties.isMilestone), durationDiff, 'minute', childRecords[i].ganttProperties, false);\n                    }\n                    else {\n                        calcEndDate = this.parent.dateValidationModule.getStartDate(this.parent.dateValidationModule.checkEndDate(startDate, childRecords[i].ganttProperties), durationDiff, 'minute', childRecords[i].ganttProperties);\n                    }\n                    this.calculateDateByRoundOffDuration(childRecords[i], calcEndDate);\n                    if (this.parent.isOnEdit && this.validatedChildItems.indexOf(childRecords[i]) === -1) {\n                        this.validatedChildItems.push(childRecords[i]);\n                    }\n                }\n                else if (isNullOrUndefined(previousData)) {\n                    calcEndDate = previousStartDate;\n                    if (childRecords[i].ganttProperties.startDate.getTime() <= calcEndDate.getTime()) {\n                        this.calculateDateByRoundOffDuration(childRecords[i], calcEndDate);\n                    }\n                    if (this.parent.isOnEdit && this.validatedChildItems.indexOf(childRecords[i]) === -1) {\n                        this.validatedChildItems.push(childRecords[i]);\n                    }\n                }\n            }\n        }\n        if (childRecords.length) {\n            this.parent.dataOperation.updateParentItems(ganttRecord, true);\n        }\n    };\n    /**\n     * To get updated child records.\n     *\n     * @param {IGanttData} parentRecord .\n     * @param {IGanttData} childLists .\n     * @returns {void} .\n     */\n    Dependency.prototype.getUpdatableChildRecords = function (parentRecord, childLists) {\n        var childRecords = parentRecord.childRecords;\n        for (var i = 0; i < childRecords.length; i++) {\n            if (childRecords[i].ganttProperties.isAutoSchedule) {\n                childLists.push(childRecords[i]);\n                if (childRecords[i].hasChildRecords) {\n                    this.getUpdatableChildRecords(childRecords[i], childLists);\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} data .\n     * @param {Date} newStartDate .\n     * @returns {void} .\n     */\n    Dependency.prototype.calculateDateByRoundOffDuration = function (data, newStartDate) {\n        var ganttRecord = data;\n        var taskData = ganttRecord.ganttProperties;\n        var projectStartDate = new Date(newStartDate.getTime());\n        if (!isNullOrUndefined(taskData.endDate) && isNullOrUndefined(taskData.startDate)) {\n            var endDate = this.parent.dateValidationModule.checkStartDate(projectStartDate, taskData, null);\n            this.parent.setRecordValue('endDate', this.parent.dateValidationModule.checkEndDate(endDate, ganttRecord.ganttProperties), taskData, true);\n        }\n        else {\n            this.parent.setRecordValue('startDate', this.parent.dateValidationModule.checkStartDate(projectStartDate, taskData, false), taskData, true);\n            if (!isNullOrUndefined(taskData.duration)) {\n                this.parent.dateValidationModule.calculateEndDate(ganttRecord);\n            }\n        }\n        this.parent.dataOperation.updateWidthLeft(data);\n        this.parent.dataOperation.updateTaskData(ganttRecord);\n    };\n    Dependency.prototype.getRecord = function (parentGanttRecord, record, predecessor) {\n        var index;\n        var data;\n        if (isNullOrUndefined(record)) {\n            index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.to);\n            data = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n        }\n        else if (isNullOrUndefined(parentGanttRecord)) {\n            index = this.parent.editModule.taskbarEditModule.previousIds.indexOf(predecessor.from);\n            data = this.parent.editModule.taskbarEditModule.previousFlatData[index];\n        }\n        return data;\n    };\n    /**\n     * Method to get validate able predecessor alone from record\n     *\n     * @param {IGanttData} record .\n     * @returns {IPredecessor[]} .\n     * @private\n     */\n    Dependency.prototype.getValidPredecessor = function (record) {\n        var _this = this;\n        var validPredecessor = [];\n        if (!isNullOrUndefined(record)) {\n            var recPredecessor = record.ganttProperties.predecessor;\n            if (recPredecessor && recPredecessor.length > 0) {\n                validPredecessor = recPredecessor.filter(function (value) {\n                    var id = _this.parent.viewType === 'ResourceView' ? record.ganttProperties.taskId\n                        : record.ganttProperties.rowUniqueID;\n                    return value.from !== id.toString();\n                });\n            }\n        }\n        return validPredecessor;\n    };\n    return Dependency;\n}());\nexport { Dependency };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}