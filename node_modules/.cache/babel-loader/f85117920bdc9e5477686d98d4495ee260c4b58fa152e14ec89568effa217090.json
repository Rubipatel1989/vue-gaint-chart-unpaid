{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport { isNullOrUndefined, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n *  Date processor is used to handle date of task data.\n */\nvar DateProcessor = /** @class */function () {\n  function DateProcessor(parent) {\n    this.fromSegments = false;\n    this.mondayTimeRangeLength = 0;\n    this.tuesdayTimeRangeLength = 0;\n    this.wednesdayTimeRangeLength = 0;\n    this.thursdayTimeRangeLength = 0;\n    this.fridayTimeRangeLength = 0;\n    this.saturdayTimeRangeLength = 0;\n    this.sundayTimeRangeLength = 0;\n    this.parent = parent;\n  }\n  /**\n   * @param {ITaskData} ganttProp .\n   * @returns {boolean} .\n   */\n  DateProcessor.prototype.isValidateNonWorkDays = function (ganttProp) {\n    return !isNullOrUndefined(ganttProp) && ganttProp.isAutoSchedule && (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0) || isNullOrUndefined(ganttProp) && (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0);\n  };\n  /**\n   * Method to convert given date value as valid start date\n   *\n   * @param {Date} date .\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} validateAsMilestone .\n   * @param {boolean} isLoad .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.checkStartDate = function (date, ganttProp, validateAsMilestone, isLoad) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    }\n    var currentDay = new Date(date.getTime());\n    var dayStartTime = this.parent['getCurrentDayStartTime'](currentDay);\n    var dayEndTime = this.parent['getCurrentDayEndTime'](currentDay);\n    var cloneStartDate = new Date(date.getTime());\n    var hour = this.getSecondsInDecimal(cloneStartDate);\n    validateAsMilestone = isNullOrUndefined(validateAsMilestone) ? !isNullOrUndefined(ganttProp) ? ganttProp.isMilestone : false : validateAsMilestone;\n    if (hour < dayStartTime && (!validateAsMilestone || isLoad)) {\n      this.setTime(dayStartTime, cloneStartDate);\n    } else if (hour < dayStartTime && validateAsMilestone) {\n      this.setTime(dayStartTime, cloneStartDate);\n    } else if (hour === dayEndTime && (!ganttProp || !validateAsMilestone) || hour > dayEndTime) {\n      cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n      dayStartTime = this.parent['getCurrentDayStartTime'](cloneStartDate);\n      this.setTime(dayStartTime, cloneStartDate);\n    } else if (hour > dayStartTime && hour < dayEndTime) {\n      var workingRange = this.parent.workingTimeRanges;\n      if (this.parent.weekWorkingTime.length > 0) {\n        workingRange = this.parent['getWorkingRange'](cloneStartDate);\n      }\n      for (var index = 0; index < workingRange.length; index++) {\n        var value = workingRange[index];\n        if (hour >= value.to && workingRange[index + 1] && hour < workingRange[index + 1].from) {\n          // milestone can fall at end any interval time\n          if (hour === value.to && (!ganttProp || !validateAsMilestone) || hour !== value.to) {\n            this.setTime(workingRange[index + 1].from, cloneStartDate);\n          }\n          break;\n        }\n      }\n    }\n    var tStartDate;\n    if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n      do {\n        tStartDate = new Date(cloneStartDate.getTime());\n        var holidayLength = this.parent.totalHolidayDates.length;\n        // check holidays and weekends\n        if (this.isValidateNonWorkDays(ganttProp)) {\n          dayStartTime = this.parent['getCurrentDayStartTime'](tStartDate);\n          if (ganttProp) {\n            dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp.endDate ? ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate : tStartDate);\n          }\n          var startTime = !validateAsMilestone || isLoad ? dayStartTime : dayEndTime;\n          if (!this.parent.includeWeekend) {\n            var tempDate = new Date(cloneStartDate.getTime());\n            cloneStartDate = this.getNextWorkingDay(cloneStartDate);\n            startTime = this.parent['getCurrentDayStartTime'](cloneStartDate);\n            if (tempDate.getTime() !== cloneStartDate.getTime() && !validateAsMilestone) {\n              this.setTime(startTime, cloneStartDate);\n            }\n          }\n          for (var count = 0; count < holidayLength; count++) {\n            var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n            var holidayTo = new Date(holidayFrom.getTime());\n            holidayFrom.setHours(0, 0, 0, 0);\n            holidayTo.setHours(23, 59, 59, 59);\n            if (cloneStartDate.getTime() >= holidayFrom.getTime() && cloneStartDate.getTime() < holidayTo.getTime()) {\n              cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n              startTime = this.parent['getCurrentDayStartTime'](cloneStartDate);\n              this.setTime(startTime, cloneStartDate);\n            }\n          }\n        }\n      } while (tStartDate.getTime() !== cloneStartDate.getTime());\n      return new Date(cloneStartDate.getTime());\n    } else {\n      return new Date(cloneStartDate.getTime());\n    }\n  };\n  /**\n   * To update given date value to valid end date\n   *\n   * @param {Date} date .\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} validateAsMilestone .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.checkEndDate = function (date, ganttProp, validateAsMilestone) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    }\n    var dayStartTime;\n    var dayEndTime;\n    if (this.parent.weekWorkingTime.length > 0) {\n      var currentDay = date;\n      if (!this.parent.includeWeekend && ganttProp && ganttProp.isAutoSchedule || this.parent.editModule && this.parent.editModule.taskbarEditModule && this.parent.editModule.taskbarEditModule.taskBarEditRecord && !this.parent.editModule.taskbarEditModule.taskBarEditRecord.ganttProperties.isAutoSchedule) {\n        currentDay = this.getNextWorkingDay(date);\n      }\n      dayStartTime = this.parent['getStartTime'](currentDay);\n      dayEndTime = this.parent['getEndTime'](currentDay);\n    } else {\n      dayStartTime = this.parent.defaultStartTime;\n      dayEndTime = this.parent.defaultEndTime;\n    }\n    var cloneEndDate = new Date(date.getTime());\n    var hour = this.getSecondsInDecimal(cloneEndDate);\n    if (hour > dayEndTime) {\n      this.setTime(dayEndTime, cloneEndDate);\n    } else if (hour <= dayStartTime && !validateAsMilestone) {\n      var taskfields = this.parent.taskFields;\n      if (this.parent.editModule && this.parent.editModule['editedRecord'] && !this.parent.editModule['editedRecord'][taskfields.startDate] && this.parent.editModule['editedRecord'][taskfields.endDate]) {\n        cloneEndDate.setDate(cloneEndDate.getDate());\n      } else {\n        cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n      }\n      dayEndTime = this.parent['getCurrentDayEndTime'](cloneEndDate);\n      this.setTime(dayEndTime, cloneEndDate);\n    } else if (hour > dayStartTime && hour < dayEndTime) {\n      for (var index = 0; index < this.parent.workingTimeRanges.length; index++) {\n        var value = this.parent.workingTimeRanges[index];\n        if (hour > value.to && this.parent.workingTimeRanges[index + 1] && hour <= this.parent.workingTimeRanges[index + 1].from) {\n          this.setTime(this.parent.workingTimeRanges[index].to, cloneEndDate);\n          break;\n        }\n      }\n    }\n    var tempCheckDate;\n    if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n      do {\n        tempCheckDate = new Date(cloneEndDate.getTime());\n        var holidayLength = this.parent.totalHolidayDates.length;\n        if (this.isValidateNonWorkDays(ganttProp)) {\n          if (!this.parent.includeWeekend) {\n            var tempDate = new Date(cloneEndDate.getTime());\n            cloneEndDate = this.getPreviousWorkingDay(cloneEndDate);\n            dayEndTime = this.parent['getCurrentDayEndTime'](cloneEndDate);\n            if (tempDate.getTime() !== cloneEndDate.getTime()) {\n              this.setTime(dayEndTime, cloneEndDate);\n            }\n          }\n          for (var count = 0; count < holidayLength; count++) {\n            var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n            var holidayTo = new Date(holidayFrom.getTime());\n            var tempHoliday = new Date(cloneEndDate.getTime());\n            tempHoliday.setMinutes(cloneEndDate.getMilliseconds() - 2);\n            holidayFrom.setHours(0, 0, 0, 0);\n            holidayTo.setHours(23, 59, 59, 59);\n            if (cloneEndDate.getTime() >= holidayFrom.getTime() && cloneEndDate.getTime() < holidayTo.getTime() || tempHoliday.getTime() >= holidayFrom.getTime() && tempHoliday.getTime() < holidayTo.getTime()) {\n              cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n              dayEndTime = this.parent['getCurrentDayEndTime'](cloneEndDate);\n              if (!(cloneEndDate.getTime() === holidayFrom.getTime() && dayEndTime === 86400 && this.getSecondsInDecimal(cloneEndDate) === 0)) {\n                this.setTime(dayEndTime, cloneEndDate);\n              }\n            }\n          }\n        }\n      } while (tempCheckDate.getTime() !== cloneEndDate.getTime());\n      return new Date(cloneEndDate.getTime());\n    } else {\n      if (!isNullOrUndefined(cloneEndDate)) {\n        dayEndTime = this.parent['getCurrentDayEndTime'](date);\n        this.setTime(dayEndTime, cloneEndDate);\n      }\n      return new Date(cloneEndDate.getTime());\n    }\n  };\n  /**\n   * To validate the baseline start date\n   *\n   * @param {Date} date .\n   * @param {ITaskData} ganttProp .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.checkBaselineStartDate = function (date, ganttProp) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    } else {\n      var dayStartTime = this.parent['getCurrentDayStartTime'](date);\n      var dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp ? ganttProp.endDate ? ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate : date : date);\n      var cloneDate = new Date(date.getTime());\n      var hour = this.getSecondsInDecimal(cloneDate);\n      if (hour < dayStartTime) {\n        this.setTime(dayStartTime, cloneDate);\n      } else if (hour > dayEndTime) {\n        cloneDate.setDate(cloneDate.getDate() + 1);\n        if (this.parent.weekWorkingTime.length > 0) {\n          dayStartTime = this.parent['getStartTime'](cloneDate);\n        } else {\n          dayStartTime = this.parent.defaultStartTime;\n        }\n        this.setTime(dayStartTime, cloneDate);\n      } else if (hour > dayStartTime && hour < dayEndTime) {\n        for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n          var value = this.parent.workingTimeRanges[i];\n          if (hour > value.to && this.parent.workingTimeRanges[i + 1] && hour < this.parent.workingTimeRanges[i + 1].from) {\n            this.setTime(this.parent.workingTimeRanges[i + 1].from, cloneDate);\n            break;\n          }\n        }\n      }\n      return cloneDate;\n    }\n  };\n  /**\n   * To validate baseline end date\n   *\n   * @param {Date} date .\n   * @param {ITaskData} ganttProp .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.checkBaselineEndDate = function (date, ganttProp) {\n    if (isNullOrUndefined(date)) {\n      return null;\n    } else {\n      var dayEndTime = this.parent['getCurrentDayEndTime'](date);\n      var dayStartTime = this.parent['getCurrentDayStartTime'](ganttProp ? ganttProp.startDate ? ganttProp.isAutoSchedule ? ganttProp.startDate : ganttProp.autoStartDate : date : date);\n      var cloneDate = new Date(date.getTime());\n      var hour = this.getSecondsInDecimal(cloneDate);\n      if (hour > dayEndTime) {\n        this.setTime(dayEndTime, cloneDate);\n      } else if (hour < dayStartTime && !isNullOrUndefined(ganttProp) && !ganttProp.isMilestone) {\n        cloneDate.setDate(cloneDate.getDate() - 1);\n        dayEndTime = this.parent['getCurrentDayEndTime'](cloneDate);\n        this.setTime(dayEndTime, cloneDate);\n      } else if (hour > dayStartTime && hour < dayEndTime) {\n        for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n          var value = this.parent.workingTimeRanges[i];\n          if (hour > value.to && this.parent.workingTimeRanges[i + 1] && hour <= this.parent.workingTimeRanges[i + 1].from) {\n            this.setTime(this.parent.workingTimeRanges[i].to, cloneDate);\n            break;\n          }\n        }\n      }\n      if (ganttProp && ganttProp.baselineStartDate && cloneDate && ganttProp.baselineStartDate.getTime() > cloneDate.getTime()) {\n        cloneDate.setDate(cloneDate.getDate() + 1);\n      }\n      return cloneDate;\n    }\n  };\n  /**\n   * To calculate start date value from duration and end date\n   *\n   * @param {IGanttData} ganttData - Defines the gantt data.\n   * @returns {void} .\n   * @private\n   */\n  DateProcessor.prototype.calculateStartDate = function (ganttData) {\n    var ganttProp = ganttData.ganttProperties;\n    var tempStartDate = null;\n    if (!isNullOrUndefined(ganttProp.endDate) && !isNullOrUndefined(ganttProp.duration)) {\n      tempStartDate = this.getStartDate(ganttProp.endDate, ganttProp.duration, ganttProp.durationUnit, ganttProp);\n    }\n    this.parent.setRecordValue('startDate', tempStartDate, ganttProp, true);\n    if (this.parent.taskFields.startDate) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'startDate');\n    }\n  };\n  /**\n   *\n   * @param {IGanttData} ganttData - Defines the gantt data.\n   * @returns {void} .\n   * @private\n   */\n  DateProcessor.prototype.calculateEndDate = function (ganttData) {\n    var ganttProp = ganttData.ganttProperties;\n    var tempEndDate = null;\n    var dayStartTime;\n    var dayEndTime;\n    if (!isNullOrUndefined(ganttProp.startDate)) {\n      if (!isNullOrUndefined(ganttProp.endDate) && isNullOrUndefined(ganttProp.duration)) {\n        if (this.compareDates(ganttProp.startDate, ganttProp.endDate) === 1) {\n          this.parent.setRecordValue('startDate', new Date(ganttProp.endDate.getTime()), ganttProp, true);\n          dayStartTime = this.parent['getCurrentDayStartTime'](ganttProp.isAutoSchedule ? ganttProp.autoStartDate : ganttProp.startDate);\n          dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp.isAutoSchedule ? ganttProp.autoEndDate : ganttProp.endDate);\n          this.setTime(dayStartTime, ganttProp.startDate);\n        }\n        this.calculateDuration(ganttData);\n      }\n      if (!isNullOrUndefined(ganttProp.duration)) {\n        var duration = !isNullOrUndefined(ganttProp.segments) && ganttProp.segments.length > 1 ? this.totalDuration(ganttProp.segments) : ganttProp.duration;\n        tempEndDate = this.getEndDate(ganttProp.startDate, duration, ganttProp.durationUnit, ganttProp, false);\n      }\n      this.parent.setRecordValue('endDate', tempEndDate, ganttProp, true);\n    } else {\n      tempEndDate = ganttData[this.parent.taskFields.endDate];\n      if (!isNullOrUndefined(tempEndDate)) {\n        dayEndTime = this.parent['getCurrentDayEndTime'](tempEndDate);\n        this.setTime(dayEndTime, tempEndDate);\n      }\n      this.parent.setRecordValue('endDate', tempEndDate, ganttProp, true);\n    }\n    if (this.parent.taskFields.endDate) {\n      this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n    }\n  };\n  DateProcessor.prototype.totalDuration = function (segments) {\n    var duration = 0;\n    for (var i = 0; i < segments.length; i++) {\n      duration += segments[i].duration + segments[i].offsetDuration;\n    }\n    return duration;\n  };\n  /**\n   * To calculate duration from start date and end date\n   *\n   * @param {IGanttData} ganttData - Defines the gantt data.\n   * @returns {void} .\n   */\n  DateProcessor.prototype.calculateDuration = function (ganttData) {\n    var ganttProperties = ganttData.ganttProperties;\n    var tDuration;\n    if (!isNullOrUndefined(ganttProperties.segments) && ganttProperties.segments.length > 0 && !isNullOrUndefined(this.parent.editModule.taskbarEditModule)) {\n      tDuration = this.parent.editModule.taskbarEditModule.sumOfDuration(ganttProperties.segments);\n    } else {\n      if (!isNullOrUndefined(this.parent.taskFields.milestone) && !isNullOrUndefined(ganttProperties.startDate) && !isNullOrUndefined(ganttProperties.endDate) && ganttProperties.startDate.getTime() === ganttProperties.endDate.getTime() && ganttData.taskData[this.parent.taskFields.milestone] === false) {\n        tDuration = 1;\n      } else {\n        tDuration = this.getDuration(ganttProperties.startDate, ganttProperties.endDate, ganttProperties.durationUnit, ganttProperties.isAutoSchedule, ganttProperties.isMilestone);\n      }\n    }\n    this.parent.setRecordValue('duration', tDuration, ganttProperties, true);\n    var col = this.parent.columnByField[this.parent.columnMapping.duration];\n    if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.cellEditModule) && !this.parent.editModule.cellEditModule.isCellEdit && !isNullOrUndefined(col)) {\n      if (!isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read)) {\n        var dialog = this.parent.editModule.dialogModule.dialog;\n        if (!isNullOrUndefined(dialog)) {\n          var textBox = dialog.querySelector('#' + this.parent.element.id + 'Duration').ej2_instances[0];\n          if (!isNullOrUndefined(textBox) && textBox.value !== tDuration.toString()) {\n            textBox.value = tDuration.toString();\n            textBox.dataBind();\n          }\n        }\n      }\n      if (this.parent.taskFields.duration) {\n        this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n        if (this.parent.taskFields.durationUnit) {\n          this.parent.dataOperation.updateMappingData(ganttData, 'durationUnit');\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {Date} sDate Method to get total nonworking time between two date values\n   * @param {Date} eDate .\n   * @param {boolean} isAutoSchedule .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   */\n  DateProcessor.prototype.getNonworkingTime = function (sDate, eDate, isAutoSchedule, isCheckTimeZone) {\n    isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n    var weekendCount = !this.parent.includeWeekend && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) && isAutoSchedule ? this.getWeekendCount(sDate, eDate) : 0;\n    var totalHours = this.getNumberOfSeconds(sDate, eDate, isCheckTimeZone);\n    var holidaysCount = isAutoSchedule && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) ? this.getHolidaysCount(sDate, eDate) : 0;\n    var totWorkDays = (totalHours - weekendCount * 86400 - holidaysCount * 86400) / 86400; // working days between two dates\n    var nonWorkHours = this.getNonWorkingSecondsOnDate(sDate, eDate, isAutoSchedule);\n    var totalNonWorkTime = (this.parent.weekWorkingTime.length > 0 ? this.nonWorkingSeconds(sDate, eDate, isAutoSchedule, totWorkDays) : totWorkDays * (86400 - this.parent.secondsPerDay)) + weekendCount * 86400 + holidaysCount * 86400 + nonWorkHours;\n    return totalNonWorkTime;\n  };\n  DateProcessor.prototype.nonWorkingSeconds = function (sDate, eDate, isAutoSchedule, workDays, fromDuration) {\n    var newStartDate = sDate.getTime() > eDate.getTime() ? new Date(eDate.getTime()) : new Date(sDate.getTime());\n    var newEndDate = sDate.getTime() > eDate.getTime() ? new Date(sDate.getTime()) : new Date(eDate.getTime());\n    var timeDiff = 0;\n    var count = 0;\n    if (fromDuration) {\n      var dayStartTime = this.parent['getCurrentDayStartTime'](newStartDate);\n      var dayEndTime = this.parent['getCurrentDayEndTime'](newStartDate);\n      if (!(newStartDate.getHours() < dayEndTime / 3600 && newStartDate.getHours() >= dayStartTime / 3600)) {\n        newStartDate.setDate(newStartDate.getDate() + 1);\n      }\n    } else {\n      newStartDate.setDate(newStartDate.getDate() + 1);\n      newStartDate.setHours(0, 0, 0, 0);\n      newEndDate.setHours(0, 0, 0, 0);\n    }\n    if (workDays > 0 || isNullOrUndefined(workDays)) {\n      while (fromDuration && newStartDate.getTime() <= newEndDate.getTime() || !fromDuration && newStartDate.getTime() < newEndDate.getTime()) {\n        if (isAutoSchedule) {\n          if (this.isOnHolidayOrWeekEnd(newStartDate, true)) {\n            do {\n              newStartDate.setDate(newStartDate.getDate() + 1);\n            } while (this.isOnHolidayOrWeekEnd(newStartDate, true));\n          }\n          if (!this.parent.includeWeekend) {\n            this.getNextWorkingDay(newStartDate);\n          }\n        }\n        if (newStartDate.getTime() <= newEndDate.getTime()) {\n          count++;\n          var currentDaySeconds = this.parent['getSecondsPerDay'](newStartDate);\n          if (fromDuration) {\n            timeDiff += currentDaySeconds;\n          } else {\n            timeDiff += 86400 - currentDaySeconds;\n          }\n          newStartDate.setDate(newStartDate.getDate() + 1);\n          if (isAutoSchedule) {\n            if (this.isOnHolidayOrWeekEnd(newStartDate, true)) {\n              do {\n                newStartDate.setDate(newStartDate.getDate() + 1);\n              } while (this.isOnHolidayOrWeekEnd(newStartDate, true));\n            }\n            if (!this.parent.includeWeekend) {\n              this.getNextWorkingDay(newStartDate);\n            }\n          }\n        }\n      }\n    } else {\n      return 0;\n    }\n    if (fromDuration) {\n      if (timeDiff > 0) {\n        timeDiff = timeDiff / count;\n      } else {\n        timeDiff = this.parent.secondsPerDay;\n      }\n    }\n    return timeDiff;\n  };\n  /**\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {string} durationUnit .\n   * @param {boolean} isAutoSchedule .\n   * @param {boolean} isMilestone .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   * @private\n   */\n  DateProcessor.prototype.getDuration = function (startDate, endDate, durationUnit, isAutoSchedule, isMilestone, isCheckTimeZone) {\n    if (isNullOrUndefined(startDate) || isNullOrUndefined(endDate)) {\n      return null;\n    }\n    isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n    var durationValue = 0;\n    var timeDiff = this.getTimeDifference(startDate, endDate, isCheckTimeZone) / 1000;\n    var nonWorkHours = this.getNonworkingTime(startDate, endDate, isAutoSchedule, isCheckTimeZone);\n    var durationHours = timeDiff - nonWorkHours;\n    var totSeconds;\n    if (this.parent.weekWorkingTime.length > 0) {\n      totSeconds = this.nonWorkingSeconds(startDate, endDate, isAutoSchedule, undefined, true);\n    } else {\n      totSeconds = this.parent.secondsPerDay;\n    }\n    if (isMilestone && this.parent.getFormatedDate(startDate) === this.parent.getFormatedDate(endDate)) {\n      durationValue = 0;\n    } else {\n      if (!durationUnit || durationUnit === 'day') {\n        durationValue = durationHours / totSeconds;\n      } else if (durationUnit === 'minute') {\n        durationValue = durationHours / 60;\n      } else {\n        durationValue = durationHours / 3600;\n      }\n    }\n    return parseFloat(durationValue.toString());\n  };\n  /**\n   *\n   * @param {number} duration .\n   * @param {string} durationUnit .\n   * @param {Date} date .\n   *  @returns {number} .\n   */\n  DateProcessor.prototype.getDurationAsSeconds = function (duration, durationUnit, date) {\n    var value = 0;\n    var totSeconds;\n    if (this.parent.weekWorkingTime.length > 0) {\n      totSeconds = this.parent['getSecondsPerDay'](date);\n    } else {\n      totSeconds = this.parent.secondsPerDay;\n    }\n    if (!durationUnit || durationUnit.toLocaleLowerCase() === 'day') {\n      value = totSeconds * duration;\n    } else if (durationUnit.toLocaleLowerCase() === 'hour') {\n      value = duration * 3600;\n    } else {\n      value = duration * 60;\n    }\n    return value;\n  };\n  /**\n   * To get date from start date and duration\n   *\n   * @param {Date} startDate .\n   * @param {number} duration .\n   * @param {string} durationUnit .\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} validateAsMilestone .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.getEndDate = function (startDate, duration, durationUnit, ganttProp, validateAsMilestone) {\n    var tempStart = new Date(startDate.getTime());\n    var endDate = new Date(startDate.getTime());\n    var sDate = new Date(startDate.getTime());\n    var secondDuration;\n    if (this.parent.weekWorkingTime.length > 0 && (!durationUnit || durationUnit.toLocaleLowerCase() === 'day')) {\n      secondDuration = this.calculateSecondDuration(duration, sDate, secondDuration, startDate, true);\n    } else {\n      secondDuration = this.getDurationAsSeconds(duration, durationUnit, startDate);\n    }\n    var nonWork = 0;\n    var workHours = 0;\n    while (secondDuration > 0) {\n      endDate.setSeconds(endDate.getSeconds() + secondDuration);\n      nonWork = this.getNonworkingTime(tempStart, endDate, ganttProp.isAutoSchedule, true);\n      workHours = secondDuration - nonWork;\n      secondDuration = secondDuration - workHours;\n      if (secondDuration > 0) {\n        endDate = this.checkStartDate(endDate, ganttProp, validateAsMilestone);\n      }\n      tempStart = new Date(endDate.getTime());\n    }\n    return endDate;\n  };\n  /**\n   * Calculate start date based on end date and duration.\n   *\n   * @param {Date} endDate - To calculate start date value from end date and duration.\n   * @param {number} duration - The duration value.\n   * @param {string} durationUnit - The unit of duration.\n   * @param {ITaskData} ganttProp - The Gantt task properties.\n   * @param {boolean} fromValidation - A flag indicating if the calculation is from validation.\n   * @returns {Date} The calculated start date.\n   * @private\n   */\n  DateProcessor.prototype.getStartDate = function (endDate, duration, durationUnit, ganttProp, fromValidation) {\n    var tempEnd = new Date(endDate.getTime());\n    var startDate = new Date(endDate.getTime());\n    var secondDuration;\n    var eDate = new Date(tempEnd.getTime());\n    if (this.parent.weekWorkingTime.length > 0) {\n      secondDuration = this.calculateSecondDuration(duration, eDate, secondDuration, tempEnd, false);\n    } else {\n      secondDuration = this.getDurationAsSeconds(duration, durationUnit, tempEnd);\n    }\n    var nonWork = 0;\n    var workHours = 0;\n    while (secondDuration > 0) {\n      startDate.setSeconds(startDate.getSeconds() - secondDuration);\n      nonWork = this.getNonworkingTime(startDate, tempEnd, ganttProp.isAutoSchedule, true);\n      workHours = secondDuration - nonWork;\n      secondDuration = secondDuration - workHours;\n      if (secondDuration > 0) {\n        tempEnd = this.checkEndDate(startDate, ganttProp);\n      }\n      tempEnd = new Date(startDate.getTime());\n    }\n    /* To render the milestone in proper date while loading */\n    if (fromValidation && ganttProp.isMilestone) {\n      startDate.setDate(startDate.getDate() - 1);\n      var dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp.endDate ? ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate : startDate);\n      this.parent.dateValidationModule.setTime(dayEndTime, startDate);\n      startDate = this.parent.dateValidationModule.checkStartDate(startDate, ganttProp, true);\n    }\n    return startDate;\n  };\n  DateProcessor.prototype.calculateSecondDuration = function (duration, sDate, secondDuration, startDate, fromEndDate) {\n    if (duration < 1) {\n      secondDuration = this.parent['getSecondsPerDay'](sDate) * duration;\n    } else {\n      secondDuration = 0;\n      var durationValue = duration;\n      var dayStartTime = this.parent['getCurrentDayStartTime'](sDate);\n      var dayEndTime = this.parent['getCurrentDayEndTime'](sDate);\n      if (!(sDate.getHours() < dayEndTime / 3600 && sDate.getHours() > dayStartTime / 3600) && this.fromSegments) {\n        if (fromEndDate) {\n          sDate.setDate(sDate.getDate() + 1);\n        } else {\n          sDate.setDate(sDate.getDate() - 1);\n        }\n      }\n      while (durationValue > 0) {\n        if (this.isOnHolidayOrWeekEnd(sDate, true)) {\n          do {\n            if (fromEndDate) {\n              sDate.setDate(sDate.getDate() + 1);\n            } else {\n              sDate.setDate(sDate.getDate() - 1);\n            }\n          } while (this.isOnHolidayOrWeekEnd(sDate, true));\n        }\n        if (!this.parent.includeWeekend) {\n          sDate = fromEndDate ? this.getNextWorkingDay(sDate) : this.getPreviousWorkingDay(sDate);\n        }\n        var totSeconds = this.parent['getSecondsPerDay'](sDate);\n        var num = 0;\n        if (this.getSecondsInDecimal(startDate) !== this.parent['getStartTime'](startDate) && !Number.isInteger(durationValue)) {\n          var deciNumber = duration.toString().split('.');\n          num = parseFloat('.' + deciNumber[1]);\n          totSeconds = totSeconds * num;\n          durationValue = durationValue - num;\n        }\n        if (durationValue < 1) {\n          totSeconds = totSeconds * durationValue;\n        }\n        secondDuration = secondDuration + totSeconds;\n        if (fromEndDate) {\n          sDate.setDate(sDate.getDate() + 1);\n        } else {\n          sDate.setDate(sDate.getDate() - 1);\n        }\n        if (!num) {\n          durationValue--;\n        }\n      }\n    }\n    return secondDuration;\n  };\n  /**\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isLoad .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.getProjectStartDate = function (ganttProp, isLoad) {\n    if (!isNullOrUndefined(this.parent.cloneProjectStartDate)) {\n      if (typeof this.parent.cloneProjectStartDate === 'string') {\n        this.parent.cloneProjectStartDate = this.getDateFromFormat(this.parent.cloneProjectStartDate);\n      }\n      var cloneStartDate = this.checkStartDate(this.parent.cloneProjectStartDate);\n      this.parent.cloneProjectStartDate = cloneStartDate;\n      return new Date(cloneStartDate.getTime());\n    } else if (!isNullOrUndefined(this.parent.projectStartDate)) {\n      var cloneStartDate = this.getDateFromFormat(this.parent.projectStartDate);\n      this.parent.cloneProjectStartDate = this.checkStartDate(cloneStartDate);\n    } else if (!isNullOrUndefined(isLoad)) {\n      var flatData = this.parent.flatData;\n      var minStartDate = void 0;\n      if (flatData.length > 0) {\n        minStartDate = flatData[0].ganttProperties.startDate;\n      } else {\n        minStartDate = new Date();\n        minStartDate.setHours(0, 0, 0, 0);\n      }\n      for (var index = 1; index < flatData.length; index++) {\n        var startDate = flatData[index].ganttProperties.startDate;\n        if (!isNullOrUndefined(startDate) && this.compareDates(startDate, minStartDate) === -1) {\n          minStartDate = startDate;\n        }\n      }\n      this.parent.cloneProjectStartDate = this.checkStartDate(minStartDate, ganttProp);\n    } else {\n      return null;\n    }\n    return new Date(this.parent.cloneProjectStartDate.getTime());\n  };\n  /**\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isAuto .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.getValidStartDate = function (ganttProp, isAuto) {\n    var sDate = null;\n    var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var duration = !ganttProp.isAutoSchedule && ganttProp.autoDuration ? ganttProp.autoDuration : ganttProp.duration;\n    if (isNullOrUndefined(startDate)) {\n      if (!isNullOrUndefined(endDate)) {\n        sDate = new Date(endDate.getTime());\n        var dayStartTime = this.parent['getCurrentDayStartTime'](sDate);\n        this.setTime(dayStartTime, sDate);\n      } else if (!isNullOrUndefined(duration)) {\n        var ganttTask = this.parent.getTaskByUniqueID(ganttProp.uniqueID);\n        if (this.parent.allowUnscheduledTasks && ganttTask && ganttTask.parentItem && isNullOrUndefined(startDate) && isNullOrUndefined(endDate)) {\n          var parentTask = this.parent.getParentTask(ganttTask.parentItem);\n          while (parentTask && !parentTask.ganttProperties.startDate) {\n            parentTask = this.parent.getParentTask(parentTask.parentItem);\n          }\n          sDate = !parentTask || !parentTask.ganttProperties.startDate ? this.parent.cloneProjectStartDate : parentTask.ganttProperties.startDate;\n        } else {\n          sDate = this.getProjectStartDate(ganttProp);\n        }\n      }\n    } else {\n      sDate = new Date(startDate.getTime());\n    }\n    return sDate;\n  };\n  /**\n   *\n   * @param {ITaskData} ganttProp .\n   * @param {boolean} isAuto .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.getValidEndDate = function (ganttProp, isAuto) {\n    var eDate = null;\n    var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n    var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n    var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration;\n    if (isNullOrUndefined(endDate)) {\n      if (!isNullOrUndefined(startDate)) {\n        if (ganttProp.isMilestone) {\n          eDate = this.checkStartDate(startDate);\n        } else {\n          eDate = new Date(startDate.getTime());\n          var dayEndTime = this.parent['getCurrentDayEndTime'](endDate ? endDate : eDate);\n          this.setTime(dayEndTime, eDate);\n        }\n      } else if (!isNullOrUndefined(duration)) {\n        var sDate = this.getValidStartDate(ganttProp);\n        if (sDate) {\n          eDate = this.getEndDate(sDate, duration, ganttProp.durationUnit, ganttProp, false);\n        }\n      }\n    } else {\n      eDate = new Date(endDate.getTime());\n    }\n    return eDate;\n  };\n  DateProcessor.prototype.getWorkingTime = function (day, currentRange, startDate, totalSeconds, count, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges) {\n    if (!isNullOrUndefined(currentRange.from) && !isNullOrUndefined(currentRange.to)) {\n      startDate.setHours(0, 0, 0, 0);\n      var tempDate = new Date(startDate.getTime());\n      startDate.setTime(startDate.getTime() + currentRange.from * 3600000);\n      var startHour = new Date(startDate.getTime());\n      if (currentRange.to === 24) {\n        var currentRangeTo = 24 * 60 * 60 * 1000;\n        tempDate.setTime(tempDate.getTime() + currentRangeTo);\n      } else {\n        tempDate.setTime(tempDate.getTime() + currentRange.to * 3600000);\n      }\n      var endHour = new Date(tempDate.getTime());\n      var timeDiff = endHour.getTime() - startHour.getTime();\n      var sdSeconds = this.getSecondsInDecimal(startHour);\n      var edSeconds = this.getSecondsInDecimal(endHour);\n      if (edSeconds === 0) {\n        edSeconds = 86400;\n      }\n      totalSeconds += timeDiff / 1000;\n      if (count === 0) {\n        this.parent.defaultStartTime = sdSeconds;\n        if (this.parent.weekWorkingTime.length > 0) {\n          this.assignStartTime(day, sdSeconds);\n        }\n      }\n      if (count === this[day.toLowerCase() + 'TimeRangeLength'] - 1 || day === '') {\n        this.parent.defaultEndTime = edSeconds;\n        if (this.parent.weekWorkingTime.length > 0) {\n          this.assignEndTime(day, edSeconds);\n        }\n      }\n      if (count > 0) {\n        if (day === '') {\n          nonWorkingHours.push(nonWorkingHours[nonWorkingHours.length - 1] + sdSeconds - workingTimeRanges[count - 1].to);\n          if (workingTimeRanges[count - 1].to < sdSeconds) {\n            nonWorkingTimeRanges.push({\n              from: workingTimeRanges[count - 1].to,\n              to: sdSeconds,\n              isWorking: false,\n              interval: sdSeconds - workingTimeRanges[count - 1].to\n            });\n          }\n        } else {\n          this.parent[day.toLowerCase() + 'NonWorkingHours'].push(this.parent[day.toLowerCase() + 'NonWorkingHours'][this.parent[day.toLowerCase() + 'NonWorkingHours'].length - 1] + sdSeconds - this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'][count - 1].to);\n          if (this.parent[day.toLowerCase() + 'WorkingTimeRanges'][count - 1].to < sdSeconds) {\n            this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({\n              from: this.parent[day.toLowerCase() + 'WorkingTimeRanges'][count - 1].to,\n              to: sdSeconds,\n              isWorking: false,\n              interval: sdSeconds - this.parent[day.toLowerCase() + 'WorkingTimeRanges'][count - 1].to\n            });\n          }\n        }\n      } else {\n        if (day === '') {\n          nonWorkingHours.push(0);\n          nonWorkingTimeRanges.push({\n            from: 0,\n            to: sdSeconds,\n            isWorking: false,\n            interval: sdSeconds\n          });\n        } else {\n          this.parent[day.toLowerCase() + 'NonWorkingHours'].push(0);\n          this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({\n            from: 0,\n            to: sdSeconds,\n            isWorking: false,\n            interval: sdSeconds\n          });\n        }\n      }\n      if (day === '') {\n        workingTimeRanges.push({\n          from: sdSeconds,\n          to: edSeconds\n        });\n        nonWorkingTimeRanges.push({\n          from: sdSeconds,\n          to: edSeconds,\n          isWorking: true,\n          interval: edSeconds - sdSeconds\n        });\n      } else {\n        this.parent[day.toLowerCase() + 'WorkingTimeRanges'].push({\n          from: sdSeconds,\n          to: edSeconds\n        });\n        this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({\n          from: sdSeconds,\n          to: edSeconds,\n          isWorking: true,\n          interval: edSeconds - sdSeconds\n        });\n      }\n    }\n    return totalSeconds;\n  };\n  DateProcessor.prototype.assignStartTime = function (day, sdSeconds) {\n    switch (day) {\n      case 'Monday':\n        this.parent.mondayDefaultStartTime = sdSeconds;\n        break;\n      case 'Tuesday':\n        this.parent.tuesdayDefaultStartTime = sdSeconds;\n        break;\n      case 'Wednesday':\n        this.parent.wednesdayDefaultStartTime = sdSeconds;\n        break;\n      case 'Thursday':\n        this.parent.thursdayDefaultStartTime = sdSeconds;\n        break;\n      case 'Friday':\n        this.parent.fridayDefaultStartTime = sdSeconds;\n        break;\n      case 'Saturday':\n        this.parent.saturdayDefaultStartTime = sdSeconds;\n        break;\n      case 'Sunday':\n        this.parent.sundayDefaultStartTime = sdSeconds;\n        break;\n      default:\n        break;\n    }\n  };\n  DateProcessor.prototype.assignEndTime = function (day, edSeconds) {\n    switch (day) {\n      case 'Monday':\n        this.parent.mondayDefaultEndTime = edSeconds;\n        break;\n      case 'Tuesday':\n        this.parent.tuesdayDefaultEndTime = edSeconds;\n        break;\n      case 'Wednesday':\n        this.parent.wednesdayDefaultEndTime = edSeconds;\n        break;\n      case 'Thursday':\n        this.parent.thursdayDefaultEndTime = edSeconds;\n        break;\n      case 'Friday':\n        this.parent.fridayDefaultEndTime = edSeconds;\n        break;\n      case 'Saturday':\n        this.parent.saturdayDefaultEndTime = edSeconds;\n        break;\n      case 'Sunday':\n        this.parent.sundayDefaultEndTime = edSeconds;\n        break;\n      default:\n        break;\n    }\n  };\n  DateProcessor.prototype.calculateWeekWorkTime = function (day, currentDay, startDate, totalSeconds, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges) {\n    var seconds = 0;\n    for (var j = 0; j < currentDay.length; j++) {\n      var currentRange = currentDay[j];\n      seconds = seconds + this.getWorkingTime(day, currentRange, startDate, totalSeconds, j, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n    }\n    if (this.parent[day.toLowerCase() + 'DefaultStartTime'] / 3600 !== 24) {\n      this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({\n        from: this.parent[day.toLowerCase() + 'DefaultEndTime'],\n        to: 86400,\n        isWorking: false,\n        interval: 86400 - this.parent[day.toLowerCase() + 'DefaultEndTime']\n      });\n    }\n    return seconds;\n  };\n  /**\n   * @returns {number} .\n   * @private\n   */\n  DateProcessor.prototype.getSecondsPerDay = function () {\n    var totalSeconds = 0;\n    var startDate = new Date('10/11/2018');\n    this.parent.nonWorkingHours = [];\n    var nonWorkingHours = this.parent.nonWorkingHours;\n    this.parent.workingTimeRanges = [];\n    this.parent.workingTimeRanges = [];\n    var workingTimeRanges = this.parent.workingTimeRanges;\n    this.parent.nonWorkingTimeRanges = [];\n    var nonWorkingTimeRanges = this.parent.nonWorkingTimeRanges;\n    for (var _i = 0, _a = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; _i < _a.length; _i++) {\n      var day = _a[_i];\n      this[day.toLowerCase() + \"TimeRangeLength\"] = this.parent.dayWorkingTime.length;\n    }\n    if (this.parent.weekWorkingTime.length > 0) {\n      for (var i = 0; i < this.parent.weekWorkingTime.length; i++) {\n        this[this.parent.weekWorkingTime[i].dayOfWeek.toLowerCase() + 'TimeRangeLength'] = this.parent.weekWorkingTime[i].timeRange.length;\n      }\n      var weekWorkingTime = this.parent.weekWorkingTime;\n      var dayWorkingTime_1 = this.parent.dayWorkingTime;\n      for (var _b = 0, weekWorkingTime_1 = weekWorkingTime; _b < weekWorkingTime_1.length; _b++) {\n        var weekDay = weekWorkingTime_1[_b];\n        if (weekDay.timeRange && weekDay.timeRange.length > 0) {\n          var seconds_1 = this.calculateWeekWorkTime(weekDay.dayOfWeek, weekDay.timeRange, startDate, totalSeconds, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n          this.parent[weekDay.dayOfWeek.toLowerCase() + \"Seconds\"] = seconds_1;\n        }\n      }\n      for (var _c = 0, _d = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; _c < _d.length; _c++) {\n        var day = _d[_c];\n        var dayDefaultStartTime = this.parent[day.toLowerCase() + \"DefaultStartTime\"];\n        if (isNullOrUndefined(dayDefaultStartTime)) {\n          var seconds_2 = this.calculateWeekWorkTime(day, dayWorkingTime_1, startDate, totalSeconds, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n          this.parent[day.toLowerCase() + \"Seconds\"] = seconds_2;\n        }\n      }\n    }\n    var dayWorkingTime = this.parent.dayWorkingTime;\n    var length = dayWorkingTime.length;\n    var seconds = 0;\n    for (var count = 0; count < length; count++) {\n      var currentRange = dayWorkingTime[count];\n      seconds = seconds + this.getWorkingTime('', currentRange, startDate, totalSeconds, count, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n    }\n    if (this.parent.defaultEndTime / 3600 !== 24) {\n      nonWorkingTimeRanges.push({\n        from: this.parent.defaultEndTime,\n        to: 86400,\n        isWorking: false,\n        interval: 86400 - this.parent.defaultEndTime\n      });\n    }\n    totalSeconds = seconds;\n    return totalSeconds;\n  };\n  /**\n   *\n   * @param {string} value .\n   * @param {boolean} isFromDialog .\n   * @returns {object} .\n   * @private\n   */\n  // eslint-disable-next-line\n  DateProcessor.prototype.getDurationValue = function (value, isFromDialog) {\n    var durationUnit = null;\n    var duration = null;\n    if (typeof value === 'string') {\n      var values = value.match(/(\\d*\\.*\\d+|.+$)/g);\n      if (values && values.length <= 2) {\n        duration = parseFloat(values[0].toString().trim());\n        var unit = values[1] ? values[1].toString().trim().toLowerCase() : null;\n        if (getValue('minute', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n          durationUnit = 'minute';\n        } else if (getValue('hour', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n          durationUnit = 'hour';\n        } else if (getValue('day', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n          durationUnit = 'day';\n        }\n      }\n    } else {\n      duration = value;\n      durationUnit = null;\n    }\n    var output = {\n      duration: duration,\n      durationUnit: durationUnit\n    };\n    return output;\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @returns {Date} .\n   */\n  DateProcessor.prototype.getNextWorkingDay = function (date) {\n    var dayIndex = date.getDay();\n    if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1) {\n      date.setDate(date.getDate() + 1);\n      date = this.getNextWorkingDay(date);\n      return date;\n    } else {\n      return date;\n    }\n  };\n  /**\n   * get weekend days between two dates without including args dates\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @returns {number} .\n   */\n  DateProcessor.prototype.getWeekendCount = function (startDate, endDate) {\n    var weekendCount = 0;\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    sDate.setHours(0, 0, 0, 0);\n    sDate.setDate(sDate.getDate() + 1);\n    eDate.setHours(0, 0, 0, 0);\n    while (sDate.getTime() < eDate.getTime()) {\n      if (this.parent.nonWorkingDayIndex.indexOf(sDate.getDay()) !== -1) {\n        weekendCount += 1;\n      }\n      sDate.setDate(sDate.getDate() + 1);\n    }\n    return weekendCount;\n  };\n  /**\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   */\n  DateProcessor.prototype.getNumberOfSeconds = function (startDate, endDate, isCheckTimeZone) {\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    var timeDiff = 0;\n    sDate.setDate(sDate.getDate() + 1);\n    sDate.setHours(0, 0, 0, 0);\n    eDate.setHours(0, 0, 0, 0);\n    if (sDate.getTime() < eDate.getTime()) {\n      timeDiff = this.getTimeDifference(sDate, eDate, isCheckTimeZone) / 1000;\n    }\n    if (timeDiff % 86400 !== 0) {\n      timeDiff = timeDiff - timeDiff % 86400 + 86400;\n    }\n    return timeDiff;\n  };\n  /**\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @returns {number} .\n   */\n  DateProcessor.prototype.getHolidaysCount = function (startDate, endDate) {\n    var holidaysCount = 0;\n    var holidays = this.parent.totalHolidayDates;\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    sDate.setDate(sDate.getDate() + 1);\n    sDate.setHours(0, 0, 0, 0);\n    eDate.setHours(0, 0, 0, 0);\n    if (sDate.getTime() < eDate.getTime()) {\n      for (var i = 0; i < holidays.length; i++) {\n        var currentHoliday = this.getDateFromFormat(new Date(holidays[i]));\n        if (sDate.getTime() <= currentHoliday.getTime() && eDate.getTime() > currentHoliday.getTime()) {\n          if (!this.parent.includeWeekend && this.parent.nonWorkingDayIndex.indexOf(currentHoliday.getDay()) === -1 || this.parent.includeWeekend) {\n            holidaysCount += 1;\n          }\n        }\n      }\n    }\n    return holidaysCount;\n  };\n  /**\n   * @returns {number[]} .\n   * @private\n   */\n  DateProcessor.prototype.getHolidayDates = function () {\n    var holidays = this.parent.holidays;\n    var holidayDates = [];\n    for (var i = 0; i < holidays.length; i++) {\n      var from = this.getDateFromFormat(holidays[i].from);\n      var to = this.getDateFromFormat(holidays[i].to);\n      if (isNullOrUndefined(from) && isNullOrUndefined(to)) {\n        continue;\n      } else if (isNullOrUndefined(from) || isNullOrUndefined(to)) {\n        var tempDate = from ? from : to;\n        tempDate.setHours(0, 0, 0, 0);\n        if (holidayDates.indexOf(tempDate.getTime()) === -1) {\n          holidayDates.push(tempDate.getTime());\n        }\n      } else {\n        while (from <= to) {\n          from.setHours(0, 0, 0, 0);\n          if (holidayDates.indexOf(from.getTime()) === -1) {\n            holidayDates.push(from.getTime());\n          }\n          from.setDate(from.getDate() + 1);\n        }\n      }\n    }\n    return holidayDates;\n  };\n  /**\n   * @param {Date} date .\n   * @param {boolean} checkWeekEnd .\n   * @returns {boolean} .\n   * @private\n   */\n  /*Check given date is on holidays*/\n  DateProcessor.prototype.isOnHolidayOrWeekEnd = function (date, checkWeekEnd) {\n    checkWeekEnd = !isNullOrUndefined(checkWeekEnd) ? checkWeekEnd : this.parent.includeWeekend;\n    if (!this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n      checkWeekEnd = true;\n    }\n    if (!checkWeekEnd && this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n      return true;\n    }\n    var holidays = this.parent.totalHolidayDates;\n    for (var count = 0; count < holidays.length; count++) {\n      var holidayFrom = this.getDateFromFormat(new Date(holidays[count]));\n      var holidayTo = new Date(holidayFrom.getTime());\n      holidayFrom.setHours(0, 0, 0, 0);\n      holidayTo.setHours(23, 59, 59, 59);\n      if (date.getTime() >= holidayFrom.getTime() && date.getTime() < holidayTo.getTime()) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * To calculate non working times in given date\n   *\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {boolean} isAutoSchedule .\n   * @returns {number} .\n   */\n  DateProcessor.prototype.getNonWorkingSecondsOnDate = function (startDate, endDate, isAutoSchedule) {\n    var sHour = this.getSecondsInDecimal(startDate);\n    var eHour = this.getSecondsInDecimal(endDate);\n    var startRangeIndex = -1;\n    var endRangeIndex = -1;\n    var totNonWrkSecs = 0;\n    var startOnHoliday = isAutoSchedule && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) ? this.isOnHolidayOrWeekEnd(startDate, null) : false;\n    var endOnHoliday = isAutoSchedule && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping) ? this.isOnHolidayOrWeekEnd(endDate, null) : false;\n    var startnonWorkingTimeRange;\n    var endnonWorkingTimeRange;\n    if (this.parent.weekWorkingTime.length > 0) {\n      startnonWorkingTimeRange = this.parent['getNonWorkingRange'](startDate);\n      for (var i = 0; i < startnonWorkingTimeRange.length; i++) {\n        var val = startnonWorkingTimeRange[i];\n        if (sHour >= val.from && sHour <= val.to) {\n          startRangeIndex = i;\n        }\n      }\n      endnonWorkingTimeRange = this.parent['getNonWorkingRange'](endDate);\n      for (var i = 0; i < endnonWorkingTimeRange.length; i++) {\n        var val = endnonWorkingTimeRange[i];\n        if (eHour >= val.from && eHour <= val.to) {\n          endRangeIndex = i;\n        }\n      }\n    } else {\n      startnonWorkingTimeRange = this.parent.nonWorkingTimeRanges;\n      endnonWorkingTimeRange = this.parent.nonWorkingTimeRanges;\n      for (var i = 0; i < startnonWorkingTimeRange.length; i++) {\n        var val = startnonWorkingTimeRange[i];\n        if (sHour >= val.from && sHour <= val.to) {\n          startRangeIndex = i;\n        }\n        if (eHour >= val.from && eHour <= val.to) {\n          endRangeIndex = i;\n        }\n      }\n    }\n    if (startDate.getDate() !== endDate.getDate() || startDate.getMonth() !== endDate.getMonth() || startDate.getFullYear() !== endDate.getFullYear()) {\n      if (!startOnHoliday) {\n        for (var i = startRangeIndex; i < startnonWorkingTimeRange.length; i++) {\n          if (!isNullOrUndefined(startnonWorkingTimeRange[i]) && !startnonWorkingTimeRange[i].isWorking) {\n            if (i === startRangeIndex) {\n              totNonWrkSecs += startnonWorkingTimeRange[i].to - sHour;\n            } else {\n              totNonWrkSecs += startnonWorkingTimeRange[i].interval;\n            }\n          }\n        }\n      } else {\n        totNonWrkSecs += 86400 - sHour;\n      }\n      if (!endOnHoliday) {\n        for (var i = 0; i <= endRangeIndex; i++) {\n          if (!endnonWorkingTimeRange[i].isWorking) {\n            if (i === endRangeIndex) {\n              totNonWrkSecs += eHour - endnonWorkingTimeRange[i].from;\n            } else {\n              totNonWrkSecs += endnonWorkingTimeRange[i].interval;\n            }\n          }\n        }\n      } else {\n        totNonWrkSecs += eHour;\n      }\n    } else {\n      if (startRangeIndex !== endRangeIndex) {\n        if (!endOnHoliday) {\n          for (var i = startRangeIndex; i <= endRangeIndex; i++) {\n            if (!isNullOrUndefined(startnonWorkingTimeRange[i]) && !startnonWorkingTimeRange[i].isWorking) {\n              if (i === startRangeIndex) {\n                totNonWrkSecs += startnonWorkingTimeRange[i].to - sHour;\n              } else if (i === endRangeIndex) {\n                totNonWrkSecs += eHour - startnonWorkingTimeRange[i].from;\n              } else {\n                totNonWrkSecs += startnonWorkingTimeRange[i].interval;\n              }\n            }\n          }\n        } else {\n          totNonWrkSecs += eHour - sHour;\n        }\n      } else {\n        if (!endOnHoliday) {\n          var range = startnonWorkingTimeRange[startRangeIndex];\n          if (!range.isWorking) {\n            totNonWrkSecs = eHour - sHour;\n          }\n        } else {\n          totNonWrkSecs += eHour - sHour;\n        }\n      }\n    }\n    return totNonWrkSecs;\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @returns {Date} .\n   */\n  DateProcessor.prototype.getPreviousWorkingDay = function (date) {\n    var dayIndex = date.getDay();\n    var previousIndex = dayIndex === 0 ? 6 : dayIndex - 1;\n    var dayEndTime = this.parent['getCurrentDayEndTime'](date);\n    if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1 || this.parent.nonWorkingDayIndex.indexOf(previousIndex) !== -1 && dayEndTime === 86400 && this.getSecondsInDecimal(date) === 0) {\n      date.setDate(date.getDate() - 1);\n      if (this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n        date = this.getPreviousWorkingDay(date);\n      }\n      return date;\n    } else {\n      return date;\n    }\n  };\n  /**\n   * To get non-working day indexes.\n   *\n   * @returns {void} .\n   * @private\n   */\n  DateProcessor.prototype.getNonWorkingDayIndex = function () {\n    var weekDay = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n    var weekDayLength = weekDay.length;\n    if (this.parent.workWeek.length === 0) {\n      this.parent.workWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n    }\n    var workWeek = this.parent.workWeek.slice();\n    var length = workWeek.length;\n    for (var i = 0; i < length; i++) {\n      workWeek[i] = workWeek[i].toLowerCase();\n    }\n    this.parent.nonWorkingDayIndex = [];\n    for (var i = 0; i < weekDayLength; i++) {\n      if (workWeek.indexOf(weekDay[i]) === -1) {\n        this.parent.nonWorkingDayIndex.push(i);\n      }\n    }\n  };\n  /**\n   *\n   * @param {number} seconds .\n   * @param {Date} date .\n   * @returns {void} .\n   * @private\n   */\n  DateProcessor.prototype.setTime = function (seconds, date) {\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    var hour = seconds / 3600;\n    hour = parseInt(hour, 10);\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    var min = (seconds - hour * 3600) / 60;\n    min = parseInt(min, 10);\n    var sec = seconds - hour * 3600 - min * 60;\n    date.setHours(hour, min, sec);\n  };\n  /**\n   * @param {Date} startDate .\n   * @param {Date} endDate .\n   * @param {boolean} isCheckTimeZone .\n   * @returns {number} .\n   */\n  DateProcessor.prototype.getTimeDifference = function (startDate, endDate, isCheckTimeZone) {\n    var sDate = new Date(startDate.getTime());\n    var eDate = new Date(endDate.getTime());\n    if (isCheckTimeZone) {\n      this.updateDateWithTimeZone(sDate, eDate);\n    }\n    return eDate.getTime() - sDate.getTime();\n  };\n  /**\n   * @param {Date} sDate .\n   * @param {Date} eDate .\n   * @returns {void} .\n   */\n  DateProcessor.prototype.updateDateWithTimeZone = function (sDate, eDate) {\n    var sTZ = sDate.getTimezoneOffset();\n    var eTZ = eDate.getTimezoneOffset();\n    var uTZ;\n    var uDate;\n    if (sTZ !== eTZ) {\n      var standardTZ = new Date(new Date().getFullYear(), 0, 1).getTimezoneOffset();\n      if (standardTZ !== sTZ) {\n        uDate = sDate;\n        uTZ = sTZ;\n      } else if (standardTZ !== eTZ) {\n        uDate = eDate;\n        uTZ = eTZ;\n      }\n      if (standardTZ < 0) {\n        var tzDiff = standardTZ - uTZ;\n        uDate.setTime(uDate.getTime() + tzDiff * 60 * 1000);\n      } else if (standardTZ >= 0) {\n        var tzDiff = uTZ - standardTZ;\n        uDate.setTime(uDate.getTime() - tzDiff * 60 * 1000);\n      }\n    }\n  };\n  /**\n   *\n   * @param {Date} date .\n   * @returns {number} .\n   */\n  DateProcessor.prototype.getSecondsInDecimal = function (date) {\n    return date.getHours() * 60 * 60 + date.getMinutes() * 60 + date.getSeconds() + date.getMilliseconds() / 1000;\n  };\n  /**\n   * @param {Date} date .\n   * @param {number} localOffset .\n   * @param {string} timezone .\n   * @returns {number} .\n   * @private\n   */\n  DateProcessor.prototype.offset = function (date, timezone) {\n    var localOffset = date.getTimezoneOffset();\n    try {\n      var convertedDate = new Date(date.toLocaleString('en-US', {\n        timeZone: timezone\n      }));\n      if (!isNaN(convertedDate.getTime())) {\n        return (date.getTime() - convertedDate.getTime()) / 60000 + localOffset;\n      }\n      return 0;\n    } catch (error) {\n      return 0;\n    }\n  };\n  DateProcessor.prototype.remove = function (date, timezone) {\n    if (!isNullOrUndefined(date)) {\n      date = this.reverse(date, timezone, date.getTimezoneOffset());\n    }\n    return date;\n  };\n  DateProcessor.prototype.reverse = function (date, fromOffset, toOffset) {\n    if (typeof fromOffset === 'string') {\n      fromOffset = this.offset(date, fromOffset);\n    }\n    if (typeof toOffset === 'string') {\n      toOffset = this.offset(date, toOffset);\n    }\n    var fromLocalOffset = date.getTimezoneOffset();\n    date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n    var toLocalOffset = date.getTimezoneOffset();\n    return new Date(date.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n  };\n  /**\n   * @param {Date} date .\n   * @param {string} timezone .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.convert = function (date, timezone) {\n    var fromOffset = date.getTimezoneOffset();\n    var toOffset = this.offset(date, timezone);\n    if (typeof fromOffset === 'string') {\n      fromOffset = this.offset(date, fromOffset);\n    }\n    if (typeof toOffset === 'string') {\n      toOffset = this.offset(date, toOffset);\n    }\n    var fromLocalOffset = date.getTimezoneOffset();\n    date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n    var toLocalOffset = date.getTimezoneOffset();\n    return new Date(date.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n  };\n  /**\n   * @param {string | Date} date .\n   * @param {boolean} toConvert .\n   * @returns {Date} .\n   * @private\n   */\n  DateProcessor.prototype.getDateFromFormat = function (date, toConvert) {\n    var updatedDate;\n    if (isNullOrUndefined(date)) {\n      return null;\n    } else if (date instanceof Date) {\n      updatedDate = new Date(date.getTime());\n    } else {\n      var dateObject = this.parent.globalize.parseDate(date, {\n        format: this.parent.getDateFormat(),\n        type: 'dateTime'\n      });\n      updatedDate = isNullOrUndefined(dateObject) && !isNaN(new Date(date).getTime()) ? new Date(date) : dateObject;\n    }\n    if (!isNullOrUndefined(this.parent.timezone) && toConvert) {\n      var convertedDate = this.convert(updatedDate, this.parent.timezone);\n      return convertedDate;\n    } else {\n      return updatedDate;\n    }\n  };\n  /**\n   * @param {Date} date1 .\n   * @param {Date} date2 .\n   * @returns {number} .\n   * @private\n   */\n  DateProcessor.prototype.compareDates = function (date1, date2) {\n    if (!isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n      return date1.getTime() > date2.getTime() ? 1 : date1.getTime() < date2.getTime() ? -1 : 0;\n    } else if (!isNullOrUndefined(date1) && isNullOrUndefined(date2)) {\n      return 1;\n    } else if (isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n      return -1;\n    } else {\n      return null;\n    }\n  };\n  /**\n   *\n   * @param {number} duration .\n   * @param {string} durationUnit .\n   * @returns {string} .\n   * @private\n   */\n  DateProcessor.prototype.getDurationString = function (duration, durationUnit) {\n    var value = '';\n    if (!isNullOrUndefined(duration)) {\n      value += parseFloat(duration.toFixed(2)) + ' ';\n      if (!isNullOrUndefined(durationUnit)) {\n        var plural = duration !== 1;\n        if (durationUnit === 'day') {\n          value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n        } else if (durationUnit === 'hour') {\n          value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n        } else if (durationUnit === 'minute') {\n          value += plural ? this.parent.localeObj.getConstant('minutes') : this.parent.localeObj.getConstant('minute');\n        }\n      }\n    }\n    return value;\n  };\n  /**\n   * Method to get work with value and unit.\n   *\n   * @param {number} work .\n   * @param {string} workUnit .\n   * @returns {string} .\n   * @private\n   */\n  DateProcessor.prototype.getWorkString = function (work, workUnit) {\n    var value = '';\n    if (!isNullOrUndefined(work)) {\n      value += parseFloat(work).toFixed(2) + ' ';\n      if (!isNullOrUndefined(workUnit)) {\n        var plural = work !== 1;\n        if (workUnit === 'day') {\n          value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n        } else if (workUnit === 'hour') {\n          value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n        } else if (workUnit === 'minute') {\n          value += plural ? this.parent.localeObj.getConstant('minutes') : this.parent.localeObj.getConstant('minute');\n        }\n      }\n    }\n    return value;\n  };\n  /**\n   *\n   * @param {object} editArgs .\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n  DateProcessor.prototype.calculateProjectDatesForValidatedTasks = function (editArgs) {\n    var _this = this;\n    var projectStartDate = typeof this.parent.projectStartDate === 'string' ? new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n    var projectEndDate = typeof this.parent.projectEndDate === 'string' ? new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n    var minStartDate = null;\n    var maxEndDate = null;\n    var flatData = getValue('dataOperation.dataArray', this.parent);\n    if ((!projectStartDate || !projectEndDate) && flatData && flatData.length === 0) {\n      minStartDate = this.getDateFromFormat(new Date());\n      maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n    } else if (flatData.length > 0) {\n      var sortedStartDate = flatData.slice().sort(function (a, b) {\n        return new Date(a[_this.parent.taskFields.startDate]).getTime() - new Date(b[_this.parent.taskFields.startDate]).getTime();\n      });\n      var sortedEndDate = flatData.slice().sort(function (a, b) {\n        return new Date(b[_this.parent.taskFields.endDate]).getTime() - new Date(a[_this.parent.taskFields.endDate]).getTime();\n      });\n      minStartDate = sortedStartDate[0][this.parent.taskFields.startDate];\n      maxEndDate = sortedEndDate[sortedEndDate.length - 1][this.parent.taskFields.endDate];\n    }\n    this.parent.cloneProjectStartDate = projectStartDate ? new Date(projectStartDate.getTime()) : typeof minStartDate === 'string' ? new Date(minStartDate) : minStartDate;\n    this.parent.cloneProjectEndDate = projectEndDate ? new Date(projectEndDate.getTime()) : typeof maxEndDate === 'string' ? new Date(maxEndDate) : maxEndDate;\n  };\n  /**\n   *\n   * @param {object} editArgs .\n   * @returns {void} .\n   * @private\n   */\n  DateProcessor.prototype.calculateProjectDates = function (editArgs) {\n    var _this = this;\n    if (this.parent.isLoad && this.parent.enablePersistence && this.parent.cloneProjectStartDate && this.parent.cloneProjectEndDate) {\n      this.parent.cloneProjectStartDate = this.getDateFromFormat(this.parent.cloneProjectStartDate);\n      this.parent.cloneProjectEndDate = this.getDateFromFormat(this.parent.cloneProjectEndDate);\n      return;\n    }\n    var sDate = typeof this.parent.projectStartDate === 'string' ? new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n    var eDate = typeof this.parent.projectEndDate === 'string' ? new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n    var projectStartDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectStartDate ? this.getDateFromFormat(this.parent.cloneProjectStartDate) : this.getDateFromFormat(sDate);\n    var projectEndDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectEndDate ? this.getDateFromFormat(this.parent.cloneProjectEndDate) : this.getDateFromFormat(eDate);\n    var minStartDate = null;\n    var maxEndDate = null;\n    var flatData = this.parent.flatData;\n    var currentViewData = this.parent.currentViewData;\n    var taskRange = [];\n    var addDateToList = function (date) {\n      if (!isNullOrUndefined(date)) {\n        taskRange.push(date);\n      }\n    };\n    var sortDates = function (dates) {\n      if (dates.length > 0) {\n        dates.sort(function (a, b) {\n          return a.getTime() - b.getTime();\n        });\n        minStartDate = new Date(dates[0].getTime());\n        maxEndDate = dates.length > 1 ? new Date(dates[dates.length - 1].getTime()) : null;\n      }\n    };\n    if ((!projectStartDate || !projectEndDate) && flatData.length > 0 || editArgs || this.parent.timelineModule.isZoomToFit) {\n      var viewData = void 0;\n      if (currentViewData.length > 0 && this.parent.timelineModule.isZoomToFit && this.parent.treeGrid.filterModule && this.parent.treeGrid.filterModule.filteredResult.length > 0) {\n        viewData = currentViewData;\n      } else {\n        viewData = flatData;\n      }\n      viewData.forEach(function (data) {\n        taskRange = [];\n        var task = data.ganttProperties;\n        var tempStartDate;\n        var tempEndDate;\n        if (isNullOrUndefined(task.startDate) && isNullOrUndefined(task.endDate)) {\n          tempStartDate = null;\n          tempEndDate = null;\n        } else {\n          tempStartDate = _this.getValidStartDate(task);\n          tempEndDate = _this.getValidEndDate(task);\n        }\n        addDateToList(minStartDate);\n        addDateToList(maxEndDate);\n        addDateToList(tempStartDate);\n        addDateToList(tempEndDate);\n        if (_this.parent.renderBaseline && !_this.parent.timelineModule.isZoomToFit) {\n          addDateToList(task.baselineStartDate);\n          addDateToList(task.baselineEndDate);\n        }\n        if (task.indicators && task.indicators.length > 0 && !_this.parent.timelineModule.isZoomToFit) {\n          task.indicators.forEach(function (item) {\n            addDateToList(_this.getDateFromFormat(item.date));\n          });\n        }\n        sortDates(taskRange);\n      });\n      taskRange = [];\n      addDateToList(minStartDate);\n      addDateToList(maxEndDate);\n      //update schedule dates as per holiday and strip line collection\n      if (this.parent.eventMarkers.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n        var eventMarkers = this.parent.eventMarkers;\n        // eslint-disable-next-line\n        eventMarkers.forEach(function (marker, index) {\n          addDateToList(_this.getDateFromFormat(marker.day));\n        });\n      }\n      if (this.parent.totalHolidayDates.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n        var holidays = this.parent.totalHolidayDates;\n        // eslint-disable-next-line\n        holidays.forEach(function (holiday, index) {\n          addDateToList(new Date(holiday));\n        });\n      }\n      sortDates(taskRange);\n      if (!minStartDate || !maxEndDate) {\n        if (!minStartDate) {\n          minStartDate = isNullOrUndefined(minStartDate) ? this.getDateFromFormat(new Date()) : minStartDate;\n          minStartDate.setHours(0, 0, 0, 0);\n        } else {\n          minStartDate = isNullOrUndefined(minStartDate) ? this.getDateFromFormat(new Date()) : minStartDate;\n        }\n        maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n        maxEndDate.setDate(maxEndDate.getDate() + 20);\n      }\n    } else if ((!projectStartDate || !projectEndDate) && flatData.length === 0) {\n      minStartDate = this.getDateFromFormat(new Date());\n      maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n    }\n    if (!editArgs) {\n      this.prevProjectStartDate = this.parent.cloneProjectStartDate;\n      this.parent.cloneProjectStartDate = minStartDate ? !this.parent.timelineModule.isZoomToFit ? !isNullOrUndefined(projectStartDate) ? new Date(projectStartDate.getTime()) : minStartDate : minStartDate : new Date(projectStartDate.getTime());\n      this.parent.cloneProjectEndDate = maxEndDate ? !this.parent.timelineModule.isZoomToFit ? !isNullOrUndefined(projectEndDate) ? new Date(projectEndDate.getTime()) : maxEndDate : maxEndDate : new Date(projectEndDate.getTime());\n    } else {\n      setValue('minStartDate', minStartDate, editArgs);\n      setValue('maxEndDate', maxEndDate, editArgs);\n    }\n    this.parent['isProjectDateUpdated'] = true;\n  };\n  /**\n   *\n   * @param {ITaskSegment} segments .\n   * @returns {number} .\n   * @private\n   */\n  DateProcessor.prototype.splitTasksDuration = function (segments) {\n    var duration = 0;\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      var sDate = segment.startDate;\n      var eDate = segment.endDate;\n      if (this.parent.timelineModule.bottomTier === 'Hour') {\n        duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60));\n      } else if (this.parent.timelineModule.bottomTier === 'Minutes') {\n        duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60));\n      } else {\n        duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24));\n      }\n    }\n    return duration;\n  };\n  return DateProcessor;\n}();\nexport { DateProcessor };","map":{"version":3,"names":["isNullOrUndefined","getValue","setValue","DateProcessor","parent","fromSegments","mondayTimeRangeLength","tuesdayTimeRangeLength","wednesdayTimeRangeLength","thursdayTimeRangeLength","fridayTimeRangeLength","saturdayTimeRangeLength","sundayTimeRangeLength","prototype","isValidateNonWorkDays","ganttProp","isAutoSchedule","includeWeekend","totalHolidayDates","length","checkStartDate","date","validateAsMilestone","isLoad","currentDay","Date","getTime","dayStartTime","dayEndTime","cloneStartDate","hour","getSecondsInDecimal","isMilestone","setTime","setDate","getDate","workingRange","workingTimeRanges","weekWorkingTime","index","value","to","from","tStartDate","autoCalculateDateScheduling","treeGrid","loadChildOnDemand","taskFields","hasChildMapping","holidayLength","endDate","autoEndDate","startTime","tempDate","getNextWorkingDay","count","holidayFrom","getDateFromFormat","holidayTo","setHours","checkEndDate","editModule","taskbarEditModule","taskBarEditRecord","ganttProperties","defaultStartTime","defaultEndTime","cloneEndDate","taskfields","startDate","tempCheckDate","getPreviousWorkingDay","tempHoliday","setMinutes","getMilliseconds","checkBaselineStartDate","cloneDate","i","checkBaselineEndDate","autoStartDate","baselineStartDate","calculateStartDate","ganttData","tempStartDate","duration","getStartDate","durationUnit","setRecordValue","dataOperation","updateMappingData","calculateEndDate","tempEndDate","compareDates","calculateDuration","segments","totalDuration","getEndDate","offsetDuration","tDuration","sumOfDuration","milestone","taskData","getDuration","col","columnByField","columnMapping","cellEditModule","isCellEdit","edit","read","dialog","dialogModule","textBox","querySelector","element","id","ej2_instances","toString","dataBind","getNonworkingTime","sDate","eDate","isCheckTimeZone","weekendCount","getWeekendCount","totalHours","getNumberOfSeconds","holidaysCount","getHolidaysCount","totWorkDays","nonWorkHours","getNonWorkingSecondsOnDate","totalNonWorkTime","nonWorkingSeconds","secondsPerDay","workDays","fromDuration","newStartDate","newEndDate","timeDiff","getHours","isOnHolidayOrWeekEnd","currentDaySeconds","durationValue","getTimeDifference","durationHours","totSeconds","undefined","getFormatedDate","parseFloat","getDurationAsSeconds","toLocaleLowerCase","tempStart","secondDuration","calculateSecondDuration","nonWork","workHours","setSeconds","getSeconds","fromValidation","tempEnd","dateValidationModule","fromEndDate","num","Number","isInteger","deciNumber","split","getProjectStartDate","cloneProjectStartDate","projectStartDate","flatData","minStartDate","getValidStartDate","isAuto","autoDuration","ganttTask","getTaskByUniqueID","uniqueID","allowUnscheduledTasks","parentItem","parentTask","getParentTask","getValidEndDate","getWorkingTime","day","currentRange","totalSeconds","nonWorkingHours","nonWorkingTimeRanges","startHour","currentRangeTo","endHour","sdSeconds","edSeconds","assignStartTime","toLowerCase","assignEndTime","push","isWorking","interval","mondayDefaultStartTime","tuesdayDefaultStartTime","wednesdayDefaultStartTime","thursdayDefaultStartTime","fridayDefaultStartTime","saturdayDefaultStartTime","sundayDefaultStartTime","mondayDefaultEndTime","tuesdayDefaultEndTime","wednesdayDefaultEndTime","thursdayDefaultEndTime","fridayDefaultEndTime","saturdayDefaultEndTime","sundayDefaultEndTime","calculateWeekWorkTime","seconds","j","getSecondsPerDay","_i","_a","dayWorkingTime","dayOfWeek","timeRange","dayWorkingTime_1","_b","weekWorkingTime_1","weekDay","seconds_1","_c","_d","dayDefaultStartTime","seconds_2","getDurationValue","isFromDialog","values","match","trim","unit","durationUnitEditText","indexOf","output","dayIndex","getDay","nonWorkingDayIndex","holidays","currentHoliday","getHolidayDates","holidayDates","checkWeekEnd","sHour","eHour","startRangeIndex","endRangeIndex","totNonWrkSecs","startOnHoliday","endOnHoliday","startnonWorkingTimeRange","endnonWorkingTimeRange","val","getMonth","getFullYear","range","previousIndex","getNonWorkingDayIndex","weekDayLength","workWeek","slice","parseInt","min","sec","updateDateWithTimeZone","sTZ","getTimezoneOffset","eTZ","uTZ","uDate","standardTZ","tzDiff","getMinutes","offset","timezone","localOffset","convertedDate","toLocaleString","timeZone","isNaN","error","remove","reverse","fromOffset","toOffset","fromLocalOffset","toLocalOffset","convert","toConvert","updatedDate","dateObject","globalize","parseDate","format","getDateFormat","type","date1","date2","getDurationString","toFixed","plural","localeObj","getConstant","getWorkString","work","workUnit","calculateProjectDatesForValidatedTasks","editArgs","_this","projectEndDate","maxEndDate","sortedStartDate","sort","a","b","sortedEndDate","cloneProjectEndDate","calculateProjectDates","enablePersistence","timelineModule","isZooming","currentViewData","taskRange","addDateToList","sortDates","dates","isZoomToFit","viewData","filterModule","filteredResult","forEach","data","task","renderBaseline","baselineEndDate","indicators","item","eventMarkers","marker","holiday","prevProjectStartDate","splitTasksDuration","segment","bottomTier","Math","ceil"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/base/date-processor.js"],"sourcesContent":["import { isNullOrUndefined, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n *  Date processor is used to handle date of task data.\n */\nvar DateProcessor = /** @class */ (function () {\n    function DateProcessor(parent) {\n        this.fromSegments = false;\n        this.mondayTimeRangeLength = 0;\n        this.tuesdayTimeRangeLength = 0;\n        this.wednesdayTimeRangeLength = 0;\n        this.thursdayTimeRangeLength = 0;\n        this.fridayTimeRangeLength = 0;\n        this.saturdayTimeRangeLength = 0;\n        this.sundayTimeRangeLength = 0;\n        this.parent = parent;\n    }\n    /**\n     * @param {ITaskData} ganttProp .\n     * @returns {boolean} .\n     */\n    DateProcessor.prototype.isValidateNonWorkDays = function (ganttProp) {\n        return (!isNullOrUndefined(ganttProp) && ganttProp.isAutoSchedule &&\n            (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0)) ||\n            (isNullOrUndefined(ganttProp) && (!this.parent.includeWeekend || this.parent.totalHolidayDates.length > 0));\n    };\n    /**\n     * Method to convert given date value as valid start date\n     *\n     * @param {Date} date .\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} validateAsMilestone .\n     * @param {boolean} isLoad .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkStartDate = function (date, ganttProp, validateAsMilestone, isLoad) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        var currentDay = new Date(date.getTime());\n        var dayStartTime = this.parent['getCurrentDayStartTime'](currentDay);\n        var dayEndTime = this.parent['getCurrentDayEndTime'](currentDay);\n        var cloneStartDate = new Date(date.getTime());\n        var hour = this.getSecondsInDecimal(cloneStartDate);\n        validateAsMilestone = isNullOrUndefined(validateAsMilestone) ? !isNullOrUndefined(ganttProp) ?\n            ganttProp.isMilestone : false : validateAsMilestone;\n        if (hour < dayStartTime && (!validateAsMilestone || isLoad)) {\n            this.setTime(dayStartTime, cloneStartDate);\n        }\n        else if (hour < dayStartTime && validateAsMilestone) {\n            this.setTime(dayStartTime, cloneStartDate);\n        }\n        else if ((hour === dayEndTime && (!ganttProp || !validateAsMilestone)) || hour > dayEndTime) {\n            cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n            dayStartTime = this.parent['getCurrentDayStartTime'](cloneStartDate);\n            this.setTime(dayStartTime, cloneStartDate);\n        }\n        else if (hour > dayStartTime && hour < dayEndTime) {\n            var workingRange = this.parent.workingTimeRanges;\n            if (this.parent.weekWorkingTime.length > 0) {\n                workingRange = this.parent['getWorkingRange'](cloneStartDate);\n            }\n            for (var index = 0; index < workingRange.length; index++) {\n                var value = workingRange[index];\n                if (hour >= value.to && (workingRange[index + 1] &&\n                    hour < workingRange[index + 1].from)) {\n                    // milestone can fall at end any interval time\n                    if ((hour === value.to && (!ganttProp || !validateAsMilestone)) || hour !== value.to) {\n                        this.setTime(workingRange[index + 1].from, cloneStartDate);\n                    }\n                    break;\n                }\n            }\n        }\n        var tStartDate;\n        if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n            this.parent.taskFields.hasChildMapping)) {\n            do {\n                tStartDate = new Date(cloneStartDate.getTime());\n                var holidayLength = this.parent.totalHolidayDates.length;\n                // check holidays and weekends\n                if (this.isValidateNonWorkDays(ganttProp)) {\n                    dayStartTime = this.parent['getCurrentDayStartTime'](tStartDate);\n                    if (ganttProp) {\n                        dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp.endDate ? ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate : tStartDate);\n                    }\n                    var startTime = (!validateAsMilestone || isLoad) ? dayStartTime : dayEndTime;\n                    if (!this.parent.includeWeekend) {\n                        var tempDate = new Date(cloneStartDate.getTime());\n                        cloneStartDate = this.getNextWorkingDay(cloneStartDate);\n                        startTime = this.parent['getCurrentDayStartTime'](cloneStartDate);\n                        if (tempDate.getTime() !== cloneStartDate.getTime() && !validateAsMilestone) {\n                            this.setTime(startTime, cloneStartDate);\n                        }\n                    }\n                    for (var count = 0; count < holidayLength; count++) {\n                        var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n                        var holidayTo = new Date(holidayFrom.getTime());\n                        holidayFrom.setHours(0, 0, 0, 0);\n                        holidayTo.setHours(23, 59, 59, 59);\n                        if (cloneStartDate.getTime() >= holidayFrom.getTime() && cloneStartDate.getTime() < holidayTo.getTime()) {\n                            cloneStartDate.setDate(cloneStartDate.getDate() + 1);\n                            startTime = this.parent['getCurrentDayStartTime'](cloneStartDate);\n                            this.setTime(startTime, cloneStartDate);\n                        }\n                    }\n                }\n            } while (tStartDate.getTime() !== cloneStartDate.getTime());\n            return new Date(cloneStartDate.getTime());\n        }\n        else {\n            return new Date(cloneStartDate.getTime());\n        }\n    };\n    /**\n     * To update given date value to valid end date\n     *\n     * @param {Date} date .\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} validateAsMilestone .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkEndDate = function (date, ganttProp, validateAsMilestone) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        var dayStartTime;\n        var dayEndTime;\n        if (this.parent.weekWorkingTime.length > 0) {\n            var currentDay = date;\n            if (!this.parent.includeWeekend && ganttProp && ganttProp.isAutoSchedule || (this.parent.editModule\n                && this.parent.editModule.taskbarEditModule && this.parent.editModule.taskbarEditModule.taskBarEditRecord\n                && !this.parent.editModule.taskbarEditModule.taskBarEditRecord.ganttProperties.isAutoSchedule)) {\n                currentDay = this.getNextWorkingDay(date);\n            }\n            dayStartTime = this.parent['getStartTime'](currentDay);\n            dayEndTime = this.parent['getEndTime'](currentDay);\n        }\n        else {\n            dayStartTime = this.parent.defaultStartTime;\n            dayEndTime = this.parent.defaultEndTime;\n        }\n        var cloneEndDate = new Date(date.getTime());\n        var hour = this.getSecondsInDecimal(cloneEndDate);\n        if (hour > dayEndTime) {\n            this.setTime(dayEndTime, cloneEndDate);\n        }\n        else if (hour <= dayStartTime && !validateAsMilestone) {\n            var taskfields = this.parent.taskFields;\n            if (this.parent.editModule && this.parent.editModule['editedRecord'] && (!this.parent.editModule['editedRecord'][taskfields.startDate] && this.parent.editModule['editedRecord'][taskfields.endDate])) {\n                cloneEndDate.setDate(cloneEndDate.getDate());\n            }\n            else {\n                cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n            }\n            dayEndTime = this.parent['getCurrentDayEndTime'](cloneEndDate);\n            this.setTime(dayEndTime, cloneEndDate);\n        }\n        else if (hour > dayStartTime && hour < dayEndTime) {\n            for (var index = 0; index < this.parent.workingTimeRanges.length; index++) {\n                var value = this.parent.workingTimeRanges[index];\n                if (hour > value.to && (this.parent.workingTimeRanges[index + 1] &&\n                    hour <= this.parent.workingTimeRanges[index + 1].from)) {\n                    this.setTime(this.parent.workingTimeRanges[index].to, cloneEndDate);\n                    break;\n                }\n            }\n        }\n        var tempCheckDate;\n        if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n            this.parent.taskFields.hasChildMapping)) {\n            do {\n                tempCheckDate = new Date(cloneEndDate.getTime());\n                var holidayLength = this.parent.totalHolidayDates.length;\n                if (this.isValidateNonWorkDays(ganttProp)) {\n                    if (!this.parent.includeWeekend) {\n                        var tempDate = new Date(cloneEndDate.getTime());\n                        cloneEndDate = this.getPreviousWorkingDay(cloneEndDate);\n                        dayEndTime = this.parent['getCurrentDayEndTime'](cloneEndDate);\n                        if (tempDate.getTime() !== cloneEndDate.getTime()) {\n                            this.setTime(dayEndTime, cloneEndDate);\n                        }\n                    }\n                    for (var count = 0; count < holidayLength; count++) {\n                        var holidayFrom = this.getDateFromFormat(new Date(this.parent.totalHolidayDates[count]));\n                        var holidayTo = new Date(holidayFrom.getTime());\n                        var tempHoliday = new Date(cloneEndDate.getTime());\n                        tempHoliday.setMinutes(cloneEndDate.getMilliseconds() - 2);\n                        holidayFrom.setHours(0, 0, 0, 0);\n                        holidayTo.setHours(23, 59, 59, 59);\n                        if (cloneEndDate.getTime() >= holidayFrom.getTime() && cloneEndDate.getTime() < holidayTo.getTime() ||\n                            tempHoliday.getTime() >= holidayFrom.getTime() && tempHoliday.getTime() < holidayTo.getTime()) {\n                            cloneEndDate.setDate(cloneEndDate.getDate() - 1);\n                            dayEndTime = this.parent['getCurrentDayEndTime'](cloneEndDate);\n                            if (!(cloneEndDate.getTime() === holidayFrom.getTime() && dayEndTime === 86400 &&\n                                this.getSecondsInDecimal(cloneEndDate) === 0)) {\n                                this.setTime(dayEndTime, cloneEndDate);\n                            }\n                        }\n                    }\n                }\n            } while (tempCheckDate.getTime() !== cloneEndDate.getTime());\n            return new Date(cloneEndDate.getTime());\n        }\n        else {\n            if (!isNullOrUndefined(cloneEndDate)) {\n                dayEndTime = this.parent['getCurrentDayEndTime'](date);\n                this.setTime(dayEndTime, cloneEndDate);\n            }\n            return new Date(cloneEndDate.getTime());\n        }\n    };\n    /**\n     * To validate the baseline start date\n     *\n     * @param {Date} date .\n     * @param {ITaskData} ganttProp .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkBaselineStartDate = function (date, ganttProp) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        else {\n            var dayStartTime = this.parent['getCurrentDayStartTime'](date);\n            var dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp ? ganttProp.endDate ? ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate : date : date);\n            var cloneDate = new Date(date.getTime());\n            var hour = this.getSecondsInDecimal(cloneDate);\n            if (hour < dayStartTime) {\n                this.setTime(dayStartTime, cloneDate);\n            }\n            else if (hour > dayEndTime) {\n                cloneDate.setDate(cloneDate.getDate() + 1);\n                if (this.parent.weekWorkingTime.length > 0) {\n                    dayStartTime = this.parent['getStartTime'](cloneDate);\n                }\n                else {\n                    dayStartTime = this.parent.defaultStartTime;\n                }\n                this.setTime(dayStartTime, cloneDate);\n            }\n            else if (hour > dayStartTime && hour < dayEndTime) {\n                for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n                    var value = this.parent.workingTimeRanges[i];\n                    if (hour > value.to && (this.parent.workingTimeRanges[i + 1] &&\n                        hour < this.parent.workingTimeRanges[i + 1].from)) {\n                        this.setTime(this.parent.workingTimeRanges[i + 1].from, cloneDate);\n                        break;\n                    }\n                }\n            }\n            return cloneDate;\n        }\n    };\n    /**\n     * To validate baseline end date\n     *\n     * @param {Date} date .\n     * @param {ITaskData} ganttProp .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.checkBaselineEndDate = function (date, ganttProp) {\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        else {\n            var dayEndTime = this.parent['getCurrentDayEndTime'](date);\n            var dayStartTime = this.parent['getCurrentDayStartTime'](ganttProp ? ganttProp.startDate ? ganttProp.isAutoSchedule ? ganttProp.startDate : ganttProp.autoStartDate : date : date);\n            var cloneDate = new Date(date.getTime());\n            var hour = this.getSecondsInDecimal(cloneDate);\n            if (hour > dayEndTime) {\n                this.setTime(dayEndTime, cloneDate);\n            }\n            else if (hour < dayStartTime && !isNullOrUndefined(ganttProp) && !ganttProp.isMilestone) {\n                cloneDate.setDate(cloneDate.getDate() - 1);\n                dayEndTime = this.parent['getCurrentDayEndTime'](cloneDate);\n                this.setTime(dayEndTime, cloneDate);\n            }\n            else if (hour > dayStartTime && hour < dayEndTime) {\n                for (var i = 0; i < this.parent.workingTimeRanges.length; i++) {\n                    var value = this.parent.workingTimeRanges[i];\n                    if (hour > value.to && (this.parent.workingTimeRanges[i + 1] && hour <= this.parent.workingTimeRanges[i + 1].from)) {\n                        this.setTime(this.parent.workingTimeRanges[i].to, cloneDate);\n                        break;\n                    }\n                }\n            }\n            if (ganttProp && ganttProp.baselineStartDate && cloneDate &&\n                ganttProp.baselineStartDate.getTime() > cloneDate.getTime()) {\n                cloneDate.setDate(cloneDate.getDate() + 1);\n            }\n            return cloneDate;\n        }\n    };\n    /**\n     * To calculate start date value from duration and end date\n     *\n     * @param {IGanttData} ganttData - Defines the gantt data.\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.calculateStartDate = function (ganttData) {\n        var ganttProp = ganttData.ganttProperties;\n        var tempStartDate = null;\n        if (!isNullOrUndefined(ganttProp.endDate) && !isNullOrUndefined(ganttProp.duration)) {\n            tempStartDate = this.getStartDate(ganttProp.endDate, ganttProp.duration, ganttProp.durationUnit, ganttProp);\n        }\n        this.parent.setRecordValue('startDate', tempStartDate, ganttProp, true);\n        if (this.parent.taskFields.startDate) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'startDate');\n        }\n    };\n    /**\n     *\n     * @param {IGanttData} ganttData - Defines the gantt data.\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.calculateEndDate = function (ganttData) {\n        var ganttProp = ganttData.ganttProperties;\n        var tempEndDate = null;\n        var dayStartTime;\n        var dayEndTime;\n        if (!isNullOrUndefined(ganttProp.startDate)) {\n            if (!isNullOrUndefined(ganttProp.endDate) && isNullOrUndefined(ganttProp.duration)) {\n                if (this.compareDates(ganttProp.startDate, ganttProp.endDate) === 1) {\n                    this.parent.setRecordValue('startDate', new Date(ganttProp.endDate.getTime()), ganttProp, true);\n                    dayStartTime = this.parent['getCurrentDayStartTime'](ganttProp.isAutoSchedule ? ganttProp.autoStartDate : ganttProp.startDate);\n                    dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp.isAutoSchedule ? ganttProp.autoEndDate : ganttProp.endDate);\n                    this.setTime(dayStartTime, ganttProp.startDate);\n                }\n                this.calculateDuration(ganttData);\n            }\n            if (!isNullOrUndefined(ganttProp.duration)) {\n                var duration = !isNullOrUndefined(ganttProp.segments) && ganttProp.segments.length > 1 ?\n                    this.totalDuration(ganttProp.segments) : ganttProp.duration;\n                tempEndDate = this.getEndDate(ganttProp.startDate, duration, ganttProp.durationUnit, ganttProp, false);\n            }\n            this.parent.setRecordValue('endDate', tempEndDate, ganttProp, true);\n        }\n        else {\n            tempEndDate = ganttData[this.parent.taskFields.endDate];\n            if (!isNullOrUndefined(tempEndDate)) {\n                dayEndTime = this.parent['getCurrentDayEndTime'](tempEndDate);\n                this.setTime(dayEndTime, tempEndDate);\n            }\n            this.parent.setRecordValue('endDate', tempEndDate, ganttProp, true);\n        }\n        if (this.parent.taskFields.endDate) {\n            this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n        }\n    };\n    DateProcessor.prototype.totalDuration = function (segments) {\n        var duration = 0;\n        for (var i = 0; i < segments.length; i++) {\n            duration += segments[i].duration + segments[i].offsetDuration;\n        }\n        return duration;\n    };\n    /**\n     * To calculate duration from start date and end date\n     *\n     * @param {IGanttData} ganttData - Defines the gantt data.\n     * @returns {void} .\n     */\n    DateProcessor.prototype.calculateDuration = function (ganttData) {\n        var ganttProperties = ganttData.ganttProperties;\n        var tDuration;\n        if (!isNullOrUndefined(ganttProperties.segments) && ganttProperties.segments.length > 0 &&\n            !isNullOrUndefined(this.parent.editModule.taskbarEditModule)) {\n            tDuration = this.parent.editModule.taskbarEditModule.sumOfDuration(ganttProperties.segments);\n        }\n        else {\n            if ((!isNullOrUndefined(this.parent.taskFields.milestone)) && (!isNullOrUndefined(ganttProperties.startDate))\n                && !isNullOrUndefined(ganttProperties.endDate) &&\n                (ganttProperties.startDate).getTime() === (ganttProperties.endDate).getTime()\n                && (ganttData.taskData[this.parent.taskFields.milestone] === false)) {\n                tDuration = 1;\n            }\n            else {\n                tDuration = this.getDuration(ganttProperties.startDate, ganttProperties.endDate, ganttProperties.durationUnit, ganttProperties.isAutoSchedule, ganttProperties.isMilestone);\n            }\n        }\n        this.parent.setRecordValue('duration', tDuration, ganttProperties, true);\n        var col = this.parent.columnByField[this.parent.columnMapping.duration];\n        if (!isNullOrUndefined(this.parent.editModule) && !isNullOrUndefined(this.parent.editModule.cellEditModule) &&\n            !this.parent.editModule.cellEditModule.isCellEdit && !isNullOrUndefined(col)) {\n            if (!isNullOrUndefined(col.edit) && !isNullOrUndefined(col.edit.read)) {\n                var dialog = this.parent.editModule.dialogModule.dialog;\n                if (!isNullOrUndefined(dialog)) {\n                    var textBox = dialog.querySelector('#' + this.parent.element.id + 'Duration')\n                        .ej2_instances[0];\n                    if (!isNullOrUndefined(textBox) && textBox.value !== tDuration.toString()) {\n                        textBox.value = tDuration.toString();\n                        textBox.dataBind();\n                    }\n                }\n            }\n            if (this.parent.taskFields.duration) {\n                this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n                if (this.parent.taskFields.durationUnit) {\n                    this.parent.dataOperation.updateMappingData(ganttData, 'durationUnit');\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {Date} sDate Method to get total nonworking time between two date values\n     * @param {Date} eDate .\n     * @param {boolean} isAutoSchedule .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getNonworkingTime = function (sDate, eDate, isAutoSchedule, isCheckTimeZone) {\n        isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n        var weekendCount = (!this.parent.includeWeekend && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad &&\n            this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) && isAutoSchedule ?\n            this.getWeekendCount(sDate, eDate) : 0;\n        var totalHours = this.getNumberOfSeconds(sDate, eDate, isCheckTimeZone);\n        var holidaysCount = (isAutoSchedule && this.parent.autoCalculateDateScheduling &&\n            !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) ? this.getHolidaysCount(sDate, eDate) : 0;\n        var totWorkDays = (totalHours - (weekendCount * 86400) - (holidaysCount * 86400)) / 86400; // working days between two dates\n        var nonWorkHours = this.getNonWorkingSecondsOnDate(sDate, eDate, isAutoSchedule);\n        var totalNonWorkTime = (this.parent.weekWorkingTime.length > 0 ?\n            this.nonWorkingSeconds(sDate, eDate, isAutoSchedule, totWorkDays) : (totWorkDays * (86400 - this.parent.secondsPerDay))) +\n            (weekendCount * 86400) + (holidaysCount * 86400) + nonWorkHours;\n        return totalNonWorkTime;\n    };\n    DateProcessor.prototype.nonWorkingSeconds = function (sDate, eDate, isAutoSchedule, workDays, fromDuration) {\n        var newStartDate = sDate.getTime() > eDate.getTime() ? new Date(eDate.getTime()) : new Date(sDate.getTime());\n        var newEndDate = sDate.getTime() > eDate.getTime() ? new Date(sDate.getTime()) : new Date(eDate.getTime());\n        var timeDiff = 0;\n        var count = 0;\n        if (fromDuration) {\n            var dayStartTime = this.parent['getCurrentDayStartTime'](newStartDate);\n            var dayEndTime = this.parent['getCurrentDayEndTime'](newStartDate);\n            if (!(newStartDate.getHours() < dayEndTime / 3600 && newStartDate.getHours() >= dayStartTime / 3600)) {\n                newStartDate.setDate(newStartDate.getDate() + 1);\n            }\n        }\n        else {\n            newStartDate.setDate(newStartDate.getDate() + 1);\n            newStartDate.setHours(0, 0, 0, 0);\n            newEndDate.setHours(0, 0, 0, 0);\n        }\n        if (workDays > 0 || isNullOrUndefined(workDays)) {\n            while ((fromDuration && newStartDate.getTime() <= newEndDate.getTime())\n                || (!fromDuration && newStartDate.getTime() < newEndDate.getTime())) {\n                if (isAutoSchedule) {\n                    if (this.isOnHolidayOrWeekEnd(newStartDate, true)) {\n                        do {\n                            newStartDate.setDate(newStartDate.getDate() + 1);\n                        } while (this.isOnHolidayOrWeekEnd(newStartDate, true));\n                    }\n                    if (!this.parent.includeWeekend) {\n                        this.getNextWorkingDay(newStartDate);\n                    }\n                }\n                if (newStartDate.getTime() <= newEndDate.getTime()) {\n                    count++;\n                    var currentDaySeconds = this.parent['getSecondsPerDay'](newStartDate);\n                    if (fromDuration) {\n                        timeDiff += currentDaySeconds;\n                    }\n                    else {\n                        timeDiff += 86400 - currentDaySeconds;\n                    }\n                    newStartDate.setDate(newStartDate.getDate() + 1);\n                    if (isAutoSchedule) {\n                        if (this.isOnHolidayOrWeekEnd(newStartDate, true)) {\n                            do {\n                                newStartDate.setDate(newStartDate.getDate() + 1);\n                            } while (this.isOnHolidayOrWeekEnd(newStartDate, true));\n                        }\n                        if (!this.parent.includeWeekend) {\n                            this.getNextWorkingDay(newStartDate);\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            return 0;\n        }\n        if (fromDuration) {\n            if (timeDiff > 0) {\n                timeDiff = timeDiff / count;\n            }\n            else {\n                timeDiff = this.parent.secondsPerDay;\n            }\n        }\n        return timeDiff;\n    };\n    /**\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {string} durationUnit .\n     * @param {boolean} isAutoSchedule .\n     * @param {boolean} isMilestone .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.getDuration = function (startDate, endDate, durationUnit, isAutoSchedule, isMilestone, isCheckTimeZone) {\n        if (isNullOrUndefined(startDate) || isNullOrUndefined(endDate)) {\n            return null;\n        }\n        isCheckTimeZone = isNullOrUndefined(isCheckTimeZone) ? true : isCheckTimeZone;\n        var durationValue = 0;\n        var timeDiff = this.getTimeDifference(startDate, endDate, isCheckTimeZone) / 1000;\n        var nonWorkHours = this.getNonworkingTime(startDate, endDate, isAutoSchedule, isCheckTimeZone);\n        var durationHours = timeDiff - nonWorkHours;\n        var totSeconds;\n        if (this.parent.weekWorkingTime.length > 0) {\n            totSeconds = this.nonWorkingSeconds(startDate, endDate, isAutoSchedule, undefined, true);\n        }\n        else {\n            totSeconds = this.parent.secondsPerDay;\n        }\n        if (isMilestone && this.parent.getFormatedDate(startDate) === this.parent.getFormatedDate(endDate)) {\n            durationValue = 0;\n        }\n        else {\n            if (!durationUnit || durationUnit === 'day') {\n                durationValue = durationHours / totSeconds;\n            }\n            else if (durationUnit === 'minute') {\n                durationValue = durationHours / 60;\n            }\n            else {\n                durationValue = durationHours / 3600;\n            }\n        }\n        return parseFloat(durationValue.toString());\n    };\n    /**\n     *\n     * @param {number} duration .\n     * @param {string} durationUnit .\n     * @param {Date} date .\n     *  @returns {number} .\n     */\n    DateProcessor.prototype.getDurationAsSeconds = function (duration, durationUnit, date) {\n        var value = 0;\n        var totSeconds;\n        if (this.parent.weekWorkingTime.length > 0) {\n            totSeconds = this.parent['getSecondsPerDay'](date);\n        }\n        else {\n            totSeconds = this.parent.secondsPerDay;\n        }\n        if (!durationUnit || durationUnit.toLocaleLowerCase() === 'day') {\n            value = totSeconds * duration;\n        }\n        else if (durationUnit.toLocaleLowerCase() === 'hour') {\n            value = duration * 3600;\n        }\n        else {\n            value = duration * 60;\n        }\n        return value;\n    };\n    /**\n     * To get date from start date and duration\n     *\n     * @param {Date} startDate .\n     * @param {number} duration .\n     * @param {string} durationUnit .\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} validateAsMilestone .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getEndDate = function (startDate, duration, durationUnit, ganttProp, validateAsMilestone) {\n        var tempStart = new Date(startDate.getTime());\n        var endDate = new Date(startDate.getTime());\n        var sDate = new Date(startDate.getTime());\n        var secondDuration;\n        if (this.parent.weekWorkingTime.length > 0 && (!durationUnit || durationUnit.toLocaleLowerCase() === 'day')) {\n            secondDuration = this.calculateSecondDuration(duration, sDate, secondDuration, startDate, true);\n        }\n        else {\n            secondDuration = this.getDurationAsSeconds(duration, durationUnit, startDate);\n        }\n        var nonWork = 0;\n        var workHours = 0;\n        while (secondDuration > 0) {\n            endDate.setSeconds(endDate.getSeconds() + secondDuration);\n            nonWork = this.getNonworkingTime(tempStart, endDate, ganttProp.isAutoSchedule, true);\n            workHours = secondDuration - nonWork;\n            secondDuration = secondDuration - workHours;\n            if (secondDuration > 0) {\n                endDate = this.checkStartDate(endDate, ganttProp, validateAsMilestone);\n            }\n            tempStart = new Date(endDate.getTime());\n        }\n        return endDate;\n    };\n    /**\n     * Calculate start date based on end date and duration.\n     *\n     * @param {Date} endDate - To calculate start date value from end date and duration.\n     * @param {number} duration - The duration value.\n     * @param {string} durationUnit - The unit of duration.\n     * @param {ITaskData} ganttProp - The Gantt task properties.\n     * @param {boolean} fromValidation - A flag indicating if the calculation is from validation.\n     * @returns {Date} The calculated start date.\n     * @private\n     */\n    DateProcessor.prototype.getStartDate = function (endDate, duration, durationUnit, ganttProp, fromValidation) {\n        var tempEnd = new Date(endDate.getTime());\n        var startDate = new Date(endDate.getTime());\n        var secondDuration;\n        var eDate = new Date(tempEnd.getTime());\n        if (this.parent.weekWorkingTime.length > 0) {\n            secondDuration = this.calculateSecondDuration(duration, eDate, secondDuration, tempEnd, false);\n        }\n        else {\n            secondDuration = this.getDurationAsSeconds(duration, durationUnit, tempEnd);\n        }\n        var nonWork = 0;\n        var workHours = 0;\n        while (secondDuration > 0) {\n            startDate.setSeconds(startDate.getSeconds() - secondDuration);\n            nonWork = this.getNonworkingTime(startDate, tempEnd, ganttProp.isAutoSchedule, true);\n            workHours = secondDuration - nonWork;\n            secondDuration = secondDuration - workHours;\n            if (secondDuration > 0) {\n                tempEnd = this.checkEndDate(startDate, ganttProp);\n            }\n            tempEnd = new Date(startDate.getTime());\n        }\n        /* To render the milestone in proper date while loading */\n        if (fromValidation && ganttProp.isMilestone) {\n            startDate.setDate(startDate.getDate() - 1);\n            var dayEndTime = this.parent['getCurrentDayEndTime'](ganttProp.endDate ? ganttProp.isAutoSchedule ? ganttProp.endDate : ganttProp.autoEndDate : startDate);\n            this.parent.dateValidationModule.setTime(dayEndTime, startDate);\n            startDate = this.parent.dateValidationModule.checkStartDate(startDate, ganttProp, true);\n        }\n        return startDate;\n    };\n    DateProcessor.prototype.calculateSecondDuration = function (duration, sDate, secondDuration, startDate, fromEndDate) {\n        if (duration < 1) {\n            secondDuration = this.parent['getSecondsPerDay'](sDate) * duration;\n        }\n        else {\n            secondDuration = 0;\n            var durationValue = duration;\n            var dayStartTime = this.parent['getCurrentDayStartTime'](sDate);\n            var dayEndTime = this.parent['getCurrentDayEndTime'](sDate);\n            if (!(sDate.getHours() < dayEndTime / 3600 && sDate.getHours() > dayStartTime / 3600) && this.fromSegments) {\n                if (fromEndDate) {\n                    sDate.setDate(sDate.getDate() + 1);\n                }\n                else {\n                    sDate.setDate(sDate.getDate() - 1);\n                }\n            }\n            while (durationValue > 0) {\n                if (this.isOnHolidayOrWeekEnd(sDate, true)) {\n                    do {\n                        if (fromEndDate) {\n                            sDate.setDate(sDate.getDate() + 1);\n                        }\n                        else {\n                            sDate.setDate(sDate.getDate() - 1);\n                        }\n                    } while (this.isOnHolidayOrWeekEnd(sDate, true));\n                }\n                if (!this.parent.includeWeekend) {\n                    sDate = fromEndDate ? this.getNextWorkingDay(sDate) : this.getPreviousWorkingDay(sDate);\n                }\n                var totSeconds = this.parent['getSecondsPerDay'](sDate);\n                var num = 0;\n                if (this.getSecondsInDecimal(startDate) !== this.parent['getStartTime'](startDate) && !Number.isInteger(durationValue)) {\n                    var deciNumber = duration.toString().split('.');\n                    num = parseFloat('.' + deciNumber[1]);\n                    totSeconds = totSeconds * num;\n                    durationValue = durationValue - num;\n                }\n                if (durationValue < 1) {\n                    totSeconds = totSeconds * durationValue;\n                }\n                secondDuration = secondDuration + totSeconds;\n                if (fromEndDate) {\n                    sDate.setDate(sDate.getDate() + 1);\n                }\n                else {\n                    sDate.setDate(sDate.getDate() - 1);\n                }\n                if (!num) {\n                    durationValue--;\n                }\n            }\n        }\n        return secondDuration;\n    };\n    /**\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isLoad .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getProjectStartDate = function (ganttProp, isLoad) {\n        if (!isNullOrUndefined(this.parent.cloneProjectStartDate)) {\n            if (typeof this.parent.cloneProjectStartDate === 'string') {\n                this.parent.cloneProjectStartDate = this.getDateFromFormat(this.parent.cloneProjectStartDate);\n            }\n            var cloneStartDate = this.checkStartDate(this.parent.cloneProjectStartDate);\n            this.parent.cloneProjectStartDate = cloneStartDate;\n            return new Date(cloneStartDate.getTime());\n        }\n        else if (!isNullOrUndefined(this.parent.projectStartDate)) {\n            var cloneStartDate = this.getDateFromFormat(this.parent.projectStartDate);\n            this.parent.cloneProjectStartDate = this.checkStartDate(cloneStartDate);\n        }\n        else if (!isNullOrUndefined(isLoad)) {\n            var flatData = this.parent.flatData;\n            var minStartDate = void 0;\n            if (flatData.length > 0) {\n                minStartDate = flatData[0].ganttProperties.startDate;\n            }\n            else {\n                minStartDate = new Date();\n                minStartDate.setHours(0, 0, 0, 0);\n            }\n            for (var index = 1; index < flatData.length; index++) {\n                var startDate = flatData[index].ganttProperties.startDate;\n                if (!isNullOrUndefined(startDate) && this.compareDates(startDate, minStartDate) === -1) {\n                    minStartDate = startDate;\n                }\n            }\n            this.parent.cloneProjectStartDate = this.checkStartDate(minStartDate, ganttProp);\n        }\n        else {\n            return null;\n        }\n        return new Date(this.parent.cloneProjectStartDate.getTime());\n    };\n    /**\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isAuto .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getValidStartDate = function (ganttProp, isAuto) {\n        var sDate = null;\n        var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var duration = !ganttProp.isAutoSchedule && ganttProp.autoDuration ? ganttProp.autoDuration : ganttProp.duration;\n        if (isNullOrUndefined(startDate)) {\n            if (!isNullOrUndefined(endDate)) {\n                sDate = new Date(endDate.getTime());\n                var dayStartTime = this.parent['getCurrentDayStartTime'](sDate);\n                this.setTime(dayStartTime, sDate);\n            }\n            else if (!isNullOrUndefined(duration)) {\n                var ganttTask = this.parent.getTaskByUniqueID(ganttProp.uniqueID);\n                if (this.parent.allowUnscheduledTasks && ganttTask &&\n                    ganttTask.parentItem && isNullOrUndefined(startDate) && isNullOrUndefined(endDate)) {\n                    var parentTask = this.parent.getParentTask(ganttTask.parentItem);\n                    while (parentTask && !parentTask.ganttProperties.startDate) {\n                        parentTask = this.parent.getParentTask(parentTask.parentItem);\n                    }\n                    sDate = (!parentTask || !parentTask.ganttProperties.startDate) ? this.parent.cloneProjectStartDate\n                        : parentTask.ganttProperties.startDate;\n                }\n                else {\n                    sDate = this.getProjectStartDate(ganttProp);\n                }\n            }\n        }\n        else {\n            sDate = new Date(startDate.getTime());\n        }\n        return sDate;\n    };\n    /**\n     *\n     * @param {ITaskData} ganttProp .\n     * @param {boolean} isAuto .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getValidEndDate = function (ganttProp, isAuto) {\n        var eDate = null;\n        var startDate = isAuto ? ganttProp.autoStartDate : ganttProp.startDate;\n        var endDate = isAuto ? ganttProp.autoEndDate : ganttProp.endDate;\n        var duration = isAuto ? ganttProp.autoDuration : ganttProp.duration;\n        if (isNullOrUndefined(endDate)) {\n            if (!isNullOrUndefined(startDate)) {\n                if (ganttProp.isMilestone) {\n                    eDate = this.checkStartDate(startDate);\n                }\n                else {\n                    eDate = new Date(startDate.getTime());\n                    var dayEndTime = this.parent['getCurrentDayEndTime'](endDate ? endDate : eDate);\n                    this.setTime(dayEndTime, eDate);\n                }\n            }\n            else if (!isNullOrUndefined(duration)) {\n                var sDate = this.getValidStartDate(ganttProp);\n                if (sDate) {\n                    eDate = this.getEndDate(sDate, duration, ganttProp.durationUnit, ganttProp, false);\n                }\n            }\n        }\n        else {\n            eDate = new Date(endDate.getTime());\n        }\n        return eDate;\n    };\n    DateProcessor.prototype.getWorkingTime = function (day, currentRange, startDate, totalSeconds, count, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges) {\n        if (!isNullOrUndefined(currentRange.from) && !isNullOrUndefined(currentRange.to)) {\n            startDate.setHours(0, 0, 0, 0);\n            var tempDate = new Date(startDate.getTime());\n            startDate.setTime(startDate.getTime() + (currentRange.from * 3600000));\n            var startHour = new Date(startDate.getTime());\n            if (currentRange.to === 24) {\n                var currentRangeTo = 24 * 60 * 60 * 1000;\n                tempDate.setTime(tempDate.getTime() + (currentRangeTo));\n            }\n            else {\n                tempDate.setTime(tempDate.getTime() + (currentRange.to * 3600000));\n            }\n            var endHour = new Date(tempDate.getTime());\n            var timeDiff = endHour.getTime() - startHour.getTime();\n            var sdSeconds = this.getSecondsInDecimal(startHour);\n            var edSeconds = this.getSecondsInDecimal(endHour);\n            if (edSeconds === 0) {\n                edSeconds = 86400;\n            }\n            totalSeconds += timeDiff / 1000;\n            if (count === 0) {\n                this.parent.defaultStartTime = sdSeconds;\n                if (this.parent.weekWorkingTime.length > 0) {\n                    this.assignStartTime(day, sdSeconds);\n                }\n            }\n            if (count === this[day.toLowerCase() + 'TimeRangeLength'] - 1 || day === '') {\n                this.parent.defaultEndTime = edSeconds;\n                if (this.parent.weekWorkingTime.length > 0) {\n                    this.assignEndTime(day, edSeconds);\n                }\n            }\n            if (count > 0) {\n                if (day === '') {\n                    nonWorkingHours.push(nonWorkingHours[nonWorkingHours.length - 1] +\n                        sdSeconds - workingTimeRanges[count - 1].to);\n                    if (workingTimeRanges[count - 1].to < sdSeconds) {\n                        nonWorkingTimeRanges.push({\n                            from: workingTimeRanges[count - 1].to, to: sdSeconds, isWorking: false,\n                            interval: (sdSeconds - workingTimeRanges[count - 1].to)\n                        });\n                    }\n                }\n                else {\n                    this.parent[day.toLowerCase() + 'NonWorkingHours'].push(this.parent[day.toLowerCase() + 'NonWorkingHours'][this.parent[day.toLowerCase() + 'NonWorkingHours'].length - 1] +\n                        sdSeconds - this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'][count - 1].to);\n                    if (this.parent[day.toLowerCase() + 'WorkingTimeRanges'][count - 1].to < sdSeconds) {\n                        this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({\n                            from: this.parent[day.toLowerCase() + 'WorkingTimeRanges'][count - 1].to, to: sdSeconds, isWorking: false,\n                            interval: (sdSeconds - this.parent[day.toLowerCase() + 'WorkingTimeRanges'][count - 1].to)\n                        });\n                    }\n                }\n            }\n            else {\n                if (day === '') {\n                    nonWorkingHours.push(0);\n                    nonWorkingTimeRanges.push({ from: 0, to: sdSeconds, isWorking: false, interval: sdSeconds });\n                }\n                else {\n                    this.parent[day.toLowerCase() + 'NonWorkingHours'].push(0);\n                    this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({ from: 0, to: sdSeconds, isWorking: false, interval: sdSeconds });\n                }\n            }\n            if (day === '') {\n                workingTimeRanges.push({ from: sdSeconds, to: edSeconds });\n                nonWorkingTimeRanges.push({\n                    from: sdSeconds, to: edSeconds, isWorking: true, interval: (edSeconds - sdSeconds)\n                });\n            }\n            else {\n                this.parent[day.toLowerCase() + 'WorkingTimeRanges'].push({ from: sdSeconds, to: edSeconds });\n                this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({\n                    from: sdSeconds, to: edSeconds, isWorking: true, interval: (edSeconds - sdSeconds)\n                });\n            }\n        }\n        return totalSeconds;\n    };\n    DateProcessor.prototype.assignStartTime = function (day, sdSeconds) {\n        switch (day) {\n            case 'Monday':\n                this.parent.mondayDefaultStartTime = sdSeconds;\n                break;\n            case 'Tuesday':\n                this.parent.tuesdayDefaultStartTime = sdSeconds;\n                break;\n            case 'Wednesday':\n                this.parent.wednesdayDefaultStartTime = sdSeconds;\n                break;\n            case 'Thursday':\n                this.parent.thursdayDefaultStartTime = sdSeconds;\n                break;\n            case 'Friday':\n                this.parent.fridayDefaultStartTime = sdSeconds;\n                break;\n            case 'Saturday':\n                this.parent.saturdayDefaultStartTime = sdSeconds;\n                break;\n            case 'Sunday':\n                this.parent.sundayDefaultStartTime = sdSeconds;\n                break;\n            default:\n                break;\n        }\n    };\n    DateProcessor.prototype.assignEndTime = function (day, edSeconds) {\n        switch (day) {\n            case 'Monday':\n                this.parent.mondayDefaultEndTime = edSeconds;\n                break;\n            case 'Tuesday':\n                this.parent.tuesdayDefaultEndTime = edSeconds;\n                break;\n            case 'Wednesday':\n                this.parent.wednesdayDefaultEndTime = edSeconds;\n                break;\n            case 'Thursday':\n                this.parent.thursdayDefaultEndTime = edSeconds;\n                break;\n            case 'Friday':\n                this.parent.fridayDefaultEndTime = edSeconds;\n                break;\n            case 'Saturday':\n                this.parent.saturdayDefaultEndTime = edSeconds;\n                break;\n            case 'Sunday':\n                this.parent.sundayDefaultEndTime = edSeconds;\n                break;\n            default:\n                break;\n        }\n    };\n    DateProcessor.prototype.calculateWeekWorkTime = function (day, currentDay, startDate, totalSeconds, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges) {\n        var seconds = 0;\n        for (var j = 0; j < currentDay.length; j++) {\n            var currentRange = currentDay[j];\n            seconds = seconds + this.getWorkingTime(day, currentRange, startDate, totalSeconds, j, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n        }\n        if (this.parent[day.toLowerCase() + 'DefaultStartTime'] / 3600 !== 24) {\n            this.parent[day.toLowerCase() + 'NonWorkingTimeRanges'].push({\n                from: this.parent[day.toLowerCase() + 'DefaultEndTime'], to: 86400,\n                isWorking: false, interval: 86400 - this.parent[day.toLowerCase() + 'DefaultEndTime']\n            });\n        }\n        return seconds;\n    };\n    /**\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.getSecondsPerDay = function () {\n        var totalSeconds = 0;\n        var startDate = new Date('10/11/2018');\n        this.parent.nonWorkingHours = [];\n        var nonWorkingHours = this.parent.nonWorkingHours;\n        this.parent.workingTimeRanges = [];\n        this.parent.workingTimeRanges = [];\n        var workingTimeRanges = this.parent.workingTimeRanges;\n        this.parent.nonWorkingTimeRanges = [];\n        var nonWorkingTimeRanges = this.parent.nonWorkingTimeRanges;\n        for (var _i = 0, _a = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; _i < _a.length; _i++) {\n            var day = _a[_i];\n            this[day.toLowerCase() + \"TimeRangeLength\"] = this.parent.dayWorkingTime.length;\n        }\n        if (this.parent.weekWorkingTime.length > 0) {\n            for (var i = 0; i < this.parent.weekWorkingTime.length; i++) {\n                this[this.parent.weekWorkingTime[i].dayOfWeek.toLowerCase() + 'TimeRangeLength']\n                    = this.parent.weekWorkingTime[i].timeRange.length;\n            }\n            var weekWorkingTime = this.parent.weekWorkingTime;\n            var dayWorkingTime_1 = this.parent.dayWorkingTime;\n            for (var _b = 0, weekWorkingTime_1 = weekWorkingTime; _b < weekWorkingTime_1.length; _b++) {\n                var weekDay = weekWorkingTime_1[_b];\n                if (weekDay.timeRange && weekDay.timeRange.length > 0) {\n                    var seconds_1 = this.calculateWeekWorkTime(weekDay.dayOfWeek, weekDay.timeRange, startDate, totalSeconds, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n                    this.parent[weekDay.dayOfWeek.toLowerCase() + \"Seconds\"] = seconds_1;\n                }\n            }\n            for (var _c = 0, _d = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; _c < _d.length; _c++) {\n                var day = _d[_c];\n                var dayDefaultStartTime = this.parent[day.toLowerCase() + \"DefaultStartTime\"];\n                if (isNullOrUndefined(dayDefaultStartTime)) {\n                    var seconds_2 = this.calculateWeekWorkTime(day, dayWorkingTime_1, startDate, totalSeconds, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n                    this.parent[day.toLowerCase() + \"Seconds\"] = seconds_2;\n                }\n            }\n        }\n        var dayWorkingTime = this.parent.dayWorkingTime;\n        var length = dayWorkingTime.length;\n        var seconds = 0;\n        for (var count = 0; count < length; count++) {\n            var currentRange = dayWorkingTime[count];\n            seconds = seconds + this.getWorkingTime('', currentRange, startDate, totalSeconds, count, nonWorkingHours, workingTimeRanges, nonWorkingTimeRanges);\n        }\n        if (this.parent.defaultEndTime / 3600 !== 24) {\n            nonWorkingTimeRanges.push({\n                from: this.parent.defaultEndTime, to: 86400,\n                isWorking: false, interval: 86400 - this.parent.defaultEndTime\n            });\n        }\n        totalSeconds = seconds;\n        return totalSeconds;\n    };\n    /**\n     *\n     * @param {string} value .\n     * @param {boolean} isFromDialog .\n     * @returns {object} .\n     * @private\n     */\n    // eslint-disable-next-line\n    DateProcessor.prototype.getDurationValue = function (value, isFromDialog) {\n        var durationUnit = null;\n        var duration = null;\n        if (typeof value === 'string') {\n            var values = value.match(/(\\d*\\.*\\d+|.+$)/g);\n            if (values && values.length <= 2) {\n                duration = parseFloat(values[0].toString().trim());\n                var unit = values[1] ? values[1].toString().trim().toLowerCase() : null;\n                if (getValue('minute', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n                    durationUnit = 'minute';\n                }\n                else if (getValue('hour', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n                    durationUnit = 'hour';\n                }\n                else if (getValue('day', this.parent.durationUnitEditText).indexOf(unit) !== -1) {\n                    durationUnit = 'day';\n                }\n            }\n        }\n        else {\n            duration = value;\n            durationUnit = null;\n        }\n        var output = {\n            duration: duration,\n            durationUnit: durationUnit\n        };\n        return output;\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @returns {Date} .\n     */\n    DateProcessor.prototype.getNextWorkingDay = function (date) {\n        var dayIndex = date.getDay();\n        if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1) {\n            date.setDate(date.getDate() + 1);\n            date = this.getNextWorkingDay(date);\n            return date;\n        }\n        else {\n            return date;\n        }\n    };\n    /**\n     * get weekend days between two dates without including args dates\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getWeekendCount = function (startDate, endDate) {\n        var weekendCount = 0;\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        sDate.setHours(0, 0, 0, 0);\n        sDate.setDate(sDate.getDate() + 1);\n        eDate.setHours(0, 0, 0, 0);\n        while (sDate.getTime() < eDate.getTime()) {\n            if (this.parent.nonWorkingDayIndex.indexOf(sDate.getDay()) !== -1) {\n                weekendCount += 1;\n            }\n            sDate.setDate(sDate.getDate() + 1);\n        }\n        return weekendCount;\n    };\n    /**\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getNumberOfSeconds = function (startDate, endDate, isCheckTimeZone) {\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        var timeDiff = 0;\n        sDate.setDate(sDate.getDate() + 1);\n        sDate.setHours(0, 0, 0, 0);\n        eDate.setHours(0, 0, 0, 0);\n        if (sDate.getTime() < eDate.getTime()) {\n            timeDiff = (this.getTimeDifference(sDate, eDate, isCheckTimeZone)) / 1000;\n        }\n        if (timeDiff % 86400 !== 0) {\n            timeDiff = timeDiff - (timeDiff % 86400) + 86400;\n        }\n        return timeDiff;\n    };\n    /**\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getHolidaysCount = function (startDate, endDate) {\n        var holidaysCount = 0;\n        var holidays = this.parent.totalHolidayDates;\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        sDate.setDate(sDate.getDate() + 1);\n        sDate.setHours(0, 0, 0, 0);\n        eDate.setHours(0, 0, 0, 0);\n        if (sDate.getTime() < eDate.getTime()) {\n            for (var i = 0; i < holidays.length; i++) {\n                var currentHoliday = this.getDateFromFormat(new Date(holidays[i]));\n                if (sDate.getTime() <= currentHoliday.getTime() && eDate.getTime() > currentHoliday.getTime()) {\n                    if ((!this.parent.includeWeekend && this.parent.nonWorkingDayIndex.indexOf(currentHoliday.getDay()) === -1) ||\n                        this.parent.includeWeekend) {\n                        holidaysCount += 1;\n                    }\n                }\n            }\n        }\n        return holidaysCount;\n    };\n    /**\n     * @returns {number[]} .\n     * @private\n     */\n    DateProcessor.prototype.getHolidayDates = function () {\n        var holidays = this.parent.holidays;\n        var holidayDates = [];\n        for (var i = 0; i < holidays.length; i++) {\n            var from = this.getDateFromFormat(holidays[i].from);\n            var to = this.getDateFromFormat(holidays[i].to);\n            if (isNullOrUndefined(from) && isNullOrUndefined(to)) {\n                continue;\n            }\n            else if (isNullOrUndefined(from) || isNullOrUndefined(to)) {\n                var tempDate = from ? from : to;\n                tempDate.setHours(0, 0, 0, 0);\n                if (holidayDates.indexOf(tempDate.getTime()) === -1) {\n                    holidayDates.push(tempDate.getTime());\n                }\n            }\n            else {\n                while (from <= to) {\n                    from.setHours(0, 0, 0, 0);\n                    if (holidayDates.indexOf(from.getTime()) === -1) {\n                        holidayDates.push(from.getTime());\n                    }\n                    from.setDate(from.getDate() + 1);\n                }\n            }\n        }\n        return holidayDates;\n    };\n    /**\n     * @param {Date} date .\n     * @param {boolean} checkWeekEnd .\n     * @returns {boolean} .\n     * @private\n     */\n    /*Check given date is on holidays*/\n    DateProcessor.prototype.isOnHolidayOrWeekEnd = function (date, checkWeekEnd) {\n        checkWeekEnd = !isNullOrUndefined(checkWeekEnd) ? checkWeekEnd : this.parent.includeWeekend;\n        if (!this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n            this.parent.taskFields.hasChildMapping)) {\n            checkWeekEnd = true;\n        }\n        if (!checkWeekEnd && this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n            return true;\n        }\n        var holidays = this.parent.totalHolidayDates;\n        for (var count = 0; count < holidays.length; count++) {\n            var holidayFrom = this.getDateFromFormat(new Date(holidays[count]));\n            var holidayTo = new Date(holidayFrom.getTime());\n            holidayFrom.setHours(0, 0, 0, 0);\n            holidayTo.setHours(23, 59, 59, 59);\n            if (date.getTime() >= holidayFrom.getTime() && date.getTime() < holidayTo.getTime()) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * To calculate non working times in given date\n     *\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {boolean} isAutoSchedule .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getNonWorkingSecondsOnDate = function (startDate, endDate, isAutoSchedule) {\n        var sHour = this.getSecondsInDecimal(startDate);\n        var eHour = this.getSecondsInDecimal(endDate);\n        var startRangeIndex = -1;\n        var endRangeIndex = -1;\n        var totNonWrkSecs = 0;\n        var startOnHoliday = (isAutoSchedule && this.parent.autoCalculateDateScheduling &&\n            !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) ? this.isOnHolidayOrWeekEnd(startDate, null) : false;\n        var endOnHoliday = (isAutoSchedule && this.parent.autoCalculateDateScheduling &&\n            !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) ? this.isOnHolidayOrWeekEnd(endDate, null) : false;\n        var startnonWorkingTimeRange;\n        var endnonWorkingTimeRange;\n        if (this.parent.weekWorkingTime.length > 0) {\n            startnonWorkingTimeRange = this.parent['getNonWorkingRange'](startDate);\n            for (var i = 0; i < startnonWorkingTimeRange.length; i++) {\n                var val = startnonWorkingTimeRange[i];\n                if (sHour >= val.from && sHour <= val.to) {\n                    startRangeIndex = i;\n                }\n            }\n            endnonWorkingTimeRange = this.parent['getNonWorkingRange'](endDate);\n            for (var i = 0; i < endnonWorkingTimeRange.length; i++) {\n                var val = endnonWorkingTimeRange[i];\n                if (eHour >= val.from && eHour <= val.to) {\n                    endRangeIndex = i;\n                }\n            }\n        }\n        else {\n            startnonWorkingTimeRange = this.parent.nonWorkingTimeRanges;\n            endnonWorkingTimeRange = this.parent.nonWorkingTimeRanges;\n            for (var i = 0; i < startnonWorkingTimeRange.length; i++) {\n                var val = startnonWorkingTimeRange[i];\n                if (sHour >= val.from && sHour <= val.to) {\n                    startRangeIndex = i;\n                }\n                if (eHour >= val.from && eHour <= val.to) {\n                    endRangeIndex = i;\n                }\n            }\n        }\n        if (startDate.getDate() !== endDate.getDate() || startDate.getMonth() !== endDate.getMonth() ||\n            startDate.getFullYear() !== endDate.getFullYear()) {\n            if (!startOnHoliday) {\n                for (var i = startRangeIndex; i < startnonWorkingTimeRange.length; i++) {\n                    if (!isNullOrUndefined(startnonWorkingTimeRange[i]) && !startnonWorkingTimeRange[i].isWorking) {\n                        if (i === startRangeIndex) {\n                            totNonWrkSecs += (startnonWorkingTimeRange[i].to - sHour);\n                        }\n                        else {\n                            totNonWrkSecs += (startnonWorkingTimeRange[i].interval);\n                        }\n                    }\n                }\n            }\n            else {\n                totNonWrkSecs += (86400 - sHour);\n            }\n            if (!endOnHoliday) {\n                for (var i = 0; i <= endRangeIndex; i++) {\n                    if (!endnonWorkingTimeRange[i].isWorking) {\n                        if (i === endRangeIndex) {\n                            totNonWrkSecs += (eHour - endnonWorkingTimeRange[i].from);\n                        }\n                        else {\n                            totNonWrkSecs += endnonWorkingTimeRange[i].interval;\n                        }\n                    }\n                }\n            }\n            else {\n                totNonWrkSecs += eHour;\n            }\n        }\n        else {\n            if (startRangeIndex !== endRangeIndex) {\n                if (!endOnHoliday) {\n                    for (var i = startRangeIndex; i <= endRangeIndex; i++) {\n                        if (!isNullOrUndefined(startnonWorkingTimeRange[i]) && !startnonWorkingTimeRange[i].isWorking) {\n                            if (i === startRangeIndex) {\n                                totNonWrkSecs += (startnonWorkingTimeRange[i].to - sHour);\n                            }\n                            else if (i === endRangeIndex) {\n                                totNonWrkSecs += (eHour - startnonWorkingTimeRange[i].from);\n                            }\n                            else {\n                                totNonWrkSecs += startnonWorkingTimeRange[i].interval;\n                            }\n                        }\n                    }\n                }\n                else {\n                    totNonWrkSecs += (eHour - sHour);\n                }\n            }\n            else {\n                if (!endOnHoliday) {\n                    var range = startnonWorkingTimeRange[startRangeIndex];\n                    if (!range.isWorking) {\n                        totNonWrkSecs = eHour - sHour;\n                    }\n                }\n                else {\n                    totNonWrkSecs += (eHour - sHour);\n                }\n            }\n        }\n        return totNonWrkSecs;\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @returns {Date} .\n     */\n    DateProcessor.prototype.getPreviousWorkingDay = function (date) {\n        var dayIndex = date.getDay();\n        var previousIndex = (dayIndex === 0) ? 6 : dayIndex - 1;\n        var dayEndTime = this.parent['getCurrentDayEndTime'](date);\n        if (this.parent.nonWorkingDayIndex.indexOf(dayIndex) !== -1 || (this.parent.nonWorkingDayIndex.indexOf(previousIndex) !== -1\n            && dayEndTime === 86400 && this.getSecondsInDecimal(date) === 0)) {\n            date.setDate(date.getDate() - 1);\n            if (this.parent.nonWorkingDayIndex.indexOf(date.getDay()) !== -1) {\n                date = this.getPreviousWorkingDay(date);\n            }\n            return date;\n        }\n        else {\n            return date;\n        }\n    };\n    /**\n     * To get non-working day indexes.\n     *\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.getNonWorkingDayIndex = function () {\n        var weekDay = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n        var weekDayLength = weekDay.length;\n        if (this.parent.workWeek.length === 0) {\n            this.parent.workWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];\n        }\n        var workWeek = this.parent.workWeek.slice();\n        var length = workWeek.length;\n        for (var i = 0; i < length; i++) {\n            workWeek[i] = workWeek[i].toLowerCase();\n        }\n        this.parent.nonWorkingDayIndex = [];\n        for (var i = 0; i < weekDayLength; i++) {\n            if (workWeek.indexOf(weekDay[i]) === -1) {\n                this.parent.nonWorkingDayIndex.push(i);\n            }\n        }\n    };\n    /**\n     *\n     * @param {number} seconds .\n     * @param {Date} date .\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.setTime = function (seconds, date) {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var hour = seconds / 3600;\n        hour = parseInt(hour, 10);\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var min = (seconds - (hour * 3600)) / 60;\n        min = parseInt(min, 10);\n        var sec = seconds - (hour * 3600) - (min * 60);\n        date.setHours(hour, min, sec);\n    };\n    /**\n     * @param {Date} startDate .\n     * @param {Date} endDate .\n     * @param {boolean} isCheckTimeZone .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getTimeDifference = function (startDate, endDate, isCheckTimeZone) {\n        var sDate = new Date(startDate.getTime());\n        var eDate = new Date(endDate.getTime());\n        if (isCheckTimeZone) {\n            this.updateDateWithTimeZone(sDate, eDate);\n        }\n        return eDate.getTime() - sDate.getTime();\n    };\n    /**\n     * @param {Date} sDate .\n     * @param {Date} eDate .\n     * @returns {void} .\n     */\n    DateProcessor.prototype.updateDateWithTimeZone = function (sDate, eDate) {\n        var sTZ = sDate.getTimezoneOffset();\n        var eTZ = eDate.getTimezoneOffset();\n        var uTZ;\n        var uDate;\n        if (sTZ !== eTZ) {\n            var standardTZ = new Date(new Date().getFullYear(), 0, 1).getTimezoneOffset();\n            if (standardTZ !== sTZ) {\n                uDate = sDate;\n                uTZ = sTZ;\n            }\n            else if (standardTZ !== eTZ) {\n                uDate = eDate;\n                uTZ = eTZ;\n            }\n            if (standardTZ < 0) {\n                var tzDiff = standardTZ - uTZ;\n                uDate.setTime(uDate.getTime() + (tzDiff * 60 * 1000));\n            }\n            else if (standardTZ >= 0) {\n                var tzDiff = uTZ - standardTZ;\n                uDate.setTime(uDate.getTime() - (tzDiff * 60 * 1000));\n            }\n        }\n    };\n    /**\n     *\n     * @param {Date} date .\n     * @returns {number} .\n     */\n    DateProcessor.prototype.getSecondsInDecimal = function (date) {\n        return (date.getHours() * 60 * 60) + (date.getMinutes() * 60) + date.getSeconds() + (date.getMilliseconds() / 1000);\n    };\n    /**\n     * @param {Date} date .\n     * @param {number} localOffset .\n     * @param {string} timezone .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.offset = function (date, timezone) {\n        var localOffset = date.getTimezoneOffset();\n        try {\n            var convertedDate = new Date(date.toLocaleString('en-US', { timeZone: timezone }));\n            if (!isNaN(convertedDate.getTime())) {\n                return ((date.getTime() - convertedDate.getTime()) / 60000) + localOffset;\n            }\n            return 0;\n        }\n        catch (error) {\n            return 0;\n        }\n    };\n    DateProcessor.prototype.remove = function (date, timezone) {\n        if (!isNullOrUndefined(date)) {\n            date = this.reverse(date, timezone, date.getTimezoneOffset());\n        }\n        return date;\n    };\n    DateProcessor.prototype.reverse = function (date, fromOffset, toOffset) {\n        if (typeof fromOffset === 'string') {\n            fromOffset = this.offset(date, fromOffset);\n        }\n        if (typeof toOffset === 'string') {\n            toOffset = this.offset(date, toOffset);\n        }\n        var fromLocalOffset = date.getTimezoneOffset();\n        date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n        var toLocalOffset = date.getTimezoneOffset();\n        return new Date(date.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n    };\n    /**\n     * @param {Date} date .\n     * @param {string} timezone .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.convert = function (date, timezone) {\n        var fromOffset = date.getTimezoneOffset();\n        var toOffset = this.offset(date, timezone);\n        if (typeof fromOffset === 'string') {\n            fromOffset = this.offset(date, fromOffset);\n        }\n        if (typeof toOffset === 'string') {\n            toOffset = this.offset(date, toOffset);\n        }\n        var fromLocalOffset = date.getTimezoneOffset();\n        date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);\n        var toLocalOffset = date.getTimezoneOffset();\n        return new Date(date.getTime() + (toLocalOffset - fromLocalOffset) * 60000);\n    };\n    /**\n     * @param {string | Date} date .\n     * @param {boolean} toConvert .\n     * @returns {Date} .\n     * @private\n     */\n    DateProcessor.prototype.getDateFromFormat = function (date, toConvert) {\n        var updatedDate;\n        if (isNullOrUndefined(date)) {\n            return null;\n        }\n        else if (date instanceof Date) {\n            updatedDate = new Date(date.getTime());\n        }\n        else {\n            var dateObject = this.parent.globalize.parseDate(date, { format: this.parent.getDateFormat(), type: 'dateTime' });\n            updatedDate = isNullOrUndefined(dateObject) && !isNaN(new Date(date).getTime()) ? new Date(date) : dateObject;\n        }\n        if (!isNullOrUndefined(this.parent.timezone) && toConvert) {\n            var convertedDate = this.convert(updatedDate, this.parent.timezone);\n            return convertedDate;\n        }\n        else {\n            return updatedDate;\n        }\n    };\n    /**\n     * @param {Date} date1 .\n     * @param {Date} date2 .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.compareDates = function (date1, date2) {\n        if (!isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n            return (date1.getTime() > date2.getTime()) ? 1 : (date1.getTime() < date2.getTime()) ? -1 : 0;\n        }\n        else if (!isNullOrUndefined(date1) && isNullOrUndefined(date2)) {\n            return 1;\n        }\n        else if (isNullOrUndefined(date1) && !isNullOrUndefined(date2)) {\n            return -1;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     *\n     * @param {number} duration .\n     * @param {string} durationUnit .\n     * @returns {string} .\n     * @private\n     */\n    DateProcessor.prototype.getDurationString = function (duration, durationUnit) {\n        var value = '';\n        if (!isNullOrUndefined(duration)) {\n            value += parseFloat(duration.toFixed(2)) + ' ';\n            if (!isNullOrUndefined(durationUnit)) {\n                var plural = duration !== 1;\n                if (durationUnit === 'day') {\n                    value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n                }\n                else if (durationUnit === 'hour') {\n                    value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n                }\n                else if (durationUnit === 'minute') {\n                    value += plural ? this.parent.localeObj.getConstant('minutes') :\n                        this.parent.localeObj.getConstant('minute');\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Method to get work with value and unit.\n     *\n     * @param {number} work .\n     * @param {string} workUnit .\n     * @returns {string} .\n     * @private\n     */\n    DateProcessor.prototype.getWorkString = function (work, workUnit) {\n        var value = '';\n        if (!isNullOrUndefined(work)) {\n            value += parseFloat(work).toFixed(2) + ' ';\n            if (!isNullOrUndefined(workUnit)) {\n                var plural = work !== 1;\n                if (workUnit === 'day') {\n                    value += plural ? this.parent.localeObj.getConstant('days') : this.parent.localeObj.getConstant('day');\n                }\n                else if (workUnit === 'hour') {\n                    value += plural ? this.parent.localeObj.getConstant('hours') : this.parent.localeObj.getConstant('hour');\n                }\n                else if (workUnit === 'minute') {\n                    value += plural ? this.parent.localeObj.getConstant('minutes') :\n                        this.parent.localeObj.getConstant('minute');\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     *\n     * @param {object} editArgs .\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    DateProcessor.prototype.calculateProjectDatesForValidatedTasks = function (editArgs) {\n        var _this = this;\n        var projectStartDate = typeof this.parent.projectStartDate === 'string' ?\n            new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n        var projectEndDate = typeof this.parent.projectEndDate === 'string' ?\n            new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n        var minStartDate = null;\n        var maxEndDate = null;\n        var flatData = (getValue('dataOperation.dataArray', this.parent));\n        if ((!projectStartDate || !projectEndDate) && (flatData && flatData.length === 0)) {\n            minStartDate = this.getDateFromFormat(new Date());\n            maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n        }\n        else if (flatData.length > 0) {\n            var sortedStartDate = flatData.slice().sort(function (a, b) {\n                return ((new Date(a[_this.parent.taskFields.startDate])).getTime() -\n                    (new Date(b[_this.parent.taskFields.startDate])).getTime());\n            });\n            var sortedEndDate = flatData.slice().sort(function (a, b) {\n                return ((new Date(b[_this.parent.taskFields.endDate])).getTime() - (new Date(a[_this.parent.taskFields.endDate])).getTime());\n            });\n            minStartDate = sortedStartDate[0][this.parent.taskFields.startDate];\n            maxEndDate = sortedEndDate[sortedEndDate.length - 1][this.parent.taskFields.endDate];\n        }\n        this.parent.cloneProjectStartDate = projectStartDate ? new Date(projectStartDate.getTime()) :\n            typeof minStartDate === 'string' ? new Date(minStartDate) : minStartDate;\n        this.parent.cloneProjectEndDate = projectEndDate ? new Date(projectEndDate.getTime()) :\n            typeof maxEndDate === 'string' ? new Date(maxEndDate) : maxEndDate;\n    };\n    /**\n     *\n     * @param {object} editArgs .\n     * @returns {void} .\n     * @private\n     */\n    DateProcessor.prototype.calculateProjectDates = function (editArgs) {\n        var _this = this;\n        if (this.parent.isLoad && this.parent.enablePersistence &&\n            this.parent.cloneProjectStartDate && this.parent.cloneProjectEndDate) {\n            this.parent.cloneProjectStartDate = this.getDateFromFormat(this.parent.cloneProjectStartDate);\n            this.parent.cloneProjectEndDate = this.getDateFromFormat(this.parent.cloneProjectEndDate);\n            return;\n        }\n        var sDate = typeof this.parent.projectStartDate === 'string' ?\n            new Date(this.parent.projectStartDate) : this.parent.projectStartDate;\n        var eDate = typeof this.parent.projectEndDate === 'string' ?\n            new Date(this.parent.projectEndDate) : this.parent.projectEndDate;\n        var projectStartDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectStartDate\n            ? this.getDateFromFormat(this.parent.cloneProjectStartDate) : this.getDateFromFormat(sDate);\n        var projectEndDate = this.parent.timelineModule.isZooming && this.parent.cloneProjectEndDate\n            ? this.getDateFromFormat(this.parent.cloneProjectEndDate) : this.getDateFromFormat(eDate);\n        var minStartDate = null;\n        var maxEndDate = null;\n        var flatData = this.parent.flatData;\n        var currentViewData = this.parent.currentViewData;\n        var taskRange = [];\n        var addDateToList = function (date) {\n            if (!isNullOrUndefined(date)) {\n                taskRange.push(date);\n            }\n        };\n        var sortDates = function (dates) {\n            if (dates.length > 0) {\n                dates.sort(function (a, b) {\n                    return a.getTime() - b.getTime();\n                });\n                minStartDate = new Date(dates[0].getTime());\n                maxEndDate = dates.length > 1 ? new Date(dates[dates.length - 1].getTime()) : null;\n            }\n        };\n        if (((!projectStartDate || !projectEndDate) && flatData.length > 0) || editArgs || this.parent.timelineModule.isZoomToFit) {\n            var viewData = void 0;\n            if (currentViewData.length > 0 && this.parent.timelineModule.isZoomToFit &&\n                this.parent.treeGrid.filterModule &&\n                this.parent.treeGrid.filterModule.filteredResult.length > 0) {\n                viewData = currentViewData;\n            }\n            else {\n                viewData = flatData;\n            }\n            viewData.forEach(function (data) {\n                taskRange = [];\n                var task = data.ganttProperties;\n                var tempStartDate;\n                var tempEndDate;\n                if (isNullOrUndefined(task.startDate) && isNullOrUndefined(task.endDate)) {\n                    tempStartDate = null;\n                    tempEndDate = null;\n                }\n                else {\n                    tempStartDate = _this.getValidStartDate(task);\n                    tempEndDate = _this.getValidEndDate(task);\n                }\n                addDateToList(minStartDate);\n                addDateToList(maxEndDate);\n                addDateToList(tempStartDate);\n                addDateToList(tempEndDate);\n                if (_this.parent.renderBaseline && !_this.parent.timelineModule.isZoomToFit) {\n                    addDateToList(task.baselineStartDate);\n                    addDateToList(task.baselineEndDate);\n                }\n                if (task.indicators && task.indicators.length > 0 && !_this.parent.timelineModule.isZoomToFit) {\n                    task.indicators.forEach(function (item) {\n                        addDateToList(_this.getDateFromFormat(item.date));\n                    });\n                }\n                sortDates(taskRange);\n            });\n            taskRange = [];\n            addDateToList(minStartDate);\n            addDateToList(maxEndDate);\n            //update schedule dates as per holiday and strip line collection\n            if (this.parent.eventMarkers.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n                var eventMarkers = this.parent.eventMarkers;\n                // eslint-disable-next-line\n                eventMarkers.forEach(function (marker, index) {\n                    addDateToList(_this.getDateFromFormat(marker.day));\n                });\n            }\n            if (this.parent.totalHolidayDates.length > 0 && !this.parent.timelineModule.isZoomToFit) {\n                var holidays = this.parent.totalHolidayDates;\n                // eslint-disable-next-line\n                holidays.forEach(function (holiday, index) {\n                    addDateToList(new Date(holiday));\n                });\n            }\n            sortDates(taskRange);\n            if (!minStartDate || !maxEndDate) {\n                if (!minStartDate) {\n                    minStartDate = isNullOrUndefined(minStartDate) ? this.getDateFromFormat(new Date()) : minStartDate;\n                    minStartDate.setHours(0, 0, 0, 0);\n                }\n                else {\n                    minStartDate = isNullOrUndefined(minStartDate) ? this.getDateFromFormat(new Date()) : minStartDate;\n                }\n                maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n                maxEndDate.setDate(maxEndDate.getDate() + 20);\n            }\n        }\n        else if ((!projectStartDate || !projectEndDate) && flatData.length === 0) {\n            minStartDate = this.getDateFromFormat(new Date());\n            maxEndDate = this.getDateFromFormat(new Date(minStartDate.getTime()));\n        }\n        if (!editArgs) {\n            this.prevProjectStartDate = this.parent.cloneProjectStartDate;\n            this.parent.cloneProjectStartDate = minStartDate ? (!this.parent.timelineModule.isZoomToFit) ?\n                (!isNullOrUndefined(projectStartDate)) ? new Date(projectStartDate.getTime()) :\n                    minStartDate : minStartDate : new Date(projectStartDate.getTime());\n            this.parent.cloneProjectEndDate = maxEndDate ? (!this.parent.timelineModule.isZoomToFit) ?\n                (!isNullOrUndefined(projectEndDate)) ? new Date(projectEndDate.getTime()) :\n                    maxEndDate : maxEndDate : new Date(projectEndDate.getTime());\n        }\n        else {\n            setValue('minStartDate', minStartDate, editArgs);\n            setValue('maxEndDate', maxEndDate, editArgs);\n        }\n        this.parent['isProjectDateUpdated'] = true;\n    };\n    /**\n     *\n     * @param {ITaskSegment} segments .\n     * @returns {number} .\n     * @private\n     */\n    DateProcessor.prototype.splitTasksDuration = function (segments) {\n        var duration = 0;\n        for (var i = 0; i < segments.length; i++) {\n            var segment = segments[i];\n            var sDate = segment.startDate;\n            var eDate = segment.endDate;\n            if (this.parent.timelineModule.bottomTier === 'Hour') {\n                duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60));\n            }\n            else if (this.parent.timelineModule.bottomTier === 'Minutes') {\n                duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60));\n            }\n            else {\n                duration += Math.ceil(this.getTimeDifference(sDate, eDate) / (1000 * 60 * 60 * 24));\n            }\n        }\n        return duration;\n    };\n    return DateProcessor;\n}());\nexport { DateProcessor };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}