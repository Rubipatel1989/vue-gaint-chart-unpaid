{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */function (_super) {\n  __extends(Panel, _super);\n  function Panel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  __decorate([Property('')], Panel.prototype, \"id\", void 0);\n  __decorate([Property('')], Panel.prototype, \"cssClass\", void 0);\n  __decorate([Property('')], Panel.prototype, \"header\", void 0);\n  __decorate([Property('')], Panel.prototype, \"content\", void 0);\n  __decorate([Property(true)], Panel.prototype, \"enabled\", void 0);\n  __decorate([Property(0)], Panel.prototype, \"row\", void 0);\n  __decorate([Property(0)], Panel.prototype, \"col\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"sizeX\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"sizeY\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"minSizeY\", void 0);\n  __decorate([Property(1)], Panel.prototype, \"minSizeX\", void 0);\n  __decorate([Property(null)], Panel.prototype, \"maxSizeY\", void 0);\n  __decorate([Property(null)], Panel.prototype, \"maxSizeX\", void 0);\n  __decorate([Property(1000)], Panel.prototype, \"zIndex\", void 0);\n  return Panel;\n}(ChildProperty);\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */function (_super) {\n  __extends(DashboardLayout, _super);\n  function DashboardLayout(options, element) {\n    var _this = _super.call(this, options, element) || this;\n    _this.rows = 1;\n    _this.panelID = 0;\n    _this.movePanelCalled = false;\n    _this.resizeCalled = false;\n    _this.mOffX = 0;\n    _this.mOffY = 0;\n    _this.maxTop = 9999;\n    _this.maxRows = 100;\n    _this.mouseX = 0;\n    _this.mouseY = 0;\n    _this.minTop = 0;\n    _this.minLeft = 0;\n    _this.isInlineRendering = false;\n    _this.removeAllCalled = false;\n    // to check whether removePanel is executed in mobile device\n    _this.isPanelRemoved = false;\n    // to maintain sizeY in mobile device\n    _this.panelsSizeY = 0;\n    _this.resizeHeight = false;\n    _this.eventVar = false;\n    setValue('mergePersistData', _this.mergePersistPanelData, _this);\n    return _this;\n  }\n  /**\n   * Initialize the event handler\n   *\n   * @private\n   */\n  DashboardLayout.prototype.preRender = function () {\n    this.panelCollection = [];\n    this.sortedArray = [];\n    this.gridPanelCollection = [];\n    this.overlapElement = [];\n    this.overlapElementClone = [];\n    this.overlapSubElementClone = [];\n    this.collisionChecker = {};\n    this.dragCollection = [];\n    this.elementRef = {\n      top: '',\n      left: '',\n      height: '',\n      width: ''\n    };\n    this.dimensions = [];\n    this.allItems = [];\n    this.oldRowCol = {};\n    this.availableClasses = [];\n    this.setOldRowCol();\n    this.calculateCellSize();\n    this.contentTemplateChild = [].slice.call(this.element.children);\n  };\n  DashboardLayout.prototype.setOldRowCol = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (!this.panels[i].id) {\n        this.panelPropertyChange(this.panels[i], {\n          id: 'layout_' + this.panelID.toString()\n        });\n        this.panelID = this.panelID + 1;\n      }\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n  };\n  DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n    var ele = this.createElement('div');\n    if (cssClass && cssClass.length > 0) {\n      addClass([ele], cssClass);\n    }\n    if (idValue) {\n      ele.setAttribute('id', idValue);\n    }\n    return ele;\n  };\n  /**\n   * To Initialize the control rendering.\n   *\n   * @returns void\n   * @private\n   */\n  DashboardLayout.prototype.render = function () {\n    this.element.setAttribute('role', 'list');\n    this.initialize();\n    this.isRenderComplete = true;\n    if (this.showGridLines && !this.checkMediaQuery()) {\n      this.initGridLines();\n    }\n    this.updateDragArea();\n    this.renderComplete();\n    this.renderReactTemplates();\n  };\n  DashboardLayout.prototype.initGridLines = function () {\n    this.table = document.createElement('table');\n    var tbody = document.createElement('tbody');\n    this.table.classList.add('e-dashboard-gridline-table');\n    this.table.setAttribute('role', 'presentation');\n    for (var i = 0; i < this.maxRow(); i++) {\n      var tr = document.createElement('tr');\n      for (var j = 0; j < this.columns; j++) {\n        var td = document.createElement('td');\n        td.classList.add('e-dashboard-gridline');\n        this.setAttributes({\n          value: {\n            row: i.toString(),\n            col: j.toString(),\n            sizeX: '1',\n            sizeY: '1'\n          }\n        }, td);\n        this.setPanelPosition(td, i, j);\n        this.setHeightAndWidth(td, {\n          row: i,\n          col: j,\n          sizeX: 1,\n          sizeY: 1\n        });\n        tr.appendChild(td);\n      }\n      tbody.appendChild(tr);\n    }\n    this.table.appendChild(tbody);\n    this.element.appendChild(this.table);\n    this.renderReactTemplates();\n  };\n  DashboardLayout.prototype.initialize = function () {\n    this.updateRowHeight();\n    if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n      var panelElements = [];\n      this.setProperties({\n        panels: []\n      }, true);\n      this.isInlineRendering = true;\n      for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n        panelElements.push(this.element.querySelectorAll('.e-panel')[i]);\n      }\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n        if (this.enableRtl) {\n          addClass([panelElement], 'e-rtl');\n        }\n        this.getInlinePanels(panelElement);\n        this.maxCol();\n        this.maxRow();\n      }\n      for (var i = 0; i < this.panels.length; i++) {\n        var panelElement = this.element.querySelector('#' + this.panels[i].id);\n        this.setMinMaxValues(this.panels[i]);\n        if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < this.panels[i].col + this.panels[i].sizeX) {\n          var colValue = this.maxColumnValue - this.panels[i].sizeX;\n          this.panelPropertyChange(this.panels[i], {\n            col: colValue < 0 ? 0 : colValue\n          });\n        }\n        this.setXYAttributes(panelElement, this.panels[i]);\n        var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n        this.panelCollection.push(panel_1);\n        this.setHeightAndWidth(panelElement, this.panels[i]);\n        this.tempObject = this;\n        if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n          this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n          this.mainElement = panelElement;\n          this.updatePanelLayout(panelElement, this.panels[i]);\n          this.mainElement = null;\n        }\n        this.setClasses([panelElement]);\n      }\n      this.updateOldRowColumn();\n      if (this.checkMediaQuery()) {\n        this.checkMediaQuerySizing();\n      }\n    } else {\n      this.renderDashBoardCells(this.panels);\n    }\n    if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n      this.enableDraggingContent(this.panelCollection);\n    }\n    this.sortedPanel();\n    this.bindEvents();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkColumnValue = this.maxColumnValue;\n    if (!this.checkMediaQuery()) {\n      this.panelResponsiveUpdate();\n    }\n    this.setEnableRtl();\n  };\n  DashboardLayout.prototype.checkMediaQuery = function () {\n    return this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches;\n  };\n  DashboardLayout.prototype.calculateCellSize = function () {\n    this.cellSize = [];\n    if (this.checkMediaQuery()) {\n      this.cellSize[1] = this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio;\n    } else {\n      this.cellSize[0] = this.element.parentElement && this.element.parentElement.offsetWidth;\n      if (!isNullOrUndefined(this.cellSpacing)) {\n        this.cellSize[0] = this.element.parentElement && (this.element.parentElement.offsetWidth - (this.maxCol() - 1) * this.cellSpacing[0]) / this.maxCol();\n      }\n      this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n    }\n  };\n  DashboardLayout.prototype.maxRow = function (recheck) {\n    var maxRow = 1;\n    if (this.rows > 1 && isNullOrUndefined(recheck)) {\n      maxRow = this.rows;\n      return maxRow;\n    }\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n        maxRow = this.panels[i].sizeY + this.panels[i].row;\n      }\n    }\n    if (this.panels.length === 0) {\n      maxRow = this.columns;\n    }\n    return maxRow;\n  };\n  DashboardLayout.prototype.maxCol = function () {\n    var maxCol = 1;\n    maxCol = this.columns;\n    this.maxColumnValue = maxCol;\n    return maxCol;\n  };\n  DashboardLayout.prototype.updateOldRowColumn = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      var id = this.panels[i].id;\n      if (this.element.querySelector('[id=\\'' + id + '\\']')) {\n        var row = parseInt(this.element.querySelector('[id=\\'' + id + '\\']').getAttribute('data-row'), 10);\n        var col = parseInt(this.element.querySelector('[id=\\'' + id + '\\']').getAttribute('data-col'), 10);\n        this.oldRowCol[this.panels[i].id] = {\n          row: row,\n          col: col\n        };\n      } else {\n        continue;\n      }\n    }\n  };\n  DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n    var element = this.createElement('div');\n    if (className) {\n      addClass([element], [className]);\n    }\n    if (cssClass && cssClass.length > 0) {\n      addClass([element], cssClass);\n    }\n    if (idValue) {\n      element.setAttribute('id', idValue);\n    }\n    return element;\n  };\n  DashboardLayout.prototype.templateParser = function (template) {\n    if (template) {\n      try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        } else {\n          return compile(template);\n        }\n      } catch (error) {\n        var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n        return compile(this.enableHtmlSanitizer && typeof template === 'string' ? sanitizedValue : template);\n      }\n    }\n    return undefined;\n  };\n  DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n    var templateFn = this.templateParser(content);\n    var templateElements = [];\n    if ((content[0] === '.' || content[0] === '#') && document.querySelector(content).tagName !== 'SCRIPT') {\n      var eleVal = document.querySelector(content);\n      if (!isNullOrUndefined(eleVal)) {\n        if (eleVal.style.display === 'none') {\n          eleVal.style.removeProperty('display');\n        }\n        if (eleVal.getAttribute('style') === '') {\n          eleVal.removeAttribute('style');\n        }\n        appendElement.appendChild(eleVal);\n        return;\n      } else {\n        content = content.trim();\n      }\n    } else {\n      var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n      if (compilerFn) {\n        for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n          var item = compilerFn_1[_i];\n          templateElements.push(item);\n        }\n        append([].slice.call(templateElements), appendElement);\n      }\n    }\n  };\n  DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n    addClass([cellElement], [panel, panelTransition]);\n    cellElement.setAttribute('role', 'listitem');\n    if (this.allowDragging) {\n      cellElement.setAttribute('aria-grabbed', 'false');\n    }\n    var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n    this.panelContent = cellElement.querySelector('.e-panel-container') ? cellElement.querySelector('.e-panel-container') : this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n    cellElement.appendChild(this.panelContent);\n    if (!panelModel.enabled) {\n      this.disablePanel(cellElement);\n    }\n    if (panelModel.header) {\n      var headerTemplateElement = cellElement.querySelector('.e-panel-header') ? cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n      if (!cellElement.querySelector('.e-panel-header')) {\n        var id = this.element.id + 'HeaderTemplate' + panelId;\n        this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n        this.panelContent.appendChild(headerTemplateElement);\n        this.renderReactTemplates();\n      }\n    }\n    if (panelModel.content) {\n      var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n      this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') : this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyle(this.panelBody, {\n        height: contentHeightValue\n      });\n      if (!cellElement.querySelector('.e-panel-content')) {\n        var id = this.element.id + 'ContentTemplate' + panelId;\n        this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n        this.panelContent.appendChild(this.panelBody);\n        this.renderReactTemplates();\n      }\n    }\n    return cellElement;\n  };\n  DashboardLayout.prototype.disablePanel = function (panelElement) {\n    addClass([panelElement], [disable]);\n  };\n  DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n    var model = {\n      sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n      sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n      minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n      minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n      maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n      maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n      row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n      col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n      id: panelElement.getAttribute('id'),\n      zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n      header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n      content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n    };\n    if (!model.id) {\n      model.id = 'layout_' + this.panelID.toString();\n      panelElement.setAttribute('id', model.id);\n      this.panelID = this.panelID + 1;\n    }\n    if (isUndefined(model.enabled)) {\n      model.enabled = true;\n    }\n    panelElement.style.zIndex = '' + model.zIndex;\n    var panelProp = new Panel(this, 'panels', model, true);\n    this.panels.push(panelProp);\n    this.oldRowCol[model.id] = {\n      row: model.row,\n      col: model.col\n    };\n  };\n  DashboardLayout.prototype.resizeEvents = function () {\n    if (this.allowResizing) {\n      var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n      for (var i = 0; i < panelElements.length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n  };\n  DashboardLayout.prototype.bindEvents = function () {\n    this.refreshListener = this.refresh.bind(this);\n    EventHandler.add(window, 'resize', this.refreshListener);\n    this.resizeEvents();\n  };\n  DashboardLayout.prototype.downResizeHandler = function (e) {\n    var el = closest(e.currentTarget, '.e-panel');\n    for (var i = 0; this.panels.length > i; i++) {\n      if (this.panels[i].enabled && this.panels[i].id === el.id) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n          EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n          this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n          EventHandler.add(document, upEventName, this.upResizeHandler, this);\n          this.isMouseUpBound = true;\n        }\n      }\n    }\n  };\n  DashboardLayout.prototype.downHandler = function (e) {\n    this.resizeCalled = false;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var el = closest(e.currentTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resizeStart', args);\n    this.downTarget = e.currentTarget;\n    this.shadowEle = document.createElement('div');\n    this.shadowEle.classList.add('e-holder');\n    addClass([this.element], [preventSelect]);\n    this.element.appendChild(this.shadowEle);\n    this.renderReactTemplates();\n    this.elementX = parseFloat(el.style.left);\n    this.elementY = parseFloat(el.style.top);\n    this.elementWidth = el.offsetWidth;\n    this.elementHeight = el.offsetHeight;\n    this.originalWidth = this.getCellInstance(el.id).sizeX;\n    this.originalHeight = this.getCellInstance(el.id).sizeY;\n    this.previousRow = this.getCellInstance(el.id).row;\n  };\n  DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n    this.downHandler(e);\n    this.lastMouseX = e.changedTouches[0].pageX;\n    this.lastMouseY = e.changedTouches[0].pageY;\n    if (!this.isMouseMoveBound) {\n      EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n      this.isMouseMoveBound = true;\n    }\n    if (!this.isMouseUpBound) {\n      EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n      this.isMouseUpBound = true;\n    }\n  };\n  DashboardLayout.prototype.getCellSize = function () {\n    return [this.cellSize[0], this.cellSize[1]];\n  };\n  DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n    this.moveTarget = this.downTarget;\n    var el = closest(this.moveTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    this.trigger('resize', args);\n  };\n  DashboardLayout.prototype.updateResizeElement = function (el) {\n    this.maxLeft = this.element.offsetWidth - 1;\n    this.maxTop = this.cellSize[1] * this.maxRows - 1;\n    removeClass([el], 'e-panel-transition');\n    addClass([el], [dragging]);\n    var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n    for (var i = 0; i < this.moveTarget.classList.length; i++) {\n      if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n        this.handleClass = this.moveTarget.classList[i];\n      }\n    }\n  };\n  DashboardLayout.prototype.moveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n    if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n      return;\n    }\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.pageX;\n    this.mouseY = e.pageY;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseY = this.mouseY;\n    this.lastMouseX = this.mouseX;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n  DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n    this.updateMaxTopLeft(e);\n    var el = closest(this.moveTarget, '.e-panel');\n    if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n      return;\n    }\n    this.updateResizeElement(el);\n    var panelModel = this.getCellInstance(el.getAttribute('id'));\n    this.mouseX = e.changedTouches[0].pageX;\n    this.mouseY = e.changedTouches[0].pageY;\n    var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n    var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n    this.mOffX = this.mOffY = 0;\n    this.lastMouseX = this.mouseX;\n    this.lastMouseY = this.mouseY;\n    this.resizingPanel(el, panelModel, diffX, diffY);\n  };\n  /* istanbul ignore next */\n  DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n    var oldSizeX = this.getCellInstance(el.id).sizeX;\n    var oldSizeY = this.getCellInstance(el.id).sizeY;\n    var dY = currentY;\n    var dX = currentX;\n    if (this.handleClass.indexOf('north') >= 0) {\n      if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMinHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n        currentY = this.elementHeight - this.getMaxHeight(panelModel);\n        this.mOffY = dY - currentY;\n      } else if (this.elementY + dY < this.minTop) {\n        currentY = this.minTop - this.elementY;\n        this.mOffY = dY - currentY;\n      }\n      this.elementY += currentY;\n      this.elementHeight -= currentY;\n    }\n    if (this.handleClass.indexOf('south') >= 0) {\n      if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n        currentY = this.getMinHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      } else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n        currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n        this.mOffY = dY - currentY;\n      }\n      this.elementHeight += currentY;\n    }\n    if (this.handleClass.indexOf('west') >= 0) {\n      if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMinWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n        currentX = this.elementWidth - this.getMaxWidth(panelModel);\n        this.mOffX = dX - currentX;\n      } else if (this.elementX + dX < this.minLeft) {\n        currentX = this.minLeft - this.elementX;\n        this.mOffX = dX - currentX;\n      }\n      this.elementX += currentX;\n      this.elementWidth -= currentX;\n    }\n    if (this.handleClass.indexOf('east') >= 0) {\n      if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n        currentX = this.getMinWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      } else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n        currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n        this.mOffX = dX - currentX;\n      }\n      var initialWidth = this.elementWidth;\n      this.elementWidth += currentX;\n      var newSizeX = this.pixelsToColumns(this.elementWidth - panelModel.sizeX * this.cellSpacing[1], true);\n      if (this.columns < panelModel.col + newSizeX) {\n        this.elementWidth = initialWidth;\n      }\n    }\n    el.style.top = this.elementY + 'px';\n    el.style.left = this.elementX + 'px';\n    el.style.width = this.elementWidth + 'px';\n    el.style.height = this.elementHeight + 'px';\n    var item = this.getResizeRowColumn(panelModel);\n    if (item.col + item.sizeX > this.columns) {\n      this.panelPropertyChange(item, {\n        sizeX: item.sizeX - 1\n      });\n    }\n    this.shadowEle.style.top = item.row * this.getCellSize()[1] + item.row * this.cellSpacing[1] + 'px';\n    if (this.handleClass.indexOf('west') >= 0) {\n      this.shadowEle.style.left = item.col * this.getCellSize()[0] + (item.col - 1) * this.cellSpacing[0] + 'px';\n    } else {\n      this.shadowEle.style.left = item.col * this.getCellSize()[0] + item.col * this.cellSpacing[0] + 'px';\n    }\n    this.shadowEle.style.height = item.sizeY * (this.getCellSize()[1] + this.cellSpacing[1]) + 'px';\n    this.shadowEle.style.width = item.sizeX * (this.getCellSize()[0] + this.cellSpacing[0]) + 'px';\n    if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n      oldSizeX = item.sizeX;\n      oldSizeY = item.sizeY;\n      var model = this.getCellInstance(el.id);\n      var value = {\n        attributes: {\n          row: model.row.toString(),\n          col: model.col.toString(),\n          sizeX: model.sizeX.toString(),\n          sizeY: model.sizeY.toString()\n        }\n      };\n      this.setAttributes(value, el);\n      this.mainElement = el;\n      this.checkCollision = [];\n      this.updatePanelLayout(el, this.getCellInstance(el.id));\n      this.updateOldRowColumn();\n      this.sortedPanel();\n    }\n  };\n  DashboardLayout.prototype.upResizeHandler = function (e) {\n    if (isNullOrUndefined(this.downTarget)) {\n      return;\n    }\n    this.upTarget = this.downTarget;\n    var el = closest(this.upTarget, '.e-panel');\n    var args = {\n      event: e,\n      element: el,\n      isInteracted: true\n    };\n    if (el) {\n      addClass([el], 'e-panel-transition');\n      var moveEventName = Browser.info.name === 'msie' ? 'mousemove pointermove' : 'mousemove';\n      var upEventName = Browser.info.name === 'msie' ? 'mouseup pointerup' : 'mouseup';\n      EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n      EventHandler.remove(document, upEventName, this.upResizeHandler);\n      if (Browser.info.name !== 'msie') {\n        EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n        EventHandler.remove(document, 'touchend', this.upResizeHandler);\n      }\n      this.isMouseUpBound = false;\n      this.isMouseMoveBound = false;\n      if (this.shadowEle) {\n        detach(this.shadowEle);\n      }\n      this.shadowEle = null;\n      var panelModel = this.getCellInstance(el.getAttribute('id'));\n      this.setPanelPosition(el, panelModel.row, panelModel.col);\n      this.setHeightAndWidth(el, panelModel);\n    }\n    removeClass([el], [dragging]);\n    this.trigger('resizeStop', args);\n    this.resizeCalled = false;\n    this.lastMouseX = this.lastMouseY = undefined;\n    this.mOffX = this.mOffY = 0;\n    this.mainElement = null;\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(true);\n  };\n  DashboardLayout.prototype.getResizeRowColumn = function (item) {\n    var isChanged = false;\n    var col = item.col;\n    if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n      col = this.pixelsToColumns(this.elementX, false);\n    }\n    var row = item.row;\n    if (['e-north'].indexOf(this.handleClass) !== -1) {\n      row = this.pixelsToRows(this.elementY, false);\n      if (this.previousRow !== row) {\n        this.previousRow = row;\n        isChanged = true;\n      }\n    }\n    var sizeX = item.sizeX;\n    if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n      sizeX = this.pixelsToColumns(this.elementWidth - sizeX * this.cellSpacing[1], true);\n    }\n    var sizeY = item.sizeY;\n    if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n      if (this.handleClass === 'e-north' ? isChanged : true) {\n        sizeY = this.pixelsToRows(this.elementHeight - sizeY * this.cellSpacing[0], true);\n      }\n    }\n    if (item.col + sizeX > this.columns) {\n      item.sizeX = sizeX - 1;\n    }\n    var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n    if (canOccupy && this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0 || this.allowPushing !== false) {\n      this.panelPropertyChange(item, {\n        row: row,\n        col: col,\n        sizeX: sizeX,\n        sizeY: sizeY\n      });\n    }\n    return item;\n  };\n  DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n    if (isCeil) {\n      return Math.ceil(pixels / this.cellSize[0]);\n    } else {\n      return Math.floor(pixels / (this.cellSize[0] + this.cellSpacing[0]));\n    }\n  };\n  DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n    if (isCeil) {\n      return Math.round(pixels / this.cellSize[1]);\n    } else {\n      return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n    }\n  };\n  DashboardLayout.prototype.getMinWidth = function (item) {\n    return item.minSizeX * this.getCellSize()[0] + (item.minSizeX - 1) * this.cellSpacing[0];\n  };\n  DashboardLayout.prototype.getMaxWidth = function (item) {\n    return item.maxSizeX * this.getCellSize()[0];\n  };\n  DashboardLayout.prototype.getMinHeight = function (item) {\n    return item.minSizeY * this.getCellSize()[1] + (item.minSizeY - 1) * this.cellSpacing[1];\n  };\n  DashboardLayout.prototype.getMaxHeight = function (item) {\n    return item.maxSizeY * this.getCellSize()[1];\n  };\n  DashboardLayout.prototype.sortedPanel = function () {\n    this.sortedArray = [];\n    for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n      this.sortItem(this.panelCollection[i]);\n    }\n  };\n  DashboardLayout.prototype.moveItemsUpwards = function () {\n    if (this.allowFloating === false) {\n      return;\n    }\n    for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n      var columns = this.sortedArray[rowIndex];\n      if (!columns) {\n        continue;\n      }\n      for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n        var item = columns[colIndex];\n        if (item) {\n          this.moveItemUpwards(item);\n        }\n      }\n    }\n    this.updateGridLines();\n  };\n  DashboardLayout.prototype.moveItemUpwards = function (item) {\n    if (this.allowFloating === false || item === this.mainElement) {\n      return;\n    }\n    var colIndex = this.getCellInstance(item.id).col;\n    var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n    var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n    var availableRow = null;\n    var availableColumn = null;\n    var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n    while (rowIndex > -1) {\n      var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n      if (items.length !== 0) {\n        break;\n      }\n      availableRow = rowIndex;\n      availableColumn = colIndex;\n      --rowIndex;\n    }\n    if (availableRow !== null) {\n      this.sortItem(item, availableRow, availableColumn);\n    }\n  };\n  DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n    this.overlapElement = [];\n    var column = parseInt(item.getAttribute('data-col'), 10);\n    var row = parseInt(item.getAttribute('data-row'), 10);\n    if (!this.sortedArray[row]) {\n      this.sortedArray[row] = [];\n    }\n    this.sortedArray[row][column] = item;\n    if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n      if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null && typeof this.oldRowCol[item.id].col !== 'undefined') {\n        {\n          var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n          if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n            delete oldRow[this.oldRowCol[item.id].col];\n            this.updateOldRowColumn();\n            this.sortedPanel();\n          }\n        }\n      }\n      this.oldRowCol[item.id].row = rowValue;\n      this.oldRowCol[item.id].row = columnValue;\n      if (!this.sortedArray[row]) {\n        this.sortedArray[row] = [];\n      }\n      this.sortedArray[row][column] = item;\n      if (this.allItems.indexOf(item) === -1) {\n        this.allItems.push(item);\n      }\n      this.panelPropertyChange(this.getCellInstance(item.id), {\n        row: rowValue,\n        col: columnValue\n      });\n      var panelModel = this.getCellInstance(item.id);\n      this.setAttributes({\n        value: {\n          col: panelModel.col.toString(),\n          row: panelModel.row.toString()\n        }\n      }, item);\n      this.updateLayout(item, this.getCellInstance(item.id));\n    }\n  };\n  DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n    this.setPanelPosition(element, panelModel.row, panelModel.col);\n    this.setHeightAndWidth(element, panelModel);\n    this.updateRowHeight();\n    this.sortedPanel();\n  };\n  DashboardLayout.prototype.refresh = function () {\n    this.panelsSizeY = 0;\n    this.updateDragArea();\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    } else {\n      if (this.element.classList.contains(responsive)) {\n        removeClass([this.element], [responsive]);\n        var internalPanels = this.element.querySelectorAll((this.element.id ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n        for (var i = 0; i < internalPanels.length; i++) {\n          var ele = internalPanels[i];\n          var cellInstance = this.getCellInstance(ele.id);\n          var row = parseInt(ele.getAttribute('data-row'), 10);\n          var col = parseInt(ele.getAttribute('data-col'), 10);\n          this.panelPropertyChange(cellInstance, {\n            row: row,\n            col: col\n          });\n          this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n          this.setPanelPosition(ele, row, col);\n          this.updateRowHeight();\n        }\n      }\n      this.panelResponsiveUpdate();\n      this.updateGridLines();\n    }\n    if (!isNullOrUndefined(this.panelCollection)) {\n      this.removeResizeClasses(this.panelCollection);\n      this.setClasses(this.panelCollection);\n    }\n    this.resizeEvents();\n    if (!isNullOrUndefined(this.panelCollection)) {\n      this.checkDragging(this.dragCollection);\n    }\n  };\n  DashboardLayout.prototype.updateGridLines = function () {\n    if (this.element.querySelector('.e-dashboard-gridline-table')) {\n      if (this.table) {\n        detach(this.table);\n      }\n      this.initGridLines();\n    }\n  };\n  DashboardLayout.prototype.checkDragging = function (dragCollection) {\n    if (this.checkMediaQuery() || !this.allowDragging) {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n    } else {\n      for (var i = 0; i < dragCollection.length; i++) {\n        dragCollection[i].destroy();\n      }\n      this.enableDraggingContent(this.panelCollection);\n    }\n  };\n  DashboardLayout.prototype.sortPanels = function () {\n    var model = [];\n    var _loop_1 = function (row) {\n      var _loop_2 = function (col) {\n        this_1.panels.filter(function (panel) {\n          if (panel.row === row && panel.col === col) {\n            model.push(panel);\n          }\n        });\n      };\n      for (var col = 0; col < this_1.columns; col++) {\n        _loop_2(col);\n      }\n    };\n    var this_1 = this;\n    for (var row = 0; row <= this.rows; row++) {\n      _loop_1(row);\n    }\n    return model;\n  };\n  DashboardLayout.prototype.checkMediaQuerySizing = function () {\n    addClass([this.element], [responsive]);\n    var updatedPanel;\n    if (this.isPanelRemoved && this.panels) {\n      updatedPanel = this.panels;\n    } else {\n      updatedPanel = this.sortPanels();\n    }\n    this.updatedRows = updatedPanel.length;\n    for (var i = 0; i < updatedPanel.length; i++) {\n      var panelElement = document.getElementById(updatedPanel[i].id);\n      var updatedHeight = void 0;\n      if (panelElement) {\n        setStyle(panelElement, {\n          'width': '100%'\n        });\n        panelElement.style.height = ' ' + (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY + 'px';\n        if (updatedPanel[i].sizeY > 1) {\n          updatedHeight = (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY + parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 10);\n          panelElement.style.height = '' + updatedHeight + 'px';\n        }\n        this.resizeHeight = true;\n        this.panelPropertyChange(updatedPanel[i], {\n          row: i,\n          col: 0\n        });\n        this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n        this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n        if (!isNullOrUndefined(this.panelCollection)) {\n          this.setClasses(this.panelCollection);\n          this.removeResizeClasses(this.panelCollection);\n        }\n        if (!isNullOrUndefined(this.dragCollection)) {\n          this.checkDragging(this.dragCollection);\n        }\n      }\n    }\n    this.updateRowHeight();\n  };\n  DashboardLayout.prototype.panelResponsiveUpdate = function () {\n    this.element.classList.add('e-responsive');\n    this.calculateCellSize();\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n    }\n    for (var i = 0; i < this.panels.length; i++) {\n      this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n    }\n    this.updateRowHeight();\n  };\n  DashboardLayout.prototype.updateRowHeight = function () {\n    this.getRowColumn();\n    this.setHeightWidth();\n  };\n  DashboardLayout.prototype.setHeightWidth = function () {\n    var heightValue;\n    if (isNullOrUndefined(this.cellSpacing)) {\n      return;\n    }\n    if (this.checkMediaQuery()) {\n      var entirePanelsY = 0;\n      for (var i = 0; i < this.panels.length; i++) {\n        if (this.panels[i].sizeY) {\n          entirePanelsY += this.panels[i].sizeY;\n        }\n      }\n      heightValue = entirePanelsY * (this.element.parentElement && this.element.parentElement.offsetWidth / this.cellAspectRatio) + (entirePanelsY - 1) * this.cellSpacing[1] + 'px';\n    } else {\n      heightValue = this.maxRow() * (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1] + 'px';\n    }\n    setStyle(this.element, {\n      'height': heightValue\n    });\n    var widthValue = window.getComputedStyle(this.element).width;\n    setStyle(this.element, {\n      'width': widthValue\n    });\n  };\n  DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n    setStyle(panelElement, {\n      'height': formatUnit(this.setXYDimensions(panelModel)[0])\n    });\n    setStyle(panelElement, {\n      'width': formatUnit(this.setXYDimensions(panelModel)[1])\n    });\n  };\n  DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n    var cellElement;\n    this.dimensions = this.setXYDimensions(panel);\n    if (isUndefined(panel.enabled)) {\n      panel.enabled = true;\n    }\n    if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n      cellElement = this.contentTemplateChild[index];\n      if (panel.cssClass) {\n        addClass([cellElement], [panel.cssClass]);\n      }\n      if (panel.id) {\n        cellElement.setAttribute('id', panel.id);\n      }\n    } else {\n      cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n    }\n    cellElement.style.zIndex = '' + panel.zIndex;\n    this.element.appendChild(cellElement);\n    this.renderReactTemplates();\n    var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n    this.panelCollection.push(dashBoardCell);\n    this.setXYAttributes(cellElement, panel);\n    this.setHeightAndWidth(cellElement, panel);\n    return cellElement;\n  };\n  DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n    if (!cellElement) {\n      return;\n    }\n    if (this.checkMediaQuery()) {\n      this.calculateCellSize();\n    }\n    var heightValue = this.getCellSize()[1];\n    var widthValue = this.getCellSize()[0];\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n    if (this.checkMediaQuery()) {\n      top = row === 0 ? 0 : this.panelsSizeY * (heightValue + this.cellSpacing[1]);\n    }\n    setStyle(cellElement, {\n      'left': left + 'px',\n      'top': top + 'px'\n    });\n  };\n  DashboardLayout.prototype.getRowColumn = function () {\n    this.rows = null;\n    if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n      var panelElements = this.element.querySelectorAll('.e-panel');\n      for (var i = 0; i < panelElements.length; i++) {\n        var panelElement = panelElements[i];\n        var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n        var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n        this.rows = Math.max(this.rows, rowValue + xValue);\n      }\n    } else {\n      if (this.updatedRows) {\n        this.rows = this.updatedRows;\n        this.updatedRows = null;\n      }\n      for (var i = 0; i < this.panels.length; i++) {\n        this.rows = Math.max(this.rows, this.panels[i].row);\n      }\n    }\n  };\n  DashboardLayout.prototype.setMinMaxValues = function (panel) {\n    if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.minSizeX\n      });\n    } else if (panel.maxSizeX && panel.sizeX > panel.maxSizeX) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.maxSizeX\n      });\n    } else if (panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: this.columns\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX\n      });\n    }\n    if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.minSizeY\n      });\n    } else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.maxSizeY\n      });\n    } else {\n      this.panelPropertyChange(panel, {\n        sizeY: panel.sizeY\n      });\n    }\n  };\n  DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n    if (panel.col + panel.sizeX > this.columns) {\n      this.panelPropertyChange(panel, {\n        sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX))\n      });\n    }\n  };\n  DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n    panel.setProperties(value, true);\n  };\n  DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n    if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n      for (var j = 0; j < cells.length; j++) {\n        this.gridPanelCollection.push(cells[j]);\n        this.setMinMaxValues(cells[j]);\n        if (this.maxColumnValue < cells[j].col || this.maxColumnValue < cells[j].col + cells[j].sizeX) {\n          this.panelPropertyChange(cells[j], {\n            col: this.maxColumnValue - cells[j].sizeX\n          });\n        }\n        var cell = this.renderCell(cells[j], false, j);\n        if (this.enableRtl) {\n          addClass([cell], 'e-rtl');\n        }\n        this.element.appendChild(cell);\n        this.renderReactTemplates();\n        if (this.checkMediaQuery() && j === cells.length - 1) {\n          this.checkMediaQuerySizing();\n        } else {\n          this.setPanelPosition(cell, cells[j].row, cells[j].col);\n          this.mainElement = cell;\n          this.updatePanelLayout(cell, cells[j]);\n          this.mainElement = null;\n        }\n      }\n    }\n    this.setClasses(this.panelCollection);\n  };\n  DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n    var items = [];\n    if (!sizeX || !sizeY) {\n      sizeX = sizeY = 1;\n    }\n    if (ignore && !(ignore instanceof Array)) {\n      ignore = [ignore];\n    }\n    var item;\n    for (var h = 0; h < sizeY; ++h) {\n      for (var w = 0; w < sizeX; ++w) {\n        item = this.getPanel(row + h, col + w, ignore);\n        if (item && (!ignore || ignore.indexOf(this.element.querySelector('[id=\\'' + item.id + '\\']')) === -1) && items.indexOf(this.element.querySelector('[id=\\'' + item.id + '\\']')) === -1) {\n          items.push(this.element.querySelector('[id=\\'' + item.id + '\\']'));\n        }\n      }\n    }\n    return items;\n  };\n  DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n    var columns = [];\n    var spacedColumns = [];\n    rowElements.forEach(function (element) {\n      var columnValue = parseInt(element.getAttribute('data-col'), 10);\n      var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n      if (col < _this.columns && columnValue >= col) {\n        if (sizeXValue > 1) {\n          for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(columnValue);\n        }\n      }\n    });\n    if (columns.length > 0) {\n      for (var i = col + 1; i <= this.columns - 1; i++) {\n        if (columns.indexOf(i) === -1 && i !== col) {\n          if (spacedColumns.indexOf(i) === -1) {\n            spacedColumns.push(i);\n          }\n        }\n      }\n    }\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, previous) {\n      return next - previous;\n    });\n    return spacedColumns;\n  };\n  DashboardLayout.prototype.getOccupiedColumns = function (element) {\n    var occupiedItems = [];\n    var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n    var col = parseInt(element.getAttribute('data-col'), 10);\n    for (var i = col; i < col + sizeX && i <= this.columns; i++) {\n      occupiedItems.push(i);\n    }\n    return occupiedItems;\n  };\n  DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n    var _this = this;\n    var spacedColumns = [];\n    var columns = [];\n    rowElements.forEach(function (element) {\n      var colValue = parseInt(element.getAttribute('data-col'), 10);\n      var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n      if (col <= _this.columns && colValue <= col) {\n        if (xValue > 1) {\n          for (var i = colValue; i < colValue + xValue; i++) {\n            columns.push(i);\n          }\n        } else {\n          columns.push(colValue);\n        }\n      }\n    });\n    if (columns.length > 0) {\n      for (var j = 0; j <= col; j++) {\n        if (columns.indexOf(j) === -1 && j !== col) {\n          if (spacedColumns.indexOf(j) === -1) {\n            spacedColumns.push(j);\n          }\n        }\n      }\n    }\n    var occupiedValues = this.getOccupiedColumns(ele);\n    occupiedValues.forEach(function (colValue) {\n      if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n        spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n      }\n    });\n    var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n    eleOccupiedValues.forEach(function (col) {\n      if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 && spacedColumns.indexOf(col) === -1) {\n        spacedColumns.push(col);\n      }\n    });\n    spacedColumns = spacedColumns.sort(function (next, prev) {\n      return next - prev;\n    });\n    spacedColumns = spacedColumns.reverse();\n    return spacedColumns;\n  };\n  DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n    this.leftAdjustable = undefined;\n    this.rightAdjustable = undefined;\n    var isAdjustable = false;\n    var rightSpacing;\n    var rowElement = [];\n    this.topAdjustable = undefined;\n    var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n    var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n    rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n    if (rowElement.indexOf(ele) === -1) {\n      rowElement.push(ele);\n    }\n    var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n    if (leftSpacing.length > 0) {\n      this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n      if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n        this.leftAdjustable = false;\n      }\n      if (this.leftAdjustable) {\n        this.rightAdjustable = false;\n      } else {\n        this.leftAdjustable = false;\n        rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n        this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n        if (this.spacedColumnValue !== eleSizeX + eleCol) {\n          this.rightAdjustable = false;\n        }\n        if (!this.rightAdjustable) {\n          this.rightAdjustable = false;\n        }\n      }\n    } else {\n      rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n      this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n      if (this.spacedColumnValue !== eleSizeX + eleCol) {\n        this.rightAdjustable = false;\n      }\n      if (this.rightAdjustable) {\n        this.leftAdjustable = false;\n      }\n    }\n    if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n      var endRow = this.getCellInstance(ele.id).row;\n      var topCheck = false;\n      if (this.startRow !== endRow) {\n        topCheck = true;\n      }\n      for (var rowValue = row; rowValue >= 0; rowValue--) {\n        var element = this.getCellInstance(ele.id).sizeY > 1 && topCheck ? this.checkingElement : ele;\n        if (rowValue !== endRow && rowValue === endRow - sizeY && this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n          topCheck = false;\n          this.topAdjustable = true;\n          this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n          this.spacedColumnValue = col;\n        }\n      }\n    }\n    if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n      isAdjustable = true;\n      if (isNullOrUndefined(this.spacedRowValue)) {\n        this.spacedRowValue = row;\n      }\n    }\n    return isAdjustable;\n  };\n  DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n    var isSpaceAvailable = false;\n    var subSpacingColumns = [];\n    for (var i = 0; i < spacing.length; i++) {\n      if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n        subSpacingColumns.push(spacing[i]);\n        if (sizeX === 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n        }\n        if (i === spacing.length - 2) {\n          subSpacingColumns.push(spacing[i + 1]);\n          if (subSpacingColumns.length > sizeX) {\n            subSpacingColumns.splice(-1);\n          }\n        }\n        if (subSpacingColumns.length === sizeX) {\n          isSpaceAvailable = true;\n          this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) {\n            return next - previous;\n          })[0];\n          if (this.spacedColumnValue < 0) {\n            this.spacedColumnValue = 1;\n          }\n          return isSpaceAvailable;\n        }\n      } else {\n        subSpacingColumns = [];\n        continue;\n      }\n    }\n    return isSpaceAvailable;\n  };\n  DashboardLayout.prototype.getRowElements = function (base) {\n    var rowElements = [];\n    for (var i = 0; i < base.length; i++) {\n      rowElements.push(base[i]);\n    }\n    return rowElements;\n  };\n  DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n    var isLeftAdjudtable;\n    if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n      this.spacedColumnValue = spaces[0];\n      isLeftAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n        if (spaces.length >= 1) {\n          xAdjust = true;\n        }\n        if (xAdjust) {\n          for (var i = 0; i < spaces.length; i++) {\n            var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n            if (collisionValue.length === 0) {\n              this.spacedColumnValue = spaces[i];\n              isLeftAdjudtable = true;\n              return isLeftAdjudtable;\n            } else {\n              isLeftAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n      }\n    }\n    return isLeftAdjudtable;\n  };\n  DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n    var isRightAdjudtable;\n    if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n      this.spacedColumnValue = spacing[0];\n      isRightAdjudtable = true;\n    } else if (sizeX > 1 && sizeY === 1) {\n      isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n    } else if (sizeY > 1) {\n      if (sizeX === 1) {\n        var xAdjust = void 0;\n        if (spacing.length >= 1) {\n          xAdjust = true;\n        }\n        if (xAdjust) {\n          for (var i = 0; i < spacing.length; i++) {\n            var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n            for (var collision = 0; collision < collisionValue.length; collision++) {\n              if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n              }\n            }\n            if (collisionValue.length === 0) {\n              isRightAdjudtable = true;\n              this.spacedColumnValue = spacing[i];\n              return isRightAdjudtable;\n            } else {\n              isRightAdjudtable = false;\n            }\n          }\n        }\n      } else {\n        isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n      }\n    }\n    return isRightAdjudtable;\n  };\n  DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n    var isRightAdjudtable;\n    var updatedCollision = [];\n    for (var j = 0; j < spacing.length; j++) {\n      var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n      if (xAdjust) {\n        var exclusions = [];\n        exclusions.push(this.checkingElement);\n        exclusions.push(ele);\n        if (updatedCollision.length === 0) {\n          isRightAdjudtable = true;\n          return isRightAdjudtable;\n        } else {\n          isRightAdjudtable = false;\n        }\n      }\n    }\n    return isRightAdjudtable;\n  };\n  DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n    var updatedCollision = [];\n    var rowElements;\n    var _loop_3 = function (row) {\n      rowElements = [];\n      collisionItems.forEach(function (element) {\n        if (element && element.getAttribute('data-row') === row.toString()) {\n          rowElements.push(element);\n        }\n      });\n      var _loop_4 = function (column) {\n        rowElements.forEach(function (item) {\n          if (item && item.getAttribute('data-col') === column.toString()) {\n            updatedCollision.push(item);\n          }\n        });\n      };\n      for (var column = this_2.columns - 1; column >= 0; column--) {\n        _loop_4(column);\n      }\n    };\n    var this_2 = this;\n    for (var row = this.rows - 1; row >= 0; row--) {\n      _loop_3(row);\n    }\n    return updatedCollision;\n  };\n  DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n    var _this = this;\n    var removeableElement = [];\n    if (!this.mainElement) {\n      this.sortedPanel();\n    }\n    collisionItems.forEach(function (element) {\n      _this.checkingElement = element;\n      var model = _this.getCellInstance(element.id);\n      var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n      if (model.sizeX > 1 && adjust) {\n        for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n          var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n          collisions.forEach(function (item) {\n            if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n              removeableElement.push(item);\n            }\n          });\n        }\n      }\n    });\n    removeableElement.forEach(function (item) {\n      if (removeableElement.indexOf(item) >= 0) {\n        collisionItems.splice(collisionItems.indexOf(item), 1);\n      }\n    });\n    return collisionItems;\n  };\n  DashboardLayout.prototype.resetLayout = function (model) {\n    var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n    if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n      return collisions;\n    }\n    if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n      for (var i = 0; i < this.panels.length; i++) {\n        var element = this.element.querySelector('[id=\\'' + this.panels[i].id + '\\']');\n        if (element === this.mainElement) {\n          continue;\n        }\n        var rowValue = this.cloneObject[element.id].row;\n        var colValue = this.cloneObject[element.id].col;\n        this.setPanelPosition(element, rowValue, colValue);\n        this.panelPropertyChange(this.getCellInstance(element.id), {\n          row: rowValue,\n          col: colValue\n        });\n        this.setAttributes({\n          value: {\n            col: colValue.toString(),\n            row: rowValue.toString()\n          }\n        }, element);\n        this.updateOldRowColumn();\n      }\n    }\n    this.sortedArray = this.cloneArray;\n    collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n    this.sortedPanel();\n    this.updateOldRowColumn();\n    if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 && this.cloneObject[this.checkCollision[0].id].row === model.row) {\n      collisions.push(this.checkCollision[0]);\n    }\n    return collisions;\n  };\n  DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n    var available = true;\n    var eleModel = this.getCellInstance(element.id);\n    for (var count = 0; count < collisions.length; count++) {\n      var collideModel = this.getCellInstance(collisions[count].id);\n      for (var i = 1; i < eleModel.sizeY; i++) {\n        var excludeEle = [];\n        excludeEle.push(element);\n        excludeEle.push(collisions[count]);\n        var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n        if (collision.length > 0) {\n          available = false;\n          return false;\n        } else {\n          continue;\n        }\n      }\n    }\n    return available;\n  };\n  DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n    if (!this.mainElement || collisions.length === 0) {\n      return false;\n    }\n    var direction;\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n    if (!this.swapAvailability(collisions, element)) {\n      return false;\n    }\n    var isSwappable = false;\n    for (var count1 = 0; count1 < collisions.length; count1++) {\n      if (collisions.length >= 1 && this.cloneObject[this.mainElement.id] && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n        return false;\n      }\n    }\n    var updatedRow = direction === 0 ? this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY : this.startRow;\n    for (var count = 0; count < collisions.length; count++) {\n      var collideInstance = this.getCellInstance(collisions[count].id);\n      var elementinstance = this.getCellInstance(element.id);\n      var ignore = [];\n      if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      } else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n        if (direction === 1 && elementinstance.row === this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1) {\n          ignore.push(collisions[count]);\n        } else if (direction === 0 && elementinstance.row === this.cloneObject[collideInstance.id].row) {\n          ignore.push(collisions[count]);\n        } else {\n          return false;\n        }\n      }\n      if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n        ignore.push(collisions[count]);\n      }\n      ignore.push(this.mainElement);\n      var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n      if (swapCollision.length > 0) {\n        isSwappable = false;\n        return isSwappable;\n      } else {\n        if (count === collisions.length - 1) {\n          isSwappable = true;\n        }\n        continue;\n      }\n    }\n    return isSwappable;\n  };\n  DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n    var _this = this;\n    var direction;\n    var swappedElements = [];\n    swappedElements.push(element);\n    var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n    if (this.startRow < eleSwapRow) {\n      direction = 1;\n    } else if (this.startRow > eleSwapRow) {\n      direction = 0;\n    }\n    var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n    if (!this.movePanelCalled) {\n      var collisionInstance = this.getCellInstance(collisions[0].id);\n      this.panelPropertyChange(panelModel, {\n        row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY\n      });\n    }\n    for (var count = 0; count < collisions.length; count++) {\n      swappedElements.push(collisions[count]);\n      this.setPanelPosition(collisions[count], collisionItemsRow, this.getCellInstance(collisions[count].id).col);\n      this.panelPropertyChange(this.getCellInstance(collisions[count].id), {\n        row: collisionItemsRow\n      });\n      collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n    }\n    element.setAttribute('data-row', panelModel.row.toString());\n    this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n    for (var i = 0; i < this.panels.length; i++) {\n      this.oldRowCol[this.panels[i].id] = {\n        row: this.panels[i].row,\n        col: this.panels[i].col\n      };\n    }\n    this.startRow = panelModel.row;\n    this.updateOldRowColumn();\n    swappedElements.forEach(function (item) {\n      _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n      var itemModel = _this.getCellInstance(item.id);\n      for (var i = 0; i < _this.sortedArray.length; i++) {\n        if (!_this.sortedArray[i]) {\n          continue;\n        }\n        for (var j = 0; j < _this.sortedArray[i].length; j++) {\n          if (_this.sortedArray[i][j] === item) {\n            _this.sortedArray[i][j] = undefined;\n          }\n        }\n      }\n      if (!_this.sortedArray[itemModel.row]) {\n        _this.sortedArray[itemModel.row] = [];\n      }\n      _this.sortedArray[itemModel.row][itemModel.col] = item;\n      _this.cloneArray = _this.sortedArray;\n    });\n  };\n  DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n    var _this = this;\n    this.collisionChecker = {};\n    var initialModel = [];\n    var checkForAdjustment;\n    var collisionModels = [];\n    var swappingAvailable;\n    if (this.mainElement && this.isRenderComplete) {\n      initialModel = this.resetLayout(panelModel);\n    } else {\n      initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n    }\n    if (initialModel.length > 0) {\n      initialModel = this.sortCollisionItems(initialModel);\n      initialModel = this.updatedModels(initialModel, panelModel, element);\n      swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n      if (swappingAvailable) {\n        this.swapItems(initialModel, element, panelModel);\n      } else {\n        for (var i = 0; i < initialModel.length; i++) {\n          var model = this.getCellInstance(initialModel[i].id);\n          this.checkingElement = initialModel[i];\n          this.spacedRowValue = null;\n          this.spacedColumnValue = null;\n          checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n          if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n            this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n            this.oldRowCol[initialModel[i].id] = {\n              row: this.spacedRowValue,\n              col: this.spacedColumnValue\n            };\n            var value = {\n              attributes: {\n                row: this.spacedRowValue.toString(),\n                col: this.spacedColumnValue.toString()\n              }\n            };\n            this.setAttributes(value, initialModel[i]);\n            this.panelPropertyChange(model, {\n              col: this.spacedColumnValue,\n              row: this.spacedRowValue\n            });\n            // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n            if (this.topAdjustable && this.allowFloating) {\n              this.updatePanels();\n              this.updateCloneArrayObject();\n            }\n            this.spacedRowValue = null;\n            if (i < initialModel.length) {\n              continue;\n            }\n          } else {\n            collisionModels.push(initialModel[i]);\n          }\n        }\n      }\n    }\n    if (collisionModels.length > 0) {\n      collisionModels.forEach(function (item1) {\n        if (_this.overlapElement.indexOf(item1) === -1) {\n          _this.overlapElement.push(item1);\n        }\n      });\n      if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n        this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n      }\n      if (collisionModels.length > 0) {\n        this.updateRowColumn(panelModel.row, this.overlapElement, element);\n        this.checkForCompletePushing();\n      }\n    }\n    if (!this.isSubValue) {\n      this.sortedPanel();\n    }\n    this.updateRowHeight();\n    this.updateGridLines();\n  };\n  DashboardLayout.prototype.checkForCompletePushing = function () {\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n        this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n        var key = this.panels[i].id;\n        this.updateRowColumn(this.collisionChecker[\"\" + key].row, this.overlapElement, this.collisionChecker[\"\" + key].srcEle);\n      }\n    }\n  };\n  DashboardLayout.prototype.updateCollisionChecked = function (item) {\n    for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n      this.collisionChecker[item.id] = null;\n    }\n  };\n  DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n    if (!srcEle) {\n      return;\n    }\n    var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n    var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n    this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n    for (var i = 0; i < this.overlapElementClone.length; i++) {\n      if (this.overlapElementClone.length === 0) {\n        return;\n      }\n      for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n        this.collisionChecker[this.overlapElementClone[i_1].id] = {\n          ele: this.overlapElementClone[i_1],\n          row: row,\n          srcEle: srcEle\n        };\n      }\n      var updatedRow = eleRow + eleSizeY;\n      var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n      var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n      var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n      var colValue = void 0;\n      var collisionModels = void 0;\n      if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n        this.overlapSubElementClone.push(srcEle);\n      }\n      if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n        this.overlapSubElementClone.push(this.overlapElementClone[i]);\n      }\n      if (collisionY > 1 || collisionX > 1) {\n        var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n        colValue = overlapElementModel.col;\n        var ele_1 = document.getElementById(overlapElementModel.id);\n        for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n          this.isSubValue = true;\n          this.panelPropertyChange(overlapElementModel, {\n            row: overlapElementModel.row + 1\n          });\n          ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n          this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n          this.updateCollisionChecked(ele_1);\n          this.oldRowCol[ele_1.id] = {\n            row: overlapElementModel.row,\n            col: colValue\n          };\n          var panelModel = this.getCellInstance(ele_1.id);\n          this.panelPropertyChange(panelModel, {\n            col: colValue,\n            row: overlapElementModel.row\n          });\n          var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n          var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n          var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n          var excludeElements = [];\n          excludeElements.push(ele_1);\n          excludeElements.push(srcEle);\n          collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n          if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n            collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n          }\n          this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n        }\n        this.isSubValue = false;\n      } else {\n        if (this.addPanelCalled) {\n          this.addPanelCalled = false;\n        }\n        this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n        var excludeEle = [];\n        excludeEle.push(this.overlapElementClone[i]);\n        excludeEle.push(srcEle);\n        collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n        if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n          collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n        }\n        colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n        this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n        this.updateCollisionChecked(this.overlapElementClone[i]);\n        this.oldRowCol[this.overlapElementClone[i].id] = {\n          row: updatedRow,\n          col: colValue\n        };\n        var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n        this.panelPropertyChange(panelModel, {\n          col: colValue,\n          row: updatedRow\n        });\n        this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n      }\n    }\n  };\n  DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n    var _this = this;\n    var panelModel = this.getCellInstance(clone.id);\n    this.panelPropertyChange(panelModel, {\n      row: updatedRow,\n      col: colValue\n    });\n    if (collisionModels.length > 0) {\n      this.overlapElement = [];\n      this.shouldRestrict = true;\n      collisionModels.forEach(function (item1) {\n        _this.overlapElement.push(item1);\n      });\n      var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n      for (var m = 0; m < this.overlapElement.length; m++) {\n        this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n      }\n      this.shouldRestrict = false;\n    } else {\n      if (!this.addPanelCalled) {\n        this.sortedPanel();\n      }\n      if (this.overlapSubElementClone.length > 0) {\n        for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n          var rowVal = parseInt(this.overlapSubElementClone[p].getAttribute('data-row'), 10);\n          var colValue_1 = parseInt(this.overlapSubElementClone[p].getAttribute('data-col'), 10);\n          var sizeX = parseInt(this.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n          var sizeY = parseInt(this.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n          var collisionModels1 = this.collisions(rowVal, colValue_1, sizeX, sizeY, this.overlapSubElementClone);\n          if (this.mainElement && collisionModels1.indexOf(this.mainElement) !== -1) {\n            collisionModels1.splice(collisionModels1.indexOf(this.mainElement), 1);\n          }\n          collisionModels1.forEach(function (item1) {\n            _this.overlapElement.push(item1);\n          });\n          if (collisionModels1.length > 0) {\n            this.updateRowColumn(rowVal, this.overlapElement, this.overlapSubElementClone[p]);\n          }\n        }\n      }\n      this.overlapSubElementClone = [];\n    }\n  };\n  DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n    for (var i = 0; i < panelElements.length; i++) {\n      var element = panelElements[i];\n      var resizerElements = element.querySelectorAll('.e-resize');\n      for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n        detach(resizerElements[i_2]);\n      }\n    }\n  };\n  DashboardLayout.prototype.ensureDrag = function () {\n    this.checkDragging(this.dragCollection);\n    var dragPanels = this.element.querySelectorAll('.' + drag);\n    removeClass(dragPanels, [drag]);\n    this.setClasses(this.panelCollection);\n  };\n  DashboardLayout.prototype.setClasses = function (panelCollection) {\n    for (var i = 0; i < panelCollection.length; i++) {\n      var element = panelCollection[i];\n      var containerEle = panelCollection[i].querySelector('.e-panel-container');\n      if (this.allowDragging) {\n        if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n          addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n        } else {\n          addClass([element], [drag]);\n        }\n      }\n      if (this.allowResizing && this.mediaQuery ? !this.checkMediaQuery() : false) {\n        this.setResizingClass(element, containerEle);\n      }\n    }\n  };\n  DashboardLayout.prototype.setResizingClass = function (ele, container) {\n    this.availableClasses = this.resizableHandles;\n    if (!ele.querySelector('.e-resize')) {\n      for (var j = 0; j < this.availableClasses.length; j++) {\n        var spanEle = this.createElement('span');\n        var addClassValue = void 0;\n        container.appendChild(spanEle);\n        if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' || this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n          addClassValue = single;\n        } else {\n          addClassValue = double;\n        }\n        addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n      }\n    }\n  };\n  DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n    var value = {\n      value: {\n        sizeX: !isNullOrUndefined(panelModel.sizeX) ? panelModel.sizeX.toString() : undefined,\n        sizeY: !isNullOrUndefined(panelModel.sizeY) ? panelModel.sizeY.toString() : undefined,\n        minSizeX: !isNullOrUndefined(panelModel.minSizeX) ? panelModel.minSizeX.toString() : undefined,\n        minSizeY: !isNullOrUndefined(panelModel.minSizeY) ? panelModel.minSizeY.toString() : undefined,\n        maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n        maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n        row: !isNullOrUndefined(panelModel.row) ? panelModel.row.toString() : undefined,\n        col: !isNullOrUndefined(panelModel.col) ? panelModel.col.toString() : undefined\n      }\n    };\n    this.setAttributes(value, element);\n  };\n  DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n    var cellHeight = this.getCellSize()[1];\n    var cellWidth = this.getCellSize()[0];\n    var widthValue;\n    var heigthValue;\n    if (panelModel && typeof cellWidth === 'number' && typeof panelModel.sizeX === 'number' && panelModel.sizeX > 1) {\n      widthValue = panelModel.sizeX * cellWidth + (panelModel.sizeX - 1) * this.cellSpacing[0];\n    } else {\n      widthValue = cellWidth;\n    }\n    if (panelModel && typeof cellHeight === 'number' && panelModel.sizeY > 1 && typeof panelModel.sizeY === 'number') {\n      heigthValue = panelModel.sizeY * cellHeight + (panelModel.sizeY - 1) * this.cellSpacing[1];\n    } else {\n      heigthValue = formatUnit(cellHeight);\n    }\n    return [heigthValue, widthValue];\n  };\n  DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n    var value = [];\n    var elementTop = parseFloat(args.element.style.top);\n    var elementLeft = parseFloat(args.element.style.left);\n    var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n    var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n    value = [row, col];\n    return value;\n  };\n  DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n    var changedPanels = [];\n    if (this.removeAllCalled) {\n      changedPanels = [];\n    } else {\n      for (var i = 0; i < this.panels.length; i++) {\n        if ((!isNullOrUndefined(added) ? this.panels[i].id !== added[0].id : true) && (!isNullOrUndefined(removed) ? this.panels[i].id !== removed[0].id : true) && (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n          changedPanels.push(this.panels[i]);\n        }\n      }\n    }\n    if (changedPanels.length > 0 || this.removeAllCalled) {\n      var changedArgs = {\n        changedPanels: changedPanels,\n        isInteracted: isInteracted,\n        addedPanels: !isNullOrUndefined(added) ? added : [],\n        removedPanels: !isNullOrUndefined(removed) ? removed : []\n      };\n      this.trigger('change', changedArgs);\n    }\n  };\n  DashboardLayout.prototype.enableDraggingContent = function (collections) {\n    var _this = this;\n    var _loop_5 = function (i) {\n      var abortArray = ['.e-resize', '.' + dragRestrict];\n      var cellElement = collections[i];\n      {\n        this_3.dragobj = new Draggable(cellElement, {\n          preventDefault: false,\n          clone: false,\n          dragArea: this_3.element,\n          isDragScroll: true,\n          handle: this_3.draggableHandle ? this_3.draggableHandle : '.e-panel',\n          abort: abortArray,\n          dragStart: this_3.onDraggingStart.bind(this_3),\n          dragStop: function (args) {\n            _this.trigger('dragStop', args);\n            if (isNullOrUndefined(args.cancel)) {\n              args.cancel = false;\n            }\n            if (!args.cancel) {\n              var model = _this.getCellInstance(_this.mainElement.id);\n              if (_this.allowPushing && _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                _this.setHolderPosition(args);\n                _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                _this.updatePanelLayout(_this.mainElement, model);\n              } else {\n                _this.setPanelPosition(_this.mainElement, model.row, model.col);\n              }\n              _this.mainElement = null;\n              var item = _this.getPanelBase(args);\n              if (_this.shadowEle) {\n                detach(_this.shadowEle);\n              }\n              removeClass([_this.element], [preventSelect]);\n              removeClass([args.element], [dragging]);\n              _this.shadowEle = null;\n              args.element.classList.remove('e-dragging');\n              var row = _this.getRowColumnDragValues(args)[0];\n              var col = _this.getRowColumnDragValues(args)[1];\n              var panelModel = _this.getCellInstance(args.element.id);\n              if (_this.allowPushing && _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                  row: row,\n                  col: col\n                });\n                _this.oldRowCol[args.element.id].row = row;\n                _this.oldRowCol[args.element.id].col = col;\n                _this.setAttributes({\n                  value: {\n                    col: col.toString(),\n                    row: row.toString()\n                  }\n                }, args.element);\n                _this.sortedPanel();\n              } else {\n                _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                  row: _this.oldRowCol[args.element.id].row,\n                  col: _this.oldRowCol[args.element.id].col\n                });\n                args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                _this.sortedPanel();\n              }\n              var panelInstance = _this.getCellInstance(args.element.id);\n              _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n              _this.updatePanels();\n              _this.updateCloneArrayObject();\n              _this.checkForChanges(true);\n              _this.dragStopEventArgs = {\n                event: args.event,\n                element: args.element\n              };\n              _this.resizeEvents();\n              _this.rows = _this.maxRow(true);\n              _this.setHeightWidth();\n              _this.updateDragArea();\n            } else {\n              var currentPanel = _this.getCellInstance(_this.mainElement.id);\n              for (i = 0; i < _this.panels.length; i++) {\n                if (_this.panels[i].id === currentPanel.id) {\n                  args.element.setAttribute('data-col', _this.panelsInitialModel[i].col.toString());\n                  args.element.setAttribute('data-row', _this.panelsInitialModel[i].row.toString());\n                  currentPanel.col = _this.panelsInitialModel[i].col;\n                  currentPanel.row = _this.panelsInitialModel[i].row;\n                  _this.setPanelPosition(_this.mainElement, _this.panelsInitialModel[i].row, _this.panelsInitialModel[i].col);\n                  _this.updatePanelLayout(_this.mainElement, currentPanel);\n                }\n              }\n              if (_this.shadowEle) {\n                detach(_this.shadowEle);\n              }\n            }\n          },\n          drag: function (args) {\n            _this.draggedEventArgs = {\n              event: args.event,\n              element: args.element,\n              target: closest(args.target, '.e-panel')\n            };\n            _this.trigger('drag', _this.draggedEventArgs);\n            _this.onDragStart(args);\n          }\n        });\n        if (this_3.dragCollection.indexOf(this_3.dragobj) === -1) {\n          this_3.dragCollection.push(this_3.dragobj);\n        }\n      }\n      out_i_1 = i;\n    };\n    var this_3 = this,\n      out_i_1;\n    for (var i = 0; i < collections.length; i++) {\n      _loop_5(i);\n      i = out_i_1;\n    }\n  };\n  DashboardLayout.prototype.updatePanels = function () {\n    this.moveItemsUpwards();\n    this.updateOldRowColumn();\n    this.sortedPanel();\n  };\n  DashboardLayout.prototype.updateDragArea = function () {\n    this.dragCollection.forEach(function (dragobj) {\n      dragobj.setDragArea();\n    });\n  };\n  /**\n   * Method to update the draggable handle when draggable panel elements are bound dynamically.\n   *\n   * @returns void\n   *\n   */\n  DashboardLayout.prototype.refreshDraggableHandle = function () {\n    if (this.dragCollection && this.dragCollection.length > 0) {\n      for (var i = 0; i < this.dragCollection.length; i++) {\n        this.dragCollection[i].destroy();\n        EventHandler.clearEvents(this.dragCollection[i].element);\n      }\n      this.ensureDrag();\n    }\n  };\n  DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n    if (row + sizeY >= this.rows) {\n      this.rows = this.rows + addRows;\n      this.setHeightWidth();\n    }\n  };\n  DashboardLayout.prototype.onDraggingStart = function (args) {\n    var dragArgs = args;\n    this.trigger('dragStart', dragArgs, function () {\n      if (isNullOrUndefined(args.cancel)) {\n        args.cancel = false;\n      }\n    });\n    this.eventVar = args.cancel;\n    if (!args.cancel) {\n      this.panelsInitialModel = this.cloneModels(this.panels);\n      this.mainElement = args.element;\n      this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n      var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n      this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n      var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n      this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n      this.updateDragArea();\n      this.shadowEle = document.createElement('div');\n      this.shadowEle.classList.add('e-holder');\n      this.shadowEle.classList.add('e-holder-transition');\n      setStyle(this.shadowEle, {\n        'position': 'absolute'\n      });\n      addClass([this.element], [preventSelect]);\n      addClass([args.element], [dragging]);\n      this.element.appendChild(this.shadowEle);\n      this.renderReactTemplates();\n      this.shadowEle = document.querySelector('.e-holder');\n      this.shadowEle.style.height = this.getCellInstance(args.element.id).sizeY * this.cellSize[1] + 'px';\n      this.shadowEle.style.width = this.getCellInstance(args.element.id).sizeX * this.cellSize[0] + 'px';\n      var panelInstance = this.getCellInstance(args.element.id);\n      this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    } else {\n      removeClass([this.element], [preventSelect]);\n      removeClass([args.element], [dragging]);\n    }\n  };\n  DashboardLayout.prototype.cloneModels = function (source, target) {\n    if (target === undefined) {\n      target = [];\n    }\n    for (var i = 0; i < source.length; i++) {\n      if (!target[i]) {\n        target[i] = {};\n      }\n      // eslint-disable-next-line guard-for-in\n      for (var k in source[i]) {\n        target[i][\"\" + k] = source[i][\"\" + k];\n      }\n    }\n    return target;\n  };\n  DashboardLayout.prototype.onDragStart = function (args) {\n    var endCol;\n    var endRow;\n    var dragCol;\n    if (!this.eventVar) {\n      var col = dragCol = this.getRowColumnDragValues(args)[1];\n      var row = this.getRowColumnDragValues(args)[0];\n      if (col < 0 || row < 0) {\n        return;\n      }\n      this.panelPropertyChange(this.getCellInstance(args.element.id), {\n        row: row,\n        col: col\n      });\n      var panelModel = this.getCellInstance(args.element.id);\n      this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n      this.updateDragArea();\n      if (this.allowPushing) {\n        this.setAttributes({\n          value: {\n            col: col.toString(),\n            row: row.toString()\n          }\n        }, args.element);\n        this.panelPropertyChange(this.getCellInstance(args.element.id), {\n          row: row,\n          col: col\n        });\n        endCol = this.oldRowCol[args.element.id].col;\n        endRow = this.oldRowCol[args.element.id].row;\n        this.oldRowCol[args.element.id] = {\n          row: row,\n          col: col\n        };\n        this.updateOldRowColumn();\n        if (this.startCol !== endCol || this.startRow !== endRow) {\n          this.setHolderPosition(args);\n          if (this.startCol !== endCol) {\n            this.startRow = endRow;\n          }\n          if (this.startRow !== endRow) {\n            this.startCol = endCol;\n          }\n          if (this.allowPushing) {\n            this.mainElement = args.element;\n            var model = panelModel;\n            this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n            if (panelModel.col >= 0 || panelModel.col >= this.checkColumnValue) {\n              this.checkCollision = [];\n            }\n            this.updatePanelLayout(args.element, panelModel);\n            this.moveItemsUpwards();\n          }\n        }\n      }\n      if (this.allowPushing !== false) {\n        this.panelPropertyChange(this.getCellInstance(args.element.id), {\n          row: row,\n          col: col\n        });\n      }\n      if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n        this.panelPropertyChange(this.getCellInstance(args.element.id), {\n          row: row,\n          col: col\n        });\n        this.setAttributes({\n          value: {\n            col: col.toString(),\n            row: row.toString()\n          }\n        }, args.element);\n      }\n      if (this.startCol !== dragCol) {\n        this.startCol = endCol;\n        this.moveItemsUpwards();\n      }\n      if (!this.allowPushing) {\n        this.setHolderPosition(args);\n      }\n      this.removeResizeClasses(this.panelCollection);\n      this.setClasses(this.panelCollection);\n      if (this.allowPushing === false) {\n        return;\n      }\n    } else {\n      this.dragobj.intDestroy(args.event);\n      removeClass([this.element], [preventSelect]);\n      removeClass([args.element], [dragging]);\n    }\n  };\n  DashboardLayout.prototype.getPanelBase = function (args) {\n    var item;\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === (args.element && args.element.id || args)) {\n        item = this.panelCollection[i];\n      }\n    }\n    return item;\n  };\n  DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n    if (excludeItems && !(excludeItems instanceof Array)) {\n      excludeItems = [excludeItems];\n    }\n    var sizeY = 1;\n    while (row > -1) {\n      var sizeX = 1;\n      var col = column;\n      while (col > -1) {\n        var items = this.sortedArray[row];\n        if (items) {\n          var item = items[col];\n          if (item && (!excludeItems || excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n            return item;\n          }\n        }\n        ++sizeX;\n        --col;\n      }\n      --row;\n      ++sizeY;\n    }\n    return null;\n  };\n  DashboardLayout.prototype.setHolderPosition = function (args) {\n    var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n    var col = parseInt(args.element.getAttribute('data-col'), 10);\n    var row = parseInt(args.element.getAttribute('data-row'), 10);\n    var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n    var widthValue = this.getCellSize()[0];\n    var heightValue = this.getCellSize()[1];\n    var top = row === 0 ? 0 : row * (heightValue + this.cellSpacing[1]);\n    var left = col === 0 ? 0 : col * (widthValue + this.cellSpacing[0]);\n    var cellSizeOne = this.getCellSize()[1];\n    var cellSizeZero = this.getCellSize()[0];\n    this.elementRef.top = this.shadowEle.style.top = top + 'px';\n    this.elementRef.left = this.shadowEle.style.left = left + 'px';\n    this.elementRef.height = this.shadowEle.style.height = sizeY * cellSizeOne + (sizeY - 1) * this.cellSpacing[1] + 'px';\n    this.elementRef.width = this.shadowEle.style.width = sizeX * cellSizeZero + (sizeX - 1) * this.cellSpacing[0] + 'px';\n  };\n  DashboardLayout.prototype.getCellInstance = function (idValue) {\n    var currentCellInstance;\n    for (var i = 0; i < this.panels.length; i++) {\n      if (this.panels[i].id === idValue) {\n        currentCellInstance = this.panels[i];\n      }\n    }\n    return currentCellInstance;\n  };\n  /**\n   * Allows to add a panel to the Dashboardlayout.\n   *\n   * @param {panel} panel -  Defines the panel element.\n   *\n   * @returns void\n    */\n  DashboardLayout.prototype.addPanel = function (panel) {\n    this.panelsSizeY = 0;\n    this.maxCol();\n    if (!panel.minSizeX) {\n      panel.minSizeX = 1;\n    }\n    if (!panel.minSizeY) {\n      panel.minSizeY = 1;\n    }\n    if (!panel.id) {\n      panel.id = 'layout_' + this.panelID.toString();\n      this.panelID = this.panelID + 1;\n    }\n    var panelProp = new Panel(this, 'panels', panel, true);\n    this.panels.push(panelProp);\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    this.setMinMaxValues(panelProp);\n    if (this.maxColumnValue < panelProp.col || this.maxColumnValue < panelProp.col + panelProp.sizeX) {\n      this.panelPropertyChange(panelProp, {\n        col: this.maxColumnValue - panelProp.sizeX\n      });\n    }\n    var cell = this.renderCell(panelProp, true, null);\n    this.oldRowCol[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.cloneObject[panelProp.id] = {\n      row: panelProp.row,\n      col: panelProp.col\n    };\n    this.updateOldRowColumn();\n    this.element.insertAdjacentElement('afterbegin', cell);\n    this.addPanelCalled = true;\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n      this.removeResizeClasses(this.panelCollection);\n    } else {\n      this.mainElement = cell;\n      if (!this.checkCollision) {\n        this.checkCollision = [];\n      }\n      this.setPanelPosition(cell, panelProp.row, panelProp.col);\n      this.addPanelCalled = false;\n      this.updatePanelLayout(cell, panelProp);\n    }\n    if (this.addPanelCalled) {\n      this.addPanelCalled = false;\n    }\n    if (this.allowDragging && this.mediaQuery ? !this.checkMediaQuery() : false) {\n      this.enableDraggingContent([document.getElementById(panelProp.id)]);\n    }\n    this.setClasses([cell]);\n    if (this.allowFloating) {\n      this.mainElement = null;\n      this.moveItemsUpwards();\n    }\n    this.updateOldRowColumn();\n    this.sortedPanel();\n    this.updateCloneArrayObject();\n    if (this.allowResizing) {\n      for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n        var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n        EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n        if (Browser.info.name !== 'msie') {\n          EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n        }\n      }\n    }\n    this.checkForChanges(false, [panelProp]);\n  };\n  /**\n   * Allows to update a panel in the DashboardLayout.\n   *\n   * @param {panel} panel - Defines the panel element.\n   *\n   * @returns void\n    */\n  DashboardLayout.prototype.updatePanel = function (panel) {\n    this.panelsSizeY = 0;\n    if (!panel.id) {\n      return;\n    }\n    var panelInstance = this.getCellInstance(panel.id);\n    if (!panelInstance) {\n      return;\n    }\n    this.maxCol();\n    panel.col = panel.col < 1 ? 0 : panel.col > this.columns ? this.columns - 1 : panel.col;\n    if (isNullOrUndefined(panel.col)) {\n      panel.col = panelInstance.col;\n    }\n    this.panelPropertyChange(panelInstance, panel);\n    this.setMinMaxValues(panelInstance);\n    var cell = document.getElementById(panel.id);\n    this.mainElement = cell;\n    var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n    this.panelContent = cell.querySelector('.e-panel-container') ? cell.querySelector('.e-panel-container') : this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n    cell.appendChild(this.panelContent);\n    if (panelInstance.header) {\n      var headerTemplateElement = cell.querySelector('.e-panel-header') ? cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n      addClass([headerTemplateElement], [header]);\n      headerTemplateElement.innerHTML = '';\n      var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n      this.panelContent.appendChild(headerTemplateElement);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-header')) {\n        detach(cell.querySelector('.e-panel-header'));\n      }\n    }\n    if (panelInstance.content) {\n      var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n      this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') : this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n      this.panelBody.innerHTML = '';\n      var headerHeight = this.panelContent.querySelector('.e-panel-header') ? window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n      var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n      setStyle(this.panelBody, {\n        height: contentHeightValue\n      });\n      var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n      this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n      this.panelContent.appendChild(this.panelBody);\n      this.renderReactTemplates();\n    } else {\n      if (cell.querySelector('.e-panel-content')) {\n        detach(cell.querySelector('.e-panel-content'));\n      }\n    }\n    this.setXYAttributes(cell, panelInstance);\n    this.setHeightAndWidth(cell, panelInstance);\n    this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n    this.updatePanelLayout(cell, panelInstance);\n    if (this.checkMediaQuery()) {\n      this.checkMediaQuerySizing();\n    }\n    this.mainElement = null;\n    this.updatePanels();\n    this.updateCloneArrayObject();\n  };\n  DashboardLayout.prototype.updateCloneArrayObject = function () {\n    this.cloneArray = this.sortedArray;\n    this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n  };\n  /**\n   * Returns the panels object of the DashboardLayout.\n   *\n   * @returns [`PanelModel[]`](./panelModel)\n   */\n  DashboardLayout.prototype.serialize = function () {\n    var cloneModel = this.cloneModels(this.panels);\n    var customObject = [];\n    for (var i = 0; i < cloneModel.length; i++) {\n      customObject.push({\n        id: cloneModel[i].id,\n        row: cloneModel[i].row,\n        col: cloneModel[i].col,\n        sizeX: cloneModel[i].sizeX,\n        sizeY: cloneModel[i].sizeY,\n        minSizeX: cloneModel[i].minSizeX,\n        minSizeY: cloneModel[i].minSizeY,\n        maxSizeX: cloneModel[i].maxSizeX,\n        maxSizeY: cloneModel[i].maxSizeY\n      });\n    }\n    return customObject;\n  };\n  /**\n   * Removes all the panels from the DashboardLayout.\n   */\n  DashboardLayout.prototype.removeAll = function () {\n    this.removeAllCalled = true;\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      detach(this.panelCollection[i]);\n      this.clearTemplate();\n    }\n    this.removeAllPanel();\n    this.rows = 0;\n    this.gridPanelCollection = [];\n    this.setHeightWidth();\n    this.sortedPanel();\n    this.sortedArray = [];\n    this.overlapElementClone = [];\n    this.overlapElement = [];\n    this.overlapSubElementClone = [];\n    this.panelCollection = [];\n    this.oldRowCol = {};\n    this.cloneObject = {};\n    var clonedPanels = this.cloneModels(this.panels);\n    this.setProperties({\n      panels: []\n    }, true);\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, clonedPanels);\n    this.removeAllCalled = false;\n  };\n  /**\n   * Removes the panel from the DashboardLayout.\n   *\n   * @param {string} id -  Defines the panel ID.\n   *\n   * @returns void\n   */\n  DashboardLayout.prototype.removePanel = function (id) {\n    var _this = this;\n    this.panelsSizeY = 0;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var removedPanel;\n    for (var i = 0; i < this.panelCollection.length; i++) {\n      if (this.panelCollection[i].id === id) {\n        detach(this.panelCollection[i]);\n        this.panelCollection.splice(i, 1);\n      }\n      if (this.panels[i].id === id) {\n        removedPanel = this.panels[i];\n        this.panels.splice(i, 1);\n        this.panelsInitialModel.splice(i, 1);\n        this.updateOldRowColumn();\n        this.sortedPanel();\n      }\n    }\n    this.updatePanels();\n    if (this.checkMediaQuery()) {\n      this.isPanelRemoved = true;\n      this.checkMediaQuerySizing();\n      this.isPanelRemoved = false;\n    }\n    this.gridPanelCollection.forEach(function (item) {\n      if (item.id === id) {\n        _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n      }\n    });\n    this.updateCloneArrayObject();\n    this.checkForChanges(false, null, [removedPanel]);\n  };\n  /**\n   *Moves the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param  {number} row - Defines the row of dashboard layout.\n   *\n   * @param {number} col - Defines the column of dashboard layout.\n   *\n   * @returns void\n   */\n  DashboardLayout.prototype.movePanel = function (id, row, col) {\n    this.movePanelCalled = true;\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n    if (isNaN(row) || row === null || isNaN(col) || col === null || !panelInstance) {\n      return;\n    }\n    if (col < 0) {\n      col = 0;\n    } else if (col > this.columns) {\n      col = this.columns - panelInstance.sizeX;\n    }\n    this.panelPropertyChange(panelInstance, {\n      row: row,\n      col: col\n    });\n    var ele = document.getElementById(id);\n    this.mainElement = ele;\n    this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n    this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n    this.setAttributes({\n      value: {\n        col: col.toString(),\n        row: row.toString()\n      }\n    }, ele);\n    this.updateOldRowColumn();\n    this.setPanelPosition(ele, row, col);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updateRowHeight();\n    this.updatePanels();\n    this.updateCloneArrayObject();\n    this.mainElement = null;\n    if (this.allowFloating) {\n      this.moveItemsUpwards();\n    }\n    this.movePanelCalled = false;\n    this.checkForChanges(false);\n  };\n  DashboardLayout.prototype.setAttributes = function (value, ele) {\n    for (var i = 0; i < Object.keys(value).length; i++) {\n      if (Object.keys(value)) {\n        if (value[Object.keys(value)[i]].col) {\n          ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n        }\n        if (value[Object.keys(value)[i]].row) {\n          ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n        }\n        if (value[Object.keys(value)[i]].sizeX) {\n          ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n        }\n        if (value[Object.keys(value)[i]].sizeY) {\n          ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n        }\n        if (value[Object.keys(value)[i]].minSizeX) {\n          ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n        }\n        if (value[Object.keys(value)[i]].minSizeY) {\n          ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n        }\n        if (value[Object.keys(value)[i]].maxSizeX) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n        }\n        if (value[Object.keys(value)[i]].maxSizeY) {\n          ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n        }\n      }\n    }\n  };\n  /**\n   * Resize the panel in the DashboardLayout.\n   *\n   * @param {string} id - Defines the panel ID.\n   *\n   * @param {number} sizeX - Defines the sizeX of dashboard layout.\n   *\n   * @param {number} sizeY - Defines the sizeY of dashboard layout.\n   */\n  DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n    this.panelsInitialModel = this.cloneModels(this.panels);\n    var panelInstance = this.getCellInstance(id);\n    this.resizeCalled = true;\n    var ele = document.getElementById(id);\n    var args = {\n      event: null,\n      element: ele,\n      isInteracted: false\n    };\n    this.trigger('resizeStart', args);\n    this.panelPropertyChange(panelInstance, {\n      sizeX: sizeX,\n      sizeY: sizeY\n    });\n    this.setMinMaxValues(panelInstance);\n    this.checkMinMaxValues(panelInstance);\n    this.mainElement = ele;\n    this.setAttributes({\n      value: {\n        sizeX: panelInstance.sizeX.toString(),\n        sizeY: panelInstance.sizeY.toString()\n      }\n    }, ele);\n    this.setHeightAndWidth(ele, panelInstance);\n    this.updatePanelLayout(ele, panelInstance);\n    this.updatePanels();\n    this.updateRowHeight();\n    this.resizeCalled = false;\n    this.trigger('resizeStop', args);\n    this.checkForChanges(false);\n  };\n  /**\n   * Destroys the DashboardLayout component\n   *\n   * @returns void\n   */\n  DashboardLayout.prototype.destroy = function () {\n    EventHandler.remove(window, 'resize', this.refreshListener);\n    removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n    this.element.removeAttribute('style');\n    for (var i = 0; i < this.dragCollection.length; i++) {\n      this.dragCollection[i].destroy();\n    }\n    this.removeAllPanel();\n    this.panelCollection = null;\n    this.checkCollision = null;\n    this.mainElement = null;\n    this.dragobj = null;\n    this.dragStartArgs = null;\n    this.dragStopEventArgs = null;\n    this.draggedEventArgs = null;\n    this.sortedArray = null;\n    this.cloneArray = null;\n    this.overlapElement = null;\n    this.overlapElementClone = null;\n    this.dragCollection = [];\n    this.allItems = null;\n    this.moveTarget = null;\n    this.upTarget = null;\n    this.downTarget = null;\n    this.checkingElement = null;\n    this.panelHeaderElement = null;\n    this.panelContent = null;\n    this.panelBody = null;\n    this.table = null;\n    _super.prototype.destroy.call(this);\n    this.clearTemplate();\n    this.renderReactTemplates();\n  };\n  DashboardLayout.prototype.removeAllPanel = function () {\n    while (this.element.firstElementChild) {\n      detach(this.element.firstElementChild);\n      this.clearTemplate();\n    }\n  };\n  DashboardLayout.prototype.setEnableRtl = function () {\n    if (this.enableRtl === true) {\n      addClass([this.element], 'e-rtl');\n    } else {\n      removeClass([this.element], 'e-rtl');\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * returns void\n   *\n   * @private\n   */\n  DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n    this.panelResponsiveUpdate();\n    this.setHeightWidth();\n    this.getRowColumn();\n    for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n      var ele = this.element.querySelectorAll('.e-panel')[i];\n      var panelModel = this.getCellInstance(ele.id);\n      this.setHeightAndWidth(ele, panelModel);\n      this.setPanelPosition(ele, panelModel.row, panelModel.col);\n    }\n  };\n  DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n    this.removeAll();\n    this.setProperties({\n      panels: panels\n    }, true);\n    this.setOldRowCol();\n    if (this.table) {\n      this.table.remove();\n    }\n    this.initialize();\n    if (this.checkMediaQuery()) {\n      this.refresh();\n    }\n    if (this.showGridLines) {\n      this.initGridLines();\n    }\n  };\n  DashboardLayout.prototype.checkForIDValues = function (panels) {\n    var _this = this;\n    if (!isNullOrUndefined(panels) && panels.length > 0) {\n      this.panelID = 0;\n      panels.forEach(function (panel) {\n        if (!panel.id) {\n          _this.panelPropertyChange(panel, {\n            id: 'layout_' + _this.panelID.toString()\n          });\n          _this.panelID = _this.panelID + 1;\n        }\n      });\n    } else {\n      this.restrictDynamicUpdate = true;\n    }\n  };\n  /**\n   * Called internally if any of the property value changed.\n   *\n   * returns void\n   *\n   * @private\n   */\n  DashboardLayout.prototype.onPropertyChanged = function (newProp) {\n    var _this = this;\n    if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n      this.checkForIDValues(newProp.panels);\n    }\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n      switch (prop) {\n        case 'enableRtl':\n          this.setProperties({\n            enableRtl: newProp.enableRtl\n          }, true);\n          this.setEnableRtl();\n          break;\n        case 'mediaQuery':\n          this.setProperties({\n            mediaQuery: newProp.mediaQuery\n          }, true);\n          if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n          }\n          break;\n        case 'allowDragging':\n          this.setProperties({\n            allowDragging: newProp.allowDragging\n          }, true);\n          this.ensureDrag();\n          break;\n        case 'allowResizing':\n          this.setProperties({\n            allowResizing: newProp.allowResizing\n          }, true);\n          if (this.allowResizing) {\n            this.setClasses(this.panelCollection);\n            this.resizeEvents();\n          } else {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n              var eventName = Browser.info.name === 'msie' ? 'mousedown pointerdown' : 'mousedown';\n              var element = panelElements[i];\n              EventHandler.remove(element, eventName, this.downResizeHandler);\n              if (Browser.info.name !== 'msie') {\n                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n              }\n            }\n            this.removeResizeClasses(this.panelCollection);\n          }\n          break;\n        case 'cellSpacing':\n          this.setProperties({\n            cellSpacing: newProp.cellSpacing\n          }, true);\n          this.updateCellSizeAndSpacing();\n          this.updateGridLines();\n          break;\n        case 'draggableHandle':\n          this.setProperties({\n            draggableHandle: newProp.draggableHandle\n          }, true);\n          this.ensureDrag();\n          break;\n        case 'allowFloating':\n          this.setProperties({\n            allowFloating: newProp.allowFloating\n          }, true);\n          this.moveItemsUpwards();\n          break;\n        case 'showGridLines':\n          if (this.showGridLines) {\n            this.setProperties({\n              showGridLines: newProp.showGridLines\n            }, true);\n            this.initGridLines();\n          } else {\n            if (this.table) {\n              detach(this.table);\n            }\n          }\n          break;\n        case 'allowPushing':\n          this.setProperties({\n            allowPushing: newProp.allowPushing\n          }, true);\n          break;\n        case 'panels':\n          if (!newProp.columns && !this.restrictDynamicUpdate && newProp.panels[0] && newProp.panels.length > 0) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(newProp.panels);\n            this.isRenderComplete = true;\n          } else if (!(newProp.panels[0] && newProp.panels.length)) {\n            this.isRenderComplete = false;\n            this.updatePanelsDynamically(this.panels);\n            this.isRenderComplete = true;\n          } else {\n            this.restrictDynamicUpdate = false;\n          }\n          break;\n        case 'columns':\n          this.isRenderComplete = false;\n          if (newProp.panels) {\n            this.updatePanelsDynamically(newProp.panels);\n          }\n          this.setProperties({\n            columns: newProp.columns\n          }, true);\n          this.panelCollection = [];\n          this.maxColumnValue = this.columns;\n          this.calculateCellSize();\n          this.panels.forEach(function (panel) {\n            _this.setMinMaxValues(panel);\n            if (_this.maxColumnValue < panel.col || _this.maxColumnValue < panel.col + panel.sizeX) {\n              var colValue = _this.maxColumnValue - panel.sizeX;\n              _this.panelPropertyChange(panel, {\n                col: colValue < 0 ? 0 : colValue\n              });\n              _this.setXYAttributes(document.getElementById(panel.id), panel);\n            }\n            _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n            _this.panelCollection.push(document.getElementById(panel.id));\n            _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n            _this.mainElement = document.getElementById(panel.id);\n            _this.updatePanelLayout(document.getElementById(panel.id), panel);\n            _this.mainElement = null;\n          });\n          this.updatePanels();\n          this.updateCloneArrayObject();\n          this.isRenderComplete = true;\n          this.updateGridLines();\n          break;\n      }\n    }\n  };\n  /**\n   * Gets the properties to be maintained upon browser refresh.\n   *\n   * @returns string\n   * @private\n   */\n  DashboardLayout.prototype.getPersistData = function () {\n    var keyEntity = ['panels'];\n    return this.addOnPersist(keyEntity);\n  };\n  /* istanbul ignore next */\n  DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n    var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n    if (!(isNullOrUndefined(data) || data === '') || !isNullOrUndefined(persistedData)) {\n      var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n      var keys = Object.keys(dataObj);\n      this.isProtectedOnChange = true;\n      for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var key = keys_1[_i];\n        if (typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this))) {\n          if (Array.isArray(getValue(key, this)) && key === 'panels') {\n            this.mergePanels(dataObj[key], this[key]);\n            this[key] = dataObj[key];\n          }\n        }\n      }\n      this.isProtectedOnChange = false;\n    }\n  };\n  /* istanbul ignore next */\n  DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n    var storedColumns = sortedPanels;\n    var _loop_6 = function (i) {\n      this_4.checkForIDValues(panels);\n      var localPanel = panels.filter(function (pan) {\n        return pan.id === storedColumns[i].id;\n      })[0];\n      if (!isNullOrUndefined(localPanel)) {\n        storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n      }\n    };\n    var this_4 = this;\n    for (var i = 0; i < storedColumns.length; i++) {\n      _loop_6(i);\n    }\n  };\n  /**\n   * Returns the current module name.\n   *\n   * @returns string\n   *\n   * @private\n   */\n  DashboardLayout.prototype.getModuleName = function () {\n    return 'DashboardLayout';\n  };\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowDragging\", void 0);\n  __decorate([Property(false)], DashboardLayout.prototype, \"allowResizing\", void 0);\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowPushing\", void 0);\n  __decorate([Property(true)], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n  __decorate([Property(true)], DashboardLayout.prototype, \"allowFloating\", void 0);\n  __decorate([Property(1)], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n  __decorate([Property([5, 5])], DashboardLayout.prototype, \"cellSpacing\", void 0);\n  __decorate([Property(1)], DashboardLayout.prototype, \"columns\", void 0);\n  __decorate([Property(false)], DashboardLayout.prototype, \"showGridLines\", void 0);\n  __decorate([Property(null)], DashboardLayout.prototype, \"draggableHandle\", void 0);\n  __decorate([Property('en-US')], DashboardLayout.prototype, \"locale\", void 0);\n  __decorate([Property('max-width: 600px')], DashboardLayout.prototype, \"mediaQuery\", void 0);\n  __decorate([Collection([], Panel)], DashboardLayout.prototype, \"panels\", void 0);\n  __decorate([Property(['e-south-east'])], DashboardLayout.prototype, \"resizableHandles\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"change\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"dragStart\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"drag\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"dragStop\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"resizeStart\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"resize\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"resizeStop\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"created\", void 0);\n  __decorate([Event()], DashboardLayout.prototype, \"destroyed\", void 0);\n  DashboardLayout = __decorate([NotifyPropertyChanges], DashboardLayout);\n  return DashboardLayout;\n}(Component);\nexport { DashboardLayout };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","Property","NotifyPropertyChanges","isUndefined","Collection","Draggable","isNullOrUndefined","append","setValue","Event","formatUnit","ChildProperty","compile","closest","SanitizeHtmlHelper","getValue","setStyleAttribute","setStyle","addClass","detach","removeClass","EventHandler","Browser","extend","preventSelect","dragging","dragRestrict","drag","resize","resizeicon","responsive","east","west","north","south","single","double","northEast","southEast","northWest","southWest","panel","panelContent","panelContainer","disable","header","panelTransition","Panel","_super","apply","DashboardLayout","options","element","_this","call","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","eventVar","mergePersistPanelData","preRender","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","top","left","height","width","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","slice","children","panels","id","panelPropertyChange","toString","row","col","createPanelElement","cssClass","idValue","ele","createElement","setAttribute","render","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","renderComplete","renderReactTemplates","table","document","tbody","classList","add","maxRow","tr","j","columns","td","setAttributes","value","sizeX","sizeY","setPanelPosition","setHeightAndWidth","appendChild","updateRowHeight","childElementCount","querySelectorAll","panelElements","setProperties","push","panelElement","enableRtl","getInlinePanels","maxCol","querySelector","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","window","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","parentElement","offsetWidth","cellAspectRatio","cellSpacing","recheck","parseInt","getAttribute","createSubElement","className","templateParser","template","innerHTML","trim","error","sanitizedValue","sanitize","enableHtmlSanitizer","undefined","renderTemplate","content","appendElement","type","isStringTemplate","prop","templateFn","templateElements","tagName","eleVal","style","display","removeProperty","removeAttribute","compilerFn","_i","compilerFn_1","item","cellElement","panelModel","panelId","split","enabled","disablePanel","headerTemplateElement","cssClass_1","panelBody","headerHeight","getComputedStyle","contentHeightValue","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","panelProp","resizeEvents","allowResizing","eventName","info","name","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","bind","e","el","currentTarget","downHandler","lastMouseX","pageX","lastMouseY","pageY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","args","event","isInteracted","trigger","downTarget","shadowEle","elementX","parseFloat","elementY","elementWidth","elementHeight","offsetHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","indexOf","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","initialWidth","newSizeX","pixelsToColumns","getResizeRowColumn","attributes","checkCollision","upTarget","remove","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToRows","canOccupy","collisions","getPanelBase","allowPushing","pixels","isCeil","Math","ceil","floor","round","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","items","rowValue","columnValue","column","oldRow","updateLayout","contains","internalPanels","cellInstance","removeResizeClasses","checkDragging","destroy","sortPanels","_loop_1","_loop_2","this_1","filter","updatedPanel","updatedRows","getElementById","updatedHeight","getRowColumn","setHeightWidth","heightValue","entirePanelsY","widthValue","setXYDimensions","renderCell","index","dashBoardCell","xValue","max","checkMinMaxValues","cells","cell","ignore","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","forEach","sizeXValue","occupiedValues","getOccupiedColumns","splice","eleOccupiedValues","checkingElement","sort","next","previous","occupiedItems","leftWardsSpaceChecking","prev","reverse","adjustmentAvailable","leftAdjustable","rightAdjustable","isAdjustable","rightSpacing","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","collisionValue","replacable","isRightAdjudtable","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapCollision","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","checkForAdjustment","collisionModels","swappingAvailable","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","keys","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","overlapElementRow1","m","rowVal","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","cellHeight","cellWidth","heigthValue","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","_loop_5","abortArray","this_3","dragobj","preventDefault","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","cancel","setHolderPosition","panelInstance","dragStopEventArgs","currentPanel","draggedEventArgs","onDragStart","out_i_1","setDragArea","refreshDraggableHandle","clearEvents","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","source","endCol","dragCol","intDestroy","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","clearTemplate","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","dragStartArgs","panelHeaderElement","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","onPropertyChanged","newProp","_a","getPersistData","keyEntity","addOnPersist","persistedData","data","localStorage","getItem","getModuleName","dataObj","isProtectedOnChange","keys_1","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-layouts/src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        _this.eventVar = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.element.setAttribute('role', 'list');\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        this.table.setAttribute('role', 'presentation');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col ||\n                    this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            if (!isNullOrUndefined(this.cellSpacing)) {\n                this.cellSize[0] = this.element.parentElement\n                    && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                        / (this.maxCol()));\n            }\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (this.element.querySelector('[id=\\'' + id + '\\']')) {\n                var row = parseInt(this.element.querySelector('[id=\\'' + id + '\\']').getAttribute('data-row'), 10);\n                var col = parseInt(this.element.querySelector('[id=\\'' + id + '\\']').getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n                else {\n                    return compile(template);\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        cellElement.setAttribute('role', 'listitem');\n        if (this.allowDragging) {\n            cellElement.setAttribute('aria-grabbed', 'false');\n        }\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n        this.oldRowCol[model.id] = { row: model.row, col: model.col };\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        var el = closest((e.currentTarget), '.e-panel');\n        for (var i = 0; this.panels.length > i; i++) {\n            if (this.panels[i].enabled && this.panels[i].id === el.id) {\n                this.downHandler(e);\n                this.lastMouseX = e.pageX;\n                this.lastMouseY = e.pageY;\n                var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n                var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n                if (!this.isMouseMoveBound) {\n                    EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n                    this.isMouseMoveBound = true;\n                }\n                if (!this.isMouseUpBound) {\n                    EventHandler.add(document, upEventName, this.upResizeHandler, this);\n                    this.isMouseUpBound = true;\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            var initialWidth = this.elementWidth;\n            this.elementWidth += currentX;\n            var newSizeX = this.pixelsToColumns(this.elementWidth - (panelModel.sizeX) * this.cellSpacing[1], true);\n            if (this.columns < panelModel.col + newSizeX) {\n                this.elementWidth = initialWidth;\n            }\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        if (this.handleClass.indexOf('west') >= 0) {\n            this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col - 1) * this.cellSpacing[0])) + 'px';\n        }\n        else {\n            this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        }\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.checkCollision = [];\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + sizeX > this.columns) {\n            item.sizeX = sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.ceil(pixels / this.cellSize[0]);\n        }\n        else {\n            return Math.floor(pixels / (this.cellSize[0] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (((item.minSizeX) * this.getCellSize()[0]) + (item.minSizeX - 1) * this.cellSpacing[0]);\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (((item.minSizeY) * this.getCellSize()[1]) + (item.minSizeY - 1) * this.cellSpacing[1]);\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                var internalPanels = this.element.querySelectorAll(((this.element.id) ? '#' + this.element.id + ' > ' : '') + '.e-panel');\n                for (var i = 0; i < internalPanels.length; i++) {\n                    var ele = internalPanels[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        if (!isNullOrUndefined(this.panelCollection)) {\n            this.removeResizeClasses(this.panelCollection);\n            this.setClasses(this.panelCollection);\n        }\n        this.resizeEvents();\n        if (!isNullOrUndefined(this.panelCollection)) {\n            this.checkDragging(this.dragCollection);\n        }\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 10);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                if (!isNullOrUndefined(this.panelCollection)) {\n                    this.setClasses(this.panelCollection);\n                    this.removeResizeClasses(this.panelCollection);\n                }\n                if (!isNullOrUndefined(this.dragCollection)) {\n                    this.checkDragging(this.dragCollection);\n                }\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        if (isNullOrUndefined(this.cellSpacing)) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            var entirePanelsY = 0;\n            for (var i = 0; i < this.panels.length; i++) {\n                if (this.panels[i].sizeY) {\n                    entirePanelsY += this.panels[i].sizeY;\n                }\n            }\n            heightValue = ((entirePanelsY) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (entirePanelsY - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        var widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col ||\n                    this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(this.element.querySelector('[id=\\'' + item.id + '\\']')) === -1) &&\n                    items.indexOf(this.element.querySelector('[id=\\'' + item.id + '\\']')) === -1) {\n                    items.push(this.element.querySelector('[id=\\'' + item.id + '\\']'));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = this.element.querySelector('[id=\\'' + this.panels[i].id + '\\']');\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id] &&\n                this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        var _this = this;\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            collisionModels.forEach(function (item1) {\n                if (_this.overlapElement.indexOf(item1) === -1) {\n                    _this.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[\"\" + key].row, this.overlapElement, this.collisionChecker[\"\" + key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var _this = this;\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                _this.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    var rowVal = parseInt(this.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this.collisions(rowVal, colValue_1, sizeX, sizeY, this.overlapSubElementClone);\n                    if (this.mainElement && collisionModels1.indexOf(this.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this.mainElement), 1);\n                    }\n                    collisionModels1.forEach(function (item1) {\n                        _this.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this.updateRowColumn(rowVal, this.overlapElement, this.overlapSubElementClone[p]);\n                    }\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector('.e-resize')) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: !isNullOrUndefined(panelModel.sizeX) ? panelModel.sizeX.toString() : undefined,\n                sizeY: !isNullOrUndefined(panelModel.sizeY) ? panelModel.sizeY.toString() : undefined,\n                minSizeX: !isNullOrUndefined(panelModel.minSizeX) ? panelModel.minSizeX.toString() : undefined,\n                minSizeY: !isNullOrUndefined(panelModel.minSizeY) ? panelModel.minSizeY.toString() : undefined,\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: !isNullOrUndefined(panelModel.row) ? panelModel.row.toString() : undefined,\n                col: !isNullOrUndefined(panelModel.col) ? panelModel.col.toString() : undefined\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row ||\n                        this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        var _loop_5 = function (i) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this_3.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this_3.element,\n                    isDragScroll: true,\n                    handle: this_3.draggableHandle ? this_3.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this_3.onDraggingStart.bind(this_3),\n                    dragStop: function (args) {\n                        _this.trigger('dragStop', args);\n                        if (isNullOrUndefined(args.cancel)) {\n                            args.cancel = false;\n                        }\n                        if (!(args.cancel)) {\n                            var model = _this.getCellInstance(_this.mainElement.id);\n                            if (_this.allowPushing &&\n                                _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                                _this.setHolderPosition(args);\n                                _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                                _this.updatePanelLayout(_this.mainElement, model);\n                            }\n                            else {\n                                _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            }\n                            _this.mainElement = null;\n                            var item = _this.getPanelBase(args);\n                            if (_this.shadowEle) {\n                                detach(_this.shadowEle);\n                            }\n                            removeClass([_this.element], [preventSelect]);\n                            removeClass([args.element], [dragging]);\n                            _this.shadowEle = null;\n                            args.element.classList.remove('e-dragging');\n                            var row = _this.getRowColumnDragValues(args)[0];\n                            var col = _this.getRowColumnDragValues(args)[1];\n                            var panelModel = _this.getCellInstance(args.element.id);\n                            if (_this.allowPushing &&\n                                _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                                _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                                _this.oldRowCol[args.element.id].row = row;\n                                _this.oldRowCol[args.element.id].col = col;\n                                _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                                _this.sortedPanel();\n                            }\n                            else {\n                                _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                    row: _this.oldRowCol[args.element.id].row,\n                                    col: _this.oldRowCol[args.element.id].col\n                                });\n                                args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                                args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                                _this.sortedPanel();\n                            }\n                            var panelInstance = _this.getCellInstance(args.element.id);\n                            _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                            _this.updatePanels();\n                            _this.updateCloneArrayObject();\n                            _this.checkForChanges(true);\n                            _this.dragStopEventArgs = { event: args.event, element: args.element };\n                            _this.resizeEvents();\n                            _this.rows = _this.maxRow(true);\n                            _this.setHeightWidth();\n                            _this.updateDragArea();\n                        }\n                        else {\n                            var currentPanel = _this.getCellInstance(_this.mainElement.id);\n                            for (i = 0; i < _this.panels.length; i++) {\n                                if (_this.panels[i].id === currentPanel.id) {\n                                    args.element.setAttribute('data-col', _this.panelsInitialModel[i].col.toString());\n                                    args.element.setAttribute('data-row', _this.panelsInitialModel[i].row.toString());\n                                    currentPanel.col = _this.panelsInitialModel[i].col;\n                                    currentPanel.row = _this.panelsInitialModel[i].row;\n                                    _this.setPanelPosition(_this.mainElement, _this.panelsInitialModel[i].row, _this.panelsInitialModel[i].col);\n                                    _this.updatePanelLayout(_this.mainElement, currentPanel);\n                                }\n                            }\n                            if (_this.shadowEle) {\n                                detach(_this.shadowEle);\n                            }\n                        }\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this_3.dragCollection.indexOf(this_3.dragobj) === -1) {\n                    this_3.dragCollection.push(this_3.dragobj);\n                }\n            }\n            out_i_1 = i;\n        };\n        var this_3 = this, out_i_1;\n        for (var i = 0; i < collections.length; i++) {\n            _loop_5(i);\n            i = out_i_1;\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            dragobj.setDragArea();\n        });\n    };\n    /**\n     * Method to update the draggable handle when draggable panel elements are bound dynamically.\n     *\n     * @returns void\n     *\n     */\n    DashboardLayout.prototype.refreshDraggableHandle = function () {\n        if (this.dragCollection && this.dragCollection.length > 0) {\n            for (var i = 0; i < this.dragCollection.length; i++) {\n                this.dragCollection[i].destroy();\n                EventHandler.clearEvents(this.dragCollection[i].element);\n            }\n            this.ensureDrag();\n        }\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function () {\n            if (isNullOrUndefined(args.cancel)) {\n                args.cancel = false;\n            }\n        });\n        this.eventVar = args.cancel;\n        if (!(args.cancel)) {\n            this.panelsInitialModel = this.cloneModels(this.panels);\n            this.mainElement = args.element;\n            this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n            var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n            this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n            var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n            this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n            this.updateDragArea();\n            this.shadowEle = document.createElement('div');\n            this.shadowEle.classList.add('e-holder');\n            this.shadowEle.classList.add('e-holder-transition');\n            setStyle(this.shadowEle, { 'position': 'absolute' });\n            addClass([this.element], [preventSelect]);\n            addClass([args.element], [dragging]);\n            this.element.appendChild(this.shadowEle);\n            this.renderReactTemplates();\n            this.shadowEle = document.querySelector('.e-holder');\n            this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n            this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n            var panelInstance = this.getCellInstance(args.element.id);\n            this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n        }\n        else {\n            removeClass([this.element], [preventSelect]);\n            removeClass([args.element], [dragging]);\n        }\n    };\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][\"\" + k] = source[i][\"\" + k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        if (!this.eventVar) {\n            var col = dragCol = this.getRowColumnDragValues(args)[1];\n            var row = this.getRowColumnDragValues(args)[0];\n            if (col < 0 || row < 0) {\n                return;\n            }\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            var panelModel = this.getCellInstance(args.element.id);\n            this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n            this.updateDragArea();\n            if (this.allowPushing) {\n                this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n                endCol = this.oldRowCol[(args.element.id)].col;\n                endRow = this.oldRowCol[(args.element.id)].row;\n                this.oldRowCol[(args.element.id)] = { row: row, col: col };\n                this.updateOldRowColumn();\n                if (this.startCol !== endCol || this.startRow !== endRow) {\n                    this.setHolderPosition(args);\n                    if (this.startCol !== endCol) {\n                        this.startRow = endRow;\n                    }\n                    if (this.startRow !== endRow) {\n                        this.startCol = endCol;\n                    }\n                    if (this.allowPushing) {\n                        this.mainElement = args.element;\n                        var model = panelModel;\n                        this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                        if (panelModel.col >= 0 || panelModel.col >= this.checkColumnValue) {\n                            this.checkCollision = [];\n                        }\n                        this.updatePanelLayout(args.element, panelModel);\n                        this.moveItemsUpwards();\n                    }\n                }\n            }\n            if (this.allowPushing !== false) {\n                this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            }\n            if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n                this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n                this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            }\n            if (this.startCol !== dragCol) {\n                this.startCol = endCol;\n                this.moveItemsUpwards();\n            }\n            if (!this.allowPushing) {\n                this.setHolderPosition(args);\n            }\n            this.removeResizeClasses(this.panelCollection);\n            this.setClasses(this.panelCollection);\n            if (this.allowPushing === false) {\n                return;\n            }\n        }\n        else {\n            this.dragobj.intDestroy(args.event);\n            removeClass([this.element], [preventSelect]);\n            removeClass([args.element], [dragging]);\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.addPanelCalled = false;\n            this.updatePanelLayout(cell, panelProp);\n        }\n        if (this.addPanelCalled) {\n            this.addPanelCalled = false;\n        }\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col,\n                sizeX: cloneModel[i].sizeX, sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX,\n                minSizeY: cloneModel[i].minSizeY, maxSizeX: cloneModel[i].maxSizeX,\n                maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        this.panelCollection = null;\n        this.checkCollision = null;\n        this.mainElement = null;\n        this.dragobj = null;\n        this.dragStartArgs = null;\n        this.dragStopEventArgs = null;\n        this.draggedEventArgs = null;\n        this.sortedArray = null;\n        this.cloneArray = null;\n        this.overlapElement = null;\n        this.overlapElementClone = null;\n        this.dragCollection = [];\n        this.allItems = null;\n        this.moveTarget = null;\n        this.upTarget = null;\n        this.downTarget = null;\n        this.checkingElement = null;\n        this.panelHeaderElement = null;\n        this.panelContent = null;\n        this.panelBody = null;\n        this.table = null;\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.onPropertyChanged = function (newProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                        this[key] = dataObj[key];\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}