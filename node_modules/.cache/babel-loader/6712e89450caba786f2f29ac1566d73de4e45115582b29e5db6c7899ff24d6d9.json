{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport * as d3 from \"d3\";\nexport default {\n  name: \"GanttChart\",\n  props: [\"products\"],\n  mounted() {\n    this.renderGanttChart();\n  },\n  methods: {\n    renderGanttChart() {\n      const data = this.products.map(product => ({\n        name: product.Name,\n        startDate: new Date(product.SellingDate),\n        endDate: new Date(product.SellingDate)\n      }));\n      const containerWidth = 800;\n      const containerHeight = this.products.length * 50;\n      const svg = d3.select(\"#gantt-chart\").append(\"svg\").attr(\"width\", containerWidth).attr(\"height\", containerHeight);\n      const xScale = d3.scaleTime().domain([d3.min(data, d => d.startDate), d3.max(data, d => d.endDate)]).range([0, containerWidth]);\n      const yScale = d3.scaleBand().domain(data.map(d => d.name)).range([0, containerHeight]).padding(0.1);\n      svg.selectAll(\"rect\").data(data).enter().append(\"rect\").attr(\"x\", d => xScale(d.startDate)).attr(\"y\", d => yScale(d.name)).attr(\"width\", d => xScale(d.endDate) - xScale(d.startDate)).attr(\"height\", yScale.bandwidth()).attr(\"fill\", \"teal\");\n      svg.selectAll(\"text\").data(data).enter().append(\"text\").attr(\"x\", d => xScale(d.startDate) + 5).attr(\"y\", d => yScale(d.name) + yScale.bandwidth() / 2).text(d => d.name).attr(\"fill\", \"white\").attr(\"alignment-baseline\", \"middle\");\n    }\n  }\n};","map":{"version":3,"names":["d3","name","props","mounted","renderGanttChart","methods","data","products","map","product","Name","startDate","Date","SellingDate","endDate","containerWidth","containerHeight","length","svg","select","append","attr","xScale","scaleTime","domain","min","d","max","range","yScale","scaleBand","padding","selectAll","enter","bandwidth","text"],"sources":["/var/www/vue/vue-gantt-chart/src/components/GanttChart.vue"],"sourcesContent":["<template>\n  <div id=\"gantt-chart\" style=\"overflow-x: scroll; height: 400px;\"></div>\n  <p>this.products</p>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"GanttChart\",\n  props: [\"products\"],\n  mounted() {\n    this.renderGanttChart();\n  },\n  methods: {\n    renderGanttChart() {\n      const data = this.products.map(product => ({\n        name: product.Name,\n        startDate: new Date(product.SellingDate),\n        endDate: new Date(product.SellingDate),\n      }));\n\n      const containerWidth = 800;\n      const containerHeight = this.products.length * 50;\n\n      const svg = d3\n        .select(\"#gantt-chart\")\n        .append(\"svg\")\n        .attr(\"width\", containerWidth)\n        .attr(\"height\", containerHeight);\n\n      const xScale = d3\n        .scaleTime()\n        .domain([\n          d3.min(data, d => d.startDate),\n          d3.max(data, d => d.endDate),\n        ])\n        .range([0, containerWidth]);\n\n      const yScale = d3\n        .scaleBand()\n        .domain(data.map(d => d.name))\n        .range([0, containerHeight])\n        .padding(0.1);\n\n      svg\n        .selectAll(\"rect\")\n        .data(data)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", d => xScale(d.startDate))\n        .attr(\"y\", d => yScale(d.name))\n        .attr(\"width\", d => xScale(d.endDate) - xScale(d.startDate))\n        .attr(\"height\", yScale.bandwidth())\n        .attr(\"fill\", \"teal\");\n\n      svg\n        .selectAll(\"text\")\n        .data(data)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", d => xScale(d.startDate) + 5)\n        .attr(\"y\", d => yScale(d.name) + yScale.bandwidth() / 2)\n        .text(d => d.name)\n        .attr(\"fill\", \"white\")\n        .attr(\"alignment-baseline\", \"middle\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n#gantt-chart {\n  border: 1px solid #ddd;\n}\n</style>\n"],"mappings":";AAMA,OAAO,KAAKA,EAAC,MAAO,IAAI;AAExB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,CAAC,UAAU,CAAC;EACnBC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACPD,gBAAgBA,CAAA,EAAG;MACjB,MAAME,IAAG,GAAI,IAAI,CAACC,QAAQ,CAACC,GAAG,CAACC,OAAM,KAAM;QACzCR,IAAI,EAAEQ,OAAO,CAACC,IAAI;QAClBC,SAAS,EAAE,IAAIC,IAAI,CAACH,OAAO,CAACI,WAAW,CAAC;QACxCC,OAAO,EAAE,IAAIF,IAAI,CAACH,OAAO,CAACI,WAAW;MACvC,CAAC,CAAC,CAAC;MAEH,MAAME,cAAa,GAAI,GAAG;MAC1B,MAAMC,eAAc,GAAI,IAAI,CAACT,QAAQ,CAACU,MAAK,GAAI,EAAE;MAEjD,MAAMC,GAAE,GAAIlB,EAAC,CACVmB,MAAM,CAAC,cAAc,EACrBC,MAAM,CAAC,KAAK,EACZC,IAAI,CAAC,OAAO,EAAEN,cAAc,EAC5BM,IAAI,CAAC,QAAQ,EAAEL,eAAe,CAAC;MAElC,MAAMM,MAAK,GAAItB,EAAC,CACbuB,SAAS,CAAC,EACVC,MAAM,CAAC,CACNxB,EAAE,CAACyB,GAAG,CAACnB,IAAI,EAAEoB,CAAA,IAAKA,CAAC,CAACf,SAAS,CAAC,EAC9BX,EAAE,CAAC2B,GAAG,CAACrB,IAAI,EAAEoB,CAAA,IAAKA,CAAC,CAACZ,OAAO,CAAC,CAC7B,EACAc,KAAK,CAAC,CAAC,CAAC,EAAEb,cAAc,CAAC,CAAC;MAE7B,MAAMc,MAAK,GAAI7B,EAAC,CACb8B,SAAS,CAAC,EACVN,MAAM,CAAClB,IAAI,CAACE,GAAG,CAACkB,CAAA,IAAKA,CAAC,CAACzB,IAAI,CAAC,EAC5B2B,KAAK,CAAC,CAAC,CAAC,EAAEZ,eAAe,CAAC,EAC1Be,OAAO,CAAC,GAAG,CAAC;MAEfb,GAAE,CACCc,SAAS,CAAC,MAAM,EAChB1B,IAAI,CAACA,IAAI,EACT2B,KAAK,CAAC,EACNb,MAAM,CAAC,MAAM,EACbC,IAAI,CAAC,GAAG,EAAEK,CAAA,IAAKJ,MAAM,CAACI,CAAC,CAACf,SAAS,CAAC,EAClCU,IAAI,CAAC,GAAG,EAAEK,CAAA,IAAKG,MAAM,CAACH,CAAC,CAACzB,IAAI,CAAC,EAC7BoB,IAAI,CAAC,OAAO,EAAEK,CAAA,IAAKJ,MAAM,CAACI,CAAC,CAACZ,OAAO,IAAIQ,MAAM,CAACI,CAAC,CAACf,SAAS,CAAC,EAC1DU,IAAI,CAAC,QAAQ,EAAEQ,MAAM,CAACK,SAAS,CAAC,CAAC,EACjCb,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC;MAEvBH,GAAE,CACCc,SAAS,CAAC,MAAM,EAChB1B,IAAI,CAACA,IAAI,EACT2B,KAAK,CAAC,EACNb,MAAM,CAAC,MAAM,EACbC,IAAI,CAAC,GAAG,EAAEK,CAAA,IAAKJ,MAAM,CAACI,CAAC,CAACf,SAAS,IAAI,CAAC,EACtCU,IAAI,CAAC,GAAG,EAAEK,CAAA,IAAKG,MAAM,CAACH,CAAC,CAACzB,IAAI,IAAI4B,MAAM,CAACK,SAAS,CAAC,IAAI,CAAC,EACtDC,IAAI,CAACT,CAAA,IAAKA,CAAC,CAACzB,IAAI,EAChBoB,IAAI,CAAC,MAAM,EAAE,OAAO,EACpBA,IAAI,CAAC,oBAAoB,EAAE,QAAQ,CAAC;IACzC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}