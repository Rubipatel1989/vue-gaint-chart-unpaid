{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nimport \"core-js/modules/esnext.iterator.take.js\";\nimport { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */function () {\n  /**\n   * Constructor for VirtualScroll module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function InfiniteScroll(parent) {\n    this.parent = parent;\n    Grid.Inject(GridInfiniteScroll);\n    this.addEventListener();\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} - Returns Logger module name\n   */\n  InfiniteScroll.prototype.getModuleName = function () {\n    return 'infiniteScroll';\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.addEventListener = function () {\n    this.parent.on(events.pagingActions, this.infinitePageAction, this);\n    this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n    this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n    this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n    this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n    this.parent.grid.on('content-ready', this.contentready, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n    this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n    this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n    this.parent.off(events.pagingActions, this.infinitePageAction);\n    this.parent.grid.off('infinite-crud-cancel', this.createRows);\n    this.parent.grid.off('content-ready', this.contentready);\n  };\n  /**\n   * Handles the Expand Collapse action for Remote data with infinite scrolling.\n   *\n   * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n   * @param { number } args.index - expanded row index\n   * @param { ITreeData[] } args.childData - child data of expanded row\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n    var rowObjects = this.parent.grid.getRowsObject();\n    var locator = 'serviceLocator';\n    var generateRows = 'generateRows';\n    var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n    var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n    var rows = this.parent.getRows();\n    var position = args.index === rows.length - 1 ? 'after' : 'before';\n    var cols = this.parent.grid.getColumns();\n    var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n    var childRowElements = [];\n    for (var i = 0; i < childRowObjects.length; i++) {\n      childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n    }\n    rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n    for (var i = 0; i < childRowElements.length; i++) {\n      if (position === 'after') {\n        rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n      } else {\n        rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n      }\n      rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n    }\n    resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n  };\n  /**\n   * Resetted the row index for expand collapse action for cache support.\n   *\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.contentready = function () {\n    if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n      var updateIndex = 'updateIndex';\n      this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n      if (this.parent.getFrozenColumns()) {\n        this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n      }\n    }\n  };\n  /**\n   * Handles the page query for Data operations and CRUD actions.\n   *\n   * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n   * @param {ITreeData[]} pageingDetails.result - data on scroll action\n   * @param {number} pageingDetails.count - data count on scroll action\n   * @param {Object} pageingDetails.actionArgs - scroll action details\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n    var dm = new DataManager(pageingDetails.result);\n    var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n    var visualData = dm.executeLocal(new Query().where(expanded));\n    var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n    var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n    if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n      this.parent.grid.pageSettings.currentPage = 1;\n    }\n    var initial = actions.some(function (value) {\n      return value === actionArgs.requestType;\n    });\n    var initialRender = initial ? true : this.parent.initialRender ? true : false;\n    this.visualData = visualData;\n    pageingDetails.count = visualData.length;\n    if (getValue('isPrinting', pageingDetails.actionArgs)) {\n      pageingDetails.result = visualData;\n    } else {\n      var query = new Query();\n      var isCache = this.parent.infiniteScrollSettings.enableCache;\n      if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n        this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n      }\n      var size = initialRender ? this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks : this.parent.grid.pageSettings.pageSize;\n      var current = this.parent.grid.pageSettings.currentPage;\n      if (!isNullOrUndefined(actionArgs)) {\n        var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n        var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n        if (!isCache && actionArgs.requestType === 'delete') {\n          var skip = lastIndex - actionArgs.data.length + 1;\n          var take = actionArgs.data.length;\n          query = query.skip(skip).take(take);\n        } else if (isCache && actionArgs.requestType === 'delete' || actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n          query = query.skip(firstIndex);\n          query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n        } else {\n          query = query.page(current, size);\n        }\n      } else {\n        query = query.page(current, size);\n      }\n      dm.dataSource.json = visualData;\n      if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n        pageingDetails.result = [actionArgs.data];\n      } else {\n        pageingDetails.result = dm.executeLocal(query);\n      }\n    }\n    this.parent.notify('updateAction', pageingDetails);\n  };\n  /**\n   * Handles the currentviewdata for delete operation.\n   *\n   * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n   * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n   * @param {Object[]} args.result - data details while CRUD\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n    var infiniteData = 'infiniteCurrentViewData';\n    var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n    var keys = Object.keys(infiniteCurrentViewData);\n    if (args.e.requestType === 'delete' && args.result.length > 1) {\n      for (var i = 1; i < args.result.length; i++) {\n        infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n      }\n    }\n  };\n  /**\n   * Handles the row objects for delete operation.\n   *\n   * @param {ActionEventArgs} args - crud action details\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n    if (args.requestType === 'delete') {\n      var rows = this.parent.grid.getRowsObject();\n      var rowElms = this.parent.getRows();\n      var data = args.data instanceof Array ? args.data : [args.data];\n      var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n      this.removeRows(rowElms, rows, data, keyField, true);\n      if (this.parent.getFrozenColumns() > 0) {\n        var mRows = this.parent.grid.getRowsObject();\n        var mRowElms = this.parent.grid.getRows();\n        this.removeRows(mRowElms, mRows, data, keyField);\n      }\n    }\n  };\n  /**\n   * Handles the row objects for delete operation.\n   *\n   * @param {Element[]} rowElms - row elements\n   * @param {Row<Column>[]} rows - Row object collection\n   * @param {Object[]} data - data collection\n   * @param {string} keyField - primary key name\n   * @param { boolean} isFrozen - Specifies whether frozen column enabled\n   * @returns {void}\n   */\n  InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n    var _this = this;\n    var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n    var _loop_1 = function (i) {\n      rows.filter(function (e, index) {\n        if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n          if (isFrozen) {\n            var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n            _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n          }\n          rows.splice(index, 1);\n          remove(rowElms[parseInt(index.toString(), 10)]);\n          rowElms.splice(index, 1);\n        }\n      });\n    };\n    for (var i = 0; i < data.length; i++) {\n      _loop_1(i);\n    }\n  };\n  /**\n   * Handles the row objects for Add operation.\n   */\n  InfiniteScroll.prototype.createRows = function (eventArgs) {\n    var locator = 'serviceLocator';\n    var actionArgs = eventArgs.args.e;\n    var row = eventArgs.row;\n    var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n    var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n    var tbody;\n    var currentData = this.parent.getCurrentViewRecords();\n    var currentRows = eventArgs.isMovable ? this.parent.grid.getRows() : this.parent.grid.getDataRows();\n    if (eventArgs.isFrozenRight) {\n      tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n    } else {\n      tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable ? this.parent.grid.getContent().querySelector('tbody') : this.parent.grid.getContent().querySelector('tbody');\n    }\n    if (this.parent.frozenRows) {\n      tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add' || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add' ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody') : eventArgs.isMovable ? this.parent.grid.getHeaderContent().querySelector('tbody') : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody') : this.parent.grid.getHeaderContent().querySelector('tbody') : tbody;\n    }\n    var position;\n    var addRowIndex = 'addRowIndex';\n    var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n    for (var i = 0; i < row.length; i++) {\n      var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n      if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n        if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n          if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n            position = 'after';\n            newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n            if (this.parent.editSettings.newRowPosition === 'Child') {\n              newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n            }\n            currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n          } else if (this.parent.editSettings.newRowPosition === 'Above') {\n            position = 'before';\n            currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n          }\n        } else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n          tbody.appendChild(newRow);\n        } else {\n          tbody.insertBefore(newRow, tbody.firstElementChild);\n        }\n      } else if (actionArgs.requestType === 'delete') {\n        tbody.appendChild(newRow);\n      }\n    }\n    eventArgs.cancel = true;\n  };\n  /**\n   * To destroy the infiniteScroll module\n   *\n   * @returns {void}\n   * @hidden\n   */\n  InfiniteScroll.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  return InfiniteScroll;\n}();\nexport { InfiniteScroll };","map":{"version":3,"names":["Grid","InfiniteScroll","GridInfiniteScroll","RowRenderer","resetRowIndex","getValue","isNullOrUndefined","remove","events","DataManager","Predicate","Query","findChildrenRecords","parent","Inject","addEventListener","prototype","getModuleName","on","pagingActions","infinitePageAction","infiniteRemoteExpand","grid","infiniteDeleteHandler","infiniteEditHandler","createRows","contentready","removeEventListener","isDestroyed","off","args","rowObjects","getRowsObject","locator","generateRows","serviceLocator","infiniteScrollModule","rowRenderer","rows","getRows","position","index","length","cols","getColumns","childRowObjects","childData","childRowElements","i","push","render","parseInt","toString","splice","apply","concat","infiniteScrollSettings","enableCache","editModule","updateIndex","dataSource","getCurrentViewRecords","getFrozenColumns","getDataRows","pageingDetails","dm","result","expanded","or","undefined","visualData","executeLocal","where","actionArgs","actions","initialRender","pageSettings","currentPage","initial","some","value","requestType","count","query","isCache","initialBlocks","maxBlocks","size","pageSize","current","lastIndex","firstIndex","skip","data","take","action","page","json","notify","infiniteData","infiniteCurrentViewData","keys","Object","e","rowElms","Array","keyField","getPrimaryKeyFieldNames","removeRows","mRows","mRowElms","isFrozen","_this","resetInfiniteCurrentViewData","_loop_1","filter","Math","ceil","eventArgs","row","tbody","currentData","currentRows","isMovable","isFrozenRight","element","querySelector","isFrozenGrid","getContent","frozenRows","isFrozenRows","getHeaderContent","addRowIndex","newRowIndex","newRow","editSettings","newRowPosition","appendChild","insertBefore","firstElementChild","cancel","destroy"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/infinite-scroll.js"],"sourcesContent":["import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[\"\" + generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[parseInt(i.toString(), 10)], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            else {\n                rows[args.index + i + 1][\"\" + position](childRowElements[parseInt(i.toString(), 10)]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[parseInt(i.toString(), 10)]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[\"\" + updateIndex](this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        if (this.parent.grid.infiniteScrollModule['isInitialRender'] && !this.parent.initialRender) {\n            this.parent.grid.pageSettings.currentPage = 1;\n        }\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.grid.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getRowsObject();\n                var mRowElms = this.parent.grid.getRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[\"\" + keyField] === data[parseInt(i.toString(), 10)][\"\" + keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[\"\" + resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[parseInt(index.toString(), 10)]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[\"\" + locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getContent().querySelector('tbody')\n                : this.parent.grid.getContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getHeaderContent().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getHeaderContent().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[\"\" + addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[parseInt(i.toString(), 10)], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[parseInt(newRowIndex.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[parseInt(newRowIndex.toString(), 10)][\"\" + position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[\"\" + addRowIndex]][\"\" + position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}