{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport * as d3 from \"d3\";\nexport default {\n  name: \"GanttChart\",\n  props: [\"products\"],\n  watch: {\n    products: {\n      handler(newProducts) {\n        console.log(\"Products received in GanttChart P:\", newProducts); // Debugging\n        if (newProducts && newProducts.length > 0) {\n          this.renderGanttChart(newProducts);\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    renderGanttChart(data) {\n      console.log(\"Rendering Gantt chart with data:\", data); // Debugging\n\n      // Clear existing chart elements\n      d3.select(\"#gantt-chart\").selectAll(\"*\").remove();\n      const chartData = data.map(product => ({\n        name: product.Name,\n        startDate: new Date(product.SellingDate),\n        endDate: new Date(product.SellingDate).setDate(new Date(product.SellingDate).getDate() + 1) // Ensure endDate > startDate\n      }));\n      const containerWidth = 800;\n      const containerHeight = chartData.length * 50;\n      const svg = d3.select(\"#gantt-chart\").append(\"svg\").attr(\"width\", containerWidth).attr(\"height\", containerHeight).style(\"border\", \"1px solid blue\"); // Debugging\n\n      const xScale = d3.scaleTime().domain([d3.min(chartData, d => d.startDate), d3.max(chartData, d => d.endDate)]).range([0, containerWidth]);\n      const yScale = d3.scaleBand().domain(chartData.map(d => d.name)).range([0, containerHeight]).padding(0.1);\n      console.log(\"xScale domain:\", xScale.domain());\n      console.log(\"xScale range:\", xScale.range());\n      console.log(\"yScale domain:\", yScale.domain());\n      console.log(\"yScale range:\", yScale.range());\n      svg.selectAll(\"rect\").data(chartData).enter().append(\"rect\").attr(\"x\", d => {\n        const x = xScale(new Date(d.startDate));\n        console.log(`Bar for ${d.name} - x:`, x);\n        return x;\n      }).attr(\"y\", d => {\n        const y = yScale(d.name);\n        console.log(`Bar for ${d.name} - y:`, y);\n        return y;\n      }).attr(\"width\", d => {\n        const width = xScale(new Date(d.endDate)) - xScale(new Date(d.startDate));\n        console.log(`Bar for ${d.name} - width:`, width);\n        return width > 0 ? width : 5; // Minimum width = 5\n      }).attr(\"height\", yScale.bandwidth()).attr(\"fill\", \"teal\").attr(\"stroke\", \"black\").attr(\"stroke-width\", 1);\n\n      // Add product name as a text label\n      svg.selectAll(\"text\").data(chartData).enter().append(\"text\").attr(\"x\", d => xScale(new Date(d.startDate)) + 5).attr(\"y\", d => yScale(d.name) + yScale.bandwidth() / 2).attr(\"alignment-baseline\", \"middle\").attr(\"fill\", \"black\").text(d => d.name);\n    }\n  }\n};","map":{"version":3,"names":["d3","name","props","watch","products","handler","newProducts","console","log","length","renderGanttChart","immediate","methods","data","select","selectAll","remove","chartData","map","product","Name","startDate","Date","SellingDate","endDate","setDate","getDate","containerWidth","containerHeight","svg","append","attr","style","xScale","scaleTime","domain","min","d","max","range","yScale","scaleBand","padding","enter","x","y","width","bandwidth","text"],"sources":["/var/www/vue/vue-gantt-chart/src/components/GanttChart.vue"],"sourcesContent":["<template>\n  <div id=\"gantt-chart\" style=\"width: 100%; height: 400px; overflow-x: scroll;\"></div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n\nexport default {\n  name: \"GanttChart\",\n  props: [\"products\"],\n  watch: {\n    products: {\n      handler(newProducts) {\n        console.log(\"Products received in GanttChart P:\", newProducts); // Debugging\n        if (newProducts && newProducts.length > 0) {\n          this.renderGanttChart(newProducts);\n        }\n      },\n      immediate: true,\n    },\n  },\n  methods: {\n    renderGanttChart(data) {\n      console.log(\"Rendering Gantt chart with data:\", data); // Debugging\n\n      // Clear existing chart elements\n      d3.select(\"#gantt-chart\").selectAll(\"*\").remove();\n\n      const chartData = data.map(product => ({\n        name: product.Name,\n        startDate: new Date(product.SellingDate),\n        endDate: new Date(product.SellingDate).setDate(new Date(product.SellingDate).getDate() + 1), // Ensure endDate > startDate\n      }));\n\n      const containerWidth = 800;\n      const containerHeight = chartData.length * 50;\n\n      const svg = d3\n        .select(\"#gantt-chart\")\n        .append(\"svg\")\n        .attr(\"width\", containerWidth)\n        .attr(\"height\", containerHeight)\n        .style(\"border\", \"1px solid blue\"); // Debugging\n\n      const xScale = d3\n        .scaleTime()\n        .domain([\n          d3.min(chartData, d => d.startDate),\n          d3.max(chartData, d => d.endDate),\n        ])\n        .range([0, containerWidth]);\n\n      const yScale = d3\n        .scaleBand()\n        .domain(chartData.map(d => d.name))\n        .range([0, containerHeight])\n        .padding(0.1);\n\n      console.log(\"xScale domain:\", xScale.domain());\n      console.log(\"xScale range:\", xScale.range());\n      console.log(\"yScale domain:\", yScale.domain());\n      console.log(\"yScale range:\", yScale.range());\n\n      svg\n        .selectAll(\"rect\")\n        .data(chartData)\n        .enter()\n        .append(\"rect\")\n        .attr(\"x\", d => {\n          const x = xScale(new Date(d.startDate));\n          console.log(`Bar for ${d.name} - x:`, x);\n          return x;\n        })\n        .attr(\"y\", d => {\n          const y = yScale(d.name);\n          console.log(`Bar for ${d.name} - y:`, y);\n          return y;\n        })\n        .attr(\"width\", d => {\n          const width = xScale(new Date(d.endDate)) - xScale(new Date(d.startDate));\n          console.log(`Bar for ${d.name} - width:`, width);\n          return width > 0 ? width : 5; // Minimum width = 5\n        })\n        .attr(\"height\", yScale.bandwidth())\n        .attr(\"fill\", \"teal\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-width\", 1);\n\n      // Add product name as a text label\n      svg\n        .selectAll(\"text\")\n        .data(chartData)\n        .enter()\n        .append(\"text\")\n        .attr(\"x\", d => xScale(new Date(d.startDate)) + 5)\n        .attr(\"y\", d => yScale(d.name) + yScale.bandwidth() / 2)\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"fill\", \"black\")\n        .text(d => d.name);\n    }\n\n\n\n  },\n};\n</script>\n\n<style scoped>\n#gantt-chart {\n  border: 2px solid red;\n  /* For debugging */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}