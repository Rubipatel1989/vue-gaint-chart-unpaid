{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { PointF, PdfColor, PdfStringLayouter, PdfPen, PdfSolidBrush, RectangleF, SizeF, PdfStandardFont, PdfFontStyle, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfWordWrapType, PdfDashStyle, PdfPath, PdfBitmap, PdfBrushes, PdfLinearGradientBrush } from '@syncfusion/ej2-pdf-export';\nimport { pixelToPoint, pointToPixel } from '../base/utils';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar PdfGanttTaskbarCollection = /** @class */function () {\n  function PdfGanttTaskbarCollection(parent) {\n    /** Defines the task baselineHeight . */\n    this.baselineHeight = 8;\n    this.segment = [];\n    this.segmentCollection = [];\n    /**\n     * @private\n     */\n    this.leftTaskLabel = {};\n    /**\n     * @private\n     */\n    this.rightTaskLabel = {};\n    this.startPage = -1;\n    this.endPage = -1;\n    this.parent = parent;\n  }\n  PdfGanttTaskbarCollection.prototype.add = function () {\n    return new PdfGanttTaskbarCollection(this.parent);\n  };\n  /**\n   * @param {PdfPage} page .\n   * @returns {PdfPage} .\n   * Get the next PDF page\n   */\n  PdfGanttTaskbarCollection.prototype.GetNextPage = function (page) {\n    var section = page.section;\n    var index = section.indexOf(page);\n    var nextPage = null;\n    if (index === section.count - 1) {\n      nextPage = section.add();\n    } else {\n      nextPage = section.getPages()[index + 1];\n    }\n    return nextPage;\n  };\n  PdfGanttTaskbarCollection.prototype.isAutoFit = function () {\n    return this.parent.pdfExportModule && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth || this.parent.timelineModule.isZoomedToFit ? true : false;\n  };\n  /**\n   * Draw the taskbar, chart back ground\n   *\n   * @private\n   */\n  /* eslint-disable */\n  PdfGanttTaskbarCollection.prototype.drawTaskbar = function (page, startPoint, detail, cumulativeWidth, rowHeight, taskbar, lineWidth) {\n    var _this = this;\n    var taskGraphics = page.graphics;\n    var isNextPage = false;\n    var pageSize = page.getClientSize();\n    var yPoint = startPoint.y + rowHeight;\n    //code for while current pdf page is exceed\n    if (yPoint > pageSize.height) {\n      page = this.GetNextPage(page);\n      page['contentWidth'] = this.isAutoFit() ? pointToPixel(detail.endPoint - detail.startPoint) : detail.endPoint - detail.startPoint;\n      taskGraphics = page.graphics;\n      startPoint.y = 0;\n      if (this.parent.pdfExportModule.gantt.enableHeader) {\n        this.parent.pdfExportModule.gantt.chartHeader.drawPageTimeline(page, startPoint, detail);\n        startPoint.y = pixelToPoint(this.parent.timelineModule.isSingleTier ? 45 : 60);\n      }\n      isNextPage = true;\n      var graphics = page.graphics;\n      var pen = new PdfPen(new PdfColor(206, 206, 206));\n      if (page['contentWidth'] && (this.parent.gridLines === \"Both\" || this.parent.gridLines === \"Horizontal\")) {\n        graphics.drawRectangle(pen, startPoint.x, startPoint.y, this.isAutoFit() && this.parent.timelineModule.bottomTier !== \"Day\" ? page['contentWidth'] + 0.5 : lineWidth, rowHeight);\n      }\n    }\n    this.drawLeftLabel(page, startPoint, detail, cumulativeWidth, taskbar);\n    //Draw Taskbar\n    var font = new PdfStandardFont(this.fontFamily, 9, PdfFontStyle.Regular);\n    var fontColor = null;\n    var fontBrush = new PdfSolidBrush(this.progressFontColor);\n    var customizedFont;\n    var customizedFontBrush;\n    var customizedFontColor;\n    customizedFont = !isNullOrUndefined(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontFamily && taskbar.taskbarTemplate.fontStyle.fontSize ? new PdfStandardFont(taskbar.taskbarTemplate.fontStyle.fontFamily, taskbar.taskbarTemplate.fontStyle.fontSize, taskbar.taskbarTemplate.fontStyle.fontStyle) : font;\n    customizedFontBrush = !isNullOrUndefined(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontColor ? new PdfSolidBrush(taskbar.taskbarTemplate.fontStyle.fontColor) : fontBrush;\n    customizedFontColor = !isNullOrUndefined(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontBrush ? new PdfPen(taskbar.taskbarTemplate.fontStyle.fontBrush) : fontColor;\n    if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) && this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n      font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n    }\n    var taskLabelFont;\n    var taskLabelFontBrush;\n    if (taskbar.labelSettings.taskLabel.fontStyle.fontSize) {\n      var taskFont = new PdfStandardFont(taskbar.labelSettings.taskLabel.fontStyle.fontFamily, taskbar.labelSettings.taskLabel.fontStyle.fontSize, taskbar.labelSettings.taskLabel.fontStyle.fontStyle);\n      taskLabelFont = taskFont;\n    } else {\n      taskLabelFont = font;\n    }\n    if (taskbar.labelSettings.taskLabel.fontStyle.fontColor) {\n      taskLabelFontBrush = new PdfSolidBrush(taskbar.labelSettings.taskLabel.fontStyle.fontColor);\n    } else {\n      taskLabelFontBrush = fontBrush;\n    }\n    var progressFormat = new PdfStringFormat();\n    progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n    progressFormat.alignment = PdfTextAlignment.Right;\n    var isLabelString = false;\n    var updatedWidth;\n    if (!isNullOrUndefined(this.taskLabel) && /^[a-zA-Z0-9]/.test(this.taskLabel)) {\n      if (this.taskLabel === '0' || this.taskLabel === '0%') {\n        updatedWidth = this.width;\n        progressFormat.alignment = PdfTextAlignment.Left;\n      }\n    }\n    if (!isNullOrUndefined(this.taskLabel) && /^[a-zA-Z]/.test(this.taskLabel) || !isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n      isLabelString = true;\n      progressFormat.alignment = PdfTextAlignment.Left;\n    }\n    var pageIndex = -1;\n    var baselinePen = new PdfPen(taskbar.baselineBorderColor);\n    var baselineBrush = new PdfSolidBrush(taskbar.baselineColor);\n    var template = taskbar.taskbarTemplate;\n    var renderedBaseline = false;\n    if (!taskbar.isMilestone) {\n      var taskbarPen_1 = new PdfPen(taskbar.taskBorderColor);\n      var taskBrush_1 = new PdfSolidBrush(taskbar.taskColor);\n      var manualParentBorderPen = new PdfPen(taskbar.manualParentBorder);\n      var manualChildBorderPen = new PdfPen(taskbar.manualChildBorder);\n      var manualTaskbarPen = new PdfPen(taskbar.manuallineColor);\n      var manualParentPen = new PdfPen(taskbar.manualParentProgress);\n      var manualline = new PdfPen(taskbar.manuallineColor);\n      var manuallineBrush = new PdfSolidBrush(taskbar.manuallineColor);\n      var splitline = new PdfPen(taskbar.splitLineBackground);\n      var manualBrush = new PdfSolidBrush(taskbar.manualParentBackground);\n      var manualChildBrush = new PdfSolidBrush(taskbar.manualChildBackground);\n      var manualChildProgressBrush = new PdfSolidBrush(taskbar.manualChildProgress);\n      var manualProgressBrush = new PdfSolidBrush(taskbar.manualParentProgress);\n      var progressPen_1 = new PdfPen(taskbar.progressColor);\n      var progressBrush_1 = new PdfSolidBrush(taskbar.progressColor);\n      var adjustHeightforTaskbar = pixelToPoint((this.parent.rowHeight - this.height) / 2.0);\n      var adjustHeightforBaseline = pixelToPoint((this.parent.rowHeight - this.height) / 4.5);\n      var adjustHeight_1 = this.parent.renderBaseline ? adjustHeightforBaseline : adjustHeightforTaskbar;\n      pageIndex = page.section.indexOf(page);\n      var startDate = isNullOrUndefined(this.unscheduleStarteDate) ? this.startDate : this.unscheduleStarteDate;\n      var endDate = isNullOrUndefined(this.unscheduleEndDate) ? this.endDate : this.unscheduleEndDate;\n      var imageSize_1 = 10;\n      //Task start and end date both are in the range of header split up start and end date\n      if (detail.startDate <= startDate && endDate <= detail.endDate) {\n        if (!this.isStartPoint) {\n          this.taskStartPoint = __assign({}, startPoint);\n          this.isStartPoint = true;\n        }\n        if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n          var brush1 = void 0;\n          var brush2 = void 0;\n          if (this.isAutoFit()) {\n            brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + taskbar.width / 2, 0), new PointF(startPoint.x + (this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n            taskGraphics.drawRectangle(brush1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, taskbar.width, pixelToPoint(taskbar.height));\n            brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + taskbar.width, 0), new PointF(startPoint.x + (this.left - cumulativeWidth) + taskbar.width / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n            //Draw rectangle to fill linear gradient color\n            taskGraphics.drawRectangle(brush2, startPoint.x + (this.left - cumulativeWidth) + 0.5 + taskbar.width / 2, startPoint.y + adjustHeight_1, taskbar.width / 2, pixelToPoint(taskbar.height));\n            if (template.value || template.image) {\n              var imageWidth = void 0;\n              if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n              } else {\n                imageWidth = 0;\n              }\n              !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n            }\n          } else {\n            brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(taskbar.width) / 2, 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n            taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n            brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(taskbar.width), 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + pixelToPoint(taskbar.width) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n            //Draw rectangle to fill linear gradient color\n            taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(taskbar.width) / 2, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width) / 2, pixelToPoint(taskbar.height));\n            if (template.value || template.image) {\n              var imageWidth = void 0;\n              if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n              } else {\n                imageWidth = 0;\n              }\n              !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n            }\n          }\n        } else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n        } else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n        } else {\n          if (taskbar.isSpliterTask) {\n            splitline.dashStyle = PdfDashStyle.Dot;\n            if (this.isAutoFit()) {\n              taskGraphics.drawLine(splitline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(taskbar.width + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n            } else {\n              taskGraphics.drawLine(splitline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(pixelToPoint(taskbar.width) + startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n            }\n            taskbar.segment.map(function (data, index) {\n              if (_this.isAutoFit()) {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, data.width, pixelToPoint(taskbar.height));\n                if (template.value || template.image) {\n                  var imageWidth = void 0;\n                  if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    taskGraphics.drawImage(image, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                  } else {\n                    imageWidth = 0;\n                  }\n                  !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n                }\n              } else {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height));\n                if (template.value || template.image) {\n                  var imageWidth = void 0;\n                  if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    taskGraphics.drawImage(image, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                  } else {\n                    imageWidth = 0;\n                  }\n                  !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n                }\n              }\n            });\n          } else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n            taskGraphics.save();\n            var path = new PdfPath();\n            path.addEllipse(0, 0, 5, 5);\n            if (this.isAutoFit()) {\n              taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n            } else {\n              taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n            }\n            taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path);\n            taskGraphics.restore();\n            var path1 = new PdfPath();\n            path1.addEllipse(0, 0, 5, 5);\n            taskGraphics.save();\n            if (this.isAutoFit()) {\n              taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5 + this.width, startPoint.y + adjustHeight_1 - 2);\n            } else {\n              taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(this.width), startPoint.y + adjustHeight_1 - 2);\n            }\n            taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path1);\n            taskGraphics.restore();\n            manualline.dashStyle = PdfDashStyle.Solid;\n            if (this.isAutoFit()) {\n              taskGraphics.drawLine(manualline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF(taskbar.width + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n            } else {\n              taskGraphics.drawLine(manualline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF(pixelToPoint(taskbar.width) + startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n            }\n          } else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n            taskGraphics.save();\n            taskGraphics.setTransparency(0.87);\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(manualChildBorderPen, manualChildBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, taskbar.width, pixelToPoint(taskbar.height));\n            } else {\n              taskGraphics.drawRectangle(manualChildBorderPen, manualChildBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n            }\n            taskGraphics.restore();\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, taskbar.progressWidth, pixelToPoint(this.height));\n            } else {\n              taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(this.height));\n            }\n          } else {\n            if (this.isAutoFit()) {\n              if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, taskbar.width, pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, taskbar.width, pixelToPoint(taskbar.height));\n                var imageWidth = void 0;\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                  imageWidth = taskbar.taskbarTemplate.image[0].width / 2.0;\n                  var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                  taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0, taskbar.taskbarTemplate.image[0].width / 2.0, taskbar.taskbarTemplate.image[0].height / 2.0);\n                } else {\n                  imageWidth = 0;\n                }\n                if (taskbar.taskbarTemplate.value) {\n                  if (isLabelString) {\n                    updatedWidth = this.width;\n                  }\n                  taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, updatedWidth, pixelToPoint(this.height), progressFormat);\n                }\n              }\n            } else {\n              if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                var imageWidth = void 0;\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                  imageWidth = taskbar.taskbarTemplate.image[0].width;\n                  var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                  taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 1, startPoint.y + adjustHeight_1 + 1 + pixelToPoint((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0), pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                } else {\n                  imageWidth = 0;\n                }\n                !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat) : '';\n              }\n            }\n          }\n          if (this.isScheduledTask && taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n            if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n              if (this.isAutoFit()) {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, taskbar.progressWidth, pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n              }\n              if (!isNullOrUndefined(this.parent.labelSettings.taskLabel) && !isNullOrUndefined(this.taskLabel)) {\n                if (this.taskLabel !== '0' && this.taskLabel !== '0%') {\n                  updatedWidth = this.progressWidth;\n                }\n                if (isLabelString) {\n                  updatedWidth = this.width;\n                }\n                if (this.isAutoFit()) {\n                  taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight_1, updatedWidth, pixelToPoint(this.height), progressFormat);\n                } else {\n                  taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                }\n              }\n            }\n          } else if (taskbar.isSpliterTask) {\n            taskbar.segment.map(function (data, index) {\n              if (_this.isAutoFit()) {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, data.progressWidth, pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(data.progressWidth), pixelToPoint(taskbar.height));\n              }\n            });\n          }\n        }\n        this.isCompleted = true;\n        this.startPage = pageIndex;\n        this.endPage = pageIndex;\n      }\n      //Task start date is in the range of header split up start and end date\n      else if (detail.startDate <= startDate && detail.endDate >= startDate && endDate >= detail.endDate) {\n        if (!this.isStartPoint) {\n          this.taskStartPoint = __assign({}, startPoint);\n          this.isStartPoint = true;\n        }\n        var width = this.width;\n        var renderWidth_1 = 0;\n        var progressWidth = 0;\n        var splitRenderwidth_1 = 0;\n        this.width = this.width - (detail.totalWidth - (this.left - cumulativeWidth));\n        renderWidth_1 = detail.totalWidth - (this.left - cumulativeWidth);\n        progressWidth = detail.totalWidth - (this.left - cumulativeWidth);\n        if (width < renderWidth_1) {\n          renderWidth_1 = width;\n        }\n        splitRenderwidth_1 = renderWidth_1;\n        if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n          var brush1 = void 0;\n          var brush2 = void 0;\n          if (this.isAutoFit()) {\n            brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + renderWidth_1 / 2, 0), new PointF(startPoint.x + (this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n            taskGraphics.drawRectangle(brush1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, renderWidth_1, pixelToPoint(taskbar.height));\n            brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + renderWidth_1, 0), new PointF(startPoint.x + (this.left - cumulativeWidth) + renderWidth_1 / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n            taskGraphics.drawRectangle(brush2, startPoint.x + (this.left - cumulativeWidth) + 0.5 + renderWidth_1 / 2, startPoint.y + adjustHeight_1, renderWidth_1 / 2, pixelToPoint(taskbar.height));\n            if (template.value || template.image) {\n              var imageWidth = void 0;\n              if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n              } else {\n                imageWidth = 0;\n              }\n              !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n            }\n          } else {\n            brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(renderWidth_1) / 2, 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n            taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n            brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(renderWidth_1), 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + pixelToPoint(renderWidth_1) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n            taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(renderWidth_1) / 2, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1) / 2, pixelToPoint(taskbar.height));\n            if (template.value || template.image) {\n              var imageWidth = void 0;\n              if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n              } else {\n                imageWidth = 0;\n              }\n              !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n            }\n          }\n        } else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n        } else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n          taskGraphics.save();\n          var path = new PdfPath();\n          path.addEllipse(0, 0, 5, 5);\n          if (this.isAutoFit()) {\n            taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n          } else {\n            taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n          }\n          taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path);\n          taskGraphics.restore();\n          manualline.dashStyle = PdfDashStyle.Solid;\n          if (this.isAutoFit()) {\n            taskGraphics.drawLine(manualline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF(renderWidth_1 + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n          } else {\n            taskGraphics.drawLine(manualline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF(pixelToPoint(renderWidth_1) + startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n          }\n        } else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n          if (this.isAutoFit()) {\n            taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, renderWidth_1, pixelToPoint(taskbar.height));\n          } else {\n            taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n          }\n          taskGraphics.save();\n          taskGraphics.setTransparency(0.87);\n          if (this.isAutoFit()) {\n            taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, renderWidth_1, pixelToPoint(taskbar.height));\n          } else {\n            taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n          }\n          taskGraphics.restore();\n          if (this.isAutoFit()) {\n            taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, progressWidth, pixelToPoint(taskbar.height));\n          } else {\n            taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressWidth), pixelToPoint(taskbar.height));\n          }\n          taskbar.progressWidth = taskbar.progressWidth - progressWidth;\n        } else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n        } else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n        } else {\n          if (taskbar.isSpliterTask) {\n            var pervwidth_1 = 0;\n            var valueChangeBlocker_1 = true;\n            var lineWidth_1 = 0;\n            taskbar.segment.map(function (item) {\n              lineWidth_1 = item.left + item.width;\n            });\n            splitline.dashStyle = PdfDashStyle.Dot;\n            if (this.isAutoFit()) {\n              taskGraphics.drawLine(splitline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(lineWidth_1 + (this.left - cumulativeWidth) + startPoint.x, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n            } else {\n              taskGraphics.drawLine(splitline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(pixelToPoint(lineWidth_1) + pixelToPoint(this.left - cumulativeWidth) + startPoint.x, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n            }\n            taskbar.segment.map(function (data, index) {\n              if (_this.isAutoFit()) {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + data.left, startPoint.y + adjustHeight_1, data.width, pixelToPoint(taskbar.height));\n                if (template.value || template.image) {\n                  var imageWidth = void 0;\n                  if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    taskGraphics.drawImage(image, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + data.left, startPoint.y + adjustHeight_1, taskbar.taskbarTemplate.image[0].width, taskbar.taskbarTemplate.image[0].height);\n                  } else {\n                    imageWidth = 0;\n                  }\n                  !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + data.left + imageWidth, startPoint.y + adjustHeight_1, data.width, taskbar.height, progressFormat) : '';\n                }\n              } else {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(_this.left - cumulativeWidth) + 0.5 + pixelToPoint(data.left), startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height));\n                if (template.value || template.image) {\n                  var imageWidth = void 0;\n                  if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    taskGraphics.drawImage(image, startPoint.x + pixelToPoint(_this.left - cumulativeWidth) + 0.5 + pixelToPoint(data.left), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                  } else {\n                    imageWidth = 0;\n                  }\n                  !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(_this.left - cumulativeWidth) + 0.5 + pixelToPoint(data.left) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n                }\n              }\n              pervwidth_1 = data.left + data.width;\n              if (renderWidth_1 >= pervwidth_1) {\n                _this.segmentCollection[parseInt(index.toString(), 10)].width = 0;\n                _this.segmentCollection[parseInt(index.toString(), 10)].left = 0;\n              } else {\n                if (renderWidth_1 >= pervwidth_1 - data.width) {\n                  _this.segmentCollection[parseInt(index.toString(), 10)].left = 0;\n                } else {\n                  _this.segmentCollection[parseInt(index.toString(), 10)].left = splitRenderwidth_1 - data.left;\n                }\n                if (renderWidth_1 >= pervwidth_1) {\n                  _this.segmentCollection[parseInt(index.toString(), 10)].width = 0;\n                } else {\n                  if (valueChangeBlocker_1) {\n                    _this.segmentCollection[parseInt(index.toString(), 10)].width = pervwidth_1 - renderWidth_1;\n                    valueChangeBlocker_1 = false;\n                  }\n                }\n              }\n              splitRenderwidth_1 = splitRenderwidth_1 + data.width + data.left;\n            });\n          } else {\n            if (this.isAutoFit()) {\n              if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, renderWidth_1, pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, renderWidth_1, pixelToPoint(taskbar.height));\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                  var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                  taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 0.5), taskbar.taskbarTemplate.image[0].width / 2.0, taskbar.taskbarTemplate.image[0].height / 2.0);\n                }\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                  var imageWidth = !isNullOrUndefined(taskbar.taskbarTemplate.image) ? taskbar.taskbarTemplate.image[0].width : 0;\n                  taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                }\n              }\n            } else {\n              if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n                var imageWidth = void 0;\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                  imageWidth = taskbar.taskbarTemplate.image[0].width;\n                  var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                  taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 1, startPoint.y + adjustHeight_1 + 1 + pixelToPoint((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0), pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                } else {\n                  imageWidth = 0;\n                }\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                  this.stringLeft = pixelToPoint(this.left);\n                  var result_1 = this.getWidth(taskbar.taskbarTemplate.value, detail.endPoint - this.stringLeft, 15);\n                  taskGraphics.drawString(result_1.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                  if (!isNullOrUndefined(result_1.remainder)) {\n                    this.remainString = result_1.remainder;\n                    this.stringLeft = detail.endPoint;\n                    // this.rightTaskLabel.isLeftCalculated = true;\n                  }\n                }\n              }\n            }\n            if (taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n              var progressBoundsWidth = 0;\n              if (this.progressWidth <= renderWidth_1) {\n                progressBoundsWidth = this.progressWidth;\n              } else {\n                progressBoundsWidth = renderWidth_1;\n              }\n              if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n                if (this.isAutoFit()) {\n                  taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, progressBoundsWidth, pixelToPoint(taskbar.height));\n                } else {\n                  taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                }\n              }\n              this.progressWidth -= progressBoundsWidth;\n              if (this.parent.labelSettings.taskLabel && !isNullOrUndefined(this.taskLabel)) {\n                updatedWidth = progressBoundsWidth;\n                if (isLabelString) {\n                  updatedWidth = renderWidth_1;\n                }\n                this.stringLeft = this.left;\n                if (isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                  var result_2 = this.getWidth(this.taskLabel.toString(), detail.endPoint - this.stringLeft, 15);\n                  taskGraphics.drawString(result_2.lines[0].text, taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                  if (!isNullOrUndefined(result_2.remainder)) {\n                    this.remainString = result_2.remainder;\n                    this.stringLeft = detail.endPoint;\n                    // this.rightTaskLabel.isLeftCalculated = true;\n                  }\n                } else {\n                  if (this.isAutoFit()) {\n                    taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight_1, updatedWidth, pixelToPoint(this.height), progressFormat);\n                  } else {\n                    taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                  }\n                }\n              }\n            }\n          }\n          if (taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n            var progressBoundsWidth = 0;\n            if (this.progressWidth <= renderWidth_1) {\n              progressBoundsWidth = this.progressWidth;\n            } else {\n              progressBoundsWidth = renderWidth_1;\n            }\n            if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n              if (this.isAutoFit()) {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, progressBoundsWidth, pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n              }\n            }\n            this.progressWidth -= progressBoundsWidth;\n            if (this.parent.labelSettings.taskLabel && !isNullOrUndefined(this.taskLabel)) {\n              updatedWidth = progressBoundsWidth;\n              if (isLabelString) {\n                updatedWidth = this.width;\n              }\n              if (this.isAutoFit()) {\n                taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight_1, updatedWidth, pixelToPoint(this.height), progressFormat);\n              } else {\n                taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n              }\n            }\n          } else if (taskbar.isSpliterTask) {\n            taskbar.segment.map(function (data, index) {\n              if (_this.isAutoFit()) {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, data.progressWidth, pixelToPoint(taskbar.height));\n              } else {\n                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(data.progressWidth), pixelToPoint(taskbar.height));\n              }\n              if (_this.segmentCollection[parseInt(index.toString(), 10)].width === 0) {\n                _this.segmentCollection[parseInt(index.toString(), 10)].progressWidth = 0;\n              } else {\n                if (data.width - _this.segmentCollection[parseInt(index.toString(), 10)].width < data.progressWidth && data.width !== _this.segmentCollection[index].width) {\n                  _this.segmentCollection[parseInt(index.toString(), 10)].progressWidth = data.progressWidth - (data.width - _this.segmentCollection[index].width);\n                }\n              }\n            });\n          }\n        }\n        this.left = 0;\n        this.isCompleted = false;\n        this.startPage = pageIndex;\n      }\n      //Task end date is in the range of header split up start and end date\n      else if (endDate <= detail.endDate && detail.startDate <= endDate && !this.isCompleted) {\n        if (!this.isStartPoint) {\n          this.taskStartPoint = __assign({}, startPoint);\n          this.isStartPoint = true;\n        }\n        if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n          var brush1 = void 0;\n          var brush2 = void 0;\n          brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width) / 2, 0), new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n          taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n          brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width), 0), new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n          taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width) / 2, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width) / 2, pixelToPoint(taskbar.height));\n          if (template.value || template.image) {\n            var imageWidth = void 0;\n            if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n              imageWidth = taskbar.taskbarTemplate.image[0].width;\n              var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n              taskGraphics.drawImage(image, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n            } else {\n              imageWidth = 0;\n            }\n            !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n          }\n        } else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n          var path1 = new PdfPath();\n          path1.addEllipse(0, 0, 5, 5); // Circle with radius 5\n          taskGraphics.save(); // Save the current graphics state  \n          var lineStartX = startPoint.x + pixelToPoint(this.left + 0.5); // Calculate the endpoint of the line\n          var lineEndX = pixelToPoint(taskbar.autoWidth) + lineStartX - 5;\n          var lineY = startPoint.y + adjustHeight_1;\n          taskGraphics.drawLine(manualline, lineStartX, lineY, lineEndX, lineY); // Draw the line first     \n          taskGraphics.translateTransform(lineEndX, lineY - 2); // Now move the origin to the line's end point to draw the circle        \n          taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path1); // Draw the circle at the end of the line  \n          taskGraphics.restore(); // Restore the graphics state\n          manualline.dashStyle = PdfDashStyle.Solid; // Ensure the line has a solid style\n        } else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n          taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + pixelToPoint(this.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n          taskGraphics.save();\n          taskGraphics.setTransparency(0.87);\n          taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + pixelToPoint(this.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n          taskGraphics.restore();\n          taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(this.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n        } else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n        } else if (taskbar.isSpliterTask) {\n          splitline.dashStyle = PdfDashStyle.Dot;\n          taskGraphics.drawLine(splitline, new PointF(startPoint.x + pixelToPoint(this.left) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(pixelToPoint(taskbar.width) + startPoint.x + pixelToPoint(this.left), startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n          taskbar.segmentCollection.map(function (data, index) {\n            if (data.width !== 0) {\n              taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height));\n              if (template.value || template.image) {\n                var imageWidth = void 0;\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                  imageWidth = taskbar.taskbarTemplate.image[0].width;\n                  var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                  taskGraphics.drawImage(image, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                } else {\n                  imageWidth = 0;\n                }\n                !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n              }\n            }\n          });\n        } else {\n          taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n          if (!isNullOrUndefined(this.remainString)) {\n            var result = this.getWidth(this.remainString, taskbar.width - taskbar.left, 15);\n            taskGraphics.drawString(result.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left), startPoint.y + adjustHeight_1, result.actualSize.width, pixelToPoint(this.height), progressFormat);\n          }\n        }\n        if (this.isScheduledTask && taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n          if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n            taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n          }\n          if (!isNullOrUndefined(this.taskLabel)) {\n            updatedWidth = this.progressWidth;\n            if (isLabelString) {\n              updatedWidth = this.width;\n            }\n            if (isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n              if (isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                if (!isNullOrUndefined(this.remainString)) {\n                  var result_3 = this.getWidth(this.remainString, detail.endPoint - this.stringLeft, 15);\n                  taskGraphics.drawString(result_3.lines[0].text, font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                }\n              }\n            }\n            if (!isNullOrUndefined(this.taskLabel)) {\n              updatedWidth = this.progressWidth;\n              if (isLabelString) {\n                updatedWidth = this.width;\n              }\n              taskGraphics.drawString(this.taskLabel.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n            }\n          }\n        } else if (taskbar.isSpliterTask) {\n          taskbar.segmentCollection.map(function (data, index) {\n            taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, pixelToPoint(data.progressWidth), pixelToPoint(taskbar.height));\n          });\n        }\n        this.isCompleted = true;\n        this.endPage = pageIndex;\n      }\n      //Header splitup start and end date with in the task start and end date.\n      //So the task is takes entire width of page.\n      else if (startDate < detail.startDate && endDate > detail.endDate) {\n        if (!this.isStartPoint) {\n          this.taskStartPoint = __assign({}, startPoint);\n          this.isStartPoint = true;\n        }\n        if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n          var brush1 = void 0;\n          var brush2 = void 0;\n          brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left) + 0.5 + pixelToPoint(detail.totalWidth) / 2, 0), new PointF(startPoint.x + pixelToPoint(taskbar.left), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n          taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n          brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left) + 0.5 + pixelToPoint(detail.totalWidth), 0), new PointF(startPoint.x + pixelToPoint(taskbar.left) + pixelToPoint(detail.totalWidth) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n          taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(taskbar.left) + 0.5 + pixelToPoint(detail.totalWidth) / 2, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth) / 2, pixelToPoint(taskbar.height));\n          if (template.value || template.image) {\n            var imageWidth = void 0;\n            if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n              imageWidth = taskbar.taskbarTemplate.image[0].width;\n              var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n              taskGraphics.drawImage(image, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n            } else {\n              imageWidth = 0;\n            }\n            !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : 0;\n          }\n        } else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n          this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n        } else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n          taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n          taskGraphics.save();\n          taskGraphics.setTransparency(0.87);\n          taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n          taskGraphics.restore();\n          var progressBoundsWidth = 0;\n          if (this.progressWidth <= detail.totalWidth) {\n            progressBoundsWidth = this.progressWidth;\n          } else {\n            progressBoundsWidth = detail.totalWidth;\n          }\n          if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n            taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n          }\n          this.progressWidth -= progressBoundsWidth;\n          taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n        } else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n          manualline.dashStyle = PdfDashStyle.Solid;\n          taskGraphics.drawLine(manualline, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), startPoint.y + adjustHeight_1);\n        } else {\n          taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n          if (!isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n            if (!isNullOrUndefined(this.remainString)) {\n              var result_4 = this.getWidth(this.remainString, detail.endPoint - this.stringLeft, 15);\n              taskGraphics.drawString(result_4.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(this.height), progressFormat);\n            }\n          }\n          if (this.isScheduledTask && !taskbar.isParentTask) {\n            var progressBoundsWidth = 0;\n            if (this.progressWidth <= detail.totalWidth) {\n              progressBoundsWidth = this.progressWidth;\n            } else {\n              progressBoundsWidth = detail.totalWidth;\n            }\n            if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n              taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n            }\n            this.progressWidth -= progressBoundsWidth;\n            if (!isNullOrUndefined(this.taskLabel)) {\n              updatedWidth = progressBoundsWidth;\n              if (isLabelString) {\n                updatedWidth = this.width;\n              }\n              taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n            }\n          }\n        }\n        this.isCompleted = false;\n        this.width -= detail.totalWidth;\n      }\n      if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n        if (detail.startDate <= taskbar.baselineStartDate && taskbar.baselineEndDate <= detail.endDate) {\n          if (!this.isStartPoint) {\n            this.taskStartPoint = __assign({}, startPoint);\n            this.isStartPoint = true;\n          }\n          if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), taskbar.baselineWidth, pixelToPoint(this.baselineHeight));\n            } else {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(taskbar.baselineWidth), pixelToPoint(this.baselineHeight));\n            }\n          }\n          this.isCompletedBaseline = true;\n          this.startPage = pageIndex;\n          this.endPage = pageIndex;\n        } else if (detail.startDate <= taskbar.baselineStartDate && detail.endDate >= taskbar.baselineStartDate && taskbar.baselineEndDate >= detail.endDate) {\n          if (!this.isStartPoint) {\n            this.taskStartPoint = __assign({}, startPoint);\n            this.isStartPoint = true;\n          }\n          var renderWidth = 0;\n          var width = this.baselineWidth;\n          renderWidth = detail.totalWidth - (taskbar.baselineLeft - cumulativeWidth);\n          if (width < renderWidth) {\n            renderWidth = width;\n          }\n          if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), renderWidth, pixelToPoint(this.baselineHeight));\n            } else {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(renderWidth), pixelToPoint(this.baselineHeight));\n            }\n          }\n          taskbar.baselineWidth = taskbar.baselineWidth - renderWidth;\n          this.baselineLeft = 0;\n          this.isCompletedBaseline = false;\n          this.startPage = pageIndex;\n        } else if (taskbar.baselineEndDate <= detail.endDate && detail.startDate <= taskbar.baselineEndDate && !this.isCompletedBaseline) {\n          if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft + 0.5), startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), taskbar.baselineWidth, pixelToPoint(this.baselineHeight));\n            } else {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft + 0.5), startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(taskbar.baselineWidth), pixelToPoint(this.baselineHeight));\n            }\n          }\n          this.isCompletedBaseline = true;\n          this.endPage = pageIndex;\n        } else if (taskbar.baselineStartDate < detail.startDate && taskbar.baselineEndDate > detail.endDate) {\n          if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + taskbar.baselineLeft + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), detail.totalWidth, pixelToPoint(taskbar.baselineHeight));\n            } else {\n              taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.baselineHeight));\n            }\n          }\n          this.isCompletedBaseline = false;\n          this.baselineWidth -= detail.totalWidth;\n        }\n      }\n      if (!this.isAutoSchedule && taskbar.isParentTask) {\n        if (detail.startDate <= taskbar.autoStartDate && taskbar.autoEndDate <= detail.endDate) {\n          if (!this.isStartPoint) {\n            this.taskStartPoint = __assign({}, startPoint);\n            this.isStartPoint = true;\n          }\n          if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, this.autoWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(this.autoWidth), pixelToPoint(12));\n            }\n            taskGraphics.save();\n            taskGraphics.setTransparency(0.87);\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, this.autoWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(null, manualBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(this.autoWidth), pixelToPoint(12));\n            }\n            taskGraphics.restore();\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, taskbar.progressWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.progressWidth), pixelToPoint(12));\n            }\n          }\n          this.isCompletedAutotask = true;\n          this.startPage = pageIndex;\n          this.endPage = pageIndex;\n        } else if (detail.startDate <= taskbar.autoStartDate && detail.endDate >= taskbar.autoStartDate && taskbar.autoEndDate >= detail.endDate) {\n          if (!this.isStartPoint) {\n            this.taskStartPoint = __assign({}, startPoint);\n            this.isStartPoint = true;\n          }\n          var renderWidth = 0;\n          var progressWidth = 0;\n          renderWidth = detail.totalWidth - (this.autoLeft - cumulativeWidth);\n          progressWidth = detail.totalWidth - (this.autoLeft - cumulativeWidth);\n          if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, renderWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(renderWidth), pixelToPoint(12));\n            }\n            taskGraphics.save();\n            taskGraphics.setTransparency(0.87);\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, renderWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(null, manualBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(renderWidth), pixelToPoint(12));\n            }\n            taskGraphics.restore();\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, taskbar.progressWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(progressWidth), pixelToPoint(12));\n            }\n            taskbar.autoWidth = taskbar.autoWidth - renderWidth;\n            taskbar.progressWidth = taskbar.progressWidth - progressWidth;\n          }\n          this.autoLeft = 0;\n          this.isCompletedAutotask = false;\n          this.startPage = pageIndex;\n        } else if (taskbar.autoEndDate <= detail.endDate && detail.startDate <= taskbar.autoEndDate && !this.isCompletedAutotask) {\n          if (!this.isStartPoint) {\n            this.taskStartPoint = __assign({}, startPoint);\n            this.isStartPoint = true;\n          } else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.autoWidth), pixelToPoint(12));\n            taskGraphics.save();\n            taskGraphics.setTransparency(0.87);\n            taskGraphics.drawRectangle(manualBrush, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.autoWidth), pixelToPoint(12));\n            taskGraphics.restore();\n            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.progressWidth), pixelToPoint(12));\n          }\n          this.isCompletedAutotask = true;\n          this.endPage = pageIndex;\n        } else if (taskbar.autoStartDate < detail.startDate && taskbar.autoEndDate > detail.endDate) {\n          if (!this.isStartPoint) {\n            this.taskStartPoint = __assign({}, startPoint);\n            this.isStartPoint = true;\n          }\n          if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n            var progressBoundsWidth = 0;\n            if (this.progressWidth <= detail.totalWidth) {\n              progressBoundsWidth = this.progressWidth;\n            } else {\n              progressBoundsWidth = detail.totalWidth;\n            }\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, progressBoundsWidth, pixelToPoint(12));\n            } else {\n              if (taskbar.progressWidth !== 0) {\n                taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(progressBoundsWidth), pixelToPoint(12));\n              }\n            }\n            this.progressWidth -= progressBoundsWidth;\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + this.autoLeft + 0.5, startPoint.y + adjustHeight_1 + 10, detail.totalWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(detail.totalWidth), pixelToPoint(12));\n            }\n            taskGraphics.save();\n            taskGraphics.setTransparency(0.87);\n            if (this.isAutoFit()) {\n              taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, detail.totalWidth, pixelToPoint(12));\n            } else {\n              taskGraphics.drawRectangle(null, manualBrush, startPoint.x + pixelToPoint(this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(detail.totalWidth), pixelToPoint(12));\n            }\n            taskGraphics.restore();\n          }\n          this.isCompletedAutotask = false;\n          this.autoWidth -= detail.totalWidth;\n        }\n      }\n      if (!isNullOrUndefined(taskbar.indicators) && taskbar.indicators.length > 0) {\n        taskbar.indicators.map(function (items, index) {\n          var currendate = _this.parent.dateValidationModule.getDateFromFormat(items.date, true);\n          if (detail.startDate <= currendate && currendate <= detail.endDate) {\n            var leftValue = _this.parent.chartRowsModule.getIndicatorleft(items.date);\n            if (!isNullOrUndefined(items.base64)) {\n              var image = new PdfBitmap(items.base64);\n              if (_this.isAutoFit()) {\n                taskGraphics.drawImage(image, startPoint.x + (leftValue - cumulativeWidth) + 0.5 + 10, startPoint.y + adjustHeight_1, imageSize_1, imageSize_1);\n                taskGraphics.drawString(items.name, font, null, PdfBrushes.Black, startPoint.x + (leftValue - cumulativeWidth) + 0.5 + 15 + imageSize_1, startPoint.y + adjustHeight_1, null);\n              } else {\n                taskGraphics.drawImage(image, startPoint.x + pixelToPoint(leftValue - cumulativeWidth) + 0.5 + 10, startPoint.y + adjustHeight_1, imageSize_1, imageSize_1);\n                taskGraphics.drawString(items.name, font, null, PdfBrushes.Black, startPoint.x + pixelToPoint(leftValue - cumulativeWidth) + 0.5 + 15 + imageSize_1, startPoint.y + adjustHeight_1, null);\n              }\n            }\n          }\n        });\n      }\n    } else {\n      this.drawMilestone(page, startPoint, detail, cumulativeWidth, taskbar, false);\n      if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n        this.drawMilestone(page, startPoint, detail, cumulativeWidth, taskbar, true);\n      }\n    }\n    this.drawRightLabel(page, startPoint, detail, cumulativeWidth);\n    return isNextPage;\n  };\n  /* eslint-enable */\n  /**\n   * @param {IGanttStyle} ganttStyle .\n   * @returns {PdfFont}\n   * Customizes the font based on the Gantt style.\n   */\n  PdfGanttTaskbarCollection.prototype.getPdfFont = function (ganttStyle) {\n    var font;\n    if (ganttStyle && ganttStyle.label && (ganttStyle.label.fontSize || ganttStyle.label.fontStyle || ganttStyle.label.fontFamily)) {\n      var fontSize = ganttStyle.label.fontSize ? ganttStyle.label.fontSize : 9;\n      var fontFamilyValue = ganttStyle.label.fontFamily;\n      var fontFamily = ganttStyle.label.fontFamily ? this.parent.pdfExportModule.helper['getFontFamily'](fontFamilyValue) : this.fontFamily;\n      var fontStyleValue = ganttStyle.label.fontStyle;\n      var fontStyle = ganttStyle.label.fontStyle ? this.parent.pdfExportModule.helper['getFontStyle'](fontStyleValue) : PdfFontStyle.Regular;\n      font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n    }\n    return font;\n  };\n  /* eslint-enable */\n  /**\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails} detail .\n   * @param {number} cumulativeWidth .\n   * @returns {void}\n   * Draw task right side label\n   */\n  PdfGanttTaskbarCollection.prototype.drawRightLabel = function (page, startPoint, detail, cumulativeWidth) {\n    var left;\n    var graphics = page.graphics;\n    if (!isNullOrUndefined(this.rightTaskLabel.value)) {\n      if (this.rightTaskLabel.isLeftCalculated) {\n        left = this.rightTaskLabel.left;\n      } else {\n        if (this.isAutoFit()) {\n          left = this.rightTaskLabel.left;\n        } else {\n          left = pixelToPoint(this.rightTaskLabel.left);\n        }\n      }\n      var actualLeft = void 0;\n      if (this.isAutoFit()) {\n        actualLeft = left - cumulativeWidth + startPoint.x;\n      } else {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n      }\n      if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(this.rightTaskLabel.value) && !this.rightTaskLabel.isCompleted) {\n        var result = this.getWidth(this.rightTaskLabel.value, detail.endPoint - left, 15);\n        var font = new PdfStandardFont(this.fontFamily, 9);\n        var customizedFont = void 0;\n        var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n        if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) && (!isNullOrUndefined(ganttStyle.label.fontSize) || !isNullOrUndefined(ganttStyle.label.fontStyle) || !isNullOrUndefined(ganttStyle.label.fontFamily))) {\n          customizedFont = this.getPdfFont(ganttStyle);\n        }\n        if (!isNullOrUndefined(customizedFont)) {\n          font = customizedFont;\n        }\n        var padding = {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0\n        };\n        if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) && !isNullOrUndefined(ganttStyle.label.padding)) {\n          padding = ganttStyle.label.padding;\n        }\n        if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) && this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n          font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n        var point = new PointF(actualLeft + padding.left, startPoint.y + adjustHeight + padding.top);\n        var size = new SizeF(result.actualSize.width - (padding.left + padding.right), result.actualSize.height - (padding.top + padding.bottom));\n        var labelBounds = new RectangleF(point, size);\n        var labelFormat = new PdfStringFormat();\n        labelFormat.alignment = PdfTextAlignment.Right;\n        labelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        if (result.actualSize.width > 0) {\n          var fontColor = null;\n          var fontBrush = new PdfSolidBrush(this.labelColor);\n          /* eslint-disable-next-line */\n          graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, labelBounds.x, labelBounds.y, result.actualSize.width, result.actualSize.height, labelFormat);\n          if (result.remainder !== null) {\n            this.rightTaskLabel.value = result.remainder;\n            this.rightTaskLabel.left = detail.endPoint;\n            this.rightTaskLabel.isLeftCalculated = true;\n          } else {\n            this.rightTaskLabel.isCompleted = true;\n          }\n        } else {\n          this.rightTaskLabel.left = detail.endPoint;\n        }\n      }\n    } else {\n      if (!isNullOrUndefined(this.labelSettings.rightLabel.image)) {\n        this.previousWidthofRightImage = 0;\n        this.previousWidthofRightValue = 0;\n        for (var i = 0; i < this.labelSettings.rightLabel.image.length; i++) {\n          this.drawRigthlabelImage(page, startPoint, detail, cumulativeWidth, this.labelSettings.rightLabel.image[i]);\n          if (this.labelSettings.rightLabel.value) {\n            var value = this.labelSettings.rightLabel.value.split(',');\n            if (value) {\n              this.rightTaskLabel.isCompleted = false;\n              this.drawRightLabelValue(page, startPoint, detail, cumulativeWidth, value[i]);\n            }\n          }\n        }\n      } else if (this.labelSettings.rightLabel.value) {\n        this.drawRightLabelValue(page, startPoint, detail, cumulativeWidth, this.labelSettings.rightLabel.value);\n      }\n    }\n  };\n  PdfGanttTaskbarCollection.prototype.drawRigthlabelImage = function (page, startPoint, detail, cumulativeWidth, rightImage) {\n    var left;\n    var graphics = page.graphics;\n    var labelBounds;\n    if (!isNullOrUndefined(this.labelSettings.rightLabel) && !isNullOrUndefined(this.labelSettings.rightLabel.image)) {\n      if (this.labelSettings.isLeftCalculated) {\n        left = this.rightTaskLabel.left;\n      } else {\n        if (this.isAutoFit()) {\n          if (this.labelSettings.rightLabel.image.length > 1) {\n            left = this.rightTaskLabel.left + +this.previousWidthofRightValue;\n            this.previousWidthofRightImage = rightImage.width;\n          } else {\n            left = this.rightTaskLabel.left;\n          }\n        } else {\n          var value = void 0;\n          if (!isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n            value = this.labelSettings.rightLabel.value.split(',');\n          }\n          if (this.labelSettings.rightLabel.image.length > 1 && value.length > 1) {\n            left = pixelToPoint(this.rightTaskLabel.left) + this.previousWidthofRightValue;\n            this.previousWidthofRightImage = rightImage.width;\n          } else if (this.labelSettings.rightLabel.image.length > 1) {\n            left = pixelToPoint(this.rightTaskLabel.left) + this.previousWidthofRightImage;\n            this.previousWidthofRightImage = rightImage.width;\n          } else {\n            left = pixelToPoint(this.rightTaskLabel.left);\n          }\n        }\n      }\n      var actualLeft = void 0;\n      if (this.isAutoFit()) {\n        actualLeft = left - cumulativeWidth + startPoint.x;\n      } else {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n      }\n      if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(this.labelSettings.rightLabel) && !this.rightTaskLabel.isCompleted) {\n        var result = new SizeF(rightImage.width, rightImage.height);\n        var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.height) / 2;\n        var point = new PointF(actualLeft, startPoint.y + adjustHeight);\n        var size = new SizeF(result.width, result.height);\n        labelBounds = new RectangleF(point, size);\n        var image = new PdfBitmap(rightImage.base64);\n        if (result.width > 0) {\n          graphics.drawImage(image, labelBounds.x, labelBounds.y, result.width, result.height);\n          if (this.labelSettings.rightLabel.value !== null) {\n            this.rightTaskLabel.isLeftCalculated = true;\n          } else {\n            if (isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n              this.rightTaskLabel.isCompleted = true;\n            }\n          }\n        } else {\n          this.rightTaskLabel.left = detail.endPoint;\n        }\n      }\n    }\n  };\n  PdfGanttTaskbarCollection.prototype.drawRightLabelValue = function (page, startPoint, detail, cumulativeWidth, rightString) {\n    var left;\n    var graphics = page.graphics;\n    if (!isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n      if (this.labelSettings.isLeftCalculated) {\n        left = this.rightTaskLabel.left;\n      } else {\n        if (this.isAutoFit()) {\n          if (this.labelSettings.rightLabel.image) {\n            if (this.labelSettings.rightLabel.image.length > 1) {\n              left = this.rightTaskLabel.left + this.previousWidthofRightImage + this.previousWidthofRightValue;\n              if (!isNullOrUndefined(rightString)) {\n                var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n                this.previousWidthofRightValue += result.actualSize.width + this.previousWidthofRightImage;\n              }\n            } else {\n              left = this.rightTaskLabel.left + this.labelSettings.rightLabel.image[0].width;\n            }\n          } else {\n            left = this.rightTaskLabel.left;\n          }\n        } else {\n          if (this.labelSettings.rightLabel.image) {\n            if (this.labelSettings.rightLabel.image.length > 1) {\n              left = pixelToPoint(this.rightTaskLabel.left) + this.previousWidthofRightImage + this.previousWidthofRightValue;\n              if (!isNullOrUndefined(rightString)) {\n                var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n                this.previousWidthofRightValue += result.actualSize.width + this.previousWidthofRightImage;\n              }\n            } else {\n              left = pixelToPoint(this.rightTaskLabel.left) + this.labelSettings.rightLabel.image[0].width;\n            }\n          } else {\n            left = pixelToPoint(this.rightTaskLabel.left);\n          }\n        }\n      }\n      var actualLeft = void 0;\n      if (this.isAutoFit()) {\n        actualLeft = left - cumulativeWidth + startPoint.x;\n      } else {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n      }\n      if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(rightString) && !this.rightTaskLabel.isCompleted) {\n        var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n        var font = new PdfStandardFont(this.fontFamily, 9);\n        if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) && this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n          font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n        var point = new PointF(actualLeft, startPoint.y + adjustHeight);\n        var size = new SizeF(result.actualSize.width, result.actualSize.height);\n        var labelBound = new RectangleF(point, size);\n        var labelFormat = new PdfStringFormat();\n        labelFormat.alignment = PdfTextAlignment.Right;\n        labelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        if (result.actualSize.width > 0) {\n          var fontColor = null;\n          var fontBrush = new PdfSolidBrush(this.labelColor);\n          var newFont = this.labelSettings.rightLabel.fontStyle.fontSize ? new PdfStandardFont(this.labelSettings.rightLabel.fontStyle.fontFamily, this.labelSettings.rightLabel.fontStyle.fontSize, this.labelSettings.rightLabel.fontStyle.fontStyle) : font;\n          var newFontBrush = this.labelSettings.rightLabel.fontStyle.fontColor ? new PdfSolidBrush(this.labelSettings.rightLabel.fontStyle.fontColor) : fontBrush;\n          /* eslint-disable-next-line */\n          graphics.drawString(rightString, newFont, fontColor, newFontBrush, labelBound.x, labelBound.y, result.actualSize.width, result.actualSize.height, labelFormat);\n          if (!isNullOrUndefined(result.remainder) && result.remainder !== null) {\n            this.rightTaskLabel.value = result.remainder;\n            this.rightTaskLabel.left = detail.endPoint;\n            this.rightTaskLabel.isLeftCalculated = true;\n          } else {\n            if (isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n              this.rightTaskLabel.isCompleted = true;\n            }\n          }\n        } else {\n          this.rightTaskLabel.left = detail.endPoint;\n        }\n      }\n    }\n  };\n  /**\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails} detail .\n   * @param {number} cumulativeWidth .\n   * @param {PdfGanttTaskbarCollection} taskbar .\n   * @returns {void}\n   * Draw task left task label\n   */\n  PdfGanttTaskbarCollection.prototype.drawLeftLabel = function (page, startPoint, detail, cumulativeWidth, taskbar) {\n    var graphics = page.graphics;\n    var left;\n    if (!isNullOrUndefined(this.leftTaskLabel.value)) {\n      var labelLeft = 0;\n      labelLeft = this.left;\n      if (!this.leftTaskLabel.isLeftCalculated) {\n        var result = this.getWidth(this.leftTaskLabel.value, Number.MAX_VALUE, 15);\n        var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n        if (this.isAutoFit()) {\n          left = labelLeft - reduceLeft - result.actualSize.width;\n        } else {\n          left = pixelToPoint(labelLeft - reduceLeft) - result.actualSize.width;\n        }\n        this.leftTaskLabel.left = left;\n        this.leftTaskLabel.isLeftCalculated = true;\n      } else {\n        left = this.leftTaskLabel.left;\n      }\n      var actualLeft = void 0;\n      if (this.isAutoFit()) {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n        if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n          var leftValue = taskbar.left - taskbar.autoLeft;\n          if (taskbar.left < taskbar.autoLeft) {\n            actualLeft = left - cumulativeWidth + startPoint.x;\n          } else {\n            actualLeft = left - cumulativeWidth + startPoint.x - leftValue;\n          }\n        }\n      } else {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n        if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n          var leftValue = pixelToPoint(taskbar.left) - pixelToPoint(taskbar.autoLeft);\n          if (taskbar.left < taskbar.autoLeft) {\n            actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n          } else {\n            actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x - leftValue;\n          }\n        }\n      }\n      if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(this.leftTaskLabel.value) && !this.leftTaskLabel.isCompleted) {\n        var result = this.getWidth(this.leftTaskLabel.value, detail.endPoint - left, 15);\n        var font = new PdfStandardFont(this.fontFamily, 9);\n        var customizedFont = void 0;\n        var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n        if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) && (!isNullOrUndefined(ganttStyle.label.fontSize) || !isNullOrUndefined(ganttStyle.label.fontStyle) || !isNullOrUndefined(ganttStyle.label.fontFamily))) {\n          customizedFont = this.getPdfFont(ganttStyle);\n        }\n        if (!isNullOrUndefined(customizedFont)) {\n          font = customizedFont;\n        }\n        if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) && this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n          font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var padding = {\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0\n        };\n        if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) && !isNullOrUndefined(ganttStyle.label.padding)) {\n          padding = ganttStyle.label.padding;\n        }\n        var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n        var rightLabelpoint = new PointF(actualLeft + padding.left, startPoint.y + adjustHeight + padding.top);\n        var rightLabelSize = new SizeF(result.actualSize.width - (padding.left + padding.right), result.actualSize.height - (padding.top + padding.bottom));\n        var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n        var rightLabelFormat = new PdfStringFormat();\n        rightLabelFormat.alignment = PdfTextAlignment.Right;\n        rightLabelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        if (result.actualSize.width > 0) {\n          var fontColor = null;\n          var fontBrush = new PdfSolidBrush(this.labelColor);\n          /* eslint-disable-next-line */\n          graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n          if (result.remainder !== null) {\n            this.leftTaskLabel.value = result.remainder;\n            this.leftTaskLabel.left = detail.endPoint;\n          } else {\n            this.leftTaskLabel.isCompleted = true;\n          }\n        } else {\n          this.leftTaskLabel.left = detail.endPoint;\n        }\n      }\n    } else {\n      if (!isNullOrUndefined(this.labelSettings.leftLabel) && !isNullOrUndefined(this.labelSettings.leftLabel.image)) {\n        this.previousWidthofLeftImage = 0;\n        this.previousWidthofLeftValue = 0;\n        this.totalLeftWidth = 0;\n        for (var i = 0; i < this.labelSettings.leftLabel.image.length; i++) {\n          var value = void 0;\n          var result = void 0;\n          if (!isNullOrUndefined(this.labelSettings.leftLabel.value)) {\n            value = this.labelSettings.leftLabel.value.split(',');\n            result = this.getWidth(value[i], Number.MAX_VALUE, 15);\n          }\n          var totalstringWidth = !isNullOrUndefined(result) ? result.actualSize.width : 0;\n          this.totalLeftWidth += this.labelSettings.leftLabel.image[i].width + totalstringWidth;\n        }\n        for (var i = 0; i < this.labelSettings.leftLabel.image.length; i++) {\n          this.drawLeftLabelImage(page, startPoint, detail, cumulativeWidth, this.labelSettings.leftLabel.image[i]);\n          if (this.labelSettings.leftLabel.value) {\n            var value = this.labelSettings.leftLabel.value.split(',');\n            if (value) {\n              this.drawLeftLabelValue(page, startPoint, detail, cumulativeWidth, value[i]);\n            }\n          }\n        }\n      } else if (!isNullOrUndefined(this.labelSettings.leftLabel) && !isNullOrUndefined(this.labelSettings.leftLabel.value)) {\n        this.drawLeftLabelValue(page, startPoint, detail, cumulativeWidth, this.labelSettings.leftLabel.value);\n      }\n    }\n  };\n  PdfGanttTaskbarCollection.prototype.drawLeftLabelImage = function (page, startPoint, detail, cumulativeWidth, leftLabelImage) {\n    var graphics = page.graphics;\n    var left;\n    var labelLeft = 0;\n    labelLeft = this.left;\n    if (!isNullOrUndefined(this.labelSettings.leftLabel) && !isNullOrUndefined(this.labelSettings.leftLabel.image)) {\n      if (!this.leftTaskLabel.isLeftCalculated) {\n        var result = new SizeF(leftLabelImage.width, leftLabelImage.height);\n        var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n        var value = this.labelSettings.leftLabel.value.split(',');\n        if (this.isAutoFit()) {\n          if (this.labelSettings.leftLabel.image.length > 0 && value.length > 0) {\n            left = labelLeft - this.totalLeftWidth - result.width;\n            this.previousWidthofLeftImage += result.width;\n          } else {\n            left = labelLeft - reduceLeft - result.width;\n          }\n        } else {\n          if (this.labelSettings.leftLabel.image.length > 0 && value.length > 0) {\n            left = pixelToPoint(labelLeft) - this.totalLeftWidth - result.width;\n            this.previousWidthofLeftImage += result.width;\n          } else {\n            left = pixelToPoint(labelLeft - reduceLeft) - result.width;\n          }\n        }\n        this.leftTaskLabel.left = left;\n        this.leftTaskLabel.isLeftCalculated = true;\n      } else {\n        if (this.labelSettings.leftLabel.image.length > 1) {\n          left = this.leftTaskLabel.left + this.previousWidthofLeftValue;\n        } else {\n          left = this.leftTaskLabel.left;\n        }\n      }\n      var actualLeft = void 0;\n      if (this.isAutoFit()) {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n      } else {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n      }\n      if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(leftLabelImage) && !this.leftTaskLabel.isCompleted) {\n        var result = new SizeF(leftLabelImage.width, leftLabelImage.height);\n        var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.height) / 2;\n        var rightLabelpoint = new PointF(actualLeft, startPoint.y + adjustHeight);\n        var rightLabelSize = new SizeF(result.width, result.height);\n        var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n        var image = new PdfBitmap(leftLabelImage.base64);\n        if (result.width > 0) {\n          graphics.drawImage(image, rightLabelBounds.x, rightLabelBounds.y, result.width, result.height);\n          this.totalLeftWidth = this.totalLeftWidth - result.width;\n        } else {\n          this.leftTaskLabel.left = detail.endPoint;\n        }\n      }\n    }\n  };\n  PdfGanttTaskbarCollection.prototype.drawLeftLabelValue = function (page, startPoint, detail, cumulativeWidth, leftLabelValue) {\n    var graphics = page.graphics;\n    var left;\n    if (!isNullOrUndefined(leftLabelValue)) {\n      var labelLeft = 0;\n      labelLeft = this.left;\n      if (!this.leftTaskLabel.isLeftCalculated) {\n        var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n        var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n        var value = this.labelSettings.leftLabel.value.split(',');\n        if (this.isAutoFit()) {\n          var isLeftImageExist = !isNullOrUndefined(this.labelSettings.leftLabel.image) ? true : false;\n          var imageLength = isLeftImageExist ? this.labelSettings.leftLabel.image.length : 0;\n          if (value.length === 1 && isLeftImageExist && imageLength === 1) {\n            left = this.leftTaskLabel.left + this.previousWidthofLeftImage;\n            this.labelSettings.left = left;\n            var result_5 = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n            this.previousWidthofLeftValue += this.previousWidthofLeftImage + result_5.actualSize.width;\n          } else if (value.length > 1 && isLeftImageExist && imageLength > 1) {\n            var totalWidth = this.previousWidthofLeftValue !== 0 ? this.previousWidthofLeftValue + this.previousWidthofLeftImage : this.previousWidthofLeftImage;\n            left = this.leftTaskLabel.left + totalWidth;\n            this.labelSettings.left = left;\n            var result_6 = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n            this.previousWidthofLeftValue += this.previousWidthofLeftImage + result_6.actualSize.width;\n          } else {\n            left = labelLeft - reduceLeft - result.actualSize.width;\n          }\n        } else {\n          left = pixelToPoint(labelLeft - reduceLeft) - result.actualSize.width;\n        }\n        this.leftTaskLabel.left = left;\n        this.leftTaskLabel.isLeftCalculated = true;\n      } else {\n        var value = this.labelSettings.leftLabel.value.split(',');\n        if (value.length === 1) {\n          left = this.leftTaskLabel.left + this.previousWidthofLeftImage;\n          this.labelSettings.left = left;\n          var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n          this.previousWidthofLeftValue += this.previousWidthofLeftImage + result.actualSize.width;\n        } else if (value.length > 1) {\n          var totalWidth = this.previousWidthofLeftValue !== 0 ? this.previousWidthofLeftValue + this.previousWidthofLeftImage : this.previousWidthofLeftImage;\n          left = this.leftTaskLabel.left + totalWidth;\n          this.labelSettings.left = left;\n          var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n          this.previousWidthofLeftValue += this.previousWidthofLeftImage + result.actualSize.width;\n        } else {\n          left = this.leftTaskLabel.left;\n        }\n      }\n      var actualLeft = void 0;\n      if (this.isAutoFit()) {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n      } else {\n        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n      }\n      if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(leftLabelValue) && !this.leftTaskLabel.isCompleted) {\n        var result = this.getWidthofLeftLabel(leftLabelValue, detail.endPoint - left, 15);\n        var font = new PdfStandardFont(this.fontFamily, 9);\n        if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) && this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n          font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n        var rightLabelpoint = new PointF(actualLeft, startPoint.y + adjustHeight);\n        var rightLabelSize = new SizeF(result.actualSize.width, result.actualSize.height);\n        var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n        var rightLabelFormat = new PdfStringFormat();\n        rightLabelFormat.alignment = PdfTextAlignment.Right;\n        rightLabelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        if (result.actualSize.width > 0) {\n          var fontColor = null;\n          var fontBrush = new PdfSolidBrush(this.labelColor);\n          var newFont = this.labelSettings.leftLabel.fontStyle.fontSize ? new PdfStandardFont(this.labelSettings.leftLabel.fontStyle.fontFamily, this.labelSettings.leftLabel.fontStyle.fontSize, this.labelSettings.leftLabel.fontStyle.fontStyle) : font;\n          var newFontBrush = this.labelSettings.leftLabel.fontStyle.fontColor ? new PdfSolidBrush(this.labelSettings.leftLabel.fontStyle.fontColor) : fontBrush;\n          graphics.drawString(leftLabelValue, newFont, fontColor, newFontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n          var value = this.labelSettings.leftLabel.value.split(',');\n          if (!isNullOrUndefined(result.remainder) && result.remainder !== null) {\n            this.leftTaskLabel.value = result.remainder;\n            this.leftTaskLabel.left = detail.endPoint;\n          } else if (!isNullOrUndefined(this.labelSettings.leftLabel.image) && this.labelSettings.leftLabel.image.length === 1 && value.length === 1) {\n            this.leftTaskLabel.isCompleted = true;\n          }\n        } else {\n          this.leftTaskLabel.left = detail.endPoint;\n        }\n      }\n    }\n  };\n  PdfGanttTaskbarCollection.prototype.getWidth = function (value, width, height) {\n    var font;\n    font = new PdfStandardFont(this.fontFamily, 9);\n    var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n    if (ganttStyle && ganttStyle.label && ganttStyle.label.fontSize) {\n      font = new PdfStandardFont(this.fontFamily, ganttStyle.label.fontSize);\n      height = font.height;\n    }\n    if (!isNullOrUndefined(ganttStyle) && ganttStyle.font) {\n      font = ganttStyle.font;\n      height = font.height;\n    }\n    var layouter = new PdfStringLayouter();\n    var progressFormat = new PdfStringFormat();\n    progressFormat.alignment = PdfTextAlignment.Left;\n    progressFormat.wordWrap = PdfWordWrapType.Character;\n    progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n    /* eslint-disable-next-line */\n    var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n    return result;\n  };\n  PdfGanttTaskbarCollection.prototype.getWidthofLeftLabel = function (value, width, height) {\n    var newFont = new PdfStandardFont(this.labelSettings.leftLabel.fontStyle.fontFamily, this.labelSettings.leftLabel.fontStyle.fontSize);\n    var font;\n    if (this.labelSettings.leftLabel.fontStyle.fontSize) {\n      font = newFont;\n    } else {\n      font = new PdfStandardFont(this.fontFamily, 9);\n    }\n    if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) && this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n      font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n    }\n    var layouter = new PdfStringLayouter();\n    var progressFormat = new PdfStringFormat();\n    progressFormat.alignment = PdfTextAlignment.Left;\n    progressFormat.wordWrap = PdfWordWrapType.Character;\n    progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n    /* eslint-disable-next-line */\n    var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n    return result;\n  };\n  PdfGanttTaskbarCollection.prototype.getWidthofrightLabel = function (value, width, height) {\n    var newFont = new PdfStandardFont(this.labelSettings.rightLabel.fontStyle.fontFamily, this.labelSettings.rightLabel.fontStyle.fontSize);\n    var font;\n    if (this.labelSettings.rightLabel.fontStyle.fontSize) {\n      font = newFont;\n    } else {\n      font = new PdfStandardFont(this.fontFamily, 9);\n    }\n    if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) && this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n      font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n    }\n    var layouter = new PdfStringLayouter();\n    var progressFormat = new PdfStringFormat();\n    progressFormat.alignment = PdfTextAlignment.Left;\n    progressFormat.wordWrap = PdfWordWrapType.Character;\n    progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n    /* eslint-disable-next-line */\n    var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n    return result;\n  };\n  /**\n   * @param {PdfGraphics} taskGraphics .\n   * @param {PointF} startPoint .\n   * @param {number} cumulativeWidth .\n   * @param {number} adjustHeight .\n   * @returns {void}\n   * Draw Unscheduled Task\n   */\n  PdfGanttTaskbarCollection.prototype.drawUnscheduledTask = function (taskGraphics, startPoint, cumulativeWidth, adjustHeight) {\n    var taskBrush = new PdfSolidBrush(this.taskColor);\n    if (this.isAutoFit()) {\n      taskGraphics.drawRectangle(taskBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(3), pixelToPoint(this.height));\n    } else {\n      taskGraphics.drawRectangle(taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(3), pixelToPoint(this.height));\n    }\n  };\n  /**\n   * @param {PdfPage} page .\n   * @param {PointF} startPoint .\n   * @param {TimelineDetails} detail .\n   * @param {number} cumulativeWidth .\n   * @param {PdfGanttTaskbarCollection} taskbar .\n   * @param {boolean} isBaseline .\n   * @returns {void}\n  Draw milestone task\n   */\n  PdfGanttTaskbarCollection.prototype.drawMilestone = function (page, startPoint, detail, cumulativeWidth, taskbar, isBaseline) {\n    if (detail.startDate <= this.startDate && this.startDate <= detail.endDate) {\n      var taskGraphics = page.graphics;\n      var pageIndex = page.section.indexOf(page);\n      this.taskStartPoint = __assign({}, startPoint);\n      var milestonePen = new PdfPen(this.milestoneColor);\n      var adjustHeightforBaselineMilesone = pixelToPoint((this.parent.rowHeight - this.height) / 3.0);\n      var adjustHeightforMilesone = pixelToPoint((this.parent.rowHeight - this.height) / 2.0);\n      var adjustHeight = this.parent.renderBaseline ? adjustHeightforBaselineMilesone : adjustHeightforMilesone;\n      var milestoneBrush = new PdfSolidBrush(this.milestoneColor);\n      var baselinePen = new PdfPen(this.baselineBorderColor);\n      var baselineBrush = new PdfSolidBrush(this.baselineColor);\n      taskGraphics.save(); //saving graphics state\n      var height = Math.floor(this.parent.chartRowsModule.taskBarHeight * 0.8);\n      if (!isBaseline) {\n        if (this.isAutoFit()) {\n          taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2);\n        } else {\n          taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2);\n        }\n      }\n      if (isBaseline) {\n        if (this.isAutoFit()) {\n          taskGraphics.translateTransform(startPoint.x + (taskbar.baselineLeft - cumulativeWidth), startPoint.y + adjustHeight - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2);\n        } else {\n          taskGraphics.translateTransform(startPoint.x + pixelToPoint(taskbar.baselineLeft - cumulativeWidth), startPoint.y + adjustHeight - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2);\n        }\n      }\n      taskGraphics.rotateTransform(45); //apply rotation\n      if (this.parent.renderBaseline && this.baselineStartDate && this.baselineEndDate && isBaseline) {\n        taskGraphics.drawRectangle(baselinePen, baselineBrush, 2, 2, pixelToPoint(height), pixelToPoint(height));\n      }\n      if (!isBaseline) {\n        taskGraphics.drawRectangle(milestonePen, milestoneBrush, 0, 0, pixelToPoint(height), pixelToPoint(height));\n      }\n      taskGraphics.restore(); //restoring graphics state\n      if (this.isAutoFit()) {\n        if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n          var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n          var x = startPoint.x + (this.left - cumulativeWidth) - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2 + (this.parent.chartRowsModule.taskBarHeight * 0.7 - taskbar.taskbarTemplate.image[0].height) / 1.0;\n          var width = taskbar.taskbarTemplate.image[0].width / 2.0;\n          var height_1 = taskbar.taskbarTemplate.image[0].height / 2.0;\n          taskGraphics.drawImage(image, x, startPoint.y + adjustHeight - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2 + (this.parent.chartRowsModule.taskBarHeight * 0.7 - taskbar.taskbarTemplate.image[0].height) / 0.5, width, height_1);\n        }\n      } else {\n        if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n          var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n          var x = startPoint.x + pixelToPoint(this.left - cumulativeWidth) - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2 + pixelToPoint(this.parent.chartRowsModule.taskBarHeight * 0.7 - taskbar.taskbarTemplate.image[0].height) / 1.0;\n          taskGraphics.drawImage(image, x, startPoint.y + adjustHeight - this.parent.chartRowsModule.taskBarHeight * 0.7 / 2 + pixelToPoint((this.parent.chartRowsModule.taskBarHeight * 0.7 - taskbar.taskbarTemplate.image[0].height) / 0.5), pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height - 2));\n        }\n      }\n      this.endPage = this.startPage = pageIndex;\n    }\n  };\n  return PdfGanttTaskbarCollection;\n}();\nexport { PdfGanttTaskbarCollection };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","PointF","PdfColor","PdfStringLayouter","PdfPen","PdfSolidBrush","RectangleF","SizeF","PdfStandardFont","PdfFontStyle","PdfStringFormat","PdfVerticalAlignment","PdfTextAlignment","PdfWordWrapType","PdfDashStyle","PdfPath","PdfBitmap","PdfBrushes","PdfLinearGradientBrush","pixelToPoint","pointToPixel","isNullOrUndefined","PdfGanttTaskbarCollection","parent","baselineHeight","segment","segmentCollection","leftTaskLabel","rightTaskLabel","startPage","endPage","add","GetNextPage","page","section","index","indexOf","nextPage","count","getPages","isAutoFit","pdfExportModule","helper","exportProps","fitToWidthSettings","isFitToWidth","timelineModule","isZoomedToFit","drawTaskbar","startPoint","detail","cumulativeWidth","rowHeight","taskbar","lineWidth","_this","taskGraphics","graphics","isNextPage","pageSize","getClientSize","yPoint","y","height","endPoint","gantt","enableHeader","chartHeader","drawPageTimeline","isSingleTier","pen","gridLines","drawRectangle","x","bottomTier","drawLeftLabel","font","fontFamily","Regular","fontColor","fontBrush","progressFontColor","customizedFont","customizedFontBrush","customizedFontColor","taskbarTemplate","value","fontStyle","fontSize","ganttStyle","taskLabelFont","taskLabelFontBrush","labelSettings","taskLabel","taskFont","progressFormat","lineAlignment","Middle","alignment","Right","isLabelString","updatedWidth","test","width","Left","pageIndex","baselinePen","baselineBorderColor","baselineBrush","baselineColor","template","renderedBaseline","isMilestone","taskbarPen_1","taskBorderColor","taskBrush_1","taskColor","manualParentBorderPen","manualParentBorder","manualChildBorderPen","manualChildBorder","manualTaskbarPen","manuallineColor","manualParentPen","manualParentProgress","manualline","manuallineBrush","splitline","splitLineBackground","manualBrush","manualParentBackground","manualChildBrush","manualChildBackground","manualChildProgressBrush","manualChildProgress","manualProgressBrush","progressPen_1","progressColor","progressBrush_1","adjustHeightforTaskbar","adjustHeightforBaseline","adjustHeight_1","renderBaseline","startDate","unscheduleStarteDate","endDate","unscheduleEndDate","imageSize_1","isStartPoint","taskStartPoint","isScheduledTask","unscheduledTaskBy","brush1","brush2","left","unscheduledTaskBarColor","image","imageWidth","base64","drawImage","drawString","drawUnscheduledTask","isSpliterTask","dashStyle","Dot","drawLine","map","data","isAutoSchedule","isParentTask","save","path","addEllipse","translateTransform","drawPath","restore","path1","Solid","setTransparency","progressWidth","toString","isCompleted","renderWidth_1","splitRenderwidth_1","totalWidth","pervwidth_1","valueChangeBlocker_1","lineWidth_1","item","parseInt","stringLeft","result_1","getWidth","lines","text","remainder","remainString","progressBoundsWidth","result_2","lineStartX","lineEndX","autoWidth","lineY","result","actualSize","result_3","result_4","baselineStartDate","baselineEndDate","baselineLeft","baselineWidth","isCompletedBaseline","renderWidth","autoStartDate","autoEndDate","autoLeft","isCompletedAutotask","indicators","items","currendate","dateValidationModule","getDateFromFormat","date","leftValue","chartRowsModule","getIndicatorleft","name","Black","drawMilestone","drawRightLabel","getPdfFont","label","fontFamilyValue","fontStyleValue","isLeftCalculated","actualLeft","padding","right","top","bottom","adjustHeight","point","size","labelBounds","labelFormat","labelColor","rightLabel","previousWidthofRightImage","previousWidthofRightValue","drawRigthlabelImage","split","drawRightLabelValue","rightImage","rightString","getWidthofrightLabel","labelBound","newFont","newFontBrush","labelLeft","Number","MAX_VALUE","reduceLeft","Math","floor","taskBarHeight","rightLabelpoint","rightLabelSize","rightLabelBounds","rightLabelFormat","leftLabel","previousWidthofLeftImage","previousWidthofLeftValue","totalLeftWidth","totalstringWidth","drawLeftLabelImage","drawLeftLabelValue","leftLabelImage","leftLabelValue","getWidthofLeftLabel","isLeftImageExist","imageLength","result_5","result_6","layouter","wordWrap","Character","layout","taskBrush","isBaseline","milestonePen","milestoneColor","adjustHeightforBaselineMilesone","adjustHeightforMilesone","milestoneBrush","rotateTransform","height_1"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/export/pdf-taskbar.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { PointF, PdfColor, PdfStringLayouter, PdfPen, PdfSolidBrush, RectangleF, SizeF, PdfStandardFont, PdfFontStyle, PdfStringFormat, PdfVerticalAlignment, PdfTextAlignment, PdfWordWrapType, PdfDashStyle, PdfPath, PdfBitmap, PdfBrushes, PdfLinearGradientBrush } from '@syncfusion/ej2-pdf-export';\nimport { pixelToPoint, pointToPixel } from '../base/utils';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @hidden\n */\nvar PdfGanttTaskbarCollection = /** @class */ (function () {\n    function PdfGanttTaskbarCollection(parent) {\n        /** Defines the task baselineHeight . */\n        this.baselineHeight = 8;\n        this.segment = [];\n        this.segmentCollection = [];\n        /**\n         * @private\n         */\n        this.leftTaskLabel = {};\n        /**\n         * @private\n         */\n        this.rightTaskLabel = {};\n        this.startPage = -1;\n        this.endPage = -1;\n        this.parent = parent;\n    }\n    PdfGanttTaskbarCollection.prototype.add = function () {\n        return new PdfGanttTaskbarCollection(this.parent);\n    };\n    /**\n     * @param {PdfPage} page .\n     * @returns {PdfPage} .\n     * Get the next PDF page\n     */\n    PdfGanttTaskbarCollection.prototype.GetNextPage = function (page) {\n        var section = page.section;\n        var index = section.indexOf(page);\n        var nextPage = null;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGanttTaskbarCollection.prototype.isAutoFit = function () {\n        return ((this.parent.pdfExportModule && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) ||\n            this.parent.timelineModule.isZoomedToFit) ? true : false;\n    };\n    /**\n     * Draw the taskbar, chart back ground\n     *\n     * @private\n     */\n    /* eslint-disable */\n    PdfGanttTaskbarCollection.prototype.drawTaskbar = function (page, startPoint, detail, cumulativeWidth, rowHeight, taskbar, lineWidth) {\n        var _this = this;\n        var taskGraphics = page.graphics;\n        var isNextPage = false;\n        var pageSize = page.getClientSize();\n        var yPoint = startPoint.y + rowHeight;\n        //code for while current pdf page is exceed\n        if (yPoint > pageSize.height) {\n            page = this.GetNextPage(page);\n            page['contentWidth'] = (this.isAutoFit()) ? pointToPixel(detail.endPoint - detail.startPoint) : detail.endPoint - detail.startPoint;\n            taskGraphics = page.graphics;\n            startPoint.y = 0;\n            if (this.parent.pdfExportModule.gantt.enableHeader) {\n                this.parent.pdfExportModule.gantt.chartHeader.drawPageTimeline(page, startPoint, detail);\n                startPoint.y = pixelToPoint(this.parent.timelineModule.isSingleTier ? 45 : 60);\n            }\n            isNextPage = true;\n            var graphics = page.graphics;\n            var pen = new PdfPen(new PdfColor(206, 206, 206));\n            if (page['contentWidth'] && (this.parent.gridLines === \"Both\" || this.parent.gridLines === \"Horizontal\")) {\n                graphics.drawRectangle(pen, startPoint.x, startPoint.y, this.isAutoFit() && this.parent.timelineModule.bottomTier !== \"Day\" ? page['contentWidth'] + 0.5 : lineWidth, rowHeight);\n            }\n        }\n        this.drawLeftLabel(page, startPoint, detail, cumulativeWidth, taskbar);\n        //Draw Taskbar\n        var font = new PdfStandardFont(this.fontFamily, 9, PdfFontStyle.Regular);\n        var fontColor = null;\n        var fontBrush = new PdfSolidBrush(this.progressFontColor);\n        var customizedFont;\n        var customizedFontBrush;\n        var customizedFontColor;\n        customizedFont = !isNullOrUndefined(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontFamily && taskbar.taskbarTemplate.fontStyle.fontSize\n            ? new PdfStandardFont(taskbar.taskbarTemplate.fontStyle.fontFamily, taskbar.taskbarTemplate.fontStyle.fontSize, taskbar.taskbarTemplate.fontStyle.fontStyle)\n            : font;\n        customizedFontBrush = !isNullOrUndefined(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontColor\n            ? new PdfSolidBrush(taskbar.taskbarTemplate.fontStyle.fontColor)\n            : fontBrush;\n        customizedFontColor = !isNullOrUndefined(taskbar.taskbarTemplate.value) && taskbar.taskbarTemplate.fontStyle && taskbar.taskbarTemplate.fontStyle.fontBrush\n            ? new PdfPen(taskbar.taskbarTemplate.fontStyle.fontBrush)\n            : fontColor;\n        if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n            this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n            font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var taskLabelFont;\n        var taskLabelFontBrush;\n        if (taskbar.labelSettings.taskLabel.fontStyle.fontSize) {\n            var taskFont = new PdfStandardFont(taskbar.labelSettings.taskLabel.fontStyle.fontFamily, taskbar.labelSettings.taskLabel.fontStyle.fontSize, taskbar.labelSettings.taskLabel.fontStyle.fontStyle);\n            taskLabelFont = taskFont;\n        }\n        else {\n            taskLabelFont = font;\n        }\n        if (taskbar.labelSettings.taskLabel.fontStyle.fontColor) {\n            taskLabelFontBrush = new PdfSolidBrush(taskbar.labelSettings.taskLabel.fontStyle.fontColor);\n        }\n        else {\n            taskLabelFontBrush = fontBrush;\n        }\n        var progressFormat = new PdfStringFormat();\n        progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        progressFormat.alignment = PdfTextAlignment.Right;\n        var isLabelString = false;\n        var updatedWidth;\n        if (!isNullOrUndefined(this.taskLabel) && (/^[a-zA-Z0-9]/.test(this.taskLabel))) {\n            if (this.taskLabel === '0' || this.taskLabel === '0%') {\n                updatedWidth = this.width;\n                progressFormat.alignment = PdfTextAlignment.Left;\n            }\n        }\n        if ((!isNullOrUndefined(this.taskLabel) && (/^[a-zA-Z]/.test(this.taskLabel))) || (!isNullOrUndefined(taskbar.taskbarTemplate.value))) {\n            isLabelString = true;\n            progressFormat.alignment = PdfTextAlignment.Left;\n        }\n        var pageIndex = -1;\n        var baselinePen = new PdfPen(taskbar.baselineBorderColor);\n        var baselineBrush = new PdfSolidBrush(taskbar.baselineColor);\n        var template = taskbar.taskbarTemplate;\n        var renderedBaseline = false;\n        if (!taskbar.isMilestone) {\n            var taskbarPen_1 = new PdfPen(taskbar.taskBorderColor);\n            var taskBrush_1 = new PdfSolidBrush(taskbar.taskColor);\n            var manualParentBorderPen = new PdfPen(taskbar.manualParentBorder);\n            var manualChildBorderPen = new PdfPen(taskbar.manualChildBorder);\n            var manualTaskbarPen = new PdfPen(taskbar.manuallineColor);\n            var manualParentPen = new PdfPen(taskbar.manualParentProgress);\n            var manualline = new PdfPen(taskbar.manuallineColor);\n            var manuallineBrush = new PdfSolidBrush(taskbar.manuallineColor);\n            var splitline = new PdfPen(taskbar.splitLineBackground);\n            var manualBrush = new PdfSolidBrush(taskbar.manualParentBackground);\n            var manualChildBrush = new PdfSolidBrush(taskbar.manualChildBackground);\n            var manualChildProgressBrush = new PdfSolidBrush(taskbar.manualChildProgress);\n            var manualProgressBrush = new PdfSolidBrush(taskbar.manualParentProgress);\n            var progressPen_1 = new PdfPen(taskbar.progressColor);\n            var progressBrush_1 = new PdfSolidBrush(taskbar.progressColor);\n            var adjustHeightforTaskbar = pixelToPoint((this.parent.rowHeight - this.height) / 2.0);\n            var adjustHeightforBaseline = pixelToPoint((this.parent.rowHeight - this.height) / 4.5);\n            var adjustHeight_1 = this.parent.renderBaseline ? adjustHeightforBaseline : adjustHeightforTaskbar;\n            pageIndex = page.section.indexOf(page);\n            var startDate = isNullOrUndefined(this.unscheduleStarteDate) ? this.startDate : this.unscheduleStarteDate;\n            var endDate = isNullOrUndefined(this.unscheduleEndDate) ? this.endDate : this.unscheduleEndDate;\n            var imageSize_1 = 10;\n            //Task start and end date both are in the range of header split up start and end date\n            if (detail.startDate <= startDate && endDate <= detail.endDate) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    if (this.isAutoFit()) {\n                        brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (taskbar.width) / 2, 0), new PointF(startPoint.x + (this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), pixelToPoint(taskbar.height));\n                        brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (taskbar.width), 0), new PointF(startPoint.x + (this.left - cumulativeWidth) + (taskbar.width) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n                        //Draw rectangle to fill linear gradient color\n                        taskGraphics.drawRectangle(brush2, startPoint.x + (this.left - cumulativeWidth) + 0.5 + (taskbar.width) / 2, startPoint.y + adjustHeight_1, (taskbar.width) / 2, pixelToPoint(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n                        }\n                    }\n                    else {\n                        brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(taskbar.width) / 2, 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                        brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(taskbar.width), 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + pixelToPoint(taskbar.width) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n                        //Draw rectangle to fill linear gradient color\n                        taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(taskbar.width) / 2, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width) / 2, pixelToPoint(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n                        }\n                    }\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else {\n                    if (taskbar.isSpliterTask) {\n                        splitline.dashStyle = PdfDashStyle.Dot;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawLine(splitline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF((taskbar.width) + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n                        }\n                        else {\n                            taskGraphics.drawLine(splitline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(pixelToPoint(taskbar.width) + startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n                        }\n                        taskbar.segment.map(function (data, index) {\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (data.width), pixelToPoint(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n                                }\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n                                }\n                            }\n                        });\n                    }\n                    else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        taskGraphics.save();\n                        var path = new PdfPath();\n                        path.addEllipse(0, 0, 5, 5);\n                        if (this.isAutoFit()) {\n                            taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                        }\n                        else {\n                            taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                        }\n                        taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path);\n                        taskGraphics.restore();\n                        var path1 = new PdfPath();\n                        path1.addEllipse(0, 0, 5, 5);\n                        taskGraphics.save();\n                        if (this.isAutoFit()) {\n                            taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (this.width), startPoint.y + adjustHeight_1 - 2);\n                        }\n                        else {\n                            taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(this.width), startPoint.y + adjustHeight_1 - 2);\n                        }\n                        taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path1);\n                        taskGraphics.restore();\n                        manualline.dashStyle = PdfDashStyle.Solid;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawLine(manualline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF((taskbar.width) + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                        }\n                        else {\n                            taskGraphics.drawLine(manualline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF(pixelToPoint(taskbar.width) + startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                        }\n                    }\n                    else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualChildBorderPen, manualChildBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), pixelToPoint(taskbar.height));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualChildBorderPen, manualChildBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                        }\n                        taskGraphics.restore();\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.progressWidth), pixelToPoint(this.height));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(this.height));\n                        }\n                    }\n                    else {\n                        if (this.isAutoFit()) {\n                            if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.width), pixelToPoint(taskbar.height));\n                                var imageWidth = void 0;\n                                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width / 2.0;\n                                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + (taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0, (taskbar.taskbarTemplate.image[0].width) / 2.0, (taskbar.taskbarTemplate.image[0].height) / 2.0);\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                if (taskbar.taskbarTemplate.value) {\n                                    if (isLabelString) {\n                                        updatedWidth = this.width;\n                                    }\n                                    taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, (updatedWidth), pixelToPoint(this.height), progressFormat);\n                                }\n                            }\n                        }\n                        else {\n                            if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                                var imageWidth = void 0;\n                                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 1, startPoint.y + adjustHeight_1 + 1 + pixelToPoint((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0), pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat) : '';\n                            }\n                        }\n                    }\n                    if (this.isScheduledTask && taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n                        if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n                            if (this.isAutoFit()) {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (taskbar.progressWidth), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n                            }\n                            if (!isNullOrUndefined(this.parent.labelSettings.taskLabel) && !isNullOrUndefined(this.taskLabel)) {\n                                if (this.taskLabel !== '0' && this.taskLabel !== '0%') {\n                                    updatedWidth = this.progressWidth;\n                                }\n                                if (isLabelString) {\n                                    updatedWidth = this.width;\n                                }\n                                if (this.isAutoFit()) {\n                                    taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight_1, (updatedWidth), pixelToPoint(this.height), progressFormat);\n                                }\n                                else {\n                                    taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight_1, pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                                }\n                            }\n                        }\n                    }\n                    else if (taskbar.isSpliterTask) {\n                        taskbar.segment.map(function (data, index) {\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (data.progressWidth), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(data.progressWidth), pixelToPoint(taskbar.height));\n                            }\n                        });\n                    }\n                }\n                this.isCompleted = true;\n                this.startPage = pageIndex;\n                this.endPage = pageIndex;\n            }\n            //Task start date is in the range of header split up start and end date\n            else if (detail.startDate <= startDate && detail.endDate >= startDate && (endDate >= detail.endDate)) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                var width = this.width;\n                var renderWidth_1 = 0;\n                var progressWidth = 0;\n                var splitRenderwidth_1 = 0;\n                this.width = this.width - (detail.totalWidth - (this.left - cumulativeWidth));\n                renderWidth_1 = (detail.totalWidth - (this.left - cumulativeWidth));\n                progressWidth = (detail.totalWidth - (this.left - cumulativeWidth));\n                if (width < renderWidth_1) {\n                    renderWidth_1 = width;\n                }\n                splitRenderwidth_1 = renderWidth_1;\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    if (this.isAutoFit()) {\n                        brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (renderWidth_1) / 2, 0), new PointF(startPoint.x + (this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), pixelToPoint(taskbar.height));\n                        brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5 + (renderWidth_1), 0), new PointF(startPoint.x + (this.left - cumulativeWidth) + (renderWidth_1) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n                        taskGraphics.drawRectangle(brush2, startPoint.x + (this.left - cumulativeWidth) + 0.5 + (renderWidth_1) / 2, startPoint.y + adjustHeight_1, (renderWidth_1) / 2, pixelToPoint(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n                        }\n                    }\n                    else {\n                        brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(renderWidth_1) / 2, 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n                        taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n                        brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(renderWidth_1), 0), new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + pixelToPoint(renderWidth_1) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n                        taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + pixelToPoint(renderWidth_1) / 2, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1) / 2, pixelToPoint(taskbar.height));\n                        if (template.value || template.image) {\n                            var imageWidth = void 0;\n                            if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                            }\n                            else {\n                                imageWidth = 0;\n                            }\n                            !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5 + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n                        }\n                    }\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    taskGraphics.save();\n                    var path = new PdfPath();\n                    path.addEllipse(0, 0, 5, 5);\n                    if (this.isAutoFit()) {\n                        taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                    }\n                    else {\n                        taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 - 2);\n                    }\n                    taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path);\n                    taskGraphics.restore();\n                    manualline.dashStyle = PdfDashStyle.Solid;\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawLine(manualline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF((renderWidth_1) + startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                    }\n                    else {\n                        taskGraphics.drawLine(manualline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1), new PointF(pixelToPoint(renderWidth_1) + startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1));\n                    }\n                }\n                else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), pixelToPoint(taskbar.height));\n                    }\n                    else {\n                        taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n                    }\n                    taskGraphics.save();\n                    taskGraphics.setTransparency(0.87);\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), pixelToPoint(taskbar.height));\n                    }\n                    else {\n                        taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n                    }\n                    taskGraphics.restore();\n                    if (this.isAutoFit()) {\n                        taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (progressWidth), pixelToPoint(taskbar.height));\n                    }\n                    else {\n                        taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressWidth), pixelToPoint(taskbar.height));\n                    }\n                    taskbar.progressWidth = taskbar.progressWidth - progressWidth;\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy !== 'duration') {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else {\n                    if (taskbar.isSpliterTask) {\n                        var pervwidth_1 = 0;\n                        var valueChangeBlocker_1 = true;\n                        var lineWidth_1 = 0;\n                        taskbar.segment.map(function (item) {\n                            lineWidth_1 = item.left + item.width;\n                        });\n                        splitline.dashStyle = PdfDashStyle.Dot;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawLine(splitline, new PointF(startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF((lineWidth_1) + (this.left - cumulativeWidth) + startPoint.x, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n                        }\n                        else {\n                            taskGraphics.drawLine(splitline, new PointF(startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(pixelToPoint(lineWidth_1) + pixelToPoint(this.left - cumulativeWidth) + startPoint.x, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n                        }\n                        taskbar.segment.map(function (data, index) {\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + (data.left), startPoint.y + adjustHeight_1, (data.width), pixelToPoint(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + (data.left), startPoint.y + adjustHeight_1, (taskbar.taskbarTemplate.image[0].width), (taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (_this.left - cumulativeWidth) + 0.5 + (data.left) + imageWidth, startPoint.y + adjustHeight_1, (data.width), (taskbar.height), progressFormat) : '';\n                                }\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(_this.left - cumulativeWidth) + 0.5 + pixelToPoint(data.left), startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height));\n                                if (template.value || template.image) {\n                                    var imageWidth = void 0;\n                                    if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                        imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                        var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                        taskGraphics.drawImage(image, startPoint.x + pixelToPoint(_this.left - cumulativeWidth) + 0.5 + pixelToPoint(data.left), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                                    }\n                                    else {\n                                        imageWidth = 0;\n                                    }\n                                    !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(_this.left - cumulativeWidth) + 0.5 + pixelToPoint(data.left) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n                                }\n                            }\n                            pervwidth_1 = data.left + data.width;\n                            if (renderWidth_1 >= pervwidth_1) {\n                                _this.segmentCollection[parseInt(index.toString(), 10)].width = 0;\n                                _this.segmentCollection[parseInt(index.toString(), 10)].left = 0;\n                            }\n                            else {\n                                if (renderWidth_1 >= (pervwidth_1 - data.width)) {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].left = 0;\n                                }\n                                else {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].left = ((splitRenderwidth_1 - data.left));\n                                }\n                                if (renderWidth_1 >= (pervwidth_1)) {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].width = 0;\n                                }\n                                else {\n                                    if (valueChangeBlocker_1) {\n                                        _this.segmentCollection[parseInt(index.toString(), 10)].width = pervwidth_1 - renderWidth_1;\n                                        valueChangeBlocker_1 = false;\n                                    }\n                                }\n                            }\n                            splitRenderwidth_1 = splitRenderwidth_1 + data.width + data.left;\n                        });\n                    }\n                    else {\n                        if (this.isAutoFit()) {\n                            if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (renderWidth_1), pixelToPoint(taskbar.height));\n                                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 0.5), (taskbar.taskbarTemplate.image[0].width / 2.0), (taskbar.taskbarTemplate.image[0].height / 2.0));\n                                }\n                                if (!isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                                    var imageWidth = !isNullOrUndefined(taskbar.taskbarTemplate.image) ? taskbar.taskbarTemplate.image[0].width : 0;\n                                    taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + (this.left - cumulativeWidth) + imageWidth, (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                                }\n                            }\n                        }\n                        else {\n                            if (isNullOrUndefined(template.value) && isNullOrUndefined(template.image)) {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(renderWidth_1), pixelToPoint(taskbar.height));\n                                var imageWidth = void 0;\n                                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 1, startPoint.y + adjustHeight_1 + 1 + pixelToPoint((taskbar.height - taskbar.taskbarTemplate.image[0].height) / 2.0), pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                if (!isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                                    this.stringLeft = pixelToPoint(this.left);\n                                    var result_1 = this.getWidth(taskbar.taskbarTemplate.value, detail.endPoint - this.stringLeft, 15);\n                                    taskGraphics.drawString(result_1.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + imageWidth, (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                                    if (!isNullOrUndefined(result_1.remainder)) {\n                                        this.remainString = result_1.remainder;\n                                        this.stringLeft = detail.endPoint;\n                                        // this.rightTaskLabel.isLeftCalculated = true;\n                                    }\n                                }\n                            }\n                        }\n                        if (taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n                            var progressBoundsWidth = 0;\n                            if (this.progressWidth <= renderWidth_1) {\n                                progressBoundsWidth = this.progressWidth;\n                            }\n                            else {\n                                progressBoundsWidth = renderWidth_1;\n                            }\n                            if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n                                if (this.isAutoFit()) {\n                                    taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (progressBoundsWidth), pixelToPoint(taskbar.height));\n                                }\n                                else {\n                                    taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                                }\n                            }\n                            this.progressWidth -= progressBoundsWidth;\n                            if (this.parent.labelSettings.taskLabel && !isNullOrUndefined(this.taskLabel)) {\n                                updatedWidth = progressBoundsWidth;\n                                if (isLabelString) {\n                                    updatedWidth = renderWidth_1;\n                                }\n                                this.stringLeft = this.left;\n                                if (isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                                    var result_2 = this.getWidth(this.taskLabel.toString(), detail.endPoint - this.stringLeft, 15);\n                                    taskGraphics.drawString(result_2.lines[0].text, taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                                    if (!isNullOrUndefined(result_2.remainder)) {\n                                        this.remainString = result_2.remainder;\n                                        this.stringLeft = detail.endPoint;\n                                        // this.rightTaskLabel.isLeftCalculated = true;\n                                    }\n                                }\n                                else {\n                                    if (this.isAutoFit()) {\n                                        taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), (updatedWidth), pixelToPoint(this.height), progressFormat);\n                                    }\n                                    else {\n                                        taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n                        var progressBoundsWidth = 0;\n                        if (this.progressWidth <= renderWidth_1) {\n                            progressBoundsWidth = this.progressWidth;\n                        }\n                        else {\n                            progressBoundsWidth = renderWidth_1;\n                        }\n                        if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n                            if (this.isAutoFit()) {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (progressBoundsWidth), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(this.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                            }\n                        }\n                        this.progressWidth -= progressBoundsWidth;\n                        if (this.parent.labelSettings.taskLabel && !isNullOrUndefined(this.taskLabel)) {\n                            updatedWidth = progressBoundsWidth;\n                            if (isLabelString) {\n                                updatedWidth = this.width;\n                            }\n                            if (this.isAutoFit()) {\n                                taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + (this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), (updatedWidth), pixelToPoint(this.height), progressFormat);\n                            }\n                            else {\n                                taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                            }\n                        }\n                    }\n                    else if (taskbar.isSpliterTask) {\n                        taskbar.segment.map(function (data, index) {\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + (_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, (data.progressWidth), pixelToPoint(taskbar.height));\n                            }\n                            else {\n                                taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(_this.left + data.left - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(data.progressWidth), pixelToPoint(taskbar.height));\n                            }\n                            if (_this.segmentCollection[parseInt(index.toString(), 10)].width === 0) {\n                                _this.segmentCollection[parseInt(index.toString(), 10)].progressWidth = 0;\n                            }\n                            else {\n                                if (data.width - _this.segmentCollection[parseInt(index.toString(), 10)].width < data.progressWidth && data.width !== _this.segmentCollection[index].width) {\n                                    _this.segmentCollection[parseInt(index.toString(), 10)].progressWidth = data.progressWidth - (data.width - _this.segmentCollection[index].width);\n                                }\n                            }\n                        });\n                    }\n                }\n                this.left = 0;\n                this.isCompleted = false;\n                this.startPage = pageIndex;\n            }\n            //Task end date is in the range of header split up start and end date\n            else if (endDate <= detail.endDate && detail.startDate <= endDate && !this.isCompleted) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width) / 2, 0), new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n                    taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                    brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width), 0), new PointF(startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n                    taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(taskbar.left + 0.5) + pixelToPoint(taskbar.width) / 2, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width) / 2, pixelToPoint(taskbar.height));\n                    if (template.value || template.image) {\n                        var imageWidth = void 0;\n                        if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                            imageWidth = taskbar.taskbarTemplate.image[0].width;\n                            var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                            taskGraphics.drawImage(image, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                        }\n                        else {\n                            imageWidth = 0;\n                        }\n                        !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : '';\n                    }\n                }\n                else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    var path1 = new PdfPath();\n                    path1.addEllipse(0, 0, 5, 5); // Circle with radius 5\n                    taskGraphics.save(); // Save the current graphics state  \n                    var lineStartX = startPoint.x + pixelToPoint(this.left + 0.5); // Calculate the endpoint of the line\n                    var lineEndX = pixelToPoint(taskbar.autoWidth) + lineStartX - 5;\n                    var lineY = startPoint.y + adjustHeight_1;\n                    taskGraphics.drawLine(manualline, lineStartX, lineY, lineEndX, lineY); // Draw the line first     \n                    taskGraphics.translateTransform(lineEndX, lineY - 2); // Now move the origin to the line's end point to draw the circle        \n                    taskGraphics.drawPath(manualTaskbarPen, manuallineBrush, path1); // Draw the circle at the end of the line  \n                    taskGraphics.restore(); // Restore the graphics state\n                    manualline.dashStyle = PdfDashStyle.Solid; // Ensure the line has a solid style\n                }\n                else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                    taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + pixelToPoint(this.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                    taskGraphics.save();\n                    taskGraphics.setTransparency(0.87);\n                    taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + pixelToPoint(this.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                    taskGraphics.restore();\n                    taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(this.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (taskbar.isSpliterTask) {\n                    splitline.dashStyle = PdfDashStyle.Dot;\n                    taskGraphics.drawLine(splitline, new PointF(startPoint.x + pixelToPoint(this.left) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)), new PointF(pixelToPoint(taskbar.width) + startPoint.x + pixelToPoint(this.left), startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height / 2)));\n                    taskbar.segmentCollection.map(function (data, index) {\n                        if (data.width !== 0) {\n                            taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height));\n                            if (template.value || template.image) {\n                                var imageWidth = void 0;\n                                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                                    imageWidth = taskbar.taskbarTemplate.image[0].width;\n                                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                                    taskGraphics.drawImage(image, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                                }\n                                else {\n                                    imageWidth = 0;\n                                }\n                                !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(data.width), pixelToPoint(taskbar.height), progressFormat) : '';\n                            }\n                        }\n                    });\n                }\n                else {\n                    taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(taskbar.height));\n                    if (!isNullOrUndefined(this.remainString)) {\n                        var result = this.getWidth(this.remainString, taskbar.width - taskbar.left, 15);\n                        taskGraphics.drawString(result.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left), (startPoint.y + adjustHeight_1), result.actualSize.width, pixelToPoint(this.height), progressFormat);\n                    }\n                }\n                if (this.isScheduledTask && taskbar.isAutoSchedule && !taskbar.isSpliterTask) {\n                    if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n                        taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5), startPoint.y + adjustHeight_1, pixelToPoint(taskbar.progressWidth), pixelToPoint(taskbar.height));\n                    }\n                    if (!isNullOrUndefined(this.taskLabel)) {\n                        updatedWidth = this.progressWidth;\n                        if (isLabelString) {\n                            updatedWidth = this.width;\n                        }\n                        if (isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                            if (isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                                if (!isNullOrUndefined(this.remainString)) {\n                                    var result_3 = this.getWidth(this.remainString, detail.endPoint - this.stringLeft, 15);\n                                    taskGraphics.drawString(result_3.lines[0].text, font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                                }\n                            }\n                        }\n                        if (!isNullOrUndefined(this.taskLabel)) {\n                            updatedWidth = this.progressWidth;\n                            if (isLabelString) {\n                                updatedWidth = this.width;\n                            }\n                            taskGraphics.drawString(this.taskLabel.toString(), font, fontColor, fontBrush, startPoint.x + pixelToPoint(this.left), (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                        }\n                    }\n                }\n                else if (taskbar.isSpliterTask) {\n                    taskbar.segmentCollection.map(function (data, index) {\n                        taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left + 0.5 + data.left), startPoint.y + adjustHeight_1, pixelToPoint(data.progressWidth), pixelToPoint(taskbar.height));\n                    });\n                }\n                this.isCompleted = true;\n                this.endPage = pageIndex;\n            }\n            //Header splitup start and end date with in the task start and end date.\n            //So the task is takes entire width of page.\n            else if (startDate < detail.startDate && endDate > detail.endDate) {\n                if (!this.isStartPoint) {\n                    this.taskStartPoint = __assign({}, startPoint);\n                    this.isStartPoint = true;\n                }\n                if (!this.isScheduledTask && this.unscheduledTaskBy === 'duration') {\n                    var brush1 = void 0;\n                    var brush2 = void 0;\n                    brush1 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left) + 0.5 + pixelToPoint(detail.totalWidth) / 2, 0), new PointF(startPoint.x + pixelToPoint(taskbar.left), 0), new PdfColor(taskbar.unscheduledTaskBarColor), new PdfColor(255, 255, 255));\n                    taskGraphics.drawRectangle(brush1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n                    brush2 = new PdfLinearGradientBrush(new PointF(startPoint.x + pixelToPoint(taskbar.left) + 0.5 + pixelToPoint(detail.totalWidth), 0), new PointF(startPoint.x + pixelToPoint(taskbar.left) + pixelToPoint(detail.totalWidth) / 2, 0), new PdfColor(255, 255, 255), new PdfColor(taskbar.unscheduledTaskBarColor));\n                    taskGraphics.drawRectangle(brush2, startPoint.x + pixelToPoint(taskbar.left) + 0.5 + pixelToPoint(detail.totalWidth) / 2, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth) / 2, pixelToPoint(taskbar.height));\n                    if (template.value || template.image) {\n                        var imageWidth = void 0;\n                        if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                            imageWidth = taskbar.taskbarTemplate.image[0].width;\n                            var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                            taskGraphics.drawImage(image, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height));\n                        }\n                        else {\n                            imageWidth = 0;\n                        }\n                        !isNullOrUndefined(taskbar.taskbarTemplate.value) ? taskGraphics.drawString(taskbar.taskbarTemplate.value, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left + 0.5) + imageWidth, startPoint.y + adjustHeight_1, pixelToPoint(taskbar.width), pixelToPoint(this.height), progressFormat) : 0;\n                    }\n                }\n                else if (!this.isScheduledTask && this.unscheduledTaskBy === \"endDate\") {\n                    this.drawUnscheduledTask(taskGraphics, startPoint, cumulativeWidth, adjustHeight_1);\n                }\n                else if (!taskbar.isAutoSchedule && !taskbar.isParentTask) {\n                    taskGraphics.drawRectangle(manualChildBorderPen, null, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n                    taskGraphics.save();\n                    taskGraphics.setTransparency(0.87);\n                    taskGraphics.drawRectangle(null, manualChildBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n                    taskGraphics.restore();\n                    var progressBoundsWidth = 0;\n                    if (this.progressWidth <= detail.totalWidth) {\n                        progressBoundsWidth = this.progressWidth;\n                    }\n                    else {\n                        progressBoundsWidth = detail.totalWidth;\n                    }\n                    if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n                        taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                    }\n                    this.progressWidth -= progressBoundsWidth;\n                    taskGraphics.drawRectangle(null, manualChildProgressBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                }\n                else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    manualline.dashStyle = PdfDashStyle.Solid;\n                    taskGraphics.drawLine(manualline, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), startPoint.y + adjustHeight_1);\n                }\n                else {\n                    taskGraphics.drawRectangle(taskbarPen_1, taskBrush_1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.height));\n                    if (!isNullOrUndefined(taskbar.taskbarTemplate.value)) {\n                        if (!isNullOrUndefined(this.remainString)) {\n                            var result_4 = this.getWidth(this.remainString, detail.endPoint - this.stringLeft, 15);\n                            taskGraphics.drawString(result_4.lines[0].text, customizedFont, customizedFontColor, customizedFontBrush, startPoint.x + pixelToPoint(taskbar.left) + 0.5, (startPoint.y + adjustHeight_1), pixelToPoint(detail.totalWidth), pixelToPoint(this.height), progressFormat);\n                        }\n                    }\n                    if (this.isScheduledTask && !taskbar.isParentTask) {\n                        var progressBoundsWidth = 0;\n                        if (this.progressWidth <= detail.totalWidth) {\n                            progressBoundsWidth = this.progressWidth;\n                        }\n                        else {\n                            progressBoundsWidth = detail.totalWidth;\n                        }\n                        if (isNullOrUndefined(template.image) && isNullOrUndefined(template.value)) {\n                            taskGraphics.drawRectangle(progressPen_1, progressBrush_1, startPoint.x + pixelToPoint(taskbar.left) + 0.5, startPoint.y + adjustHeight_1, pixelToPoint(progressBoundsWidth), pixelToPoint(taskbar.height));\n                        }\n                        this.progressWidth -= progressBoundsWidth;\n                        if (!isNullOrUndefined(this.taskLabel)) {\n                            updatedWidth = progressBoundsWidth;\n                            if (isLabelString) {\n                                updatedWidth = this.width;\n                            }\n                            taskGraphics.drawString(this.taskLabel.toString(), taskLabelFont, fontColor, taskLabelFontBrush, startPoint.x + pixelToPoint(this.left), (startPoint.y + adjustHeight_1), pixelToPoint(updatedWidth), pixelToPoint(this.height), progressFormat);\n                        }\n                    }\n                }\n                this.isCompleted = false;\n                this.width -= detail.totalWidth;\n            }\n            if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                if (detail.startDate <= taskbar.baselineStartDate && taskbar.baselineEndDate <= detail.endDate) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), (taskbar.baselineWidth), pixelToPoint(this.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(taskbar.baselineWidth), pixelToPoint(this.baselineHeight));\n                        }\n                    }\n                    this.isCompletedBaseline = true;\n                    this.startPage = pageIndex;\n                    this.endPage = pageIndex;\n                }\n                else if (detail.startDate <= taskbar.baselineStartDate && detail.endDate >= taskbar.baselineStartDate && (taskbar.baselineEndDate >= detail.endDate)) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    var renderWidth = 0;\n                    var width = this.baselineWidth;\n                    renderWidth = (detail.totalWidth - (taskbar.baselineLeft - cumulativeWidth));\n                    if (width < renderWidth) {\n                        renderWidth = width;\n                    }\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), (renderWidth), pixelToPoint(this.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(renderWidth), pixelToPoint(this.baselineHeight));\n                        }\n                    }\n                    taskbar.baselineWidth = taskbar.baselineWidth - renderWidth;\n                    this.baselineLeft = 0;\n                    this.isCompletedBaseline = false;\n                    this.startPage = pageIndex;\n                }\n                else if (taskbar.baselineEndDate <= detail.endDate && detail.startDate <= taskbar.baselineEndDate && !this.isCompletedBaseline) {\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft + 0.5), startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), (taskbar.baselineWidth), pixelToPoint(this.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft + 0.5), startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(taskbar.baselineWidth), pixelToPoint(this.baselineHeight));\n                        }\n                    }\n                    this.isCompletedBaseline = true;\n                    this.endPage = pageIndex;\n                }\n                else if (taskbar.baselineStartDate < detail.startDate && taskbar.baselineEndDate > detail.endDate) {\n                    if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + (taskbar.baselineLeft) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), (detail.totalWidth), pixelToPoint(taskbar.baselineHeight));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(baselinePen, baselineBrush, startPoint.x + pixelToPoint(taskbar.baselineLeft) + 0.5, startPoint.y + adjustHeight_1 + pixelToPoint(taskbar.height + 3), pixelToPoint(detail.totalWidth), pixelToPoint(taskbar.baselineHeight));\n                        }\n                    }\n                    this.isCompletedBaseline = false;\n                    this.baselineWidth -= detail.totalWidth;\n                }\n            }\n            if (!this.isAutoSchedule && taskbar.isParentTask) {\n                if (detail.startDate <= taskbar.autoStartDate && taskbar.autoEndDate <= detail.endDate) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (this.autoWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(this.autoWidth), pixelToPoint(12));\n                        }\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (this.autoWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(this.autoWidth), pixelToPoint(12));\n                        }\n                        taskGraphics.restore();\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (taskbar.progressWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.progressWidth), pixelToPoint(12));\n                        }\n                    }\n                    this.isCompletedAutotask = true;\n                    this.startPage = pageIndex;\n                    this.endPage = pageIndex;\n                }\n                else if (detail.startDate <= taskbar.autoStartDate && detail.endDate >= taskbar.autoStartDate && (taskbar.autoEndDate >= detail.endDate)) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    var renderWidth = 0;\n                    var progressWidth = 0;\n                    renderWidth = (detail.totalWidth - (this.autoLeft - cumulativeWidth));\n                    progressWidth = (detail.totalWidth - (this.autoLeft - cumulativeWidth));\n                    if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (renderWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(renderWidth), pixelToPoint(12));\n                        }\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (renderWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(renderWidth), pixelToPoint(12));\n                        }\n                        taskGraphics.restore();\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (taskbar.progressWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(progressWidth), pixelToPoint(12));\n                        }\n                        taskbar.autoWidth = taskbar.autoWidth - renderWidth;\n                        taskbar.progressWidth = taskbar.progressWidth - progressWidth;\n                    }\n                    this.autoLeft = 0;\n                    this.isCompletedAutotask = false;\n                    this.startPage = pageIndex;\n                }\n                else if (taskbar.autoEndDate <= detail.endDate && detail.startDate <= taskbar.autoEndDate && !this.isCompletedAutotask) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    else if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.autoWidth), pixelToPoint(12));\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        taskGraphics.drawRectangle(manualBrush, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.autoWidth), pixelToPoint(12));\n                        taskGraphics.restore();\n                        taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(taskbar.progressWidth), pixelToPoint(12));\n                    }\n                    this.isCompletedAutotask = true;\n                    this.endPage = pageIndex;\n                }\n                else if (taskbar.autoStartDate < detail.startDate && taskbar.autoEndDate > detail.endDate) {\n                    if (!this.isStartPoint) {\n                        this.taskStartPoint = __assign({}, startPoint);\n                        this.isStartPoint = true;\n                    }\n                    if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                        var progressBoundsWidth = 0;\n                        if (this.progressWidth <= detail.totalWidth) {\n                            progressBoundsWidth = this.progressWidth;\n                        }\n                        else {\n                            progressBoundsWidth = detail.totalWidth;\n                        }\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + (this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, (progressBoundsWidth), pixelToPoint(12));\n                        }\n                        else {\n                            if (taskbar.progressWidth !== 0) {\n                                taskGraphics.drawRectangle(null, manualProgressBrush, startPoint.x + pixelToPoint(this.autoLeft + 0.5), startPoint.y + adjustHeight_1 + 10, pixelToPoint(progressBoundsWidth), pixelToPoint(12));\n                            }\n                        }\n                        this.progressWidth -= progressBoundsWidth;\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + (this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, (detail.totalWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(manualParentBorderPen, null, startPoint.x + pixelToPoint(this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(detail.totalWidth), pixelToPoint(12));\n                        }\n                        taskGraphics.save();\n                        taskGraphics.setTransparency(0.87);\n                        if (this.isAutoFit()) {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + (this.autoLeft - cumulativeWidth) + 0.5, startPoint.y + adjustHeight_1 + 10, (detail.totalWidth), pixelToPoint(12));\n                        }\n                        else {\n                            taskGraphics.drawRectangle(null, manualBrush, startPoint.x + pixelToPoint(this.autoLeft) + 0.5, startPoint.y + adjustHeight_1 + 10, pixelToPoint(detail.totalWidth), pixelToPoint(12));\n                        }\n                        taskGraphics.restore();\n                    }\n                    this.isCompletedAutotask = false;\n                    this.autoWidth -= detail.totalWidth;\n                }\n            }\n            if (!isNullOrUndefined(taskbar.indicators) && taskbar.indicators.length > 0) {\n                taskbar.indicators.map(function (items, index) {\n                    var currendate = _this.parent.dateValidationModule.getDateFromFormat(items.date, true);\n                    if (detail.startDate <= currendate && currendate <= detail.endDate) {\n                        var leftValue = _this.parent.chartRowsModule.getIndicatorleft(items.date);\n                        if (!isNullOrUndefined(items.base64)) {\n                            var image = new PdfBitmap(items.base64);\n                            if (_this.isAutoFit()) {\n                                taskGraphics.drawImage(image, startPoint.x + (leftValue - cumulativeWidth) + 0.5 + 10, startPoint.y + adjustHeight_1, imageSize_1, imageSize_1);\n                                taskGraphics.drawString(items.name, font, null, PdfBrushes.Black, startPoint.x + (leftValue - cumulativeWidth) + 0.5 + 15 + imageSize_1, startPoint.y + adjustHeight_1, null);\n                            }\n                            else {\n                                taskGraphics.drawImage(image, startPoint.x + pixelToPoint(leftValue - cumulativeWidth) + 0.5 + 10, startPoint.y + adjustHeight_1, imageSize_1, imageSize_1);\n                                taskGraphics.drawString(items.name, font, null, PdfBrushes.Black, startPoint.x + pixelToPoint(leftValue - cumulativeWidth) + 0.5 + 15 + imageSize_1, startPoint.y + adjustHeight_1, null);\n                            }\n                        }\n                    }\n                });\n            }\n        }\n        else {\n            this.drawMilestone(page, startPoint, detail, cumulativeWidth, taskbar, false);\n            if (this.parent.renderBaseline && taskbar.baselineStartDate && taskbar.baselineEndDate) {\n                this.drawMilestone(page, startPoint, detail, cumulativeWidth, taskbar, true);\n            }\n        }\n        this.drawRightLabel(page, startPoint, detail, cumulativeWidth);\n        return isNextPage;\n    };\n    /* eslint-enable */\n    /**\n     * @param {IGanttStyle} ganttStyle .\n     * @returns {PdfFont}\n     * Customizes the font based on the Gantt style.\n     */\n    PdfGanttTaskbarCollection.prototype.getPdfFont = function (ganttStyle) {\n        var font;\n        if (ganttStyle && ganttStyle.label && (ganttStyle.label.fontSize || ganttStyle.label.fontStyle ||\n            ganttStyle.label.fontFamily)) {\n            var fontSize = ganttStyle.label.fontSize ? ganttStyle.label.fontSize : 9;\n            var fontFamilyValue = ganttStyle.label.fontFamily;\n            var fontFamily = ganttStyle.label.fontFamily ?\n                this.parent.pdfExportModule.helper['getFontFamily'](fontFamilyValue) : this.fontFamily;\n            var fontStyleValue = ganttStyle.label.fontStyle;\n            var fontStyle = ganttStyle.label.fontStyle ?\n                this.parent.pdfExportModule.helper['getFontStyle'](fontStyleValue) : PdfFontStyle.Regular;\n            font = new PdfStandardFont(fontFamily, fontSize, fontStyle);\n        }\n        return font;\n    };\n    /* eslint-enable */\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @returns {void}\n     * Draw task right side label\n     */\n    PdfGanttTaskbarCollection.prototype.drawRightLabel = function (page, startPoint, detail, cumulativeWidth) {\n        var left;\n        var graphics = page.graphics;\n        if (!isNullOrUndefined(this.rightTaskLabel.value)) {\n            if (this.rightTaskLabel.isLeftCalculated) {\n                left = this.rightTaskLabel.left;\n            }\n            else {\n                if (this.isAutoFit()) {\n                    left = (this.rightTaskLabel.left);\n                }\n                else {\n                    left = pixelToPoint(this.rightTaskLabel.left);\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            }\n            if (detail.startPoint <= left && left < detail.endPoint &&\n                !isNullOrUndefined(this.rightTaskLabel.value) && !this.rightTaskLabel.isCompleted) {\n                var result = this.getWidth(this.rightTaskLabel.value, detail.endPoint - left, 15);\n                var font = new PdfStandardFont(this.fontFamily, 9);\n                var customizedFont = void 0;\n                var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n                if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) && (!isNullOrUndefined(ganttStyle.label.fontSize)\n                    || !isNullOrUndefined(ganttStyle.label.fontStyle) ||\n                    !isNullOrUndefined(ganttStyle.label.fontFamily))) {\n                    customizedFont = this.getPdfFont(ganttStyle);\n                }\n                if (!isNullOrUndefined(customizedFont)) {\n                    font = customizedFont;\n                }\n                var padding = { left: 0, right: 0, top: 0, bottom: 0 };\n                if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) &&\n                    !isNullOrUndefined(ganttStyle.label.padding)) {\n                    padding = ganttStyle.label.padding;\n                }\n                if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var point = new PointF(actualLeft + padding.left, startPoint.y + adjustHeight + padding.top);\n                var size = new SizeF(result.actualSize.width - (padding.left + padding.right), result.actualSize.height - (padding.top + padding.bottom));\n                var labelBounds = new RectangleF(point, size);\n                var labelFormat = new PdfStringFormat();\n                labelFormat.alignment = PdfTextAlignment.Right;\n                labelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var fontBrush = new PdfSolidBrush(this.labelColor);\n                    /* eslint-disable-next-line */\n                    graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, labelBounds.x, labelBounds.y, result.actualSize.width, result.actualSize.height, labelFormat);\n                    if (result.remainder !== null) {\n                        this.rightTaskLabel.value = result.remainder;\n                        this.rightTaskLabel.left = detail.endPoint;\n                        this.rightTaskLabel.isLeftCalculated = true;\n                    }\n                    else {\n                        this.rightTaskLabel.isCompleted = true;\n                    }\n                }\n                else {\n                    this.rightTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.labelSettings.rightLabel.image)) {\n                this.previousWidthofRightImage = 0;\n                this.previousWidthofRightValue = 0;\n                for (var i = 0; i < this.labelSettings.rightLabel.image.length; i++) {\n                    this.drawRigthlabelImage(page, startPoint, detail, cumulativeWidth, this.labelSettings.rightLabel.image[i]);\n                    if (this.labelSettings.rightLabel.value) {\n                        var value = this.labelSettings.rightLabel.value.split(',');\n                        if (value) {\n                            this.rightTaskLabel.isCompleted = false;\n                            this.drawRightLabelValue(page, startPoint, detail, cumulativeWidth, value[i]);\n                        }\n                    }\n                }\n            }\n            else if (this.labelSettings.rightLabel.value) {\n                this.drawRightLabelValue(page, startPoint, detail, cumulativeWidth, this.labelSettings.rightLabel.value);\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawRigthlabelImage = function (page, startPoint, detail, cumulativeWidth, rightImage) {\n        var left;\n        var graphics = page.graphics;\n        var labelBounds;\n        if (!isNullOrUndefined(this.labelSettings.rightLabel) && !isNullOrUndefined(this.labelSettings.rightLabel.image)) {\n            if (this.labelSettings.isLeftCalculated) {\n                left = this.rightTaskLabel.left;\n            }\n            else {\n                if (this.isAutoFit()) {\n                    if (this.labelSettings.rightLabel.image.length > 1) {\n                        left = this.rightTaskLabel.left + +this.previousWidthofRightValue;\n                        this.previousWidthofRightImage = rightImage.width;\n                    }\n                    else {\n                        left = (this.rightTaskLabel.left);\n                    }\n                }\n                else {\n                    var value = void 0;\n                    if (!isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n                        value = this.labelSettings.rightLabel.value.split(',');\n                    }\n                    if (this.labelSettings.rightLabel.image.length > 1 && value.length > 1) {\n                        left = pixelToPoint(this.rightTaskLabel.left) + this.previousWidthofRightValue;\n                        this.previousWidthofRightImage = rightImage.width;\n                    }\n                    else if (this.labelSettings.rightLabel.image.length > 1) {\n                        left = pixelToPoint(this.rightTaskLabel.left) + this.previousWidthofRightImage;\n                        this.previousWidthofRightImage = rightImage.width;\n                    }\n                    else {\n                        left = pixelToPoint(this.rightTaskLabel.left);\n                    }\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            }\n            if (detail.startPoint <= left && left < detail.endPoint &&\n                !isNullOrUndefined(this.labelSettings.rightLabel) && !this.rightTaskLabel.isCompleted) {\n                var result = new SizeF(rightImage.width, rightImage.height);\n                var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.height) / 2;\n                var point = new PointF(actualLeft, startPoint.y + adjustHeight);\n                var size = new SizeF(result.width, result.height);\n                labelBounds = new RectangleF(point, size);\n                var image = new PdfBitmap(rightImage.base64);\n                if (result.width > 0) {\n                    graphics.drawImage(image, labelBounds.x, labelBounds.y, result.width, result.height);\n                    if (this.labelSettings.rightLabel.value !== null) {\n                        this.rightTaskLabel.isLeftCalculated = true;\n                    }\n                    else {\n                        if (isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n                            this.rightTaskLabel.isCompleted = true;\n                        }\n                    }\n                }\n                else {\n                    this.rightTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawRightLabelValue = function (page, startPoint, detail, cumulativeWidth, rightString) {\n        var left;\n        var graphics = page.graphics;\n        if (!isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n            if (this.labelSettings.isLeftCalculated) {\n                left = this.rightTaskLabel.left;\n            }\n            else {\n                if (this.isAutoFit()) {\n                    if (this.labelSettings.rightLabel.image) {\n                        if (this.labelSettings.rightLabel.image.length > 1) {\n                            left = this.rightTaskLabel.left + this.previousWidthofRightImage + this.previousWidthofRightValue;\n                            if (!isNullOrUndefined(rightString)) {\n                                var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n                                this.previousWidthofRightValue += result.actualSize.width + this.previousWidthofRightImage;\n                            }\n                        }\n                        else {\n                            left = this.rightTaskLabel.left + this.labelSettings.rightLabel.image[0].width;\n                        }\n                    }\n                    else {\n                        left = (this.rightTaskLabel.left);\n                    }\n                }\n                else {\n                    if (this.labelSettings.rightLabel.image) {\n                        if (this.labelSettings.rightLabel.image.length > 1) {\n                            left = pixelToPoint(this.rightTaskLabel.left) + this.previousWidthofRightImage + this.previousWidthofRightValue;\n                            if (!isNullOrUndefined(rightString)) {\n                                var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n                                this.previousWidthofRightValue += result.actualSize.width + this.previousWidthofRightImage;\n                            }\n                        }\n                        else {\n                            left = pixelToPoint(this.rightTaskLabel.left) + this.labelSettings.rightLabel.image[0].width;\n                        }\n                    }\n                    else {\n                        left = pixelToPoint(this.rightTaskLabel.left);\n                    }\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - (cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            }\n            if (detail.startPoint <= left && left < detail.endPoint &&\n                !isNullOrUndefined(rightString) && !this.rightTaskLabel.isCompleted) {\n                var result = this.getWidthofrightLabel(rightString, detail.endPoint - left, 15);\n                var font = new PdfStandardFont(this.fontFamily, 9);\n                if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var point = new PointF(actualLeft, startPoint.y + adjustHeight);\n                var size = new SizeF(result.actualSize.width, result.actualSize.height);\n                var labelBound = new RectangleF(point, size);\n                var labelFormat = new PdfStringFormat();\n                labelFormat.alignment = PdfTextAlignment.Right;\n                labelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var fontBrush = new PdfSolidBrush(this.labelColor);\n                    var newFont = (this.labelSettings.rightLabel.fontStyle.fontSize) ? new PdfStandardFont(this.labelSettings.rightLabel.fontStyle.fontFamily, this.labelSettings.rightLabel.fontStyle.fontSize, this.labelSettings.rightLabel.fontStyle.fontStyle) : font;\n                    var newFontBrush = this.labelSettings.rightLabel.fontStyle.fontColor ? new PdfSolidBrush(this.labelSettings.rightLabel.fontStyle.fontColor) : fontBrush;\n                    /* eslint-disable-next-line */\n                    graphics.drawString(rightString, newFont, fontColor, newFontBrush, labelBound.x, labelBound.y, result.actualSize.width, result.actualSize.height, labelFormat);\n                    if (!isNullOrUndefined(result.remainder) && result.remainder !== null) {\n                        this.rightTaskLabel.value = result.remainder;\n                        this.rightTaskLabel.left = detail.endPoint;\n                        this.rightTaskLabel.isLeftCalculated = true;\n                    }\n                    else {\n                        if (isNullOrUndefined(this.labelSettings.rightLabel.value)) {\n                            this.rightTaskLabel.isCompleted = true;\n                        }\n                    }\n                }\n                else {\n                    this.rightTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @param {PdfGanttTaskbarCollection} taskbar .\n     * @returns {void}\n     * Draw task left task label\n     */\n    PdfGanttTaskbarCollection.prototype.drawLeftLabel = function (page, startPoint, detail, cumulativeWidth, taskbar) {\n        var graphics = page.graphics;\n        var left;\n        if (!isNullOrUndefined(this.leftTaskLabel.value)) {\n            var labelLeft = 0;\n            labelLeft = this.left;\n            if (!this.leftTaskLabel.isLeftCalculated) {\n                var result = this.getWidth(this.leftTaskLabel.value, Number.MAX_VALUE, 15);\n                var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n                if (this.isAutoFit()) {\n                    left = (labelLeft - reduceLeft) - result.actualSize.width;\n                }\n                else {\n                    left = pixelToPoint(labelLeft - reduceLeft) - result.actualSize.width;\n                }\n                this.leftTaskLabel.left = left;\n                this.leftTaskLabel.isLeftCalculated = true;\n            }\n            else {\n                left = this.leftTaskLabel.left;\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n                if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    var leftValue = taskbar.left - taskbar.autoLeft;\n                    if (taskbar.left < taskbar.autoLeft) {\n                        actualLeft = left - cumulativeWidth + startPoint.x;\n                    }\n                    else {\n                        actualLeft = left - cumulativeWidth + startPoint.x - leftValue;\n                    }\n                }\n            }\n            else {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n                if (!taskbar.isAutoSchedule && taskbar.isParentTask) {\n                    var leftValue = pixelToPoint(taskbar.left) - pixelToPoint(taskbar.autoLeft);\n                    if (taskbar.left < taskbar.autoLeft) {\n                        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n                    }\n                    else {\n                        actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x - leftValue;\n                    }\n                }\n            }\n            if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(this.leftTaskLabel.value)\n                && !this.leftTaskLabel.isCompleted) {\n                var result = this.getWidth(this.leftTaskLabel.value, detail.endPoint - left, 15);\n                var font = new PdfStandardFont(this.fontFamily, 9);\n                var customizedFont = void 0;\n                var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n                if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) && (!isNullOrUndefined(ganttStyle.label.fontSize)\n                    || !isNullOrUndefined(ganttStyle.label.fontStyle) ||\n                    !isNullOrUndefined(ganttStyle.label.fontFamily))) {\n                    customizedFont = this.getPdfFont(ganttStyle);\n                }\n                if (!isNullOrUndefined(customizedFont)) {\n                    font = customizedFont;\n                }\n                if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var padding = { left: 0, right: 0, top: 0, bottom: 0 };\n                if (!isNullOrUndefined(ganttStyle) && !isNullOrUndefined(ganttStyle.label) &&\n                    !isNullOrUndefined(ganttStyle.label.padding)) {\n                    padding = ganttStyle.label.padding;\n                }\n                var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var rightLabelpoint = new PointF(actualLeft + padding.left, startPoint.y + adjustHeight + padding.top);\n                var rightLabelSize = new SizeF(result.actualSize.width - (padding.left + padding.right), result.actualSize.height - (padding.top + padding.bottom));\n                var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n                var rightLabelFormat = new PdfStringFormat();\n                rightLabelFormat.alignment = PdfTextAlignment.Right;\n                rightLabelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var fontBrush = new PdfSolidBrush(this.labelColor);\n                    /* eslint-disable-next-line */\n                    graphics.drawString(result.lines[0].text, font, fontColor, fontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n                    if (result.remainder !== null) {\n                        this.leftTaskLabel.value = result.remainder;\n                        this.leftTaskLabel.left = detail.endPoint;\n                    }\n                    else {\n                        this.leftTaskLabel.isCompleted = true;\n                    }\n                }\n                else {\n                    this.leftTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.labelSettings.leftLabel) && !isNullOrUndefined(this.labelSettings.leftLabel.image)) {\n                this.previousWidthofLeftImage = 0;\n                this.previousWidthofLeftValue = 0;\n                this.totalLeftWidth = 0;\n                for (var i = 0; i < this.labelSettings.leftLabel.image.length; i++) {\n                    var value = void 0;\n                    var result = void 0;\n                    if (!isNullOrUndefined(this.labelSettings.leftLabel.value)) {\n                        value = this.labelSettings.leftLabel.value.split(',');\n                        result = this.getWidth(value[i], Number.MAX_VALUE, 15);\n                    }\n                    var totalstringWidth = !isNullOrUndefined(result) ? result.actualSize.width : 0;\n                    this.totalLeftWidth += this.labelSettings.leftLabel.image[i].width + totalstringWidth;\n                }\n                for (var i = 0; i < this.labelSettings.leftLabel.image.length; i++) {\n                    this.drawLeftLabelImage(page, startPoint, detail, cumulativeWidth, this.labelSettings.leftLabel.image[i]);\n                    if (this.labelSettings.leftLabel.value) {\n                        var value = this.labelSettings.leftLabel.value.split(',');\n                        if (value) {\n                            this.drawLeftLabelValue(page, startPoint, detail, cumulativeWidth, value[i]);\n                        }\n                    }\n                }\n            }\n            else if (!isNullOrUndefined(this.labelSettings.leftLabel) && !isNullOrUndefined(this.labelSettings.leftLabel.value)) {\n                this.drawLeftLabelValue(page, startPoint, detail, cumulativeWidth, this.labelSettings.leftLabel.value);\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawLeftLabelImage = function (page, startPoint, detail, cumulativeWidth, leftLabelImage) {\n        var graphics = page.graphics;\n        var left;\n        var labelLeft = 0;\n        labelLeft = this.left;\n        if (!isNullOrUndefined(this.labelSettings.leftLabel) && !isNullOrUndefined(this.labelSettings.leftLabel.image)) {\n            if (!this.leftTaskLabel.isLeftCalculated) {\n                var result = new SizeF(leftLabelImage.width, leftLabelImage.height);\n                var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n                var value = this.labelSettings.leftLabel.value.split(',');\n                if (this.isAutoFit()) {\n                    if (this.labelSettings.leftLabel.image.length > 0 && value.length > 0) {\n                        left = labelLeft - this.totalLeftWidth - result.width;\n                        this.previousWidthofLeftImage += result.width;\n                    }\n                    else {\n                        left = (labelLeft - reduceLeft) - result.width;\n                    }\n                }\n                else {\n                    if (this.labelSettings.leftLabel.image.length > 0 && value.length > 0) {\n                        left = pixelToPoint(labelLeft) - this.totalLeftWidth - result.width;\n                        this.previousWidthofLeftImage += result.width;\n                    }\n                    else {\n                        left = pixelToPoint(labelLeft - reduceLeft) - result.width;\n                    }\n                }\n                this.leftTaskLabel.left = left;\n                this.leftTaskLabel.isLeftCalculated = true;\n            }\n            else {\n                if (this.labelSettings.leftLabel.image.length > 1) {\n                    left = this.leftTaskLabel.left + this.previousWidthofLeftValue;\n                }\n                else {\n                    left = this.leftTaskLabel.left;\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            }\n            if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(leftLabelImage)\n                && !this.leftTaskLabel.isCompleted) {\n                var result = new SizeF(leftLabelImage.width, leftLabelImage.height);\n                var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.height) / 2;\n                var rightLabelpoint = new PointF(actualLeft, startPoint.y + adjustHeight);\n                var rightLabelSize = new SizeF(result.width, result.height);\n                var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n                var image = new PdfBitmap(leftLabelImage.base64);\n                if (result.width > 0) {\n                    graphics.drawImage(image, rightLabelBounds.x, rightLabelBounds.y, result.width, result.height);\n                    this.totalLeftWidth = this.totalLeftWidth - result.width;\n                }\n                else {\n                    this.leftTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.drawLeftLabelValue = function (page, startPoint, detail, cumulativeWidth, leftLabelValue) {\n        var graphics = page.graphics;\n        var left;\n        if (!isNullOrUndefined(leftLabelValue)) {\n            var labelLeft = 0;\n            labelLeft = this.left;\n            if (!this.leftTaskLabel.isLeftCalculated) {\n                var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                var reduceLeft = this.isMilestone ? Math.floor(this.parent.chartRowsModule.taskBarHeight / 2) + 33 : 33; // 33 indicates default timeline cell width\n                var value = this.labelSettings.leftLabel.value.split(',');\n                if (this.isAutoFit()) {\n                    var isLeftImageExist = !isNullOrUndefined(this.labelSettings.leftLabel.image) ? true : false;\n                    var imageLength = isLeftImageExist ? this.labelSettings.leftLabel.image.length : 0;\n                    if (value.length === 1 && isLeftImageExist && imageLength === 1) {\n                        left = this.leftTaskLabel.left + this.previousWidthofLeftImage;\n                        this.labelSettings.left = left;\n                        var result_5 = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                        this.previousWidthofLeftValue += this.previousWidthofLeftImage + result_5.actualSize.width;\n                    }\n                    else if (value.length > 1 && isLeftImageExist && imageLength > 1) {\n                        var totalWidth = (this.previousWidthofLeftValue !== 0) ? this.previousWidthofLeftValue\n                            + this.previousWidthofLeftImage : this.previousWidthofLeftImage;\n                        left = this.leftTaskLabel.left + totalWidth;\n                        this.labelSettings.left = left;\n                        var result_6 = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                        this.previousWidthofLeftValue += this.previousWidthofLeftImage + result_6.actualSize.width;\n                    }\n                    else {\n                        left = (labelLeft - reduceLeft) - result.actualSize.width;\n                    }\n                }\n                else {\n                    left = pixelToPoint(labelLeft - reduceLeft) - result.actualSize.width;\n                }\n                this.leftTaskLabel.left = left;\n                this.leftTaskLabel.isLeftCalculated = true;\n            }\n            else {\n                var value = this.labelSettings.leftLabel.value.split(',');\n                if (value.length === 1) {\n                    left = this.leftTaskLabel.left + this.previousWidthofLeftImage;\n                    this.labelSettings.left = left;\n                    var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                    this.previousWidthofLeftValue += this.previousWidthofLeftImage + result.actualSize.width;\n                }\n                else if (value.length > 1) {\n                    var totalWidth = (this.previousWidthofLeftValue !== 0) ?\n                        this.previousWidthofLeftValue + this.previousWidthofLeftImage\n                        : this.previousWidthofLeftImage;\n                    left = this.leftTaskLabel.left + totalWidth;\n                    this.labelSettings.left = left;\n                    var result = this.getWidthofLeftLabel(leftLabelValue, Number.MAX_VALUE, 15);\n                    this.previousWidthofLeftValue += this.previousWidthofLeftImage + result.actualSize.width;\n                }\n                else {\n                    left = this.leftTaskLabel.left;\n                }\n            }\n            var actualLeft = void 0;\n            if (this.isAutoFit()) {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            }\n            else {\n                actualLeft = left - pixelToPoint(cumulativeWidth) + startPoint.x;\n            }\n            if (detail.startPoint <= left && left < detail.endPoint && !isNullOrUndefined(leftLabelValue)\n                && !this.leftTaskLabel.isCompleted) {\n                var result = this.getWidthofLeftLabel(leftLabelValue, detail.endPoint - left, 15);\n                var font = new PdfStandardFont(this.fontFamily, 9);\n                if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n                    this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n                    font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n                }\n                var adjustHeight = (pixelToPoint(this.parent.rowHeight) - result.actualSize.height) / 2;\n                var rightLabelpoint = new PointF(actualLeft, startPoint.y + adjustHeight);\n                var rightLabelSize = new SizeF(result.actualSize.width, result.actualSize.height);\n                var rightLabelBounds = new RectangleF(rightLabelpoint, rightLabelSize);\n                var rightLabelFormat = new PdfStringFormat();\n                rightLabelFormat.alignment = PdfTextAlignment.Right;\n                rightLabelFormat.lineAlignment = PdfVerticalAlignment.Middle;\n                if (result.actualSize.width > 0) {\n                    var fontColor = null;\n                    var fontBrush = new PdfSolidBrush(this.labelColor);\n                    var newFont = (this.labelSettings.leftLabel.fontStyle.fontSize) ? new PdfStandardFont(this.labelSettings.leftLabel.fontStyle.fontFamily, this.labelSettings.leftLabel.fontStyle.fontSize, this.labelSettings.leftLabel.fontStyle.fontStyle) : font;\n                    var newFontBrush = this.labelSettings.leftLabel.fontStyle.fontColor ?\n                        new PdfSolidBrush(this.labelSettings.leftLabel.fontStyle.fontColor) : fontBrush;\n                    graphics.drawString(leftLabelValue, newFont, fontColor, newFontBrush, rightLabelBounds.x, rightLabelBounds.y, result.actualSize.width, result.actualSize.height, rightLabelFormat);\n                    var value = this.labelSettings.leftLabel.value.split(',');\n                    if ((!isNullOrUndefined(result.remainder)) && result.remainder !== null) {\n                        this.leftTaskLabel.value = result.remainder;\n                        this.leftTaskLabel.left = detail.endPoint;\n                    }\n                    else if (!isNullOrUndefined(this.labelSettings.leftLabel.image) &&\n                        this.labelSettings.leftLabel.image.length === 1 && value.length === 1) {\n                        this.leftTaskLabel.isCompleted = true;\n                    }\n                }\n                else {\n                    this.leftTaskLabel.left = detail.endPoint;\n                }\n            }\n        }\n    };\n    PdfGanttTaskbarCollection.prototype.getWidth = function (value, width, height) {\n        var font;\n        font = new PdfStandardFont(this.fontFamily, 9);\n        var ganttStyle = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle;\n        if (ganttStyle && ganttStyle.label && ganttStyle.label.fontSize) {\n            font = new PdfStandardFont(this.fontFamily, ganttStyle.label.fontSize);\n            height = font.height;\n        }\n        if (!isNullOrUndefined(ganttStyle) && ganttStyle.font) {\n            font = ganttStyle.font;\n            height = font.height;\n        }\n        var layouter = new PdfStringLayouter();\n        var progressFormat = new PdfStringFormat();\n        progressFormat.alignment = PdfTextAlignment.Left;\n        progressFormat.wordWrap = PdfWordWrapType.Character;\n        progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        /* eslint-disable-next-line */\n        var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n        return result;\n    };\n    PdfGanttTaskbarCollection.prototype.getWidthofLeftLabel = function (value, width, height) {\n        var newFont = new PdfStandardFont(this.labelSettings.leftLabel.fontStyle.fontFamily, this.labelSettings.leftLabel.fontStyle.fontSize);\n        var font;\n        if (this.labelSettings.leftLabel.fontStyle.fontSize) {\n            font = newFont;\n        }\n        else {\n            font = new PdfStandardFont(this.fontFamily, 9);\n        }\n        if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n            this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n            font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var layouter = new PdfStringLayouter();\n        var progressFormat = new PdfStringFormat();\n        progressFormat.alignment = PdfTextAlignment.Left;\n        progressFormat.wordWrap = PdfWordWrapType.Character;\n        progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        /* eslint-disable-next-line */\n        var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n        return result;\n    };\n    PdfGanttTaskbarCollection.prototype.getWidthofrightLabel = function (value, width, height) {\n        var newFont = new PdfStandardFont(this.labelSettings.rightLabel.fontStyle.fontFamily, this.labelSettings.rightLabel.fontStyle.fontSize);\n        var font;\n        if (this.labelSettings.rightLabel.fontStyle.fontSize) {\n            font = newFont;\n        }\n        else {\n            font = new PdfStandardFont(this.fontFamily, 9);\n        }\n        if (!isNullOrUndefined(this.parent.pdfExportModule['helper']['exportProps'].ganttStyle) &&\n            this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font) {\n            font = this.parent.pdfExportModule['helper']['exportProps'].ganttStyle.font;\n        }\n        var layouter = new PdfStringLayouter();\n        var progressFormat = new PdfStringFormat();\n        progressFormat.alignment = PdfTextAlignment.Left;\n        progressFormat.wordWrap = PdfWordWrapType.Character;\n        progressFormat.lineAlignment = PdfVerticalAlignment.Middle;\n        /* eslint-disable-next-line */\n        var result = layouter.layout(value, font, progressFormat, new SizeF(width, height), false, new SizeF(width, height));\n        return result;\n    };\n    /**\n     * @param {PdfGraphics} taskGraphics .\n     * @param {PointF} startPoint .\n     * @param {number} cumulativeWidth .\n     * @param {number} adjustHeight .\n     * @returns {void}\n     * Draw Unscheduled Task\n     */\n    PdfGanttTaskbarCollection.prototype.drawUnscheduledTask = function (taskGraphics, startPoint, cumulativeWidth, adjustHeight) {\n        var taskBrush = new PdfSolidBrush(this.taskColor);\n        if (this.isAutoFit()) {\n            taskGraphics.drawRectangle(taskBrush, startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(3), pixelToPoint(this.height));\n        }\n        else {\n            taskGraphics.drawRectangle(taskBrush, startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight, pixelToPoint(3), pixelToPoint(this.height));\n        }\n    };\n    /**\n     * @param {PdfPage} page .\n     * @param {PointF} startPoint .\n     * @param {TimelineDetails} detail .\n     * @param {number} cumulativeWidth .\n     * @param {PdfGanttTaskbarCollection} taskbar .\n     * @param {boolean} isBaseline .\n     * @returns {void}\n    Draw milestone task\n     */\n    PdfGanttTaskbarCollection.prototype.drawMilestone = function (page, startPoint, detail, cumulativeWidth, taskbar, isBaseline) {\n        if (detail.startDate <= this.startDate && this.startDate <= detail.endDate) {\n            var taskGraphics = page.graphics;\n            var pageIndex = page.section.indexOf(page);\n            this.taskStartPoint = __assign({}, startPoint);\n            var milestonePen = new PdfPen(this.milestoneColor);\n            var adjustHeightforBaselineMilesone = pixelToPoint(((this.parent.rowHeight - this.height) / 3.0));\n            var adjustHeightforMilesone = pixelToPoint(((this.parent.rowHeight - this.height) / 2.0));\n            var adjustHeight = this.parent.renderBaseline ? adjustHeightforBaselineMilesone : adjustHeightforMilesone;\n            var milestoneBrush = new PdfSolidBrush(this.milestoneColor);\n            var baselinePen = new PdfPen(this.baselineBorderColor);\n            var baselineBrush = new PdfSolidBrush(this.baselineColor);\n            taskGraphics.save(); //saving graphics state\n            var height = Math.floor(this.parent.chartRowsModule.taskBarHeight * 0.8);\n            if (!isBaseline) {\n                if (this.isAutoFit()) {\n                    taskGraphics.translateTransform(startPoint.x + (this.left - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n                else {\n                    taskGraphics.translateTransform(startPoint.x + pixelToPoint(this.left - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n            }\n            if (isBaseline) {\n                if (this.isAutoFit()) {\n                    taskGraphics.translateTransform(startPoint.x + (taskbar.baselineLeft - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n                else {\n                    taskGraphics.translateTransform(startPoint.x + pixelToPoint(taskbar.baselineLeft - cumulativeWidth), startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2);\n                }\n            }\n            taskGraphics.rotateTransform(45); //apply rotation\n            if (this.parent.renderBaseline && this.baselineStartDate && this.baselineEndDate && isBaseline) {\n                taskGraphics.drawRectangle(baselinePen, baselineBrush, 2, 2, pixelToPoint(height), pixelToPoint(height));\n            }\n            if (!isBaseline) {\n                taskGraphics.drawRectangle(milestonePen, milestoneBrush, 0, 0, pixelToPoint(height), pixelToPoint(height));\n            }\n            taskGraphics.restore(); //restoring graphics state\n            if (this.isAutoFit()) {\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    var x = startPoint.x + (this.left - cumulativeWidth) - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        ((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 1.0;\n                    var width = taskbar.taskbarTemplate.image[0].width / 2.0;\n                    var height_1 = taskbar.taskbarTemplate.image[0].height / 2.0;\n                    taskGraphics.drawImage(image, x, startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        (((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 0.5), width, height_1);\n                }\n            }\n            else {\n                if (!isNullOrUndefined(taskbar.taskbarTemplate.image)) {\n                    var image = new PdfBitmap(taskbar.taskbarTemplate.image[0].base64);\n                    var x = startPoint.x + pixelToPoint(this.left - cumulativeWidth) - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        pixelToPoint((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 1.0;\n                    taskGraphics.drawImage(image, x, startPoint.y + adjustHeight - (this.parent.chartRowsModule.taskBarHeight * 0.7) / 2 +\n                        pixelToPoint(((this.parent.chartRowsModule.taskBarHeight * 0.7) - taskbar.taskbarTemplate.image[0].height) / 0.5), pixelToPoint(taskbar.taskbarTemplate.image[0].width), pixelToPoint(taskbar.taskbarTemplate.image[0].height - 2));\n                }\n            }\n            this.endPage = this.startPage = pageIndex;\n        }\n    };\n    return PdfGanttTaskbarCollection;\n}());\nexport { PdfGanttTaskbarCollection };\n"],"mappings":";AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,SAASO,MAAM,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,aAAa,EAAEC,UAAU,EAAEC,KAAK,EAAEC,eAAe,EAAEC,YAAY,EAAEC,eAAe,EAAEC,oBAAoB,EAAEC,gBAAgB,EAAEC,eAAe,EAAEC,YAAY,EAAEC,OAAO,EAAEC,SAAS,EAAEC,UAAU,EAAEC,sBAAsB,QAAQ,4BAA4B;AACzS,SAASC,YAAY,EAAEC,YAAY,QAAQ,eAAe;AAC1D,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD;AACA;AACA;AACA,IAAIC,yBAAyB,GAAG,aAAe,YAAY;EACvD,SAASA,yBAAyBA,CAACC,MAAM,EAAE;IACvC;IACA,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAC3B;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAG,CAAC,CAAC;IACvB;AACR;AACA;IACQ,IAAI,CAACC,cAAc,GAAG,CAAC,CAAC;IACxB,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACC,OAAO,GAAG,CAAC,CAAC;IACjB,IAAI,CAACP,MAAM,GAAGA,MAAM;EACxB;EACAD,yBAAyB,CAACzB,SAAS,CAACkC,GAAG,GAAG,YAAY;IAClD,OAAO,IAAIT,yBAAyB,CAAC,IAAI,CAACC,MAAM,CAAC;EACrD,CAAC;EACD;AACJ;AACA;AACA;AACA;EACID,yBAAyB,CAACzB,SAAS,CAACmC,WAAW,GAAG,UAAUC,IAAI,EAAE;IAC9D,IAAIC,OAAO,GAAGD,IAAI,CAACC,OAAO;IAC1B,IAAIC,KAAK,GAAGD,OAAO,CAACE,OAAO,CAACH,IAAI,CAAC;IACjC,IAAII,QAAQ,GAAG,IAAI;IACnB,IAAIF,KAAK,KAAKD,OAAO,CAACI,KAAK,GAAG,CAAC,EAAE;MAC7BD,QAAQ,GAAGH,OAAO,CAACH,GAAG,CAAC,CAAC;IAC5B,CAAC,MACI;MACDM,QAAQ,GAAGH,OAAO,CAACK,QAAQ,CAAC,CAAC,CAACJ,KAAK,GAAG,CAAC,CAAC;IAC5C;IACA,OAAOE,QAAQ;EACnB,CAAC;EACDf,yBAAyB,CAACzB,SAAS,CAAC2C,SAAS,GAAG,YAAY;IACxD,OAAS,IAAI,CAACjB,MAAM,CAACkB,eAAe,IAAI,IAAI,CAAClB,MAAM,CAACkB,eAAe,CAACC,MAAM,CAACC,WAAW,IAClF,IAAI,CAACpB,MAAM,CAACkB,eAAe,CAACC,MAAM,CAACC,WAAW,CAACC,kBAAkB,IACjE,IAAI,CAACrB,MAAM,CAACkB,eAAe,CAACC,MAAM,CAACC,WAAW,CAACC,kBAAkB,CAACC,YAAY,IAC9E,IAAI,CAACtB,MAAM,CAACuB,cAAc,CAACC,aAAa,GAAI,IAAI,GAAG,KAAK;EAChE,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI;EACAzB,yBAAyB,CAACzB,SAAS,CAACmD,WAAW,GAAG,UAAUf,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEC,SAAS,EAAEC,OAAO,EAAEC,SAAS,EAAE;IAClI,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,YAAY,GAAGvB,IAAI,CAACwB,QAAQ;IAChC,IAAIC,UAAU,GAAG,KAAK;IACtB,IAAIC,QAAQ,GAAG1B,IAAI,CAAC2B,aAAa,CAAC,CAAC;IACnC,IAAIC,MAAM,GAAGZ,UAAU,CAACa,CAAC,GAAGV,SAAS;IACrC;IACA,IAAIS,MAAM,GAAGF,QAAQ,CAACI,MAAM,EAAE;MAC1B9B,IAAI,GAAG,IAAI,CAACD,WAAW,CAACC,IAAI,CAAC;MAC7BA,IAAI,CAAC,cAAc,CAAC,GAAI,IAAI,CAACO,SAAS,CAAC,CAAC,GAAIpB,YAAY,CAAC8B,MAAM,CAACc,QAAQ,GAAGd,MAAM,CAACD,UAAU,CAAC,GAAGC,MAAM,CAACc,QAAQ,GAAGd,MAAM,CAACD,UAAU;MACnIO,YAAY,GAAGvB,IAAI,CAACwB,QAAQ;MAC5BR,UAAU,CAACa,CAAC,GAAG,CAAC;MAChB,IAAI,IAAI,CAACvC,MAAM,CAACkB,eAAe,CAACwB,KAAK,CAACC,YAAY,EAAE;QAChD,IAAI,CAAC3C,MAAM,CAACkB,eAAe,CAACwB,KAAK,CAACE,WAAW,CAACC,gBAAgB,CAACnC,IAAI,EAAEgB,UAAU,EAAEC,MAAM,CAAC;QACxFD,UAAU,CAACa,CAAC,GAAG3C,YAAY,CAAC,IAAI,CAACI,MAAM,CAACuB,cAAc,CAACuB,YAAY,GAAG,EAAE,GAAG,EAAE,CAAC;MAClF;MACAX,UAAU,GAAG,IAAI;MACjB,IAAID,QAAQ,GAAGxB,IAAI,CAACwB,QAAQ;MAC5B,IAAIa,GAAG,GAAG,IAAIlE,MAAM,CAAC,IAAIF,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;MACjD,IAAI+B,IAAI,CAAC,cAAc,CAAC,KAAK,IAAI,CAACV,MAAM,CAACgD,SAAS,KAAK,MAAM,IAAI,IAAI,CAAChD,MAAM,CAACgD,SAAS,KAAK,YAAY,CAAC,EAAE;QACtGd,QAAQ,CAACe,aAAa,CAACF,GAAG,EAAErB,UAAU,CAACwB,CAAC,EAAExB,UAAU,CAACa,CAAC,EAAE,IAAI,CAACtB,SAAS,CAAC,CAAC,IAAI,IAAI,CAACjB,MAAM,CAACuB,cAAc,CAAC4B,UAAU,KAAK,KAAK,GAAGzC,IAAI,CAAC,cAAc,CAAC,GAAG,GAAG,GAAGqB,SAAS,EAAEF,SAAS,CAAC;MACpL;IACJ;IACA,IAAI,CAACuB,aAAa,CAAC1C,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEE,OAAO,CAAC;IACtE;IACA,IAAIuB,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,EAAEpE,YAAY,CAACqE,OAAO,CAAC;IACxE,IAAIC,SAAS,GAAG,IAAI;IACpB,IAAIC,SAAS,GAAG,IAAI3E,aAAa,CAAC,IAAI,CAAC4E,iBAAiB,CAAC;IACzD,IAAIC,cAAc;IAClB,IAAIC,mBAAmB;IACvB,IAAIC,mBAAmB;IACvBF,cAAc,GAAG,CAAC7D,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,IAAIjC,OAAO,CAACgC,eAAe,CAACE,SAAS,IAAIlC,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACV,UAAU,IAAIxB,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACC,QAAQ,GAC/L,IAAIhF,eAAe,CAAC6C,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACV,UAAU,EAAExB,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACC,QAAQ,EAAEnC,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACA,SAAS,CAAC,GAC1JX,IAAI;IACVO,mBAAmB,GAAG,CAAC9D,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,IAAIjC,OAAO,CAACgC,eAAe,CAACE,SAAS,IAAIlC,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACR,SAAS,GACrJ,IAAI1E,aAAa,CAACgD,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACR,SAAS,CAAC,GAC9DC,SAAS;IACfI,mBAAmB,GAAG,CAAC/D,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,IAAIjC,OAAO,CAACgC,eAAe,CAACE,SAAS,IAAIlC,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACP,SAAS,GACrJ,IAAI5E,MAAM,CAACiD,OAAO,CAACgC,eAAe,CAACE,SAAS,CAACP,SAAS,CAAC,GACvDD,SAAS;IACf,IAAI,CAAC1D,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAAC,IACnF,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI,EAAE;MACtEA,IAAI,GAAG,IAAI,CAACrD,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI;IAC/E;IACA,IAAIc,aAAa;IACjB,IAAIC,kBAAkB;IACtB,IAAItC,OAAO,CAACuC,aAAa,CAACC,SAAS,CAACN,SAAS,CAACC,QAAQ,EAAE;MACpD,IAAIM,QAAQ,GAAG,IAAItF,eAAe,CAAC6C,OAAO,CAACuC,aAAa,CAACC,SAAS,CAACN,SAAS,CAACV,UAAU,EAAExB,OAAO,CAACuC,aAAa,CAACC,SAAS,CAACN,SAAS,CAACC,QAAQ,EAAEnC,OAAO,CAACuC,aAAa,CAACC,SAAS,CAACN,SAAS,CAACA,SAAS,CAAC;MACjMG,aAAa,GAAGI,QAAQ;IAC5B,CAAC,MACI;MACDJ,aAAa,GAAGd,IAAI;IACxB;IACA,IAAIvB,OAAO,CAACuC,aAAa,CAACC,SAAS,CAACN,SAAS,CAACR,SAAS,EAAE;MACrDY,kBAAkB,GAAG,IAAItF,aAAa,CAACgD,OAAO,CAACuC,aAAa,CAACC,SAAS,CAACN,SAAS,CAACR,SAAS,CAAC;IAC/F,CAAC,MACI;MACDY,kBAAkB,GAAGX,SAAS;IAClC;IACA,IAAIe,cAAc,GAAG,IAAIrF,eAAe,CAAC,CAAC;IAC1CqF,cAAc,CAACC,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;IAC1DF,cAAc,CAACG,SAAS,GAAGtF,gBAAgB,CAACuF,KAAK;IACjD,IAAIC,aAAa,GAAG,KAAK;IACzB,IAAIC,YAAY;IAChB,IAAI,CAAChF,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,IAAK,cAAc,CAACS,IAAI,CAAC,IAAI,CAACT,SAAS,CAAE,EAAE;MAC7E,IAAI,IAAI,CAACA,SAAS,KAAK,GAAG,IAAI,IAAI,CAACA,SAAS,KAAK,IAAI,EAAE;QACnDQ,YAAY,GAAG,IAAI,CAACE,KAAK;QACzBR,cAAc,CAACG,SAAS,GAAGtF,gBAAgB,CAAC4F,IAAI;MACpD;IACJ;IACA,IAAK,CAACnF,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,IAAK,WAAW,CAACS,IAAI,CAAC,IAAI,CAACT,SAAS,CAAE,IAAM,CAACxE,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAE,EAAE;MACnIc,aAAa,GAAG,IAAI;MACpBL,cAAc,CAACG,SAAS,GAAGtF,gBAAgB,CAAC4F,IAAI;IACpD;IACA,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,IAAIC,WAAW,GAAG,IAAItG,MAAM,CAACiD,OAAO,CAACsD,mBAAmB,CAAC;IACzD,IAAIC,aAAa,GAAG,IAAIvG,aAAa,CAACgD,OAAO,CAACwD,aAAa,CAAC;IAC5D,IAAIC,QAAQ,GAAGzD,OAAO,CAACgC,eAAe;IACtC,IAAI0B,gBAAgB,GAAG,KAAK;IAC5B,IAAI,CAAC1D,OAAO,CAAC2D,WAAW,EAAE;MACtB,IAAIC,YAAY,GAAG,IAAI7G,MAAM,CAACiD,OAAO,CAAC6D,eAAe,CAAC;MACtD,IAAIC,WAAW,GAAG,IAAI9G,aAAa,CAACgD,OAAO,CAAC+D,SAAS,CAAC;MACtD,IAAIC,qBAAqB,GAAG,IAAIjH,MAAM,CAACiD,OAAO,CAACiE,kBAAkB,CAAC;MAClE,IAAIC,oBAAoB,GAAG,IAAInH,MAAM,CAACiD,OAAO,CAACmE,iBAAiB,CAAC;MAChE,IAAIC,gBAAgB,GAAG,IAAIrH,MAAM,CAACiD,OAAO,CAACqE,eAAe,CAAC;MAC1D,IAAIC,eAAe,GAAG,IAAIvH,MAAM,CAACiD,OAAO,CAACuE,oBAAoB,CAAC;MAC9D,IAAIC,UAAU,GAAG,IAAIzH,MAAM,CAACiD,OAAO,CAACqE,eAAe,CAAC;MACpD,IAAII,eAAe,GAAG,IAAIzH,aAAa,CAACgD,OAAO,CAACqE,eAAe,CAAC;MAChE,IAAIK,SAAS,GAAG,IAAI3H,MAAM,CAACiD,OAAO,CAAC2E,mBAAmB,CAAC;MACvD,IAAIC,WAAW,GAAG,IAAI5H,aAAa,CAACgD,OAAO,CAAC6E,sBAAsB,CAAC;MACnE,IAAIC,gBAAgB,GAAG,IAAI9H,aAAa,CAACgD,OAAO,CAAC+E,qBAAqB,CAAC;MACvE,IAAIC,wBAAwB,GAAG,IAAIhI,aAAa,CAACgD,OAAO,CAACiF,mBAAmB,CAAC;MAC7E,IAAIC,mBAAmB,GAAG,IAAIlI,aAAa,CAACgD,OAAO,CAACuE,oBAAoB,CAAC;MACzE,IAAIY,aAAa,GAAG,IAAIpI,MAAM,CAACiD,OAAO,CAACoF,aAAa,CAAC;MACrD,IAAIC,eAAe,GAAG,IAAIrI,aAAa,CAACgD,OAAO,CAACoF,aAAa,CAAC;MAC9D,IAAIE,sBAAsB,GAAGxH,YAAY,CAAC,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,GAAG,IAAI,CAACW,MAAM,IAAI,GAAG,CAAC;MACtF,IAAI6E,uBAAuB,GAAGzH,YAAY,CAAC,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,GAAG,IAAI,CAACW,MAAM,IAAI,GAAG,CAAC;MACvF,IAAI8E,cAAc,GAAG,IAAI,CAACtH,MAAM,CAACuH,cAAc,GAAGF,uBAAuB,GAAGD,sBAAsB;MAClGlC,SAAS,GAAGxE,IAAI,CAACC,OAAO,CAACE,OAAO,CAACH,IAAI,CAAC;MACtC,IAAI8G,SAAS,GAAG1H,iBAAiB,CAAC,IAAI,CAAC2H,oBAAoB,CAAC,GAAG,IAAI,CAACD,SAAS,GAAG,IAAI,CAACC,oBAAoB;MACzG,IAAIC,OAAO,GAAG5H,iBAAiB,CAAC,IAAI,CAAC6H,iBAAiB,CAAC,GAAG,IAAI,CAACD,OAAO,GAAG,IAAI,CAACC,iBAAiB;MAC/F,IAAIC,WAAW,GAAG,EAAE;MACpB;MACA,IAAIjG,MAAM,CAAC6F,SAAS,IAAIA,SAAS,IAAIE,OAAO,IAAI/F,MAAM,CAAC+F,OAAO,EAAE;QAC5D,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;UACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;UAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;QAC5B;QACA,IAAI,CAAC,IAAI,CAACE,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;UAChE,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnB,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnB,IAAI,IAAI,CAACjH,SAAS,CAAC,CAAC,EAAE;YAClBgH,MAAM,GAAG,IAAItI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAIE,OAAO,CAACkD,KAAK,GAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAItG,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIjD,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,EAAE,IAAIzJ,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACrQsD,YAAY,CAACgB,aAAa,CAACgF,MAAM,EAAEvG,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAACkD,KAAK,EAAGpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YACpK0F,MAAM,GAAG,IAAIvI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAIE,OAAO,CAACkD,KAAM,EAAE,CAAC,CAAC,EAAE,IAAItG,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAIE,OAAO,CAACkD,KAAK,GAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIrG,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,CAAC;YACvR;YACAnG,YAAY,CAACgB,aAAa,CAACiF,MAAM,EAAExG,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAIE,OAAO,CAACkD,KAAK,GAAI,CAAC,EAAEtD,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAACkD,KAAK,GAAI,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAC9L,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;cAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;cACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;gBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;gBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;gBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;cACjO,CAAC,MACI;gBACD8F,UAAU,GAAG,CAAC;cAClB;cACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;YACrV;UACJ,CAAC,MACI;YACDyD,MAAM,GAAG,IAAItI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAItG,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIjD,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,EAAE,IAAIzJ,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzSsD,YAAY,CAACgB,aAAa,CAACgF,MAAM,EAAEvG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAC5L0F,MAAM,GAAG,IAAIvI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,IAAItG,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAGhC,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIrG,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,CAAC;YACvU;YACAnG,YAAY,CAACgB,aAAa,CAACiF,MAAM,EAAExG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAEtD,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAClO,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;cAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;cACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;gBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;gBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;gBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;cAC7O,CAAC,MACI;gBACD8F,UAAU,GAAG,CAAC;cAClB;cACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;YACjW;UACJ;QACJ,CAAC,MACI,IAAI,CAAC,IAAI,CAACuD,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,SAAS,EAAE;UACpE,IAAI,CAACU,mBAAmB,CAACzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE0F,cAAc,CAAC;QACvF,CAAC,MACI,IAAI,CAAC,IAAI,CAACS,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;UACrE,IAAI,CAACU,mBAAmB,CAACzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE0F,cAAc,CAAC;QACvF,CAAC,MACI;UACD,IAAIxF,OAAO,CAAC6G,aAAa,EAAE;YACvBnC,SAAS,CAACoC,SAAS,GAAGrJ,YAAY,CAACsJ,GAAG;YACtC,IAAI,IAAI,CAAC5H,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAAC6G,QAAQ,CAACtC,SAAS,EAAE,IAAI9H,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI9D,MAAM,CAAEoD,OAAO,CAACkD,KAAK,GAAItD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1T,CAAC,MACI;cACDP,YAAY,CAAC6G,QAAQ,CAACtC,SAAS,EAAE,IAAI9H,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI9D,MAAM,CAACkB,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAGtD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9V;YACAV,OAAO,CAAC5B,OAAO,CAAC6I,GAAG,CAAC,UAAUC,IAAI,EAAEpI,KAAK,EAAE;cACvC,IAAIoB,KAAK,CAACf,SAAS,CAAC,CAAC,EAAE;gBACnBgB,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG0B,IAAI,CAAChE,KAAK,EAAGpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBACjM,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;kBAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;kBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;oBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;oBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;oBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;kBAC9O,CAAC,MACI;oBACD8F,UAAU,GAAG,CAAC;kBAClB;kBACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAAChE,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;gBAClW;cACJ,CAAC,MACI;gBACDvC,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAAChE,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBACzN,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;kBAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;kBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;oBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;oBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;oBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;kBAC1P,CAAC,MACI;oBACD8F,UAAU,GAAG,CAAC;kBAClB;kBACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAAChE,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;gBAC9W;cACJ;YACJ,CAAC,CAAC;UACN,CAAC,MACI,IAAI,CAAC1C,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;YACtDjH,YAAY,CAACkH,IAAI,CAAC,CAAC;YACnB,IAAIC,IAAI,GAAG,IAAI5J,OAAO,CAAC,CAAC;YACxB4J,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC3B,IAAI,IAAI,CAACpI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,CAAC;YAC1H,CAAC,MACI;cACDrF,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,CAAC;YACtI;YACArF,YAAY,CAACsH,QAAQ,CAACrD,gBAAgB,EAAEK,eAAe,EAAE6C,IAAI,CAAC;YAC9DnH,YAAY,CAACuH,OAAO,CAAC,CAAC;YACtB,IAAIC,KAAK,GAAG,IAAIjK,OAAO,CAAC,CAAC;YACzBiK,KAAK,CAACJ,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC5BpH,YAAY,CAACkH,IAAI,CAAC,CAAC;YACnB,IAAI,IAAI,CAAClI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAI,IAAI,CAACoD,KAAM,EAAEtD,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,CAAC;YACzI,CAAC,MACI;cACDrF,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAAC,IAAI,CAACoF,KAAK,CAAC,EAAEtD,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,CAAC;YACjK;YACArF,YAAY,CAACsH,QAAQ,CAACrD,gBAAgB,EAAEK,eAAe,EAAEkD,KAAK,CAAC;YAC/DxH,YAAY,CAACuH,OAAO,CAAC,CAAC;YACtBlD,UAAU,CAACsC,SAAS,GAAGrJ,YAAY,CAACmK,KAAK;YACzC,IAAI,IAAI,CAACzI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAAC6G,QAAQ,CAACxC,UAAU,EAAE,IAAI5H,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,EAAE,IAAI5I,MAAM,CAAEoD,OAAO,CAACkD,KAAK,GAAItD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,CAAC;YACrP,CAAC,MACI;cACDrF,YAAY,CAAC6G,QAAQ,CAACxC,UAAU,EAAE,IAAI5H,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,EAAE,IAAI5I,MAAM,CAACkB,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAGtD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,CAAC;YACzR;UACJ,CAAC,MACI,IAAI,CAACxF,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAACoH,YAAY,EAAE;YACvDjH,YAAY,CAACkH,IAAI,CAAC,CAAC;YACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;YAClC,IAAI,IAAI,CAAC1I,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC+C,oBAAoB,EAAEY,gBAAgB,EAAElF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAACkD,KAAK,EAAGpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YACxM,CAAC,MACI;cACDP,YAAY,CAACgB,aAAa,CAAC+C,oBAAoB,EAAEY,gBAAgB,EAAElF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAChO;YACAP,YAAY,CAACuH,OAAO,CAAC,CAAC;YACtB,IAAI,IAAI,CAACvI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE6D,wBAAwB,EAAEpF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAAC8H,aAAa,EAAGhK,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,CAAC;YACrM,CAAC,MACI;cACDP,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE6D,wBAAwB,EAAEpF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAAC8H,aAAa,CAAC,EAAEhK,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,CAAC;YAC7N;UACJ,CAAC,MACI;YACD,IAAI,IAAI,CAACvB,SAAS,CAAC,CAAC,EAAE;cAClB,IAAInB,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,IAAIjE,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,EAAE;gBACxEpG,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAACkD,KAAK,EAAGpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAC3L,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAACkD,KAAK,EAAGpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBACvL,IAAI8F,UAAU,GAAG,KAAK,CAAC;gBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;kBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,GAAG,GAAG;kBACzD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;kBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAACxF,OAAO,CAACU,MAAM,GAAGV,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,IAAI,GAAG,EAAGV,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,GAAI,GAAG,EAAGlD,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,GAAI,GAAG,CAAC;gBACxR,CAAC,MACI;kBACD8F,UAAU,GAAG,CAAC;gBAClB;gBACA,IAAIxG,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAE;kBAC/B,IAAIc,aAAa,EAAE;oBACfC,YAAY,GAAG,IAAI,CAACE,KAAK;kBAC7B;kBACA/C,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxC,YAAY,EAAGlF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;gBACzQ;cACJ;YACJ,CAAC,MACI;cACD,IAAI1E,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,IAAIjE,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,EAAE;gBACxEpG,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cACnN,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBAC/M,IAAI8F,UAAU,GAAG,KAAK,CAAC;gBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;kBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;kBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;kBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,GAAG1H,YAAY,CAAC,CAACkC,OAAO,CAACU,MAAM,GAAGV,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,IAAI,GAAG,CAAC,EAAE5C,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;gBAChU,CAAC,MACI;kBACD8F,UAAU,GAAG,CAAC;gBAClB;gBACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;cAC1V;YACJ;UACJ;UACA,IAAI,IAAI,CAACuD,eAAe,IAAIjG,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAAC6G,aAAa,EAAE;YAC1E,IAAI7I,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,IAAIvI,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,EAAE;cACxE,IAAI,IAAI,CAAC9C,SAAS,CAAC,CAAC,EAAE;gBAClBgB,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAAC8H,aAAa,EAAGhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cACxM,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAAC8H,aAAa,CAAC,EAAEhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAChO;cACA,IAAI,CAAC1C,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACqE,aAAa,CAACC,SAAS,CAAC,IAAI,CAACxE,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,EAAE;gBAC/F,IAAI,IAAI,CAACA,SAAS,KAAK,GAAG,IAAI,IAAI,CAACA,SAAS,KAAK,IAAI,EAAE;kBACnDQ,YAAY,GAAG,IAAI,CAAC8E,aAAa;gBACrC;gBACA,IAAI/E,aAAa,EAAE;kBACfC,YAAY,GAAG,IAAI,CAACE,KAAK;gBAC7B;gBACA,IAAI,IAAI,CAAC/D,SAAS,CAAC,CAAC,EAAE;kBAClBgB,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAE1F,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxC,YAAY,EAAGlF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;gBAC5O,CAAC,MACI;kBACDvC,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAE1F,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;gBACpQ;cACJ;YACJ;UACJ,CAAC,MACI,IAAI1C,OAAO,CAAC6G,aAAa,EAAE;YAC5B7G,OAAO,CAAC5B,OAAO,CAAC6I,GAAG,CAAC,UAAUC,IAAI,EAAEpI,KAAK,EAAE;cACvC,IAAIoB,KAAK,CAACf,SAAS,CAAC,CAAC,EAAE;gBACnBgB,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG0B,IAAI,CAACY,aAAa,EAAGhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAClN,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAACY,aAAa,CAAC,EAAEhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAC1O;YACJ,CAAC,CAAC;UACN;QACJ;QACA,IAAI,CAACsH,WAAW,GAAG,IAAI;QACvB,IAAI,CAACxJ,SAAS,GAAG4E,SAAS;QAC1B,IAAI,CAAC3E,OAAO,GAAG2E,SAAS;MAC5B;MACA;MAAA,KACK,IAAIvD,MAAM,CAAC6F,SAAS,IAAIA,SAAS,IAAI7F,MAAM,CAAC+F,OAAO,IAAIF,SAAS,IAAKE,OAAO,IAAI/F,MAAM,CAAC+F,OAAQ,EAAE;QAClG,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;UACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;UAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;QAC5B;QACA,IAAI7C,KAAK,GAAG,IAAI,CAACA,KAAK;QACtB,IAAI+E,aAAa,GAAG,CAAC;QACrB,IAAIH,aAAa,GAAG,CAAC;QACrB,IAAII,kBAAkB,GAAG,CAAC;QAC1B,IAAI,CAAChF,KAAK,GAAG,IAAI,CAACA,KAAK,IAAIrD,MAAM,CAACsI,UAAU,IAAI,IAAI,CAAC9B,IAAI,GAAGvG,eAAe,CAAC,CAAC;QAC7EmI,aAAa,GAAIpI,MAAM,CAACsI,UAAU,IAAI,IAAI,CAAC9B,IAAI,GAAGvG,eAAe,CAAE;QACnEgI,aAAa,GAAIjI,MAAM,CAACsI,UAAU,IAAI,IAAI,CAAC9B,IAAI,GAAGvG,eAAe,CAAE;QACnE,IAAIoD,KAAK,GAAG+E,aAAa,EAAE;UACvBA,aAAa,GAAG/E,KAAK;QACzB;QACAgF,kBAAkB,GAAGD,aAAa;QAClC,IAAI,CAAC,IAAI,CAAChC,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;UAChE,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnB,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnB,IAAI,IAAI,CAACjH,SAAS,CAAC,CAAC,EAAE;YAClBgH,MAAM,GAAG,IAAItI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAImI,aAAa,GAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIrL,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIjD,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,EAAE,IAAIzJ,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACrQsD,YAAY,CAACgB,aAAa,CAACgF,MAAM,EAAEvG,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGyC,aAAa,EAAGnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YACpK0F,MAAM,GAAG,IAAIvI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAImI,aAAc,EAAE,CAAC,CAAC,EAAE,IAAIrL,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAImI,aAAa,GAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIpL,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,CAAC;YACvRnG,YAAY,CAACgB,aAAa,CAACiF,MAAM,EAAExG,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAImI,aAAa,GAAI,CAAC,EAAErI,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGyC,aAAa,GAAI,CAAC,EAAEnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAC9L,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;cAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;cACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;gBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;gBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;gBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;cACjO,CAAC,MACI;gBACD8F,UAAU,GAAG,CAAC;cAClB;cACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;YACrV;UACJ,CAAC,MACI;YACDyD,MAAM,GAAG,IAAItI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACmK,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIrL,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIjD,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,EAAE,IAAIzJ,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;YACzSsD,YAAY,CAACgB,aAAa,CAACgF,MAAM,EAAEvG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACmK,aAAa,CAAC,EAAEnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAC5L0F,MAAM,GAAG,IAAIvI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACmK,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIrL,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAGhC,YAAY,CAACmK,aAAa,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIpL,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,CAAC;YACvUnG,YAAY,CAACgB,aAAa,CAACiF,MAAM,EAAExG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACmK,aAAa,CAAC,GAAG,CAAC,EAAErI,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACmK,aAAa,CAAC,GAAG,CAAC,EAAEnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAClO,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;cAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;cACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;gBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;gBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;gBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;cAC7O,CAAC,MACI;gBACD8F,UAAU,GAAG,CAAC;cAClB;cACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAG0G,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;YACjW;UACJ;QACJ,CAAC,MACI,IAAI,CAAC,IAAI,CAACuD,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;UACrE,IAAI,CAACU,mBAAmB,CAACzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE0F,cAAc,CAAC;QACvF,CAAC,MACI,IAAI,CAACxF,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;UACtDjH,YAAY,CAACkH,IAAI,CAAC,CAAC;UACnB,IAAIC,IAAI,GAAG,IAAI5J,OAAO,CAAC,CAAC;UACxB4J,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAC3B,IAAI,IAAI,CAACpI,SAAS,CAAC,CAAC,EAAE;YAClBgB,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,CAAC;UAC1H,CAAC,MACI;YACDrF,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,CAAC;UACtI;UACArF,YAAY,CAACsH,QAAQ,CAACrD,gBAAgB,EAAEK,eAAe,EAAE6C,IAAI,CAAC;UAC9DnH,YAAY,CAACuH,OAAO,CAAC,CAAC;UACtBlD,UAAU,CAACsC,SAAS,GAAGrJ,YAAY,CAACmK,KAAK;UACzC,IAAI,IAAI,CAACzI,SAAS,CAAC,CAAC,EAAE;YAClBgB,YAAY,CAAC6G,QAAQ,CAACxC,UAAU,EAAE,IAAI5H,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,EAAE,IAAI5I,MAAM,CAAEqL,aAAa,GAAIrI,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,CAAC;UACrP,CAAC,MACI;YACDrF,YAAY,CAAC6G,QAAQ,CAACxC,UAAU,EAAE,IAAI5H,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,EAAE,IAAI5I,MAAM,CAACkB,YAAY,CAACmK,aAAa,CAAC,GAAGrI,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC,CAAC;UACzR;QACJ,CAAC,MACI,IAAI,CAACxF,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAACoH,YAAY,EAAE;UACvD,IAAI,IAAI,CAACjI,SAAS,CAAC,CAAC,EAAE;YAClBgB,YAAY,CAACgB,aAAa,CAAC+C,oBAAoB,EAAE,IAAI,EAAEtE,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGyC,aAAa,EAAGnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAC5L,CAAC,MACI;YACDP,YAAY,CAACgB,aAAa,CAAC+C,oBAAoB,EAAE,IAAI,EAAEtE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACmK,aAAa,CAAC,EAAEnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACpN;UACAP,YAAY,CAACkH,IAAI,CAAC,CAAC;UACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;UAClC,IAAI,IAAI,CAAC1I,SAAS,CAAC,CAAC,EAAE;YAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE2D,gBAAgB,EAAElF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGyC,aAAa,EAAGnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACxL,CAAC,MACI;YACDP,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE2D,gBAAgB,EAAElF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACmK,aAAa,CAAC,EAAEnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAChN;UACAP,YAAY,CAACuH,OAAO,CAAC,CAAC;UACtB,IAAI,IAAI,CAACvI,SAAS,CAAC,CAAC,EAAE;YAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE6D,wBAAwB,EAAEpF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGsC,aAAa,EAAGhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAChM,CAAC,MACI;YACDP,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE6D,wBAAwB,EAAEpF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACgK,aAAa,CAAC,EAAEhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACxN;UACAV,OAAO,CAAC8H,aAAa,GAAG9H,OAAO,CAAC8H,aAAa,GAAGA,aAAa;QACjE,CAAC,MACI,IAAI,CAAC,IAAI,CAAC7B,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;UACrE,IAAI,CAACU,mBAAmB,CAACzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE0F,cAAc,CAAC;QACvF,CAAC,MACI,IAAI,CAAC,IAAI,CAACS,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,SAAS,EAAE;UACpE,IAAI,CAACU,mBAAmB,CAACzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE0F,cAAc,CAAC;QACvF,CAAC,MACI;UACD,IAAIxF,OAAO,CAAC6G,aAAa,EAAE;YACvB,IAAIuB,WAAW,GAAG,CAAC;YACnB,IAAIC,oBAAoB,GAAG,IAAI;YAC/B,IAAIC,WAAW,GAAG,CAAC;YACnBtI,OAAO,CAAC5B,OAAO,CAAC6I,GAAG,CAAC,UAAUsB,IAAI,EAAE;cAChCD,WAAW,GAAGC,IAAI,CAAClC,IAAI,GAAGkC,IAAI,CAACrF,KAAK;YACxC,CAAC,CAAC;YACFwB,SAAS,CAACoC,SAAS,GAAGrJ,YAAY,CAACsJ,GAAG;YACtC,IAAI,IAAI,CAAC5H,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAAC6G,QAAQ,CAACtC,SAAS,EAAE,IAAI9H,MAAM,CAACgD,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI9D,MAAM,CAAE0L,WAAW,IAAK,IAAI,CAACjC,IAAI,GAAGvG,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC,EAAExB,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAClT,CAAC,MACI;cACDP,YAAY,CAAC6G,QAAQ,CAACtC,SAAS,EAAE,IAAI9H,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI9D,MAAM,CAACkB,YAAY,CAACwK,WAAW,CAAC,GAAGxK,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC,EAAExB,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtV;YACAV,OAAO,CAAC5B,OAAO,CAAC6I,GAAG,CAAC,UAAUC,IAAI,EAAEpI,KAAK,EAAE;cACvC,IAAIoB,KAAK,CAACf,SAAS,CAAC,CAAC,EAAE;gBACnBgB,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAIoH,IAAI,CAACb,IAAK,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG0B,IAAI,CAAChE,KAAK,EAAGpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBACnM,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;kBAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;kBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;oBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;oBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;oBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAIoH,IAAI,CAACb,IAAK,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGxF,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,EAAIlD,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAO,CAAC;kBACxN,CAAC,MACI;oBACD8F,UAAU,GAAG,CAAC;kBAClB;kBACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAIoH,IAAI,CAACb,IAAK,GAAGG,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG0B,IAAI,CAAChE,KAAK,EAAIlD,OAAO,CAACU,MAAM,EAAGgC,cAAc,CAAC,GAAG,EAAE;gBAC5U;cACJ,CAAC,MACI;gBACDvC,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACoJ,IAAI,CAACb,IAAI,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAAChE,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBACvO,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;kBAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;kBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;oBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;oBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;oBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACoJ,IAAI,CAACb,IAAI,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;kBACxQ,CAAC,MACI;oBACD8F,UAAU,GAAG,CAAC;kBAClB;kBACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,GAAGhC,YAAY,CAACoJ,IAAI,CAACb,IAAI,CAAC,GAAGG,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAAChE,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;gBAC5X;cACJ;cACA0F,WAAW,GAAGlB,IAAI,CAACb,IAAI,GAAGa,IAAI,CAAChE,KAAK;cACpC,IAAI+E,aAAa,IAAIG,WAAW,EAAE;gBAC9BlI,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC7E,KAAK,GAAG,CAAC;gBACjEhD,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC1B,IAAI,GAAG,CAAC;cACpE,CAAC,MACI;gBACD,IAAI4B,aAAa,IAAKG,WAAW,GAAGlB,IAAI,CAAChE,KAAM,EAAE;kBAC7ChD,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC1B,IAAI,GAAG,CAAC;gBACpE,CAAC,MACI;kBACDnG,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC1B,IAAI,GAAK6B,kBAAkB,GAAGhB,IAAI,CAACb,IAAM;gBACrG;gBACA,IAAI4B,aAAa,IAAKG,WAAY,EAAE;kBAChClI,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC7E,KAAK,GAAG,CAAC;gBACrE,CAAC,MACI;kBACD,IAAImF,oBAAoB,EAAE;oBACtBnI,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC7E,KAAK,GAAGkF,WAAW,GAAGH,aAAa;oBAC3FI,oBAAoB,GAAG,KAAK;kBAChC;gBACJ;cACJ;cACAH,kBAAkB,GAAGA,kBAAkB,GAAGhB,IAAI,CAAChE,KAAK,GAAGgE,IAAI,CAACb,IAAI;YACpE,CAAC,CAAC;UACN,CAAC,MACI;YACD,IAAI,IAAI,CAAClH,SAAS,CAAC,CAAC,EAAE;cAClB,IAAInB,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,IAAIjE,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,EAAE;gBACxEpG,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGyC,aAAa,EAAGnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAC3L,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGyC,aAAa,EAAGnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBACvL,IAAI,CAAC1C,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;kBACnD,IAAIA,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;kBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAAC,CAACkC,OAAO,CAACU,MAAM,GAAGV,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,IAAI,GAAG,CAAC,EAAGV,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,GAAG,GAAG,EAAIlD,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,GAAG,GAAI,CAAC;gBACtS;gBACA,IAAI,CAAC1C,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,EAAE;kBACnD,IAAIuE,UAAU,GAAG,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,GAAGvG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,GAAG,CAAC;kBAC/G/C,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG0G,UAAU,EAAG5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;gBACvR;cACJ;YACJ,CAAC,MACI;cACD,IAAI1E,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,IAAIjE,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,EAAE;gBACxEpG,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACmK,aAAa,CAAC,EAAEnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cACnN,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACmK,aAAa,CAAC,EAAEnK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBAC/M,IAAI8F,UAAU,GAAG,KAAK,CAAC;gBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;kBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;kBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;kBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,CAAC,GAAG1H,YAAY,CAAC,CAACkC,OAAO,CAACU,MAAM,GAAGV,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,IAAI,GAAG,CAAC,EAAE5C,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;gBAChU,CAAC,MACI;kBACD8F,UAAU,GAAG,CAAC;gBAClB;gBACA,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,EAAE;kBACnD,IAAI,CAACwG,UAAU,GAAG3K,YAAY,CAAC,IAAI,CAACuI,IAAI,CAAC;kBACzC,IAAIqC,QAAQ,GAAG,IAAI,CAACC,QAAQ,CAAC3I,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEpC,MAAM,CAACc,QAAQ,GAAG,IAAI,CAAC8H,UAAU,EAAE,EAAE,CAAC;kBAClGtI,YAAY,CAACwG,UAAU,CAAC+B,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAEhH,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG0G,UAAU,EAAG5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;kBACxR,IAAI,CAAC1E,iBAAiB,CAAC0K,QAAQ,CAACI,SAAS,CAAC,EAAE;oBACxC,IAAI,CAACC,YAAY,GAAGL,QAAQ,CAACI,SAAS;oBACtC,IAAI,CAACL,UAAU,GAAG5I,MAAM,CAACc,QAAQ;oBACjC;kBACJ;gBACJ;cACJ;YACJ;YACA,IAAIX,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAAC6G,aAAa,EAAE;cAClD,IAAImC,mBAAmB,GAAG,CAAC;cAC3B,IAAI,IAAI,CAAClB,aAAa,IAAIG,aAAa,EAAE;gBACrCe,mBAAmB,GAAG,IAAI,CAAClB,aAAa;cAC5C,CAAC,MACI;gBACDkB,mBAAmB,GAAGf,aAAa;cACvC;cACA,IAAIjK,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,IAAIvI,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,EAAE;gBACxE,IAAI,IAAI,CAAC9C,SAAS,CAAC,CAAC,EAAE;kBAClBgB,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGwD,mBAAmB,EAAGlL,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBACtM,CAAC,MACI;kBACDP,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkL,mBAAmB,CAAC,EAAElL,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;gBAC9N;cACJ;cACA,IAAI,CAACoH,aAAa,IAAIkB,mBAAmB;cACzC,IAAI,IAAI,CAAC9K,MAAM,CAACqE,aAAa,CAACC,SAAS,IAAI,CAACxE,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,EAAE;gBAC3EQ,YAAY,GAAGgG,mBAAmB;gBAClC,IAAIjG,aAAa,EAAE;kBACfC,YAAY,GAAGiF,aAAa;gBAChC;gBACA,IAAI,CAACQ,UAAU,GAAG,IAAI,CAACpC,IAAI;gBAC3B,IAAIrI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,EAAE;kBAClD,IAAIgH,QAAQ,GAAG,IAAI,CAACN,QAAQ,CAAC,IAAI,CAACnG,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAElI,MAAM,CAACc,QAAQ,GAAG,IAAI,CAAC8H,UAAU,EAAE,EAAE,CAAC;kBAC9FtI,YAAY,CAACwG,UAAU,CAACsC,QAAQ,CAACL,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAExG,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAGF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;kBAC/P,IAAI,CAAC1E,iBAAiB,CAACiL,QAAQ,CAACH,SAAS,CAAC,EAAE;oBACxC,IAAI,CAACC,YAAY,GAAGE,QAAQ,CAACH,SAAS;oBACtC,IAAI,CAACL,UAAU,GAAG5I,MAAM,CAACc,QAAQ;oBACjC;kBACJ;gBACJ,CAAC,MACI;kBACD,IAAI,IAAI,CAACxB,SAAS,CAAC,CAAC,EAAE;oBAClBgB,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAE1F,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,EAAGF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAIxC,YAAY,EAAGlF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;kBAC9O,CAAC,MACI;oBACDvC,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAE1F,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAGF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;kBACtQ;gBACJ;cACJ;YACJ;UACJ;UACA,IAAI1C,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAAC6G,aAAa,EAAE;YAClD,IAAImC,mBAAmB,GAAG,CAAC;YAC3B,IAAI,IAAI,CAAClB,aAAa,IAAIG,aAAa,EAAE;cACrCe,mBAAmB,GAAG,IAAI,CAAClB,aAAa;YAC5C,CAAC,MACI;cACDkB,mBAAmB,GAAGf,aAAa;YACvC;YACA,IAAIjK,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,IAAIvI,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,EAAE;cACxE,IAAI,IAAI,CAAC9C,SAAS,CAAC,CAAC,EAAE;gBAClBgB,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAGwD,mBAAmB,EAAGlL,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cACtM,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkL,mBAAmB,CAAC,EAAElL,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAC9N;YACJ;YACA,IAAI,CAACoH,aAAa,IAAIkB,mBAAmB;YACzC,IAAI,IAAI,CAAC9K,MAAM,CAACqE,aAAa,CAACC,SAAS,IAAI,CAACxE,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,EAAE;cAC3EQ,YAAY,GAAGgG,mBAAmB;cAClC,IAAIjG,aAAa,EAAE;gBACfC,YAAY,GAAG,IAAI,CAACE,KAAK;cAC7B;cACA,IAAI,IAAI,CAAC/D,SAAS,CAAC,CAAC,EAAE;gBAClBgB,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAE1F,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,EAAGF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAIxC,YAAY,EAAGlF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;cAC9O,CAAC,MACI;gBACDvC,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAE1F,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAGF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;cACtQ;YACJ;UACJ,CAAC,MACI,IAAI1C,OAAO,CAAC6G,aAAa,EAAE;YAC5B7G,OAAO,CAAC5B,OAAO,CAAC6I,GAAG,CAAC,UAAUC,IAAI,EAAEpI,KAAK,EAAE;cACvC,IAAIoB,KAAK,CAACf,SAAS,CAAC,CAAC,EAAE;gBACnBgB,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,IAAIlB,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG0B,IAAI,CAACY,aAAa,EAAGhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAClN,CAAC,MACI;gBACDP,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACoC,KAAK,CAACmG,IAAI,GAAGa,IAAI,CAACb,IAAI,GAAGvG,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAACY,aAAa,CAAC,EAAEhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cAC1O;cACA,IAAIR,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC7E,KAAK,KAAK,CAAC,EAAE;gBACrEhD,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACD,aAAa,GAAG,CAAC;cAC7E,CAAC,MACI;gBACD,IAAIZ,IAAI,CAAChE,KAAK,GAAGhD,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC7E,KAAK,GAAGgE,IAAI,CAACY,aAAa,IAAIZ,IAAI,CAAChE,KAAK,KAAKhD,KAAK,CAAC7B,iBAAiB,CAACS,KAAK,CAAC,CAACoE,KAAK,EAAE;kBACxJhD,KAAK,CAAC7B,iBAAiB,CAACmK,QAAQ,CAAC1J,KAAK,CAACiJ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACD,aAAa,GAAGZ,IAAI,CAACY,aAAa,IAAIZ,IAAI,CAAChE,KAAK,GAAGhD,KAAK,CAAC7B,iBAAiB,CAACS,KAAK,CAAC,CAACoE,KAAK,CAAC;gBACpJ;cACJ;YACJ,CAAC,CAAC;UACN;QACJ;QACA,IAAI,CAACmD,IAAI,GAAG,CAAC;QACb,IAAI,CAAC2B,WAAW,GAAG,KAAK;QACxB,IAAI,CAACxJ,SAAS,GAAG4E,SAAS;MAC9B;MACA;MAAA,KACK,IAAIwC,OAAO,IAAI/F,MAAM,CAAC+F,OAAO,IAAI/F,MAAM,CAAC6F,SAAS,IAAIE,OAAO,IAAI,CAAC,IAAI,CAACoC,WAAW,EAAE;QACpF,IAAI,CAAC,IAAI,CAACjC,YAAY,EAAE;UACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;UAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;QAC5B;QACA,IAAI,CAAC,IAAI,CAACE,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;UAChE,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnB,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnBD,MAAM,GAAG,IAAItI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,GAAGvI,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAItG,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIxJ,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,EAAE,IAAIzJ,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UACjRsD,YAAY,CAACgB,aAAa,CAACgF,MAAM,EAAEvG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAC7K0F,MAAM,GAAG,IAAIvI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,GAAGvI,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,IAAItG,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,GAAGvI,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIrG,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,CAAC;UAC/SnG,YAAY,CAACgB,aAAa,CAACiF,MAAM,EAAExG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,GAAGvI,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAEtD,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAG,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACnN,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;YAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;YACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;cACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;cACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;cAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;YAC9N,CAAC,MACI;cACD8F,UAAU,GAAG,CAAC;YAClB;YACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,GAAGG,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;UAClV;QACJ,CAAC,MACI,IAAI,CAAC1C,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;UACtD,IAAIO,KAAK,GAAG,IAAIjK,OAAO,CAAC,CAAC;UACzBiK,KAAK,CAACJ,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UAC9BpH,YAAY,CAACkH,IAAI,CAAC,CAAC,CAAC,CAAC;UACrB,IAAI6B,UAAU,GAAGtJ,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;UAC/D,IAAI8C,QAAQ,GAAGrL,YAAY,CAACkC,OAAO,CAACoJ,SAAS,CAAC,GAAGF,UAAU,GAAG,CAAC;UAC/D,IAAIG,KAAK,GAAGzJ,UAAU,CAACa,CAAC,GAAG+E,cAAc;UACzCrF,YAAY,CAAC6G,QAAQ,CAACxC,UAAU,EAAE0E,UAAU,EAAEG,KAAK,EAAEF,QAAQ,EAAEE,KAAK,CAAC,CAAC,CAAC;UACvElJ,YAAY,CAACqH,kBAAkB,CAAC2B,QAAQ,EAAEE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;UACtDlJ,YAAY,CAACsH,QAAQ,CAACrD,gBAAgB,EAAEK,eAAe,EAAEkD,KAAK,CAAC,CAAC,CAAC;UACjExH,YAAY,CAACuH,OAAO,CAAC,CAAC,CAAC,CAAC;UACxBlD,UAAU,CAACsC,SAAS,GAAGrJ,YAAY,CAACmK,KAAK,CAAC,CAAC;QAC/C,CAAC,MACI,IAAI,CAAC5H,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAACoH,YAAY,EAAE;UACvDjH,YAAY,CAACgB,aAAa,CAAC+C,oBAAoB,EAAE,IAAI,EAAEtE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAG,GAAG,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAC9LP,YAAY,CAACkH,IAAI,CAAC,CAAC;UACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;UAClC1H,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE2D,gBAAgB,EAAElF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAG,GAAG,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAC1LP,YAAY,CAACuH,OAAO,CAAC,CAAC;UACtBvH,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE6D,wBAAwB,EAAEpF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAG,GAAG,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAAC8H,aAAa,CAAC,EAAEhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;QAC9M,CAAC,MACI,IAAI,CAAC,IAAI,CAACuF,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,SAAS,EAAE;UACpE,IAAI,CAACU,mBAAmB,CAACzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE0F,cAAc,CAAC;QACvF,CAAC,MACI,IAAIxF,OAAO,CAAC6G,aAAa,EAAE;UAC5BnC,SAAS,CAACoC,SAAS,GAAGrJ,YAAY,CAACsJ,GAAG;UACtC5G,YAAY,CAAC6G,QAAQ,CAACtC,SAAS,EAAE,IAAI9H,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI9D,MAAM,CAACkB,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,GAAGtD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;UAChTV,OAAO,CAAC3B,iBAAiB,CAAC4I,GAAG,CAAC,UAAUC,IAAI,EAAEpI,KAAK,EAAE;YACjD,IAAIoI,IAAI,CAAChE,KAAK,KAAK,CAAC,EAAE;cAClB/C,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,GAAGa,IAAI,CAACb,IAAI,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAAChE,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;cACzM,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;gBAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;gBACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;kBACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;kBACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;kBAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,GAAGa,IAAI,CAACb,IAAI,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;gBAC1O,CAAC,MACI;kBACD8F,UAAU,GAAG,CAAC;gBAClB;gBACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,GAAGa,IAAI,CAACb,IAAI,CAAC,GAAGG,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAAChE,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,EAAE;cAC9V;YACJ;UACJ,CAAC,CAAC;QACN,CAAC,MACI;UACDvC,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAChM,IAAI,CAAC1C,iBAAiB,CAAC,IAAI,CAAC+K,YAAY,CAAC,EAAE;YACvC,IAAIO,MAAM,GAAG,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACI,YAAY,EAAE/I,OAAO,CAACkD,KAAK,GAAGlD,OAAO,CAACqG,IAAI,EAAE,EAAE,CAAC;YAC/ElG,YAAY,CAACwG,UAAU,CAAC2C,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAEhH,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,EAAGzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG8D,MAAM,CAACC,UAAU,CAACrG,KAAK,EAAEpF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;UAC3P;QACJ;QACA,IAAI,IAAI,CAACuD,eAAe,IAAIjG,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAAC6G,aAAa,EAAE;UAC1E,IAAI7I,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,IAAIvI,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,EAAE;YACxE9B,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAAC8H,aAAa,CAAC,EAAEhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACjN;UACA,IAAI,CAAC1C,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,EAAE;YACpCQ,YAAY,GAAG,IAAI,CAAC8E,aAAa;YACjC,IAAI/E,aAAa,EAAE;cACfC,YAAY,GAAG,IAAI,CAACE,KAAK;YAC7B;YACA,IAAIlF,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,EAAE;cAClD,IAAIjE,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,EAAE;gBAClD,IAAI,CAACjE,iBAAiB,CAAC,IAAI,CAAC+K,YAAY,CAAC,EAAE;kBACvC,IAAIS,QAAQ,GAAG,IAAI,CAACb,QAAQ,CAAC,IAAI,CAACI,YAAY,EAAElJ,MAAM,CAACc,QAAQ,GAAG,IAAI,CAAC8H,UAAU,EAAE,EAAE,CAAC;kBACtFtI,YAAY,CAACwG,UAAU,CAAC6C,QAAQ,CAACZ,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAEtH,IAAI,EAAEG,SAAS,EAAEC,SAAS,EAAE/B,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,CAAC,EAAGzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;gBAC/N;cACJ;YACJ;YACA,IAAI,CAAC1E,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,EAAE;cACpCQ,YAAY,GAAG,IAAI,CAAC8E,aAAa;cACjC,IAAI/E,aAAa,EAAE;gBACfC,YAAY,GAAG,IAAI,CAACE,KAAK;cAC7B;cACA/C,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAExG,IAAI,EAAEG,SAAS,EAAEC,SAAS,EAAE/B,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,CAAC,EAAGzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;YAClO;UACJ;QACJ,CAAC,MACI,IAAI1C,OAAO,CAAC6G,aAAa,EAAE;UAC5B7G,OAAO,CAAC3B,iBAAiB,CAAC4I,GAAG,CAAC,UAAUC,IAAI,EAAEpI,KAAK,EAAE;YACjDqB,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,GAAGa,IAAI,CAACb,IAAI,CAAC,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACoJ,IAAI,CAACY,aAAa,CAAC,EAAEhK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAC1N,CAAC,CAAC;QACN;QACA,IAAI,CAACsH,WAAW,GAAG,IAAI;QACvB,IAAI,CAACvJ,OAAO,GAAG2E,SAAS;MAC5B;MACA;MACA;MAAA,KACK,IAAIsC,SAAS,GAAG7F,MAAM,CAAC6F,SAAS,IAAIE,OAAO,GAAG/F,MAAM,CAAC+F,OAAO,EAAE;QAC/D,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;UACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;UAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;QAC5B;QACA,IAAI,CAAC,IAAI,CAACE,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,UAAU,EAAE;UAChE,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnB,IAAIC,MAAM,GAAG,KAAK,CAAC;UACnBD,MAAM,GAAG,IAAItI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,GAAGvI,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIvL,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIxJ,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,EAAE,IAAIzJ,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;UAC/QsD,YAAY,CAACgB,aAAa,CAACgF,MAAM,EAAEvG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACjL0F,MAAM,GAAG,IAAIvI,sBAAsB,CAAC,IAAIjB,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,GAAGvI,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIvL,MAAM,CAACgD,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAGvI,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,IAAItL,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,IAAIA,QAAQ,CAACmD,OAAO,CAACsG,uBAAuB,CAAC,CAAC;UACjTnG,YAAY,CAACgB,aAAa,CAACiF,MAAM,EAAExG,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,GAAGvI,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,GAAG,CAAC,EAAEvI,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,GAAG,CAAC,EAAErK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAC3N,IAAI+C,QAAQ,CAACxB,KAAK,IAAIwB,QAAQ,CAAC8C,KAAK,EAAE;YAClC,IAAIC,UAAU,GAAG,KAAK,CAAC;YACvB,IAAI,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;cACnDC,UAAU,GAAGxG,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;cACnD,IAAIqD,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;cAClEtG,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,CAAC;YAC9N,CAAC,MACI;cACD8F,UAAU,GAAG,CAAC;YAClB;YACA,CAACxI,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,GAAG9B,YAAY,CAACwG,UAAU,CAAC3G,OAAO,CAACgC,eAAe,CAACC,KAAK,EAAEJ,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,GAAG,GAAG,CAAC,GAAGG,UAAU,EAAE5G,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkC,OAAO,CAACkD,KAAK,CAAC,EAAEpF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC,GAAG,CAAC;UACjV;QACJ,CAAC,MACI,IAAI,CAAC,IAAI,CAACuD,eAAe,IAAI,IAAI,CAACC,iBAAiB,KAAK,SAAS,EAAE;UACpE,IAAI,CAACU,mBAAmB,CAACzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE0F,cAAc,CAAC;QACvF,CAAC,MACI,IAAI,CAACxF,OAAO,CAACmH,cAAc,IAAI,CAACnH,OAAO,CAACoH,YAAY,EAAE;UACvDjH,YAAY,CAACgB,aAAa,CAAC+C,oBAAoB,EAAE,IAAI,EAAEtE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACrMP,YAAY,CAACkH,IAAI,CAAC,CAAC;UACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;UAClC1H,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE2D,gBAAgB,EAAElF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACjMP,YAAY,CAACuH,OAAO,CAAC,CAAC;UACtB,IAAIsB,mBAAmB,GAAG,CAAC;UAC3B,IAAI,IAAI,CAAClB,aAAa,IAAIjI,MAAM,CAACsI,UAAU,EAAE;YACzCa,mBAAmB,GAAG,IAAI,CAAClB,aAAa;UAC5C,CAAC,MACI;YACDkB,mBAAmB,GAAGnJ,MAAM,CAACsI,UAAU;UAC3C;UACA,IAAInK,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,IAAIvI,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,EAAE;YACxE9B,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkL,mBAAmB,CAAC,EAAElL,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UAC/M;UACA,IAAI,CAACoH,aAAa,IAAIkB,mBAAmB;UACzC7I,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE6D,wBAAwB,EAAEpF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkL,mBAAmB,CAAC,EAAElL,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;QAC/M,CAAC,MACI,IAAI,CAACV,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;UACtD5C,UAAU,CAACsC,SAAS,GAAGrJ,YAAY,CAACmK,KAAK;UACzCzH,YAAY,CAAC6G,QAAQ,CAACxC,UAAU,EAAE5E,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAEvI,UAAU,CAACa,CAAC,GAAG+E,cAAc,CAAC;QACrL,CAAC,MACI;UACDrF,YAAY,CAACgB,aAAa,CAACyC,YAAY,EAAEE,WAAW,EAAElE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;UACpM,IAAI,CAAC1C,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACC,KAAK,CAAC,EAAE;YACnD,IAAI,CAACjE,iBAAiB,CAAC,IAAI,CAAC+K,YAAY,CAAC,EAAE;cACvC,IAAIU,QAAQ,GAAG,IAAI,CAACd,QAAQ,CAAC,IAAI,CAACI,YAAY,EAAElJ,MAAM,CAACc,QAAQ,GAAG,IAAI,CAAC8H,UAAU,EAAE,EAAE,CAAC;cACtFtI,YAAY,CAACwG,UAAU,CAAC8C,QAAQ,CAACb,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAEhH,cAAc,EAAEE,mBAAmB,EAAED,mBAAmB,EAAElC,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAGzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;YAC3Q;UACJ;UACA,IAAI,IAAI,CAACuD,eAAe,IAAI,CAACjG,OAAO,CAACoH,YAAY,EAAE;YAC/C,IAAI4B,mBAAmB,GAAG,CAAC;YAC3B,IAAI,IAAI,CAAClB,aAAa,IAAIjI,MAAM,CAACsI,UAAU,EAAE;cACzCa,mBAAmB,GAAG,IAAI,CAAClB,aAAa;YAC5C,CAAC,MACI;cACDkB,mBAAmB,GAAGnJ,MAAM,CAACsI,UAAU;YAC3C;YACA,IAAInK,iBAAiB,CAACyF,QAAQ,CAAC8C,KAAK,CAAC,IAAIvI,iBAAiB,CAACyF,QAAQ,CAACxB,KAAK,CAAC,EAAE;cACxE9B,YAAY,CAACgB,aAAa,CAACgE,aAAa,EAAEE,eAAe,EAAEzF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAG,GAAG,EAAEzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE1H,YAAY,CAACkL,mBAAmB,CAAC,EAAElL,YAAY,CAACkC,OAAO,CAACU,MAAM,CAAC,CAAC;YAC/M;YACA,IAAI,CAACoH,aAAa,IAAIkB,mBAAmB;YACzC,IAAI,CAAChL,iBAAiB,CAAC,IAAI,CAACwE,SAAS,CAAC,EAAE;cACpCQ,YAAY,GAAGgG,mBAAmB;cAClC,IAAIjG,aAAa,EAAE;gBACfC,YAAY,GAAG,IAAI,CAACE,KAAK;cAC7B;cACA/C,YAAY,CAACwG,UAAU,CAAC,IAAI,CAACnE,SAAS,CAACuF,QAAQ,CAAC,CAAC,EAAE1F,aAAa,EAAEX,SAAS,EAAEY,kBAAkB,EAAE1C,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,CAAC,EAAGzG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAG1H,YAAY,CAACkF,YAAY,CAAC,EAAElF,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,EAAEgC,cAAc,CAAC;YACpP;UACJ;QACJ;QACA,IAAI,CAACsF,WAAW,GAAG,KAAK;QACxB,IAAI,CAAC9E,KAAK,IAAIrD,MAAM,CAACsI,UAAU;MACnC;MACA,IAAI,IAAI,CAACjK,MAAM,CAACuH,cAAc,IAAIzF,OAAO,CAAC0J,iBAAiB,IAAI1J,OAAO,CAAC2J,eAAe,EAAE;QACpF,IAAI9J,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAAC0J,iBAAiB,IAAI1J,OAAO,CAAC2J,eAAe,IAAI9J,MAAM,CAAC+F,OAAO,EAAE;UAC5F,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;YACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;YAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;UAC5B;UACA,IAAI,IAAI,CAAC7H,MAAM,CAACuH,cAAc,IAAIzF,OAAO,CAAC0J,iBAAiB,IAAI1J,OAAO,CAAC2J,eAAe,EAAE;YACpF,IAAI,IAAI,CAACxK,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,IAAIpB,OAAO,CAAC4J,YAAY,GAAG9J,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAGV,OAAO,CAAC6J,aAAa,EAAG/L,YAAY,CAAC,IAAI,CAACK,cAAc,CAAC,CAAC;YACvP,CAAC,MACI;cACDgC,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAAC4J,YAAY,GAAG9J,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAE5C,YAAY,CAACkC,OAAO,CAAC6J,aAAa,CAAC,EAAE/L,YAAY,CAAC,IAAI,CAACK,cAAc,CAAC,CAAC;YAC/Q;UACJ;UACA,IAAI,CAAC2L,mBAAmB,GAAG,IAAI;UAC/B,IAAI,CAACtL,SAAS,GAAG4E,SAAS;UAC1B,IAAI,CAAC3E,OAAO,GAAG2E,SAAS;QAC5B,CAAC,MACI,IAAIvD,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAAC0J,iBAAiB,IAAI7J,MAAM,CAAC+F,OAAO,IAAI5F,OAAO,CAAC0J,iBAAiB,IAAK1J,OAAO,CAAC2J,eAAe,IAAI9J,MAAM,CAAC+F,OAAQ,EAAE;UAClJ,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;YACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;YAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;UAC5B;UACA,IAAIgE,WAAW,GAAG,CAAC;UACnB,IAAI7G,KAAK,GAAG,IAAI,CAAC2G,aAAa;UAC9BE,WAAW,GAAIlK,MAAM,CAACsI,UAAU,IAAInI,OAAO,CAAC4J,YAAY,GAAG9J,eAAe,CAAE;UAC5E,IAAIoD,KAAK,GAAG6G,WAAW,EAAE;YACrBA,WAAW,GAAG7G,KAAK;UACvB;UACA,IAAI,IAAI,CAAChF,MAAM,CAACuH,cAAc,IAAIzF,OAAO,CAAC0J,iBAAiB,IAAI1J,OAAO,CAAC2J,eAAe,EAAE;YACpF,IAAI,IAAI,CAACxK,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,IAAIpB,OAAO,CAAC4J,YAAY,GAAG9J,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAGqJ,WAAW,EAAGjM,YAAY,CAAC,IAAI,CAACK,cAAc,CAAC,CAAC;YAC7O,CAAC,MACI;cACDgC,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAAC4J,YAAY,GAAG9J,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAE5C,YAAY,CAACiM,WAAW,CAAC,EAAEjM,YAAY,CAAC,IAAI,CAACK,cAAc,CAAC,CAAC;YACrQ;UACJ;UACA6B,OAAO,CAAC6J,aAAa,GAAG7J,OAAO,CAAC6J,aAAa,GAAGE,WAAW;UAC3D,IAAI,CAACH,YAAY,GAAG,CAAC;UACrB,IAAI,CAACE,mBAAmB,GAAG,KAAK;UAChC,IAAI,CAACtL,SAAS,GAAG4E,SAAS;QAC9B,CAAC,MACI,IAAIpD,OAAO,CAAC2J,eAAe,IAAI9J,MAAM,CAAC+F,OAAO,IAAI/F,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAAC2J,eAAe,IAAI,CAAC,IAAI,CAACG,mBAAmB,EAAE;UAC5H,IAAI,IAAI,CAAC5L,MAAM,CAACuH,cAAc,IAAIzF,OAAO,CAAC0J,iBAAiB,IAAI1J,OAAO,CAAC2J,eAAe,EAAE;YACpF,IAAI,IAAI,CAACxK,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,IAAIpB,OAAO,CAAC4J,YAAY,GAAG,GAAG,CAAC,EAAEhK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAGV,OAAO,CAAC6J,aAAa,EAAG/L,YAAY,CAAC,IAAI,CAACK,cAAc,CAAC,CAAC;YACrO,CAAC,MACI;cACDgC,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAAC4J,YAAY,GAAG,GAAG,CAAC,EAAEhK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAE5C,YAAY,CAACkC,OAAO,CAAC6J,aAAa,CAAC,EAAE/L,YAAY,CAAC,IAAI,CAACK,cAAc,CAAC,CAAC;YAC7P;UACJ;UACA,IAAI,CAAC2L,mBAAmB,GAAG,IAAI;UAC/B,IAAI,CAACrL,OAAO,GAAG2E,SAAS;QAC5B,CAAC,MACI,IAAIpD,OAAO,CAAC0J,iBAAiB,GAAG7J,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAAC2J,eAAe,GAAG9J,MAAM,CAAC+F,OAAO,EAAE;UAC/F,IAAI,IAAI,CAAC1H,MAAM,CAACuH,cAAc,IAAIzF,OAAO,CAAC0J,iBAAiB,IAAI1J,OAAO,CAAC2J,eAAe,EAAE;YACpF,IAAI,IAAI,CAACxK,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,GAAIpB,OAAO,CAAC4J,YAAa,GAAG,GAAG,EAAEhK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAGb,MAAM,CAACsI,UAAU,EAAGrK,YAAY,CAACkC,OAAO,CAAC7B,cAAc,CAAC,CAAC;YACpO,CAAC,MACI;cACDgC,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE3D,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAAC4J,YAAY,CAAC,GAAG,GAAG,EAAEhK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG1H,YAAY,CAACkC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAC,EAAE5C,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAACkC,OAAO,CAAC7B,cAAc,CAAC,CAAC;YAC5P;UACJ;UACA,IAAI,CAAC2L,mBAAmB,GAAG,KAAK;UAChC,IAAI,CAACD,aAAa,IAAIhK,MAAM,CAACsI,UAAU;QAC3C;MACJ;MACA,IAAI,CAAC,IAAI,CAAChB,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;QAC9C,IAAIvH,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAACgK,aAAa,IAAIhK,OAAO,CAACiK,WAAW,IAAIpK,MAAM,CAAC+F,OAAO,EAAE;UACpF,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;YACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;YAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;UAC5B;UACA,IAAI,CAAC/F,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;YACjD,IAAI,IAAI,CAACjI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC6C,qBAAqB,EAAE,IAAI,EAAEpE,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAG,IAAI,CAAC4D,SAAS,EAAGtL,YAAY,CAAC,EAAE,CAAC,CAAC;YAC3L,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC6C,qBAAqB,EAAE,IAAI,EAAEpE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAAC,IAAI,CAACsL,SAAS,CAAC,EAAEtL,YAAY,CAAC,EAAE,CAAC,CAAC;YACnN;YACAqC,YAAY,CAACkH,IAAI,CAAC,CAAC;YACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;YAClC,IAAI,IAAI,CAAC1I,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAEyD,WAAW,EAAEhF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAG,IAAI,CAAC4D,SAAS,EAAGtL,YAAY,CAAC,EAAE,CAAC,CAAC;YACjL,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAEyD,WAAW,EAAEhF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAAC,IAAI,CAACsL,SAAS,CAAC,EAAEtL,YAAY,CAAC,EAAE,CAAC,CAAC;YACzM;YACAqC,YAAY,CAACuH,OAAO,CAAC,CAAC;YACtB,IAAI,IAAI,CAACvI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE+D,mBAAmB,EAAEtF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAGxF,OAAO,CAAC8H,aAAa,EAAGhK,YAAY,CAAC,EAAE,CAAC,CAAC;YAChM,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE+D,mBAAmB,EAAEtF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACkC,OAAO,CAAC8H,aAAa,CAAC,EAAEhK,YAAY,CAAC,EAAE,CAAC,CAAC;YACxN;UACJ;UACA,IAAI,CAACqM,mBAAmB,GAAG,IAAI;UAC/B,IAAI,CAAC3L,SAAS,GAAG4E,SAAS;UAC1B,IAAI,CAAC3E,OAAO,GAAG2E,SAAS;QAC5B,CAAC,MACI,IAAIvD,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAACgK,aAAa,IAAInK,MAAM,CAAC+F,OAAO,IAAI5F,OAAO,CAACgK,aAAa,IAAKhK,OAAO,CAACiK,WAAW,IAAIpK,MAAM,CAAC+F,OAAQ,EAAE;UACtI,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;YACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;YAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;UAC5B;UACA,IAAIgE,WAAW,GAAG,CAAC;UACnB,IAAIjC,aAAa,GAAG,CAAC;UACrBiC,WAAW,GAAIlK,MAAM,CAACsI,UAAU,IAAI,IAAI,CAAC+B,QAAQ,GAAGpK,eAAe,CAAE;UACrEgI,aAAa,GAAIjI,MAAM,CAACsI,UAAU,IAAI,IAAI,CAAC+B,QAAQ,GAAGpK,eAAe,CAAE;UACvE,IAAI,CAACE,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;YACjD,IAAI,IAAI,CAACjI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC6C,qBAAqB,EAAE,IAAI,EAAEpE,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAGuE,WAAW,EAAGjM,YAAY,CAAC,EAAE,CAAC,CAAC;YACxL,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC6C,qBAAqB,EAAE,IAAI,EAAEpE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACiM,WAAW,CAAC,EAAEjM,YAAY,CAAC,EAAE,CAAC,CAAC;YAChN;YACAqC,YAAY,CAACkH,IAAI,CAAC,CAAC;YACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;YAClC,IAAI,IAAI,CAAC1I,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAEyD,WAAW,EAAEhF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAGuE,WAAW,EAAGjM,YAAY,CAAC,EAAE,CAAC,CAAC;YAC9K,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAEyD,WAAW,EAAEhF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACiM,WAAW,CAAC,EAAEjM,YAAY,CAAC,EAAE,CAAC,CAAC;YACtM;YACAqC,YAAY,CAACuH,OAAO,CAAC,CAAC;YACtB,IAAI,IAAI,CAACvI,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE+D,mBAAmB,EAAEtF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAGxF,OAAO,CAAC8H,aAAa,EAAGhK,YAAY,CAAC,EAAE,CAAC,CAAC;YAChM,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE+D,mBAAmB,EAAEtF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACgK,aAAa,CAAC,EAAEhK,YAAY,CAAC,EAAE,CAAC,CAAC;YAChN;YACAkC,OAAO,CAACoJ,SAAS,GAAGpJ,OAAO,CAACoJ,SAAS,GAAGW,WAAW;YACnD/J,OAAO,CAAC8H,aAAa,GAAG9H,OAAO,CAAC8H,aAAa,GAAGA,aAAa;UACjE;UACA,IAAI,CAACoC,QAAQ,GAAG,CAAC;UACjB,IAAI,CAACC,mBAAmB,GAAG,KAAK;UAChC,IAAI,CAAC3L,SAAS,GAAG4E,SAAS;QAC9B,CAAC,MACI,IAAIpD,OAAO,CAACiK,WAAW,IAAIpK,MAAM,CAAC+F,OAAO,IAAI/F,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAACiK,WAAW,IAAI,CAAC,IAAI,CAACE,mBAAmB,EAAE;UACpH,IAAI,CAAC,IAAI,CAACpE,YAAY,EAAE;YACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;YAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;UAC5B,CAAC,MACI,IAAI,CAAC/F,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;YACtDjH,YAAY,CAACgB,aAAa,CAAC6C,qBAAqB,EAAE,IAAI,EAAEpE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAG,GAAG,CAAC,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACkC,OAAO,CAACoJ,SAAS,CAAC,EAAEtL,YAAY,CAAC,EAAE,CAAC,CAAC;YAChMqC,YAAY,CAACkH,IAAI,CAAC,CAAC;YACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;YAClC1H,YAAY,CAACgB,aAAa,CAACyD,WAAW,EAAEhF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAG,GAAG,CAAC,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACkC,OAAO,CAACoJ,SAAS,CAAC,EAAEtL,YAAY,CAAC,EAAE,CAAC,CAAC;YAChLqC,YAAY,CAACuH,OAAO,CAAC,CAAC;YACtBvH,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE+D,mBAAmB,EAAEtF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAG,GAAG,CAAC,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACkC,OAAO,CAAC8H,aAAa,CAAC,EAAEhK,YAAY,CAAC,EAAE,CAAC,CAAC;UACtM;UACA,IAAI,CAACqM,mBAAmB,GAAG,IAAI;UAC/B,IAAI,CAAC1L,OAAO,GAAG2E,SAAS;QAC5B,CAAC,MACI,IAAIpD,OAAO,CAACgK,aAAa,GAAGnK,MAAM,CAAC6F,SAAS,IAAI1F,OAAO,CAACiK,WAAW,GAAGpK,MAAM,CAAC+F,OAAO,EAAE;UACvF,IAAI,CAAC,IAAI,CAACG,YAAY,EAAE;YACpB,IAAI,CAACC,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;YAC9C,IAAI,CAACmG,YAAY,GAAG,IAAI;UAC5B;UACA,IAAI,CAAC/F,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;YACjD,IAAI4B,mBAAmB,GAAG,CAAC;YAC3B,IAAI,IAAI,CAAClB,aAAa,IAAIjI,MAAM,CAACsI,UAAU,EAAE;cACzCa,mBAAmB,GAAG,IAAI,CAAClB,aAAa;YAC5C,CAAC,MACI;cACDkB,mBAAmB,GAAGnJ,MAAM,CAACsI,UAAU;YAC3C;YACA,IAAI,IAAI,CAAChJ,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE+D,mBAAmB,EAAEtF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAG,GAAG,CAAC,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAGwD,mBAAmB,EAAGlL,YAAY,CAAC,EAAE,CAAC,CAAC;YAC5K,CAAC,MACI;cACD,IAAIkC,OAAO,CAAC8H,aAAa,KAAK,CAAC,EAAE;gBAC7B3H,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAE+D,mBAAmB,EAAEtF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,GAAG,GAAG,CAAC,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAACkL,mBAAmB,CAAC,EAAElL,YAAY,CAAC,EAAE,CAAC,CAAC;cACpM;YACJ;YACA,IAAI,CAACgK,aAAa,IAAIkB,mBAAmB;YACzC,IAAI,IAAI,CAAC7J,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC6C,qBAAqB,EAAE,IAAI,EAAEpE,UAAU,CAACwB,CAAC,GAAI,IAAI,CAAC8I,QAAS,GAAG,GAAG,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAG3F,MAAM,CAACsI,UAAU,EAAGrK,YAAY,CAAC,EAAE,CAAC,CAAC;YAC5K,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC6C,qBAAqB,EAAE,IAAI,EAAEpE,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,CAAC,GAAG,GAAG,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAAC,EAAE,CAAC,CAAC;YACpM;YACAqC,YAAY,CAACkH,IAAI,CAAC,CAAC;YACnBlH,YAAY,CAAC0H,eAAe,CAAC,IAAI,CAAC;YAClC,IAAI,IAAI,CAAC1I,SAAS,CAAC,CAAC,EAAE;cAClBgB,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAEyD,WAAW,EAAEhF,UAAU,CAACwB,CAAC,IAAI,IAAI,CAAC8I,QAAQ,GAAGpK,eAAe,CAAC,GAAG,GAAG,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAG3F,MAAM,CAACsI,UAAU,EAAGrK,YAAY,CAAC,EAAE,CAAC,CAAC;YACpL,CAAC,MACI;cACDqC,YAAY,CAACgB,aAAa,CAAC,IAAI,EAAEyD,WAAW,EAAEhF,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACoM,QAAQ,CAAC,GAAG,GAAG,EAAEtK,UAAU,CAACa,CAAC,GAAG+E,cAAc,GAAG,EAAE,EAAE1H,YAAY,CAAC+B,MAAM,CAACsI,UAAU,CAAC,EAAErK,YAAY,CAAC,EAAE,CAAC,CAAC;YAC1L;YACAqC,YAAY,CAACuH,OAAO,CAAC,CAAC;UAC1B;UACA,IAAI,CAACyC,mBAAmB,GAAG,KAAK;UAChC,IAAI,CAACf,SAAS,IAAIvJ,MAAM,CAACsI,UAAU;QACvC;MACJ;MACA,IAAI,CAACnK,iBAAiB,CAACgC,OAAO,CAACoK,UAAU,CAAC,IAAIpK,OAAO,CAACoK,UAAU,CAAC9N,MAAM,GAAG,CAAC,EAAE;QACzE0D,OAAO,CAACoK,UAAU,CAACnD,GAAG,CAAC,UAAUoD,KAAK,EAAEvL,KAAK,EAAE;UAC3C,IAAIwL,UAAU,GAAGpK,KAAK,CAAChC,MAAM,CAACqM,oBAAoB,CAACC,iBAAiB,CAACH,KAAK,CAACI,IAAI,EAAE,IAAI,CAAC;UACtF,IAAI5K,MAAM,CAAC6F,SAAS,IAAI4E,UAAU,IAAIA,UAAU,IAAIzK,MAAM,CAAC+F,OAAO,EAAE;YAChE,IAAI8E,SAAS,GAAGxK,KAAK,CAAChC,MAAM,CAACyM,eAAe,CAACC,gBAAgB,CAACP,KAAK,CAACI,IAAI,CAAC;YACzE,IAAI,CAACzM,iBAAiB,CAACqM,KAAK,CAAC5D,MAAM,CAAC,EAAE;cAClC,IAAIF,KAAK,GAAG,IAAI5I,SAAS,CAAC0M,KAAK,CAAC5D,MAAM,CAAC;cACvC,IAAIvG,KAAK,CAACf,SAAS,CAAC,CAAC,EAAE;gBACnBgB,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,IAAIsJ,SAAS,GAAG5K,eAAe,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAEM,WAAW,EAAEA,WAAW,CAAC;gBAC/I3F,YAAY,CAACwG,UAAU,CAAC0D,KAAK,CAACQ,IAAI,EAAEtJ,IAAI,EAAE,IAAI,EAAE3D,UAAU,CAACkN,KAAK,EAAElL,UAAU,CAACwB,CAAC,IAAIsJ,SAAS,GAAG5K,eAAe,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGgG,WAAW,EAAElG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE,IAAI,CAAC;cACjL,CAAC,MACI;gBACDrF,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAE3G,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC4M,SAAS,GAAG5K,eAAe,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEF,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAEM,WAAW,EAAEA,WAAW,CAAC;gBAC3J3F,YAAY,CAACwG,UAAU,CAAC0D,KAAK,CAACQ,IAAI,EAAEtJ,IAAI,EAAE,IAAI,EAAE3D,UAAU,CAACkN,KAAK,EAAElL,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC4M,SAAS,GAAG5K,eAAe,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGgG,WAAW,EAAElG,UAAU,CAACa,CAAC,GAAG+E,cAAc,EAAE,IAAI,CAAC;cAC7L;YACJ;UACJ;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,MACI;MACD,IAAI,CAACuF,aAAa,CAACnM,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEE,OAAO,EAAE,KAAK,CAAC;MAC7E,IAAI,IAAI,CAAC9B,MAAM,CAACuH,cAAc,IAAIzF,OAAO,CAAC0J,iBAAiB,IAAI1J,OAAO,CAAC2J,eAAe,EAAE;QACpF,IAAI,CAACoB,aAAa,CAACnM,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEE,OAAO,EAAE,IAAI,CAAC;MAChF;IACJ;IACA,IAAI,CAACgL,cAAc,CAACpM,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,CAAC;IAC9D,OAAOO,UAAU;EACrB,CAAC;EACD;EACA;AACJ;AACA;AACA;AACA;EACIpC,yBAAyB,CAACzB,SAAS,CAACyO,UAAU,GAAG,UAAU7I,UAAU,EAAE;IACnE,IAAIb,IAAI;IACR,IAAIa,UAAU,IAAIA,UAAU,CAAC8I,KAAK,KAAK9I,UAAU,CAAC8I,KAAK,CAAC/I,QAAQ,IAAIC,UAAU,CAAC8I,KAAK,CAAChJ,SAAS,IAC1FE,UAAU,CAAC8I,KAAK,CAAC1J,UAAU,CAAC,EAAE;MAC9B,IAAIW,QAAQ,GAAGC,UAAU,CAAC8I,KAAK,CAAC/I,QAAQ,GAAGC,UAAU,CAAC8I,KAAK,CAAC/I,QAAQ,GAAG,CAAC;MACxE,IAAIgJ,eAAe,GAAG/I,UAAU,CAAC8I,KAAK,CAAC1J,UAAU;MACjD,IAAIA,UAAU,GAAGY,UAAU,CAAC8I,KAAK,CAAC1J,UAAU,GACxC,IAAI,CAACtD,MAAM,CAACkB,eAAe,CAACC,MAAM,CAAC,eAAe,CAAC,CAAC8L,eAAe,CAAC,GAAG,IAAI,CAAC3J,UAAU;MAC1F,IAAI4J,cAAc,GAAGhJ,UAAU,CAAC8I,KAAK,CAAChJ,SAAS;MAC/C,IAAIA,SAAS,GAAGE,UAAU,CAAC8I,KAAK,CAAChJ,SAAS,GACtC,IAAI,CAAChE,MAAM,CAACkB,eAAe,CAACC,MAAM,CAAC,cAAc,CAAC,CAAC+L,cAAc,CAAC,GAAGhO,YAAY,CAACqE,OAAO;MAC7FF,IAAI,GAAG,IAAIpE,eAAe,CAACqE,UAAU,EAAEW,QAAQ,EAAED,SAAS,CAAC;IAC/D;IACA,OAAOX,IAAI;EACf,CAAC;EACD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACItD,yBAAyB,CAACzB,SAAS,CAACwO,cAAc,GAAG,UAAUpM,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE;IACtG,IAAIuG,IAAI;IACR,IAAIjG,QAAQ,GAAGxB,IAAI,CAACwB,QAAQ;IAC5B,IAAI,CAACpC,iBAAiB,CAAC,IAAI,CAACO,cAAc,CAAC0D,KAAK,CAAC,EAAE;MAC/C,IAAI,IAAI,CAAC1D,cAAc,CAAC8M,gBAAgB,EAAE;QACtChF,IAAI,GAAG,IAAI,CAAC9H,cAAc,CAAC8H,IAAI;MACnC,CAAC,MACI;QACD,IAAI,IAAI,CAAClH,SAAS,CAAC,CAAC,EAAE;UAClBkH,IAAI,GAAI,IAAI,CAAC9H,cAAc,CAAC8H,IAAK;QACrC,CAAC,MACI;UACDA,IAAI,GAAGvI,YAAY,CAAC,IAAI,CAACS,cAAc,CAAC8H,IAAI,CAAC;QACjD;MACJ;MACA,IAAIiF,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI,IAAI,CAACnM,SAAS,CAAC,CAAC,EAAE;QAClBmM,UAAU,GAAGjF,IAAI,GAAIvG,eAAgB,GAAGF,UAAU,CAACwB,CAAC;MACxD,CAAC,MACI;QACDkK,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;MACpE;MACA,IAAIvB,MAAM,CAACD,UAAU,IAAIyG,IAAI,IAAIA,IAAI,GAAGxG,MAAM,CAACc,QAAQ,IACnD,CAAC3C,iBAAiB,CAAC,IAAI,CAACO,cAAc,CAAC0D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC1D,cAAc,CAACyJ,WAAW,EAAE;QACnF,IAAIsB,MAAM,GAAG,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACpK,cAAc,CAAC0D,KAAK,EAAEpC,MAAM,CAACc,QAAQ,GAAG0F,IAAI,EAAE,EAAE,CAAC;QACjF,IAAI9E,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,CAAC;QAClD,IAAIK,cAAc,GAAG,KAAK,CAAC;QAC3B,IAAIO,UAAU,GAAG,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU;QAChF,IAAI,CAACpE,iBAAiB,CAACoE,UAAU,CAAC,IAAI,CAACpE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC,KAAK,CAAClN,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC/I,QAAQ,CAAC,IACrH,CAACnE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAChJ,SAAS,CAAC,IACjD,CAAClE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC1J,UAAU,CAAC,CAAC,EAAE;UAClDK,cAAc,GAAG,IAAI,CAACoJ,UAAU,CAAC7I,UAAU,CAAC;QAChD;QACA,IAAI,CAACpE,iBAAiB,CAAC6D,cAAc,CAAC,EAAE;UACpCN,IAAI,GAAGM,cAAc;QACzB;QACA,IAAI0J,OAAO,GAAG;UAAElF,IAAI,EAAE,CAAC;UAAEmF,KAAK,EAAE,CAAC;UAAEC,GAAG,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;QACtD,IAAI,CAAC1N,iBAAiB,CAACoE,UAAU,CAAC,IAAI,CAACpE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC,IACtE,CAAClN,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAACK,OAAO,CAAC,EAAE;UAC9CA,OAAO,GAAGnJ,UAAU,CAAC8I,KAAK,CAACK,OAAO;QACtC;QACA,IAAI,CAACvN,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAAC,IACnF,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI,EAAE;UACtEA,IAAI,GAAG,IAAI,CAACrD,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI;QAC/E;QACA,IAAIoK,YAAY,GAAG,CAAC7N,YAAY,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,CAAC,GAAGuJ,MAAM,CAACC,UAAU,CAAC7I,MAAM,IAAI,CAAC;QACvF,IAAIkL,KAAK,GAAG,IAAIhP,MAAM,CAAC0O,UAAU,GAAGC,OAAO,CAAClF,IAAI,EAAEzG,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAGJ,OAAO,CAACE,GAAG,CAAC;QAC5F,IAAII,IAAI,GAAG,IAAI3O,KAAK,CAACoM,MAAM,CAACC,UAAU,CAACrG,KAAK,IAAIqI,OAAO,CAAClF,IAAI,GAAGkF,OAAO,CAACC,KAAK,CAAC,EAAElC,MAAM,CAACC,UAAU,CAAC7I,MAAM,IAAI6K,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;QACzI,IAAII,WAAW,GAAG,IAAI7O,UAAU,CAAC2O,KAAK,EAAEC,IAAI,CAAC;QAC7C,IAAIE,WAAW,GAAG,IAAI1O,eAAe,CAAC,CAAC;QACvC0O,WAAW,CAAClJ,SAAS,GAAGtF,gBAAgB,CAACuF,KAAK;QAC9CiJ,WAAW,CAACpJ,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;QACvD,IAAI0G,MAAM,CAACC,UAAU,CAACrG,KAAK,GAAG,CAAC,EAAE;UAC7B,IAAIxB,SAAS,GAAG,IAAI;UACpB,IAAIC,SAAS,GAAG,IAAI3E,aAAa,CAAC,IAAI,CAACgP,UAAU,CAAC;UAClD;UACA5L,QAAQ,CAACuG,UAAU,CAAC2C,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAEtH,IAAI,EAAEG,SAAS,EAAEC,SAAS,EAAEmK,WAAW,CAAC1K,CAAC,EAAE0K,WAAW,CAACrL,CAAC,EAAE6I,MAAM,CAACC,UAAU,CAACrG,KAAK,EAAEoG,MAAM,CAACC,UAAU,CAAC7I,MAAM,EAAEqL,WAAW,CAAC;UACnK,IAAIzC,MAAM,CAACR,SAAS,KAAK,IAAI,EAAE;YAC3B,IAAI,CAACvK,cAAc,CAAC0D,KAAK,GAAGqH,MAAM,CAACR,SAAS;YAC5C,IAAI,CAACvK,cAAc,CAAC8H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;YAC1C,IAAI,CAACpC,cAAc,CAAC8M,gBAAgB,GAAG,IAAI;UAC/C,CAAC,MACI;YACD,IAAI,CAAC9M,cAAc,CAACyJ,WAAW,GAAG,IAAI;UAC1C;QACJ,CAAC,MACI;UACD,IAAI,CAACzJ,cAAc,CAAC8H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;QAC9C;MACJ;IACJ,CAAC,MACI;MACD,IAAI,CAAC3C,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAAC,EAAE;QACzD,IAAI,CAAC2F,yBAAyB,GAAG,CAAC;QAClC,IAAI,CAACC,yBAAyB,GAAG,CAAC;QAClC,KAAK,IAAIhQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACoG,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAACjK,MAAM,EAAEH,CAAC,EAAE,EAAE;UACjE,IAAI,CAACiQ,mBAAmB,CAACxN,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE,IAAI,CAACyC,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAACpK,CAAC,CAAC,CAAC;UAC3G,IAAI,IAAI,CAACoG,aAAa,CAAC0J,UAAU,CAAChK,KAAK,EAAE;YACrC,IAAIA,KAAK,GAAG,IAAI,CAACM,aAAa,CAAC0J,UAAU,CAAChK,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;YAC1D,IAAIpK,KAAK,EAAE;cACP,IAAI,CAAC1D,cAAc,CAACyJ,WAAW,GAAG,KAAK;cACvC,IAAI,CAACsE,mBAAmB,CAAC1N,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEmC,KAAK,CAAC9F,CAAC,CAAC,CAAC;YACjF;UACJ;QACJ;MACJ,CAAC,MACI,IAAI,IAAI,CAACoG,aAAa,CAAC0J,UAAU,CAAChK,KAAK,EAAE;QAC1C,IAAI,CAACqK,mBAAmB,CAAC1N,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE,IAAI,CAACyC,aAAa,CAAC0J,UAAU,CAAChK,KAAK,CAAC;MAC5G;IACJ;EACJ,CAAC;EACDhE,yBAAyB,CAACzB,SAAS,CAAC4P,mBAAmB,GAAG,UAAUxN,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEyM,UAAU,EAAE;IACvH,IAAIlG,IAAI;IACR,IAAIjG,QAAQ,GAAGxB,IAAI,CAACwB,QAAQ;IAC5B,IAAI0L,WAAW;IACf,IAAI,CAAC9N,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAC,IAAI,CAACjO,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAAC,EAAE;MAC9G,IAAI,IAAI,CAAChE,aAAa,CAAC8I,gBAAgB,EAAE;QACrChF,IAAI,GAAG,IAAI,CAAC9H,cAAc,CAAC8H,IAAI;MACnC,CAAC,MACI;QACD,IAAI,IAAI,CAAClH,SAAS,CAAC,CAAC,EAAE;UAClB,IAAI,IAAI,CAACoD,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAACjK,MAAM,GAAG,CAAC,EAAE;YAChD+J,IAAI,GAAG,IAAI,CAAC9H,cAAc,CAAC8H,IAAI,GAAG,CAAC,IAAI,CAAC8F,yBAAyB;YACjE,IAAI,CAACD,yBAAyB,GAAGK,UAAU,CAACrJ,KAAK;UACrD,CAAC,MACI;YACDmD,IAAI,GAAI,IAAI,CAAC9H,cAAc,CAAC8H,IAAK;UACrC;QACJ,CAAC,MACI;UACD,IAAIpE,KAAK,GAAG,KAAK,CAAC;UAClB,IAAI,CAACjE,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAChK,KAAK,CAAC,EAAE;YACzDA,KAAK,GAAG,IAAI,CAACM,aAAa,CAAC0J,UAAU,CAAChK,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;UAC1D;UACA,IAAI,IAAI,CAAC9J,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAACjK,MAAM,GAAG,CAAC,IAAI2F,KAAK,CAAC3F,MAAM,GAAG,CAAC,EAAE;YACpE+J,IAAI,GAAGvI,YAAY,CAAC,IAAI,CAACS,cAAc,CAAC8H,IAAI,CAAC,GAAG,IAAI,CAAC8F,yBAAyB;YAC9E,IAAI,CAACD,yBAAyB,GAAGK,UAAU,CAACrJ,KAAK;UACrD,CAAC,MACI,IAAI,IAAI,CAACX,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAACjK,MAAM,GAAG,CAAC,EAAE;YACrD+J,IAAI,GAAGvI,YAAY,CAAC,IAAI,CAACS,cAAc,CAAC8H,IAAI,CAAC,GAAG,IAAI,CAAC6F,yBAAyB;YAC9E,IAAI,CAACA,yBAAyB,GAAGK,UAAU,CAACrJ,KAAK;UACrD,CAAC,MACI;YACDmD,IAAI,GAAGvI,YAAY,CAAC,IAAI,CAACS,cAAc,CAAC8H,IAAI,CAAC;UACjD;QACJ;MACJ;MACA,IAAIiF,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI,IAAI,CAACnM,SAAS,CAAC,CAAC,EAAE;QAClBmM,UAAU,GAAGjF,IAAI,GAAIvG,eAAgB,GAAGF,UAAU,CAACwB,CAAC;MACxD,CAAC,MACI;QACDkK,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;MACpE;MACA,IAAIvB,MAAM,CAACD,UAAU,IAAIyG,IAAI,IAAIA,IAAI,GAAGxG,MAAM,CAACc,QAAQ,IACnD,CAAC3C,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC1N,cAAc,CAACyJ,WAAW,EAAE;QACvF,IAAIsB,MAAM,GAAG,IAAIpM,KAAK,CAACqP,UAAU,CAACrJ,KAAK,EAAEqJ,UAAU,CAAC7L,MAAM,CAAC;QAC3D,IAAIiL,YAAY,GAAG,CAAC7N,YAAY,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,CAAC,GAAGuJ,MAAM,CAAC5I,MAAM,IAAI,CAAC;QAC5E,IAAIkL,KAAK,GAAG,IAAIhP,MAAM,CAAC0O,UAAU,EAAE1L,UAAU,CAACa,CAAC,GAAGkL,YAAY,CAAC;QAC/D,IAAIE,IAAI,GAAG,IAAI3O,KAAK,CAACoM,MAAM,CAACpG,KAAK,EAAEoG,MAAM,CAAC5I,MAAM,CAAC;QACjDoL,WAAW,GAAG,IAAI7O,UAAU,CAAC2O,KAAK,EAAEC,IAAI,CAAC;QACzC,IAAItF,KAAK,GAAG,IAAI5I,SAAS,CAAC4O,UAAU,CAAC9F,MAAM,CAAC;QAC5C,IAAI6C,MAAM,CAACpG,KAAK,GAAG,CAAC,EAAE;UAClB9C,QAAQ,CAACsG,SAAS,CAACH,KAAK,EAAEuF,WAAW,CAAC1K,CAAC,EAAE0K,WAAW,CAACrL,CAAC,EAAE6I,MAAM,CAACpG,KAAK,EAAEoG,MAAM,CAAC5I,MAAM,CAAC;UACpF,IAAI,IAAI,CAAC6B,aAAa,CAAC0J,UAAU,CAAChK,KAAK,KAAK,IAAI,EAAE;YAC9C,IAAI,CAAC1D,cAAc,CAAC8M,gBAAgB,GAAG,IAAI;UAC/C,CAAC,MACI;YACD,IAAIrN,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAChK,KAAK,CAAC,EAAE;cACxD,IAAI,CAAC1D,cAAc,CAACyJ,WAAW,GAAG,IAAI;YAC1C;UACJ;QACJ,CAAC,MACI;UACD,IAAI,CAACzJ,cAAc,CAAC8H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;QAC9C;MACJ;IACJ;EACJ,CAAC;EACD1C,yBAAyB,CAACzB,SAAS,CAAC8P,mBAAmB,GAAG,UAAU1N,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE0M,WAAW,EAAE;IACxH,IAAInG,IAAI;IACR,IAAIjG,QAAQ,GAAGxB,IAAI,CAACwB,QAAQ;IAC5B,IAAI,CAACpC,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAChK,KAAK,CAAC,EAAE;MACzD,IAAI,IAAI,CAACM,aAAa,CAAC8I,gBAAgB,EAAE;QACrChF,IAAI,GAAG,IAAI,CAAC9H,cAAc,CAAC8H,IAAI;MACnC,CAAC,MACI;QACD,IAAI,IAAI,CAAClH,SAAS,CAAC,CAAC,EAAE;UAClB,IAAI,IAAI,CAACoD,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,EAAE;YACrC,IAAI,IAAI,CAAChE,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAACjK,MAAM,GAAG,CAAC,EAAE;cAChD+J,IAAI,GAAG,IAAI,CAAC9H,cAAc,CAAC8H,IAAI,GAAG,IAAI,CAAC6F,yBAAyB,GAAG,IAAI,CAACC,yBAAyB;cACjG,IAAI,CAACnO,iBAAiB,CAACwO,WAAW,CAAC,EAAE;gBACjC,IAAIlD,MAAM,GAAG,IAAI,CAACmD,oBAAoB,CAACD,WAAW,EAAE3M,MAAM,CAACc,QAAQ,GAAG0F,IAAI,EAAE,EAAE,CAAC;gBAC/E,IAAI,CAAC8F,yBAAyB,IAAI7C,MAAM,CAACC,UAAU,CAACrG,KAAK,GAAG,IAAI,CAACgJ,yBAAyB;cAC9F;YACJ,CAAC,MACI;cACD7F,IAAI,GAAG,IAAI,CAAC9H,cAAc,CAAC8H,IAAI,GAAG,IAAI,CAAC9D,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;YAClF;UACJ,CAAC,MACI;YACDmD,IAAI,GAAI,IAAI,CAAC9H,cAAc,CAAC8H,IAAK;UACrC;QACJ,CAAC,MACI;UACD,IAAI,IAAI,CAAC9D,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,EAAE;YACrC,IAAI,IAAI,CAAChE,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAACjK,MAAM,GAAG,CAAC,EAAE;cAChD+J,IAAI,GAAGvI,YAAY,CAAC,IAAI,CAACS,cAAc,CAAC8H,IAAI,CAAC,GAAG,IAAI,CAAC6F,yBAAyB,GAAG,IAAI,CAACC,yBAAyB;cAC/G,IAAI,CAACnO,iBAAiB,CAACwO,WAAW,CAAC,EAAE;gBACjC,IAAIlD,MAAM,GAAG,IAAI,CAACmD,oBAAoB,CAACD,WAAW,EAAE3M,MAAM,CAACc,QAAQ,GAAG0F,IAAI,EAAE,EAAE,CAAC;gBAC/E,IAAI,CAAC8F,yBAAyB,IAAI7C,MAAM,CAACC,UAAU,CAACrG,KAAK,GAAG,IAAI,CAACgJ,yBAAyB;cAC9F;YACJ,CAAC,MACI;cACD7F,IAAI,GAAGvI,YAAY,CAAC,IAAI,CAACS,cAAc,CAAC8H,IAAI,CAAC,GAAG,IAAI,CAAC9D,aAAa,CAAC0J,UAAU,CAAC1F,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK;YAChG;UACJ,CAAC,MACI;YACDmD,IAAI,GAAGvI,YAAY,CAAC,IAAI,CAACS,cAAc,CAAC8H,IAAI,CAAC;UACjD;QACJ;MACJ;MACA,IAAIiF,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI,IAAI,CAACnM,SAAS,CAAC,CAAC,EAAE;QAClBmM,UAAU,GAAGjF,IAAI,GAAIvG,eAAgB,GAAGF,UAAU,CAACwB,CAAC;MACxD,CAAC,MACI;QACDkK,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;MACpE;MACA,IAAIvB,MAAM,CAACD,UAAU,IAAIyG,IAAI,IAAIA,IAAI,GAAGxG,MAAM,CAACc,QAAQ,IACnD,CAAC3C,iBAAiB,CAACwO,WAAW,CAAC,IAAI,CAAC,IAAI,CAACjO,cAAc,CAACyJ,WAAW,EAAE;QACrE,IAAIsB,MAAM,GAAG,IAAI,CAACmD,oBAAoB,CAACD,WAAW,EAAE3M,MAAM,CAACc,QAAQ,GAAG0F,IAAI,EAAE,EAAE,CAAC;QAC/E,IAAI9E,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,CAAC;QAClD,IAAI,CAACxD,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAAC,IACnF,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI,EAAE;UACtEA,IAAI,GAAG,IAAI,CAACrD,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI;QAC/E;QACA,IAAIoK,YAAY,GAAG,CAAC7N,YAAY,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,CAAC,GAAGuJ,MAAM,CAACC,UAAU,CAAC7I,MAAM,IAAI,CAAC;QACvF,IAAIkL,KAAK,GAAG,IAAIhP,MAAM,CAAC0O,UAAU,EAAE1L,UAAU,CAACa,CAAC,GAAGkL,YAAY,CAAC;QAC/D,IAAIE,IAAI,GAAG,IAAI3O,KAAK,CAACoM,MAAM,CAACC,UAAU,CAACrG,KAAK,EAAEoG,MAAM,CAACC,UAAU,CAAC7I,MAAM,CAAC;QACvE,IAAIgM,UAAU,GAAG,IAAIzP,UAAU,CAAC2O,KAAK,EAAEC,IAAI,CAAC;QAC5C,IAAIE,WAAW,GAAG,IAAI1O,eAAe,CAAC,CAAC;QACvC0O,WAAW,CAAClJ,SAAS,GAAGtF,gBAAgB,CAACuF,KAAK;QAC9CiJ,WAAW,CAACpJ,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;QACvD,IAAI0G,MAAM,CAACC,UAAU,CAACrG,KAAK,GAAG,CAAC,EAAE;UAC7B,IAAIxB,SAAS,GAAG,IAAI;UACpB,IAAIC,SAAS,GAAG,IAAI3E,aAAa,CAAC,IAAI,CAACgP,UAAU,CAAC;UAClD,IAAIW,OAAO,GAAI,IAAI,CAACpK,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACC,QAAQ,GAAI,IAAIhF,eAAe,CAAC,IAAI,CAACoF,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACV,UAAU,EAAE,IAAI,CAACe,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACC,QAAQ,EAAE,IAAI,CAACI,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACA,SAAS,CAAC,GAAGX,IAAI;UACtP,IAAIqL,YAAY,GAAG,IAAI,CAACrK,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACR,SAAS,GAAG,IAAI1E,aAAa,CAAC,IAAI,CAACuF,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACR,SAAS,CAAC,GAAGC,SAAS;UACvJ;UACAvB,QAAQ,CAACuG,UAAU,CAAC6F,WAAW,EAAEG,OAAO,EAAEjL,SAAS,EAAEkL,YAAY,EAAEF,UAAU,CAACtL,CAAC,EAAEsL,UAAU,CAACjM,CAAC,EAAE6I,MAAM,CAACC,UAAU,CAACrG,KAAK,EAAEoG,MAAM,CAACC,UAAU,CAAC7I,MAAM,EAAEqL,WAAW,CAAC;UAC9J,IAAI,CAAC/N,iBAAiB,CAACsL,MAAM,CAACR,SAAS,CAAC,IAAIQ,MAAM,CAACR,SAAS,KAAK,IAAI,EAAE;YACnE,IAAI,CAACvK,cAAc,CAAC0D,KAAK,GAAGqH,MAAM,CAACR,SAAS;YAC5C,IAAI,CAACvK,cAAc,CAAC8H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;YAC1C,IAAI,CAACpC,cAAc,CAAC8M,gBAAgB,GAAG,IAAI;UAC/C,CAAC,MACI;YACD,IAAIrN,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAAC0J,UAAU,CAAChK,KAAK,CAAC,EAAE;cACxD,IAAI,CAAC1D,cAAc,CAACyJ,WAAW,GAAG,IAAI;YAC1C;UACJ;QACJ,CAAC,MACI;UACD,IAAI,CAACzJ,cAAc,CAAC8H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;QAC9C;MACJ;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI1C,yBAAyB,CAACzB,SAAS,CAAC8E,aAAa,GAAG,UAAU1C,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEE,OAAO,EAAE;IAC9G,IAAII,QAAQ,GAAGxB,IAAI,CAACwB,QAAQ;IAC5B,IAAIiG,IAAI;IACR,IAAI,CAACrI,iBAAiB,CAAC,IAAI,CAACM,aAAa,CAAC2D,KAAK,CAAC,EAAE;MAC9C,IAAI4K,SAAS,GAAG,CAAC;MACjBA,SAAS,GAAG,IAAI,CAACxG,IAAI;MACrB,IAAI,CAAC,IAAI,CAAC/H,aAAa,CAAC+M,gBAAgB,EAAE;QACtC,IAAI/B,MAAM,GAAG,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACrK,aAAa,CAAC2D,KAAK,EAAE6K,MAAM,CAACC,SAAS,EAAE,EAAE,CAAC;QAC1E,IAAIC,UAAU,GAAG,IAAI,CAACrJ,WAAW,GAAGsJ,IAAI,CAACC,KAAK,CAAC,IAAI,CAAChP,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACzG,IAAI,IAAI,CAAChO,SAAS,CAAC,CAAC,EAAE;UAClBkH,IAAI,GAAIwG,SAAS,GAAGG,UAAU,GAAI1D,MAAM,CAACC,UAAU,CAACrG,KAAK;QAC7D,CAAC,MACI;UACDmD,IAAI,GAAGvI,YAAY,CAAC+O,SAAS,GAAGG,UAAU,CAAC,GAAG1D,MAAM,CAACC,UAAU,CAACrG,KAAK;QACzE;QACA,IAAI,CAAC5E,aAAa,CAAC+H,IAAI,GAAGA,IAAI;QAC9B,IAAI,CAAC/H,aAAa,CAAC+M,gBAAgB,GAAG,IAAI;MAC9C,CAAC,MACI;QACDhF,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI;MAClC;MACA,IAAIiF,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI,IAAI,CAACnM,SAAS,CAAC,CAAC,EAAE;QAClBmM,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;QAChE,IAAI,CAACpB,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;UACjD,IAAIsD,SAAS,GAAG1K,OAAO,CAACqG,IAAI,GAAGrG,OAAO,CAACkK,QAAQ;UAC/C,IAAIlK,OAAO,CAACqG,IAAI,GAAGrG,OAAO,CAACkK,QAAQ,EAAE;YACjCoB,UAAU,GAAGjF,IAAI,GAAGvG,eAAe,GAAGF,UAAU,CAACwB,CAAC;UACtD,CAAC,MACI;YACDkK,UAAU,GAAGjF,IAAI,GAAGvG,eAAe,GAAGF,UAAU,CAACwB,CAAC,GAAGsJ,SAAS;UAClE;QACJ;MACJ,CAAC,MACI;QACDY,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;QAChE,IAAI,CAACpB,OAAO,CAACmH,cAAc,IAAInH,OAAO,CAACoH,YAAY,EAAE;UACjD,IAAIsD,SAAS,GAAG5M,YAAY,CAACkC,OAAO,CAACqG,IAAI,CAAC,GAAGvI,YAAY,CAACkC,OAAO,CAACkK,QAAQ,CAAC;UAC3E,IAAIlK,OAAO,CAACqG,IAAI,GAAGrG,OAAO,CAACkK,QAAQ,EAAE;YACjCoB,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;UACpE,CAAC,MACI;YACDkK,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC,GAAGsJ,SAAS;UAChF;QACJ;MACJ;MACA,IAAI7K,MAAM,CAACD,UAAU,IAAIyG,IAAI,IAAIA,IAAI,GAAGxG,MAAM,CAACc,QAAQ,IAAI,CAAC3C,iBAAiB,CAAC,IAAI,CAACM,aAAa,CAAC2D,KAAK,CAAC,IAChG,CAAC,IAAI,CAAC3D,aAAa,CAAC0J,WAAW,EAAE;QACpC,IAAIsB,MAAM,GAAG,IAAI,CAACX,QAAQ,CAAC,IAAI,CAACrK,aAAa,CAAC2D,KAAK,EAAEpC,MAAM,CAACc,QAAQ,GAAG0F,IAAI,EAAE,EAAE,CAAC;QAChF,IAAI9E,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,CAAC;QAClD,IAAIK,cAAc,GAAG,KAAK,CAAC;QAC3B,IAAIO,UAAU,GAAG,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU;QAChF,IAAI,CAACpE,iBAAiB,CAACoE,UAAU,CAAC,IAAI,CAACpE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC,KAAK,CAAClN,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC/I,QAAQ,CAAC,IACrH,CAACnE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAChJ,SAAS,CAAC,IACjD,CAAClE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC1J,UAAU,CAAC,CAAC,EAAE;UAClDK,cAAc,GAAG,IAAI,CAACoJ,UAAU,CAAC7I,UAAU,CAAC;QAChD;QACA,IAAI,CAACpE,iBAAiB,CAAC6D,cAAc,CAAC,EAAE;UACpCN,IAAI,GAAGM,cAAc;QACzB;QACA,IAAI,CAAC7D,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAAC,IACnF,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI,EAAE;UACtEA,IAAI,GAAG,IAAI,CAACrD,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI;QAC/E;QACA,IAAIgK,OAAO,GAAG;UAAElF,IAAI,EAAE,CAAC;UAAEmF,KAAK,EAAE,CAAC;UAAEC,GAAG,EAAE,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC;QACtD,IAAI,CAAC1N,iBAAiB,CAACoE,UAAU,CAAC,IAAI,CAACpE,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAAC,IACtE,CAAClN,iBAAiB,CAACoE,UAAU,CAAC8I,KAAK,CAACK,OAAO,CAAC,EAAE;UAC9CA,OAAO,GAAGnJ,UAAU,CAAC8I,KAAK,CAACK,OAAO;QACtC;QACA,IAAII,YAAY,GAAG,CAAC7N,YAAY,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,CAAC,GAAGuJ,MAAM,CAACC,UAAU,CAAC7I,MAAM,IAAI,CAAC;QACvF,IAAI0M,eAAe,GAAG,IAAIxQ,MAAM,CAAC0O,UAAU,GAAGC,OAAO,CAAClF,IAAI,EAAEzG,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAGJ,OAAO,CAACE,GAAG,CAAC;QACtG,IAAI4B,cAAc,GAAG,IAAInQ,KAAK,CAACoM,MAAM,CAACC,UAAU,CAACrG,KAAK,IAAIqI,OAAO,CAAClF,IAAI,GAAGkF,OAAO,CAACC,KAAK,CAAC,EAAElC,MAAM,CAACC,UAAU,CAAC7I,MAAM,IAAI6K,OAAO,CAACE,GAAG,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;QACnJ,IAAI4B,gBAAgB,GAAG,IAAIrQ,UAAU,CAACmQ,eAAe,EAAEC,cAAc,CAAC;QACtE,IAAIE,gBAAgB,GAAG,IAAIlQ,eAAe,CAAC,CAAC;QAC5CkQ,gBAAgB,CAAC1K,SAAS,GAAGtF,gBAAgB,CAACuF,KAAK;QACnDyK,gBAAgB,CAAC5K,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;QAC5D,IAAI0G,MAAM,CAACC,UAAU,CAACrG,KAAK,GAAG,CAAC,EAAE;UAC7B,IAAIxB,SAAS,GAAG,IAAI;UACpB,IAAIC,SAAS,GAAG,IAAI3E,aAAa,CAAC,IAAI,CAACgP,UAAU,CAAC;UAClD;UACA5L,QAAQ,CAACuG,UAAU,CAAC2C,MAAM,CAACV,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,EAAEtH,IAAI,EAAEG,SAAS,EAAEC,SAAS,EAAE2L,gBAAgB,CAAClM,CAAC,EAAEkM,gBAAgB,CAAC7M,CAAC,EAAE6I,MAAM,CAACC,UAAU,CAACrG,KAAK,EAAEoG,MAAM,CAACC,UAAU,CAAC7I,MAAM,EAAE6M,gBAAgB,CAAC;UAClL,IAAIjE,MAAM,CAACR,SAAS,KAAK,IAAI,EAAE;YAC3B,IAAI,CAACxK,aAAa,CAAC2D,KAAK,GAAGqH,MAAM,CAACR,SAAS;YAC3C,IAAI,CAACxK,aAAa,CAAC+H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;UAC7C,CAAC,MACI;YACD,IAAI,CAACrC,aAAa,CAAC0J,WAAW,GAAG,IAAI;UACzC;QACJ,CAAC,MACI;UACD,IAAI,CAAC1J,aAAa,CAAC+H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;QAC7C;MACJ;IACJ,CAAC,MACI;MACD,IAAI,CAAC3C,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAAC,IAAI,CAACxP,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAAC,EAAE;QAC5G,IAAI,CAACkH,wBAAwB,GAAG,CAAC;QACjC,IAAI,CAACC,wBAAwB,GAAG,CAAC;QACjC,IAAI,CAACC,cAAc,GAAG,CAAC;QACvB,KAAK,IAAIxR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACoG,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACjK,MAAM,EAAEH,CAAC,EAAE,EAAE;UAChE,IAAI8F,KAAK,GAAG,KAAK,CAAC;UAClB,IAAIqH,MAAM,GAAG,KAAK,CAAC;UACnB,IAAI,CAACtL,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAAC,EAAE;YACxDA,KAAK,GAAG,IAAI,CAACM,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;YACrD/C,MAAM,GAAG,IAAI,CAACX,QAAQ,CAAC1G,KAAK,CAAC9F,CAAC,CAAC,EAAE2Q,MAAM,CAACC,SAAS,EAAE,EAAE,CAAC;UAC1D;UACA,IAAIa,gBAAgB,GAAG,CAAC5P,iBAAiB,CAACsL,MAAM,CAAC,GAAGA,MAAM,CAACC,UAAU,CAACrG,KAAK,GAAG,CAAC;UAC/E,IAAI,CAACyK,cAAc,IAAI,IAAI,CAACpL,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACpK,CAAC,CAAC,CAAC+G,KAAK,GAAG0K,gBAAgB;QACzF;QACA,KAAK,IAAIzR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACoG,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACjK,MAAM,EAAEH,CAAC,EAAE,EAAE;UAChE,IAAI,CAAC0R,kBAAkB,CAACjP,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE,IAAI,CAACyC,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACpK,CAAC,CAAC,CAAC;UACzG,IAAI,IAAI,CAACoG,aAAa,CAACiL,SAAS,CAACvL,KAAK,EAAE;YACpC,IAAIA,KAAK,GAAG,IAAI,CAACM,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;YACzD,IAAIpK,KAAK,EAAE;cACP,IAAI,CAAC6L,kBAAkB,CAAClP,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEmC,KAAK,CAAC9F,CAAC,CAAC,CAAC;YAChF;UACJ;QACJ;MACJ,CAAC,MACI,IAAI,CAAC6B,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAAC,IAAI,CAACxP,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAAC,EAAE;QACjH,IAAI,CAAC6L,kBAAkB,CAAClP,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAE,IAAI,CAACyC,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAAC;MAC1G;IACJ;EACJ,CAAC;EACDhE,yBAAyB,CAACzB,SAAS,CAACqR,kBAAkB,GAAG,UAAUjP,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEiO,cAAc,EAAE;IAC1H,IAAI3N,QAAQ,GAAGxB,IAAI,CAACwB,QAAQ;IAC5B,IAAIiG,IAAI;IACR,IAAIwG,SAAS,GAAG,CAAC;IACjBA,SAAS,GAAG,IAAI,CAACxG,IAAI;IACrB,IAAI,CAACrI,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAAC,IAAI,CAACxP,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAAC,EAAE;MAC5G,IAAI,CAAC,IAAI,CAACjI,aAAa,CAAC+M,gBAAgB,EAAE;QACtC,IAAI/B,MAAM,GAAG,IAAIpM,KAAK,CAAC6Q,cAAc,CAAC7K,KAAK,EAAE6K,cAAc,CAACrN,MAAM,CAAC;QACnE,IAAIsM,UAAU,GAAG,IAAI,CAACrJ,WAAW,GAAGsJ,IAAI,CAACC,KAAK,CAAC,IAAI,CAAChP,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACzG,IAAIlL,KAAK,GAAG,IAAI,CAACM,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;QACzD,IAAI,IAAI,CAAClN,SAAS,CAAC,CAAC,EAAE;UAClB,IAAI,IAAI,CAACoD,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACjK,MAAM,GAAG,CAAC,IAAI2F,KAAK,CAAC3F,MAAM,GAAG,CAAC,EAAE;YACnE+J,IAAI,GAAGwG,SAAS,GAAG,IAAI,CAACc,cAAc,GAAGrE,MAAM,CAACpG,KAAK;YACrD,IAAI,CAACuK,wBAAwB,IAAInE,MAAM,CAACpG,KAAK;UACjD,CAAC,MACI;YACDmD,IAAI,GAAIwG,SAAS,GAAGG,UAAU,GAAI1D,MAAM,CAACpG,KAAK;UAClD;QACJ,CAAC,MACI;UACD,IAAI,IAAI,CAACX,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACjK,MAAM,GAAG,CAAC,IAAI2F,KAAK,CAAC3F,MAAM,GAAG,CAAC,EAAE;YACnE+J,IAAI,GAAGvI,YAAY,CAAC+O,SAAS,CAAC,GAAG,IAAI,CAACc,cAAc,GAAGrE,MAAM,CAACpG,KAAK;YACnE,IAAI,CAACuK,wBAAwB,IAAInE,MAAM,CAACpG,KAAK;UACjD,CAAC,MACI;YACDmD,IAAI,GAAGvI,YAAY,CAAC+O,SAAS,GAAGG,UAAU,CAAC,GAAG1D,MAAM,CAACpG,KAAK;UAC9D;QACJ;QACA,IAAI,CAAC5E,aAAa,CAAC+H,IAAI,GAAGA,IAAI;QAC9B,IAAI,CAAC/H,aAAa,CAAC+M,gBAAgB,GAAG,IAAI;MAC9C,CAAC,MACI;QACD,IAAI,IAAI,CAAC9I,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACjK,MAAM,GAAG,CAAC,EAAE;UAC/C+J,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI,GAAG,IAAI,CAACqH,wBAAwB;QAClE,CAAC,MACI;UACDrH,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI;QAClC;MACJ;MACA,IAAIiF,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI,IAAI,CAACnM,SAAS,CAAC,CAAC,EAAE;QAClBmM,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;MACpE,CAAC,MACI;QACDkK,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;MACpE;MACA,IAAIvB,MAAM,CAACD,UAAU,IAAIyG,IAAI,IAAIA,IAAI,GAAGxG,MAAM,CAACc,QAAQ,IAAI,CAAC3C,iBAAiB,CAAC+P,cAAc,CAAC,IACtF,CAAC,IAAI,CAACzP,aAAa,CAAC0J,WAAW,EAAE;QACpC,IAAIsB,MAAM,GAAG,IAAIpM,KAAK,CAAC6Q,cAAc,CAAC7K,KAAK,EAAE6K,cAAc,CAACrN,MAAM,CAAC;QACnE,IAAIiL,YAAY,GAAG,CAAC7N,YAAY,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,CAAC,GAAGuJ,MAAM,CAAC5I,MAAM,IAAI,CAAC;QAC5E,IAAI0M,eAAe,GAAG,IAAIxQ,MAAM,CAAC0O,UAAU,EAAE1L,UAAU,CAACa,CAAC,GAAGkL,YAAY,CAAC;QACzE,IAAI0B,cAAc,GAAG,IAAInQ,KAAK,CAACoM,MAAM,CAACpG,KAAK,EAAEoG,MAAM,CAAC5I,MAAM,CAAC;QAC3D,IAAI4M,gBAAgB,GAAG,IAAIrQ,UAAU,CAACmQ,eAAe,EAAEC,cAAc,CAAC;QACtE,IAAI9G,KAAK,GAAG,IAAI5I,SAAS,CAACoQ,cAAc,CAACtH,MAAM,CAAC;QAChD,IAAI6C,MAAM,CAACpG,KAAK,GAAG,CAAC,EAAE;UAClB9C,QAAQ,CAACsG,SAAS,CAACH,KAAK,EAAE+G,gBAAgB,CAAClM,CAAC,EAAEkM,gBAAgB,CAAC7M,CAAC,EAAE6I,MAAM,CAACpG,KAAK,EAAEoG,MAAM,CAAC5I,MAAM,CAAC;UAC9F,IAAI,CAACiN,cAAc,GAAG,IAAI,CAACA,cAAc,GAAGrE,MAAM,CAACpG,KAAK;QAC5D,CAAC,MACI;UACD,IAAI,CAAC5E,aAAa,CAAC+H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;QAC7C;MACJ;IACJ;EACJ,CAAC;EACD1C,yBAAyB,CAACzB,SAAS,CAACsR,kBAAkB,GAAG,UAAUlP,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEkO,cAAc,EAAE;IAC1H,IAAI5N,QAAQ,GAAGxB,IAAI,CAACwB,QAAQ;IAC5B,IAAIiG,IAAI;IACR,IAAI,CAACrI,iBAAiB,CAACgQ,cAAc,CAAC,EAAE;MACpC,IAAInB,SAAS,GAAG,CAAC;MACjBA,SAAS,GAAG,IAAI,CAACxG,IAAI;MACrB,IAAI,CAAC,IAAI,CAAC/H,aAAa,CAAC+M,gBAAgB,EAAE;QACtC,IAAI/B,MAAM,GAAG,IAAI,CAAC2E,mBAAmB,CAACD,cAAc,EAAElB,MAAM,CAACC,SAAS,EAAE,EAAE,CAAC;QAC3E,IAAIC,UAAU,GAAG,IAAI,CAACrJ,WAAW,GAAGsJ,IAAI,CAACC,KAAK,CAAC,IAAI,CAAChP,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QACzG,IAAIlL,KAAK,GAAG,IAAI,CAACM,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;QACzD,IAAI,IAAI,CAAClN,SAAS,CAAC,CAAC,EAAE;UAClB,IAAI+O,gBAAgB,GAAG,CAAClQ,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK;UAC5F,IAAI4H,WAAW,GAAGD,gBAAgB,GAAG,IAAI,CAAC3L,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACjK,MAAM,GAAG,CAAC;UAClF,IAAI2F,KAAK,CAAC3F,MAAM,KAAK,CAAC,IAAI4R,gBAAgB,IAAIC,WAAW,KAAK,CAAC,EAAE;YAC7D9H,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI,GAAG,IAAI,CAACoH,wBAAwB;YAC9D,IAAI,CAAClL,aAAa,CAAC8D,IAAI,GAAGA,IAAI;YAC9B,IAAI+H,QAAQ,GAAG,IAAI,CAACH,mBAAmB,CAACD,cAAc,EAAElB,MAAM,CAACC,SAAS,EAAE,EAAE,CAAC;YAC7E,IAAI,CAACW,wBAAwB,IAAI,IAAI,CAACD,wBAAwB,GAAGW,QAAQ,CAAC7E,UAAU,CAACrG,KAAK;UAC9F,CAAC,MACI,IAAIjB,KAAK,CAAC3F,MAAM,GAAG,CAAC,IAAI4R,gBAAgB,IAAIC,WAAW,GAAG,CAAC,EAAE;YAC9D,IAAIhG,UAAU,GAAI,IAAI,CAACuF,wBAAwB,KAAK,CAAC,GAAI,IAAI,CAACA,wBAAwB,GAChF,IAAI,CAACD,wBAAwB,GAAG,IAAI,CAACA,wBAAwB;YACnEpH,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI,GAAG8B,UAAU;YAC3C,IAAI,CAAC5F,aAAa,CAAC8D,IAAI,GAAGA,IAAI;YAC9B,IAAIgI,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACD,cAAc,EAAElB,MAAM,CAACC,SAAS,EAAE,EAAE,CAAC;YAC7E,IAAI,CAACW,wBAAwB,IAAI,IAAI,CAACD,wBAAwB,GAAGY,QAAQ,CAAC9E,UAAU,CAACrG,KAAK;UAC9F,CAAC,MACI;YACDmD,IAAI,GAAIwG,SAAS,GAAGG,UAAU,GAAI1D,MAAM,CAACC,UAAU,CAACrG,KAAK;UAC7D;QACJ,CAAC,MACI;UACDmD,IAAI,GAAGvI,YAAY,CAAC+O,SAAS,GAAGG,UAAU,CAAC,GAAG1D,MAAM,CAACC,UAAU,CAACrG,KAAK;QACzE;QACA,IAAI,CAAC5E,aAAa,CAAC+H,IAAI,GAAGA,IAAI;QAC9B,IAAI,CAAC/H,aAAa,CAAC+M,gBAAgB,GAAG,IAAI;MAC9C,CAAC,MACI;QACD,IAAIpJ,KAAK,GAAG,IAAI,CAACM,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;QACzD,IAAIpK,KAAK,CAAC3F,MAAM,KAAK,CAAC,EAAE;UACpB+J,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI,GAAG,IAAI,CAACoH,wBAAwB;UAC9D,IAAI,CAAClL,aAAa,CAAC8D,IAAI,GAAGA,IAAI;UAC9B,IAAIiD,MAAM,GAAG,IAAI,CAAC2E,mBAAmB,CAACD,cAAc,EAAElB,MAAM,CAACC,SAAS,EAAE,EAAE,CAAC;UAC3E,IAAI,CAACW,wBAAwB,IAAI,IAAI,CAACD,wBAAwB,GAAGnE,MAAM,CAACC,UAAU,CAACrG,KAAK;QAC5F,CAAC,MACI,IAAIjB,KAAK,CAAC3F,MAAM,GAAG,CAAC,EAAE;UACvB,IAAI6L,UAAU,GAAI,IAAI,CAACuF,wBAAwB,KAAK,CAAC,GACjD,IAAI,CAACA,wBAAwB,GAAG,IAAI,CAACD,wBAAwB,GAC3D,IAAI,CAACA,wBAAwB;UACnCpH,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI,GAAG8B,UAAU;UAC3C,IAAI,CAAC5F,aAAa,CAAC8D,IAAI,GAAGA,IAAI;UAC9B,IAAIiD,MAAM,GAAG,IAAI,CAAC2E,mBAAmB,CAACD,cAAc,EAAElB,MAAM,CAACC,SAAS,EAAE,EAAE,CAAC;UAC3E,IAAI,CAACW,wBAAwB,IAAI,IAAI,CAACD,wBAAwB,GAAGnE,MAAM,CAACC,UAAU,CAACrG,KAAK;QAC5F,CAAC,MACI;UACDmD,IAAI,GAAG,IAAI,CAAC/H,aAAa,CAAC+H,IAAI;QAClC;MACJ;MACA,IAAIiF,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI,IAAI,CAACnM,SAAS,CAAC,CAAC,EAAE;QAClBmM,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;MACpE,CAAC,MACI;QACDkK,UAAU,GAAGjF,IAAI,GAAGvI,YAAY,CAACgC,eAAe,CAAC,GAAGF,UAAU,CAACwB,CAAC;MACpE;MACA,IAAIvB,MAAM,CAACD,UAAU,IAAIyG,IAAI,IAAIA,IAAI,GAAGxG,MAAM,CAACc,QAAQ,IAAI,CAAC3C,iBAAiB,CAACgQ,cAAc,CAAC,IACtF,CAAC,IAAI,CAAC1P,aAAa,CAAC0J,WAAW,EAAE;QACpC,IAAIsB,MAAM,GAAG,IAAI,CAAC2E,mBAAmB,CAACD,cAAc,EAAEnO,MAAM,CAACc,QAAQ,GAAG0F,IAAI,EAAE,EAAE,CAAC;QACjF,IAAI9E,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,CAAC;QAClD,IAAI,CAACxD,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAAC,IACnF,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI,EAAE;UACtEA,IAAI,GAAG,IAAI,CAACrD,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI;QAC/E;QACA,IAAIoK,YAAY,GAAG,CAAC7N,YAAY,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,CAAC,GAAGuJ,MAAM,CAACC,UAAU,CAAC7I,MAAM,IAAI,CAAC;QACvF,IAAI0M,eAAe,GAAG,IAAIxQ,MAAM,CAAC0O,UAAU,EAAE1L,UAAU,CAACa,CAAC,GAAGkL,YAAY,CAAC;QACzE,IAAI0B,cAAc,GAAG,IAAInQ,KAAK,CAACoM,MAAM,CAACC,UAAU,CAACrG,KAAK,EAAEoG,MAAM,CAACC,UAAU,CAAC7I,MAAM,CAAC;QACjF,IAAI4M,gBAAgB,GAAG,IAAIrQ,UAAU,CAACmQ,eAAe,EAAEC,cAAc,CAAC;QACtE,IAAIE,gBAAgB,GAAG,IAAIlQ,eAAe,CAAC,CAAC;QAC5CkQ,gBAAgB,CAAC1K,SAAS,GAAGtF,gBAAgB,CAACuF,KAAK;QACnDyK,gBAAgB,CAAC5K,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;QAC5D,IAAI0G,MAAM,CAACC,UAAU,CAACrG,KAAK,GAAG,CAAC,EAAE;UAC7B,IAAIxB,SAAS,GAAG,IAAI;UACpB,IAAIC,SAAS,GAAG,IAAI3E,aAAa,CAAC,IAAI,CAACgP,UAAU,CAAC;UAClD,IAAIW,OAAO,GAAI,IAAI,CAACpK,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACC,QAAQ,GAAI,IAAIhF,eAAe,CAAC,IAAI,CAACoF,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACV,UAAU,EAAE,IAAI,CAACe,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACC,QAAQ,EAAE,IAAI,CAACI,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACA,SAAS,CAAC,GAAGX,IAAI;UAClP,IAAIqL,YAAY,GAAG,IAAI,CAACrK,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACR,SAAS,GAC/D,IAAI1E,aAAa,CAAC,IAAI,CAACuF,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACR,SAAS,CAAC,GAAGC,SAAS;UACnFvB,QAAQ,CAACuG,UAAU,CAACqH,cAAc,EAAErB,OAAO,EAAEjL,SAAS,EAAEkL,YAAY,EAAEU,gBAAgB,CAAClM,CAAC,EAAEkM,gBAAgB,CAAC7M,CAAC,EAAE6I,MAAM,CAACC,UAAU,CAACrG,KAAK,EAAEoG,MAAM,CAACC,UAAU,CAAC7I,MAAM,EAAE6M,gBAAgB,CAAC;UAClL,IAAItL,KAAK,GAAG,IAAI,CAACM,aAAa,CAACiL,SAAS,CAACvL,KAAK,CAACoK,KAAK,CAAC,GAAG,CAAC;UACzD,IAAK,CAACrO,iBAAiB,CAACsL,MAAM,CAACR,SAAS,CAAC,IAAKQ,MAAM,CAACR,SAAS,KAAK,IAAI,EAAE;YACrE,IAAI,CAACxK,aAAa,CAAC2D,KAAK,GAAGqH,MAAM,CAACR,SAAS;YAC3C,IAAI,CAACxK,aAAa,CAAC+H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;UAC7C,CAAC,MACI,IAAI,CAAC3C,iBAAiB,CAAC,IAAI,CAACuE,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAAC,IAC3D,IAAI,CAAChE,aAAa,CAACiL,SAAS,CAACjH,KAAK,CAACjK,MAAM,KAAK,CAAC,IAAI2F,KAAK,CAAC3F,MAAM,KAAK,CAAC,EAAE;YACvE,IAAI,CAACgC,aAAa,CAAC0J,WAAW,GAAG,IAAI;UACzC;QACJ,CAAC,MACI;UACD,IAAI,CAAC1J,aAAa,CAAC+H,IAAI,GAAGxG,MAAM,CAACc,QAAQ;QAC7C;MACJ;IACJ;EACJ,CAAC;EACD1C,yBAAyB,CAACzB,SAAS,CAACmM,QAAQ,GAAG,UAAU1G,KAAK,EAAEiB,KAAK,EAAExC,MAAM,EAAE;IAC3E,IAAIa,IAAI;IACRA,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,CAAC;IAC9C,IAAIY,UAAU,GAAG,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU;IAChF,IAAIA,UAAU,IAAIA,UAAU,CAAC8I,KAAK,IAAI9I,UAAU,CAAC8I,KAAK,CAAC/I,QAAQ,EAAE;MAC7DZ,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAEY,UAAU,CAAC8I,KAAK,CAAC/I,QAAQ,CAAC;MACtEzB,MAAM,GAAGa,IAAI,CAACb,MAAM;IACxB;IACA,IAAI,CAAC1C,iBAAiB,CAACoE,UAAU,CAAC,IAAIA,UAAU,CAACb,IAAI,EAAE;MACnDA,IAAI,GAAGa,UAAU,CAACb,IAAI;MACtBb,MAAM,GAAGa,IAAI,CAACb,MAAM;IACxB;IACA,IAAI4N,QAAQ,GAAG,IAAIxR,iBAAiB,CAAC,CAAC;IACtC,IAAI4F,cAAc,GAAG,IAAIrF,eAAe,CAAC,CAAC;IAC1CqF,cAAc,CAACG,SAAS,GAAGtF,gBAAgB,CAAC4F,IAAI;IAChDT,cAAc,CAAC6L,QAAQ,GAAG/Q,eAAe,CAACgR,SAAS;IACnD9L,cAAc,CAACC,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;IAC1D;IACA,IAAI0G,MAAM,GAAGgF,QAAQ,CAACG,MAAM,CAACxM,KAAK,EAAEV,IAAI,EAAEmB,cAAc,EAAE,IAAIxF,KAAK,CAACgG,KAAK,EAAExC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAIxD,KAAK,CAACgG,KAAK,EAAExC,MAAM,CAAC,CAAC;IACpH,OAAO4I,MAAM;EACjB,CAAC;EACDrL,yBAAyB,CAACzB,SAAS,CAACyR,mBAAmB,GAAG,UAAUhM,KAAK,EAAEiB,KAAK,EAAExC,MAAM,EAAE;IACtF,IAAIiM,OAAO,GAAG,IAAIxP,eAAe,CAAC,IAAI,CAACoF,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACV,UAAU,EAAE,IAAI,CAACe,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACC,QAAQ,CAAC;IACrI,IAAIZ,IAAI;IACR,IAAI,IAAI,CAACgB,aAAa,CAACiL,SAAS,CAACtL,SAAS,CAACC,QAAQ,EAAE;MACjDZ,IAAI,GAAGoL,OAAO;IAClB,CAAC,MACI;MACDpL,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,CAAC;IAClD;IACA,IAAI,CAACxD,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAAC,IACnF,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI,EAAE;MACtEA,IAAI,GAAG,IAAI,CAACrD,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI;IAC/E;IACA,IAAI+M,QAAQ,GAAG,IAAIxR,iBAAiB,CAAC,CAAC;IACtC,IAAI4F,cAAc,GAAG,IAAIrF,eAAe,CAAC,CAAC;IAC1CqF,cAAc,CAACG,SAAS,GAAGtF,gBAAgB,CAAC4F,IAAI;IAChDT,cAAc,CAAC6L,QAAQ,GAAG/Q,eAAe,CAACgR,SAAS;IACnD9L,cAAc,CAACC,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;IAC1D;IACA,IAAI0G,MAAM,GAAGgF,QAAQ,CAACG,MAAM,CAACxM,KAAK,EAAEV,IAAI,EAAEmB,cAAc,EAAE,IAAIxF,KAAK,CAACgG,KAAK,EAAExC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAIxD,KAAK,CAACgG,KAAK,EAAExC,MAAM,CAAC,CAAC;IACpH,OAAO4I,MAAM;EACjB,CAAC;EACDrL,yBAAyB,CAACzB,SAAS,CAACiQ,oBAAoB,GAAG,UAAUxK,KAAK,EAAEiB,KAAK,EAAExC,MAAM,EAAE;IACvF,IAAIiM,OAAO,GAAG,IAAIxP,eAAe,CAAC,IAAI,CAACoF,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACV,UAAU,EAAE,IAAI,CAACe,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACC,QAAQ,CAAC;IACvI,IAAIZ,IAAI;IACR,IAAI,IAAI,CAACgB,aAAa,CAAC0J,UAAU,CAAC/J,SAAS,CAACC,QAAQ,EAAE;MAClDZ,IAAI,GAAGoL,OAAO;IAClB,CAAC,MACI;MACDpL,IAAI,GAAG,IAAIpE,eAAe,CAAC,IAAI,CAACqE,UAAU,EAAE,CAAC,CAAC;IAClD;IACA,IAAI,CAACxD,iBAAiB,CAAC,IAAI,CAACE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAAC,IACnF,IAAI,CAAClE,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI,EAAE;MACtEA,IAAI,GAAG,IAAI,CAACrD,MAAM,CAACkB,eAAe,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAACgD,UAAU,CAACb,IAAI;IAC/E;IACA,IAAI+M,QAAQ,GAAG,IAAIxR,iBAAiB,CAAC,CAAC;IACtC,IAAI4F,cAAc,GAAG,IAAIrF,eAAe,CAAC,CAAC;IAC1CqF,cAAc,CAACG,SAAS,GAAGtF,gBAAgB,CAAC4F,IAAI;IAChDT,cAAc,CAAC6L,QAAQ,GAAG/Q,eAAe,CAACgR,SAAS;IACnD9L,cAAc,CAACC,aAAa,GAAGrF,oBAAoB,CAACsF,MAAM;IAC1D;IACA,IAAI0G,MAAM,GAAGgF,QAAQ,CAACG,MAAM,CAACxM,KAAK,EAAEV,IAAI,EAAEmB,cAAc,EAAE,IAAIxF,KAAK,CAACgG,KAAK,EAAExC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAIxD,KAAK,CAACgG,KAAK,EAAExC,MAAM,CAAC,CAAC;IACpH,OAAO4I,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIrL,yBAAyB,CAACzB,SAAS,CAACoK,mBAAmB,GAAG,UAAUzG,YAAY,EAAEP,UAAU,EAAEE,eAAe,EAAE6L,YAAY,EAAE;IACzH,IAAI+C,SAAS,GAAG,IAAI1R,aAAa,CAAC,IAAI,CAAC+G,SAAS,CAAC;IACjD,IAAI,IAAI,CAAC5E,SAAS,CAAC,CAAC,EAAE;MAClBgB,YAAY,CAACgB,aAAa,CAACuN,SAAS,EAAE9O,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAGkL,YAAY,EAAE7N,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,CAAC;IAChK,CAAC,MACI;MACDP,YAAY,CAACgB,aAAa,CAACuN,SAAS,EAAE9O,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAGkL,YAAY,EAAE7N,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,IAAI,CAAC4C,MAAM,CAAC,CAAC;IAC5K;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIzC,yBAAyB,CAACzB,SAAS,CAACuO,aAAa,GAAG,UAAUnM,IAAI,EAAEgB,UAAU,EAAEC,MAAM,EAAEC,eAAe,EAAEE,OAAO,EAAE2O,UAAU,EAAE;IAC1H,IAAI9O,MAAM,CAAC6F,SAAS,IAAI,IAAI,CAACA,SAAS,IAAI,IAAI,CAACA,SAAS,IAAI7F,MAAM,CAAC+F,OAAO,EAAE;MACxE,IAAIzF,YAAY,GAAGvB,IAAI,CAACwB,QAAQ;MAChC,IAAIgD,SAAS,GAAGxE,IAAI,CAACC,OAAO,CAACE,OAAO,CAACH,IAAI,CAAC;MAC1C,IAAI,CAACoH,cAAc,GAAGlK,QAAQ,CAAC,CAAC,CAAC,EAAE8D,UAAU,CAAC;MAC9C,IAAIgP,YAAY,GAAG,IAAI7R,MAAM,CAAC,IAAI,CAAC8R,cAAc,CAAC;MAClD,IAAIC,+BAA+B,GAAGhR,YAAY,CAAE,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,GAAG,IAAI,CAACW,MAAM,IAAI,GAAI,CAAC;MACjG,IAAIqO,uBAAuB,GAAGjR,YAAY,CAAE,CAAC,IAAI,CAACI,MAAM,CAAC6B,SAAS,GAAG,IAAI,CAACW,MAAM,IAAI,GAAI,CAAC;MACzF,IAAIiL,YAAY,GAAG,IAAI,CAACzN,MAAM,CAACuH,cAAc,GAAGqJ,+BAA+B,GAAGC,uBAAuB;MACzG,IAAIC,cAAc,GAAG,IAAIhS,aAAa,CAAC,IAAI,CAAC6R,cAAc,CAAC;MAC3D,IAAIxL,WAAW,GAAG,IAAItG,MAAM,CAAC,IAAI,CAACuG,mBAAmB,CAAC;MACtD,IAAIC,aAAa,GAAG,IAAIvG,aAAa,CAAC,IAAI,CAACwG,aAAa,CAAC;MACzDrD,YAAY,CAACkH,IAAI,CAAC,CAAC,CAAC,CAAC;MACrB,IAAI3G,MAAM,GAAGuM,IAAI,CAACC,KAAK,CAAC,IAAI,CAAChP,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,CAAC;MACxE,IAAI,CAACwB,UAAU,EAAE;QACb,IAAI,IAAI,CAACxP,SAAS,CAAC,CAAC,EAAE;UAClBgB,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAI,IAAI,CAACzN,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,CAAC;QACtK,CAAC,MACI;UACDhN,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAI,IAAI,CAACzN,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,CAAC;QAClL;MACJ;MACA,IAAIwB,UAAU,EAAE;QACZ,IAAI,IAAI,CAACxP,SAAS,CAAC,CAAC,EAAE;UAClBgB,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,IAAIpB,OAAO,CAAC4J,YAAY,GAAG9J,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAI,IAAI,CAACzN,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,CAAC;QACjL,CAAC,MACI;UACDhN,YAAY,CAACqH,kBAAkB,CAAC5H,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAACkC,OAAO,CAAC4J,YAAY,GAAG9J,eAAe,CAAC,EAAEF,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAI,IAAI,CAACzN,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,CAAC;QAC7L;MACJ;MACAhN,YAAY,CAAC8O,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MAClC,IAAI,IAAI,CAAC/Q,MAAM,CAACuH,cAAc,IAAI,IAAI,CAACiE,iBAAiB,IAAI,IAAI,CAACC,eAAe,IAAIgF,UAAU,EAAE;QAC5FxO,YAAY,CAACgB,aAAa,CAACkC,WAAW,EAAEE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAEzF,YAAY,CAAC4C,MAAM,CAAC,EAAE5C,YAAY,CAAC4C,MAAM,CAAC,CAAC;MAC5G;MACA,IAAI,CAACiO,UAAU,EAAE;QACbxO,YAAY,CAACgB,aAAa,CAACyN,YAAY,EAAEI,cAAc,EAAE,CAAC,EAAE,CAAC,EAAElR,YAAY,CAAC4C,MAAM,CAAC,EAAE5C,YAAY,CAAC4C,MAAM,CAAC,CAAC;MAC9G;MACAP,YAAY,CAACuH,OAAO,CAAC,CAAC,CAAC,CAAC;MACxB,IAAI,IAAI,CAACvI,SAAS,CAAC,CAAC,EAAE;QAClB,IAAI,CAACnB,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;UACnD,IAAIA,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;UAClE,IAAIrF,CAAC,GAAGxB,UAAU,CAACwB,CAAC,IAAI,IAAI,CAACiF,IAAI,GAAGvG,eAAe,CAAC,GAAI,IAAI,CAAC5B,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,GACxG,CAAE,IAAI,CAACjP,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAInN,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,IAAI,GAAG;UACvG,IAAIwC,KAAK,GAAGlD,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,GAAG,GAAG;UACxD,IAAIgM,QAAQ,GAAGlP,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,GAAG,GAAG;UAC5DP,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAEnF,CAAC,EAAExB,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAI,IAAI,CAACzN,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,GAC/G,CAAE,IAAI,CAACjP,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAInN,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,IAAI,GAAI,EAAEwC,KAAK,EAAEgM,QAAQ,CAAC;QAC/H;MACJ,CAAC,MACI;QACD,IAAI,CAAClR,iBAAiB,CAACgC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,EAAE;UACnD,IAAIA,KAAK,GAAG,IAAI5I,SAAS,CAACqC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACE,MAAM,CAAC;UAClE,IAAIrF,CAAC,GAAGxB,UAAU,CAACwB,CAAC,GAAGtD,YAAY,CAAC,IAAI,CAACuI,IAAI,GAAGvG,eAAe,CAAC,GAAI,IAAI,CAAC5B,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,GACpHrP,YAAY,CAAE,IAAI,CAACI,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAInN,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,CAAC,GAAG,GAAG;UACnHP,YAAY,CAACuG,SAAS,CAACH,KAAK,EAAEnF,CAAC,EAAExB,UAAU,CAACa,CAAC,GAAGkL,YAAY,GAAI,IAAI,CAACzN,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAI,CAAC,GAChHrP,YAAY,CAAC,CAAE,IAAI,CAACI,MAAM,CAACyM,eAAe,CAACwC,aAAa,GAAG,GAAG,GAAInN,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,IAAI,GAAG,CAAC,EAAE5C,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAACrD,KAAK,CAAC,EAAEpF,YAAY,CAACkC,OAAO,CAACgC,eAAe,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC7F,MAAM,GAAG,CAAC,CAAC,CAAC;QAC3O;MACJ;MACA,IAAI,CAACjC,OAAO,GAAG,IAAI,CAACD,SAAS,GAAG4E,SAAS;IAC7C;EACJ,CAAC;EACD,OAAOnF,yBAAyB;AACpC,CAAC,CAAC,CAAE;AACJ,SAASA,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}