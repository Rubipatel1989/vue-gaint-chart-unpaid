{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */function () {\n  /**\n   * Constructor for Edit module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function Edit(parent) {\n    this.addedRecords = 'addedRecords';\n    this.deletedRecords = 'deletedRecords';\n    this.prevAriaRowIndex = '-1';\n    this.isAddedRowByMethod = false;\n    this.isAddedRowByContextMenu = false;\n    Grid.Inject(GridEdit);\n    this.parent = parent;\n    this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n    this.previousNewRowPosition = null;\n    this.internalProperties = {};\n    this.batchEditModule = new BatchEdit(this.parent);\n    this.addEventListener();\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns Edit module name\n   */\n  Edit.prototype.getModuleName = function () {\n    return 'edit';\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Edit.prototype.addEventListener = function () {\n    this.parent.on(events.crudAction, this.crudAction, this);\n    this.parent.on(events.beginEdit, this.beginEdit, this);\n    this.parent.on(events.beginAdd, this.beginAdd, this);\n    this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n    this.parent.on(events.cellSave, this.cellSave, this);\n    this.parent.on(events.batchCancel, this.batchCancel, this);\n    this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n    this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n    this.parent.grid.on('content-ready', this.contentready, this);\n    this.parent.on(events.cellEdit, this.cellEdit, this);\n    this.parent.on('actionBegin', this.editActionEvents, this);\n    this.parent.on('actionComplete', this.editActionEvents, this);\n    this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n    this.parent.grid.on('dblclick', this.gridDblClick, this);\n    this.parent.grid.on('recordAdded', this.customCellSave, this);\n    this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n    // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n    this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n    this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n    this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n    this.parent.grid.on('get-row-position', this.getRowPosition, this);\n  };\n  Edit.prototype.gridDblClick = function (e) {\n    this.doubleClickTarget = e.target;\n    if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n      this.doubleClickTarget = null;\n    }\n    if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n      var tr = parentsUntil(e.target, 'e-row');\n      var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n      if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n        /* eslint-disable-next-line */\n        this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n      }\n    }\n  };\n  Edit.prototype.getRowPosition = function (addArgs) {\n    addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n    addArgs.addRowIndex = this.addRowIndex;\n    addArgs.dataRowIndex = +this.prevAriaRowIndex;\n  };\n  Edit.prototype.beforeStartEdit = function (args) {\n    if (this.parent.editSettings.mode === 'Cell') {\n      this.parent.trigger(events.actionBegin, args);\n    }\n  };\n  Edit.prototype.beforeBatchCancel = function (args) {\n    if (this.parent.editSettings.mode === 'Cell') {\n      args['requestType'] = 'cancel';\n      this.parent.trigger(events.actionComplete, args);\n    }\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Edit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(events.crudAction, this.crudAction);\n    this.parent.off(events.beginEdit, this.beginEdit);\n    this.parent.off(events.beginAdd, this.beginAdd);\n    this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n    this.parent.off(events.batchCancel, this.batchCancel);\n    this.parent.grid.off(events.keyPressed, this.keyPressed);\n    this.parent.grid.off('batchedit-form', this.lastCellTab);\n    this.parent.grid.off('content-ready', this.contentready);\n    this.parent.off(events.cellEdit, this.cellEdit);\n    this.parent.off('actionBegin', this.editActionEvents);\n    this.parent.off('actionComplete', this.editActionEvents);\n    this.parent.grid.off('recordAdded', this.customCellSave);\n    this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n    this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n    this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n    this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n    this.parent.grid.off('dblclick', this.gridDblClick);\n    this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n    this.parent.grid.off('get-row-position', this.getRowPosition);\n    //this.parent.grid.off('click', this.gridSingleClick);\n  };\n  /**\n   * To destroy the editModule\n   *\n   * @returns {void}\n   * @hidden\n   */\n  Edit.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @param {Column[]} cols - Column property Collection\n   * @hidden\n   * @returns {void}\n   */\n  Edit.prototype.applyFormValidation = function (cols) {\n    this.parent.grid.editModule.applyFormValidation(cols);\n  };\n  Edit.prototype.editActionEvents = function (args) {\n    var eventArgs = getObject('editAction', args);\n    var eventName = getObject('name', eventArgs);\n    var treeObj = this.parent;\n    var adaptor = !isNullOrUndefined(treeObj.dataSource) && treeObj.dataSource.adaptor;\n    if (!isNullOrUndefined(adaptor) && (isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) && eventArgs.requestType === 'save' && eventArgs.action === 'add' && (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below' || treeObj.editSettings.newRowPosition === 'Above')) {\n      if (eventName === 'actionBegin') {\n        var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex : eventArgs.row.rowIndex - 1;\n        var keyData = !isNullOrUndefined(rowIndex) && rowIndex !== -1 ? treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n        treeObj.grid.query.addParams('relationalKey', keyData);\n      } else if (eventName === 'actionComplete') {\n        var paramsLength = treeObj.grid.query.params.length;\n        for (var i = 0; i < paramsLength; i++) {\n          if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n            treeObj.grid.query.params.splice(i);\n          }\n        }\n      }\n    }\n    if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n      this.infiniteAddAction(eventArgs);\n    }\n    if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n      this.parent.notify('batchPageAction', {});\n    }\n  };\n  Edit.prototype.infiniteAddAction = function (args) {\n    if (args.requestType === 'save' && args.action === 'add' || args.requestType === 'delete') {\n      if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1 && args.requestType === 'save' && args.action === 'add') {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var newRowObject = rowObjects.splice(0, 1)[0];\n        var newRowObjectIndex = this.addRowIndex;\n        var currentData = this.parent.getCurrentViewRecords();\n        if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n          newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n        }\n        newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n        rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n        var newRecord = currentData.splice(0, 1)[0];\n        currentData.splice(newRowObjectIndex, 0, newRecord);\n        this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n      }\n      var movableRows = this.parent.grid.getRows();\n      var movableRowsObject = this.parent.grid.getRowsObject();\n      var isCache = this.parent.infiniteScrollSettings.enableCache;\n      if (!isCache) {\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n        this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n      }\n      if (!isCache && this.parent.getFrozenColumns() > 0) {\n        resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n        this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n      }\n    }\n  };\n  Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n    var _this = this;\n    var infiniteData = 'infiniteCurrentViewData';\n    var updateCurrentViewData = 'updateCurrentViewData';\n    var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n    var page = size > 0 ? size : 1;\n    var dataIndex = newRowIndex - (page - 1) * this.parent.pageSettings.pageSize;\n    var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n    infiniteCurrentViewData[1].splice(0, 1);\n    var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n    if (!isNullOrUndefined(this.addRowRecord)) {\n      data.filter(function (e, index) {\n        if (e.uniqueID === _this.addRowRecord.uniqueID) {\n          dataIndex = index;\n        }\n      });\n      if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length && this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n        dataIndex += findChildrenRecords(this.addRowRecord).length;\n      }\n    }\n    if (dataIndex >= this.parent.pageSettings.pageSize) {\n      page += 1;\n      data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n      dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n    }\n    dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n    data.splice(dataIndex, 0, newRecord);\n    this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n  };\n  Edit.prototype.recordDoubleClick = function (args) {\n    var target = args.target;\n    if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n      return;\n    }\n    if (!this.parent.grid.editSettings.allowEditing || this.parent.grid.isEdit) {\n      return;\n    }\n    var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n    if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey && this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') || target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n      this.isOnBatch = true;\n      this.parent.grid.setProperties({\n        selectedRowIndex: args.rowIndex\n      }, true);\n      if (this.parent.enableVirtualization) {\n        var tr = parentsUntil(args.target, 'e-row');\n        this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n        tr.setAttribute('data-rowindex', tr.rowIndex + '');\n      }\n      this.updateGridEditMode('Batch');\n    } else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n      this.isOnBatch = true;\n      this.updateGridEditMode('Batch');\n    }\n  };\n  Edit.prototype.updateGridEditMode = function (mode) {\n    this.parent.grid.setProperties({\n      editSettings: {\n        mode: mode\n      }\n    }, true);\n    var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n    updateMethod.apply(this.parent.grid.editModule);\n    this.parent.grid.isEdit = false;\n  };\n  Edit.prototype.resetIsOnBatch = function () {\n    if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n      this.isOnBatch = false;\n      this.updateGridEditMode('Normal');\n    }\n  };\n  Edit.prototype.keyPressed = function (args) {\n    if (this.isOnBatch) {\n      this.keyPress = args.action;\n    }\n    if (args.action === 'f2') {\n      this.recordDoubleClick(args);\n    }\n    if (args.action === 'escape') {\n      this.closeEdit();\n    }\n  };\n  Edit.prototype.deleteUniqueID = function (value) {\n    var idFilter = 'uniqueIDFilterCollection';\n    delete this.parent[\"\" + idFilter][\"\" + value];\n    var id = 'uniqueIDCollection';\n    delete this.parent[\"\" + id][\"\" + value];\n  };\n  Edit.prototype.cellEdit = function (args) {\n    var _this = this;\n    var promise = 'promise';\n    var prom = args[\"\" + promise];\n    delete args[\"\" + promise];\n    if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n      args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n      this.prevAriaRowIndex = undefined;\n    }\n    if (this.keyPress !== 'enter') {\n      this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n        if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n          _this.enableToolbarItems('edit');\n        } else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n          _this.isOnBatch = false;\n          _this.updateGridEditMode('Normal');\n        }\n        if (!isNullOrUndefined(prom)) {\n          prom.resolve(celleditArgs);\n        }\n      });\n    }\n    if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') || this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n      args.cancel = true;\n      this.doubleClickTarget = null;\n      return;\n    }\n    if (this.parent.editSettings.mode === 'Cell') {\n      if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n        this.keyPress = null;\n      } else if (this.keyPress === 'enter') {\n        args.cancel = true;\n        this.keyPress = null;\n        setValue('isEditCollapse', false, this.parent);\n      }\n      if (!args.columnObject.allowEditing) {\n        args.cancel = true;\n      }\n    }\n    if (this.parent.enableVirtualization) {\n      this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n    }\n    // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n    //   this.isAdd = false;\n    // }\n  };\n  Edit.prototype.enableToolbarItems = function (request) {\n    if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n      var toolbarID = this.parent.element.id + '_gridcontrol_';\n      this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n      this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n    }\n  };\n  Edit.prototype.batchCancel = function () {\n    if (this.parent.editSettings.mode === 'Cell') {\n      var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n      if (!isNullOrUndefined(this.editedRowIndex)) {\n        cellDetails.rowIndex = this.editedRowIndex;\n      }\n      var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n      this.parent.renderModule.cellRender({\n        data: cellDetails.rowData,\n        cell: treeCell,\n        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n      });\n      this.updateGridEditMode('Normal');\n      this.isOnBatch = false;\n    }\n    if (this.parent.editSettings.mode === 'Batch') {\n      this.parent.notify('batchCancelAction', {});\n    }\n  };\n  Edit.prototype.customCellSave = function (args) {\n    if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n      this.updateCell(args, args.rowIndex);\n      this.afterCellSave(args, args.row);\n    }\n  };\n  Edit.prototype.cellSave = function (args) {\n    var _this = this;\n    if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n      args.cancel = true;\n      var editModule = 'editModule';\n      setValue('isEditCollapse', true, this.parent);\n      args.rowData[args.columnName] = args.value;\n      var row_1;\n      if (isNullOrUndefined(args.cell)) {\n        row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n      } else {\n        row_1 = args.cell.parentNode;\n      }\n      var rowIndex_1;\n      var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n      if (isNullOrUndefined(row_1)) {\n        this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n          if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n            rowIndex_1 = i;\n            return;\n          }\n        });\n      } else {\n        var freeze = this.parent.getFrozenLeftColumnsCount() > 0 || this.parent.getFrozenRightColumnsCount() > 0 ? true : false;\n        if (freeze) {\n          if (this.parent.getRows().indexOf(row_1) !== -1) {\n            rowIndex_1 = this.parent.getRows().indexOf(row_1);\n          } else {\n            rowIndex_1 = this.parent.getRows().indexOf(row_1);\n          }\n        } else {\n          rowIndex_1 = this.parent.getRows().indexOf(row_1) === -1 && this.parent.getFrozenColumns() > 0 ? this.parent.grid.getRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n        }\n      }\n      var arg = {};\n      extend(arg, args);\n      arg.cancel = false;\n      arg.type = 'save';\n      row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n      this.parent.trigger(events.actionBegin, arg);\n      if (!arg.cancel) {\n        if (row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1 && this.keyPress === 'tab') {\n          this.isTabLastRow = true;\n        }\n        if (!isRemoteData(this.parent) && !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n          if (isCountRequired(this.parent)) {\n            var eventPromise = 'eventPromise';\n            var editArgs = {\n              requestType: 'save',\n              data: args.rowData,\n              action: 'edit',\n              row: row_1,\n              rowIndex: rowIndex_1,\n              rowData: args.rowData,\n              columnName: args.columnName,\n              filterChoiceCount: null,\n              excelSearchOperator: null\n            };\n            this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n          } else {\n            this.updateCell(args, rowIndex_1);\n            setValue('isEdit', false, this.parent.grid);\n            this.afterCellSave(args, row_1);\n          }\n        } else if (isRemoteData(this.parent) || this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n          var query = this.parent.grid.query;\n          if (this.parent['isGantt'] && this.parent.loadChildOnDemand) {\n            this.updateCell(args, rowIndex_1);\n            setValue('isEdit', false, this.parent.grid);\n            this.afterCellSave(args, row_1);\n          } else {\n            var crud = null;\n            crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n            crud.then(function (e) {\n              if (!isNullOrUndefined(e)) {\n                args.rowData[args.columnName] = e[args.columnName];\n              }\n              _this.updateCell(args, rowIndex_1);\n              setValue('isEdit', false, _this.parent.grid);\n              _this.afterCellSave(args, row_1);\n            });\n          }\n        }\n      } else {\n        this.parent.grid.isEdit = true;\n      }\n    }\n    if (this.parent.enableVirtualization) {\n      this.parent.grid.contentModule['virtualData'] = {};\n    }\n  };\n  Edit.prototype.afterCellSave = function (args, row) {\n    if (this.parent.grid.aggregateModule) {\n      this.parent.grid.aggregateModule.refresh(args.rowData);\n    }\n    this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n    this.parent.grid.editModule.formObj.destroy();\n    if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n      this.updateGridEditMode('Normal');\n      this.isOnBatch = false;\n    }\n    this.enableToolbarItems('save');\n    removeClass([row], ['e-editedrow', 'e-batchrow']);\n    removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n    if (this.parent['isCellSaveFocus'] !== false) {\n      this.parent.grid.focusModule.restoreFocus();\n    }\n    editAction({\n      value: args.rowData,\n      action: 'edit'\n    }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n    if (row.rowIndex === this.parent.getCurrentViewRecords().length - 1 && this.keyPress === 'enter') {\n      this.keyPress = null;\n    }\n    var saveArgs = {\n      type: 'save',\n      column: this.parent.getColumnByField(args.columnName),\n      data: args.rowData,\n      previousData: args.previousValue,\n      row: row,\n      target: args.cell\n    };\n    if (this.parent.aggregates.map(function (ag) {\n      return ag.showChildSummary === true;\n    }).length) {\n      this.parent.grid.refresh();\n    }\n    this.parent.trigger(events.actionComplete, saveArgs);\n  };\n  Edit.prototype.lastCellTab = function () {\n    if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n      if (!this.parent.editSettings.allowNextRowEdit) {\n        this.updateGridEditMode('Normal');\n        this.isOnBatch = false;\n        this.keyPress = null;\n      } else {\n        this.enableToolbarItems('edit');\n      }\n    }\n  };\n  Edit.prototype.updateCell = function (args, rowIndex) {\n    this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n    this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n  };\n  Edit.prototype.crudAction = function (details, columnName) {\n    editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n    this.parent.parentData = [];\n    var data = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n    for (var i = 0; i < data.length; i++) {\n      data[parseInt(i.toString(), 10)].index = i;\n      var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n      if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n        if (details.action === 'add') {\n          data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n          data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n          data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n          if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n            data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n            data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n          }\n          data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n        }\n      }\n      setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n      var adaptor = this.parent.dataSource.adaptor;\n      if (isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor) {\n        setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n      }\n      if (!data[parseInt(i.toString(), 10)].level) {\n        this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n      }\n    }\n    if (!this.parent.enableInfiniteScrolling) {\n      if (details.action === 'add' && this.previousNewRowPosition != null) {\n        this.parent.setProperties({\n          editSettings: {\n            newRowPosition: this.previousNewRowPosition\n          }\n        }, true);\n        this.previousNewRowPosition = null;\n      }\n    }\n  };\n  Edit.prototype.updateIndex = function (data, rows, records) {\n    for (var j = 0; j < this.parent.getDataRows().length; j++) {\n      var data1 = records[parseInt(j.toString(), 10)];\n      if (!isNullOrUndefined(data1)) {\n        var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n        data1.index = index;\n        if (!isNullOrUndefined(data1.parentItem)) {\n          var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n          data1.parentItem.index = parentIndex;\n        }\n      }\n    }\n    var count = -1;\n    var treeColIndex = this.parent.treeColumnIndex;\n    if (this.parent.getFrozenColumns() > 0) {\n      var cells = rows[0].querySelectorAll('.e-rowcell');\n      for (var l = 0; l < cells.length; l++) {\n        if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n          treeColIndex = l;\n          break;\n        }\n      }\n    }\n    for (var k = 0; k < this.parent.getRows().length; k++) {\n      if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n        count++;\n      }\n      var data2 = records[parseInt(count.toString(), 10)];\n      if (!isNullOrUndefined(data2)) {\n        var index = data2.index;\n        var level = data2.level;\n        var row = rows[parseInt(k.toString(), 10)];\n        if (!isNullOrUndefined(data2.parentItem)) {\n          index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n        }\n        var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n        if (!isNullOrUndefined(treecell)) {\n          for (var l = 0; l < treecell.classList.length; l++) {\n            var value = treecell.classList[parseInt(l.toString(), 10)];\n            var remove = /e-gridrowindex/i;\n            var removed = /e-griddetailrowindex/i;\n            var result = value.match(remove);\n            var results = value.match(removed);\n            if (result != null) {\n              removeClass([treecell], value);\n            }\n            if (results != null) {\n              removeClass([treecell], value);\n            }\n          }\n          if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n            addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n          } else {\n            addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n          }\n        }\n      }\n    }\n  };\n  Edit.prototype.beginAdd = function () {\n    var position;\n    var index = this.addRowIndex;\n    var records = this.parent.grid.getCurrentViewRecords();\n    if (this.parent.editSettings.mode === 'Batch') {\n      index = this.batchEditModule.getAddRowIndex();\n      this.selectedIndex = this.batchEditModule.getSelectedIndex();\n      if (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length) {\n        records = this.batchEditModule.getBatchRecords();\n      }\n    }\n    var rows = this.parent.grid.getDataRows();\n    var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n    var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n    var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n    var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n    if (this.parent.editSettings.mode !== 'Dialog') {\n      if (this.parent.editSettings.newRowPosition === 'Above') {\n        position = 'before';\n      } else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n        position = 'after';\n        if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) && records[parseInt(index.toString(), 10)].expanded) {\n          if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n            index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n            if (this.parent.editSettings.newRowPosition !== 'Child') {\n              var batchChildCount = this.batchEditModule.getBatchChildCount();\n              index = index + batchChildCount;\n            }\n          } else if (!this.parent.enableVirtualization) {\n            index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n          }\n        }\n      }\n      if ((this.selectedIndex > -1 || isVirtualization) && withinRange && (index || this.parent.editSettings.newRowPosition === 'Child' || this.parent.editSettings.newRowPosition === 'Below')) {\n        if (index >= rows.length - 1) {\n          index = rows.length - 2;\n        }\n        var r = 'rows';\n        var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n        var focussedElement = document.activeElement;\n        rows[index + 1][\"\" + position](rows[0]);\n        setValue('batchIndex', index + 1, this.batchEditModule);\n        var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n        if (this.parent.editSettings.mode === 'Batch') {\n          this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n          this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n        }\n        if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n          var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n          for (var i = 0; i < errors.length; i++) {\n            errors[parseInt(i.toString(), 10)].remove();\n          }\n          setValue('errorRules', [], this.parent.grid.editModule.formObj);\n        }\n        if (isVirtualization) {\n          this.prevAriaRowIndex = '-1';\n        }\n        if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n          this.isScrollByFocus = true;\n          focussedElement.focus();\n        }\n        if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n          this.parent.grid.contentModule['createEmptyRowdata']();\n        }\n      }\n    }\n    if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n      index = this.batchEditModule.getAddRowIndex();\n      this.selectedIndex = this.batchEditModule.getSelectedIndex();\n      var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n      var newlyAddedRecord = void 0;\n      if (batchAddedRecords.length) {\n        for (var i = 0; i < batchAddedRecords.length; i++) {\n          if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n            newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n          }\n        }\n      }\n      var args = {\n        action: 'add',\n        data: newlyAddedRecord,\n        index: index,\n        seletedRow: 0\n      };\n      this.beginAddEdit(args);\n      this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n      this.batchEditModule['batchAddedRecords'].push(args['data']);\n    }\n  };\n  // private beforeDataBound(args: BeforeDataBoundArgs): void {\n  //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n  //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n  //     let action: string = getValue('action', args);\n  //     let data: Object = getValue('data', args);\n  //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n  //       data = extend(this.editedData, data);\n  //       this.editedData = null;\n  //     }\n  //     if (!isNullOrUndefined(this.addedData)) {\n  //       let addedData: Object = args.result[args.result.length - 1];\n  //       addedData = extend(this.addedData, addedData);\n  //       this.addedData = null;\n  //       args.result.splice(this.addedIndex, 0, addedData);\n  //       args.result.splice(args.result.length, 1);\n  //     }\n  //   }\n  // }\n  Edit.prototype.beginEdit = function (args) {\n    if (args.requestType === 'refresh' && this.isOnBatch) {\n      args.cancel = true;\n      return;\n    }\n    if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n      args.cancel = true;\n      return;\n    }\n    if (this.doubleClickTarget && args.requestType !== 'delete' && (this.doubleClickTarget.classList.contains('e-treegridexpand') || this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n      args.cancel = true;\n      this.doubleClickTarget = null;\n      return;\n    }\n    if (args.requestType === 'delete') {\n      var data_1 = args.data;\n      if (isNullOrUndefined(args.data[0].uniqueID)) {\n        var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n        var _loop_1 = function (i) {\n          this_1.parent.flatData.filter(function (e) {\n            if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n              data_1[parseInt(i.toString(), 10)] = e;\n            }\n          });\n        };\n        var this_1 = this;\n        for (var i = 0; i < data_1.length; i++) {\n          _loop_1(i);\n        }\n      }\n      for (var i = 0; i < data_1.length; i++) {\n        this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n        var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n        for (var c = 0; c < childs.length; c++) {\n          this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n        }\n        args.data = args.data.concat(childs);\n      }\n    }\n    if (args.requestType === 'add' || this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n      if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod) && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n      }\n      if (this.parent.enableVirtualization) {\n        var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n        var row = void 0;\n        if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n          this.prevAriaRowIndex = this.selectedIndex.toString();\n          row = this.parent.getContent().querySelector(selector);\n          this.addRowIndex = row ? row.rowIndex : 0;\n        } else {\n          if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n            selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n            row = this.parent.getContent().querySelector(selector);\n            this.addRowIndex = row ? row.rowIndex : 0;\n          } else {\n            this.addRowIndex = 0;\n          }\n        }\n      } else {\n        if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n          if (args.index !== 0) {\n            this.addRowIndex = args.index;\n          } else {\n            this.addRowIndex = this.parent.grid.selectedRowIndex;\n          }\n        } else {\n          this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        }\n      }\n      var selectedRecords = this.parent.getSelectedRecords()[0];\n      if ((this.isAddedRowByMethod || this.isAddedRowByContextMenu && this.parent.grid.selectedRowIndex !== -1) && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n        this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n        if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n          this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n        }\n      } else if (!isNullOrUndefined(selectedRecords)) {\n        this.addRowRecord = selectedRecords;\n      }\n    }\n    if (this.isAddedRowByMethod && args.index !== 0) {\n      this.addRowRecord = this.parent.flatData[args.index];\n      this.addRowIndex = args.index;\n    }\n    if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n      this.addRowRecord = this.parent.getSelectedRecords()[0];\n    }\n    if (isNullOrUndefined(this.addRowRecord) && this.parent.getCurrentViewRecords().length > this.addRowIndex && args.requestType === 'save' && this.parent.getSelectedRecords().length !== 0) {\n      this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n    }\n    this.isAddedRowByMethod = false;\n    args = this.beginAddEdit(args);\n    // if (args.requestType === 'save' &&\n    //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n    //      if (args.action === 'edit') {\n    //           this.editedData = args.data;\n    //      } else if (args.action === 'add') {\n    //           this.addedData = value;\n    //      }\n    // }\n  };\n  Edit.prototype.savePreviousRowPosition = function () {\n    if (this.previousNewRowPosition === null) {\n      this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n    }\n  };\n  Edit.prototype.beginAddEdit = function (args) {\n    var value = args.data;\n    if (args.action === 'add') {\n      var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n      var position = null;\n      value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n      var currentData = void 0;\n      if (this.parent.enableVirtualization && args.index !== 0) {\n        currentData = this.parent.flatData;\n      } else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n        currentData = this.batchEditModule['batchRecords'];\n      } else {\n        currentData = this.parent.grid.getCurrentViewRecords();\n      }\n      if (this.parent.enableVirtualization && args.index !== 0) {\n        this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n        this.selectedIndex = this.addRowIndex;\n      }\n      var index = this.addRowIndex;\n      value.uniqueID = getUid(this.parent.element.id + '_data_');\n      setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n      var level = 0;\n      var idMapping = void 0;\n      var parentUniqueID = void 0;\n      var parentItem = void 0;\n      var parentIdMapping = void 0;\n      var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n      var rows = this.parent.getRows();\n      var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n      var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n      var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true : this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n      if (currentData.length) {\n        idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n        parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n        if (currentData[this.addRowIndex].parentItem) {\n          parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n        }\n        parentItem = currentData[this.addRowIndex].parentItem;\n      }\n      if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n        level = currentData[this.addRowIndex].level;\n        if (this.parent.editSettings.newRowPosition === 'Above') {\n          position = 'before';\n          index = currentData[this.addRowIndex].index;\n        } else if (this.parent.editSettings.newRowPosition === 'Below') {\n          position = 'after';\n          var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n          var currentDataIndex = currentData[this.addRowIndex].index;\n          index = childRecordCount > 0 ? currentDataIndex + childRecordCount : currentDataIndex;\n        } else if (this.parent.editSettings.newRowPosition === 'Child') {\n          position = 'after';\n          if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n            value.parentItem = extend({}, currentData[this.addRowIndex]);\n            value.parentUniqueID = value.parentItem.uniqueID;\n            delete value.parentItem.childRecords;\n            delete value.parentItem[this.parent.childMapping];\n          }\n          var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n          var currentDataIndex1 = currentData[this.addRowIndex].index;\n          if (this.selectedIndex >= 0) {\n            value.level = level + 1;\n          }\n          index = childRecordCount1 > 0 ? currentDataIndex1 + childRecordCount1 : currentDataIndex1;\n          if (this.isSelfReference) {\n            if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n              value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n            } else {\n              value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n            }\n            if (!isNullOrUndefined(value.parentItem)) {\n              updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n            }\n          }\n        }\n        if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n          if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n            value.parentUniqueID = parentUniqueID;\n            value.parentItem = extend({}, parentItem);\n            delete value.parentItem.childRecords;\n            delete value.parentItem[this.parent.childMapping];\n          }\n          value.level = level;\n          if (this.isSelfReference) {\n            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n            if (!isNullOrUndefined(value.parentItem)) {\n              updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n            }\n          }\n        }\n        if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n          args.index = position === 'before' ? index : index + 1;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Bottom') {\n          level = 0;\n          var dataSource = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n          args.index = dataSource.length;\n        }\n      }\n      if (isNullOrUndefined(value.level)) {\n        value.level = level;\n      }\n      value.hasChildRecords = false;\n      value.childRecords = [];\n      value.index = 0;\n    }\n    if (args.action === 'add') {\n      this.internalProperties = {\n        level: value.level,\n        parentItem: value.parentItem,\n        uniqueID: value.uniqueID,\n        taskData: value.taskData,\n        parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n        childRecords: value.childRecords\n      };\n    }\n    if (args.requestType === 'delete') {\n      var deletedValues = args.data;\n      for (var i = 0; i < deletedValues.length; i++) {\n        if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n          var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n          if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n            var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n            parentItem.childRecords.splice(childIndex, 1);\n          }\n        }\n      }\n    }\n    return args;\n  };\n  /**\n   * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n   *\n   * @returns {void}\n   */\n  Edit.prototype.addRecord = function (data, index, position) {\n    if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n      this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n    }\n    if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n      var addRecords = [];\n      var previousEditMode = this.parent.editSettings.mode;\n      var previousGridEditMode = this.parent.grid.editSettings.mode;\n      addRecords.push(data);\n      this.parent.setProperties({\n        editSettings: {\n          mode: 'Batch'\n        }\n      }, true);\n      this.parent.grid.setProperties({\n        editSettings: {\n          mode: 'Batch'\n        }\n      }, true);\n      if (!isNullOrUndefined(position)) {\n        this.parent.setProperties({\n          editSettings: {\n            newRowPosition: position\n          }\n        }, true);\n      }\n      var updatedRecords = {\n        addedRecords: addRecords,\n        changedRecords: [],\n        deletedRecords: []\n      };\n      this.parent.notify(events.batchSave, {\n        updatedRecords: updatedRecords,\n        index: index\n      });\n      this.parent.setProperties({\n        editSettings: {\n          mode: previousEditMode\n        }\n      }, true);\n      this.parent.grid.setProperties({\n        editSettings: {\n          mode: previousGridEditMode\n        }\n      }, true);\n      this.parent.refresh();\n    } else {\n      if (data) {\n        if (index > -1) {\n          this.selectedIndex = index;\n          this.addRowIndex = index;\n        } else {\n          this.selectedIndex = this.parent.selectedRowIndex;\n          this.addRowIndex = this.parent.selectedRowIndex;\n        }\n        if (position) {\n          this.parent.setProperties({\n            editSettings: {\n              newRowPosition: position\n            }\n          }, true);\n        }\n        this.parent.grid.editModule.addRecord(data, index);\n      } else {\n        this.parent.grid.editModule.addRecord(data, index);\n      }\n    }\n  };\n  /**\n   * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n   *\n   * @returns {boolean} Returns form validation results\n   */\n  Edit.prototype.editFormValidate = function () {\n    return this.parent.grid.editModule.editFormValidate();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  Edit.prototype.destroyForm = function () {\n    this.parent.grid.editModule.destroyForm();\n  };\n  Edit.prototype.contentready = function (e) {\n    if (!isNullOrUndefined(e.args.requestType) && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save' || this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave')) {\n      this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n      if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n        if (this.parent.grid.dataSource.length === this.parent.getDataRows().length) {\n          this.updateIndex(this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n        }\n      }\n    }\n  };\n  /**\n   * If the row index and field is given, edits the particular cell in a row.\n   *\n   * @returns {void}\n   */\n  Edit.prototype.editCell = function (rowIndex, field) {\n    if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n      if (this.parent.editSettings.mode !== 'Batch') {\n        this.isOnBatch = true;\n        this.updateGridEditMode('Batch');\n      }\n      this.parent.grid.editModule.editCell(rowIndex, field);\n    }\n  };\n  /**\n   * Cancels edited state.\n   *\n   * @returns {void}\n   */\n  Edit.prototype.closeEdit = function () {\n    if (this.parent.enableVirtualization && this.parent.grid.editSettings.mode === 'Batch' && this.parent.grid.pageSettings.currentPage > 1) {\n      this.editedRowIndex = this.parent.grid.editModule.editModule['cellDetails'].rowIndex;\n      this.parent.grid.editModule.editModule['cellDetails'].rowIndex = parseInt(this.parent.getRows()[this.parent.grid.editModule.editModule['cellDetails'].rowIndex].getAttribute('data-rowIndex'), 10);\n    }\n    this.parent.grid.editModule.closeEdit();\n  };\n  return Edit;\n}();\nexport { Edit };","map":{"version":3,"names":["Grid","Edit","GridEdit","getUid","getObject","resetRowIndex","parentsUntil","events","isNullOrUndefined","extend","setValue","removeClass","addClass","getValue","DataManager","RemoteSaveAdaptor","findChildrenRecords","getParentData","isCountRequired","isRemoteData","editAction","updateParentRow","BatchEdit","parent","addedRecords","deletedRecords","prevAriaRowIndex","isAddedRowByMethod","isAddedRowByContextMenu","Inject","isSelfReference","parentIdMapping","previousNewRowPosition","internalProperties","batchEditModule","addEventListener","prototype","getModuleName","on","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","batchCancel","grid","keyPressed","lastCellTab","contentready","cellEdit","editActionEvents","doubleTap","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","e","doubleClickTarget","target","classList","contains","getCurrentViewRecords","length","tr","rowIndex","parseInt","getAttribute","allowPaging","getDataRows","dataset","uid","contentModule","getRows","addArgs","newRowPosition","editSettings","addRowIndex","dataRowIndex","args","mode","trigger","actionBegin","actionComplete","removeEventListener","isDestroyed","off","destroy","applyFormValidation","cols","editModule","eventArgs","eventName","treeObj","adaptor","dataSource","requestType","action","row","Object","keys","selectedIndex","keyData","toString","getPrimaryKeyFieldNames","query","addParams","paramsLength","params","i","key","splice","enableInfiniteScrolling","infiniteAddAction","notify","rowObjects","getRowsObject","newRowObject","newRowObjectIndex","currentData","newRecord","updateInfiniteCurrentViewData","movableRows","movableRowsObject","isCache","infiniteScrollSettings","enableCache","updateIndex","getFrozenColumns","newRowIndex","_this","infiniteData","updateCurrentViewData","size","Math","ceil","pageSettings","pageSize","page","dataIndex","infiniteCurrentViewData","infiniteScrollModule","data","addRowRecord","filter","index","uniqueID","hasChildRecords","childRecords","closest","allowEditing","isEdit","column","getColumnByIndex","isOnBatch","isPrimaryKey","allowEditOnDblClick","setProperties","selectedRowIndex","enableVirtualization","setAttribute","updateGridEditMode","updateMethod","apply","keyPress","closeEdit","deleteUniqueID","value","idFilter","id","promise","prom","undefined","celleditArgs","cancel","enableToolbarItems","resolve","columnObject","request","toolbarModule","toolbarID","element","enableItems","cellDetails","editedRowIndex","treeCell","getCellFromIndex","treeColumnIndex","renderModule","cellRender","rowData","cell","getColumns","updateCell","afterCellSave","querySelector","columnName","row_1","form","parentElement","parentNode","rowIndex_1","primaryKeys_1","freeze","getFrozenLeftColumnsCount","getFrozenRightColumnsCount","indexOf","arg","type","isTabLastRow","eventPromise","editArgs","filterChoiceCount","excelSearchOperator","getDataModule","loadChildOnDemand","crud","update","fromTable","previousValue","then","aggregateModule","refresh","destroyWidgets","getColumnByField","formObj","querySelectorAll","focusModule","restoreFocus","saveArgs","previousData","aggregates","map","ag","showChildSummary","allowNextRowEdit","details","parentData","json","level","taskData","parentItem","parentUniqueID","push","rows","records","j","data1","parentIndex","count","treeColIndex","cells","l","k","data2","treecell","remove","removed","result","match","results","position","getAddRowIndex","getSelectedIndex","getBatchChanges","getBatchRecords","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","expanded","batchChildCount","getBatchChildCount","r","focussedElement","document","activeElement","rowObjectIndex","errors","getContentTable","isScrollByFocus","focus","batchAddedRecords","newlyAddedRecord","seletedRow","beginAddEdit","data_1","primaryKeys_2","_loop_1","this_1","flatData","childs","c","concat","selector","getContent","selectedRecords","getSelectedRecords","idMapping","childRecordCount","currentDataIndex","childMapping","childRecordCount1","currentDataIndex1","isLocalData","deletedValues","childIndex","addRecord","hasOwnProperty","call","addRecords","previousEditMode","previousGridEditMode","updatedRecords","changedRecords","batchSave","editFormValidate","destroyForm","frozenRows","frozenColumns","editCell","field","currentPage"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/edit.js"],"sourcesContent":["import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        this.isAddedRowByMethod = false;\n        this.isAddedRowByContextMenu = false;\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n        if (e.target.classList.contains('e-frame') && this.parent.getCurrentViewRecords().length === 0) {\n            this.doubleClickTarget = null;\n        }\n        if (e.target.classList.contains('e-treegridcollapse') || e.target.classList.contains('e-treegridexpand')) {\n            var tr = parentsUntil(e.target, 'e-row');\n            var rowIndex = tr && parseInt(tr.getAttribute('data-rowindex'), 10);\n            if (!isNullOrUndefined(rowIndex) && rowIndex >= 0 && this.parent.allowPaging) {\n                /* eslint-disable-next-line */\n                this.parent.grid.getDataRows()[rowIndex].dataset.uid = this.parent.grid.contentModule.getRows()[rowIndex].uid;\n            }\n        }\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.dataRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionBegin, args);\n        }\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            args['requestType'] = 'cancel';\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = !isNullOrUndefined(treeObj.dataSource)\n            && treeObj.dataSource.adaptor;\n        if (!isNullOrUndefined(adaptor) && (isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[parseInt(i.toString(), 10)].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getRows();\n            var movableRowsObject = this.parent.grid.getRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[\"\" + infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[parseInt(page.toString(), 10)];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[\"\" + updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        if (!(this.parent.grid.editSettings.allowEditing) || this.parent.grid.isEdit) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('data-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('data-rowindex');\n                tr.setAttribute('data-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n        else if (this.parent.editSettings.mode === 'Cell' && (!column.allowEditing || column.isPrimaryKey)) {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n        if (args.action === 'escape') {\n            this.closeEdit();\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[\"\" + promise];\n        delete args[\"\" + promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex) && this.prevAriaRowIndex !== '-1') {\n            args.row.setAttribute('data-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n                setValue('isEditCollapse', false, this.parent);\n            }\n            if (!args.columnObject.allowEditing) {\n                args.cancel = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['editedRowIndex'] = this.parent.grid.editModule.editModule['index'];\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            if (!isNullOrUndefined(this.editedRowIndex)) {\n                cellDetails.rowIndex = this.editedRowIndex;\n            }\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[\"\" + editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                var freeze = (this.parent.getFrozenLeftColumnsCount() > 0 ||\n                    this.parent.getFrozenRightColumnsCount() > 0) ? true : false;\n                if (freeze) {\n                    if (this.parent.getRows().indexOf(row_1) !== -1) {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                    else {\n                        rowIndex_1 = this.parent.getRows().indexOf(row_1);\n                    }\n                }\n                else {\n                    rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                        this.parent.grid.getRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n                }\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[\"\" + eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        setValue('isEdit', false, this.parent.grid);\n                        this.afterCellSave(args, row_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    if (this.parent['isGantt'] && this.parent.loadChildOnDemand) {\n                        this.updateCell(args, rowIndex_1);\n                        setValue('isEdit', false, this.parent.grid);\n                        this.afterCellSave(args, row_1);\n                    }\n                    else {\n                        var crud = null;\n                        crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                        crud.then(function (e) {\n                            if (!isNullOrUndefined(e)) {\n                                args.rowData[args.columnName] = e[args.columnName];\n                            }\n                            _this.updateCell(args, rowIndex_1);\n                            setValue('isEdit', false, _this.parent.grid);\n                            _this.afterCellSave(args, row_1);\n                        });\n                    }\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n        if (this.parent.enableVirtualization) {\n            this.parent.grid.contentModule['virtualData'] = {};\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row) {\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        if (this.parent.aggregates.map(function (ag) { return ag.showChildSummary === true; }).length) {\n            this.parent.grid.refresh();\n        }\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateCell(rowIndex, args.columnName, args.rowData[args.columnName]);\n        this.parent.grid.getRowsObject()[parseInt(rowIndex.toString(), 10)].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[parseInt(i.toString(), 10)].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[\"\" + key] === data[parseInt(i.toString(), 10)][\"\" + key]) {\n                if (details.action === 'add') {\n                    data[parseInt(i.toString(), 10)].level = this.internalProperties.level;\n                    data[parseInt(i.toString(), 10)].taskData = this.internalProperties.taskData;\n                    data[parseInt(i.toString(), 10)].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[parseInt(i.toString(), 10)].parentItem = this.internalProperties.parentItem;\n                        data[parseInt(i.toString(), 10)].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[parseInt(i.toString(), 10)].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID + '.index', i, this.parent);\n            var adaptor = this.parent.dataSource.adaptor;\n            if ((isRemoteData(this.parent) || adaptor instanceof RemoteSaveAdaptor)) {\n                setValue('uniqueIDCollection.' + data[parseInt(i.toString(), 10)].uniqueID, data[parseInt(i.toString(), 10)], this.parent);\n            }\n            if (!data[parseInt(i.toString(), 10)].level) {\n                this.parent.parentData.push(data[parseInt(i.toString(), 10)]);\n            }\n        }\n        if (!this.parent.enableInfiniteScrolling) {\n            if (details.action === 'add' && this.previousNewRowPosition != null) {\n                this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n                this.previousNewRowPosition = null;\n            }\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[parseInt(j.toString(), 10)];\n            if (!isNullOrUndefined(data1)) {\n                var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n                data1.index = index;\n                if (!isNullOrUndefined(data1.parentItem)) {\n                    var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                    data1.parentItem.index = parentIndex;\n                }\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[parseInt(l.toString(), 10)].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[parseInt(count.toString(), 10)];\n            if (!isNullOrUndefined(data2)) {\n                var index = data2.index;\n                var level = data2.level;\n                var row = rows[parseInt(k.toString(), 10)];\n                if (!isNullOrUndefined(data2.parentItem)) {\n                    index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n                }\n                var treecell = row.cells[parseInt(treeColIndex.toString(), 10)];\n                if (!isNullOrUndefined(treecell)) {\n                    for (var l = 0; l < treecell.classList.length; l++) {\n                        var value = treecell.classList[parseInt(l.toString(), 10)];\n                        var remove = /e-gridrowindex/i;\n                        var removed = /e-griddetailrowindex/i;\n                        var result = value.match(remove);\n                        var results = value.match(removed);\n                        if (result != null) {\n                            removeClass([treecell], value);\n                        }\n                        if (results != null) {\n                            removeClass([treecell], value);\n                        }\n                    }\n                    if (!rows[parseInt(k.toString(), 10)].classList.contains('e-detailrow')) {\n                        addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                    }\n                    else {\n                        addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('data-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[parseInt(index.toString(), 10)]) &&\n                    records[parseInt(index.toString(), 10)].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else if (!this.parent.enableVirtualization) {\n                        index += findChildrenRecords(records[parseInt(index.toString(), 10)]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length - 1) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[\"\" + r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][\"\" + position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[\"\" + r].splice(0, 1);\n                    this.parent.grid.contentModule[\"\" + r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[parseInt(i.toString(), 10)].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                if (!this.parent.enableVirtualization || this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.isScrollByFocus = true;\n                    focussedElement.focus();\n                }\n                if (this.parent.enableVirtualization && !Object.keys(this.parent.grid.contentModule['emptyRowData']).length) {\n                    this.parent.grid.contentModule['createEmptyRowdata']();\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && !isNullOrUndefined(this.addRowIndex) && this.addRowIndex !== -1 && this['isAddedRowByMethod'] && !this.isAddedRowByContextMenu) {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            var batchAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n            var newlyAddedRecord = void 0;\n            if (batchAddedRecords.length) {\n                for (var i = 0; i < batchAddedRecords.length; i++) {\n                    if (isNullOrUndefined(batchAddedRecords[parseInt(i.toString(), 10)].uniqueID)) {\n                        newlyAddedRecord = batchAddedRecords[parseInt(i.toString(), 10)];\n                    }\n                }\n            }\n            var args = {\n                action: 'add',\n                data: newlyAddedRecord,\n                index: index,\n                seletedRow: 0\n            };\n            this.beginAddEdit(args);\n            this.batchEditModule['batchAddRowRecord'].push(this.batchEditModule['addRowRecord']);\n            this.batchEditModule['batchAddedRecords'].push(args['data']);\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && args.requestType !== 'delete' && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data_1 = args.data;\n            if (isNullOrUndefined(args.data[0].uniqueID)) {\n                var primaryKeys_2 = this.parent.getPrimaryKeyFieldNames();\n                var _loop_1 = function (i) {\n                    this_1.parent.flatData.filter(function (e) {\n                        if (e[\"\" + primaryKeys_2[0]] === args.data[parseInt(i.toString(), 10)][primaryKeys_2[0]]) {\n                            data_1[parseInt(i.toString(), 10)] = e;\n                        }\n                    });\n                };\n                var this_1 = this;\n                for (var i = 0; i < data_1.length; i++) {\n                    _loop_1(i);\n                }\n            }\n            for (var i = 0; i < data_1.length; i++) {\n                this.deleteUniqueID(data_1[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(data_1[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                args.data = args.data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add' || (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling))) {\n            if (!(this.parent.grid.selectedRowIndex === -1 && this.isAddedRowByMethod)\n                && args.index === this.parent.grid.selectedRowIndex || args.index === 0) {\n                this.selectedIndex = this.parent.grid.selectedRowIndex;\n            }\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[data-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[data-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                if (this.isAddedRowByMethod && (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                    if (args.index !== 0) {\n                        this.addRowIndex = args.index;\n                    }\n                    else {\n                        this.addRowIndex = this.parent.grid.selectedRowIndex;\n                    }\n                }\n                else {\n                    this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n                }\n            }\n            var selectedRecords = this.parent.getSelectedRecords()[0];\n            if ((this.isAddedRowByMethod || (this.isAddedRowByContextMenu && this.parent.grid.selectedRowIndex !== -1)) &&\n                (this.parent.enableVirtualization || this.parent.enableInfiniteScrolling)) {\n                this.addRowRecord = this.parent.flatData[this.parent.grid.selectedRowIndex];\n                if (this.parent.enableVirtualization && this.isAddedRowByContextMenu) {\n                    this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n                }\n            }\n            else if (!isNullOrUndefined(selectedRecords)) {\n                this.addRowRecord = selectedRecords;\n            }\n        }\n        if (this.isAddedRowByMethod && args.index !== 0) {\n            this.addRowRecord = this.parent.flatData[args.index];\n            this.addRowIndex = args.index;\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child' &&\n            !isNullOrUndefined(this.parent.getSelectedRecords()[0])) {\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        if (isNullOrUndefined(this.addRowRecord) && this.parent.getCurrentViewRecords().length > this.addRowIndex &&\n            args.requestType === 'save' && this.parent.getSelectedRecords().length !== 0) {\n            this.addRowRecord = this.parent.getCurrentViewRecords()[this.addRowIndex];\n        }\n        this.isAddedRowByMethod = false;\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = void 0;\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                currentData = this.parent.flatData;\n            }\n            else if (this.parent.editSettings.mode === 'Batch' && this['isAddedRowByMethod'] && !isNullOrUndefined(this.addRowIndex)) {\n                currentData = this.batchEditModule['batchRecords'];\n            }\n            else {\n                currentData = this.parent.grid.getCurrentViewRecords();\n            }\n            if (this.parent.enableVirtualization && args.index !== 0) {\n                this.addRowIndex = this.parent.flatData.indexOf(this.addRowRecord);\n                this.selectedIndex = this.addRowIndex;\n            }\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? currentData.indexOf(currentData[0]) : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('data-rowindex') : 0;\n            var withinRange = this.parent.enableVirtualization && args.index !== 0 ? true :\n                this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        if (!this.parent.isLocalData && this.parent.editModule.selectedIndex === -1) {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = null;\n                        }\n                        else {\n                            value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        }\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    level = 0;\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[parseInt(i.toString(), 10)].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[parseInt(i.toString(), 10)].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[parseInt(i.toString(), 10)]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        if (this.parent.editSettings.newRowPosition === this.previousNewRowPosition || this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.closeEdit = function () {\n        if (this.parent.enableVirtualization && this.parent.grid.editSettings.mode === 'Batch' && this.parent.grid.pageSettings.currentPage > 1) {\n            this.editedRowIndex = this.parent.grid.editModule.editModule['cellDetails'].rowIndex;\n            this.parent.grid.editModule.editModule['cellDetails'].rowIndex = parseInt(this.parent.getRows()[this.parent.grid.editModule.editModule['cellDetails'].rowIndex].getAttribute('data-rowIndex'), 10);\n        }\n        this.parent.grid.editModule.closeEdit();\n    };\n    return Edit;\n}());\nexport { Edit };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}