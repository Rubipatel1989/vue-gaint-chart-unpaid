{"ast":null,"code":"import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */function () {\n  /**\n   * Constructor for Resize module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function Resize(parent) {\n    Grid.Inject(GridResize);\n    this.parent = parent;\n  }\n  /**\n   * Resize by field names.\n   *\n   * @param  {string|string[]} fName - Defines the field name.\n   * @returns {void}\n   */\n  Resize.prototype.autoFitColumns = function (fName) {\n    this.parent.grid.autoFitColumns(fName);\n  };\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns Resize module name\n   */\n  Resize.prototype.getModuleName = function () {\n    return 'resize';\n  };\n  /**\n   * Destroys the Resize.\n   *\n   * @function destroy\n   * @returns {void}\n   */\n  Resize.prototype.destroy = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.grid.resizeModule.destroy();\n  };\n  return Resize;\n}();\nexport { Resize };","map":{"version":3,"names":["Grid","Resize","GridResize","parent","Inject","prototype","autoFitColumns","fName","grid","getModuleName","destroy","isDestroyed","resizeModule"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/resize.js"],"sourcesContent":["import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,MAAM,IAAIC,UAAU,QAAQ,uBAAuB;AAClE;AACA;AACA;AACA;AACA;AACA,IAAID,MAAM,GAAG,aAAe,YAAY;EACpC;AACJ;AACA;AACA;AACA;EACI,SAASA,MAAMA,CAACE,MAAM,EAAE;IACpBH,IAAI,CAACI,MAAM,CAACF,UAAU,CAAC;IACvB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;AACA;AACA;EACIF,MAAM,CAACI,SAAS,CAACC,cAAc,GAAG,UAAUC,KAAK,EAAE;IAC/C,IAAI,CAACJ,MAAM,CAACK,IAAI,CAACF,cAAc,CAACC,KAAK,CAAC;EAC1C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIN,MAAM,CAACI,SAAS,CAACI,aAAa,GAAG,YAAY;IACzC,OAAO,QAAQ;EACnB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIR,MAAM,CAACI,SAAS,CAACK,OAAO,GAAG,YAAY;IACnC,IAAI,IAAI,CAACP,MAAM,CAACQ,WAAW,EAAE;MACzB;IACJ;IACA,IAAI,CAACR,MAAM,CAACK,IAAI,CAACI,YAAY,CAACF,OAAO,CAAC,CAAC;EAC3C,CAAC;EACD,OAAOT,MAAM;AACjB,CAAC,CAAC,CAAE;AACJ,SAASA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}