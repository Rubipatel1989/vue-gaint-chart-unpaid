{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { TreeGrid, RowDD as TreeGridRowDD } from '@syncfusion/ej2-treegrid';\nimport { isNullOrUndefined, extend, classList, addClass, getValue, closest } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../base/common';\n/**\n * Gantt Excel Export module\n */\nvar RowDD = /** @class */function () {\n  /**\n   * Constructor for Excel Export module\n   *\n   * @param {Gantt} gantt .\n   */\n  function RowDD(gantt) {\n    this.isTest = false;\n    /** @hidden */\n    this.updateParentRecords = [];\n    /** @hidden */\n    this.isaddtoBottom = false;\n    this.updateCollection = {};\n    /** @hidden */\n    this.isSharedTask = false;\n    /** @hidden */\n    this.canDrop = true;\n    this.parent = gantt;\n    TreeGrid.Inject(TreeGridRowDD);\n    this.parent.treeGrid.allowRowDragAndDrop = this.parent.allowRowDragAndDrop;\n    this.bindEvents();\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} .\n   * @private\n   */\n  RowDD.prototype.getModuleName = function () {\n    return 'rowDragAndDrop';\n  };\n  /**\n   * To destroy excel export module.\n   *\n   * @returns {void} .\n   * @private\n   */\n  RowDD.prototype.destroy = function () {\n    // Destroy Method\n  };\n  /**\n   * To bind excel exporting events.\n   *\n   * @returns {void} .\n   * @private\n   */\n  RowDD.prototype.bindEvents = function () {\n    this.parent.treeGrid.rowDragStart = this.rowDragStart.bind(this);\n    this.parent.treeGrid.rowDragStartHelper = this.rowDragStartHelper.bind(this);\n    this.parent.treeGrid.rowDrag = this.rowDrag.bind(this);\n    this.parent.treeGrid.rowDrop = this.rowDrop.bind(this);\n  };\n  RowDD.prototype.rowDragStart = function (args) {\n    this.parent.trigger('rowDragStart', args);\n    this.parent.element.style.position = 'relative'; // for positioning the drag element properly\n  };\n  RowDD.prototype.addErrorElem = function () {\n    var dragelem = document.getElementsByClassName('e-ganttdrag')[0];\n    var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n    if (!errorelem) {\n      var ele = document.createElement('div');\n      classList(ele, ['e-errorcontainer'], []);\n      classList(ele, ['e-icons', 'e-errorelem'], []);\n      var errorVal = dragelem.querySelector('.errorValue');\n      var content = dragelem.querySelector('.e-rowcell').innerHTML;\n      if (errorVal) {\n        content = errorVal.innerHTML;\n        errorVal.parentNode.removeChild(errorVal);\n      }\n      dragelem.querySelector('.e-rowcell').innerHTML = '';\n      var spanContent = document.createElement('span');\n      spanContent.className = 'errorValue';\n      spanContent.style.paddingLeft = '16px';\n      spanContent.innerHTML = content;\n      dragelem.querySelector('.e-rowcell').appendChild(ele);\n      dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n    }\n  };\n  RowDD.prototype.removeErrorElem = function () {\n    var errorelem = document.querySelector('.e-errorelem');\n    if (errorelem) {\n      errorelem.remove();\n    }\n  };\n  RowDD.prototype.rowDrag = function (args) {\n    var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n    cloneElement.style.display = 'none';\n    var ganttDragElement = cloneElement.cloneNode(true);\n    ganttDragElement.classList.add('e-ganttdrag');\n    ganttDragElement.style.display = '';\n    if (this.parent.element.querySelectorAll('.e-cloneproperties').length <= 1) {\n      this.parent.element.appendChild(ganttDragElement);\n    } else {\n      if (document.getElementsByClassName('e-cloneproperties')[0].querySelectorAll('.e-errorelem').length) {\n        this.addErrorElem();\n      } else {\n        this.removeErrorElem();\n      }\n    }\n    if (this.parent.gridLines === 'Both') {\n      addClass(this.parent.element.querySelectorAll('.e-ganttdrag .e-rowcell'), ['e-bothganttlines']);\n    }\n    var dragElement = this.parent.element.querySelector('.e-ganttdrag');\n    var ganttTop = this.parent.element.getClientRects()[0].top;\n    var ganttLeft = this.parent.element.getClientRects()[0].left;\n    var left;\n    var top;\n    if (this.parent.isAdaptive) {\n      /* eslint-disable-next-line */\n      left = args.originalEvent.event.touches[0].clientX - ganttLeft;\n      /* eslint-disable-next-line */\n      top = args.originalEvent.event.touches[0].clientY - ganttTop;\n    } else {\n      left = getValue('event', args.originalEvent).clientX - ganttLeft;\n      top = getValue('event', args.originalEvent).clientY - ganttTop;\n    }\n    dragElement.style.left = left + 20 + 'px';\n    dragElement.style.top = top + 20 + 'px';\n    this.parent.trigger('rowDrag', args);\n  };\n  RowDD.prototype.rowDragStartHelper = function (args) {\n    this.parent.trigger('rowDragStartHelper', args);\n    if (this.parent.readOnly) {\n      args.cancel = true;\n    }\n    if (this.parent.viewType === 'ResourceView' && getValue('level', args.data[0]) === 0) {\n      args.cancel = true;\n    }\n  };\n  RowDD.prototype.rowDrop = function (args) {\n    // const ganttDragelem: Element = document.querySelector('.e-ganttdrag');\n    // if (ganttDragelem) {\n    //     ganttDragelem.remove();\n    // }\n    var gridRow = closest(args.target, '.e-row');\n    this.parent['oldRecords'] = extend([], [], args.data, true);\n    var dropIndex = gridRow ? parseInt(gridRow.getAttribute('data-rowindex'), 10) : args.dropIndex;\n    args.dropIndex = dropIndex;\n    args.dropRecord = this.parent.updatedRecords[args.dropIndex];\n    this.parent.trigger('rowDrop', args);\n    if (this.parent.viewType === 'ResourceView') {\n      if (args.dropPosition === 'middleSegment') {\n        if (args.dropRecord.level === 1 || args.dropRecord.uniqueID === getValue('parentItem', args.data[0]).uniqueID) {\n          args.cancel = true; // preventing to drop the record as child to any child records\n        }\n      }\n      if (args.dropPosition !== 'middleSegment') {\n        if (args.dropRecord.level === 0 || getValue('parentItem', args.data[0]).uniqueID === args.dropRecord.parentItem.uniqueID) {\n          args.cancel = true;\n        }\n      }\n    }\n    if (!args.cancel) {\n      args.requestType = 'beforeDrop';\n      this.parent.trigger('actionBegin', args);\n      if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n        this.parent.showMaskRow();\n      } else {\n        this.parent.showSpinner();\n      }\n      if (!args.cancel) {\n        this.dropRows(args, true); // method to update the data collections based on drop action\n        args.cancel = true;\n      }\n    }\n  };\n  RowDD.prototype.dropRows = function (args, isByMethod) {\n    if (!this.parent.readOnly) {\n      this.dropPosition = args.dropPosition;\n      if (args.dropPosition !== 'Invalid' && this.parent.editModule) {\n        var gObj = this.parent;\n        this.droppedRecord = gObj.updatedRecords[args.dropIndex];\n        if (this.parent.undoRedoModule && this.parent['isUndoRedoItemPresent']('RowDragAndDrop')) {\n          if (!this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            if (this.parent.undoRedoModule['redoEnabled']) {\n              this.parent.undoRedoModule['disableRedo']();\n              this.parent.undoRedoModule['createUndoCollection']();\n            }\n            if (!args.target && this.parent.editModule && this.parent.editModule.taskbarEditModule && this.parent.editModule.taskbarEditModule.taskBarEditAction) {\n              this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = [];\n            } else {\n              this.parent.undoRedoModule['createUndoCollection']();\n            }\n            var datas = [];\n            var _loop_1 = function (i) {\n              datas.push(this_1.parent.flatData.filter(function (data) {\n                return args.data[i]['ganttProperties'].taskId === data.ganttProperties.taskId;\n              })[0]);\n            };\n            var this_1 = this;\n            for (var i = 0; i < args.data.length; i++) {\n              _loop_1(i);\n            }\n            var rowItems = extend([], [], datas, true);\n            var records = {};\n            if (args['name']) {\n              records['action'] = 'RowDragAndDrop';\n            } else {\n              records['action'] = 'TaskbarDragAndDrop';\n            }\n            records['beforeDrop'] = [];\n            var previousDetails = {};\n            previousDetails['dropRecord'] = extend([], [], [args.dropRecord ? args.dropRecord : this.droppedRecord], true)[0];\n            previousDetails['data'] = extend([], [], args.data, true);\n            if (args.dropPosition === 'middleSegment') {\n              previousDetails['dropPosition'] = 'child';\n            } else if (args.dropPosition === 'topSegment') {\n              previousDetails['dropPosition'] = 'above';\n            } else if (args.dropPosition === 'bottomSegment') {\n              previousDetails['dropPosition'] = 'below';\n            }\n            records['afterDrop'] = previousDetails;\n            this.parent.undoRedoModule['findPosition'](rowItems, records, 'beforeDrop');\n            this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = records;\n          }\n          if (this.parent.toolbarModule) {\n            this.parent.toolbarModule.enableItems([this.parent.controlId + '_undo'], true);\n          }\n        }\n        var draggedRecord = void 0;\n        var dragRecords = [];\n        var droppedRecord = this.droppedRecord;\n        if (!args.data[0]) {\n          dragRecords.push(args.data);\n        } else {\n          dragRecords = args.data;\n        }\n        var count = 0;\n        var dragLength = dragRecords.length;\n        var _loop_2 = function (i) {\n          this_2.parent.isOnEdit = true;\n          draggedRecord = dragRecords[i];\n          this_2.draggedRecord = draggedRecord;\n          if (this_2.dropPosition !== 'Invalid') {\n            if (this_2.parent.viewType === 'ResourceView') {\n              this_2.checkisSharedTask();\n              if (this_2.draggedRecord.level !== 0) {\n                this_2.previousParent = this_2.draggedRecord.parentItem.uniqueID;\n              }\n            }\n            if (this_2.isSharedTask) {\n              return {\n                value: void 0\n              };\n            }\n            if (isByMethod) {\n              this_2.deleteDragRow();\n            }\n            var recordIndex1 = this_2.treeGridData.indexOf(droppedRecord);\n            if (this_2.dropPosition === 'topSegment') {\n              this_2.dropAtTop(recordIndex1);\n            }\n            if (this_2.dropPosition === 'bottomSegment') {\n              if (!this_2.isSharedTask) {\n                if (!droppedRecord.hasChildRecords) {\n                  if (this_2.parent.taskFields.parentID && this_2.ganttData.length > 0) {\n                    this_2.ganttData.splice(recordIndex1 + 1, 0, this_2.draggedRecord.taskData);\n                  }\n                  this_2.treeGridData.splice(recordIndex1 + 1, 0, this_2.draggedRecord);\n                  this_2.parent.ids.splice(recordIndex1 + 1, 0, this_2.draggedRecord.ganttProperties.rowUniqueID.toString());\n                  if (this_2.parent.viewType === 'ResourceView') {\n                    var taskId = this_2.draggedRecord.level === 0 ? 'R' + this_2.draggedRecord.ganttProperties.taskId : 'T' + this_2.draggedRecord.ganttProperties.taskId;\n                    this_2.parent.getTaskIds().splice(recordIndex1 + 1, 0, taskId);\n                  }\n                } else {\n                  count = this_2.parent.editModule.getChildCount(droppedRecord, 0);\n                  if (this_2.parent.taskFields.parentID && this_2.ganttData.length > 0) {\n                    this_2.ganttData.splice(recordIndex1 + count + 1, 0, this_2.draggedRecord.taskData);\n                  }\n                  this_2.treeGridData.splice(recordIndex1 + count + 1, 0, this_2.draggedRecord);\n                  /* eslint-disable-next-line */\n                  this_2.parent.ids.splice(recordIndex1 + count + 1, 0, this_2.draggedRecord.ganttProperties.rowUniqueID.toString());\n                  if (this_2.parent.viewType === 'ResourceView') {\n                    var spliceId = this_2.draggedRecord.level === 0 ? 'R' + this_2.draggedRecord.ganttProperties.taskId : 'T' + this_2.draggedRecord.ganttProperties.taskId;\n                    this_2.parent.getTaskIds().splice(recordIndex1 + count + 1, 0, spliceId);\n                  }\n                }\n                this_2.parent.setRecordValue('parentItem', this_2.treeGridData[recordIndex1].parentItem, draggedRecord);\n                this_2.parent.setRecordValue('parentUniqueID', this_2.treeGridData[recordIndex1].parentUniqueID, draggedRecord);\n                this_2.parent.setRecordValue('level', this_2.treeGridData[recordIndex1].level, draggedRecord);\n                if (draggedRecord.hasChildRecords) {\n                  var level = 1;\n                  this_2.updateChildRecordLevel(draggedRecord, level);\n                  this_2.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                }\n                if (droppedRecord.parentItem) {\n                  var rec = this_2.parent.getParentTask(droppedRecord.parentItem).childRecords;\n                  var childRecords = rec;\n                  var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                  childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                }\n              }\n            }\n            if (this_2.dropPosition === 'middleSegment') {\n              this_2.dropMiddle(recordIndex1);\n              if (droppedRecord.childRecords.length > 0) {\n                delete droppedRecord.ganttProperties.segments;\n                delete droppedRecord.taskData[this_2.parent.taskFields.segments];\n              }\n            }\n            if (this_2.treeGridData.length !== 0) {\n              for (var i_1 = 0; i_1 < this_2.treeGridData.length; i_1++) {\n                this_2.treeGridData[parseInt(i_1.toString(), 10)].index = i_1;\n                if (!isNullOrUndefined(this_2.treeGridData[parseInt(i_1.toString(), 10)].parentItem)) {\n                  var updatedParent = getValue('uniqueIDCollection.' + this_2.treeGridData[parseInt(i_1.toString(), 10)].parentUniqueID, this_2.parent.treeGrid);\n                  this_2.treeGridData[parseInt(i_1.toString(), 10)].parentItem.index = updatedParent.index;\n                }\n              }\n            }\n            // eslint-disable-next-line\n            if (!isNullOrUndefined(draggedRecord.parentItem && this_2.updateParentRecords.indexOf(draggedRecord.parentItem) !== -1)) {\n              this_2.updateParentRecords.push(draggedRecord.parentItem);\n            }\n          }\n          if (!this_2.parent.enableVirtualization) {\n            var data_1 = gObj.flatData;\n            var startIndex = void 0;\n            var endIndex = void 0;\n            var ganttData_1 = this_2.parent.dataSource;\n            var uniqueTaskID_1 = this_2.parent.taskFields.id;\n            if (draggedRecord.index < droppedRecord.index) {\n              startIndex = draggedRecord.index;\n              var _loop_4 = function (i_2) {\n                var currentData = this_2.parent.currentViewData.filter(function (e) {\n                  return e[uniqueTaskID_1] === ganttData_1[i_2][uniqueTaskID_1];\n                })[0];\n                if (currentData && currentData.index > droppedRecord.index) {\n                  endIndex = currentData.index;\n                  return \"break\";\n                }\n              };\n              for (var i_2 = 0; i_2 < ganttData_1.length; i_2++) {\n                var state_2 = _loop_4(i_2);\n                if (state_2 === \"break\") break;\n              }\n            } else {\n              startIndex = droppedRecord.index;\n              var _loop_5 = function (i_3) {\n                var currentData = this_2.parent.currentViewData.filter(function (e) {\n                  return e[uniqueTaskID_1] === ganttData_1[i_3][uniqueTaskID_1];\n                })[0];\n                if (currentData && currentData.index > draggedRecord.index) {\n                  endIndex = currentData.index;\n                  return \"break\";\n                }\n              };\n              for (var i_3 = 0; i_3 < ganttData_1.length; i_3++) {\n                var state_3 = _loop_5(i_3);\n                if (state_3 === \"break\") break;\n              }\n            }\n            var _loop_6 = function (i_4) {\n              if (!isNullOrUndefined(data_1[i_4])) {\n                data_1[i_4].index = i_4;\n                if (!isNullOrUndefined(data_1[i_4].parentItem)) {\n                  var updatedParent = data_1.filter(function (e) {\n                    return e.uniqueID === data_1[i_4].parentUniqueID;\n                  })[0];\n                  data_1[i_4].parentItem.index = updatedParent.index;\n                }\n              }\n            };\n            for (var i_4 = startIndex; i_4 <= endIndex; i_4++) {\n              _loop_6(i_4);\n            }\n          }\n          gObj.rowDragAndDropModule.refreshDataSource();\n        };\n        var this_2 = this;\n        for (var i = 0; i < dragLength; i++) {\n          var state_1 = _loop_2(i);\n          if (typeof state_1 === \"object\") return state_1.value;\n        }\n        if (this.dropPosition === 'middleSegment') {\n          if (droppedRecord.ganttProperties.predecessor) {\n            var len = droppedRecord.ganttProperties.predecessor.length;\n            for (var count_1 = 0; count_1 < len; count_1++) {\n              if (droppedRecord.ganttProperties.predecessor && droppedRecord.ganttProperties.predecessor[count_1]) {\n                var fromRecord = this.parent.getRecordByID(droppedRecord.ganttProperties.predecessor[count_1].from);\n                var toRecord = this.parent.getRecordByID(droppedRecord.ganttProperties.predecessor[count_1].to);\n                var validPredecessor = this.parent.connectorLineEditModule.validateParentPredecessor(fromRecord, toRecord);\n                if (droppedRecord.ganttProperties.predecessor && (!validPredecessor || !this.parent.allowParentDependency)) {\n                  this.parent.editModule.removePredecessorOnDelete(droppedRecord);\n                  droppedRecord.ganttProperties.predecessor.splice(0, 1);\n                  if (droppedRecord.ganttProperties.predecessorsName) {\n                    var splittedName = droppedRecord.ganttProperties.predecessorsName.split(',');\n                    for (var i = 0; i < splittedName.length; i++) {\n                      if (splittedName[i].indexOf(draggedRecord.ganttProperties.taskId + '') !== -1) {\n                        splittedName.splice(i, 1);\n                      }\n                    }\n                    var validatedPredecessorNames = splittedName.join();\n                    droppedRecord.ganttProperties.predecessorsName = validatedPredecessorNames;\n                    droppedRecord[this.parent.taskFields.dependency] = validatedPredecessorNames;\n                    droppedRecord.taskData[this.parent.taskFields.dependency] = validatedPredecessorNames;\n                  }\n                }\n              }\n            }\n          }\n          if (droppedRecord.ganttProperties.isMilestone) {\n            this.parent.setRecordValue('isMilestone', false, droppedRecord.ganttProperties, true);\n            if (!isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.milestone])) {\n              if (droppedRecord.taskData[this.parent.taskFields.milestone] === true) {\n                droppedRecord.taskData[this.parent.taskFields.milestone] = false;\n              }\n            }\n          }\n        }\n        if (this.parent.viewType === 'ResourceView' && !this.isSharedTask) {\n          var parentUniqueID = void 0;\n          if (this.dropPosition === 'middleSegment') {\n            parentUniqueID = this.droppedRecord.uniqueID;\n          } else {\n            parentUniqueID = this.droppedRecord.parentItem ? this.droppedRecord.parentItem.uniqueID : this.droppedRecord.uniqueID;\n          }\n          var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n          var editedObj = {};\n          editedObj[this.parent.taskFields.resourceInfo] = [];\n          editedObj[this.parent.taskFields.resourceInfo].push(droppedParentItem.ganttProperties.taskId);\n          this.removeExistingResources();\n          var tempResourceInfo = this.parent.dataOperation.setResourceInfo(editedObj);\n          var currentTask = this.draggedRecord;\n          if (isNullOrUndefined(currentTask.ganttProperties.resourceInfo)) {\n            currentTask.ganttProperties.resourceInfo = [];\n          }\n          if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n            currentTask.ganttProperties.resourceInfo = [];\n            currentTask.ganttProperties.sharedTaskUniqueIds = [currentTask.ganttProperties.rowUniqueID];\n          } else {\n            currentTask.ganttProperties.resourceInfo.push(tempResourceInfo[0]);\n          }\n          this.updateCurrentTask(currentTask);\n          if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n            this.deleteSharedResourceTask();\n          } else {\n            this.updateSharedResourceTask();\n          }\n        }\n        if (this.parent.taskFields.dependency && this.parent.allowParentDependency) {\n          var isValidPredecessor = true;\n          var draggedParent = void 0;\n          var toParent_1;\n          if (draggedRecord.parentItem) {\n            draggedParent = this.parent.flatData[this.parent.ids.indexOf(draggedRecord.parentItem.taskId)];\n          } else {\n            draggedParent = draggedRecord;\n          }\n          if (droppedRecord.parentItem) {\n            toParent_1 = this.parent.flatData[this.parent.ids.indexOf(droppedRecord.parentItem.taskId)];\n          } else {\n            toParent_1 = droppedRecord;\n          }\n          var validateRecords = void 0;\n          if (toParent_1.uniqueID === draggedParent.uniqueID || draggedParent.parentItem && toParent_1.uniqueID === this.parent.flatData[this.parent.ids.indexOf(draggedParent.parentItem.taskId)].uniqueID) {\n            validateRecords = this.parent.currentViewData.filter(function (data) {\n              if (data.ganttProperties.predecessor && data.ganttProperties.predecessor.length > 0) {\n                for (var i = 0; i < data.ganttProperties.predecessor.length; i++) {\n                  return parseInt(data.ganttProperties.predecessor[i].to, 10) === parseInt(toParent_1.ganttProperties.taskId, 10) || parseInt(data.ganttProperties.predecessor[i].from, 10) === parseInt(toParent_1.ganttProperties.taskId, 10);\n                }\n              }\n              return null;\n            });\n            var predName = [];\n            for (var i = 0; i < validateRecords.length; i++) {\n              predName = [];\n              if (validateRecords[i].ganttProperties.predecessor) {\n                for (var k = 0; k < validateRecords[i].ganttProperties.predecessor.length; k++) {\n                  if (parseInt(validateRecords[i].ganttProperties.taskId, 10) !== parseInt(validateRecords[i].ganttProperties.predecessor[k].from, 10)) {\n                    predName.push(validateRecords[i].ganttProperties.predecessor[k].from);\n                  } else {\n                    predName.push(validateRecords[i].ganttProperties.predecessor[k].to);\n                  }\n                }\n              }\n              var _loop_3 = function (j) {\n                var name_1 = predName[j].replace(/\\D/g, '');\n                var toRec = this_3.parent.currentViewData.filter(function (data) {\n                  return parseInt(data.ganttProperties.taskId, 10) === parseInt(name_1, 10);\n                });\n                isValidPredecessor = this_3.parent.connectorLineEditModule.validateParentPredecessor(validateRecords[i], toRec[0]);\n                if (!isValidPredecessor) {\n                  this_3.parent.dataOperation['resetDependency'](validateRecords[i]);\n                  this_3.parent.dataOperation['resetDependency'](toRec[0]);\n                }\n              };\n              var this_3 = this;\n              for (var j = 0; j < predName.length; j++) {\n                _loop_3(j);\n              }\n            }\n          }\n        }\n        // method to update the edited parent records\n        for (var j = 0; j < this.updateParentRecords.length; j++) {\n          this.parent.dataOperation.updateParentItems(this.updateParentRecords[j]);\n        }\n        if (this.parent.viewType === 'ProjectView' && this.parent.editModule && this.parent.editModule.taskbarEditModule && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.predecessorModule && this.parent.undoRedoModule['currentAction']['action'] === 'TaskbarDragAndDrop' && this.parent.undoRedoModule['currentAction']['beforeDrop'][0].position !== 'child') {\n          var dropRec = this.parent.flatData[this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['afterDrop'].dropRecord.ganttProperties.taskId.toString())];\n          this.parent.editModule.taskbarEditModule.taskBarEditRecord = dropRec;\n          this.parent.editModule.taskbarEditModule.taskBarEditAction = 'ChildDrag';\n          this.parent.predecessorModule.validatePredecessor(dropRec, [], '');\n          this.parent.editModule.taskbarEditModule.taskBarEditAction = null;\n        }\n        this.updateParentRecords = [];\n        this.parent.isOnEdit = false;\n      }\n      if (!isNullOrUndefined(this.parent.editModule)) {\n        this.parent.editModule.refreshRecord(args, true);\n      }\n      if (!this.parent.undoRedoModule || this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n        this.parent.previousFlatData = extend([], [], this.parent.flatData, true);\n      }\n    }\n    this.parent['oldRecords'] = [];\n  };\n  RowDD.prototype.updateCurrentTask = function (currentTask) {\n    this.parent.dataOperation.updateMappingData(currentTask, 'resourceInfo');\n    this.parent.editModule.updateResourceRelatedFields(currentTask, 'resource');\n    /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n    this.parent.editModule.dialogModule.dialogEditValidationFlag = false;\n    this.parent.editModule.dialogModule.validateDuration(currentTask);\n    this.parent.dataOperation.updateWidthLeft(currentTask);\n    this.parent.dataOperation.updateTaskData(currentTask);\n  };\n  RowDD.prototype.deleteSharedResourceTask = function () {\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n        if (this.parent.getTaskByUniqueID(this.parent.flatData[i].parentItem.uniqueID).ganttProperties.taskName !== 'Unassigned Task') {\n          this.removeRecords(this.parent.flatData[i]);\n        }\n        if (!isNullOrUndefined(this.parent.flatData[parseInt(i.toString(), 10)].parentItem && this.updateParentRecords.indexOf(this.parent.flatData[parseInt(i.toString(), 10)].parentItem) !== -1)) {\n          this.updateParentRecords.push(this.parent.flatData[i].parentItem);\n        }\n      }\n    }\n  };\n  RowDD.prototype.removeExistingResources = function () {\n    var preParentRecord = this.parent.getTaskByUniqueID(this.previousParent);\n    if (this.draggedRecord.ganttProperties.resourceInfo) {\n      for (var count = 0; count < this.draggedRecord.ganttProperties.resourceInfo.length; count++) {\n        if (this.draggedRecord.ganttProperties.resourceInfo[parseInt(count.toString(), 10)][this.parent.resourceFields.id] === preParentRecord.ganttProperties.taskId) {\n          this.draggedRecord.ganttProperties.resourceInfo.splice(count, 1);\n          break;\n        }\n      }\n    }\n  };\n  /*update the record for the same task which are shared with other tasks*/\n  RowDD.prototype.updateSharedResourceTask = function () {\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n        this.parent.editModule.updateGanttProperties(this.draggedRecord, this.parent.flatData[i]);\n        this.parent.dataOperation.updateTaskData(this.parent.flatData[i]);\n        if (!isNullOrUndefined(this.parent.flatData[parseInt(i.toString(), 10)].parentItem && this.updateParentRecords.indexOf(this.parent.flatData[parseInt(i.toString(), 10)].parentItem) !== -1)) {\n          this.updateParentRecords.push(this.parent.flatData[i].parentItem);\n        }\n      }\n    }\n  };\n  RowDD.prototype._getExistingTaskWithID = function (record) {\n    var existingTasks = [];\n    for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n      if (this.parent.getTaskIds()[i] === 'T' + record.ganttProperties.taskId) {\n        existingTasks.push(this.parent.flatData[i]);\n      }\n    }\n    return existingTasks;\n  };\n  /*Method to remove resource from resource Info collection and update reosurce related fields*/\n  RowDD.prototype.removeResourceInfo = function (record) {\n    var droppedParentItem = this.parent.getTaskByUniqueID(this.draggedRecord.parentItem.uniqueID);\n    if (record.ganttProperties.resourceInfo && record.ganttProperties.resourceInfo.length > 1) {\n      var sameIdTasks = this._getExistingTaskWithID(record);\n      var currentTask = void 0;\n      if (sameIdTasks === null) {\n        return;\n      }\n      for (var i = 0; i < sameIdTasks.length; i++) {\n        currentTask = sameIdTasks[i];\n        var resources = currentTask.ganttProperties.resourceInfo;\n        for (var count = 0; count < resources.length; count++) {\n          if (resources[count][this.parent.resourceFields.id] === droppedParentItem.ganttProperties.taskId) {\n            resources.splice(count, 1);\n            this.parent.setRecordValue('resourceInfo', resources, currentTask.ganttProperties, true);\n            this.updateCurrentTask(currentTask);\n            if (!isNullOrUndefined(currentTask.parentItem && this.updateParentRecords.indexOf(currentTask.parentItem) !== -1)) {\n              this.updateParentRecords.push(currentTask.parentItem);\n            }\n            break;\n          }\n        }\n      }\n    }\n  };\n  RowDD.prototype.refreshDataSource = function () {\n    var draggedRecord = this.draggedRecord;\n    var droppedRecord = this.droppedRecord;\n    var proxy = this.parent;\n    var tempDataSource;\n    var idx;\n    var ganttFields = this.parent.taskFields;\n    if (this.parent.dataSource instanceof DataManager) {\n      tempDataSource = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      tempDataSource = proxy.dataSource;\n    }\n    if (tempDataSource.length > 0 && !isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) {\n      for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n        if (!isNullOrUndefined(droppedRecord.taskData[ganttFields.child]) && tempDataSource[i][ganttFields.child] === droppedRecord.taskData[ganttFields.child]) {\n          idx = i;\n        } else if (isNullOrUndefined(droppedRecord.taskData[ganttFields.child]) && droppedRecord.taskData[ganttFields.id] === tempDataSource[i][ganttFields.id]) {\n          idx = i;\n        }\n      }\n      if (this.dropPosition === 'topSegment') {\n        if (!this.parent.taskFields.parentID) {\n          tempDataSource.splice(idx, 0, draggedRecord.taskData);\n        }\n      } else if (this.dropPosition === 'bottomSegment') {\n        if (!this.parent.taskFields.parentID) {\n          tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n        }\n      }\n    } else if (!this.parent.taskFields.parentID && !isNullOrUndefined(droppedRecord) && droppedRecord.parentItem) {\n      if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n        var rowPosition = this.dropPosition === 'topSegment' ? 'Above' : 'Below';\n        this.parent.editModule.addRowSelectedItem = droppedRecord;\n        this.parent.editModule.updateRealDataSource([draggedRecord], rowPosition);\n        delete this.parent.editModule.addRowSelectedItem;\n      }\n    }\n    if (this.parent.taskFields.parentID) {\n      if (draggedRecord.parentItem) {\n        var droppedId = this.dropPosition === 'middleSegment' ? this.parent.taskFields.id : this.parent.taskFields.parentID;\n        draggedRecord[this.parent.taskFields.parentID] = droppedRecord[droppedId];\n        draggedRecord.ganttProperties.parentId = droppedRecord[droppedId];\n        if (this.parent.viewType === 'ResourceView' && !(this.dropPosition === 'middleSegment') || this.parent.viewType === 'ProjectView') {\n          draggedRecord.taskData[this.parent.taskFields.parentID] = droppedRecord.taskData[droppedId];\n        }\n      } else {\n        draggedRecord[this.parent.taskFields.parentID] = null;\n        draggedRecord.taskData[this.parent.taskFields.parentID] = null;\n        draggedRecord.ganttProperties.parentId = null;\n      }\n    }\n    if (this.parent.viewType === 'ProjectView' && this.parent.editModule && this.parent.editModule.taskbarEditModule && this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.predecessorModule && this.parent.undoRedoModule['currentAction']['action'] === 'TaskbarDragAndDrop') {\n      var dragRec = this.parent.flatData[this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['afterDrop'].data[0].ganttProperties.taskId.toString())];\n      this.parent.editModule.taskbarEditModule.taskBarEditRecord = dragRec;\n      this.parent.editModule.taskbarEditModule.taskBarEditAction = 'ChildDrag';\n      this.parent.predecessorModule.validatePredecessor(dragRec, [], '');\n      this.parent.editModule.taskbarEditModule.taskBarEditAction = null;\n    }\n  };\n  RowDD.prototype.dropMiddle = function (recordIndex1) {\n    var gObj = this.parent;\n    var childRecords = this.parent.editModule.getChildCount(this.droppedRecord, 0);\n    var childRecordsLength = isNullOrUndefined(childRecords) || childRecords === 0 ? recordIndex1 + 1 : childRecords + recordIndex1 + 1;\n    if (this.dropPosition === 'middleSegment' && !this.isSharedTask) {\n      if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n        this.ganttData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n      }\n      this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n      this.parent.ids.splice(childRecordsLength, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n      if (this.parent.viewType === 'ResourceView') {\n        var recordId = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n        this.parent.getTaskIds().splice(childRecordsLength, 0, recordId);\n      }\n      if (this.draggedRecord.hasChildRecords) {\n        this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n      }\n      this.recordLevel();\n      if (isNullOrUndefined(this.draggedRecord.parentItem && this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n        this.updateParentRecords.push(this.draggedRecord.parentItem);\n      }\n    }\n  };\n  RowDD.prototype.recordLevel = function () {\n    var gObj = this.parent;\n    var draggedRecord = this.draggedRecord;\n    var droppedRecord = this.droppedRecord;\n    var childItem = gObj.taskFields.child;\n    if (!droppedRecord.hasChildRecords) {\n      droppedRecord.hasChildRecords = true;\n      if (!droppedRecord.childRecords.length) {\n        droppedRecord.childRecords = [];\n        if (!gObj.taskFields.parentID && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n          droppedRecord.taskData[childItem] = [];\n        }\n      }\n    }\n    if (this.dropPosition === 'middleSegment') {\n      var parentItem = extend({}, droppedRecord);\n      delete parentItem.childRecords;\n      var createParentItem = {\n        uniqueID: parentItem.uniqueID,\n        expanded: parentItem.expanded,\n        level: parentItem.level,\n        index: parentItem.index,\n        taskId: parentItem.ganttProperties.rowUniqueID\n      };\n      this.parent.setRecordValue('parentItem', createParentItem, draggedRecord);\n      this.parent.setRecordValue('parentUniqueID', droppedRecord.uniqueID, draggedRecord);\n      droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n      if (!isNullOrUndefined(draggedRecord) && !gObj.taskFields.parentID && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n        droppedRecord.taskData[gObj.taskFields.child].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n      }\n      if (!draggedRecord.hasChildRecords) {\n        draggedRecord.level = droppedRecord.level + 1;\n      } else {\n        var level = 1;\n        draggedRecord.level = droppedRecord.level + 1;\n        this.parent.setRecordValue('level', this.draggedRecord.level, this.draggedRecord);\n        this.updateChildRecordLevel(draggedRecord, level);\n      }\n      droppedRecord.expanded = true;\n    }\n  };\n  RowDD.prototype.deleteDragRow = function () {\n    this.treeGridData = isCountRequired(this.parent) ? getValue('result', this.parent.treeGrid.dataSource) : this.parent.treeGrid.dataSource;\n    if (this.parent.dataSource instanceof DataManager) {\n      this.ganttData = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      this.ganttData = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) : this.parent.dataSource;\n    }\n    var deletedRow;\n    if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      if (this.parent.viewType === 'ProjectView') {\n        deletedRow = this.parent.flatData[this.parent.ids.indexOf(this.draggedRecord.ganttProperties.taskId.toString())];\n      } else {\n        if (this.draggedRecord.hasChildRecords) {\n          deletedRow = this.parent.flatData['R' + this.parent.taskIds.indexOf(this.draggedRecord.ganttProperties.taskId)];\n        } else {\n          deletedRow = this.parent.flatData['T' + this.parent.taskIds.indexOf(this.draggedRecord.ganttProperties.taskId)];\n        }\n      }\n    } else {\n      deletedRow = this.parent.getTaskByUniqueID(this.draggedRecord.uniqueID);\n    }\n    this.removeRecords(deletedRow);\n  };\n  //method to check the dropped record has already present in the child collection\n  RowDD.prototype.checkisSharedTask = function () {\n    this.isSharedTask = false;\n    var sharedTask = null;\n    // eslint-disable-next-line\n    var parentUniqueID = this.droppedRecord.level === 0 ? this.droppedRecord.uniqueID : this.droppedRecord.parentItem.uniqueID;\n    var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n    var childTasks = droppedParentItem.childRecords;\n    for (var i = 0; i < childTasks.length; i++) {\n      if ('T' + this.draggedRecord.ganttProperties.taskId === 'T' + childTasks[i].ganttProperties.taskId) {\n        this.isSharedTask = true;\n        sharedTask = childTasks[i];\n      }\n    }\n    if (this.isSharedTask) {\n      this.removeResourceInfo(sharedTask);\n    }\n  };\n  RowDD.prototype.dropAtTop = function (recordIndex1) {\n    var gObj = this.parent;\n    if (!this.isSharedTask) {\n      if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n        this.ganttData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n      }\n      this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n      this.parent.ids.splice(recordIndex1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n      this.parent.setRecordValue('parentItem', this.droppedRecord.parentItem, this.draggedRecord);\n      this.parent.setRecordValue('parentUniqueID', this.droppedRecord.parentUniqueID, this.draggedRecord);\n      this.parent.setRecordValue('level', this.droppedRecord.level, this.draggedRecord);\n      if (this.parent.viewType === 'ResourceView') {\n        var id = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n        this.parent.getTaskIds().splice(recordIndex1, 0, id);\n      }\n      if (this.draggedRecord.hasChildRecords) {\n        var level = 1;\n        this.updateChildRecord(this.draggedRecord, recordIndex1);\n        this.updateChildRecordLevel(this.draggedRecord, level);\n      }\n      if (this.droppedRecord.parentItem) {\n        var rec = this.parent.getParentTask(this.droppedRecord.parentItem).childRecords;\n        var childRecords = rec;\n        var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n        childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n      }\n      /* eslint-disable-next-line */\n      if (!isNullOrUndefined(this.draggedRecord.parentItem && this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n        this.updateParentRecords.push(this.draggedRecord.parentItem);\n      }\n    }\n  };\n  RowDD.prototype.updateChildRecordLevel = function (record, level) {\n    var length = 0;\n    var currentRecord;\n    level++;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    length = record.childRecords.length;\n    for (var i = 0; i < length; i++) {\n      currentRecord = record.childRecords[i];\n      var parentData = void 0;\n      if (record.parentItem) {\n        var id = 'uniqueIDCollection';\n        parentData = this.parent.treeGrid[id][record.parentItem.uniqueID];\n      }\n      currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n      this.parent.setRecordValue('level', currentRecord.level, currentRecord);\n      if (currentRecord.hasChildRecords) {\n        level--;\n        level = this.updateChildRecordLevel(currentRecord, level);\n      }\n    }\n    return level;\n  };\n  // eslint-disable-next-line\n  RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n    var currentRecord;\n    var gObj = this.parent;\n    var length = 0;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    length = record.childRecords.length;\n    for (var i = 0; i < length; i++) {\n      currentRecord = record.childRecords[i];\n      count++;\n      gObj.flatData.splice(count, 0, currentRecord);\n      this.parent.ids.splice(count, 0, currentRecord.ganttProperties.rowUniqueID.toString());\n      if (gObj.taskFields.parentID && gObj.dataSource.length > 0) {\n        this.ganttData.splice(count, 0, currentRecord.taskData);\n      }\n      if (currentRecord.hasChildRecords) {\n        count = this.updateChildRecord(currentRecord, count);\n      }\n    }\n    return count;\n  };\n  RowDD.prototype.removeRecords = function (record) {\n    var gObj = this.parent;\n    var dataSource;\n    if (this.parent.dataSource instanceof DataManager) {\n      dataSource = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      dataSource = this.parent.dataSource;\n    }\n    var deletedRow = record;\n    var flatParentData = deletedRow && deletedRow.parentItem ? this.parent.getParentTask(deletedRow.parentItem) : null;\n    if (deletedRow) {\n      if (deletedRow.parentItem) {\n        var childRecords = [];\n        if (flatParentData) {\n          childRecords = flatParentData.childRecords;\n        }\n        var childIndex = 0;\n        if (childRecords && childRecords.length > 0) {\n          if (this.parent.viewType === 'ResourceView' && childRecords.length === 1) {\n            //For updating the parent record which has zero parent reords.\n            this.parent.isOnDelete = true;\n            childRecords[0].isDelete = true;\n            this.parent.dataOperation.updateParentItems(flatParentData);\n            this.parent.isOnDelete = false;\n            childRecords[0].isDelete = false;\n          }\n          childIndex = childRecords.indexOf(deletedRow);\n          flatParentData.childRecords.splice(childIndex, 1);\n          if (!this.parent.taskFields.parentID && flatParentData.taskData[this.parent.taskFields.child]) {\n            flatParentData.taskData[this.parent.taskFields.child].splice(childIndex, 1);\n          }\n          // collection for updating parent record\n          this.updateParentRecords.push(flatParentData);\n        }\n      }\n      //method to delete the record from datasource collection\n      if (!this.parent.taskFields.parentID) {\n        var deleteRecordIDs = [];\n        deleteRecordIDs.push(deletedRow.ganttProperties.taskId.toString());\n        if (this.parent.viewType === 'ProjectView' || this.parent.viewType === 'ResourceView' && this.dropPosition !== 'middleSegment') {\n          this.parent.editModule.removeFromDataSource(deleteRecordIDs);\n        }\n      }\n      if (gObj.taskFields.parentID) {\n        if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n          this.removeChildItem(deletedRow);\n        }\n        var idx = void 0;\n        var ganttData = dataSource.length > 0 && this.parent.viewType !== 'ResourceView' ? dataSource : this.parent.updatedRecords;\n        for (var i = 0; i < ganttData.length; i++) {\n          if (this.parent.viewType === 'ResourceView') {\n            if (ganttData[i].ganttProperties.rowUniqueID === deletedRow.ganttProperties.rowUniqueID) {\n              idx = i;\n            }\n          } else {\n            if (ganttData[i][this.parent.taskFields.id] === deletedRow.taskData[this.parent.taskFields.id]) {\n              idx = i;\n            }\n          }\n        }\n        if (idx !== -1) {\n          if (dataSource.length > 0) {\n            dataSource.splice(idx, 1);\n          }\n          var tempIndex = this.treeGridData.indexOf(deletedRow);\n          this.treeGridData.splice(tempIndex, 1);\n          this.parent.ids.splice(tempIndex, 1);\n          if (this.parent.treeGrid.parentData.indexOf(deletedRow) !== -1) {\n            this.parent.treeGrid.parentData.splice(this.parent.treeGrid.parentData.indexOf(deletedRow), 1);\n          }\n          if (this.parent.viewType === 'ResourceView') {\n            this.parent.getTaskIds().splice(idx, 1);\n          }\n        }\n      }\n      var recordIndex = this.treeGridData.indexOf(deletedRow);\n      if (!gObj.taskFields.parentID) {\n        var deletedRecordCount = this.parent.editModule.getChildCount(deletedRow, 0);\n        this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n        this.parent.ids.splice(recordIndex, deletedRecordCount + 1);\n        var parentIndex = this.ganttData.indexOf(deletedRow.taskData);\n        if (parentIndex !== -1) {\n          this.ganttData.splice(parentIndex, 1);\n          this.parent.treeGrid.parentData.splice(parentIndex, 1);\n        }\n        if (this.parent.viewType === 'ResourceView') {\n          this.parent.getTaskIds().splice(recordIndex, deletedRecordCount + 1);\n        }\n      }\n      if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n        flatParentData.expanded = false;\n        flatParentData.hasChildRecords = false;\n      }\n    }\n  };\n  RowDD.prototype.removeChildItem = function (record) {\n    var currentRecord;\n    var idx;\n    for (var i = 0; i < record.childRecords.length; i++) {\n      currentRecord = record.childRecords[i];\n      var ganttData = void 0;\n      if (this.parent.dataSource instanceof DataManager) {\n        ganttData = getValue('dataOperation.dataArray', this.parent);\n      } else {\n        ganttData = this.parent.dataSource;\n      }\n      for (var j = 0; j < ganttData.length; j++) {\n        if (ganttData[j][this.parent.taskFields.id] === currentRecord.taskData[this.parent.taskFields.id]) {\n          idx = j;\n        }\n      }\n      if (idx !== -1) {\n        if (ganttData.length > 0) {\n          ganttData.splice(idx, 1);\n        }\n        var tempIndex = this.treeGridData.indexOf(currentRecord);\n        this.treeGridData.splice(tempIndex, 1);\n        this.parent.ids.splice(tempIndex, 1);\n        if (this.parent.viewType === 'ResourceView') {\n          this.parent.getTaskIds().splice(idx, 1);\n        }\n      }\n      if (currentRecord.hasChildRecords) {\n        this.removeChildItem(currentRecord);\n      }\n    }\n  };\n  /**\n   * Reorder the rows based on given indexes and position\n   *\n   * @param {number[]} fromIndexes .\n   * @param {number} toIndex .\n   * @param {string} position .\n   * @returns {void} .\n   */\n  RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n    if (!this.parent.readOnly) {\n      if (fromIndexes[0] !== toIndex && (position === 'above' || position === 'below' || position === 'child')) {\n        if (position === 'above') {\n          this.dropPosition = 'topSegment';\n        }\n        if (position === 'below') {\n          this.dropPosition = 'bottomSegment';\n        }\n        if (position === 'child') {\n          this.dropPosition = 'middleSegment';\n        }\n        var prevData = void 0;\n        if (this.parent.undoRedoModule) {\n          prevData = extend([], [], [this.parent.undoRedoModule['currentAction']], true)[0];\n        }\n        var data = [];\n        for (var i = 0; i < fromIndexes.length; i++) {\n          if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && (prevData['action'] === 'RowDragAndDrop' || prevData['action'] === 'TaskbarDragAndDrop')) {\n            data[i] = prevData['beforeDrop'][i].data;\n          } else {\n            data[i] = this.parent.flatData[fromIndexes[i]];\n          }\n        }\n        var isByMethod = true;\n        var args = {\n          data: data,\n          dropIndex: toIndex,\n          dropPosition: this.dropPosition\n        };\n        this.dropRows(args, isByMethod);\n      } else {\n        return;\n      }\n    }\n  };\n  return RowDD;\n}();\nexport { RowDD };","map":{"version":3,"names":["TreeGrid","RowDD","TreeGridRowDD","isNullOrUndefined","extend","classList","addClass","getValue","closest","DataManager","isCountRequired","gantt","isTest","updateParentRecords","isaddtoBottom","updateCollection","isSharedTask","canDrop","parent","Inject","treeGrid","allowRowDragAndDrop","bindEvents","prototype","getModuleName","destroy","rowDragStart","bind","rowDragStartHelper","rowDrag","rowDrop","args","trigger","element","style","position","addErrorElem","dragelem","document","getElementsByClassName","errorelem","querySelectorAll","length","ele","createElement","errorVal","querySelector","content","innerHTML","parentNode","removeChild","spanContent","className","paddingLeft","appendChild","removeErrorElem","remove","cloneElement","display","ganttDragElement","cloneNode","add","gridLines","dragElement","ganttTop","getClientRects","top","ganttLeft","left","isAdaptive","originalEvent","event","touches","clientX","clientY","readOnly","cancel","viewType","data","gridRow","target","dropIndex","parseInt","getAttribute","dropRecord","updatedRecords","dropPosition","level","uniqueID","parentItem","requestType","loadingIndicator","indicatorType","showMaskRow","showSpinner","dropRows","isByMethod","editModule","gObj","droppedRecord","undoRedoModule","taskbarEditModule","taskBarEditAction","datas","_loop_1","i","push","this_1","flatData","filter","taskId","ganttProperties","rowItems","records","previousDetails","toolbarModule","enableItems","controlId","draggedRecord","dragRecords","count","dragLength","_loop_2","this_2","isOnEdit","checkisSharedTask","previousParent","value","deleteDragRow","recordIndex1","treeGridData","indexOf","dropAtTop","hasChildRecords","taskFields","parentID","ganttData","splice","taskData","ids","rowUniqueID","toString","getTaskIds","getChildCount","spliceId","setRecordValue","parentUniqueID","updateChildRecordLevel","updateChildRecord","rec","getParentTask","childRecords","droppedRecordIndex","dropMiddle","segments","i_1","index","updatedParent","enableVirtualization","data_1","startIndex","endIndex","ganttData_1","dataSource","uniqueTaskID_1","id","_loop_4","i_2","currentData","currentViewData","e","state_2","_loop_5","i_3","state_3","_loop_6","i_4","rowDragAndDropModule","refreshDataSource","state_1","predecessor","len","count_1","fromRecord","getRecordByID","from","toRecord","to","validPredecessor","connectorLineEditModule","validateParentPredecessor","allowParentDependency","removePredecessorOnDelete","predecessorsName","splittedName","split","validatedPredecessorNames","join","dependency","isMilestone","milestone","droppedParentItem","getTaskByUniqueID","editedObj","resourceInfo","removeExistingResources","tempResourceInfo","dataOperation","setResourceInfo","currentTask","taskName","sharedTaskUniqueIds","updateCurrentTask","deleteSharedResourceTask","updateSharedResourceTask","isValidPredecessor","draggedParent","toParent_1","validateRecords","predName","k","_loop_3","j","name_1","replace","toRec","this_3","updateParentItems","predecessorModule","dropRec","taskBarEditRecord","validatePredecessor","refreshRecord","previousFlatData","updateMappingData","updateResourceRelatedFields","dialogModule","dialogEditValidationFlag","validateDuration","updateWidthLeft","updateTaskData","removeRecords","preParentRecord","resourceFields","updateGanttProperties","_getExistingTaskWithID","record","existingTasks","removeResourceInfo","sameIdTasks","resources","proxy","tempDataSource","idx","ganttFields","Object","keys","child","rowPosition","addRowSelectedItem","updateRealDataSource","droppedId","parentId","dragRec","childRecordsLength","recordId","expanded","recordLevel","childItem","createParentItem","deletedRow","taskIds","sharedTask","childTasks","currentRecord","parentData","flatParentData","childIndex","isOnDelete","isDelete","deleteRecordIDs","removeFromDataSource","removeChildItem","tempIndex","recordIndex","deletedRecordCount","parentIndex","reorderRows","fromIndexes","toIndex","prevData"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/rowdragdrop.js"],"sourcesContent":["import { TreeGrid, RowDD as TreeGridRowDD } from '@syncfusion/ej2-treegrid';\nimport { isNullOrUndefined, extend, classList, addClass, getValue, closest } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../base/common';\n/**\n * Gantt Excel Export module\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {Gantt} gantt .\n     */\n    function RowDD(gantt) {\n        this.isTest = false;\n        /** @hidden */\n        this.updateParentRecords = [];\n        /** @hidden */\n        this.isaddtoBottom = false;\n        this.updateCollection = {};\n        /** @hidden */\n        this.isSharedTask = false;\n        /** @hidden */\n        this.canDrop = true;\n        this.parent = gantt;\n        TreeGrid.Inject(TreeGridRowDD);\n        this.parent.treeGrid.allowRowDragAndDrop = this.parent.allowRowDragAndDrop;\n        this.bindEvents();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} .\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    /**\n     * To destroy excel export module.\n     *\n     * @returns {void} .\n     * @private\n     */\n    RowDD.prototype.destroy = function () {\n        // Destroy Method\n    };\n    /**\n     * To bind excel exporting events.\n     *\n     * @returns {void} .\n     * @private\n     */\n    RowDD.prototype.bindEvents = function () {\n        this.parent.treeGrid.rowDragStart = this.rowDragStart.bind(this);\n        this.parent.treeGrid.rowDragStartHelper = this.rowDragStartHelper.bind(this);\n        this.parent.treeGrid.rowDrag = this.rowDrag.bind(this);\n        this.parent.treeGrid.rowDrop = this.rowDrop.bind(this);\n    };\n    RowDD.prototype.rowDragStart = function (args) {\n        this.parent.trigger('rowDragStart', args);\n        this.parent.element.style.position = 'relative'; // for positioning the drag element properly\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-ganttdrag')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.rowDrag = function (args) {\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.display = 'none';\n        var ganttDragElement = cloneElement.cloneNode(true);\n        ganttDragElement.classList.add('e-ganttdrag');\n        ganttDragElement.style.display = '';\n        if (this.parent.element.querySelectorAll('.e-cloneproperties').length <= 1) {\n            this.parent.element.appendChild(ganttDragElement);\n        }\n        else {\n            if (document.getElementsByClassName('e-cloneproperties')[0].querySelectorAll('.e-errorelem').length) {\n                this.addErrorElem();\n            }\n            else {\n                this.removeErrorElem();\n            }\n        }\n        if (this.parent.gridLines === 'Both') {\n            addClass(this.parent.element.querySelectorAll('.e-ganttdrag .e-rowcell'), ['e-bothganttlines']);\n        }\n        var dragElement = this.parent.element.querySelector('.e-ganttdrag');\n        var ganttTop = this.parent.element.getClientRects()[0].top;\n        var ganttLeft = this.parent.element.getClientRects()[0].left;\n        var left;\n        var top;\n        if (this.parent.isAdaptive) {\n            /* eslint-disable-next-line */\n            left = args.originalEvent.event.touches[0].clientX - ganttLeft;\n            /* eslint-disable-next-line */\n            top = args.originalEvent.event.touches[0].clientY - ganttTop;\n        }\n        else {\n            left = getValue('event', args.originalEvent).clientX - ganttLeft;\n            top = getValue('event', args.originalEvent).clientY - ganttTop;\n        }\n        dragElement.style.left = left + 20 + 'px';\n        dragElement.style.top = top + 20 + 'px';\n        this.parent.trigger('rowDrag', args);\n    };\n    RowDD.prototype.rowDragStartHelper = function (args) {\n        this.parent.trigger('rowDragStartHelper', args);\n        if (this.parent.readOnly) {\n            args.cancel = true;\n        }\n        if (this.parent.viewType === 'ResourceView' && getValue('level', args.data[0]) === 0) {\n            args.cancel = true;\n        }\n    };\n    RowDD.prototype.rowDrop = function (args) {\n        // const ganttDragelem: Element = document.querySelector('.e-ganttdrag');\n        // if (ganttDragelem) {\n        //     ganttDragelem.remove();\n        // }\n        var gridRow = closest(args.target, '.e-row');\n        this.parent['oldRecords'] = extend([], [], args.data, true);\n        var dropIndex = gridRow ? parseInt(gridRow.getAttribute('data-rowindex'), 10) : args.dropIndex;\n        args.dropIndex = dropIndex;\n        args.dropRecord = this.parent.updatedRecords[args.dropIndex];\n        this.parent.trigger('rowDrop', args);\n        if (this.parent.viewType === 'ResourceView') {\n            if (args.dropPosition === 'middleSegment') {\n                if (args.dropRecord.level === 1 || args.dropRecord.uniqueID === getValue('parentItem', args.data[0]).uniqueID) {\n                    args.cancel = true; // preventing to drop the record as child to any child records\n                }\n            }\n            if (args.dropPosition !== 'middleSegment') {\n                if (args.dropRecord.level === 0 || getValue('parentItem', args.data[0]).uniqueID === args.dropRecord.parentItem.uniqueID) {\n                    args.cancel = true;\n                }\n            }\n        }\n        if (!args.cancel) {\n            args.requestType = 'beforeDrop';\n            this.parent.trigger('actionBegin', args);\n            if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                this.parent.showMaskRow();\n            }\n            else {\n                this.parent.showSpinner();\n            }\n            if (!args.cancel) {\n                this.dropRows(args, true); // method to update the data collections based on drop action\n                args.cancel = true;\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (!this.parent.readOnly) {\n            this.dropPosition = args.dropPosition;\n            if (args.dropPosition !== 'Invalid' && this.parent.editModule) {\n                var gObj = this.parent;\n                this.droppedRecord = gObj.updatedRecords[args.dropIndex];\n                if (this.parent.undoRedoModule && (this.parent['isUndoRedoItemPresent']('RowDragAndDrop'))) {\n                    if (!this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                        if (this.parent.undoRedoModule['redoEnabled']) {\n                            this.parent.undoRedoModule['disableRedo']();\n                            this.parent.undoRedoModule['createUndoCollection']();\n                        }\n                        if (!args.target && this.parent.editModule && this.parent.editModule.taskbarEditModule &&\n                            this.parent.editModule.taskbarEditModule.taskBarEditAction) {\n                            this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = [];\n                        }\n                        else {\n                            this.parent.undoRedoModule['createUndoCollection']();\n                        }\n                        var datas = [];\n                        var _loop_1 = function (i) {\n                            datas.push(this_1.parent.flatData.filter(function (data) {\n                                return args.data[i]['ganttProperties'].taskId === data.ganttProperties.taskId;\n                            })[0]);\n                        };\n                        var this_1 = this;\n                        for (var i = 0; i < args.data.length; i++) {\n                            _loop_1(i);\n                        }\n                        var rowItems = extend([], [], datas, true);\n                        var records = {};\n                        if (args['name']) {\n                            records['action'] = 'RowDragAndDrop';\n                        }\n                        else {\n                            records['action'] = 'TaskbarDragAndDrop';\n                        }\n                        records['beforeDrop'] = [];\n                        var previousDetails = {};\n                        previousDetails['dropRecord'] = extend([], [], [args.dropRecord ? args.dropRecord : this.droppedRecord], true)[0];\n                        previousDetails['data'] = extend([], [], args.data, true);\n                        if (args.dropPosition === 'middleSegment') {\n                            previousDetails['dropPosition'] = 'child';\n                        }\n                        else if (args.dropPosition === 'topSegment') {\n                            previousDetails['dropPosition'] = 'above';\n                        }\n                        else if (args.dropPosition === 'bottomSegment') {\n                            previousDetails['dropPosition'] = 'below';\n                        }\n                        records['afterDrop'] = previousDetails;\n                        this.parent.undoRedoModule['findPosition'](rowItems, records, 'beforeDrop');\n                        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = records;\n                    }\n                    if (this.parent.toolbarModule) {\n                        this.parent.toolbarModule.enableItems([this.parent.controlId + '_undo'], true);\n                    }\n                }\n                var draggedRecord = void 0;\n                var dragRecords = [];\n                var droppedRecord = this.droppedRecord;\n                if (!args.data[0]) {\n                    dragRecords.push(args.data);\n                }\n                else {\n                    dragRecords = args.data;\n                }\n                var count = 0;\n                var dragLength = dragRecords.length;\n                var _loop_2 = function (i) {\n                    this_2.parent.isOnEdit = true;\n                    draggedRecord = dragRecords[i];\n                    this_2.draggedRecord = draggedRecord;\n                    if (this_2.dropPosition !== 'Invalid') {\n                        if (this_2.parent.viewType === 'ResourceView') {\n                            this_2.checkisSharedTask();\n                            if (this_2.draggedRecord.level !== 0) {\n                                this_2.previousParent = this_2.draggedRecord.parentItem.uniqueID;\n                            }\n                        }\n                        if (this_2.isSharedTask) {\n                            return { value: void 0 };\n                        }\n                        if (isByMethod) {\n                            this_2.deleteDragRow();\n                        }\n                        var recordIndex1 = this_2.treeGridData.indexOf(droppedRecord);\n                        if (this_2.dropPosition === 'topSegment') {\n                            this_2.dropAtTop(recordIndex1);\n                        }\n                        if (this_2.dropPosition === 'bottomSegment') {\n                            if (!this_2.isSharedTask) {\n                                if (!droppedRecord.hasChildRecords) {\n                                    if (this_2.parent.taskFields.parentID && this_2.ganttData.length > 0) {\n                                        this_2.ganttData.splice(recordIndex1 + 1, 0, this_2.draggedRecord.taskData);\n                                    }\n                                    this_2.treeGridData.splice(recordIndex1 + 1, 0, this_2.draggedRecord);\n                                    this_2.parent.ids.splice(recordIndex1 + 1, 0, this_2.draggedRecord.ganttProperties.rowUniqueID.toString());\n                                    if (this_2.parent.viewType === 'ResourceView') {\n                                        var taskId = this_2.draggedRecord.level === 0 ? 'R' + this_2.draggedRecord.ganttProperties.taskId : 'T' + this_2.draggedRecord.ganttProperties.taskId;\n                                        this_2.parent.getTaskIds().splice(recordIndex1 + 1, 0, taskId);\n                                    }\n                                }\n                                else {\n                                    count = this_2.parent.editModule.getChildCount(droppedRecord, 0);\n                                    if (this_2.parent.taskFields.parentID && this_2.ganttData.length > 0) {\n                                        this_2.ganttData.splice(recordIndex1 + count + 1, 0, this_2.draggedRecord.taskData);\n                                    }\n                                    this_2.treeGridData.splice(recordIndex1 + count + 1, 0, this_2.draggedRecord);\n                                    /* eslint-disable-next-line */\n                                    this_2.parent.ids.splice(recordIndex1 + count + 1, 0, this_2.draggedRecord.ganttProperties.rowUniqueID.toString());\n                                    if (this_2.parent.viewType === 'ResourceView') {\n                                        var spliceId = this_2.draggedRecord.level === 0 ? 'R' + this_2.draggedRecord.ganttProperties.taskId : 'T' + this_2.draggedRecord.ganttProperties.taskId;\n                                        this_2.parent.getTaskIds().splice(recordIndex1 + count + 1, 0, spliceId);\n                                    }\n                                }\n                                this_2.parent.setRecordValue('parentItem', this_2.treeGridData[recordIndex1].parentItem, draggedRecord);\n                                this_2.parent.setRecordValue('parentUniqueID', this_2.treeGridData[recordIndex1].parentUniqueID, draggedRecord);\n                                this_2.parent.setRecordValue('level', this_2.treeGridData[recordIndex1].level, draggedRecord);\n                                if (draggedRecord.hasChildRecords) {\n                                    var level = 1;\n                                    this_2.updateChildRecordLevel(draggedRecord, level);\n                                    this_2.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                                }\n                                if (droppedRecord.parentItem) {\n                                    var rec = this_2.parent.getParentTask(droppedRecord.parentItem).childRecords;\n                                    var childRecords = rec;\n                                    var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                                    childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                                }\n                            }\n                        }\n                        if (this_2.dropPosition === 'middleSegment') {\n                            this_2.dropMiddle(recordIndex1);\n                            if (droppedRecord.childRecords.length > 0) {\n                                delete droppedRecord.ganttProperties.segments;\n                                delete droppedRecord.taskData[this_2.parent.taskFields.segments];\n                            }\n                        }\n                        if (this_2.treeGridData.length !== 0) {\n                            for (var i_1 = 0; i_1 < this_2.treeGridData.length; i_1++) {\n                                this_2.treeGridData[parseInt(i_1.toString(), 10)].index = i_1;\n                                if (!isNullOrUndefined(this_2.treeGridData[parseInt(i_1.toString(), 10)].parentItem)) {\n                                    var updatedParent = getValue('uniqueIDCollection.' + this_2.treeGridData[parseInt(i_1.toString(), 10)].parentUniqueID, this_2.parent.treeGrid);\n                                    this_2.treeGridData[parseInt(i_1.toString(), 10)].parentItem.index = updatedParent.index;\n                                }\n                            }\n                        }\n                        // eslint-disable-next-line\n                        if (!isNullOrUndefined(draggedRecord.parentItem && this_2.updateParentRecords.indexOf(draggedRecord.parentItem) !== -1)) {\n                            this_2.updateParentRecords.push(draggedRecord.parentItem);\n                        }\n                    }\n                    if (!this_2.parent.enableVirtualization) {\n                        var data_1 = gObj.flatData;\n                        var startIndex = void 0;\n                        var endIndex = void 0;\n                        var ganttData_1 = this_2.parent.dataSource;\n                        var uniqueTaskID_1 = this_2.parent.taskFields.id;\n                        if (draggedRecord.index < droppedRecord.index) {\n                            startIndex = draggedRecord.index;\n                            var _loop_4 = function (i_2) {\n                                var currentData = this_2.parent.currentViewData.filter(function (e) {\n                                    return e[uniqueTaskID_1] === ganttData_1[i_2][uniqueTaskID_1];\n                                })[0];\n                                if (currentData && currentData.index > droppedRecord.index) {\n                                    endIndex = currentData.index;\n                                    return \"break\";\n                                }\n                            };\n                            for (var i_2 = 0; i_2 < ganttData_1.length; i_2++) {\n                                var state_2 = _loop_4(i_2);\n                                if (state_2 === \"break\")\n                                    break;\n                            }\n                        }\n                        else {\n                            startIndex = droppedRecord.index;\n                            var _loop_5 = function (i_3) {\n                                var currentData = this_2.parent.currentViewData.filter(function (e) {\n                                    return e[uniqueTaskID_1] === ganttData_1[i_3][uniqueTaskID_1];\n                                })[0];\n                                if (currentData && currentData.index > draggedRecord.index) {\n                                    endIndex = currentData.index;\n                                    return \"break\";\n                                }\n                            };\n                            for (var i_3 = 0; i_3 < ganttData_1.length; i_3++) {\n                                var state_3 = _loop_5(i_3);\n                                if (state_3 === \"break\")\n                                    break;\n                            }\n                        }\n                        var _loop_6 = function (i_4) {\n                            if (!isNullOrUndefined(data_1[i_4])) {\n                                data_1[i_4].index = i_4;\n                                if (!isNullOrUndefined(data_1[i_4].parentItem)) {\n                                    var updatedParent = data_1.filter(function (e) {\n                                        return e.uniqueID === data_1[i_4].parentUniqueID;\n                                    })[0];\n                                    data_1[i_4].parentItem.index = updatedParent.index;\n                                }\n                            }\n                        };\n                        for (var i_4 = startIndex; i_4 <= endIndex; i_4++) {\n                            _loop_6(i_4);\n                        }\n                    }\n                    gObj.rowDragAndDropModule.refreshDataSource();\n                };\n                var this_2 = this;\n                for (var i = 0; i < dragLength; i++) {\n                    var state_1 = _loop_2(i);\n                    if (typeof state_1 === \"object\")\n                        return state_1.value;\n                }\n                if (this.dropPosition === 'middleSegment') {\n                    if (droppedRecord.ganttProperties.predecessor) {\n                        var len = droppedRecord.ganttProperties.predecessor.length;\n                        for (var count_1 = 0; count_1 < len; count_1++) {\n                            if (droppedRecord.ganttProperties.predecessor && droppedRecord.ganttProperties.predecessor[count_1]) {\n                                var fromRecord = this.parent.getRecordByID(droppedRecord.ganttProperties.predecessor[count_1].from);\n                                var toRecord = this.parent.getRecordByID(droppedRecord.ganttProperties.predecessor[count_1].to);\n                                var validPredecessor = this.parent.connectorLineEditModule.validateParentPredecessor(fromRecord, toRecord);\n                                if (droppedRecord.ganttProperties.predecessor && (!validPredecessor ||\n                                    !this.parent.allowParentDependency)) {\n                                    this.parent.editModule.removePredecessorOnDelete(droppedRecord);\n                                    droppedRecord.ganttProperties.predecessor.splice(0, 1);\n                                    if (droppedRecord.ganttProperties.predecessorsName) {\n                                        var splittedName = droppedRecord.ganttProperties.predecessorsName.split(',');\n                                        for (var i = 0; i < splittedName.length; i++) {\n                                            if (splittedName[i].indexOf(draggedRecord.ganttProperties.taskId + '') !== -1) {\n                                                splittedName.splice(i, 1);\n                                            }\n                                        }\n                                        var validatedPredecessorNames = splittedName.join();\n                                        droppedRecord.ganttProperties.predecessorsName = validatedPredecessorNames;\n                                        droppedRecord[this.parent.taskFields.dependency] = validatedPredecessorNames;\n                                        droppedRecord.taskData[this.parent.taskFields.dependency] = validatedPredecessorNames;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (droppedRecord.ganttProperties.isMilestone) {\n                        this.parent.setRecordValue('isMilestone', false, droppedRecord.ganttProperties, true);\n                        if (!isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.milestone])) {\n                            if (droppedRecord.taskData[this.parent.taskFields.milestone] === true) {\n                                droppedRecord.taskData[this.parent.taskFields.milestone] = false;\n                            }\n                        }\n                    }\n                }\n                if (this.parent.viewType === 'ResourceView' && !this.isSharedTask) {\n                    var parentUniqueID = void 0;\n                    if (this.dropPosition === 'middleSegment') {\n                        parentUniqueID = this.droppedRecord.uniqueID;\n                    }\n                    else {\n                        parentUniqueID = this.droppedRecord.parentItem ?\n                            this.droppedRecord.parentItem.uniqueID : this.droppedRecord.uniqueID;\n                    }\n                    var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n                    var editedObj = {};\n                    editedObj[this.parent.taskFields.resourceInfo] = [];\n                    editedObj[this.parent.taskFields.resourceInfo].push(droppedParentItem.ganttProperties.taskId);\n                    this.removeExistingResources();\n                    var tempResourceInfo = this.parent.dataOperation.setResourceInfo(editedObj);\n                    var currentTask = this.draggedRecord;\n                    if (isNullOrUndefined(currentTask.ganttProperties.resourceInfo)) {\n                        currentTask.ganttProperties.resourceInfo = [];\n                    }\n                    if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n                        currentTask.ganttProperties.resourceInfo = [];\n                        currentTask.ganttProperties.sharedTaskUniqueIds = [currentTask.ganttProperties.rowUniqueID];\n                    }\n                    else {\n                        currentTask.ganttProperties.resourceInfo.push(tempResourceInfo[0]);\n                    }\n                    this.updateCurrentTask(currentTask);\n                    if (droppedParentItem.ganttProperties.taskName === 'Unassigned Task') {\n                        this.deleteSharedResourceTask();\n                    }\n                    else {\n                        this.updateSharedResourceTask();\n                    }\n                }\n                if (this.parent.taskFields.dependency && this.parent.allowParentDependency) {\n                    var isValidPredecessor = true;\n                    var draggedParent = void 0;\n                    var toParent_1;\n                    if (draggedRecord.parentItem) {\n                        draggedParent = this.parent.flatData[this.parent.ids.indexOf(draggedRecord.parentItem.taskId)];\n                    }\n                    else {\n                        draggedParent = draggedRecord;\n                    }\n                    if (droppedRecord.parentItem) {\n                        toParent_1 = this.parent.flatData[this.parent.ids.indexOf(droppedRecord.parentItem.taskId)];\n                    }\n                    else {\n                        toParent_1 = droppedRecord;\n                    }\n                    var validateRecords = void 0;\n                    if (toParent_1.uniqueID === draggedParent.uniqueID || (draggedParent.parentItem &&\n                        toParent_1.uniqueID === this.parent.flatData[this.parent.ids.indexOf(draggedParent.parentItem.taskId)].uniqueID)) {\n                        validateRecords = this.parent.currentViewData.filter(function (data) {\n                            if ((data.ganttProperties.predecessor && data.ganttProperties.predecessor.length > 0)) {\n                                for (var i = 0; i < data.ganttProperties.predecessor.length; i++) {\n                                    return (parseInt(data.ganttProperties.predecessor[i].to, 10) ===\n                                        parseInt(toParent_1.ganttProperties.taskId, 10) ||\n                                        parseInt(data.ganttProperties.predecessor[i].from, 10) ===\n                                            parseInt(toParent_1.ganttProperties.taskId, 10));\n                                }\n                            }\n                            return null;\n                        });\n                        var predName = [];\n                        for (var i = 0; i < validateRecords.length; i++) {\n                            predName = [];\n                            if (validateRecords[i].ganttProperties.predecessor) {\n                                for (var k = 0; k < validateRecords[i].ganttProperties.predecessor.length; k++) {\n                                    if (parseInt(validateRecords[i].ganttProperties.taskId, 10) !==\n                                        parseInt(validateRecords[i].ganttProperties.predecessor[k].from, 10)) {\n                                        predName.push(validateRecords[i].ganttProperties.predecessor[k].from);\n                                    }\n                                    else {\n                                        predName.push(validateRecords[i].ganttProperties.predecessor[k].to);\n                                    }\n                                }\n                            }\n                            var _loop_3 = function (j) {\n                                var name_1 = predName[j].replace(/\\D/g, '');\n                                var toRec = this_3.parent.currentViewData.filter(function (data) {\n                                    return parseInt(data.ganttProperties.taskId, 10) === parseInt(name_1, 10);\n                                });\n                                isValidPredecessor = this_3.parent.connectorLineEditModule.validateParentPredecessor(validateRecords[i], toRec[0]);\n                                if (!isValidPredecessor) {\n                                    this_3.parent.dataOperation['resetDependency'](validateRecords[i]);\n                                    this_3.parent.dataOperation['resetDependency'](toRec[0]);\n                                }\n                            };\n                            var this_3 = this;\n                            for (var j = 0; j < predName.length; j++) {\n                                _loop_3(j);\n                            }\n                        }\n                    }\n                }\n                // method to update the edited parent records\n                for (var j = 0; j < this.updateParentRecords.length; j++) {\n                    this.parent.dataOperation.updateParentItems(this.updateParentRecords[j]);\n                }\n                if (this.parent.viewType === 'ProjectView' && this.parent.editModule &&\n                    this.parent.editModule.taskbarEditModule && this.parent.undoRedoModule &&\n                    this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.predecessorModule &&\n                    this.parent.undoRedoModule['currentAction']['action'] === 'TaskbarDragAndDrop' &&\n                    this.parent.undoRedoModule['currentAction']['beforeDrop'][0].position !== 'child') {\n                    var dropRec = this.parent.flatData[this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['afterDrop'].dropRecord.ganttProperties.taskId.toString())];\n                    this.parent.editModule.taskbarEditModule.taskBarEditRecord = dropRec;\n                    this.parent.editModule.taskbarEditModule.taskBarEditAction = 'ChildDrag';\n                    this.parent.predecessorModule.validatePredecessor(dropRec, [], '');\n                    this.parent.editModule.taskbarEditModule.taskBarEditAction = null;\n                }\n                this.updateParentRecords = [];\n                this.parent.isOnEdit = false;\n            }\n            if (!isNullOrUndefined(this.parent.editModule)) {\n                this.parent.editModule.refreshRecord(args, true);\n            }\n            if (!this.parent.undoRedoModule || (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'])) {\n                this.parent.previousFlatData = extend([], [], this.parent.flatData, true);\n            }\n        }\n        this.parent['oldRecords'] = [];\n    };\n    RowDD.prototype.updateCurrentTask = function (currentTask) {\n        this.parent.dataOperation.updateMappingData(currentTask, 'resourceInfo');\n        this.parent.editModule.updateResourceRelatedFields(currentTask, 'resource');\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        this.parent.editModule.dialogModule.dialogEditValidationFlag = false;\n        this.parent.editModule.dialogModule.validateDuration(currentTask);\n        this.parent.dataOperation.updateWidthLeft(currentTask);\n        this.parent.dataOperation.updateTaskData(currentTask);\n    };\n    RowDD.prototype.deleteSharedResourceTask = function () {\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n                if (this.parent.getTaskByUniqueID(this.parent.flatData[i].parentItem.uniqueID).ganttProperties.taskName !== 'Unassigned Task') {\n                    this.removeRecords(this.parent.flatData[i]);\n                }\n                if (!isNullOrUndefined(this.parent.flatData[parseInt(i.toString(), 10)].parentItem &&\n                    this.updateParentRecords.indexOf(this.parent.flatData[parseInt(i.toString(), 10)].parentItem) !== -1)) {\n                    this.updateParentRecords.push(this.parent.flatData[i].parentItem);\n                }\n            }\n        }\n    };\n    RowDD.prototype.removeExistingResources = function () {\n        var preParentRecord = this.parent.getTaskByUniqueID(this.previousParent);\n        if (this.draggedRecord.ganttProperties.resourceInfo) {\n            for (var count = 0; count < this.draggedRecord.ganttProperties.resourceInfo.length; count++) {\n                if (this.draggedRecord.ganttProperties.resourceInfo[parseInt(count.toString(), 10)][this.parent.resourceFields.id] ===\n                    preParentRecord.ganttProperties.taskId) {\n                    this.draggedRecord.ganttProperties.resourceInfo.splice(count, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /*update the record for the same task which are shared with other tasks*/\n    RowDD.prototype.updateSharedResourceTask = function () {\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            if (this.parent.getTaskIds()[i] === 'T' + this.draggedRecord.ganttProperties.taskId) {\n                this.parent.editModule.updateGanttProperties(this.draggedRecord, this.parent.flatData[i]);\n                this.parent.dataOperation.updateTaskData(this.parent.flatData[i]);\n                if (!isNullOrUndefined(this.parent.flatData[parseInt(i.toString(), 10)].parentItem &&\n                    this.updateParentRecords.indexOf(this.parent.flatData[parseInt(i.toString(), 10)].parentItem) !== -1)) {\n                    this.updateParentRecords.push(this.parent.flatData[i].parentItem);\n                }\n            }\n        }\n    };\n    RowDD.prototype._getExistingTaskWithID = function (record) {\n        var existingTasks = [];\n        for (var i = 0; i < this.parent.getTaskIds().length; i++) {\n            if (this.parent.getTaskIds()[i] === 'T' + record.ganttProperties.taskId) {\n                existingTasks.push(this.parent.flatData[i]);\n            }\n        }\n        return existingTasks;\n    };\n    /*Method to remove resource from resource Info collection and update reosurce related fields*/\n    RowDD.prototype.removeResourceInfo = function (record) {\n        var droppedParentItem = this.parent.getTaskByUniqueID(this.draggedRecord.parentItem.uniqueID);\n        if (record.ganttProperties.resourceInfo && record.ganttProperties.resourceInfo.length > 1) {\n            var sameIdTasks = this._getExistingTaskWithID(record);\n            var currentTask = void 0;\n            if (sameIdTasks === null) {\n                return;\n            }\n            for (var i = 0; i < sameIdTasks.length; i++) {\n                currentTask = sameIdTasks[i];\n                var resources = currentTask.ganttProperties.resourceInfo;\n                for (var count = 0; count < resources.length; count++) {\n                    if (resources[count][this.parent.resourceFields.id] === droppedParentItem.ganttProperties.taskId) {\n                        resources.splice(count, 1);\n                        this.parent.setRecordValue('resourceInfo', resources, currentTask.ganttProperties, true);\n                        this.updateCurrentTask(currentTask);\n                        if (!isNullOrUndefined(currentTask.parentItem && this.updateParentRecords.indexOf(currentTask.parentItem) !== -1)) {\n                            this.updateParentRecords.push(currentTask.parentItem);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    RowDD.prototype.refreshDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        var ganttFields = this.parent.taskFields;\n        if (this.parent.dataSource instanceof DataManager) {\n            tempDataSource = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource.length > 0 && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (!isNullOrUndefined(droppedRecord.taskData[ganttFields.child]) &&\n                    tempDataSource[i][ganttFields.child] === droppedRecord.taskData[ganttFields.child]) {\n                    idx = i;\n                }\n                else if (isNullOrUndefined(droppedRecord.taskData[ganttFields.child]) &&\n                    droppedRecord.taskData[ganttFields.id] === tempDataSource[i][ganttFields.id]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.taskFields.parentID) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.taskFields.parentID) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.taskFields.parentID && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var rowPosition = this.dropPosition === 'topSegment' ? 'Above' : 'Below';\n                this.parent.editModule.addRowSelectedItem = droppedRecord;\n                this.parent.editModule.updateRealDataSource([draggedRecord], rowPosition);\n                delete this.parent.editModule.addRowSelectedItem;\n            }\n        }\n        if (this.parent.taskFields.parentID) {\n            if (draggedRecord.parentItem) {\n                var droppedId = this.dropPosition === 'middleSegment' ? this.parent.taskFields.id :\n                    this.parent.taskFields.parentID;\n                draggedRecord[this.parent.taskFields.parentID] = droppedRecord[droppedId];\n                draggedRecord.ganttProperties.parentId = droppedRecord[droppedId];\n                if ((this.parent.viewType === 'ResourceView' && !(this.dropPosition === 'middleSegment')) ||\n                    this.parent.viewType === 'ProjectView') {\n                    draggedRecord.taskData[this.parent.taskFields.parentID] = droppedRecord.taskData[droppedId];\n                }\n            }\n            else {\n                draggedRecord[this.parent.taskFields.parentID] = null;\n                draggedRecord.taskData[this.parent.taskFields.parentID] = null;\n                draggedRecord.ganttProperties.parentId = null;\n            }\n        }\n        if (this.parent.viewType === 'ProjectView' && this.parent.editModule && this.parent.editModule.taskbarEditModule &&\n            this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.predecessorModule &&\n            this.parent.undoRedoModule['currentAction']['action'] === 'TaskbarDragAndDrop') {\n            var dragRec = this.parent.flatData[this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['afterDrop'].data[0].ganttProperties.taskId.toString())];\n            this.parent.editModule.taskbarEditModule.taskBarEditRecord = dragRec;\n            this.parent.editModule.taskbarEditModule.taskBarEditAction = 'ChildDrag';\n            this.parent.predecessorModule.validatePredecessor(dragRec, [], '');\n            this.parent.editModule.taskbarEditModule.taskBarEditAction = null;\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex1) {\n        var gObj = this.parent;\n        var childRecords = this.parent.editModule.getChildCount(this.droppedRecord, 0);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords === 0) ? recordIndex1 + 1 :\n            childRecords + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment' && !this.isSharedTask) {\n            if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n            }\n            this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            this.parent.ids.splice(childRecordsLength, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n            if (this.parent.viewType === 'ResourceView') {\n                var recordId = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n                this.parent.getTaskIds().splice(childRecordsLength, 0, recordId);\n            }\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n            this.recordLevel();\n            if (isNullOrUndefined(this.draggedRecord.parentItem &&\n                this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n                this.updateParentRecords.push(this.draggedRecord.parentItem);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var gObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = gObj.taskFields.child;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            if (!droppedRecord.childRecords.length) {\n                droppedRecord.childRecords = [];\n                if (!gObj.taskFields.parentID && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            var createParentItem = {\n                uniqueID: parentItem.uniqueID,\n                expanded: parentItem.expanded,\n                level: parentItem.level,\n                index: parentItem.index,\n                taskId: parentItem.ganttProperties.rowUniqueID\n            };\n            this.parent.setRecordValue('parentItem', createParentItem, draggedRecord);\n            this.parent.setRecordValue('parentUniqueID', droppedRecord.uniqueID, draggedRecord);\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !gObj.taskFields.parentID &&\n                !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[gObj.taskFields.child].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.parent.setRecordValue('level', this.draggedRecord.level, this.draggedRecord);\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        this.treeGridData = isCountRequired(this.parent) ? getValue('result', this.parent.treeGrid.dataSource) :\n            this.parent.treeGrid.dataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            this.ganttData = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            this.ganttData = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) :\n                this.parent.dataSource;\n        }\n        var deletedRow;\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            if (this.parent.viewType === 'ProjectView') {\n                deletedRow = this.parent.flatData[this.parent.ids.indexOf(this.draggedRecord.ganttProperties.taskId.toString())];\n            }\n            else {\n                if (this.draggedRecord.hasChildRecords) {\n                    deletedRow = this.parent.flatData['R' + this.parent.taskIds.indexOf(this.draggedRecord.ganttProperties.taskId)];\n                }\n                else {\n                    deletedRow = this.parent.flatData['T' + this.parent.taskIds.indexOf(this.draggedRecord.ganttProperties.taskId)];\n                }\n            }\n        }\n        else {\n            deletedRow = this.parent.getTaskByUniqueID(this.draggedRecord.uniqueID);\n        }\n        this.removeRecords(deletedRow);\n    };\n    //method to check the dropped record has already present in the child collection\n    RowDD.prototype.checkisSharedTask = function () {\n        this.isSharedTask = false;\n        var sharedTask = null;\n        // eslint-disable-next-line\n        var parentUniqueID = this.droppedRecord.level === 0 ? this.droppedRecord.uniqueID : this.droppedRecord.parentItem.uniqueID;\n        var droppedParentItem = this.parent.getTaskByUniqueID(parentUniqueID);\n        var childTasks = droppedParentItem.childRecords;\n        for (var i = 0; i < childTasks.length; i++) {\n            if ('T' + this.draggedRecord.ganttProperties.taskId === 'T' + childTasks[i].ganttProperties.taskId) {\n                this.isSharedTask = true;\n                sharedTask = childTasks[i];\n            }\n        }\n        if (this.isSharedTask) {\n            this.removeResourceInfo(sharedTask);\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var gObj = this.parent;\n        if (!this.isSharedTask) {\n            if (gObj.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            this.parent.ids.splice(recordIndex1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n            this.parent.setRecordValue('parentItem', this.droppedRecord.parentItem, this.draggedRecord);\n            this.parent.setRecordValue('parentUniqueID', this.droppedRecord.parentUniqueID, this.draggedRecord);\n            this.parent.setRecordValue('level', this.droppedRecord.level, this.draggedRecord);\n            if (this.parent.viewType === 'ResourceView') {\n                var id = this.draggedRecord.level === 0 ? 'R' + this.draggedRecord.ganttProperties.taskId : 'T' + this.draggedRecord.ganttProperties.taskId;\n                this.parent.getTaskIds().splice(recordIndex1, 0, id);\n            }\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.parent.getParentTask(this.droppedRecord.parentItem).childRecords;\n                var childRecords = rec;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n            /* eslint-disable-next-line */\n            if (!isNullOrUndefined(this.draggedRecord.parentItem && this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n                this.updateParentRecords.push(this.draggedRecord.parentItem);\n            }\n        }\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                var id = 'uniqueIDCollection';\n                parentData = this.parent.treeGrid[id][record.parentItem.uniqueID];\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            this.parent.setRecordValue('level', currentRecord.level, currentRecord);\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    // eslint-disable-next-line\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var gObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            gObj.flatData.splice(count, 0, currentRecord);\n            this.parent.ids.splice(count, 0, currentRecord.ganttProperties.rowUniqueID.toString());\n            if (gObj.taskFields.parentID && gObj.dataSource.length > 0) {\n                this.ganttData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var gObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            dataSource = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var flatParentData = deletedRow && deletedRow.parentItem ? this.parent.getParentTask(deletedRow.parentItem) : null;\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = [];\n                if (flatParentData) {\n                    childRecords = flatParentData.childRecords;\n                }\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    if (this.parent.viewType === 'ResourceView' && childRecords.length === 1) {\n                        //For updating the parent record which has zero parent reords.\n                        this.parent.isOnDelete = true;\n                        childRecords[0].isDelete = true;\n                        this.parent.dataOperation.updateParentItems(flatParentData);\n                        this.parent.isOnDelete = false;\n                        childRecords[0].isDelete = false;\n                    }\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.taskFields.parentID && flatParentData.taskData[this.parent.taskFields.child]) {\n                        flatParentData.taskData[this.parent.taskFields.child].splice(childIndex, 1);\n                    }\n                    // collection for updating parent record\n                    this.updateParentRecords.push(flatParentData);\n                }\n            }\n            //method to delete the record from datasource collection\n            if (!this.parent.taskFields.parentID) {\n                var deleteRecordIDs = [];\n                deleteRecordIDs.push(deletedRow.ganttProperties.taskId.toString());\n                if (this.parent.viewType === 'ProjectView' || (this.parent.viewType === 'ResourceView' && this.dropPosition !== 'middleSegment')) {\n                    this.parent.editModule.removeFromDataSource(deleteRecordIDs);\n                }\n            }\n            if (gObj.taskFields.parentID) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var ganttData = dataSource.length > 0 && this.parent.viewType !== 'ResourceView' ?\n                    dataSource : this.parent.updatedRecords;\n                for (var i = 0; i < ganttData.length; i++) {\n                    if (this.parent.viewType === 'ResourceView') {\n                        if (ganttData[i].ganttProperties.rowUniqueID === deletedRow.ganttProperties.rowUniqueID) {\n                            idx = i;\n                        }\n                    }\n                    else {\n                        if (ganttData[i][this.parent.taskFields.id] === deletedRow.taskData[this.parent.taskFields.id]) {\n                            idx = i;\n                        }\n                    }\n                }\n                if (idx !== -1) {\n                    if (dataSource.length > 0) {\n                        dataSource.splice(idx, 1);\n                    }\n                    var tempIndex = this.treeGridData.indexOf(deletedRow);\n                    this.treeGridData.splice(tempIndex, 1);\n                    this.parent.ids.splice(tempIndex, 1);\n                    if (this.parent.treeGrid.parentData.indexOf(deletedRow) !== -1) {\n                        this.parent.treeGrid.parentData.splice(this.parent.treeGrid.parentData.indexOf(deletedRow), 1);\n                    }\n                    if (this.parent.viewType === 'ResourceView') {\n                        this.parent.getTaskIds().splice(idx, 1);\n                    }\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!gObj.taskFields.parentID) {\n                var deletedRecordCount = this.parent.editModule.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n                this.parent.ids.splice(recordIndex, deletedRecordCount + 1);\n                var parentIndex = this.ganttData.indexOf(deletedRow.taskData);\n                if (parentIndex !== -1) {\n                    this.ganttData.splice(parentIndex, 1);\n                    this.parent.treeGrid.parentData.splice(parentIndex, 1);\n                }\n                if (this.parent.viewType === 'ResourceView') {\n                    this.parent.getTaskIds().splice(recordIndex, deletedRecordCount + 1);\n                }\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var ganttData = void 0;\n            if (this.parent.dataSource instanceof DataManager) {\n                ganttData = getValue('dataOperation.dataArray', this.parent);\n            }\n            else {\n                ganttData = this.parent.dataSource;\n            }\n            for (var j = 0; j < ganttData.length; j++) {\n                if (ganttData[j][this.parent.taskFields.id] === currentRecord.taskData[this.parent.taskFields.id]) {\n                    idx = j;\n                }\n            }\n            if (idx !== -1) {\n                if (ganttData.length > 0) {\n                    ganttData.splice(idx, 1);\n                }\n                var tempIndex = this.treeGridData.indexOf(currentRecord);\n                this.treeGridData.splice(tempIndex, 1);\n                this.parent.ids.splice(tempIndex, 1);\n                if (this.parent.viewType === 'ResourceView') {\n                    this.parent.getTaskIds().splice(idx, 1);\n                }\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes .\n     * @param {number} toIndex .\n     * @param {string} position .\n     * @returns {void} .\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (!this.parent.readOnly) {\n            if (fromIndexes[0] !== toIndex && (position === 'above' || position === 'below' || position === 'child')) {\n                if (position === 'above') {\n                    this.dropPosition = 'topSegment';\n                }\n                if (position === 'below') {\n                    this.dropPosition = 'bottomSegment';\n                }\n                if (position === 'child') {\n                    this.dropPosition = 'middleSegment';\n                }\n                var prevData = void 0;\n                if (this.parent.undoRedoModule) {\n                    prevData = extend([], [], [this.parent.undoRedoModule['currentAction']], true)[0];\n                }\n                var data = [];\n                for (var i = 0; i < fromIndexes.length; i++) {\n                    if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && (prevData['action'] === 'RowDragAndDrop' || prevData['action'] === 'TaskbarDragAndDrop')) {\n                        data[i] = prevData['beforeDrop'][i].data;\n                    }\n                    else {\n                        data[i] = this.parent.flatData[fromIndexes[i]];\n                    }\n                }\n                var isByMethod = true;\n                var args = {\n                    data: data,\n                    dropIndex: toIndex,\n                    dropPosition: this.dropPosition\n                };\n                this.dropRows(args, isByMethod);\n            }\n            else {\n                return;\n            }\n        }\n    };\n    return RowDD;\n}());\nexport { RowDD };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}