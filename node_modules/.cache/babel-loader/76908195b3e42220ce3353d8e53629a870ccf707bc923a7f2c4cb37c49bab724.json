{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */function () {\n  /**\n   * Constructor for render module\n   *\n   * @param {TreeGrid} parent - Tree Grid instance\n   */\n  function RowDD(parent) {\n    /** @hidden */\n    this.canDrop = true;\n    /** @hidden */\n    this.isDraggedWithChild = false;\n    /** @hidden */\n    this.modifiedRecords = 'modifiedRecords';\n    /** @hidden */\n    this.selectedRecords = 'selectedRecords';\n    /** @hidden */\n    this.selectedRows = 'selectedRows';\n    /** @hidden */\n    this.hasDropItem = true;\n    /** @hidden */\n    this.isaddtoBottom = false;\n    Grid.Inject(GridDragDrop);\n    this.parent = parent;\n    this.addEventListener();\n  }\n  RowDD.prototype.getChildrecordsByParentID = function (id) {\n    var treeGridDataSource;\n    if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n      treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n    } else {\n      treeGridDataSource = this.parent.grid.dataSource;\n    }\n    var record = treeGridDataSource.filter(function (e) {\n      return e.uniqueID === id;\n    });\n    return record;\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  RowDD.prototype.addEventListener = function () {\n    this.parent.on(events.rowdraging, this.Rowdraging, this);\n    this.parent.on(events.rowDropped, this.rowDropped, this);\n    this.parent.on(events.rowsAdd, this.rowsAdded, this);\n    this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n  };\n  /**\n   * Reorder the rows based on given indexes and position\n   *\n   * @returns {void}\n   * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n   * @param {number} toIndex - Destination row index\n   * @param {string} position - Drop position as above or below or child\n   */\n  RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n    var tObj = this.parent;\n    var action = 'action';\n    var dropPosition = 'dropPosition';\n    var updateRowAndCellElements = 'updateRowAndCellElements';\n    if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n      if (position === 'above') {\n        this.dropPosition = 'topSegment';\n      }\n      if (position === 'below') {\n        this.dropPosition = 'bottomSegment';\n      }\n      if (position === 'child') {\n        this.dropPosition = 'middleSegment';\n      }\n      this.parent[\"\" + dropPosition] = this.dropPosition;\n      var data = [];\n      for (var i = 0; i < fromIndexes.length; i++) {\n        var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n        data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n      }\n      var isByMethod = true;\n      var args = {\n        data: data,\n        dropIndex: toIndex\n      };\n      if (!isCountRequired(this.parent)) {\n        this.dropRows(args, isByMethod);\n      }\n      //this.refreshGridDataSource();\n      if (tObj.isLocalData) {\n        tObj.flatData = this.orderToIndex(tObj.flatData);\n      }\n      if (this.parent[\"\" + action] === 'outdenting') {\n        if (!isNullOrUndefined(data[0].parentItem)) {\n          data[0].level = data[0].parentItem.level + 1;\n        }\n      }\n      this.parent.grid.refresh();\n      if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n        var index = void 0;\n        if (this.parent.allowRowDragAndDrop) {\n          index = this.parent.treeColumnIndex + 1;\n        } else if (this.parent[\"\" + action] === 'indenting') {\n          index = this.parent.treeColumnIndex;\n        }\n        var row = this.parent.getRows()[fromIndexes[0]];\n        var dropData = args.data[0];\n        var totalRecord = [];\n        var rows = [];\n        totalRecord.push(dropData);\n        rows.push(row);\n        var parentUniqueID = 'parentUniqueID';\n        var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n        var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n        totalRecord.push(parentData);\n        rows.push(parentrow);\n        this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n      }\n      if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n        var index = void 0;\n        if (this.parent.allowRowDragAndDrop) {\n          index = this.parent.treeColumnIndex + 1;\n        } else if (this.parent[\"\" + action] === 'outdenting') {\n          index = this.parent.treeColumnIndex;\n        }\n        var record = args.data[0];\n        var row = this.parent.getRows()[fromIndexes[0]];\n        var totalRecord = [];\n        var rows = [];\n        totalRecord.push(record);\n        rows.push(row);\n        this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n      }\n    } else {\n      return;\n    }\n  };\n  RowDD.prototype.indentOutdentAction = function (record, request) {\n    var tObj = this.parent;\n    var action = 'action';\n    var droppedIndex = 'dropIndex';\n    var selectedItemIndex = -1;\n    if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n      return;\n    } else {\n      if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n        selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n      } else if (this.parent.selectedRowIndex !== -1) {\n        selectedItemIndex = this.parent.selectedRowIndex;\n      }\n      this.selectedItem = isNullOrUndefined(record) ? tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n      var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n      var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n      this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ? this.parent.getSelectedRows()[0] : this.parent.grid.getRowByIndex(rowIndex);\n      this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ? tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : this.selectedItem;\n      if (request === 'indent') {\n        var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n        var dropIndex = void 0;\n        if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 || tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n          return;\n        }\n        if (record_1.level > this.selectedRecord.level) {\n          for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n            if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData === record_1.parentItem.taskData) {\n              dropIndex = i;\n              if (tObj.enableVirtualization) {\n                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n              }\n            }\n          }\n        } else {\n          dropIndex = this.selectedRow.rowIndex - 1;\n        }\n        if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n          dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n        }\n        tObj[\"\" + action] = 'indenting';\n        tObj[\"\" + droppedIndex] = dropIndex;\n        this.eventTrigger('indenting', dropIndex);\n      } else if (request === 'outdent') {\n        if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 || tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n          return;\n        }\n        var dropIndex = void 0;\n        var parentItem = this.selectedRecord.parentItem;\n        for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n          if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n            dropIndex = i;\n          }\n        }\n        if (this.parent.enableVirtualization && this.selectedRecord) {\n          dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n        }\n        tObj[\"\" + action] = 'outdenting';\n        tObj[\"\" + droppedIndex] = dropIndex;\n        this.eventTrigger('outdenting', dropIndex);\n      }\n    }\n  };\n  RowDD.prototype.eventTrigger = function (action, dropIndex) {\n    var _this = this;\n    var actionArgs = {\n      action: action,\n      cancel: false,\n      data: [this.parent[this.selectedRecords]],\n      row: this.parent[this.selectedRows]\n    };\n    this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n      if (!actionArgs.cancel) {\n        if (actionArgs.action === 'indenting') {\n          if (_this.parent.enableVirtualization) {\n            _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n          } else {\n            _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n          }\n        } else if (actionArgs.action === 'outdenting') {\n          if (_this.parent.enableVirtualization) {\n            _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n          } else {\n            _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n          }\n        }\n      }\n    });\n  };\n  RowDD.prototype.orderToIndex = function (currentData) {\n    for (var i = 0; i < currentData.length; i++) {\n      currentData[parseInt(i.toString(), 10)].index = i;\n      if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n        var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n        currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n      }\n    }\n    return currentData;\n  };\n  RowDD.prototype.rowsAdded = function (e) {\n    var draggedRecord;\n    var dragRecords = e.records;\n    for (var i = e.records.length - 1; i > -1; i--) {\n      draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n      if (draggedRecord.parentUniqueID) {\n        var record = dragRecords.filter(function (data) {\n          return data.uniqueID === draggedRecord.parentUniqueID;\n        });\n        if (record.length) {\n          var index = record[0].childRecords.indexOf(draggedRecord);\n          var parentRecord = record[0];\n          if (index !== -1) {\n            if (isNullOrUndefined(this.parent.idMapping)) {\n              parentRecord.childRecords.splice(index, 1);\n              if (!parentRecord.childRecords.length) {\n                parentRecord.hasChildRecords = false;\n                parentRecord.hasFilteredChildRecords = false;\n              }\n            }\n            this.isDraggedWithChild = true;\n          }\n        }\n      }\n    }\n    if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n      var tObj = this.parent;\n      var draggedRecord_1;\n      var dragRecords_1 = e.records;\n      var dragLength = e.records.length;\n      for (var i = dragLength - 1; i > -1; i--) {\n        draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n        if (!i && draggedRecord_1.hasChildRecords) {\n          draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n        }\n        var recordIndex1 = 0;\n        if (!isNullOrUndefined(tObj.parentIdMapping)) {\n          tObj.childMapping = null;\n        }\n        if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) && !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n          draggedRecord_1.taskData[tObj.childMapping] = [];\n        }\n        if (!isNullOrUndefined(draggedRecord_1[tObj.childMapping])) {\n          if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) && draggedRecord_1[tObj.childMapping].length && !this.isDraggedWithChild && !isNullOrUndefined(tObj.parentIdMapping)) {\n            var childData = draggedRecord_1[tObj.childMapping];\n            for (var j = 0; j < childData.length; j++) {\n              if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                i += 1;\n              }\n            }\n          }\n        }\n        if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] !== null && !this.isDraggedWithChild) {\n          draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n          delete draggedRecord_1.parentItem;\n          delete draggedRecord_1.parentUniqueID;\n        }\n        if (isNullOrUndefined(tObj.dataSource)) {\n          tObj.dataSource = [];\n        }\n        tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n      }\n      tObj.setProperties({\n        dataSource: tObj.dataSource\n      }, false);\n    } else {\n      for (var i = 0; i < dragRecords.length; i++) {\n        setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n      }\n      var args = {\n        data: e.records,\n        dropIndex: e.toIndex\n      };\n      if (this.parent.dataSource instanceof DataManager) {\n        this.treeGridData = this.parent.dataSource.dataSource.json;\n        this.treeData = this.parent.dataSource.dataSource.json;\n      } else {\n        this.treeGridData = this.parent.grid.dataSource;\n        this.treeData = this.parent.dataSource;\n      }\n      if (isNullOrUndefined(this.dropPosition)) {\n        this.dropPosition = 'bottomSegment';\n        args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 : args.dropIndex;\n        args.data = args.data.map(function (i) {\n          if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n            i.level = 0;\n            return i;\n          } else {\n            delete i.parentItem;\n            delete i.parentUniqueID;\n            i.level = 0;\n            return i;\n          }\n        });\n      }\n      this.dropRows(args);\n    }\n  };\n  RowDD.prototype.rowsRemoved = function (e) {\n    for (var i = 0; i < e.records.length; i++) {\n      this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n      if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem && this.parent.grid.dataSource.indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 || this.draggedRecord.level === 0) {\n        this.deleteDragRow();\n      }\n    }\n  };\n  RowDD.prototype.refreshGridDataSource = function () {\n    var draggedRecord = this.draggedRecord;\n    var droppedRecord = this.droppedRecord;\n    var proxy = this.parent;\n    var tempDataSource;\n    var idx;\n    if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n      tempDataSource = proxy.dataSource.dataSource.json;\n    } else {\n      tempDataSource = proxy.dataSource;\n    }\n    if (tempDataSource && !isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem && !isNullOrUndefined(droppedRecord.taskData)) {\n      var keys = Object.keys(tempDataSource);\n      for (var i = 0; i < keys.length; i++) {\n        if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n          idx = i;\n        }\n      }\n      if (this.dropPosition === 'topSegment') {\n        if (!this.parent.idMapping) {\n          tempDataSource.splice(idx, 0, draggedRecord.taskData);\n        }\n      } else if (this.dropPosition === 'bottomSegment') {\n        if (!this.parent.idMapping) {\n          tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n        }\n      }\n    } else if (!this.parent.parentIdMapping && !isNullOrUndefined(droppedRecord) && droppedRecord.parentItem) {\n      if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n        var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n        var childRecords = record.childRecords;\n        for (var i = 0; i < childRecords.length; i++) {\n          droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)] = childRecords[parseInt(i.toString(), 10)].taskData;\n        }\n      }\n    }\n    if (this.parent.parentIdMapping) {\n      if (draggedRecord.parentItem) {\n        if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n          draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n          draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n        } else {\n          draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n          draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n        }\n      } else {\n        draggedRecord.taskData[this.parent.parentIdMapping] = null;\n        draggedRecord[this.parent.parentIdMapping] = null;\n      }\n    }\n  };\n  RowDD.prototype.removeFirstrowBorder = function (element) {\n    var canremove = this.dropPosition === 'bottomSegment';\n    if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element && (element.rowIndex !== 0 || canremove)) {\n      this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n    }\n  };\n  RowDD.prototype.removeLastrowBorder = function (element) {\n    var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader') || element.classList.contains('e-detailrow'));\n    var islastRowIndex;\n    if (this.parent.enableVirtualization) {\n      islastRowIndex = element && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !== element.getAttribute('data-uid');\n    } else {\n      islastRowIndex = element && !isEmptyRow && this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !== element.getAttribute('data-uid');\n    }\n    var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n    if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n      this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n    }\n  };\n  RowDD.prototype.updateIcon = function (row, index, args) {\n    var rowEle = args.target ? closest(args.target, 'tr') : null;\n    this.dropPosition = undefined;\n    var rowPositionHeight = 0;\n    this.removeFirstrowBorder(rowEle);\n    this.removeLastrowBorder(rowEle);\n    for (var i = 0; i < args.rows.length; i++) {\n      if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid') || !parentsUntil(args.target, 'e-gridcontent')) {\n        this.dropPosition = 'Invalid';\n        this.addErrorElem();\n      }\n    }\n    // To get the corresponding drop position related to mouse position\n    var tObj = this.parent;\n    var rowTop = 0;\n    var roundOff = 0;\n    var toolHeight = tObj.toolbar && tObj.toolbar.length ? document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n    // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n    var positionOffSet = this.getOffset(tObj.element);\n    // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n    var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n    var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n    if (!isNullOrUndefined(rowEle)) {\n      rowPositionHeight = rowEle.offsetTop - scrollTop;\n    }\n    // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n    if (this.parent.enableVirtualization) {\n      rowTop = rowEle.getBoundingClientRect().top;\n    } else {\n      rowTop = rowPositionHeight + contentHeight + roundOff;\n    }\n    var rowBottom = rowTop + row[0].offsetHeight;\n    var difference = rowBottom - rowTop;\n    var divide = difference / 3;\n    var topRowSegment = rowTop + divide;\n    var middleRowSegment = topRowSegment + divide;\n    var bottomRowSegment = middleRowSegment + divide;\n    var mouseEvent = getObject('originalEvent.event', args);\n    var touchEvent = getObject('originalEvent.event', args);\n    var posy = mouseEvent.type === 'mousemove' ? mouseEvent.pageY : !isNullOrUndefined(touchEvent) && !isNullOrUndefined(touchEvent.changedTouches) ? touchEvent.changedTouches[0].pageY : null;\n    if (this.parent.enableVirtualization) {\n      posy = mouseEvent.type === 'mousemove' ? mouseEvent.clientY : !isNullOrUndefined(touchEvent) && !isNullOrUndefined(touchEvent.changedTouches) ? touchEvent.changedTouches[0].clientY : null;\n    }\n    var isTopSegment = posy <= topRowSegment;\n    var isMiddleRowSegment = posy > topRowSegment && posy <= middleRowSegment;\n    var isBottomRowSegment = posy > middleRowSegment && posy <= bottomRowSegment;\n    if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n      if (isTopSegment && this.dropPosition !== 'Invalid') {\n        this.removeChildBorder();\n        this.dropPosition = 'topSegment';\n        this.removetopOrBottomBorder();\n        this.addFirstrowBorder(rowEle);\n        this.removeErrorElem();\n        this.removeLastrowBorder(rowEle);\n        this.topOrBottomBorder(args.target);\n      }\n      if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n        this.removetopOrBottomBorder();\n        var rowElement = [];\n        var element = closest(args.target, 'tr');\n        rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n        if (rowElement.length > 0) {\n          this.addRemoveClasses(rowElement, true, 'e-childborder');\n        }\n        this.addLastRowborder(rowEle);\n        this.addFirstrowBorder(rowEle);\n        this.dropPosition = 'middleSegment';\n      }\n      if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n        this.removeErrorElem();\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        this.dropPosition = 'bottomSegment';\n        this.addLastRowborder(rowEle);\n        this.removeFirstrowBorder(rowEle);\n        this.topOrBottomBorder(args.target);\n      }\n    }\n    return this.dropPosition;\n  };\n  RowDD.prototype.removeChildBorder = function () {\n    var borderElem = [];\n    borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n    if (borderElem.length > 0) {\n      this.addRemoveClasses(borderElem, false, 'e-childborder');\n    }\n  };\n  RowDD.prototype.addFirstrowBorder = function (targetRow) {\n    var node = this.parent.element;\n    var tObj = this.parent;\n    if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n      var div = this.parent.createElement('div', {\n        className: 'e-firstrow-border'\n      });\n      var gridheaderEle = this.parent.getHeaderContent();\n      var toolbarHeight = 0;\n      if (tObj.toolbar) {\n        toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n      }\n      var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n      if (multiplegrid) {\n        div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight + toolbarHeight + 'px';\n      }\n      div.style.width = multiplegrid ? node.offsetWidth + 'px' : node.offsetWidth - this.getScrollWidth() + 'px';\n      if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n        gridheaderEle.appendChild(div);\n      }\n    }\n  };\n  RowDD.prototype.addLastRowborder = function (trElement) {\n    var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') || trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n    if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') === trElement.getAttribute('data-uid')) {\n      var bottomborder = this.parent.createElement('div', {\n        className: 'e-lastrow-border'\n      });\n      var gridcontentEle = this.parent.getContent();\n      bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n      if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n        gridcontentEle.classList.add('e-treegrid-relative');\n        gridcontentEle.appendChild(bottomborder);\n        bottomborder.style.bottom = this.getScrollWidth() + 'px';\n      }\n    }\n  };\n  RowDD.prototype.getScrollWidth = function () {\n    var scrollElem = this.parent.getContent().firstElementChild;\n    return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n  };\n  RowDD.prototype.addErrorElem = function () {\n    var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n    var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n    var sanitize = 'sanitize';\n    if (!errorelem && !this.parent.rowDropSettings.targetID) {\n      var ele = document.createElement('div');\n      classList(ele, ['e-errorcontainer'], []);\n      classList(ele, ['e-icons', 'e-errorelem'], []);\n      var errorVal = dragelem.querySelector('.errorValue');\n      var content = dragelem.querySelector('.e-rowcell').innerHTML;\n      if (errorVal) {\n        content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n        errorVal.parentNode.removeChild(errorVal);\n      }\n      dragelem.querySelector('.e-rowcell').innerHTML = '';\n      var spanContent = document.createElement('span');\n      spanContent.className = 'errorValue';\n      spanContent.style.paddingLeft = '16px';\n      spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n      dragelem.querySelector('.e-rowcell').appendChild(ele);\n      dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n      var dropItemSpan = document.querySelector('.e-dropitemscount');\n      if (this.hasDropItem && dropItemSpan) {\n        var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n        var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n        dropItemSpan.style.left = spanLeft + \"px\";\n        this.hasDropItem = false;\n      }\n    }\n  };\n  RowDD.prototype.removeErrorElem = function () {\n    var errorelem = document.querySelector('.e-errorelem');\n    var errorValue = document.querySelector('.errorValue');\n    var dropItemSpan = document.querySelector('.e-dropitemscount');\n    if (errorelem) {\n      if (dropItemSpan) {\n        var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n        setStyleAttribute(errorValue, {\n          paddingLeft: '0px'\n        });\n        if (!this.parent.enableRtl) {\n          setStyleAttribute(dropItemSpan, {\n            left: dropItemLeft + \"px\"\n          });\n        }\n      }\n      errorelem.remove();\n    }\n    this.hasDropItem = true;\n  };\n  RowDD.prototype.topOrBottomBorder = function (target) {\n    var rowElement = [];\n    var element = closest(target, 'tr');\n    rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n    if (rowElement.length) {\n      if (this.dropPosition === 'topSegment') {\n        this.addRemoveClasses(rowElement, true, 'e-droptop');\n        if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n          this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n        }\n      }\n      if (this.dropPosition === 'bottomSegment') {\n        this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n      }\n    }\n  };\n  RowDD.prototype.removetopOrBottomBorder = function () {\n    var border = [];\n    border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n    if (border.length) {\n      this.addRemoveClasses(border, false, 'e-dropbottom');\n      this.addRemoveClasses(border, false, 'e-droptop');\n    }\n  };\n  RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n    for (var i = 0, len = cells.length; i < len; i++) {\n      if (add) {\n        cells[parseInt(i.toString(), 10)].classList.add(className);\n      } else {\n        cells[parseInt(i.toString(), 10)].classList.remove(className);\n      }\n    }\n  };\n  RowDD.prototype.getOffset = function (element) {\n    var box = element.getBoundingClientRect();\n    var body = document.body;\n    var docElem = document.documentElement;\n    var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n    var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n    var clientTop = docElem.clientTop || body.clientTop || 0;\n    var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n    var top = box.top + scrollTop - clientTop;\n    var left = box.left + scrollLeft - clientLeft;\n    return {\n      top: Math.round(top),\n      left: Math.round(left)\n    };\n  };\n  RowDD.prototype.Rowdraging = function (args) {\n    var tObj = this.parent;\n    var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n    cloneElement.style.cursor = '';\n    var rowEle = args.target ? closest(args.target, 'tr') : null;\n    var rowIdx = rowEle ? rowEle.rowIndex : -1;\n    var dragRecords = [];\n    var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n    this.removeErrorElem();\n    this.canDrop = true;\n    if (!args.data[0]) {\n      dragRecords.push(args.data);\n    } else {\n      dragRecords = args.data;\n    }\n    if (rowIdx !== -1) {\n      this.ensuredropPosition(dragRecords, droppedRecord);\n    } else {\n      this.canDrop = false;\n      this.addErrorElem();\n    }\n    if (!tObj.rowDropSettings.targetID && this.canDrop && !isNullOrUndefined(args.rows[0])) {\n      tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n    }\n    if (isNullOrUndefined(tObj.rowDropSettings.targetID) && !this.canDrop) {\n      this.removetopOrBottomBorder();\n    }\n    if (tObj.rowDropSettings.targetID) {\n      var dropElement = parentsUntil(args.target, 'e-treegrid');\n      if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n        var srcControl = dropElement.ej2_instances[0];\n        srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n      }\n    }\n    if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n      var dropElement = parentsUntil(args.target, 'e-treegrid');\n      if (!dropElement) {\n        cloneElement.style.cursor = 'default';\n      }\n    }\n  };\n  RowDD.prototype.rowDropped = function (args) {\n    var tObj = this.parent;\n    var parentItem = 'parentItem';\n    if (!tObj.rowDropSettings.targetID) {\n      if (parentsUntil(args.target, 'e-content')) {\n        if (this.parent.element.querySelector('.e-errorelem')) {\n          this.dropPosition = 'Invalid';\n        }\n        setValue('dropPosition', this.dropPosition, args);\n        tObj.trigger(events.rowDrop, args);\n        if (!args.cancel) {\n          if (!isCountRequired(this.parent)) {\n            this.dropRows(args);\n          }\n          if (tObj.isLocalData) {\n            tObj.flatData = this.orderToIndex(tObj.flatData);\n          }\n          tObj.grid.refresh();\n          if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n            tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n          }\n        }\n      }\n    } else {\n      if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') && parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n        setValue('dropPosition', this.dropPosition, args);\n        tObj.trigger(events.rowDrop, args);\n        if (!args.cancel && tObj.rowDropSettings.targetID) {\n          this.dragDropGrid(args);\n          if (tObj.isLocalData) {\n            tObj.flatData = this.orderToIndex(tObj.flatData);\n          }\n        }\n      }\n    }\n    this.removetopOrBottomBorder();\n    this.removeChildBorder();\n    if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n      this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n    } else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n      this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n    }\n    if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n      var index = this.parent.treeColumnIndex;\n      index = index + 1;\n      var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n      var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n      var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n      var data = args.data[0];\n      if (this.dropPosition === 'middleSegment') {\n        var record = [];\n        var rows = [];\n        record.push(data);\n        rows.push(row);\n        var parentUniqueID = 'parentUniqueID';\n        data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n        rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n        var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n        record.push(data);\n        rows.push(parentrow);\n        for (var i = 0; i < record.length; i++) {\n          this.parent.renderModule.cellRender({\n            data: record[parseInt(i.toString(), 10)],\n            cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n            column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n            requestType: 'rowDragAndDrop'\n          });\n        }\n        var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n        if (!isNullOrUndefined(targetEle)) {\n          removeClass([targetEle], 'e-treegridcollapse');\n          addClass([targetEle], 'e-treegridexpand');\n        }\n      } else {\n        this.parent.renderModule.cellRender({\n          data: data,\n          cell: row.cells[parseInt(index.toString(), 10)],\n          column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n          requestType: 'rowDragAndDrop'\n        });\n      }\n    }\n  };\n  RowDD.prototype.dragDropGrid = function (args) {\n    var tObj = this.parent;\n    var targetRow = closest(args.target, 'tr');\n    var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n    var dropElement = parentsUntil(args.target, 'e-treegrid');\n    var srcControl;\n    if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent) && !isCountRequired(this.parent)) {\n      srcControl = dropElement.ej2_instances[0];\n      var records = tObj.getSelectedRecords();\n      var indexes = [];\n      for (var i = 0; i < records.length; i++) {\n        indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n      }\n      var data = srcControl.dataSource;\n      if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !data.length) {\n        var actualData = [];\n        for (var i = 0; i < records.length; i++) {\n          if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n            actualData.push(records[parseInt(i.toString(), 10)]);\n            var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n            for (var i_1 = 0; i_1 < child.length; i_1++) {\n              actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n            }\n          }\n        }\n        if (actualData.length) {\n          records = actualData;\n        }\n      }\n      tObj.notify(events.rowsRemove, {\n        indexes: indexes,\n        records: records\n      });\n      srcControl.notify(events.rowsAdd, {\n        toIndex: targetIndex,\n        records: records\n      });\n      var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n      if (!isNullOrUndefined(srcControlFlatData)) {\n        for (var i = 0; i < srcControlFlatData.length; i++) {\n          srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n          if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n            var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n            srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n          }\n        }\n      }\n      tObj.grid.refresh();\n      srcControl.grid.refresh();\n      if (srcControl.grid.dataSource.length > 1) {\n        srcControl.grid.refresh();\n        if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n          srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n        }\n        if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n          srcControl.getContent().querySelector('.e-lastrow-border').remove();\n        }\n      }\n    }\n    if (isCountRequired(this.parent)) {\n      srcControl = dropElement.ej2_instances[0];\n      tObj.grid.refresh();\n      srcControl.grid.refresh();\n    }\n  };\n  RowDD.prototype.getTargetIdx = function (targetRow) {\n    return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n  };\n  RowDD.prototype.getParentData = function (record, data) {\n    var parentItem = record.parentItem;\n    var selectedItemIndex = -1;\n    if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n      selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n    } else if (this.parent.selectedRowIndex !== -1) {\n      selectedItemIndex = this.parent.selectedRowIndex;\n    }\n    if (this.dropPosition === 'bottomSegment') {\n      var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n      var rowIndex = selectedItemIndex === -1 ? this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]) : this.parent.getSelectedRowIndexes()[0];\n      var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n      this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n    }\n    if (this.dropPosition === 'middleSegment') {\n      var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n      if (level === parentItem.level) {\n        this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n      } else {\n        this.getParentData(parentItem);\n      }\n    }\n  };\n  RowDD.prototype.dropRows = function (args, isByMethod) {\n    if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n      var tObj = this.parent;\n      var draggedRecord_2;\n      var droppedRecord = void 0;\n      if (isNullOrUndefined(args.dropIndex)) {\n        var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n        var rowIndex = tObj.selectedRowIndex === -1 ? this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]) - 1 : tObj.getSelectedRowIndexes()[0] - 1;\n        var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n        this.getParentData(record, args.data);\n      } else {\n        args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n        if (this.parent.enableVirtualization) {\n          var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n          this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n        } else {\n          this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n        }\n      }\n      var dragRecords = [];\n      droppedRecord = this.droppedRecord;\n      if (!args.data[0]) {\n        dragRecords.push(args.data);\n      } else {\n        dragRecords = args.data;\n      }\n      this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n      var count = 0;\n      var multiplegrid = this.parent.rowDropSettings.targetID;\n      this.isMultipleGrid = multiplegrid;\n      if (!multiplegrid) {\n        this.ensuredropPosition(dragRecords, droppedRecord);\n      } else {\n        this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n      }\n      var dragLength = dragRecords.length;\n      if (!isNullOrUndefined(this.parent.idMapping)) {\n        dragRecords.reverse();\n      }\n      var _loop_1 = function (i) {\n        draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n        this_1.draggedRecord = draggedRecord_2;\n        if (this_1.dropPosition !== 'Invalid' && !isNullOrUndefined(this_1.droppedRecord)) {\n          if (!tObj.rowDropSettings.targetID || isByMethod) {\n            this_1.deleteDragRow();\n          }\n          if (this_1.draggedRecord === this_1.droppedRecord) {\n            var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n            if (isNaN(correctIndex)) {\n              correctIndex = this_1.getTargetIdx(args.target.parentElement);\n            }\n            args.dropIndex = correctIndex;\n            droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n          }\n          if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n            var parentRecords = tObj.parentData;\n            var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n            if (newParentIndex !== -1) {\n              parentRecords.splice(newParentIndex, 1);\n            }\n          }\n          var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n          this_1.dropAtTop(recordIndex1);\n          if (this_1.dropPosition === 'bottomSegment') {\n            if (!droppedRecord.hasChildRecords) {\n              if (this_1.parent.parentIdMapping) {\n                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n              }\n              this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n            } else {\n              count = this_1.getChildCount(droppedRecord, 0);\n              if (this_1.parent.parentIdMapping) {\n                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n              }\n              this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n            }\n            if (isNullOrUndefined(droppedRecord.parentItem)) {\n              delete draggedRecord_2.parentItem;\n              delete draggedRecord_2.parentUniqueID;\n              draggedRecord_2.level = 0;\n              if (this_1.parent.parentIdMapping) {\n                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n              }\n            }\n            if (droppedRecord.parentItem) {\n              var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n              var childRecords = rec[0].childRecords;\n              var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n              childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n              draggedRecord_2.parentItem = droppedRecord.parentItem;\n              draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n              draggedRecord_2.level = droppedRecord.level;\n              if (this_1.parent.parentIdMapping) {\n                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                draggedRecord_2.level = droppedRecord.level;\n              }\n            }\n            if (draggedRecord_2.hasChildRecords) {\n              var level = 1;\n              this_1.updateChildRecordLevel(draggedRecord_2, level);\n              this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n            }\n          }\n          this_1.dropMiddle(recordIndex1);\n        }\n        if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n          var parentRecords = tObj.parentData;\n          var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n          var nonRepeat_1 = 0;\n          parentRecords.filter(function (e) {\n            if (draggedRecord_2.uniqueID === e.uniqueID) {\n              nonRepeat_1++;\n            }\n          });\n          if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n            parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n          } else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n            parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n          }\n        }\n        tObj.rowDragAndDropModule.refreshGridDataSource();\n      };\n      var this_1 = this;\n      for (var i = 0; i < dragLength; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n  RowDD.prototype.dropMiddle = function (recordIndex) {\n    var tObj = this.parent;\n    var childRecords = findChildrenRecords(this.droppedRecord);\n    var childRecordsLength = isNullOrUndefined(childRecords) || childRecords.length === 0 ? recordIndex + 1 : childRecords.length + recordIndex + 1;\n    if (this.dropPosition === 'middleSegment') {\n      if (tObj.parentIdMapping) {\n        this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n        this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n      } else {\n        this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n      }\n      this.recordLevel();\n      if (this.draggedRecord.hasChildRecords) {\n        this.updateChildRecord(this.draggedRecord, childRecordsLength);\n      }\n    }\n  };\n  RowDD.prototype.dropAtTop = function (recordIndex1) {\n    var tObj = this.parent;\n    if (this.dropPosition === 'topSegment') {\n      if (tObj.parentIdMapping) {\n        this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n      }\n      this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n      this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n      this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n      this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n      if (this.draggedRecord.hasChildRecords) {\n        var level = 1;\n        this.updateChildRecord(this.draggedRecord, recordIndex1);\n        this.updateChildRecordLevel(this.draggedRecord, level);\n      }\n      if (this.droppedRecord.parentItem) {\n        var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n        var childRecords = rec[0].childRecords;\n        var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n        childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n      }\n    }\n  };\n  RowDD.prototype.recordLevel = function () {\n    var tObj = this.parent;\n    var draggedRecord = this.draggedRecord;\n    var droppedRecord = this.droppedRecord;\n    var childItem = tObj.childMapping;\n    if (!droppedRecord.hasChildRecords) {\n      droppedRecord.hasChildRecords = true;\n      droppedRecord.hasFilteredChildRecords = true;\n      if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n        droppedRecord.childRecords = [];\n        if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n          droppedRecord.taskData[\"\" + childItem] = [];\n        }\n      }\n    }\n    if (this.dropPosition === 'middleSegment') {\n      var parentItem = extend({}, droppedRecord);\n      delete parentItem.childRecords;\n      draggedRecord.parentItem = parentItem;\n      draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n      droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n      var isSelfReference = 'isSelfReference';\n      if (tObj[\"\" + isSelfReference]) {\n        droppedRecord[tObj.childMapping] = [];\n        droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n      }\n      if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n        droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n      }\n      if (!draggedRecord.hasChildRecords) {\n        draggedRecord.level = droppedRecord.level + 1;\n      } else {\n        var level = 1;\n        draggedRecord.level = droppedRecord.level + 1;\n        this.updateChildRecordLevel(draggedRecord, level);\n      }\n      droppedRecord.expanded = true;\n    }\n  };\n  RowDD.prototype.deleteDragRow = function () {\n    if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n      this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n      this.treeData = this.parent.dataSource.dataSource.json;\n    } else {\n      this.treeGridData = this.parent.grid.dataSource;\n      this.treeData = this.parent.dataSource;\n    }\n    var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n    if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n      deletedRow.hasChildRecords = true;\n    }\n    this.removeRecords(deletedRow);\n  };\n  RowDD.prototype.updateChildRecord = function (record, count) {\n    var currentRecord;\n    var tObj = this.parent;\n    var length = 0;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    length = record.childRecords.length;\n    for (var i = 0; i < length; i++) {\n      if (!this.isMultipleGrid) {\n        currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n      } else {\n        currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n      }\n      count++;\n      tObj.flatData.splice(count, 0, currentRecord);\n      setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n      if (tObj.parentIdMapping) {\n        this.treeData.splice(count, 0, currentRecord.taskData);\n      }\n      if (currentRecord.hasChildRecords) {\n        count = this.updateChildRecord(currentRecord, count);\n      }\n    }\n    return count;\n  };\n  RowDD.prototype.updateChildRecordLevel = function (record, level) {\n    var length = 0;\n    var currentRecord;\n    level++;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    length = record.childRecords.length;\n    for (var i = 0; i < length; i++) {\n      if (!this.isMultipleGrid) {\n        currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n      } else {\n        currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n      }\n      var parentData = void 0;\n      if (record.parentItem) {\n        parentData = getParentData(this.parent, record.parentItem.uniqueID);\n      }\n      if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n        parentData = record.parentItem;\n      }\n      currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n      if (currentRecord.hasChildRecords) {\n        level--;\n        level = this.updateChildRecordLevel(currentRecord, level);\n      }\n    }\n    return level;\n  };\n  RowDD.prototype.removeRecords = function (record) {\n    var tObj = this.parent;\n    var dataSource;\n    if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n      dataSource = this.parent.dataSource.dataSource.json;\n    } else {\n      dataSource = this.parent.dataSource;\n    }\n    var deletedRow = record;\n    var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n    var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n    if (deletedRow) {\n      if (deletedRow.parentItem) {\n        var childRecords = flatParentData ? flatParentData.childRecords : [];\n        var childIndex = 0;\n        if (childRecords && childRecords.length > 0) {\n          childIndex = childRecords.indexOf(deletedRow);\n          flatParentData.childRecords.splice(childIndex, 1);\n          if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n            editAction({\n              value: deletedRow,\n              action: 'delete'\n            }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n          }\n        }\n      }\n      if (tObj.parentIdMapping) {\n        if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n          this.removeChildItem(deletedRow);\n        }\n        var idx = void 0;\n        var idz = void 0;\n        var treeGridData = dataSource;\n        for (var i = 0; i < treeGridData.length; i++) {\n          if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n            idx = i;\n          }\n        }\n        for (var i = 0; i < this.treeGridData.length; i++) {\n          if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n            idz = i;\n          }\n        }\n        if (idx !== -1 && !isNullOrUndefined(idx)) {\n          dataSource.splice(idx, 1);\n        }\n        if (idz !== -1 && !isNullOrUndefined(idz)) {\n          this.treeGridData.splice(idz, 1);\n        }\n      }\n      var recordIndex = this.treeGridData.indexOf(deletedRow);\n      if (!tObj.parentIdMapping) {\n        var parentIndex = this.parent.parentData.indexOf(deletedRow);\n        if (parentIndex !== -1) {\n          tObj.parentData.splice(parentIndex, 1);\n          dataSource.splice(parentIndex, 1);\n        }\n      }\n      if (recordIndex === -1 && !tObj.parentIdMapping) {\n        var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n        for (var j = 0; j < this.treeGridData.length; j++) {\n          if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n            recordIndex = j;\n          }\n        }\n      }\n      if (!tObj.parentIdMapping) {\n        var deletedRecordCount = this.getChildCount(deletedRow, 0);\n        this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n      }\n      if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n        flatParentData.expanded = false;\n        flatParentData.hasChildRecords = false;\n        flatParentData.hasFilteredChildRecords = false;\n      }\n      if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n        this.parent[this.modifiedRecords].push(flatParentData);\n      }\n      if (!isNullOrUndefined(flatParentData)) {\n        this.updateModifiedRecords(flatParentData);\n      }\n    }\n  };\n  RowDD.prototype.updateModifiedRecords = function (record) {\n    var parentData = getParentData(this.parent, record.parentUniqueID);\n    if (!isNullOrUndefined(parentData)) {\n      this.parent[this.modifiedRecords].push(parentData);\n      this.updateModifiedRecords(parentData);\n    }\n  };\n  RowDD.prototype.removeChildItem = function (record) {\n    var currentRecord;\n    var idx;\n    var idz;\n    var dataSource;\n    if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n      dataSource = this.parent.dataSource.dataSource.json;\n    } else {\n      dataSource = this.parent.dataSource;\n    }\n    for (var i = 0; i < record.childRecords.length; i++) {\n      currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n      if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n        currentRecord.hasChildRecords = true;\n      }\n      var treeGridData = void 0;\n      if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n        treeGridData = this.parent.dataSource.dataSource.json;\n      } else {\n        treeGridData = this.parent.dataSource;\n      }\n      for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n        if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n          idx = i_2;\n        }\n      }\n      for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n        if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n          idz = i_3;\n          break;\n        }\n      }\n      if (idx !== -1 && !isNullOrUndefined(idx)) {\n        dataSource.splice(idx, 1);\n      }\n      if (idz !== -1 && !isNullOrUndefined(idz)) {\n        this.treeGridData.splice(idz, 1);\n      }\n      if (currentRecord.hasChildRecords) {\n        this.removeChildItem(currentRecord);\n      }\n    }\n  };\n  RowDD.prototype.getChildCount = function (record, count) {\n    var currentRecord;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    for (var i = 0; i < record.childRecords.length; i++) {\n      currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n      count++;\n      if (currentRecord.hasChildRecords) {\n        count = this.getChildCount(currentRecord, count);\n      }\n    }\n    return count;\n  };\n  RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n    var _this = this;\n    draggedRecords.filter(function (e) {\n      if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n        var valid = e.childRecords.indexOf(currentRecord);\n        if (valid === -1) {\n          _this.ensuredropPosition(e.childRecords, currentRecord);\n        } else {\n          _this.dropPosition = 'Invalid';\n          _this.addErrorElem();\n          _this.canDrop = false;\n          return;\n        }\n      }\n    });\n  };\n  RowDD.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  RowDD.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(events.rowdraging, this.Rowdraging);\n    this.parent.off(events.rowDropped, this.rowDropped);\n    this.parent.off(events.rowsAdd, this.rowsAdded);\n    this.parent.off(events.rowsRemove, this.rowsRemoved);\n  };\n  /**\n   * hidden\n   */\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @private\n   * @returns {string} Returns RowDragAndDrop module name\n   */\n  RowDD.prototype.getModuleName = function () {\n    return 'rowDragAndDrop';\n  };\n  return RowDD;\n}();\nexport { RowDD };","map":{"version":3,"names":["Grid","RowDD","GridDragDrop","parentsUntil","getObject","Scroll","closest","isNullOrUndefined","classList","setValue","extend","getValue","removeClass","addClass","setStyleAttribute","DataManager","events","editAction","getParentData","findChildrenRecords","isRemoteData","isOffline","isCountRequired","parent","canDrop","isDraggedWithChild","modifiedRecords","selectedRecords","selectedRows","hasDropItem","isaddtoBottom","Inject","addEventListener","prototype","getChildrecordsByParentID","id","treeGridDataSource","dataSource","grid","json","record","filter","e","uniqueID","on","rowdraging","Rowdraging","rowDropped","rowsAdd","rowsAdded","rowsRemove","rowsRemoved","reorderRows","fromIndexes","toIndex","position","tObj","action","dropPosition","updateRowAndCellElements","indexOf","data","i","length","index","getRowByIndex","parseInt","toString","rowIndex","getCurrentViewRecords","isByMethod","args","dropIndex","dropRows","isLocalData","flatData","orderToIndex","parentItem","level","refresh","enableImmutableMode","allowRowDragAndDrop","treeColumnIndex","row","getRows","dropData","totalRecord","rows","push","parentUniqueID","parentData","parentrow","indentOutdentAction","request","droppedIndex","selectedItemIndex","selectedRowIndex","enableVirtualization","getSelectedRows","selectedItem","primaryKeyField","getPrimaryKeyFieldNames","getRowIndexByPrimaryKey","selectedRow","selectedRecord","record_1","taskData","getAttribute","eventTrigger","_this","actionArgs","cancel","trigger","actionBegin","currentData","updatedParent","draggedRecord","dragRecords","records","childRecords","parentRecord","idMapping","splice","hasChildRecords","hasFilteredChildRecords","draggedRecord_1","dragRecords_1","dragLength","parentIdMapping","recordIndex1","childMapping","Object","hasOwnProperty","call","childData","j","setProperties","treeGridData","treeData","map","deleteDragRow","refreshGridDataSource","droppedRecord","proxy","tempDataSource","idx","keys","removeFirstrowBorder","element","canremove","getElementsByClassName","remove","removeLastrowBorder","isEmptyRow","contains","islastRowIndex","updateIcon","rowEle","target","undefined","rowPositionHeight","addErrorElem","rowTop","roundOff","toolHeight","toolbar","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","getHeaderContent","top","scrollTop","getContent","firstElementChild","offsetTop","getBoundingClientRect","rowBottom","difference","divide","topRowSegment","middleRowSegment","bottomRowSegment","mouseEvent","touchEvent","posy","type","pageY","changedTouches","clientY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","rowElement","slice","querySelectorAll","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","createElement","className","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","rowDropSettings","targetID","style","width","offsetWidth","getScrollWidth","appendChild","trElement","bottomborder","gridcontentEle","add","bottom","scrollElem","scrollWidth","getScrollBarWidth","dragelem","errorelem","sanitize","ele","errorVal","querySelector","content","innerHTML","parentNode","removeChild","spanContent","paddingLeft","dropItemSpan","dropItemLeft","left","spanLeft","enableRtl","errorValue","border","cells","len","box","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","Math","round","cloneElement","cursor","rowIdx","ensuredropPosition","rowDragAndDropModule","dropElement","srcControl","ej2_instances","rowDrop","dragDropGrid","allowPaging","renderModule","cellRender","cell","column","getColumns","requestType","targetEle","targetIndex","isNaN","getTargetIdx","getSelectedRecords","indexes","actualData","child","i_1","notify","srcControlFlatData","actualIndex","getSelectedRowIndexes","draggedRecord_2","fromIndex","parentElement","count","isMultipleGrid","reverse","_loop_1","this_1","correctIndex","offsetParent","parentRecords","newParentIndex","dropAtTop","getChildCount","rec","droppedRecordIndex","updateChildRecordLevel","updateChildRecord","dropMiddle","nonRepeat_1","recordIndex","childRecordsLength","recordLevel","childItem","isSelfReference","expanded","deletedRow","removeRecords","currentRecord","flatParentData","childIndex","value","removeChildItem","idz","parentIndex","deletedRecordCount","updateModifiedRecords","i_2","i_3","draggedRecords","valid","destroy","removeEventListener","isDestroyed","off","getModuleName"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/rowdragdrop.js"],"sourcesContent":["import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass, setStyleAttribute } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.modifiedRecords = 'modifiedRecords';\n        /** @hidden */\n        this.selectedRecords = 'selectedRecords';\n        /** @hidden */\n        this.selectedRows = 'selectedRows';\n        /** @hidden */\n        this.hasDropItem = true;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        var action = 'action';\n        var dropPosition = 'dropPosition';\n        var updateRowAndCellElements = 'updateRowAndCellElements';\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            this.parent[\"\" + dropPosition] = this.dropPosition;\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                var index = this.parent.getRowByIndex(fromIndexes[parseInt(i.toString(), 10)]).rowIndex;\n                data[parseInt(i.toString(), 10)] = this.parent.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            if (this.parent[\"\" + action] === 'outdenting') {\n                if (!isNullOrUndefined(data[0].parentItem)) {\n                    data[0].level = data[0].parentItem.level + 1;\n                }\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'indenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                var parentrow = this.parent.getRows()[parseInt(toIndex.toString(), 10)];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n            if (this.parent.enableImmutableMode && this.parent[\"\" + action] === 'outdenting') {\n                var index = void 0;\n                if (this.parent.allowRowDragAndDrop) {\n                    index = this.parent.treeColumnIndex + 1;\n                }\n                else if (this.parent[\"\" + action] === 'outdenting') {\n                    index = this.parent.treeColumnIndex;\n                }\n                var record = args.data[0];\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(record);\n                rows.push(row);\n                this.parent[\"\" + updateRowAndCellElements](totalRecord, rows, index);\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.indentOutdentAction = function (record, request) {\n        var tObj = this.parent;\n        var action = 'action';\n        var droppedIndex = 'dropIndex';\n        var selectedItemIndex = -1;\n        if (isNullOrUndefined(record) && this.parent.selectedRowIndex === -1) {\n            return;\n        }\n        else {\n            if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n            }\n            else if (this.parent.selectedRowIndex !== -1) {\n                selectedItemIndex = this.parent.selectedRowIndex;\n            }\n            this.selectedItem = isNullOrUndefined(record) ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)] : record;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(this.selectedItem[\"\" + primaryKeyField]);\n            this.selectedRow = this.parent[this.selectedRows] = selectedItemIndex !== -1 ?\n                this.parent.getSelectedRows()[0]\n                : this.parent.grid.getRowByIndex(rowIndex);\n            this.selectedRecord = this.parent[this.selectedRecords] = selectedItemIndex !== -1 ?\n                tObj.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)]\n                : this.selectedItem;\n            if (request === 'indent') {\n                var record_1 = tObj.getCurrentViewRecords()[this.selectedRow.rowIndex - 1];\n                var dropIndex = void 0;\n                if (this.selectedRow.rowIndex === 0 || this.selectedRow.rowIndex === -1 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level - record_1.level === 1) {\n                    return;\n                }\n                if (record_1.level > this.selectedRecord.level) {\n                    for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                        if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].taskData ===\n                            record_1.parentItem.taskData) {\n                            dropIndex = i;\n                            if (tObj.enableVirtualization) {\n                                dropIndex = parseInt(tObj.getRows()[parseInt(i.toString(), 10)].getAttribute('data-rowindex'), 10);\n                            }\n                        }\n                    }\n                }\n                else {\n                    dropIndex = this.selectedRow.rowIndex - 1;\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord && !(record_1.level > this.selectedRecord.level)) {\n                    dropIndex = parseInt(this.selectedRow.getAttribute('data-rowindex'), 10) - 1;\n                }\n                tObj[\"\" + action] = 'indenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('indenting', dropIndex);\n            }\n            else if (request === 'outdent') {\n                if (this.selectedRow.rowIndex === -1 || this.selectedRow.rowIndex === 0 ||\n                    tObj.getCurrentViewRecords()[this.selectedRow.rowIndex].level === 0) {\n                    return;\n                }\n                var dropIndex = void 0;\n                var parentItem = this.selectedRecord.parentItem;\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[parseInt(i.toString(), 10)].uniqueID === parentItem.uniqueID) {\n                        dropIndex = i;\n                    }\n                }\n                if (this.parent.enableVirtualization && this.selectedRecord) {\n                    dropIndex = parseInt(this.parent.getRows()[parseInt(dropIndex.toString(), 10)].getAttribute('data-rowindex'), 10);\n                }\n                tObj[\"\" + action] = 'outdenting';\n                tObj[\"\" + droppedIndex] = dropIndex;\n                this.eventTrigger('outdenting', dropIndex);\n            }\n        }\n    };\n    RowDD.prototype.eventTrigger = function (action, dropIndex) {\n        var _this = this;\n        var actionArgs = {\n            action: action,\n            cancel: false,\n            data: [this.parent[this.selectedRecords]],\n            row: this.parent[this.selectedRows]\n        };\n        this.parent.trigger(events.actionBegin, actionArgs, function (actionArgs) {\n            if (!actionArgs.cancel) {\n                if (actionArgs.action === 'indenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'child');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'child');\n                    }\n                }\n                else if (actionArgs.action === 'outdenting') {\n                    if (_this.parent.enableVirtualization) {\n                        _this.reorderRows([parseInt(_this.selectedRow.getAttribute('data-rowindex'), 10)], dropIndex, 'below');\n                    }\n                    else {\n                        _this.reorderRows([_this.selectedRow.rowIndex], dropIndex, 'below');\n                    }\n                }\n            }\n        });\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        for (var i = 0; i < currentData.length; i++) {\n            currentData[parseInt(i.toString(), 10)].index = i;\n            if (!isNullOrUndefined(currentData[parseInt(i.toString(), 10)].parentItem)) {\n                var updatedParent = getValue('uniqueIDCollection.' + currentData[parseInt(i.toString(), 10)].parentUniqueID, this.parent);\n                currentData[parseInt(i.toString(), 10)].parentItem.index = updatedParent.index;\n            }\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[parseInt(i.toString(), 10)];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[parseInt(i.toString(), 10)];\n                if (!i && draggedRecord_1.hasChildRecords) {\n                    draggedRecord_1.taskData[this.parent.parentIdMapping] = null;\n                }\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) && !isNullOrUndefined(tObj.childMapping) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (!isNullOrUndefined(draggedRecord_1[tObj.childMapping])) {\n                    if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                        (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                        !isNullOrUndefined(tObj.parentIdMapping)) {\n                        var childData = (draggedRecord_1[tObj.childMapping]);\n                        for (var j = 0; j < childData.length; j++) {\n                            if (dragRecords_1.indexOf(childData[parseInt(j.toString(), 10)]) === -1) {\n                                dragRecords_1.splice(j, 0, childData[parseInt(j.toString(), 10)]);\n                                childData[parseInt(j.toString(), 10)].taskData = extend({}, childData[parseInt(j.toString(), 10)]);\n                                i += 1;\n                            }\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping)\n                    && draggedRecord_1[tObj.parentIdMapping] !== null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[parseInt(i.toString(), 10)].uniqueID, dragRecords[parseInt(i.toString(), 10)], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 :\n                    args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[parseInt(i.toString(), 10)];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)\n            && !isNullOrUndefined(droppedRecord.taskData)) {\n            var keys = Object.keys(tempDataSource);\n            for (var i = 0; i < keys.length; i++) {\n                if (tempDataSource[parseInt(i.toString(), 10)][this.parent.childMapping] ===\n                    droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][parseInt(i.toString(), 10)]\n                        = childRecords[parseInt(i.toString(), 10)].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader')\n            || element.classList.contains('e-detailrow'));\n        var islastRowIndex;\n        if (this.parent.enableVirtualization) {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        else {\n            islastRowIndex = element && !isEmptyRow &&\n                this.parent.getRowByIndex(this.parent.getCurrentViewRecords().length - 1).getAttribute('data-uid') !==\n                    element.getAttribute('data-uid');\n        }\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[parseInt(i.toString(), 10)].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (this.parent.enableVirtualization) {\n            rowTop = rowEle.getBoundingClientRect().top;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var touchEvent = getObject('originalEvent.event', args);\n        var posy = (mouseEvent.type === 'mousemove') ? mouseEvent.pageY : ((!isNullOrUndefined(touchEvent) &&\n            !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].pageY : null);\n        if (this.parent.enableVirtualization) {\n            posy = (mouseEvent.type === 'mousemove') ? mouseEvent.clientY : ((!isNullOrUndefined(touchEvent) &&\n                !isNullOrUndefined(touchEvent.changedTouches)) ? touchEvent.changedTouches[0].clientY : null);\n        }\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader') || trElement.classList.contains('e-detailrow'));\n        if (trElement && !isEmptyRow && this.parent.getRows()[this.parent.getCurrentViewRecords().length - 1].getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        var sanitize = 'sanitize';\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = this.parent[\"\" + sanitize](errorVal.innerHTML);\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = this.parent[\"\" + sanitize](content);\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n            var dropItemSpan = document.querySelector('.e-dropitemscount');\n            if (this.hasDropItem && dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) + ele.offsetWidth + 16;\n                var spanLeft = !this.parent.enableRtl ? dropItemLeft : 0;\n                dropItemSpan.style.left = spanLeft + \"px\";\n                this.hasDropItem = false;\n            }\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        var errorValue = document.querySelector('.errorValue');\n        var dropItemSpan = document.querySelector('.e-dropitemscount');\n        if (errorelem) {\n            if (dropItemSpan) {\n                var dropItemLeft = parseInt(dropItemSpan.style.left, 10) - errorelem.offsetWidth - 16;\n                setStyleAttribute(errorValue, {\n                    paddingLeft: '0px'\n                });\n                if (!this.parent.enableRtl) {\n                    setStyleAttribute(dropItemSpan, {\n                        left: dropItemLeft + \"px\"\n                    });\n                }\n            }\n            errorelem.remove();\n        }\n        this.hasDropItem = true;\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[parseInt(i.toString(), 10)].classList.add(className);\n            }\n            else {\n                cells[parseInt(i.toString(), 10)].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[parseInt(rowIdx.toString(), 10)];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop && !isNullOrUndefined(args.rows[0])) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (isNullOrUndefined(tObj.rowDropSettings.targetID) && !this.canDrop) {\n            this.removetopOrBottomBorder();\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID || args.target && document.getElementById(tObj.rowDropSettings.targetID)) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][\"\" + parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField]);\n            var row = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][\"\" + parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[\"\" + primaryKeyField]);\n                var parentrow = this.parent.getRows()[parseInt(rowIndex.toString(), 10)];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[parseInt(i.toString(), 10)],\n                        cell: rows[parseInt(i.toString(), 10)].cells[parseInt(index.toString(), 10)],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[parseInt(index.toString(), 10)],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[parseInt(i.toString(), 10)] = records[parseInt(i.toString(), 10)].index;\n            }\n            var data = srcControl.dataSource;\n            if (this.parent.idMapping !== null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment' || this.dropPosition === 'Invalid') && !(data.length)) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[parseInt(i.toString(), 10)].hasChildRecords) {\n                        actualData.push(records[parseInt(i.toString(), 10)]);\n                        var child = findChildrenRecords(records[parseInt(i.toString(), 10)]);\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[parseInt(i_1.toString(), 10)]); // push child records to drop the parent record along with its child records\n                        }\n                    }\n                }\n                if (actualData.length) {\n                    records = actualData;\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[parseInt(i.toString(), 10)].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[parseInt(i.toString(), 10)].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[parseInt(i.toString(), 10)].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[parseInt(i.toString(), 10)].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('data-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record, data) {\n        var parentItem = record.parentItem;\n        var selectedItemIndex = -1;\n        if (this.parent.enableVirtualization && this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.getSelectedRows()[0].rowIndex;\n        }\n        else if (this.parent.selectedRowIndex !== -1) {\n            selectedItemIndex = this.parent.selectedRowIndex;\n        }\n        if (this.dropPosition === 'bottomSegment') {\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = selectedItemIndex === -1 ?\n                (this.parent.grid.getRowIndexByPrimaryKey(data[0][\"\" + primaryKeyField]))\n                : this.parent.getSelectedRowIndexes()[0];\n            var selectedRecord = this.parent.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getCurrentViewRecords()[parseInt(selectedItemIndex.toString(), 10)].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord_2;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n                var rowIndex = tObj.selectedRowIndex === -1 ?\n                    (this.parent.grid.getRowIndexByPrimaryKey(args.data[0][\"\" + primaryKeyField])) - 1\n                    : tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[parseInt(rowIndex.toString(), 10)];\n                this.getParentData(record, args.data);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                if (this.parent.enableVirtualization) {\n                    var index = this.parent.getRowByIndex(args.dropIndex).rowIndex;\n                    this.droppedRecord = tObj.getCurrentViewRecords()[parseInt(index.toString(), 10)];\n                }\n                else {\n                    this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n                }\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            this.parent[this.modifiedRecords].push(args.data[0], droppedRecord);\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            var _loop_1 = function (i) {\n                draggedRecord_2 = dragRecords[parseInt(i.toString(), 10)];\n                this_1.draggedRecord = draggedRecord_2;\n                if (this_1.dropPosition !== 'Invalid' && !isNullOrUndefined(this_1.droppedRecord)) {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this_1.deleteDragRow();\n                    }\n                    if (this_1.draggedRecord === this_1.droppedRecord) {\n                        var correctIndex = this_1.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this_1.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this_1.droppedRecord = this_1.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    if (droppedRecord.parentItem || this_1.dropPosition === 'middleSegment') {\n                        var parentRecords = tObj.parentData;\n                        var newParentIndex = parentRecords.indexOf(this_1.draggedRecord);\n                        if (newParentIndex !== -1) {\n                            parentRecords.splice(newParentIndex, 1);\n                        }\n                    }\n                    var recordIndex1 = this_1.treeGridData.indexOf(droppedRecord);\n                    this_1.dropAtTop(recordIndex1);\n                    if (this_1.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + 1, 0, this_1.draggedRecord);\n                        }\n                        else {\n                            count = this_1.getChildCount(droppedRecord, 0);\n                            if (this_1.parent.parentIdMapping) {\n                                this_1.treeData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord.taskData);\n                            }\n                            this_1.treeGridData.splice(recordIndex1 + count + 1, 0, this_1.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord_2.parentItem;\n                            delete draggedRecord_2.parentUniqueID;\n                            draggedRecord_2.level = 0;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this_1.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord_2);\n                            draggedRecord_2.parentItem = droppedRecord.parentItem;\n                            draggedRecord_2.parentUniqueID = droppedRecord.parentUniqueID;\n                            draggedRecord_2.level = droppedRecord.level;\n                            if (this_1.parent.parentIdMapping) {\n                                draggedRecord_2[this_1.parent.parentIdMapping] = droppedRecord[this_1.parent.parentIdMapping];\n                                draggedRecord_2.parentItem = droppedRecord.parentItem;\n                                draggedRecord_2.level = droppedRecord.level;\n                            }\n                        }\n                        if (draggedRecord_2.hasChildRecords) {\n                            var level = 1;\n                            this_1.updateChildRecordLevel(draggedRecord_2, level);\n                            this_1.updateChildRecord(draggedRecord_2, recordIndex1 + count + 1);\n                        }\n                    }\n                    this_1.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord_2.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this_1.droppedRecord);\n                    var nonRepeat_1 = 0;\n                    parentRecords.filter(function (e) {\n                        if (draggedRecord_2.uniqueID === e.uniqueID) {\n                            nonRepeat_1++;\n                        }\n                    });\n                    if (this_1.dropPosition === 'bottomSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord_2);\n                    }\n                    else if (this_1.dropPosition === 'topSegment' && nonRepeat_1 === 0) {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord_2);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            };\n            var this_1 = this;\n            for (var i = 0; i < dragLength; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[parseInt(recordIndex1.toString(), 10)].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[parseInt(recordIndex1.toString(), 10)].level;\n            this.treeGridData.splice(parseInt(recordIndex1.toString(), 10), 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                    droppedRecord.taskData[\"\" + childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            var isSelfReference = 'isSelfReference';\n            if (tObj[\"\" + isSelfReference]) {\n                droppedRecord[tObj.childMapping] = [];\n                droppedRecord[tObj.childMapping].splice(droppedRecord[tObj.childMapping].length, 0, draggedRecord);\n            }\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[\"\" + childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        if (!isNullOrUndefined(deletedRow.childRecords) && deletedRow.childRecords.length) {\n            deletedRow.hasChildRecords = true;\n        }\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, tObj);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            if (!this.isMultipleGrid) {\n                currentRecord = getValue('uniqueIDCollection.' + record.childRecords[parseInt(i.toString(), 10)].uniqueID, this.parent);\n            }\n            else {\n                currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            }\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping || tObj.enableImmutableMode) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[parseInt(i.toString(), 10)][this.parent.idMapping]\n                        === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 && !isNullOrUndefined(idx)) {\n                    dataSource.splice(idx, 1);\n                }\n                if (idz !== -1 && !isNullOrUndefined(idz)) {\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[parseInt(j.toString(), 10)][\"\" + primaryKeyField] === deletedRow[\"\" + primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n            if (this.parent[this.modifiedRecords].indexOf(flatParentData) === -1 && !isNullOrUndefined(flatParentData)) {\n                this.parent[this.modifiedRecords].push(flatParentData);\n            }\n            if (!isNullOrUndefined(flatParentData)) {\n                this.updateModifiedRecords(flatParentData);\n            }\n        }\n    };\n    RowDD.prototype.updateModifiedRecords = function (record) {\n        var parentData = getParentData(this.parent, record.parentUniqueID);\n        if (!isNullOrUndefined(parentData)) {\n            this.parent[this.modifiedRecords].push(parentData);\n            this.updateModifiedRecords(parentData);\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            if (!isNullOrUndefined(currentRecord.childRecords) && currentRecord.childRecords.length) {\n                currentRecord.hasChildRecords = true;\n            }\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[parseInt(i_2.toString(), 10)][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[parseInt(i_3.toString(), 10)][this.parent.idMapping]\n                    === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 && !isNullOrUndefined(idx)) {\n                dataSource.splice(idx, 1);\n            }\n            if (idz !== -1 && !isNullOrUndefined(idz)) {\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[parseInt(i.toString(), 10)];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}