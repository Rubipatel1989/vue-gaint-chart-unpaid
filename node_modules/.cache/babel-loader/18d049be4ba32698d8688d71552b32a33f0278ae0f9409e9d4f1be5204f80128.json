{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport { createElement, isNullOrUndefined, isObject, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { isScheduledTask } from '../base/utils';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * To render the connector line in Gantt\n */\nvar ConnectorLine = /** @class */function () {\n  function ConnectorLine(ganttObj) {\n    this.transform = '';\n    this.connectorLinePath = '';\n    this.arrowPath = '';\n    this.taskLineValue = 0;\n    this.expandedRecords = [];\n    this.parent = ganttObj;\n    this.dependencyViewContainer = createElement('div', {\n      className: cls.dependencyViewContainer\n    });\n    Object.assign(this.dependencyViewContainer.style, {\n      width: '100%',\n      height: '100%',\n      zIndex: 2,\n      position: 'absolute',\n      pointerEvents: 'none'\n    });\n    this.renderer = new SvgRenderer(this.parent.element.id);\n    this.initPublicProp();\n    this.svgObject = this.renderer.createSvg({\n      id: this.parent.element.id + '_svg'\n    });\n    this.svgObject.setAttribute('height', '100%');\n    this.svgObject.setAttribute('width', '100%');\n  }\n  /**\n   * To get connector line gap.\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {number} .\n   * @private\n   */\n  ConnectorLine.prototype.getconnectorLineGap = function (data) {\n    var width = 0;\n    width = data.milestoneChild ? this.parent.chartRowsModule.milestoneMarginTop / 2 + this.parent.chartRowsModule.milestoneHeight / 2 : this.parent.chartRowsModule.taskBarMarginTop / 2 + this.parent.chartRowsModule.taskBarHeight / 2;\n    return width;\n  };\n  /**\n   * To initialize the public property.\n   *\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.initPublicProp = function () {\n    this.lineColor = this.parent.connectorLineBackground;\n    this.lineStroke = this.parent.connectorLineWidth > 4 ? 4 : this.parent.connectorLineWidth;\n    this.createConnectorLineTooltipTable();\n  };\n  ConnectorLine.prototype.getTaskbarMidpoint = function (isMilestone) {\n    return Math.floor(isMilestone ? this.parent.chartRowsModule.milestoneMarginTop + this.parent.chartRowsModule.milestoneHeight / 2 : this.parent.chartRowsModule.taskBarMarginTop + this.parent.chartRowsModule.taskBarHeight / 2) + 1;\n  };\n  /**\n   * To connector line object collection.\n   *\n   * @param {IGanttData} parentGanttData .\n   * @param {IGanttData} childGanttData .\n   * @param {IPredecessor}  predecessor .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.createConnectorLineObject = function (parentGanttData, childGanttData, predecessor) {\n    var connectorObj = {};\n    var updatedRecords;\n    if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n      updatedRecords = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'];\n    } else {\n      updatedRecords = this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport ? this.parent.flatData : this.expandedRecords;\n    }\n    var parentIndex;\n    var childIndex;\n    if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n      var parentData = this.parent.flatData.filter(function (data) {\n        return data.ganttProperties.taskId.toString() === parentGanttData.ganttProperties.taskId.toString();\n      })[0];\n      var childData = this.parent.flatData.filter(function (data) {\n        return data.ganttProperties.taskId.toString() === childGanttData.ganttProperties.taskId.toString();\n      })[0];\n      parentIndex = parentData.index;\n      childIndex = childData.index;\n    } else {\n      parentIndex = updatedRecords.indexOf(parentGanttData);\n      childIndex = updatedRecords.indexOf(childGanttData);\n    }\n    var parentGanttRecord = parentGanttData.ganttProperties;\n    var childGanttRecord = childGanttData.ganttProperties;\n    var currentData;\n    if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n      currentData = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'] : this.parent.getExpandedRecords(this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData']);\n    } else {\n      currentData = this.parent.virtualScrollModule && this.parent.enableVirtualization ? this.parent.currentViewData : this.parent.getExpandedRecords(this.parent.currentViewData);\n    }\n    connectorObj.parentIndexInCurrentView = currentData.indexOf(parentGanttData);\n    connectorObj.childIndexInCurrentView = currentData.indexOf(childGanttData);\n    var isVirtualScroll = this.parent.virtualScrollModule && this.parent.enableVirtualization;\n    if (!isVirtualScroll && (connectorObj.parentIndexInCurrentView === -1 || connectorObj.childIndexInCurrentView === -1) || connectorObj.parentIndexInCurrentView === -1 && connectorObj.childIndexInCurrentView === -1) {\n      return null;\n    } else {\n      connectorObj.parentLeft = parentGanttRecord.isMilestone ? parentGanttRecord.left - this.parent.chartRowsModule.milestoneHeight / 2 : parentGanttRecord.left;\n      connectorObj.childLeft = childGanttRecord.isMilestone ? childGanttRecord.left - this.parent.chartRowsModule.milestoneHeight / 2 : childGanttRecord.left;\n      connectorObj.parentWidth = parentGanttRecord.width === 0 || parentGanttRecord.isMilestone ? Math.floor(this.parent.chartRowsModule.milestoneHeight) : parentGanttRecord.width;\n      connectorObj.childWidth = childGanttRecord.width === 0 || childGanttRecord.isMilestone ? Math.floor(this.parent.chartRowsModule.milestoneHeight) : childGanttRecord.width;\n      connectorObj.parentIndex = parentIndex;\n      connectorObj.childIndex = childIndex;\n      connectorObj.rowHeight = !isNullOrUndefined(this.parent.ganttChartModule.getChartRows()) && this.parent.ganttChartModule.getChartRows()[0] && this.parent.ganttChartModule.getChartRows()[0].offsetHeight;\n      connectorObj.type = predecessor.type;\n      var parentId = this.parent.viewType === 'ResourceView' ? parentGanttRecord.taskId : parentGanttRecord.rowUniqueID;\n      var childId = this.parent.viewType === 'ResourceView' ? childGanttRecord.taskId : childGanttRecord.rowUniqueID;\n      connectorObj.connectorLineId = 'parent' + parentId + 'child' + childId;\n      connectorObj.milestoneParent = parentGanttRecord.isMilestone ? true : false;\n      connectorObj.milestoneChild = childGanttRecord.isMilestone ? true : false;\n      connectorObj.parentEndPoint = connectorObj.parentLeft + connectorObj.parentWidth;\n      connectorObj.childEndPoint = connectorObj.childLeft + connectorObj.childWidth;\n      if (isNullOrUndefined(isScheduledTask(parentGanttRecord)) || isNullOrUndefined(isScheduledTask(childGanttRecord))) {\n        return null;\n      } else {\n        return connectorObj;\n      }\n    }\n  };\n  /**\n   * To render connector line.\n   *\n   * @param {IConnectorLineObject} connectorLinesCollection .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.renderConnectorLines = function (connectorLinesCollection) {\n    var connectorLine = '';\n    var ariaConnector = [];\n    for (var index = 0; index < connectorLinesCollection.length; index++) {\n      connectorLine = connectorLine + this.getConnectorLineTemplate(connectorLinesCollection[index]);\n      ariaConnector.push(connectorLinesCollection[index]);\n    }\n    this.svgObject.innerHTML = connectorLine;\n    var childNodes = this.parent.connectorLineModule.svgObject.childNodes;\n    for (var i = 0; i < childNodes.length; i++) {\n      var innerChild = childNodes[i].childNodes;\n      for (var j = 0; j < innerChild.length; j++) {\n        var ariaString = 'Connector Line ' + this.parent.connectorLineModule.generateAriaLabel(ariaConnector[i]);\n        innerChild[j].setAttribute('aria-label', ariaString);\n        innerChild[j].setAttribute('role', 'img');\n      }\n    }\n    this.parent.ganttChartModule.chartBodyContent.insertBefore(this.dependencyViewContainer, this.parent.ganttChartModule.chartBodyContent.lastChild);\n    this.dependencyViewContainer.appendChild(this.svgObject);\n    for (var i = 0; i < this.svgObject.children.length; i++) {\n      this.svgObject.children[i].children[0].setAttribute('tabindex', '-1');\n    }\n  };\n  /**\n   * To get parent position.\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.getParentPosition = function (data) {\n    if (data.parentIndex < data.childIndex) {\n      if (data.type === 'FF') {\n        if (data.childLeft + data.childWidth >= data.parentLeft + data.parentWidth) {\n          return 'FFType2';\n        } else {\n          return 'FFType1';\n        }\n      } else if (data.parentLeft < data.childLeft && data.childLeft > data.parentLeft + data.parentWidth + 25) {\n        if (data.type === 'FS') {\n          return 'FSType1';\n        }\n        if (data.type === 'SF') {\n          return 'SFType1';\n        } else if (data.type === 'SS') {\n          return 'SSType2';\n        }\n      } else if (data.parentLeft < data.childLeft && data.childLeft < data.parentLeft + data.parentWidth || data.parentLeft === data.childLeft || data.parentLeft > data.childLeft) {\n        if (data.parentLeft > data.childLeft + data.childWidth + 25) {\n          if (data.type === 'SF') {\n            return 'SFType2';\n          }\n        }\n        if (data.parentLeft > data.childLeft) {\n          if (data.type === 'SS') {\n            return 'SSType1';\n          }\n          if (data.type === 'SF') {\n            return 'SFType1';\n          }\n        }\n        if (data.type === 'FS') {\n          return 'FSType2';\n        } else if (data.type === 'SS') {\n          return 'SSType2';\n        } else if (data.type === 'SF') {\n          return 'SFType1';\n        }\n      } else if (data.parentLeft < data.childLeft) {\n        if (data.type === 'FS') {\n          return 'FSType2';\n        } else if (data.type === 'SS') {\n          return 'SSType2';\n        } else if (data.type === 'SF') {\n          return 'SFType1';\n        }\n      }\n    } else if (data.parentIndex > data.childIndex) {\n      if (data.parentLeft < data.childLeft && data.childLeft > data.parentLeft + data.parentWidth) {\n        if (data.type === 'FS') {\n          if (30 >= data.childLeft - (data.milestoneParent ? data.parentLeft + data.parentWidth + 4 : data.parentLeft + data.parentWidth)) {\n            return 'FSType3';\n          } else {\n            return 'FSType4';\n          }\n        }\n        if (data.childLeft + data.childWidth > data.parentLeft + data.parentWidth) {\n          if (data.type === 'SS') {\n            return 'SSType4';\n          }\n          if (data.type === 'FF') {\n            return 'FFType4';\n          }\n          if (data.type === 'SF') {\n            return 'SFType4';\n          }\n        }\n      } else if (data.parentLeft < data.childLeft && data.childLeft < data.parentLeft + data.parentWidth || data.parentLeft === data.childLeft || data.parentLeft > data.childLeft) {\n        if (data.childLeft + data.childWidth <= data.parentLeft + data.parentWidth) {\n          if (data.type === 'FF') {\n            return 'FFType3';\n          }\n          if (data.type === 'SF') {\n            if (data.childLeft + data.childWidth + 25 < data.parentLeft) {\n              return 'SFType3';\n            } else {\n              return 'SFType4';\n            }\n          }\n          if (data.type === 'SS') {\n            if (data.childLeft <= data.parentLeft) {\n              return 'SSType3';\n            } else {\n              return 'SSType4';\n            }\n          }\n        } else if (data.childLeft + data.childWidth > data.parentLeft + data.parentWidth) {\n          if (data.type === 'FF') {\n            return 'FFType4';\n          }\n          if (data.type === 'SF') {\n            return 'SFType4';\n          }\n          if (data.type === 'SS') {\n            if (data.childLeft <= data.parentLeft) {\n              return 'SSType3';\n            } else {\n              return 'SSType4';\n            }\n          }\n        }\n        if (data.type === 'FS') {\n          return 'FSType3';\n        }\n      } else if (data.parentLeft < data.childLeft) {\n        if (data.type === 'FS') {\n          return 'FSType3';\n        }\n        if (data.type === 'SS') {\n          return 'SSType4';\n        }\n        if (data.type === 'FF') {\n          return 'FFType4';\n        }\n        if (data.type === 'SF') {\n          return 'SFType4';\n        }\n      }\n    }\n    return null;\n  };\n  /**\n   * To get line height.\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.getHeightValue = function (data) {\n    if (this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n      return data.parentIndex * this.parent.rowHeight > data.childIndex * this.parent.rowHeight ? data.parentIndex * this.parent.rowHeight - data.childIndex * this.parent.rowHeight : data.childIndex * this.parent.rowHeight - data.parentIndex * this.parent.rowHeight;\n    } else {\n      return data.parentIndex * data.rowHeight > data.childIndex * data.rowHeight ? data.parentIndex * data.rowHeight - data.childIndex * data.rowHeight : data.childIndex * data.rowHeight - data.parentIndex * data.rowHeight;\n    }\n  };\n  /**\n   * To get sstype2 inner element width.\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.getInnerElementWidthSSType2 = function (data) {\n    if (data.parentLeft === data.childLeft) {\n      return 10;\n    }\n    return data.childLeft - data.parentLeft;\n  };\n  /**\n   * To get sstype2 inner element left.\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.getInnerElementLeftSSType2 = function (data) {\n    if (data.parentLeft === data.childLeft) {\n      return data.parentLeft - 20;\n    }\n    return data.parentLeft - 10;\n  };\n  /**\n   * To get sstype2 inner child element width.\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.getInnerChildWidthSSType2 = function (data) {\n    if (data.parentLeft + data.parentWidth < data.childLeft) {\n      return 10;\n    }\n    if (data.parentLeft === data.childLeft) {\n      return 20;\n    }\n    if (data.parentLeft + data.parentWidth >= data.childLeft) {\n      return 10;\n    }\n    return data.childLeft - data.parentLeft;\n  };\n  // private getBorderStyles(cssType: string, unit: number): string {\n  //     const borderWidth: string = 'border-' + cssType + '-width:' + unit + 'px;';\n  //     const borderStyle: string = 'border-' + cssType + '-style:solid;';\n  //     const borderColor: string = !isNullOrUndefined(this.lineColor) ? 'border-' + cssType + '-color:' + this.lineColor + ';' : '';\n  //     return (borderWidth + borderStyle + borderColor);\n  // }\n  ConnectorLine.prototype.calculateAdjustments = function (rowHeight, isMilestone, type) {\n    var taskbarHeightValue = this.parent.renderBaseline ? 0.45 : !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? 0.7 : 0.62;\n    var defaultTaskbarHeight = Math.floor(this.parent.rowHeight * taskbarHeightValue);\n    if (isNullOrUndefined(this.parent.taskbarHeight) && rowHeight <= 36 || !isNullOrUndefined(this.parent.taskbarHeight) && this.parent.taskbarHeight <= defaultTaskbarHeight || !isMilestone) {\n      return {\n        adjustY1: 0,\n        adjustX: 0,\n        adjustY2: 0,\n        adjustZ: 0\n      };\n    } else {\n      // Calculate adjustments dynamically for rowHeight greater than 36\n      var divisorY1 = type === 'FSType2' || type === 'FSType3' || type === 'FSType4' || type === 'SSType1' || type === 'SSType2' || type === 'SSType4' || type === 'SFType2' ? 12 : 24;\n      var adjustY1 = (rowHeight - 36) / divisorY1;\n      var adjustX = -(rowHeight - 36) / 4;\n      var adjustZ = -2 * (rowHeight - 36) / 24;\n      if (rowHeight <= 36) {\n        return {\n          adjustY1: 0,\n          adjustX: 0,\n          adjustY2: 0,\n          adjustZ: 0\n        };\n      }\n      return {\n        adjustY1: adjustY1,\n        adjustX: adjustX,\n        adjustZ: adjustZ\n      };\n    }\n  };\n  /**\n   * To get connector line template.\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {void}\n   * @private\n   */\n  ConnectorLine.prototype.getConnectorLineTemplate = function (data) {\n    var setInnerChildWidthSSType2 = this.getInnerChildWidthSSType2(data);\n    var setInnerElementWidthSSType2 = this.getInnerElementWidthSSType2(data);\n    var setInnerElementLeftSSType2 = this.getInnerElementLeftSSType2(data);\n    var height = this.getHeightValue(data);\n    var isMilestoneParent = data.milestoneParent ? true : false;\n    var isMilestone = data.milestoneChild ? true : false;\n    var isVirtual = this.parent.virtualScrollModule && this.parent.enableVirtualization;\n    var connectorLine = this.getPosition(data, this.getParentPosition(data), height);\n    var rowPosition = this.getPosition(data, this.getParentPosition(data), height);\n    var rowPositionHeight = rowPosition.top;\n    var isMilestoneValue = 0;\n    if (this.parent.renderBaseline) {\n      isMilestoneValue = data.milestoneParent && data.milestoneChild ? 0 : data.milestoneParent ? -5 : data.milestoneChild ? 5 : 0;\n    }\n    var heightValue = isVirtual ? connectorLine.height : height + isMilestoneValue;\n    var borderTopWidth = 0;\n    var addTop = 0;\n    var parentOverlapTopValue = 0;\n    var childOverlapTopValue = 0;\n    var count = 0;\n    if (this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n      for (var i = 0; i < this.parent.currentViewData.length; i++) {\n        if (this.parent.getRowByIndex(i).style.display !== 'none') {\n          if (count < data.parentIndex) {\n            count++;\n            parentOverlapTopValue = parentOverlapTopValue + this.parent.getRowByIndex(i).offsetHeight;\n          }\n        }\n      }\n      count = 0;\n      for (var j = 0; j < this.parent.currentViewData.length; j++) {\n        if (this.parent.getRowByIndex(j).style.display !== 'none') {\n          if (count < data.childIndex) {\n            count++;\n            childOverlapTopValue = childOverlapTopValue + this.parent.getRowByIndex(j).offsetHeight;\n          }\n        }\n      }\n      if (!this.parent.enableVirtualization) {\n        heightValue = Math.abs(parentOverlapTopValue - childOverlapTopValue);\n      }\n    }\n    if (this.parent.currentViewData[data.parentIndex] && this.parent.currentViewData[data.childIndex] && this.parent.allowParentDependency) {\n      var fromRecordIsParent = this.parent.currentViewData[data.parentIndex].hasChildRecords;\n      var toRecordIsParent = this.parent.currentViewData[data.childIndex].hasChildRecords;\n      var fromRecordIsManual = this.parent.currentViewData[data.parentIndex].ganttProperties.isAutoSchedule;\n      var toRecordIsManual = this.parent.currentViewData[data.childIndex].ganttProperties.isAutoSchedule;\n      var isValid = true;\n      if (fromRecordIsParent && fromRecordIsManual && !toRecordIsParent || toRecordIsParent && toRecordIsManual && !fromRecordIsParent || fromRecordIsParent && fromRecordIsManual && toRecordIsManual && toRecordIsParent || !fromRecordIsParent && !toRecordIsParent) {\n        isValid = false;\n      }\n      if (isValid) {\n        if (fromRecordIsParent && !fromRecordIsManual && toRecordIsParent && !toRecordIsManual) {\n          addTop = -11;\n        } else if (!(fromRecordIsParent && !fromRecordIsManual && toRecordIsParent && !toRecordIsManual)) {\n          if (data.childIndex > data.parentIndex) {\n            if (!fromRecordIsParent && toRecordIsParent) {\n              borderTopWidth = -11;\n            } else {\n              borderTopWidth = 11;\n              addTop = -11;\n            }\n          } else {\n            if (fromRecordIsParent && !toRecordIsParent) {\n              borderTopWidth = -11;\n            } else {\n              borderTopWidth = 11;\n              addTop = -11;\n            }\n          }\n        }\n        if (this.parent.currentViewData[data.parentIndex].ganttProperties.isMilestone) {\n          if (data.parentIndex > data.childIndex) {\n            addTop = -11;\n            borderTopWidth = 12;\n          } else if (data.type === 'SS' || data.type === 'FF') {\n            addTop = -5;\n          }\n        } else if (this.parent.currentViewData[data.childIndex].ganttProperties.isMilestone) {\n          if (data.parentIndex > data.childIndex) {\n            addTop = 5;\n            borderTopWidth = -10;\n          } else if (data.parentIndex < data.childIndex) {\n            if (data.type === 'SS' || data.type === 'FF') {\n              addTop = -10;\n            }\n          }\n        } else {\n          if (data.parentIndex < data.childIndex && fromRecordIsManual && !toRecordIsManual) {\n            addTop = 0;\n            borderTopWidth = -11;\n          } else if (data.childIndex < data.parentIndex && !fromRecordIsManual && toRecordIsManual) {\n            addTop = 0;\n            borderTopWidth = -11;\n          }\n        }\n      }\n    }\n    if (this.getParentPosition(data)) {\n      // Create the group element\n      var type = this.getParentPosition(data);\n      var rowHeight1 = this.parent.rowHeight;\n      var adjustments = this.calculateAdjustments(rowHeight1, isMilestone, type);\n      this.transform = this.parent.enableRtl ? \"translate(\" + (this.parent.enableTimelineVirtualization ? this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth) + \", 0) scale(-1, 1)\" : '';\n      this.connectorId = 'ConnectorLine' + data.connectorLineId;\n      this.groupObject = this.renderer.createGroup({\n        id: this.connectorId,\n        transform: this.transform,\n        style: 'pointer-events: stroke',\n        class: cls.connectorLineContainer\n      });\n      //  Create the path element for the connector line\n      this.connectorPath = this.renderer.drawPath({\n        class: cls.connectorLineSVG,\n        d: this.connectorLinePath,\n        fill: 'transparent',\n        'stroke-width': this.lineStroke\n      });\n      // Create the path element for the arrow\n      this.arrowlinePath = this.renderer.drawPath({\n        d: this.arrowPath,\n        class: cls.connectorLineArrow\n      });\n      var outlineColor = this.lineColor && !this.parent.enableCriticalPath ? this.lineColor : '';\n      this.connectorPath.setAttribute('style', \"stroke: \" + outlineColor);\n      this.arrowlinePath.setAttribute('style', \"fill: \" + outlineColor);\n      // Append the path element to the group element\n      this.groupObject.appendChild(this.connectorPath);\n      this.groupObject.appendChild(this.arrowlinePath);\n      if (this.getParentPosition(data) === 'FSType1') {\n        this.taskLineValue = data.milestoneChild ? 1 : 0;\n        this.x1 = data.parentEndPoint + (data.milestoneParent ? -1 : data.milestoneChild ? -1 : 0);\n        this.x2 = data.milestoneParent ? data.childLeft - (data.parentLeft + data.parentWidth + 10) + this.lineStroke - 10 + 1 : data.childLeft - (data.parentLeft + data.parentWidth + 10) + this.lineStroke - 10;\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue;\n        this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n        this.connectorLinePath = 'M ' + this.x1 + ' ' + this.y1 + ' L ' + (this.x1 + this.x2 + adjustments['adjustZ']) + ' ' + this.y1 + ' L ' + (this.x1 + this.x2 + adjustments['adjustZ']) + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x1 + this.x2 + 20 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 + 4 + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'FSType2') {\n        this.x1 = data.parentLeft;\n        this.x2 = data.parentWidth + (data.milestoneParent ? -1 : 0);\n        this.x3 = this.x2 + (data.milestoneParent ? 11 : 10);\n        this.x4 = data.parentWidth - (data.parentEndPoint - data.childLeft + 20);\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue;\n        this.y2 = heightValue + borderTopWidth - this.getconnectorLineGap(data) - this.lineStroke;\n        this.y3 = this.getconnectorLineGap(data);\n        this.y4 = !this.parent.allowTaskbarOverlap ? childOverlapTopValue : this.y1 + this.y2 - (this.y1 + this.y2) % data.rowHeight;\n        this.connectorLinePath = 'M ' + (this.x1 + this.x2) + ' ' + this.y1 + ' ' + ' L ' + (this.x1 + this.x3) + ' ' + this.y1 + ' L ' + (this.x1 + this.x3) + ' ' + this.y4 + ' L ' + (this.x1 + this.x4 + adjustments['adjustZ']) + ' ' + this.y4 + ' L ' + (this.x1 + this.x4 + adjustments['adjustZ']) + ' ' + (this.y1 + this.y2 + this.y3 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x4 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 + this.y3 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x1 + this.x4 + 20 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 + this.y3 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x4 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 + this.y3 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x4 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + this.y2 + this.y3 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'FSType3') {\n        this.taskLineValue = data.milestoneChild ? 1 : 0;\n        this.point1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1) - isMilestoneValue;\n        this.x1 = data.childLeft + (data.milestoneChild ? -1 : 0) + (data.milestoneParent ? 1 : 0) - 20;\n        this.x2 = data.parentEndPoint - data.childLeft + 30;\n        this.y1 = this.point1 + (this.parent.renderBaseline ? data.milestoneChild && !data.milestoneParent ? 11 : data.milestoneParent && !data.milestoneChild ? -12 : 0 : 0);\n        this.y2 = this.point1 + heightValue + borderTopWidth - this.getconnectorLineGap(data) - this.lineStroke + this.taskLineValue;\n        this.y3 = this.getconnectorLineGap(data);\n        this.y4 = this.y2 - this.y2 % data.rowHeight;\n        this.connectorLinePath = 'M ' + (this.x1 + 12) + ' ' + (this.y1 + adjustments['adjustY1']) + ' L ' + this.x1 + ' ' + (this.y1 + adjustments['adjustY1']) + ' L ' + this.x1 + ' ' + this.y4 + ' L ' + (this.x1 + this.x2) + ' ' + this.y4 + ' L ' + (this.x1 + this.x2) + ' ' + (this.y2 + this.y3) + ' L ' + (this.x1 + this.x2 - 12) + ' ' + (this.y2 + this.y3);\n        this.arrowPath = 'M ' + (this.x1 + 20 + adjustments['adjustX']) + ' ' + (this.y1 + adjustments['adjustY1']) + ' L ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + (this.y1 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'FSType4') {\n        this.point1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1);\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n        this.x1 = data.parentEndPoint + (data.milestoneChild ? -1 : 0) + (data.milestoneParent ? 1 : 0);\n        this.x2 = data.childLeft - data.parentEndPoint - 20;\n        this.y1 = this.point1 + (data.milestoneChild ? -1 : 0);\n        this.y2 = this.point1 + heightValue + borderTopWidth - this.lineStroke + 1 + this.taskLineValue + (this.parent.renderBaseline ? data.milestoneChild && !data.milestoneParent ? -12 : data.milestoneParent && !data.milestoneChild ? 11 : 0 : 0);\n        this.connectorLinePath = 'M ' + (this.x1 + this.x2 + 12) + ' ' + (this.y1 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2) + ' ' + (this.y1 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2) + ' ' + this.y2 + ' L ' + this.x1 + ' ' + this.y2;\n        this.arrowPath = 'M ' + (this.x1 + this.x2 + 20 + adjustments['adjustX']) + ' ' + (this.y1 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2 + 12 + adjustments['adjustX']) + ' ' + (this.y1 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SSType4') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 2 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n        this.point1 = heightValue + this.taskLineValue + borderTopWidth;\n        this.point2 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1);\n        this.x1 = data.parentLeft - 10;\n        this.x2 = data.childLeft - data.parentLeft;\n        this.y1 = this.point2 + (data.milestoneChild ? 1 : 0);\n        this.y2 = this.y1 + this.point1 + (this.parent.renderBaseline ? data.milestoneParent && !data.milestoneChild ? 10 : data.milestoneChild && !data.milestoneParent ? -13 : 0 : 0);\n        this.connectorLinePath = 'M ' + (this.x1 + this.x2 + adjustedX) + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y2 + ' L ' + (this.x1 + 10) + ' ' + this.y2;\n        this.arrowPath = 'M ' + (this.x1 + this.x2 + 8 + adjustedX) + ' ' + this.y1 + ' L ' + (this.x1 + this.x2 + adjustedX) + ' ' + (this.y1 - (4 + this.lineStroke)) + ' L ' + (this.x1 + this.x2 + adjustedX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SSType3') {\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n        this.point1 = heightValue + this.taskLineValue + borderTopWidth - (this.lineStroke - 1);\n        this.x1 = data.childLeft - 20;\n        this.y1 = (data.milestoneChild ? 1 : 0) + (this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1));\n        this.x2 = data.parentLeft - data.childLeft + 21;\n        this.y2 = this.y1 + this.point1 + (this.parent.renderBaseline ? data.milestoneChild && !data.milestoneParent ? -11 : data.milestoneParent && !data.milestoneChild ? 10 : 0 : 0);\n        this.connectorLinePath = 'M ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y2 + ' L ' + (this.x1 + this.x2) + ' ' + this.y2;\n        this.arrowPath = 'M ' + (this.x1 + 20 + adjustments['adjustX']) + ' ' + this.y1 + ' L ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + (this.y1 - (4 + this.lineStroke)) + ' L ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SSType2') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 2 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n        this.point1 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n        this.x1 = setInnerElementLeftSSType2;\n        this.x2 = setInnerChildWidthSSType2 + 1;\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1);\n        this.y2 = this.y1 + this.point1;\n        this.connectorLinePath = 'M ' + (this.x1 + this.x2) + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y1 + ' L ' + this.x1 + ' ' + (this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + setInnerElementWidthSSType2 + adjustedX) + ' ' + (this.y2 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x1 + setInnerElementWidthSSType2 + 8 + adjustedX) + ' ' + (this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + setInnerElementWidthSSType2 + adjustedX) + ' ' + (this.y2 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + setInnerElementWidthSSType2 + adjustedX) + ' ' + (this.y2 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SSType1') {\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n        this.point1 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n        this.x1 = data.childLeft - 20;\n        this.x2 = data.parentLeft - data.childLeft + 21;\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1);\n        this.y2 = this.y1 + this.point1;\n        this.connectorLinePath = 'M ' + (this.x1 + this.x2) + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y1 + ' L ' + this.x1 + ' ' + (this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + (this.y2 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x1 + 20 + adjustments['adjustX']) + ' ' + (this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + (this.y2 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + 12 + adjustments['adjustX']) + ' ' + (this.y2 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'FFType1') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n        this.x1 = data.childEndPoint;\n        this.x2 = data.parentEndPoint + (data.milestoneParent ? -1 : 0);\n        this.x3 = data.milestoneParent ? 22 : 21;\n        this.x4 = data.milestoneChild ? 4 : 8;\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1);\n        this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n        this.connectorLinePath = 'M ' + this.x2 + ' ' + this.y1 + ' L ' + (this.x2 + this.x3) + ' ' + this.y1 + ' L ' + (this.x2 + this.x3) + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x4) + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x1 + adjustedX) + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + 8 + adjustedX) + ' ' + (this.y1 + this.y2 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + 8 + adjustedX) + ' ' + (this.y1 + this.y2 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'FFType2') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n        this.x1 = data.parentEndPoint;\n        this.x2 = data.childEndPoint + (data.milestoneParent ? 22 : 21);\n        this.x3 = data.childEndPoint + (data.milestoneChild ? 9 : 8);\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(data.milestoneParent) - (this.lineStroke - 1);\n        this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n        var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n        this.connectorLinePath = 'M ' + this.x1 + ' ' + this.y1 + ' L ' + this.x2 + ' ' + this.y1 + ' L ' + this.x2 + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']) + ' L ' + this.x3 + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x3 - 8 + arrowX) + ' ' + (this.y1 + this.y2 + adjustments['adjustY1']) + ' L ' + (this.x3 + arrowX) + ' ' + (this.y1 + this.y2 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x3 + arrowX) + ' ' + (this.y1 + this.y2 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'FFType3') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n        this.x1 = data.childEndPoint;\n        this.x2 = this.x1 + (data.milestoneChild ? 4 : 8);\n        this.x3 = data.parentEndPoint - data.childEndPoint + (data.milestoneChild ? 16 : 10);\n        this.x4 = data.parentEndPoint + (data.milestoneParent ? -1 : 0);\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1);\n        this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke + (this.parent.renderBaseline ? data.milestoneParent && !data.milestoneChild ? 10 : data.milestoneChild && !data.milestoneParent ? -11 : 0 : 0);\n        this.connectorLinePath = 'M ' + this.x2 + ' ' + this.y1 + ' L ' + (this.x2 + this.x3) + ' ' + this.y1 + ' L ' + (this.x2 + this.x3) + ' ' + (this.y1 + this.y2) + ' L ' + this.x4 + ' ' + (this.y1 + this.y2);\n        this.arrowPath = 'M ' + (this.x1 + adjustedX) + ' ' + this.y1 + ' L ' + (this.x1 + 8 + adjustedX) + ' ' + (this.y1 - (4 + this.lineStroke)) + ' L ' + (this.x1 + 8 + adjustedX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'FFType4') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n        this.x1 = data.parentEndPoint;\n        this.x2 = data.childEndPoint + (data.milestoneChild ? 7 : 8);\n        this.x3 = this.x2 + (data.milestoneChild ? 12 : 11);\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1);\n        this.y2 = heightValue + this.taskLineValue + borderTopWidth + (this.parent.renderBaseline ? data.milestoneParent && !data.milestoneChild ? 10 : data.milestoneChild && !data.milestoneParent ? -12 : 0 : 0) - this.lineStroke + 1;\n        var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n        this.connectorLinePath = 'M ' + this.x2 + ' ' + this.y1 + ' L ' + this.x3 + ' ' + this.y1 + ' L ' + this.x3 + ' ' + (this.y1 + this.y2) + ' L ' + this.x1 + ' ' + (this.y1 + this.y2);\n        this.arrowPath = 'M ' + (this.x2 - 8 + arrowX) + ' ' + this.y1 + ' L ' + (this.x2 + arrowX) + ' ' + (this.y1 - (4 + this.lineStroke)) + ' L ' + (this.x2 + arrowX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SFType4') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? -1 : 0;\n        this.point1 = this.taskLineValue + heightValue + borderTopWidth - this.getconnectorLineGap(data) - (this.lineStroke - 1);\n        this.point2 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue;\n        this.x1 = data.parentLeft - 10;\n        this.x2 = this.x1 + (data.childEndPoint - data.parentLeft + 18);\n        this.x3 = this.x2 + (data.milestoneChild ? 16 : 11);\n        this.y1 = this.point2 + (data.milestoneChild ? 2 : 0) + (this.parent.renderBaseline ? data.milestoneParent ? -5 : 0 : 0);\n        this.y2 = this.y1 + this.point1 + (this.parent.renderBaseline ? data.milestoneChild && !data.milestoneParent ? -9 : data.milestoneParent && !data.milestoneChild ? 9 : 0 : 0);\n        this.y3 = this.getconnectorLineGap(data);\n        this.y4 = this.y2 - this.y2 % data.rowHeight;\n        var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n        this.connectorLinePath = 'M ' + this.x2 + ' ' + (this.y1 - adjustments['adjustY1']) + ' L ' + this.x3 + ' ' + (this.y1 - adjustments['adjustY1']) + ' L ' + this.x3 + ' ' + this.y4 + ' L ' + this.x1 + ' ' + this.y4 + ' L ' + this.x1 + ' ' + (this.y2 + this.y3) + ' L ' + (this.x1 + 11) + ' ' + (this.y2 + this.y3);\n        this.arrowPath = 'M ' + (this.x2 - 8 + arrowX) + ' ' + (this.y1 - adjustments['adjustY1']) + ' L ' + (this.x2 + arrowX) + ' ' + (this.y1 - (4 + this.lineStroke) - adjustments['adjustY1']) + ' L ' + (this.x2 + arrowX) + ' ' + (this.y1 + 4 + this.lineStroke - adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SFType3') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n        this.point1 = data.parentLeft - (data.childEndPoint + (data.milestoneParent ? 23 : 20)) + 1;\n        this.point2 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? childOverlapTopValue : data.childIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1);\n        this.x1 = data.childEndPoint;\n        this.x2 = this.x1 + (data.milestoneChild ? 9 : 8);\n        this.x3 = this.x2 + (data.milestoneChild ? 17 : 11);\n        this.y1 = this.point2;\n        this.y2 = this.y1 + heightValue + borderTopWidth - (this.lineStroke - 1) + this.taskLineValue + (this.parent.renderBaseline ? data.milestoneChild && !data.milestoneParent ? -12 : data.milestoneParent && !data.milestoneChild ? 10 : 0 : 0);\n        this.connectorLinePath = 'M ' + this.x2 + ' ' + this.y1 + ' L ' + this.x3 + ' ' + this.y1 + ' L ' + this.x3 + ' ' + this.y2 + ' L ' + (this.x3 + this.point1) + ' ' + this.y2;\n        this.arrowPath = 'M ' + (this.x2 - 8 + adjustedX) + ' ' + this.y1 + ' L ' + (this.x2 + adjustedX) + ' ' + (this.y1 - (4 + this.lineStroke)) + ' L ' + (this.x2 + adjustedX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SFType1') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n        this.point1 = heightValue + borderTopWidth - this.getconnectorLineGap(data) + this.taskLineValue - this.lineStroke;\n        this.point2 = this.getconnectorLineGap(data);\n        this.x1 = data.parentLeft - 10;\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue;\n        this.x2 = data.childEndPoint - data.parentLeft + 31;\n        this.y2 = this.y1 + this.point1;\n        this.x3 = data.childEndPoint - data.parentLeft + 18;\n        this.y3 = this.y2 - this.y2 % data.rowHeight;\n        var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n        this.connectorLinePath = 'M ' + (this.x1 + 11) + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y1 + ' L ' + this.x1 + ' ' + this.y3 + ' L ' + (this.x1 + this.x2) + ' ' + this.y3 + ' L ' + (this.x1 + this.x2) + ' ' + (this.y2 + this.point2 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x3) + ' ' + (this.y2 + this.point2 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x1 + this.x3 - 8 + arrowX) + ' ' + (this.y2 + this.point2 + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x3 + arrowX) + ' ' + (this.y2 + this.point2 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x3 + arrowX) + ' ' + (this.y2 + this.point2 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      if (this.getParentPosition(data) === 'SFType2') {\n        var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n        this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n        this.x1 = data.childEndPoint;\n        this.y1 = this.parent.enableVirtualization ? rowPositionHeight : (!this.parent.allowTaskbarOverlap ? parentOverlapTopValue : data.parentIndex * data.rowHeight) + addTop + this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1);\n        this.x2 = data.parentLeft - data.childEndPoint;\n        this.y2 = this.y1 + heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n        this.connectorLinePath = 'M ' + (this.x1 + this.x2 + 1) + ' ' + this.y1 + ' L ' + (this.x1 + this.x2 - 10) + ' ' + this.y1 + ' L ' + (this.x1 + this.x2 - 10) + ' ' + (this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + 8) + ' ' + (this.y2 + adjustments['adjustY1']);\n        this.arrowPath = 'M ' + (this.x1 + adjustedX) + ' ' + (this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + 8 + adjustedX) + ' ' + (this.y2 - (4 + this.lineStroke) + adjustments['adjustY1']) + ' L ' + (this.x1 + 8 + adjustedX) + ' ' + (this.y2 + 4 + this.lineStroke + adjustments['adjustY1']) + ' Z';\n      }\n      this.connectorPath.setAttribute('d', this.connectorLinePath);\n      this.arrowlinePath.setAttribute('d', this.arrowPath);\n    }\n    return this.groupObject.outerHTML;\n  };\n  /**\n   * @param {IConnectorLineObject} data .\n   * @param {string} type .\n   * @param {number} heightValue .\n   * @returns {number} .\n   * @private\n   */\n  ConnectorLine.prototype.getPosition = function (data, type, heightValue) {\n    var topPosition = 0;\n    var lineHeight = 0;\n    if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n      var isMilestoneParent = data.milestoneParent ? true : false;\n      var isMilestone = data.milestoneChild ? true : false;\n      var midPointParent = this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1);\n      var midPoint = this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1);\n      var isParentIndex = data.parentIndexInCurrentView !== -1;\n      var isChildIndex = data.childIndexInCurrentView !== -1;\n      var lastRowIndex = this.parent.currentViewData.length - 1;\n      if (type === 'SSType1' || type === 'SSType2' || type === 'FFType1' || type === 'FFType2' || type === 'SFType2') {\n        topPosition = isParentIndex ? data.parentIndexInCurrentView * data.rowHeight + midPointParent : 0;\n        lineHeight = isParentIndex && isChildIndex ? heightValue : isChildIndex ? data.childIndexInCurrentView * data.rowHeight + midPointParent : lastRowIndex * data.rowHeight + midPointParent;\n      } else if (type === 'SSType3' || type === 'SSType4' || type === 'FSType4' || type === 'FFType3' || type === 'FFType4' || type === 'SFType4' || type === 'SFType3') {\n        topPosition = isChildIndex ? data.childIndexInCurrentView * data.rowHeight + midPoint : 0;\n        lineHeight = isParentIndex && isChildIndex ? heightValue : isParentIndex ? data.parentIndexInCurrentView * data.rowHeight + midPoint : lastRowIndex * data.rowHeight + midPoint;\n      } else if (type === 'FSType3') {\n        topPosition = isChildIndex ? data.childIndexInCurrentView * data.rowHeight + midPointParent : 0;\n        lineHeight = isParentIndex && isChildIndex ? heightValue : isParentIndex ? data.parentIndexInCurrentView * data.rowHeight + midPoint : lastRowIndex * data.rowHeight + midPointParent;\n      } else if (type === 'SFType1' || type === 'FSType1' || type === 'FSType2') {\n        topPosition = isParentIndex ? data.parentIndexInCurrentView * data.rowHeight + midPoint : 0;\n        lineHeight = isParentIndex && isChildIndex ? heightValue : isChildIndex ? data.childIndexInCurrentView * data.rowHeight + midPoint : lastRowIndex * data.rowHeight + midPoint;\n      }\n    }\n    return {\n      top: topPosition,\n      height: lineHeight\n    };\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLine.prototype.createConnectorLineTooltipTable = function () {\n    this.tooltipTable = createElement('table', {\n      className: '.e-tooltiptable',\n      styles: 'margin-top:0px',\n      attrs: {\n        'cellspacing': '2px',\n        'cellpadding': '2px'\n      }\n    });\n    var tooltipBody = createElement('tbody');\n    tooltipBody.innerHTML = '';\n    this.tooltipTable.appendChild(tooltipBody);\n  };\n  /**\n   * @param {string} fromTaskName .\n   * @param {string} fromPredecessorText .\n   * @param {string} toTaskName .\n   * @param {string} toPredecessorText .\n   * @returns {string} .\n   * @private\n   */\n  ConnectorLine.prototype.getConnectorLineTooltipInnerTd = function (fromTaskName, fromPredecessorText, toTaskName, toPredecessorText) {\n    var innerTd = '<tr  id=\"fromPredecessor\"><td style=\"padding: 2px;\">' + this.parent.localeObj.getConstant('from') + '</td><td> ';\n    innerTd = innerTd + fromTaskName + ' </td><td style=\"padding: 2px;\"> ' + this.parent.localeObj.getConstant(fromPredecessorText) + ' </td> </tr>';\n    innerTd = innerTd + '<tr id=\"toPredecessor\"><td style=\"padding: 2px;\">' + this.parent.localeObj.getConstant('to') + '</td><td> ' + toTaskName;\n    innerTd = innerTd + ' </td><td style=\"padding: 2px;\"> ' + this.parent.localeObj.getConstant(toPredecessorText) + ' </td></tr></tbody><table>';\n    return innerTd;\n  };\n  /**\n   * Generate aria-label for connectorline\n   *\n   * @param {IConnectorLineObject} data .\n   * @returns {string} .\n   * @private\n   */\n  ConnectorLine.prototype.generateAriaLabel = function (data) {\n    var type = data.type;\n    var updatedRecords = this.expandedRecords;\n    var fromName = updatedRecords[data.parentIndex].ganttProperties.taskName;\n    var toName = updatedRecords[data.childIndex].ganttProperties.taskName;\n    var start = this.parent.localeObj.getConstant('start');\n    var finish = this.parent.localeObj.getConstant('finish');\n    var value = '';\n    if (type === 'FS') {\n      value = fromName + ' ' + finish + ' to ' + toName + ' ' + start;\n    } else if (type === 'FF') {\n      value = fromName + ' ' + finish + ' to ' + toName + ' ' + finish;\n    } else if (type === 'SS') {\n      value = fromName + ' ' + start + ' to ' + toName + ' ' + start;\n    } else {\n      value = fromName + ' ' + start + ' to ' + toName + ' ' + finish;\n    }\n    return value;\n  };\n  /**\n   * To get the record based on the predecessor value\n   *\n   * @param {string} id .\n   * @returns {IGanttData} .\n   * @private\n   */\n  ConnectorLine.prototype.getRecordByID = function (id) {\n    if (isNullOrUndefined(id)) {\n      return null;\n    }\n    if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings && this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n      var a = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'].filter(function (data) {\n        return data.ganttProperties.taskId.toString() === id.toString();\n      })[0];\n      return a;\n    } else {\n      return this.parent.viewType === 'ResourceView' ? this.parent.flatData[this.parent.getTaskIds().indexOf('T' + id.toString())] : this.parent.flatData[this.parent.ids.indexOf(id.toString())];\n    }\n  };\n  /**\n   * Method to remove connector line from DOM\n   *\n   * @param {IGanttData[] | object} records .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLine.prototype.removePreviousConnectorLines = function (records) {\n    var isObjectType;\n    if (isObject(records) === true) {\n      isObjectType = true;\n    } else {\n      isObjectType = false;\n    }\n    var length = isObjectType ? Object.keys(records).length : records.length;\n    var keys = Object.keys(records);\n    for (var i = 0; i < length; i++) {\n      var data = void 0;\n      if (isObjectType) {\n        var uniqueId = keys[i];\n        data = records[uniqueId];\n      } else {\n        data = records[i];\n      }\n      var predecessors = data.ganttProperties && data.ganttProperties.predecessor;\n      if (predecessors && predecessors.length > 0) {\n        for (var pre = 0; pre < predecessors.length; pre++) {\n          var lineId = 'parent' + predecessors[pre].from + 'child' + predecessors[pre].to;\n          this.removeConnectorLineById(lineId);\n        }\n      }\n    }\n  };\n  /**\n   * @param {string} id .\n   * @returns {void} .\n   * @private\n   */\n  ConnectorLine.prototype.removeConnectorLineById = function (id) {\n    var element = this.parent.connectorLineModule.dependencyViewContainer.querySelector('#ConnectorLine' + id.replace(/([.])/g, '\\\\$1'));\n    if (!isNullOrUndefined(element)) {\n      remove(element);\n    }\n  };\n  return ConnectorLine;\n}();\nexport { ConnectorLine };","map":{"version":3,"names":["createElement","isNullOrUndefined","isObject","remove","cls","isScheduledTask","SvgRenderer","ConnectorLine","ganttObj","transform","connectorLinePath","arrowPath","taskLineValue","expandedRecords","parent","dependencyViewContainer","className","Object","assign","style","width","height","zIndex","position","pointerEvents","renderer","element","id","initPublicProp","svgObject","createSvg","setAttribute","prototype","getconnectorLineGap","data","milestoneChild","chartRowsModule","milestoneMarginTop","milestoneHeight","taskBarMarginTop","taskBarHeight","lineColor","connectorLineBackground","lineStroke","connectorLineWidth","createConnectorLineTooltipTable","getTaskbarMidpoint","isMilestone","Math","floor","createConnectorLineObject","parentGanttData","childGanttData","predecessor","connectorObj","updatedRecords","pdfExportModule","isPdfExport","helper","exportProps","fitToWidthSettings","isFitToWidth","beforeSinglePageExport","flatData","parentIndex","childIndex","parentData","filter","ganttProperties","taskId","toString","childData","index","indexOf","parentGanttRecord","childGanttRecord","currentData","virtualScrollModule","enableVirtualization","getExpandedRecords","currentViewData","parentIndexInCurrentView","childIndexInCurrentView","isVirtualScroll","parentLeft","left","childLeft","parentWidth","childWidth","rowHeight","ganttChartModule","getChartRows","offsetHeight","type","parentId","viewType","rowUniqueID","childId","connectorLineId","milestoneParent","parentEndPoint","childEndPoint","renderConnectorLines","connectorLinesCollection","connectorLine","ariaConnector","length","getConnectorLineTemplate","push","innerHTML","childNodes","connectorLineModule","i","innerChild","j","ariaString","generateAriaLabel","chartBodyContent","insertBefore","lastChild","appendChild","children","getParentPosition","getHeightValue","showOverAllocation","allowTaskbarOverlap","getInnerElementWidthSSType2","getInnerElementLeftSSType2","getInnerChildWidthSSType2","calculateAdjustments","taskbarHeightValue","renderBaseline","document","body","includes","defaultTaskbarHeight","taskbarHeight","adjustY1","adjustX","adjustY2","adjustZ","divisorY1","setInnerChildWidthSSType2","setInnerElementWidthSSType2","setInnerElementLeftSSType2","isMilestoneParent","isVirtual","getPosition","rowPosition","rowPositionHeight","top","isMilestoneValue","heightValue","borderTopWidth","addTop","parentOverlapTopValue","childOverlapTopValue","count","getRowByIndex","display","abs","allowParentDependency","fromRecordIsParent","hasChildRecords","toRecordIsParent","fromRecordIsManual","isAutoSchedule","toRecordIsManual","isValid","rowHeight1","adjustments","enableRtl","enableTimelineVirtualization","timelineModule","wholeTimelineWidth","totalTimelineWidth","connectorId","groupObject","createGroup","class","connectorLineContainer","connectorPath","drawPath","connectorLineSVG","d","fill","arrowlinePath","connectorLineArrow","outlineColor","enableCriticalPath","x1","x2","y1","y2","x3","x4","y3","y4","point1","adjustedX","point2","arrowX","outerHTML","topPosition","lineHeight","midPointParent","midPoint","isParentIndex","isChildIndex","lastRowIndex","tooltipTable","styles","attrs","tooltipBody","getConnectorLineTooltipInnerTd","fromTaskName","fromPredecessorText","toTaskName","toPredecessorText","innerTd","localeObj","getConstant","fromName","taskName","toName","start","finish","value","getRecordByID","a","getTaskIds","ids","removePreviousConnectorLines","records","isObjectType","keys","uniqueId","predecessors","pre","lineId","from","to","removeConnectorLineById","querySelector","replace"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/renderer/connector-line.js"],"sourcesContent":["import { createElement, isNullOrUndefined, isObject, remove } from '@syncfusion/ej2-base';\nimport * as cls from '../base/css-constants';\nimport { isScheduledTask } from '../base/utils';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\n/**\n * To render the connector line in Gantt\n */\nvar ConnectorLine = /** @class */ (function () {\n    function ConnectorLine(ganttObj) {\n        this.transform = '';\n        this.connectorLinePath = '';\n        this.arrowPath = '';\n        this.taskLineValue = 0;\n        this.expandedRecords = [];\n        this.parent = ganttObj;\n        this.dependencyViewContainer =\n            createElement('div', {\n                className: cls.dependencyViewContainer\n            });\n        Object.assign(this.dependencyViewContainer.style, {\n            width: '100%',\n            height: '100%',\n            zIndex: 2,\n            position: 'absolute',\n            pointerEvents: 'none'\n        });\n        this.renderer = new SvgRenderer(this.parent.element.id);\n        this.initPublicProp();\n        this.svgObject = this.renderer.createSvg({\n            id: this.parent.element.id + '_svg'\n        });\n        this.svgObject.setAttribute('height', '100%');\n        this.svgObject.setAttribute('width', '100%');\n    }\n    /**\n     * To get connector line gap.\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {number} .\n     * @private\n     */\n    ConnectorLine.prototype.getconnectorLineGap = function (data) {\n        var width = 0;\n        width = (data.milestoneChild ?\n            ((this.parent.chartRowsModule.milestoneMarginTop / 2) + (this.parent.chartRowsModule.milestoneHeight / 2)) :\n            ((this.parent.chartRowsModule.taskBarMarginTop / 2) + (this.parent.chartRowsModule.taskBarHeight / 2)));\n        return width;\n    };\n    /**\n     * To initialize the public property.\n     *\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.initPublicProp = function () {\n        this.lineColor = this.parent.connectorLineBackground;\n        this.lineStroke = (this.parent.connectorLineWidth) > 4 ? 4 : this.parent.connectorLineWidth;\n        this.createConnectorLineTooltipTable();\n    };\n    ConnectorLine.prototype.getTaskbarMidpoint = function (isMilestone) {\n        return Math.floor(isMilestone ?\n            (this.parent.chartRowsModule.milestoneMarginTop + (this.parent.chartRowsModule.milestoneHeight / 2)) :\n            (this.parent.chartRowsModule.taskBarMarginTop + (this.parent.chartRowsModule.taskBarHeight / 2))) + 1;\n    };\n    /**\n     * To connector line object collection.\n     *\n     * @param {IGanttData} parentGanttData .\n     * @param {IGanttData} childGanttData .\n     * @param {IPredecessor}  predecessor .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.createConnectorLineObject = function (parentGanttData, childGanttData, predecessor) {\n        var connectorObj = {};\n        var updatedRecords;\n        if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n            updatedRecords = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'];\n        }\n        else {\n            updatedRecords = this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport ?\n                this.parent.flatData : this.expandedRecords;\n        }\n        var parentIndex;\n        var childIndex;\n        if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n            var parentData = this.parent.flatData.filter(function (data) {\n                return data.ganttProperties.taskId.toString() === parentGanttData.ganttProperties.taskId.toString();\n            })[0];\n            var childData = this.parent.flatData.filter(function (data) {\n                return data.ganttProperties.taskId.toString() === childGanttData.ganttProperties.taskId.toString();\n            })[0];\n            parentIndex = parentData.index;\n            childIndex = childData.index;\n        }\n        else {\n            parentIndex = updatedRecords.indexOf(parentGanttData);\n            childIndex = updatedRecords.indexOf(childGanttData);\n        }\n        var parentGanttRecord = parentGanttData.ganttProperties;\n        var childGanttRecord = childGanttData.ganttProperties;\n        var currentData;\n        if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n            currentData = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n                this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'] : this.parent.getExpandedRecords(this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData']);\n        }\n        else {\n            currentData = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n                this.parent.currentViewData : this.parent.getExpandedRecords(this.parent.currentViewData);\n        }\n        connectorObj.parentIndexInCurrentView = currentData.indexOf(parentGanttData);\n        connectorObj.childIndexInCurrentView = currentData.indexOf(childGanttData);\n        var isVirtualScroll = this.parent.virtualScrollModule && this.parent.enableVirtualization;\n        if ((!isVirtualScroll && (connectorObj.parentIndexInCurrentView === -1 || connectorObj.childIndexInCurrentView === -1)) ||\n            connectorObj.parentIndexInCurrentView === -1 && connectorObj.childIndexInCurrentView === -1) {\n            return null;\n        }\n        else {\n            connectorObj.parentLeft = parentGanttRecord.isMilestone ?\n                parentGanttRecord.left - (this.parent.chartRowsModule.milestoneHeight / 2) : parentGanttRecord.left;\n            connectorObj.childLeft = childGanttRecord.isMilestone ?\n                childGanttRecord.left - (this.parent.chartRowsModule.milestoneHeight / 2) : childGanttRecord.left;\n            connectorObj.parentWidth = parentGanttRecord.width === 0 || parentGanttRecord.isMilestone ?\n                (Math.floor(this.parent.chartRowsModule.milestoneHeight)) : parentGanttRecord.width;\n            connectorObj.childWidth = childGanttRecord.width === 0 || childGanttRecord.isMilestone ?\n                (Math.floor(this.parent.chartRowsModule.milestoneHeight)) : childGanttRecord.width;\n            connectorObj.parentIndex = parentIndex;\n            connectorObj.childIndex = childIndex;\n            connectorObj.rowHeight = !isNullOrUndefined(this.parent.ganttChartModule.getChartRows()) &&\n                this.parent.ganttChartModule.getChartRows()[0] &&\n                this.parent.ganttChartModule.getChartRows()[0].offsetHeight;\n            connectorObj.type = predecessor.type;\n            var parentId = this.parent.viewType === 'ResourceView' ? parentGanttRecord.taskId : parentGanttRecord.rowUniqueID;\n            var childId = this.parent.viewType === 'ResourceView' ? childGanttRecord.taskId : childGanttRecord.rowUniqueID;\n            connectorObj.connectorLineId = 'parent' + parentId + 'child' + childId;\n            connectorObj.milestoneParent = parentGanttRecord.isMilestone ? true : false;\n            connectorObj.milestoneChild = childGanttRecord.isMilestone ? true : false;\n            connectorObj.parentEndPoint = connectorObj.parentLeft + connectorObj.parentWidth;\n            connectorObj.childEndPoint = connectorObj.childLeft + connectorObj.childWidth;\n            if (isNullOrUndefined(isScheduledTask(parentGanttRecord)) || isNullOrUndefined(isScheduledTask(childGanttRecord))) {\n                return null;\n            }\n            else {\n                return connectorObj;\n            }\n        }\n    };\n    /**\n     * To render connector line.\n     *\n     * @param {IConnectorLineObject} connectorLinesCollection .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.renderConnectorLines = function (connectorLinesCollection) {\n        var connectorLine = '';\n        var ariaConnector = [];\n        for (var index = 0; index < connectorLinesCollection.length; index++) {\n            connectorLine = connectorLine + this.getConnectorLineTemplate(connectorLinesCollection[index]);\n            ariaConnector.push(connectorLinesCollection[index]);\n        }\n        this.svgObject.innerHTML = connectorLine;\n        var childNodes = this.parent.connectorLineModule.svgObject.childNodes;\n        for (var i = 0; i < childNodes.length; i++) {\n            var innerChild = childNodes[i].childNodes;\n            for (var j = 0; j < innerChild.length; j++) {\n                var ariaString = 'Connector Line ' + this.parent.connectorLineModule.generateAriaLabel(ariaConnector[i]);\n                innerChild[j].setAttribute('aria-label', ariaString);\n                innerChild[j].setAttribute('role', 'img');\n            }\n        }\n        this.parent.ganttChartModule.chartBodyContent.insertBefore(this.dependencyViewContainer, this.parent.ganttChartModule.chartBodyContent.lastChild);\n        this.dependencyViewContainer.appendChild(this.svgObject);\n        for (var i = 0; i < this.svgObject.children.length; i++) {\n            this.svgObject.children[i].children[0].setAttribute('tabindex', '-1');\n        }\n    };\n    /**\n     * To get parent position.\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.getParentPosition = function (data) {\n        if (data.parentIndex < data.childIndex) {\n            if (data.type === 'FF') {\n                if ((data.childLeft + data.childWidth) >= (data.parentLeft + data.parentWidth)) {\n                    return 'FFType2';\n                }\n                else {\n                    return 'FFType1';\n                }\n            }\n            else if ((data.parentLeft < data.childLeft) && (data.childLeft > (data.parentLeft + data.parentWidth + 25))) {\n                if (data.type === 'FS') {\n                    return 'FSType1';\n                }\n                if (data.type === 'SF') {\n                    return 'SFType1';\n                }\n                else if (data.type === 'SS') {\n                    return 'SSType2';\n                }\n            }\n            else if ((data.parentLeft < data.childLeft && (data.childLeft < (data.parentLeft + data.parentWidth)))\n                || (data.parentLeft === data.childLeft || data.parentLeft > data.childLeft)) {\n                if (data.parentLeft > (data.childLeft + data.childWidth + 25)) {\n                    if (data.type === 'SF') {\n                        return 'SFType2';\n                    }\n                }\n                if (data.parentLeft > data.childLeft) {\n                    if (data.type === 'SS') {\n                        return 'SSType1';\n                    }\n                    if (data.type === 'SF') {\n                        return 'SFType1';\n                    }\n                }\n                if (data.type === 'FS') {\n                    return 'FSType2';\n                }\n                else if (data.type === 'SS') {\n                    return 'SSType2';\n                }\n                else if (data.type === 'SF') {\n                    return 'SFType1';\n                }\n            }\n            else if ((data.parentLeft) < data.childLeft) {\n                if (data.type === 'FS') {\n                    return 'FSType2';\n                }\n                else if (data.type === 'SS') {\n                    return 'SSType2';\n                }\n                else if (data.type === 'SF') {\n                    return 'SFType1';\n                }\n            }\n        }\n        else if (data.parentIndex > data.childIndex) {\n            if ((data.parentLeft < data.childLeft) && (data.childLeft > (data.parentLeft + data.parentWidth))) {\n                if (data.type === 'FS') {\n                    if (30 >= (data.childLeft - (data.milestoneParent ?\n                        (data.parentLeft + data.parentWidth + 4) : (data.parentLeft + data.parentWidth)))) {\n                        return 'FSType3';\n                    }\n                    else {\n                        return 'FSType4';\n                    }\n                }\n                if (((data.childLeft + data.childWidth) > (data.parentLeft + data.parentWidth))) {\n                    if (data.type === 'SS') {\n                        return 'SSType4';\n                    }\n                    if (data.type === 'FF') {\n                        return 'FFType4';\n                    }\n                    if (data.type === 'SF') {\n                        return 'SFType4';\n                    }\n                }\n            }\n            else if ((data.parentLeft < data.childLeft && (data.childLeft < (data.parentLeft + data.parentWidth)))\n                || (data.parentLeft === data.childLeft || data.parentLeft > data.childLeft)) {\n                if ((data.childLeft + data.childWidth) <= (data.parentLeft + data.parentWidth)) {\n                    if (data.type === 'FF') {\n                        return 'FFType3';\n                    }\n                    if (data.type === 'SF') {\n                        if ((data.childLeft + data.childWidth + 25) < (data.parentLeft)) {\n                            return 'SFType3';\n                        }\n                        else {\n                            return 'SFType4';\n                        }\n                    }\n                    if (data.type === 'SS') {\n                        if (data.childLeft <= data.parentLeft) {\n                            return 'SSType3';\n                        }\n                        else {\n                            return 'SSType4';\n                        }\n                    }\n                }\n                else if ((data.childLeft + data.childWidth) > (data.parentLeft + data.parentWidth)) {\n                    if (data.type === 'FF') {\n                        return 'FFType4';\n                    }\n                    if (data.type === 'SF') {\n                        return 'SFType4';\n                    }\n                    if (data.type === 'SS') {\n                        if (data.childLeft <= data.parentLeft) {\n                            return 'SSType3';\n                        }\n                        else {\n                            return 'SSType4';\n                        }\n                    }\n                }\n                if (data.type === 'FS') {\n                    return 'FSType3';\n                }\n            }\n            else if (data.parentLeft < data.childLeft) {\n                if (data.type === 'FS') {\n                    return 'FSType3';\n                }\n                if (data.type === 'SS') {\n                    return 'SSType4';\n                }\n                if (data.type === 'FF') {\n                    return 'FFType4';\n                }\n                if (data.type === 'SF') {\n                    return 'SFType4';\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * To get line height.\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.getHeightValue = function (data) {\n        if (this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n            return (data.parentIndex * this.parent.rowHeight) > (data.childIndex * this.parent.rowHeight) ?\n                ((data.parentIndex * this.parent.rowHeight) - (data.childIndex * this.parent.rowHeight)) :\n                ((data.childIndex * this.parent.rowHeight) - (data.parentIndex * this.parent.rowHeight));\n        }\n        else {\n            return (data.parentIndex * data.rowHeight) > (data.childIndex * data.rowHeight) ?\n                ((data.parentIndex * data.rowHeight) - (data.childIndex * data.rowHeight)) :\n                ((data.childIndex * data.rowHeight) - (data.parentIndex * data.rowHeight));\n        }\n    };\n    /**\n     * To get sstype2 inner element width.\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.getInnerElementWidthSSType2 = function (data) {\n        if (data.parentLeft === data.childLeft) {\n            return 10;\n        }\n        return (data.childLeft - data.parentLeft);\n    };\n    /**\n     * To get sstype2 inner element left.\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.getInnerElementLeftSSType2 = function (data) {\n        if (data.parentLeft === data.childLeft) {\n            return (data.parentLeft - 20);\n        }\n        return (data.parentLeft - 10);\n    };\n    /**\n     * To get sstype2 inner child element width.\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.getInnerChildWidthSSType2 = function (data) {\n        if ((data.parentLeft + data.parentWidth) < data.childLeft) {\n            return 10;\n        }\n        if (data.parentLeft === data.childLeft) {\n            return 20;\n        }\n        if ((data.parentLeft + data.parentWidth) >= data.childLeft) {\n            return 10;\n        }\n        return (data.childLeft - data.parentLeft);\n    };\n    // private getBorderStyles(cssType: string, unit: number): string {\n    //     const borderWidth: string = 'border-' + cssType + '-width:' + unit + 'px;';\n    //     const borderStyle: string = 'border-' + cssType + '-style:solid;';\n    //     const borderColor: string = !isNullOrUndefined(this.lineColor) ? 'border-' + cssType + '-color:' + this.lineColor + ';' : '';\n    //     return (borderWidth + borderStyle + borderColor);\n    // }\n    ConnectorLine.prototype.calculateAdjustments = function (rowHeight, isMilestone, type) {\n        var taskbarHeightValue = this.parent.renderBaseline ? 0.45 : ((!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? 0.7 : 0.62);\n        var defaultTaskbarHeight = Math.floor(this.parent.rowHeight * taskbarHeightValue);\n        if (((isNullOrUndefined(this.parent.taskbarHeight) && rowHeight <= 36) || (!isNullOrUndefined(this.parent.taskbarHeight) &&\n            this.parent.taskbarHeight <= defaultTaskbarHeight)) || !isMilestone) {\n            return {\n                adjustY1: 0,\n                adjustX: 0,\n                adjustY2: 0,\n                adjustZ: 0\n            };\n        }\n        else {\n            // Calculate adjustments dynamically for rowHeight greater than 36\n            var divisorY1 = ((type === 'FSType2' || type === 'FSType3' || type === 'FSType4' || type === 'SSType1' || type === 'SSType2' || type === 'SSType4' || type === 'SFType2')) ? 12 : 24;\n            var adjustY1 = (rowHeight - 36) / divisorY1;\n            var adjustX = -(rowHeight - 36) / 4;\n            var adjustZ = -2 * (rowHeight - 36) / 24;\n            if (rowHeight <= 36) {\n                return {\n                    adjustY1: 0,\n                    adjustX: 0,\n                    adjustY2: 0,\n                    adjustZ: 0\n                };\n            }\n            return {\n                adjustY1: adjustY1,\n                adjustX: adjustX,\n                adjustZ: adjustZ\n            };\n        }\n    };\n    /**\n     * To get connector line template.\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {void}\n     * @private\n     */\n    ConnectorLine.prototype.getConnectorLineTemplate = function (data) {\n        var setInnerChildWidthSSType2 = this.getInnerChildWidthSSType2(data);\n        var setInnerElementWidthSSType2 = this.getInnerElementWidthSSType2(data);\n        var setInnerElementLeftSSType2 = this.getInnerElementLeftSSType2(data);\n        var height = this.getHeightValue(data);\n        var isMilestoneParent = data.milestoneParent ? true : false;\n        var isMilestone = data.milestoneChild ? true : false;\n        var isVirtual = this.parent.virtualScrollModule && this.parent.enableVirtualization;\n        var connectorLine = this.getPosition(data, this.getParentPosition(data), height);\n        var rowPosition = this.getPosition(data, this.getParentPosition(data), height);\n        var rowPositionHeight = rowPosition.top;\n        var isMilestoneValue = 0;\n        if (this.parent.renderBaseline) {\n            isMilestoneValue = (data.milestoneParent && data.milestoneChild) ? 0 : data.milestoneParent ? -5 : data.milestoneChild ? 5 : 0;\n        }\n        var heightValue = isVirtual ? connectorLine.height : (height + isMilestoneValue);\n        var borderTopWidth = 0;\n        var addTop = 0;\n        var parentOverlapTopValue = 0;\n        var childOverlapTopValue = 0;\n        var count = 0;\n        if (this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n            for (var i = 0; i < this.parent.currentViewData.length; i++) {\n                if (this.parent.getRowByIndex(i).style.display !== 'none') {\n                    if (count < data.parentIndex) {\n                        count++;\n                        parentOverlapTopValue = parentOverlapTopValue + this.parent.getRowByIndex(i).offsetHeight;\n                    }\n                }\n            }\n            count = 0;\n            for (var j = 0; j < this.parent.currentViewData.length; j++) {\n                if (this.parent.getRowByIndex(j).style.display !== 'none') {\n                    if (count < data.childIndex) {\n                        count++;\n                        childOverlapTopValue = childOverlapTopValue + this.parent.getRowByIndex(j).offsetHeight;\n                    }\n                }\n            }\n            if (!this.parent.enableVirtualization) {\n                heightValue = Math.abs(parentOverlapTopValue - childOverlapTopValue);\n            }\n        }\n        if (this.parent.currentViewData[data.parentIndex] && this.parent.currentViewData[data.childIndex] &&\n            this.parent.allowParentDependency) {\n            var fromRecordIsParent = this.parent.currentViewData[data.parentIndex].hasChildRecords;\n            var toRecordIsParent = this.parent.currentViewData[data.childIndex].hasChildRecords;\n            var fromRecordIsManual = this.parent.currentViewData[data.parentIndex].ganttProperties.isAutoSchedule;\n            var toRecordIsManual = this.parent.currentViewData[data.childIndex].ganttProperties.isAutoSchedule;\n            var isValid = true;\n            if (((fromRecordIsParent && fromRecordIsManual) && !toRecordIsParent) || ((toRecordIsParent && toRecordIsManual) &&\n                !fromRecordIsParent) || (fromRecordIsParent && fromRecordIsManual && toRecordIsManual && toRecordIsParent)\n                || (!fromRecordIsParent && !toRecordIsParent)) {\n                isValid = false;\n            }\n            if (isValid) {\n                if (((fromRecordIsParent && !fromRecordIsManual) && (toRecordIsParent && !toRecordIsManual))) {\n                    addTop = -11;\n                }\n                else if (!((fromRecordIsParent && !fromRecordIsManual) && (toRecordIsParent && !toRecordIsManual))) {\n                    if (data.childIndex > data.parentIndex) {\n                        if (!fromRecordIsParent && toRecordIsParent) {\n                            borderTopWidth = -11;\n                        }\n                        else {\n                            borderTopWidth = 11;\n                            addTop = -11;\n                        }\n                    }\n                    else {\n                        if ((fromRecordIsParent && !toRecordIsParent)) {\n                            borderTopWidth = -11;\n                        }\n                        else {\n                            borderTopWidth = 11;\n                            addTop = -11;\n                        }\n                    }\n                }\n                if (this.parent.currentViewData[data.parentIndex].ganttProperties.isMilestone) {\n                    if (data.parentIndex > data.childIndex) {\n                        addTop = -11;\n                        borderTopWidth = 12;\n                    }\n                    else if (data.type === 'SS' || data.type === 'FF') {\n                        addTop = -5;\n                    }\n                }\n                else if (this.parent.currentViewData[data.childIndex].ganttProperties.isMilestone) {\n                    if (data.parentIndex > data.childIndex) {\n                        addTop = 5;\n                        borderTopWidth = -10;\n                    }\n                    else if (data.parentIndex < data.childIndex) {\n                        if (data.type === 'SS' || data.type === 'FF') {\n                            addTop = -10;\n                        }\n                    }\n                }\n                else {\n                    if (data.parentIndex < data.childIndex && fromRecordIsManual && !toRecordIsManual) {\n                        addTop = 0;\n                        borderTopWidth = -11;\n                    }\n                    else if (data.childIndex < data.parentIndex && !fromRecordIsManual && toRecordIsManual) {\n                        addTop = 0;\n                        borderTopWidth = -11;\n                    }\n                }\n            }\n        }\n        if (this.getParentPosition(data)) {\n            // Create the group element\n            var type = this.getParentPosition(data);\n            var rowHeight1 = this.parent.rowHeight;\n            var adjustments = this.calculateAdjustments(rowHeight1, isMilestone, type);\n            this.transform = this.parent.enableRtl ? \"translate(\" + (this.parent.enableTimelineVirtualization ? this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth) + \", 0) scale(-1, 1)\" : '';\n            this.connectorId = 'ConnectorLine' + data.connectorLineId;\n            this.groupObject = this.renderer.createGroup({\n                id: this.connectorId,\n                transform: this.transform,\n                style: 'pointer-events: stroke',\n                class: cls.connectorLineContainer\n            });\n            //  Create the path element for the connector line\n            this.connectorPath = this.renderer.drawPath({\n                class: cls.connectorLineSVG,\n                d: this.connectorLinePath,\n                fill: 'transparent',\n                'stroke-width': this.lineStroke\n            });\n            // Create the path element for the arrow\n            this.arrowlinePath = this.renderer.drawPath({\n                d: this.arrowPath,\n                class: cls.connectorLineArrow\n            });\n            var outlineColor = (this.lineColor) && !(this.parent.enableCriticalPath) ? this.lineColor : '';\n            this.connectorPath.setAttribute('style', \"stroke: \" + outlineColor);\n            this.arrowlinePath.setAttribute('style', \"fill: \" + outlineColor);\n            // Append the path element to the group element\n            this.groupObject.appendChild(this.connectorPath);\n            this.groupObject.appendChild(this.arrowlinePath);\n            if (this.getParentPosition(data) === 'FSType1') {\n                this.taskLineValue = data.milestoneChild ? 1 : 0;\n                this.x1 = data.parentEndPoint + (data.milestoneParent ? -1 : (data.milestoneChild ? -1 : 0));\n                this.x2 = data.milestoneParent ?\n                    ((((data.childLeft - (data.parentLeft + data.parentWidth + 10)) + this.lineStroke) - 10) + 1) :\n                    (((data.childLeft - (data.parentLeft + data.parentWidth + 10)) + this.lineStroke) - 10);\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight :\n                    ((!this.parent.allowTaskbarOverlap ? parentOverlapTopValue :\n                        (data.parentIndex * data.rowHeight)) + addTop +\n                        this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue));\n                this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n                this.connectorLinePath = 'M ' + this.x1 + ' ' + (this.y1) + ' L ' + ((this.x1 + this.x2) + adjustments['adjustZ']) + ' ' + (this.y1) + ' L ' + ((this.x1 + this.x2) + adjustments['adjustZ']) + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x2 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + ((this.x1 + this.x2 + 20) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x2 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x2 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2 + 4) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'FSType2') {\n                this.x1 = data.parentLeft;\n                this.x2 = data.parentWidth + (data.milestoneParent ? -1 : 0);\n                this.x3 = this.x2 + (data.milestoneParent ? 11 : 10);\n                this.x4 = data.parentWidth - ((data.parentEndPoint - data.childLeft) + 20);\n                this.y1 = (this.parent.enableVirtualization ?\n                    rowPositionHeight : ((!this.parent.allowTaskbarOverlap ? parentOverlapTopValue :\n                    (data.parentIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue));\n                this.y2 = heightValue + borderTopWidth - this.getconnectorLineGap(data) - this.lineStroke;\n                this.y3 = this.getconnectorLineGap(data);\n                this.y4 = (!this.parent.allowTaskbarOverlap ? childOverlapTopValue :\n                    (this.y1 + this.y2 - ((this.y1 + this.y2) % data.rowHeight)));\n                this.connectorLinePath = 'M ' + (this.x1 + this.x2) + ' ' + (this.y1) + ' ' + ' L ' + (this.x1 + this.x3) + ' ' + (this.y1) + ' L ' + (this.x1 + this.x3) + ' ' + this.y4 +\n                    ' L ' + ((this.x1 + this.x4) + adjustments['adjustZ']) + ' ' + this.y4 + ' L ' + ((this.x1 + this.x4) + adjustments['adjustZ']) + ' ' + ((this.y1 + this.y2 + this.y3) + adjustments['adjustY1']) + ' L ' + ((this.x1 + this.x4 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2 + this.y3) + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + ((this.x1 + this.x4 + 20) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2 + this.y3) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x4 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2 + this.y3 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x4 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + this.y2 + this.y3 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'FSType3') {\n                this.taskLineValue = data.milestoneChild ? 1 : 0;\n                this.point1 = (this.parent.enableVirtualization ? rowPositionHeight :\n                    ((!this.parent.allowTaskbarOverlap ? childOverlapTopValue :\n                        (data.childIndex * data.rowHeight)) + addTop +\n                        this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1) - isMilestoneValue));\n                this.x1 = (data.childLeft + (data.milestoneChild ? -1 : 0) + (data.milestoneParent ? 1 : 0)) - 20;\n                this.x2 = (data.parentEndPoint - data.childLeft) + 30;\n                this.y1 = this.point1 + (this.parent.renderBaseline ?\n                    (data.milestoneChild && !(data.milestoneParent) ? 11 :\n                        data.milestoneParent && !(data.milestoneChild) ? -12 : 0) : 0);\n                this.y2 = this.point1 + heightValue + borderTopWidth - this.getconnectorLineGap(data) - this.lineStroke +\n                    this.taskLineValue;\n                this.y3 = this.getconnectorLineGap(data);\n                this.y4 = this.y2 - (this.y2 % data.rowHeight);\n                this.connectorLinePath = 'M ' + (this.x1 + 12) + ' ' + ((this.y1) + adjustments['adjustY1']) + ' L ' + this.x1 + ' ' + ((this.y1) + adjustments['adjustY1']) + ' L ' + this.x1 + ' ' + this.y4 +\n                    ' L ' + (this.x1 + this.x2) + ' ' + this.y4 + ' L ' + (this.x1 + this.x2) + ' ' + (this.y2 + this.y3) + ' L ' + (this.x1 + this.x2 - 12) + ' ' + (this.y2 + this.y3);\n                this.arrowPath = 'M ' + ((this.x1 + 20) + adjustments['adjustX']) + ' ' + ((this.y1) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'FSType4') {\n                this.point1 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    childOverlapTopValue : (data.childIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1)));\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n                this.x1 = data.parentEndPoint + (data.milestoneChild ? -1 : 0) + (data.milestoneParent ? 1 : 0);\n                this.x2 = data.childLeft - data.parentEndPoint - 20;\n                this.y1 = this.point1 + (data.milestoneChild ? -1 : 0);\n                this.y2 = this.point1 + heightValue + borderTopWidth - this.lineStroke + 1 + this.taskLineValue +\n                    (this.parent.renderBaseline ? (data.milestoneChild && !(data.milestoneParent) ? -12 :\n                        data.milestoneParent && !(data.milestoneChild) ? 11 : 0) : 0);\n                this.connectorLinePath = 'M ' + (this.x1 + this.x2 + 12) + ' ' + ((this.y1) + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2) + ' ' + ((this.y1) + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x2) + ' ' + this.y2 +\n                    ' L ' + this.x1 + ' ' + this.y2;\n                this.arrowPath = 'M ' + ((this.x1 + this.x2 + 20) + adjustments['adjustX']) + ' ' + ((this.y1) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x2 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x2 + 12) + adjustments['adjustX']) + ' ' + ((this.y1 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SSType4') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 2 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n                this.point1 = heightValue + this.taskLineValue + borderTopWidth;\n                this.point2 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    childOverlapTopValue : (data.childIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1)));\n                this.x1 = data.parentLeft - 10;\n                this.x2 = data.childLeft - data.parentLeft;\n                this.y1 = this.point2 + (data.milestoneChild ? 1 : 0);\n                this.y2 = this.y1 + this.point1 + (this.parent.renderBaseline ? (data.milestoneParent && !(data.milestoneChild) ? 10 :\n                    data.milestoneChild && !(data.milestoneParent) ? -13 : 0) : 0);\n                this.connectorLinePath = 'M ' + ((this.x1 + this.x2) + adjustedX) + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + (this.y1) +\n                    ' L ' + this.x1 + ' ' + this.y2 + ' L ' + (this.x1 + 10) + ' ' + this.y2;\n                this.arrowPath = 'M ' + ((this.x1 + this.x2 + 8) + adjustedX) + ' ' + (this.y1) +\n                    ' L ' + ((this.x1 + this.x2) + adjustedX) + ' ' + (this.y1 - (4 + this.lineStroke)) +\n                    ' L ' + ((this.x1 + this.x2) + adjustedX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SSType3') {\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n                this.point1 = heightValue + this.taskLineValue + borderTopWidth - (this.lineStroke - 1);\n                this.x1 = data.childLeft - 20;\n                this.y1 = (data.milestoneChild ? 1 : 0) + (this.parent.enableVirtualization ? rowPositionHeight :\n                    ((!this.parent.allowTaskbarOverlap ? childOverlapTopValue : (data.childIndex * data.rowHeight)) + addTop +\n                        this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1)));\n                this.x2 = data.parentLeft - data.childLeft + 21;\n                this.y2 = this.y1 + this.point1 + (this.parent.renderBaseline ? (data.milestoneChild && !(data.milestoneParent) ? -11 :\n                    data.milestoneParent && !(data.milestoneChild) ? 10 : 0) : 0);\n                this.connectorLinePath = 'M ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + (this.y1) +\n                    ' L ' + this.x1 + ' ' + this.y2 + ' L ' + (this.x1 + this.x2) + ' ' + this.y2;\n                this.arrowPath = 'M ' + ((this.x1 + 20) + adjustments['adjustX']) + ' ' + (this.y1) +\n                    ' L ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + (this.y1 - (4 + this.lineStroke)) +\n                    ' L ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SSType2') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 2 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n                this.point1 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n                this.x1 = setInnerElementLeftSSType2;\n                this.x2 = setInnerChildWidthSSType2 + 1;\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    parentOverlapTopValue : (data.parentIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1)));\n                this.y2 = this.y1 + this.point1;\n                this.connectorLinePath = 'M ' + (this.x1 + this.x2) + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + (this.y2 + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + setInnerElementWidthSSType2) + adjustedX) + ' ' + (this.y2 + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + ((this.x1 + setInnerElementWidthSSType2 + 8) + adjustedX) + ' ' + ((this.y2) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + setInnerElementWidthSSType2) + adjustedX) + ' ' + ((this.y2 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + setInnerElementWidthSSType2) + adjustedX) + ' ' + ((this.y2 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SSType1') {\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n                this.point1 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n                this.x1 = data.childLeft - 20;\n                this.x2 = data.parentLeft - data.childLeft + 21;\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    parentOverlapTopValue : (data.parentIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1)));\n                this.y2 = this.y1 + this.point1;\n                this.connectorLinePath = 'M ' + (this.x1 + this.x2) + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + (this.y2 + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + (this.y2 + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + ((this.x1 + 20) + adjustments['adjustX']) + ' ' + ((this.y2) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + ((this.y2 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 12) + adjustments['adjustX']) + ' ' + ((this.y2 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'FFType1') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : (data.milestoneChild ? 1 : 0);\n                this.x1 = data.childEndPoint;\n                this.x2 = data.parentEndPoint + (data.milestoneParent ? -1 : 0);\n                this.x3 = data.milestoneParent ? 22 : 21;\n                this.x4 = data.milestoneChild ? 4 : 8;\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    parentOverlapTopValue : (data.parentIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1)));\n                this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n                this.connectorLinePath = 'M ' + this.x2 + ' ' + (this.y1) + ' L ' + (this.x2 + this.x3) + ' ' + (this.y1) + ' L ' + (this.x2 + this.x3) + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']) +\n                    ' L ' + (this.x1 + this.x4) + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + ((this.x1) + adjustedX) + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 8) + adjustedX) + ' ' + ((this.y1 + this.y2 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 8) + adjustedX) + ' ' + ((this.y1 + this.y2 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'FFType2') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : (data.milestoneChild ? 1 : 0);\n                this.x1 = data.parentEndPoint;\n                this.x2 = data.childEndPoint + (data.milestoneParent ? 22 : 21);\n                this.x3 = data.childEndPoint + (data.milestoneChild ? 9 : 8);\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight :\n                    ((!this.parent.allowTaskbarOverlap ? parentOverlapTopValue :\n                        (data.parentIndex * data.rowHeight)) + addTop +\n                        this.getTaskbarMidpoint(data.milestoneParent) - (this.lineStroke - 1)));\n                this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n                var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n                this.connectorLinePath = 'M ' + this.x1 + ' ' + (this.y1) + ' L ' + this.x2 + ' ' + (this.y1) + ' L ' + this.x2 + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']) +\n                    ' L ' + this.x3 + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + ((this.x3 - 8) + arrowX) + ' ' + ((this.y1 + this.y2) + adjustments['adjustY1']) +\n                    ' L ' + (this.x3 + arrowX) + ' ' + ((this.y1 + this.y2 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + (this.x3 + arrowX) + ' ' + ((this.y1 + this.y2 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'FFType3') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n                this.x1 = data.childEndPoint;\n                this.x2 = this.x1 + (data.milestoneChild ? 4 : 8);\n                this.x3 = data.parentEndPoint - data.childEndPoint + (data.milestoneChild ? 16 : 10);\n                this.x4 = data.parentEndPoint + (data.milestoneParent ? -1 : 0);\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    childOverlapTopValue : (data.childIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1)));\n                this.y2 = heightValue + this.taskLineValue + borderTopWidth - this.lineStroke + (this.parent.renderBaseline ?\n                    (data.milestoneParent && !(data.milestoneChild) ? 10 : data.milestoneChild && !(data.milestoneParent) ? -11 : 0) : 0);\n                this.connectorLinePath = 'M ' + this.x2 + ' ' + (this.y1) + ' L ' + (this.x2 + this.x3) + ' ' + (this.y1) + ' L ' + (this.x2 + this.x3) + ' ' + (this.y1 + this.y2) +\n                    ' L ' + this.x4 + ' ' + (this.y1 + this.y2);\n                this.arrowPath = 'M ' + (this.x1 + adjustedX) + ' ' + (this.y1) +\n                    ' L ' + ((this.x1 + 8) + adjustedX) + ' ' + (this.y1 - (4 + this.lineStroke)) +\n                    ' L ' + ((this.x1 + 8) + adjustedX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'FFType4') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n                this.x1 = data.parentEndPoint;\n                this.x2 = data.childEndPoint + (data.milestoneChild ? 7 : 8);\n                this.x3 = this.x2 + (data.milestoneChild ? 12 : 11);\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    childOverlapTopValue : (data.childIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1)));\n                this.y2 = heightValue + this.taskLineValue + borderTopWidth + (this.parent.renderBaseline ?\n                    (data.milestoneParent && !(data.milestoneChild) ? 10 :\n                        data.milestoneChild && !(data.milestoneParent) ? -12 : 0) : 0) - this.lineStroke + 1;\n                var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n                this.connectorLinePath = 'M ' + this.x2 + ' ' + (this.y1) + ' L ' + this.x3 + ' ' + (this.y1) + ' L ' + this.x3 + ' ' + (this.y1 + this.y2) +\n                    ' L ' + this.x1 + ' ' + (this.y1 + this.y2);\n                this.arrowPath = 'M ' + ((this.x2 - 8) + arrowX) + ' ' + (this.y1) +\n                    ' L ' + (this.x2 + arrowX) + ' ' + (this.y1 - (4 + this.lineStroke)) +\n                    ' L ' + (this.x2 + arrowX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SFType4') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : (data.milestoneChild ? -1 : 0);\n                this.point1 = (this.taskLineValue + heightValue + borderTopWidth - this.getconnectorLineGap(data) - (this.lineStroke - 1));\n                this.point2 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    childOverlapTopValue : (data.childIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue));\n                this.x1 = data.parentLeft - 10;\n                this.x2 = this.x1 + ((data.childEndPoint - data.parentLeft) + 18);\n                this.x3 = this.x2 + (data.milestoneChild ? 16 : 11);\n                this.y1 = this.point2 + (data.milestoneChild ? 2 : 0) + (this.parent.renderBaseline ? (data.milestoneParent ? -5 : 0) : 0);\n                this.y2 = this.y1 + this.point1 + (this.parent.renderBaseline ? (data.milestoneChild && !(data.milestoneParent) ? -9 :\n                    data.milestoneParent && !(data.milestoneChild) ? 9 : 0) : 0);\n                this.y3 = this.getconnectorLineGap(data);\n                this.y4 = this.y2 - (this.y2 % data.rowHeight);\n                var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n                this.connectorLinePath = 'M ' + this.x2 + ' ' + ((this.y1) - adjustments['adjustY1']) + ' L ' + this.x3 + ' ' + ((this.y1) - adjustments['adjustY1']) + ' L ' + this.x3 + ' ' + this.y4 + ' L ' + this.x1 + ' ' + this.y4 +\n                    ' L ' + this.x1 + ' ' + ((this.y2 + this.y3)) + ' L ' + (this.x1 + 11) + ' ' + ((this.y2 + this.y3));\n                this.arrowPath = 'M ' + ((this.x2 - 8) + arrowX) + ' ' + ((this.y1) - adjustments['adjustY1']) +\n                    ' L ' + (this.x2 + arrowX) + ' ' + ((this.y1 - (4 + this.lineStroke)) - adjustments['adjustY1']) +\n                    ' L ' + (this.x2 + arrowX) + ' ' + ((this.y1 + 4 + this.lineStroke) - adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SFType3') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n                this.point1 = (data.parentLeft - (data.childEndPoint + (data.milestoneParent ? 23 : 20))) + 1;\n                this.point2 = (this.parent.enableVirtualization ? rowPositionHeight : ((!this.parent.allowTaskbarOverlap ?\n                    childOverlapTopValue : (data.childIndex * data.rowHeight)) + addTop +\n                    this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1)));\n                this.x1 = data.childEndPoint;\n                this.x2 = this.x1 + (data.milestoneChild ? 9 : 8);\n                this.x3 = this.x2 + (data.milestoneChild ? 17 : 11);\n                this.y1 = this.point2;\n                this.y2 = this.y1 + heightValue + borderTopWidth - (this.lineStroke - 1) + this.taskLineValue +\n                    (this.parent.renderBaseline ? (data.milestoneChild && !(data.milestoneParent) ? -12 :\n                        data.milestoneParent && !(data.milestoneChild) ? 10 : 0) : 0);\n                this.connectorLinePath = 'M ' + this.x2 + ' ' + (this.y1) + ' L ' + this.x3 + ' ' + (this.y1) +\n                    ' L ' + this.x3 + ' ' + this.y2 + ' L ' + (this.x3 + this.point1) + ' ' + this.y2;\n                this.arrowPath = 'M ' + ((this.x2 - 8) + adjustedX) + ' ' + (this.y1) +\n                    ' L ' + (this.x2 + adjustedX) + ' ' + (this.y1 - (4 + this.lineStroke)) +\n                    ' L ' + (this.x2 + adjustedX) + ' ' + (this.y1 + 4 + this.lineStroke) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SFType1') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : data.milestoneChild ? 1 : 0;\n                this.point1 = heightValue + borderTopWidth - this.getconnectorLineGap(data) + this.taskLineValue - this.lineStroke;\n                this.point2 = this.getconnectorLineGap(data);\n                this.x1 = data.parentLeft - 10;\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight :\n                    ((!this.parent.allowTaskbarOverlap ? parentOverlapTopValue :\n                        (data.parentIndex * data.rowHeight)) + addTop +\n                        this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1) - isMilestoneValue));\n                this.x2 = (data.childEndPoint - data.parentLeft) + 31;\n                this.y2 = this.y1 + this.point1;\n                this.x3 = (data.childEndPoint - data.parentLeft) + 18;\n                this.y3 = this.y2 - (this.y2 % data.rowHeight);\n                var arrowX = this.parent.renderBaseline ? 0 : adjustedX;\n                this.connectorLinePath = 'M ' + (this.x1 + 11) + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + (this.y1) + ' L ' + this.x1 + ' ' + this.y3 +\n                    ' L ' + (this.x1 + this.x2) + ' ' + this.y3 + ' L ' + (this.x1 + this.x2) + ' ' + ((this.y2 + this.point2) + adjustments['adjustY1']) + ' L ' + (this.x1 + this.x3) + ' ' + ((this.y2 + this.point2) + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + ((this.x1 + this.x3 - 8) + arrowX) + ' ' + ((this.y2 + this.point2) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x3) + arrowX) + ' ' + ((this.y2 + this.point2 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + this.x3) + arrowX) + ' ' + ((this.y2 + this.point2 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            if (this.getParentPosition(data) === 'SFType2') {\n                var adjustedX = adjustments['adjustX'] !== 0 ? adjustments['adjustX'] + 11 : adjustments['adjustX'];\n                this.taskLineValue = this.parent.renderBaseline ? this.taskLineValue : 0;\n                this.x1 = data.childEndPoint;\n                this.y1 = (this.parent.enableVirtualization ? rowPositionHeight :\n                    ((!this.parent.allowTaskbarOverlap ? parentOverlapTopValue :\n                        (data.parentIndex * data.rowHeight)) + addTop +\n                        this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1)));\n                this.x2 = (data.parentLeft - data.childEndPoint);\n                this.y2 = this.y1 + heightValue + this.taskLineValue + borderTopWidth - this.lineStroke;\n                this.connectorLinePath = 'M ' + (this.x1 + this.x2 + 1) + ' ' + (this.y1) + ' L ' + (this.x1 + this.x2 - 10) + ' ' + (this.y1) +\n                    ' L ' + (this.x1 + this.x2 - 10) + ' ' + (this.y2 + adjustments['adjustY1']) + ' L ' + (this.x1 + 8) + ' ' + (this.y2 + adjustments['adjustY1']);\n                this.arrowPath = 'M ' + (this.x1 + adjustedX) + ' ' + ((this.y2) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 8) + adjustedX) + ' ' + ((this.y2 - (4 + this.lineStroke)) + adjustments['adjustY1']) +\n                    ' L ' + ((this.x1 + 8) + adjustedX) + ' ' + ((this.y2 + 4 + this.lineStroke) + adjustments['adjustY1']) + ' Z';\n            }\n            this.connectorPath.setAttribute('d', this.connectorLinePath);\n            this.arrowlinePath.setAttribute('d', this.arrowPath);\n        }\n        return this.groupObject.outerHTML;\n    };\n    /**\n     * @param {IConnectorLineObject} data .\n     * @param {string} type .\n     * @param {number} heightValue .\n     * @returns {number} .\n     * @private\n     */\n    ConnectorLine.prototype.getPosition = function (data, type, heightValue) {\n        var topPosition = 0;\n        var lineHeight = 0;\n        if (this.parent.virtualScrollModule && this.parent.enableVirtualization) {\n            var isMilestoneParent = data.milestoneParent ? true : false;\n            var isMilestone = data.milestoneChild ? true : false;\n            var midPointParent = this.getTaskbarMidpoint(isMilestoneParent) - (this.lineStroke - 1);\n            var midPoint = this.getTaskbarMidpoint(isMilestone) - (this.lineStroke - 1);\n            var isParentIndex = data.parentIndexInCurrentView !== -1;\n            var isChildIndex = data.childIndexInCurrentView !== -1;\n            var lastRowIndex = this.parent.currentViewData.length - 1;\n            if (type === 'SSType1' || type === 'SSType2' || type === 'FFType1' || type === 'FFType2' || type === 'SFType2') {\n                topPosition = isParentIndex ? (data.parentIndexInCurrentView * data.rowHeight) + midPointParent : 0;\n                lineHeight = (isParentIndex && isChildIndex) ? heightValue : isChildIndex ?\n                    (data.childIndexInCurrentView * data.rowHeight) + midPointParent : (lastRowIndex * data.rowHeight) + midPointParent;\n            }\n            else if (type === 'SSType3' || type === 'SSType4' || type === 'FSType4' || type === 'FFType3' ||\n                type === 'FFType4' || type === 'SFType4' || type === 'SFType3') {\n                topPosition = isChildIndex ? (data.childIndexInCurrentView * data.rowHeight) + midPoint : 0;\n                lineHeight = (isParentIndex && isChildIndex) ? heightValue : isParentIndex ?\n                    (data.parentIndexInCurrentView * data.rowHeight) + midPoint :\n                    (lastRowIndex * data.rowHeight) + midPoint;\n            }\n            else if (type === 'FSType3') {\n                topPosition = isChildIndex ? (data.childIndexInCurrentView * data.rowHeight) + midPointParent : 0;\n                lineHeight = (isParentIndex && isChildIndex) ? heightValue : isParentIndex ?\n                    (data.parentIndexInCurrentView * data.rowHeight) + midPoint :\n                    (lastRowIndex * data.rowHeight) + midPointParent;\n            }\n            else if (type === 'SFType1' || type === 'FSType1' || type === 'FSType2') {\n                topPosition = isParentIndex ? (data.parentIndexInCurrentView * data.rowHeight) + midPoint : 0;\n                lineHeight = (isParentIndex && isChildIndex) ? heightValue : isChildIndex ?\n                    (data.childIndexInCurrentView * data.rowHeight) + midPoint :\n                    (lastRowIndex * data.rowHeight) + midPoint;\n            }\n        }\n        return { top: topPosition, height: lineHeight };\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLine.prototype.createConnectorLineTooltipTable = function () {\n        this.tooltipTable = createElement('table', { className: '.e-tooltiptable', styles: 'margin-top:0px', attrs: { 'cellspacing': '2px', 'cellpadding': '2px' } });\n        var tooltipBody = createElement('tbody');\n        tooltipBody.innerHTML = '';\n        this.tooltipTable.appendChild(tooltipBody);\n    };\n    /**\n     * @param {string} fromTaskName .\n     * @param {string} fromPredecessorText .\n     * @param {string} toTaskName .\n     * @param {string} toPredecessorText .\n     * @returns {string} .\n     * @private\n     */\n    ConnectorLine.prototype.getConnectorLineTooltipInnerTd = function (fromTaskName, fromPredecessorText, toTaskName, toPredecessorText) {\n        var innerTd = '<tr  id=\"fromPredecessor\"><td style=\"padding: 2px;\">' + this.parent.localeObj.getConstant('from') + '</td><td> ';\n        innerTd = innerTd + fromTaskName + ' </td><td style=\"padding: 2px;\"> ' + this.parent.localeObj.getConstant(fromPredecessorText) + ' </td> </tr>';\n        innerTd = innerTd + '<tr id=\"toPredecessor\"><td style=\"padding: 2px;\">' + this.parent.localeObj.getConstant('to') + '</td><td> ' + toTaskName;\n        innerTd = innerTd + ' </td><td style=\"padding: 2px;\"> ' + this.parent.localeObj.getConstant(toPredecessorText) + ' </td></tr></tbody><table>';\n        return innerTd;\n    };\n    /**\n     * Generate aria-label for connectorline\n     *\n     * @param {IConnectorLineObject} data .\n     * @returns {string} .\n     * @private\n     */\n    ConnectorLine.prototype.generateAriaLabel = function (data) {\n        var type = data.type;\n        var updatedRecords = this.expandedRecords;\n        var fromName = updatedRecords[data.parentIndex].ganttProperties.taskName;\n        var toName = updatedRecords[data.childIndex].ganttProperties.taskName;\n        var start = this.parent.localeObj.getConstant('start');\n        var finish = this.parent.localeObj.getConstant('finish');\n        var value = '';\n        if (type === 'FS') {\n            value = fromName + ' ' + finish + ' to ' + toName + ' ' + start;\n        }\n        else if (type === 'FF') {\n            value = fromName + ' ' + finish + ' to ' + toName + ' ' + finish;\n        }\n        else if (type === 'SS') {\n            value = fromName + ' ' + start + ' to ' + toName + ' ' + start;\n        }\n        else {\n            value = fromName + ' ' + start + ' to ' + toName + ' ' + finish;\n        }\n        return value;\n    };\n    /**\n     * To get the record based on the predecessor value\n     *\n     * @param {string} id .\n     * @returns {IGanttData} .\n     * @private\n     */\n    ConnectorLine.prototype.getRecordByID = function (id) {\n        if (isNullOrUndefined(id)) {\n            return null;\n        }\n        if (this.parent.pdfExportModule && this.parent.pdfExportModule.isPdfExport && this.parent.pdfExportModule.helper.exportProps &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings &&\n            this.parent.pdfExportModule.helper.exportProps.fitToWidthSettings.isFitToWidth) {\n            var a = this.parent.pdfExportModule.helper.beforeSinglePageExport['cloneFlatData'].filter(function (data) {\n                return data.ganttProperties.taskId.toString() === id.toString();\n            })[0];\n            return a;\n        }\n        else {\n            return this.parent.viewType === 'ResourceView' ? this.parent.flatData[this.parent.getTaskIds().indexOf('T' + id.toString())] :\n                this.parent.flatData[this.parent.ids.indexOf(id.toString())];\n        }\n    };\n    /**\n     * Method to remove connector line from DOM\n     *\n     * @param {IGanttData[] | object} records .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLine.prototype.removePreviousConnectorLines = function (records) {\n        var isObjectType;\n        if (isObject(records) === true) {\n            isObjectType = true;\n        }\n        else {\n            isObjectType = false;\n        }\n        var length = isObjectType ? Object.keys(records).length : records.length;\n        var keys = Object.keys(records);\n        for (var i = 0; i < length; i++) {\n            var data = void 0;\n            if (isObjectType) {\n                var uniqueId = keys[i];\n                data = records[uniqueId];\n            }\n            else {\n                data = records[i];\n            }\n            var predecessors = data.ganttProperties && data.ganttProperties.predecessor;\n            if (predecessors && predecessors.length > 0) {\n                for (var pre = 0; pre < predecessors.length; pre++) {\n                    var lineId = 'parent' + predecessors[pre].from + 'child' + predecessors[pre].to;\n                    this.removeConnectorLineById(lineId);\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} id .\n     * @returns {void} .\n     * @private\n     */\n    ConnectorLine.prototype.removeConnectorLineById = function (id) {\n        var element = this.parent.connectorLineModule.dependencyViewContainer.querySelector('#ConnectorLine' + id.replace(/([.])/g, '\\\\$1'));\n        if (!isNullOrUndefined(element)) {\n            remove(element);\n        }\n    };\n    return ConnectorLine;\n}());\nexport { ConnectorLine };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}