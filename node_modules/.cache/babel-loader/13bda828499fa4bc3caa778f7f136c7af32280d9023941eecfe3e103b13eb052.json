{"ast":null,"code":"import { Observer } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './constant';\nimport { Lists } from './../plugin/lists';\nimport { NodeSelection } from './../../selection/index';\nimport { DOMNode } from './../plugin/dom-node';\nimport { Formats } from './../plugin/formats';\nimport { LinkCommand } from './../plugin/link';\nimport { Alignments } from './../plugin/alignments';\nimport { Indents } from './../plugin/indents';\nimport { ImageCommand } from './../plugin/image';\nimport { AudioCommand } from './../plugin/audio';\nimport { VideoCommand } from './../plugin/video';\nimport { TableCommand } from './../plugin/table';\nimport { SelectionBasedExec } from './../plugin/selection-exec';\nimport { InsertHtmlExec } from './../plugin/inserthtml-exec';\nimport { ClearFormatExec } from './../plugin/clearformat-exec';\nimport { UndoRedoManager } from './../plugin/undo';\nimport { MsWordPaste } from '../plugin/ms-word-clean-up';\nimport * as EVENTS from './../../common/constant';\nimport { InsertTextExec } from '../plugin/insert-text';\nimport { NodeCutter } from '../plugin/nodecutter';\nimport { FormatPainterActions } from '../plugin/format-painter-actions';\nimport { EmojiPickerAction } from '../plugin/emoji-picker-action';\nimport { TableSelection } from '../plugin/table-selection';\n/**\n * EditorManager internal component\n *\n * @hidden\n\n */\nvar EditorManager = /** @class */function () {\n  /**\n   * Constructor for creating the component\n   *\n   * @hidden\n    * @param {ICommandModel} options - specifies the command Model\n   */\n  function EditorManager(options) {\n    this.currentDocument = options.document;\n    this.editableElement = options.editableElement;\n    this.nodeSelection = new NodeSelection(this.editableElement);\n    this.nodeCutter = new NodeCutter();\n    this.domNode = new DOMNode(this.editableElement, this.currentDocument);\n    this.observer = new Observer(this);\n    this.listObj = new Lists(this);\n    this.formatObj = new Formats(this);\n    this.alignmentObj = new Alignments(this);\n    this.indentsObj = new Indents(this);\n    this.linkObj = new LinkCommand(this);\n    this.imgObj = new ImageCommand(this);\n    this.audioObj = new AudioCommand(this);\n    this.videoObj = new VideoCommand(this);\n    this.selectionObj = new SelectionBasedExec(this);\n    this.inserthtmlObj = new InsertHtmlExec(this);\n    this.insertTextObj = new InsertTextExec(this);\n    this.clearObj = new ClearFormatExec(this);\n    this.tableObj = new TableCommand(this);\n    this.undoRedoManager = new UndoRedoManager(this, options.options);\n    this.msWordPaste = new MsWordPaste(this);\n    this.formatPainterEditor = new FormatPainterActions(this, options.formatPainterSettings);\n    this.emojiPickerObj = new EmojiPickerAction(this);\n    this.tableCellSelection = new TableSelection(this.editableElement, this.currentDocument);\n    this.wireEvents();\n    this.isDestroyed = false;\n  }\n  EditorManager.prototype.wireEvents = function () {\n    this.observer.on(EVENTS.KEY_DOWN, this.editorKeyDown, this);\n    this.observer.on(EVENTS.KEY_UP, this.editorKeyUp, this);\n    this.observer.on(EVENTS.KEY_UP, this.editorKeyUp, this);\n    this.observer.on(EVENTS.MODEL_CHANGED, this.onPropertyChanged, this);\n    this.observer.on(EVENTS.MS_WORD_CLEANUP, this.onWordPaste, this);\n    this.observer.on(EVENTS.ON_BEGIN, this.onBegin, this);\n    this.observer.on(EVENTS.MOUSE_DOWN, this.editorMouseDown, this);\n    this.observer.on(EVENTS.DESTROY, this.destroy, this);\n  };\n  EditorManager.prototype.unwireEvents = function () {\n    this.observer.off(EVENTS.KEY_DOWN, this.editorKeyDown);\n    this.observer.off(EVENTS.KEY_UP, this.editorKeyUp);\n    this.observer.off(EVENTS.KEY_UP, this.editorKeyUp);\n    this.observer.off(EVENTS.MODEL_CHANGED, this.onPropertyChanged);\n    this.observer.off(EVENTS.MS_WORD_CLEANUP, this.onWordPaste);\n    this.observer.off(EVENTS.ON_BEGIN, this.onBegin);\n    this.observer.off(EVENTS.MOUSE_DOWN, this.editorMouseDown);\n    this.observer.off(EVENTS.DESTROY, this.destroy);\n  };\n  EditorManager.prototype.onWordPaste = function (e) {\n    this.observer.notify(EVENTS.MS_WORD_CLEANUP_PLUGIN, e);\n  };\n  EditorManager.prototype.onPropertyChanged = function (props) {\n    this.observer.notify(EVENTS.MODEL_CHANGED_PLUGIN, props);\n  };\n  EditorManager.prototype.editorKeyDown = function (e) {\n    this.observer.notify(EVENTS.KEY_DOWN_HANDLER, e);\n  };\n  EditorManager.prototype.editorKeyUp = function (e) {\n    this.observer.notify(EVENTS.KEY_UP_HANDLER, e);\n  };\n  EditorManager.prototype.onBegin = function (e) {\n    this.observer.notify(EVENTS.SPACE_ACTION, e);\n  };\n  /* eslint-disable */\n  /**\n   * execCommand\n   *\n   * @param {ExecCommand} command - specifies the execution command\n   * @param {T} value - specifes the value.\n   * @param {Event} event - specifies the call back event\n   * @param {Function} callBack - specifies the function\n   * @param {string} text - specifies the string value\n   * @param {T} exeValue - specifies the values to be executed\n   * @param {string} selector - specifies the selector values\n   * @returns {void}\n   * @hidden\n    */\n  /* eslint-enable */\n  EditorManager.prototype.execCommand = function (command, value, event, callBack, text, exeValue, selector, enterAction) {\n    switch (command.toLowerCase()) {\n      case 'lists':\n        this.observer.notify(EVENTS.LIST_TYPE, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          selector: selector,\n          item: exeValue,\n          enterAction: enterAction\n        });\n        break;\n      case 'formats':\n        this.observer.notify(EVENTS.FORMAT_TYPE, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          selector: selector,\n          exeValue: exeValue,\n          enterAction: enterAction\n        });\n        break;\n      case 'alignments':\n        this.observer.notify(CONSTANT.ALIGNMENT_TYPE, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          selector: selector,\n          value: exeValue,\n          enterAction: enterAction\n        });\n        break;\n      case 'indents':\n        this.observer.notify(CONSTANT.INDENT_TYPE, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          selector: selector,\n          enterAction: enterAction\n        });\n        break;\n      case 'links':\n        this.observer.notify(CONSTANT.LINK, {\n          command: command,\n          value: value,\n          item: exeValue,\n          event: event,\n          callBack: callBack\n        });\n        break;\n      case 'files':\n        this.observer.notify(CONSTANT.IMAGE, {\n          command: command,\n          value: 'Image',\n          item: exeValue,\n          event: event,\n          callBack: callBack,\n          selector: selector\n        });\n        break;\n      case 'images':\n        this.observer.notify(CONSTANT.IMAGE, {\n          command: command,\n          value: value,\n          item: exeValue,\n          event: event,\n          callBack: callBack,\n          selector: selector\n        });\n        break;\n      case 'audios':\n        this.observer.notify(CONSTANT.AUDIO, {\n          command: command,\n          value: value,\n          item: exeValue,\n          event: event,\n          callBack: callBack,\n          selector: selector\n        });\n        break;\n      case 'videos':\n        this.observer.notify(CONSTANT.VIDEO, {\n          command: command,\n          value: value,\n          item: exeValue,\n          event: event,\n          callBack: callBack,\n          selector: selector\n        });\n        break;\n      case 'table':\n        switch (value.toString().toLocaleLowerCase()) {\n          case 'createtable':\n            this.observer.notify(CONSTANT.TABLE, {\n              item: exeValue,\n              event: event,\n              callBack: callBack,\n              enterAction: enterAction\n            });\n            break;\n          case 'insertrowbefore':\n          case 'insertrowafter':\n            this.observer.notify(CONSTANT.INSERT_ROW, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'insertcolumnleft':\n          case 'insertcolumnright':\n            this.observer.notify(CONSTANT.INSERT_COLUMN, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'deleterow':\n            this.observer.notify(CONSTANT.DELETEROW, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'deletecolumn':\n            this.observer.notify(CONSTANT.DELETECOLUMN, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'tableremove':\n            this.observer.notify(CONSTANT.REMOVETABLE, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'tableheader':\n            this.observer.notify(CONSTANT.TABLEHEADER, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'aligntop':\n          case 'alignmiddle':\n          case 'alignbottom':\n            this.observer.notify(CONSTANT.TABLE_VERTICAL_ALIGN, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'merge':\n            this.observer.notify(CONSTANT.TABLE_MERGE, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'horizontalsplit':\n            this.observer.notify(CONSTANT.TABLE_HORIZONTAL_SPLIT, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n          case 'verticalsplit':\n            this.observer.notify(CONSTANT.TABLE_VERTICAL_SPLIT, {\n              item: exeValue,\n              event: event,\n              callBack: callBack\n            });\n            break;\n        }\n        break;\n      case 'font':\n      case 'style':\n      case 'effects':\n      case 'casing':\n        this.observer.notify(CONSTANT.SELECTION_TYPE, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          value: text,\n          selector: selector,\n          enterAction: enterAction\n        });\n        break;\n      case 'inserthtml':\n        this.observer.notify(CONSTANT.INSERTHTML_TYPE, {\n          subCommand: value,\n          callBack: callBack,\n          value: text,\n          enterAction: enterAction\n        });\n        break;\n      case 'inserttext':\n        this.observer.notify(CONSTANT.INSERT_TEXT_TYPE, {\n          subCommand: value,\n          callBack: callBack,\n          value: text\n        });\n        break;\n      case 'clear':\n        this.observer.notify(CONSTANT.CLEAR_TYPE, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          selector: selector,\n          enterAction: enterAction\n        });\n        break;\n      case 'actions':\n        this.observer.notify(EVENTS.ACTION, {\n          subCommand: value,\n          event: event,\n          callBack: callBack,\n          selector: selector\n        });\n        break;\n      case 'formatpainter':\n        this.observer.notify(EVENTS.FORMAT_PAINTER_ACTIONS, {\n          item: exeValue,\n          subCommand: value,\n          event: event,\n          callBack: callBack\n        });\n        break;\n      case 'emojipicker':\n        this.observer.notify(EVENTS.EMOJI_PICKER_ACTIONS, {\n          item: exeValue,\n          subCommand: value,\n          value: text,\n          event: event,\n          callBack: callBack\n        });\n    }\n  };\n  EditorManager.prototype.editorMouseDown = function (e) {\n    if (e.args.detail === 3) {\n      this.tripleClickSelection(e.args);\n    }\n  };\n  EditorManager.prototype.tripleClickSelection = function (e) {\n    var range = this.nodeSelection.getRange(this.currentDocument);\n    var selection = this.nodeSelection.get(this.currentDocument);\n    if (selection.rangeCount > 0 && selection.toString() !== '') {\n      var startBlockNode = this.getParentBlockNode(range.startContainer);\n      var endBlockNode = this.getParentBlockNode(range.endContainer);\n      if (startBlockNode && endBlockNode && startBlockNode === endBlockNode) {\n        var newRange = this.currentDocument.createRange();\n        var startTextNode = this.getFirstTextNode(startBlockNode);\n        var endTextNode = this.getLastTextNode(endBlockNode);\n        if (startTextNode && endTextNode) {\n          newRange.setStart(startTextNode, 0);\n          newRange.setEnd(endTextNode, endTextNode.textContent.length);\n          this.nodeSelection.setRange(this.currentDocument, newRange);\n          e.preventDefault();\n        }\n      }\n    }\n  };\n  EditorManager.prototype.getParentBlockNode = function (node) {\n    var treeWalker = this.currentDocument.createTreeWalker(this.editableElement,\n    // root\n    NodeFilter.SHOW_ELEMENT,\n    // whatToShow\n    {\n      acceptNode: function (currentNode) {\n        // Check if the node is a block element\n        var displayStyle = window.getComputedStyle(currentNode).display;\n        if (displayStyle.indexOf('inline') < 0) {\n          return NodeFilter.FILTER_ACCEPT;\n        } else {\n          return NodeFilter.FILTER_SKIP;\n        }\n      }\n    });\n    treeWalker.currentNode = node;\n    var blockParent = treeWalker.parentNode();\n    return blockParent;\n  };\n  EditorManager.prototype.getLastTextNode = function (node) {\n    var treeWalker = this.currentDocument.createTreeWalker(node, NodeFilter.SHOW_TEXT, null);\n    var lastTextNode = null;\n    var currentNode = treeWalker.nextNode();\n    while (currentNode) {\n      lastTextNode = currentNode;\n      currentNode = treeWalker.nextNode();\n    }\n    return lastTextNode;\n  };\n  EditorManager.prototype.getFirstTextNode = function (node) {\n    var treeWalker = this.currentDocument.createTreeWalker(node, NodeFilter.SHOW_TEXT, null);\n    var firstTextNode = treeWalker.nextNode();\n    return firstTextNode;\n  };\n  EditorManager.prototype.destroy = function () {\n    if (this.isDestroyed) {\n      return;\n    }\n    this.unwireEvents();\n    this.observer.notify(EVENTS.INTERNAL_DESTROY);\n    if (this.editableElement) {\n      this.editableElement = null;\n    }\n    this.currentDocument = null;\n    if (this.nodeCutter) {\n      this.nodeCutter = null;\n    }\n    if (this.domNode) {\n      this.domNode = null;\n    }\n    if (this.listObj) {\n      this.listObj = null;\n    }\n    if (this.formatObj) {\n      this.formatObj = null;\n    }\n    if (this.alignmentObj) {\n      this.alignmentObj = null;\n    }\n    if (this.indentsObj) {\n      this.indentsObj = null;\n    }\n    if (this.linkObj) {\n      this.linkObj = null;\n    }\n    if (this.imgObj) {\n      this.imgObj = null;\n    }\n    if (this.audioObj) {\n      this.audioObj = null;\n    }\n    if (this.videoObj) {\n      this.videoObj = null;\n    }\n    if (this.selectionObj) {\n      this.selectionObj = null;\n    }\n    if (this.inserthtmlObj) {\n      this.inserthtmlObj = null;\n    }\n    if (this.insertTextObj) {\n      this.insertTextObj = null;\n    }\n    if (this.clearObj) {\n      this.clearObj = null;\n    }\n    if (this.tableObj) {\n      this.tableObj = null;\n    }\n    if (this.msWordPaste) {\n      this.msWordPaste = null;\n    }\n    if (this.formatPainterEditor) {\n      this.formatPainterEditor = null;\n    }\n    if (this.emojiPickerObj) {\n      this.emojiPickerObj = null;\n    }\n    if (this.tableCellSelection) {\n      this.tableCellSelection = null;\n    }\n    this.isDestroyed = true;\n  };\n  EditorManager.prototype.beforeSlashMenuApplyFormat = function () {\n    var currentRange = this.nodeSelection.getRange(this.currentDocument);\n    var node = this.nodeSelection.getNodeCollection(currentRange)[0];\n    var startPoint = currentRange.startOffset;\n    while (this.nodeSelection.getRange(document).toString().indexOf('/') === -1) {\n      this.nodeSelection.setSelectionText(document, node, node, startPoint, currentRange.endOffset);\n      startPoint--;\n    }\n    var slashRange = this.nodeSelection.getRange(this.currentDocument);\n    var slashNode = this.nodeCutter.GetSpliceNode(slashRange, node);\n    var previouNode = slashNode.previousSibling;\n    if (slashNode.parentElement && slashNode.parentElement.innerHTML.length === 1) {\n      slashNode.parentElement.appendChild(document.createElement('br'));\n    }\n    slashNode.parentNode.removeChild(slashNode);\n    if (previouNode) {\n      this.nodeSelection.setCursorPoint(document, previouNode, previouNode.textContent.length);\n    }\n  };\n  return EditorManager;\n}();\nexport { EditorManager };","map":{"version":3,"names":["Observer","CONSTANT","Lists","NodeSelection","DOMNode","Formats","LinkCommand","Alignments","Indents","ImageCommand","AudioCommand","VideoCommand","TableCommand","SelectionBasedExec","InsertHtmlExec","ClearFormatExec","UndoRedoManager","MsWordPaste","EVENTS","InsertTextExec","NodeCutter","FormatPainterActions","EmojiPickerAction","TableSelection","EditorManager","options","currentDocument","document","editableElement","nodeSelection","nodeCutter","domNode","observer","listObj","formatObj","alignmentObj","indentsObj","linkObj","imgObj","audioObj","videoObj","selectionObj","inserthtmlObj","insertTextObj","clearObj","tableObj","undoRedoManager","msWordPaste","formatPainterEditor","formatPainterSettings","emojiPickerObj","tableCellSelection","wireEvents","isDestroyed","prototype","on","KEY_DOWN","editorKeyDown","KEY_UP","editorKeyUp","MODEL_CHANGED","onPropertyChanged","MS_WORD_CLEANUP","onWordPaste","ON_BEGIN","onBegin","MOUSE_DOWN","editorMouseDown","DESTROY","destroy","unwireEvents","off","e","notify","MS_WORD_CLEANUP_PLUGIN","props","MODEL_CHANGED_PLUGIN","KEY_DOWN_HANDLER","KEY_UP_HANDLER","SPACE_ACTION","execCommand","command","value","event","callBack","text","exeValue","selector","enterAction","toLowerCase","LIST_TYPE","subCommand","item","FORMAT_TYPE","ALIGNMENT_TYPE","INDENT_TYPE","LINK","IMAGE","AUDIO","VIDEO","toString","toLocaleLowerCase","TABLE","INSERT_ROW","INSERT_COLUMN","DELETEROW","DELETECOLUMN","REMOVETABLE","TABLEHEADER","TABLE_VERTICAL_ALIGN","TABLE_MERGE","TABLE_HORIZONTAL_SPLIT","TABLE_VERTICAL_SPLIT","SELECTION_TYPE","INSERTHTML_TYPE","INSERT_TEXT_TYPE","CLEAR_TYPE","ACTION","FORMAT_PAINTER_ACTIONS","EMOJI_PICKER_ACTIONS","args","detail","tripleClickSelection","range","getRange","selection","get","rangeCount","startBlockNode","getParentBlockNode","startContainer","endBlockNode","endContainer","newRange","createRange","startTextNode","getFirstTextNode","endTextNode","getLastTextNode","setStart","setEnd","textContent","length","setRange","preventDefault","node","treeWalker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","currentNode","displayStyle","window","getComputedStyle","display","indexOf","FILTER_ACCEPT","FILTER_SKIP","blockParent","parentNode","SHOW_TEXT","lastTextNode","nextNode","firstTextNode","INTERNAL_DESTROY","beforeSlashMenuApplyFormat","currentRange","getNodeCollection","startPoint","startOffset","setSelectionText","endOffset","slashRange","slashNode","GetSpliceNode","previouNode","previousSibling","parentElement","innerHTML","appendChild","createElement","removeChild","setCursorPoint"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/base/editor-manager.js"],"sourcesContent":["import { Observer } from '@syncfusion/ej2-base';\nimport * as CONSTANT from './constant';\nimport { Lists } from './../plugin/lists';\nimport { NodeSelection } from './../../selection/index';\nimport { DOMNode } from './../plugin/dom-node';\nimport { Formats } from './../plugin/formats';\nimport { LinkCommand } from './../plugin/link';\nimport { Alignments } from './../plugin/alignments';\nimport { Indents } from './../plugin/indents';\nimport { ImageCommand } from './../plugin/image';\nimport { AudioCommand } from './../plugin/audio';\nimport { VideoCommand } from './../plugin/video';\nimport { TableCommand } from './../plugin/table';\nimport { SelectionBasedExec } from './../plugin/selection-exec';\nimport { InsertHtmlExec } from './../plugin/inserthtml-exec';\nimport { ClearFormatExec } from './../plugin/clearformat-exec';\nimport { UndoRedoManager } from './../plugin/undo';\nimport { MsWordPaste } from '../plugin/ms-word-clean-up';\nimport * as EVENTS from './../../common/constant';\nimport { InsertTextExec } from '../plugin/insert-text';\nimport { NodeCutter } from '../plugin/nodecutter';\nimport { FormatPainterActions } from '../plugin/format-painter-actions';\nimport { EmojiPickerAction } from '../plugin/emoji-picker-action';\nimport { TableSelection } from '../plugin/table-selection';\n/**\n * EditorManager internal component\n *\n * @hidden\n\n */\nvar EditorManager = /** @class */ (function () {\n    /**\n     * Constructor for creating the component\n     *\n     * @hidden\n\n     * @param {ICommandModel} options - specifies the command Model\n     */\n    function EditorManager(options) {\n        this.currentDocument = options.document;\n        this.editableElement = options.editableElement;\n        this.nodeSelection = new NodeSelection(this.editableElement);\n        this.nodeCutter = new NodeCutter();\n        this.domNode = new DOMNode(this.editableElement, this.currentDocument);\n        this.observer = new Observer(this);\n        this.listObj = new Lists(this);\n        this.formatObj = new Formats(this);\n        this.alignmentObj = new Alignments(this);\n        this.indentsObj = new Indents(this);\n        this.linkObj = new LinkCommand(this);\n        this.imgObj = new ImageCommand(this);\n        this.audioObj = new AudioCommand(this);\n        this.videoObj = new VideoCommand(this);\n        this.selectionObj = new SelectionBasedExec(this);\n        this.inserthtmlObj = new InsertHtmlExec(this);\n        this.insertTextObj = new InsertTextExec(this);\n        this.clearObj = new ClearFormatExec(this);\n        this.tableObj = new TableCommand(this);\n        this.undoRedoManager = new UndoRedoManager(this, options.options);\n        this.msWordPaste = new MsWordPaste(this);\n        this.formatPainterEditor = new FormatPainterActions(this, options.formatPainterSettings);\n        this.emojiPickerObj = new EmojiPickerAction(this);\n        this.tableCellSelection = new TableSelection(this.editableElement, this.currentDocument);\n        this.wireEvents();\n        this.isDestroyed = false;\n    }\n    EditorManager.prototype.wireEvents = function () {\n        this.observer.on(EVENTS.KEY_DOWN, this.editorKeyDown, this);\n        this.observer.on(EVENTS.KEY_UP, this.editorKeyUp, this);\n        this.observer.on(EVENTS.KEY_UP, this.editorKeyUp, this);\n        this.observer.on(EVENTS.MODEL_CHANGED, this.onPropertyChanged, this);\n        this.observer.on(EVENTS.MS_WORD_CLEANUP, this.onWordPaste, this);\n        this.observer.on(EVENTS.ON_BEGIN, this.onBegin, this);\n        this.observer.on(EVENTS.MOUSE_DOWN, this.editorMouseDown, this);\n        this.observer.on(EVENTS.DESTROY, this.destroy, this);\n    };\n    EditorManager.prototype.unwireEvents = function () {\n        this.observer.off(EVENTS.KEY_DOWN, this.editorKeyDown);\n        this.observer.off(EVENTS.KEY_UP, this.editorKeyUp);\n        this.observer.off(EVENTS.KEY_UP, this.editorKeyUp);\n        this.observer.off(EVENTS.MODEL_CHANGED, this.onPropertyChanged);\n        this.observer.off(EVENTS.MS_WORD_CLEANUP, this.onWordPaste);\n        this.observer.off(EVENTS.ON_BEGIN, this.onBegin);\n        this.observer.off(EVENTS.MOUSE_DOWN, this.editorMouseDown);\n        this.observer.off(EVENTS.DESTROY, this.destroy);\n    };\n    EditorManager.prototype.onWordPaste = function (e) {\n        this.observer.notify(EVENTS.MS_WORD_CLEANUP_PLUGIN, e);\n    };\n    EditorManager.prototype.onPropertyChanged = function (props) {\n        this.observer.notify(EVENTS.MODEL_CHANGED_PLUGIN, props);\n    };\n    EditorManager.prototype.editorKeyDown = function (e) {\n        this.observer.notify(EVENTS.KEY_DOWN_HANDLER, e);\n    };\n    EditorManager.prototype.editorKeyUp = function (e) {\n        this.observer.notify(EVENTS.KEY_UP_HANDLER, e);\n    };\n    EditorManager.prototype.onBegin = function (e) {\n        this.observer.notify(EVENTS.SPACE_ACTION, e);\n    };\n    /* eslint-disable */\n    /**\n     * execCommand\n     *\n     * @param {ExecCommand} command - specifies the execution command\n     * @param {T} value - specifes the value.\n     * @param {Event} event - specifies the call back event\n     * @param {Function} callBack - specifies the function\n     * @param {string} text - specifies the string value\n     * @param {T} exeValue - specifies the values to be executed\n     * @param {string} selector - specifies the selector values\n     * @returns {void}\n     * @hidden\n\n     */\n    /* eslint-enable */\n    EditorManager.prototype.execCommand = function (command, value, event, callBack, text, exeValue, selector, enterAction) {\n        switch (command.toLowerCase()) {\n            case 'lists':\n                this.observer.notify(EVENTS.LIST_TYPE, { subCommand: value, event: event, callBack: callBack,\n                    selector: selector, item: exeValue, enterAction: enterAction });\n                break;\n            case 'formats':\n                this.observer.notify(EVENTS.FORMAT_TYPE, { subCommand: value, event: event, callBack: callBack,\n                    selector: selector, exeValue: exeValue, enterAction: enterAction\n                });\n                break;\n            case 'alignments':\n                this.observer.notify(CONSTANT.ALIGNMENT_TYPE, {\n                    subCommand: value, event: event, callBack: callBack,\n                    selector: selector, value: exeValue, enterAction: enterAction\n                });\n                break;\n            case 'indents':\n                this.observer.notify(CONSTANT.INDENT_TYPE, {\n                    subCommand: value, event: event, callBack: callBack,\n                    selector: selector, enterAction: enterAction\n                });\n                break;\n            case 'links':\n                this.observer.notify(CONSTANT.LINK, { command: command, value: value, item: exeValue, event: event, callBack: callBack });\n                break;\n            case 'files':\n                this.observer.notify(CONSTANT.IMAGE, {\n                    command: command, value: 'Image', item: exeValue, event: event, callBack: callBack, selector: selector\n                });\n                break;\n            case 'images':\n                this.observer.notify(CONSTANT.IMAGE, {\n                    command: command, value: value, item: exeValue, event: event, callBack: callBack, selector: selector\n                });\n                break;\n            case 'audios':\n                this.observer.notify(CONSTANT.AUDIO, {\n                    command: command, value: value, item: exeValue, event: event, callBack: callBack, selector: selector\n                });\n                break;\n            case 'videos':\n                this.observer.notify(CONSTANT.VIDEO, {\n                    command: command, value: value, item: exeValue, event: event, callBack: callBack, selector: selector\n                });\n                break;\n            case 'table':\n                switch (value.toString().toLocaleLowerCase()) {\n                    case 'createtable':\n                        this.observer.notify(CONSTANT.TABLE, { item: exeValue, event: event, callBack: callBack, enterAction: enterAction });\n                        break;\n                    case 'insertrowbefore':\n                    case 'insertrowafter':\n                        this.observer.notify(CONSTANT.INSERT_ROW, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'insertcolumnleft':\n                    case 'insertcolumnright':\n                        this.observer.notify(CONSTANT.INSERT_COLUMN, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'deleterow':\n                        this.observer.notify(CONSTANT.DELETEROW, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'deletecolumn':\n                        this.observer.notify(CONSTANT.DELETECOLUMN, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'tableremove':\n                        this.observer.notify(CONSTANT.REMOVETABLE, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'tableheader':\n                        this.observer.notify(CONSTANT.TABLEHEADER, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'aligntop':\n                    case 'alignmiddle':\n                    case 'alignbottom':\n                        this.observer.notify(CONSTANT.TABLE_VERTICAL_ALIGN, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'merge':\n                        this.observer.notify(CONSTANT.TABLE_MERGE, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'horizontalsplit':\n                        this.observer.notify(CONSTANT.TABLE_HORIZONTAL_SPLIT, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                    case 'verticalsplit':\n                        this.observer.notify(CONSTANT.TABLE_VERTICAL_SPLIT, { item: exeValue, event: event, callBack: callBack });\n                        break;\n                }\n                break;\n            case 'font':\n            case 'style':\n            case 'effects':\n            case 'casing':\n                this.observer.notify(CONSTANT.SELECTION_TYPE, { subCommand: value, event: event, callBack: callBack, value: text, selector: selector, enterAction: enterAction });\n                break;\n            case 'inserthtml':\n                this.observer.notify(CONSTANT.INSERTHTML_TYPE, { subCommand: value, callBack: callBack, value: text, enterAction: enterAction });\n                break;\n            case 'inserttext':\n                this.observer.notify(CONSTANT.INSERT_TEXT_TYPE, { subCommand: value, callBack: callBack, value: text });\n                break;\n            case 'clear':\n                this.observer.notify(CONSTANT.CLEAR_TYPE, { subCommand: value, event: event, callBack: callBack, selector: selector, enterAction: enterAction });\n                break;\n            case 'actions':\n                this.observer.notify(EVENTS.ACTION, { subCommand: value, event: event, callBack: callBack, selector: selector });\n                break;\n            case 'formatpainter':\n                this.observer.notify(EVENTS.FORMAT_PAINTER_ACTIONS, { item: exeValue, subCommand: value, event: event, callBack: callBack });\n                break;\n            case 'emojipicker':\n                this.observer.notify(EVENTS.EMOJI_PICKER_ACTIONS, { item: exeValue, subCommand: value, value: text,\n                    event: event, callBack: callBack });\n        }\n    };\n    EditorManager.prototype.editorMouseDown = function (e) {\n        if (e.args.detail === 3) {\n            this.tripleClickSelection(e.args);\n        }\n    };\n    EditorManager.prototype.tripleClickSelection = function (e) {\n        var range = this.nodeSelection.getRange(this.currentDocument);\n        var selection = this.nodeSelection.get(this.currentDocument);\n        if (selection.rangeCount > 0 && selection.toString() !== '') {\n            var startBlockNode = this.getParentBlockNode(range.startContainer);\n            var endBlockNode = this.getParentBlockNode(range.endContainer);\n            if (startBlockNode && endBlockNode && startBlockNode === endBlockNode) {\n                var newRange = this.currentDocument.createRange();\n                var startTextNode = this.getFirstTextNode(startBlockNode);\n                var endTextNode = this.getLastTextNode(endBlockNode);\n                if (startTextNode && endTextNode) {\n                    newRange.setStart(startTextNode, 0);\n                    newRange.setEnd(endTextNode, endTextNode.textContent.length);\n                    this.nodeSelection.setRange(this.currentDocument, newRange);\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    EditorManager.prototype.getParentBlockNode = function (node) {\n        var treeWalker = this.currentDocument.createTreeWalker(this.editableElement, // root\n        NodeFilter.SHOW_ELEMENT, // whatToShow\n        {\n            acceptNode: function (currentNode) {\n                // Check if the node is a block element\n                var displayStyle = window.getComputedStyle(currentNode).display;\n                if (displayStyle.indexOf('inline') < 0) {\n                    return NodeFilter.FILTER_ACCEPT;\n                }\n                else {\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        });\n        treeWalker.currentNode = node;\n        var blockParent = treeWalker.parentNode();\n        return blockParent;\n    };\n    EditorManager.prototype.getLastTextNode = function (node) {\n        var treeWalker = this.currentDocument.createTreeWalker(node, NodeFilter.SHOW_TEXT, null);\n        var lastTextNode = null;\n        var currentNode = treeWalker.nextNode();\n        while (currentNode) {\n            lastTextNode = currentNode;\n            currentNode = treeWalker.nextNode();\n        }\n        return lastTextNode;\n    };\n    EditorManager.prototype.getFirstTextNode = function (node) {\n        var treeWalker = this.currentDocument.createTreeWalker(node, NodeFilter.SHOW_TEXT, null);\n        var firstTextNode = treeWalker.nextNode();\n        return firstTextNode;\n    };\n    EditorManager.prototype.destroy = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.unwireEvents();\n        this.observer.notify(EVENTS.INTERNAL_DESTROY);\n        if (this.editableElement) {\n            this.editableElement = null;\n        }\n        this.currentDocument = null;\n        if (this.nodeCutter) {\n            this.nodeCutter = null;\n        }\n        if (this.domNode) {\n            this.domNode = null;\n        }\n        if (this.listObj) {\n            this.listObj = null;\n        }\n        if (this.formatObj) {\n            this.formatObj = null;\n        }\n        if (this.alignmentObj) {\n            this.alignmentObj = null;\n        }\n        if (this.indentsObj) {\n            this.indentsObj = null;\n        }\n        if (this.linkObj) {\n            this.linkObj = null;\n        }\n        if (this.imgObj) {\n            this.imgObj = null;\n        }\n        if (this.audioObj) {\n            this.audioObj = null;\n        }\n        if (this.videoObj) {\n            this.videoObj = null;\n        }\n        if (this.selectionObj) {\n            this.selectionObj = null;\n        }\n        if (this.inserthtmlObj) {\n            this.inserthtmlObj = null;\n        }\n        if (this.insertTextObj) {\n            this.insertTextObj = null;\n        }\n        if (this.clearObj) {\n            this.clearObj = null;\n        }\n        if (this.tableObj) {\n            this.tableObj = null;\n        }\n        if (this.msWordPaste) {\n            this.msWordPaste = null;\n        }\n        if (this.formatPainterEditor) {\n            this.formatPainterEditor = null;\n        }\n        if (this.emojiPickerObj) {\n            this.emojiPickerObj = null;\n        }\n        if (this.tableCellSelection) {\n            this.tableCellSelection = null;\n        }\n        this.isDestroyed = true;\n    };\n    EditorManager.prototype.beforeSlashMenuApplyFormat = function () {\n        var currentRange = this.nodeSelection.getRange(this.currentDocument);\n        var node = this.nodeSelection.getNodeCollection(currentRange)[0];\n        var startPoint = currentRange.startOffset;\n        while (this.nodeSelection.getRange(document).toString().indexOf('/') === -1) {\n            this.nodeSelection.setSelectionText(document, node, node, startPoint, currentRange.endOffset);\n            startPoint--;\n        }\n        var slashRange = this.nodeSelection.getRange(this.currentDocument);\n        var slashNode = this.nodeCutter.GetSpliceNode(slashRange, node);\n        var previouNode = slashNode.previousSibling;\n        if (slashNode.parentElement && slashNode.parentElement.innerHTML.length === 1) {\n            slashNode.parentElement.appendChild(document.createElement('br'));\n        }\n        slashNode.parentNode.removeChild(slashNode);\n        if (previouNode) {\n            this.nodeSelection.setCursorPoint(document, previouNode, previouNode.textContent.length);\n        }\n    };\n    return EditorManager;\n}());\nexport { EditorManager };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}