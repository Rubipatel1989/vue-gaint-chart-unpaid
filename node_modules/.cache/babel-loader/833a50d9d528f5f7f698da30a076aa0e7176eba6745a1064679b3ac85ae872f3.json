{"ast":null,"code":"// import { Gantt } from '@bryntum/gantt';\n\nexport default {\n  name: 'GanttChart',\n  mounted() {\n    if (this.$refs.ganttContainer) {\n      const gantt = new Gantt({\n        appendTo: this.$refs.ganttContainer,\n        features: {\n          taskDrag: true,\n          taskResize: true,\n          dependencies: true,\n          taskEdit: true,\n          labels: {\n            left: 'name',\n            right: 'duration'\n          }\n        },\n        columns: [{\n          type: 'name',\n          field: 'name',\n          text: 'Task Name',\n          width: 150\n        }, {\n          type: 'startdate',\n          text: 'Start Date'\n        }, {\n          type: 'enddate',\n          text: 'End Date'\n        }, {\n          type: 'duration',\n          text: 'Duration'\n        }],\n        tasks: [{\n          id: 1,\n          name: 'Requirement',\n          startDate: '2024-12-01',\n          duration: 4\n        }, {\n          id: 2,\n          name: 'Planning',\n          startDate: '2024-12-05',\n          duration: 4\n        }, {\n          id: 3,\n          name: 'Structure',\n          startDate: '2024-12-09',\n          duration: 5\n        }, {\n          id: 4,\n          name: 'Tables',\n          startDate: '2024-12-14',\n          duration: 4\n        }, {\n          id: 5,\n          name: 'Development',\n          startDate: '2024-12-18',\n          duration: 4\n        }, {\n          id: 6,\n          name: 'Testing',\n          startDate: '2024-12-22',\n          duration: 3\n        }, {\n          id: 7,\n          name: 'Staging',\n          startDate: '2024-12-25',\n          duration: 2\n        }, {\n          id: 8,\n          name: 'Execution',\n          startDate: '2024-12-27',\n          duration: 2\n        }, {\n          id: 9,\n          name: 'Production',\n          startDate: '2024-12-29',\n          duration: 2\n        }],\n        dependencies: [{\n          fromEvent: 1,\n          toEvent: 2\n        }, {\n          fromEvent: 2,\n          toEvent: 3\n        }, {\n          fromEvent: 3,\n          toEvent: 4\n        }, {\n          fromEvent: 4,\n          toEvent: 5\n        }, {\n          fromEvent: 5,\n          toEvent: 6\n        }, {\n          fromEvent: 6,\n          toEvent: 7\n        }, {\n          fromEvent: 7,\n          toEvent: 8\n        }, {\n          fromEvent: 8,\n          toEvent: 9\n        }],\n        startDate: '2024-12-01',\n        endDate: '2024-12-31'\n      });\n      gantt.on('taskDrag', ({\n        taskRecords,\n        newStartDate,\n        newEndDate\n      }) => {\n        console.log('Full event payload:', {\n          taskRecords,\n          newStartDate,\n          newEndDate\n        });\n        if (!taskRecords || taskRecords.length === 0) {\n          console.error('taskRecords is undefined or empty!');\n          return;\n        }\n\n        // Access the first task record (if only one task is dragged)\n        const taskRecord = taskRecords[0];\n        if (taskRecord) {\n          console.log(`Task \"${taskRecord.name}\" dragged to: ${newStartDate} - ${newEndDate}`);\n          console.log('Task details:', {\n            id: taskRecord.id,\n            name: taskRecord.name,\n            originalStartDate: taskRecord.startDate,\n            newStartDate,\n            newEndDate\n          });\n        } else {\n          console.error('Unable to extract task details!');\n        }\n      });\n    } else {\n      console.error('Gantt container not found!');\n    }\n  }\n};","map":{"version":3,"names":["name","mounted","$refs","ganttContainer","gantt","Gantt","appendTo","features","taskDrag","taskResize","dependencies","taskEdit","labels","left","right","columns","type","field","text","width","tasks","id","startDate","duration","fromEvent","toEvent","endDate","on","taskRecords","newStartDate","newEndDate","console","log","length","error","taskRecord","originalStartDate"],"sources":["/var/www/vue/vue-gantt-chart/src/components/GanttChart.vue"],"sourcesContent":["<template>\n       <div ref=\"ganttContainer\" id=\"gantt\"></div>\n</template>\n\n<script>\n// import { Gantt } from '@bryntum/gantt';\n\nexport default {\n       name: 'GanttChart',\n       mounted() {\n              if (this.$refs.ganttContainer) {\n                     const gantt = new Gantt({\n                            appendTo: this.$refs.ganttContainer,\n                            features: {\n                                   taskDrag: true,\n                                   taskResize: true,\n                                   dependencies: true,\n                                   taskEdit: true,\n                                   labels: { left: 'name', right: 'duration' },\n                            },\n                            columns: [\n                                   { type: 'name', field: 'name', text: 'Task Name', width: 150 },\n                                   { type: 'startdate', text: 'Start Date' },\n                                   { type: 'enddate', text: 'End Date' },\n                                   { type: 'duration', text: 'Duration' },\n                            ],\n                            tasks: [\n                                   { id: 1, name: 'Requirement', startDate: '2024-12-01', duration: 4 },\n                                   { id: 2, name: 'Planning', startDate: '2024-12-05', duration: 4 },\n                                   { id: 3, name: 'Structure', startDate: '2024-12-09', duration: 5 },\n                                   { id: 4, name: 'Tables', startDate: '2024-12-14', duration: 4 },\n                                   { id: 5, name: 'Development', startDate: '2024-12-18', duration: 4 },\n                                   { id: 6, name: 'Testing', startDate: '2024-12-22', duration: 3 },\n                                   { id: 7, name: 'Staging', startDate: '2024-12-25', duration: 2 },\n                                   { id: 8, name: 'Execution', startDate: '2024-12-27', duration: 2 },\n                                   { id: 9, name: 'Production', startDate: '2024-12-29', duration: 2 },\n                            ],\n\n                            dependencies: [\n                                   { fromEvent: 1, toEvent: 2 },\n                                   { fromEvent: 2, toEvent: 3 },\n                                   { fromEvent: 3, toEvent: 4 },\n                                   { fromEvent: 4, toEvent: 5 },\n                                   { fromEvent: 5, toEvent: 6 },\n                                   { fromEvent: 6, toEvent: 7 },\n                                   { fromEvent: 7, toEvent: 8 },\n                                   { fromEvent: 8, toEvent: 9 },\n                            ],\n                            startDate: '2024-12-01',\n                            endDate: '2024-12-31',\n                     });\n                     gantt.on('taskDrag', ({ taskRecords, newStartDate, newEndDate }) => {\n                            console.log('Full event payload:', { taskRecords, newStartDate, newEndDate });\n\n                            if (!taskRecords || taskRecords.length === 0) {\n                                   console.error('taskRecords is undefined or empty!');\n                                   return;\n                            }\n\n                            // Access the first task record (if only one task is dragged)\n                            const taskRecord = taskRecords[0];\n                            if (taskRecord) {\n                                   console.log(`Task \"${taskRecord.name}\" dragged to: ${newStartDate} - ${newEndDate}`);\n                                   console.log('Task details:', {\n                                          id: taskRecord.id,\n                                          name: taskRecord.name,\n                                          originalStartDate: taskRecord.startDate,\n                                          newStartDate,\n                                          newEndDate,\n                                   });\n                            } else {\n                                   console.error('Unable to extract task details!');\n                            }\n                     });\n\n              } else {\n                     console.error('Gantt container not found!');\n              }\n       },\n};\n</script>\n\n<style>\n#gantt {\n       height: 700px;\n       overflow-y: auto;\n       /* Enables vertical scrolling if content exceeds height */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}