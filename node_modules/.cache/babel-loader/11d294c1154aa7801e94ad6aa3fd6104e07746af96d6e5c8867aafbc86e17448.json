{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport * as events from '../base/constant';\nimport { Workbook } from '@syncfusion/ej2-excel-export';\nimport { isNullOrUndefined, getEnumValue, compile, getValue, detach, extend } from '@syncfusion/ej2-base';\nimport { Data } from '../actions/data';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { CellType } from '../base/enum';\nimport { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getPrintGridModel, getUid, isExportColumns, updateColumnTypeForExportColumns, prepareColumns, measureColumnDepth } from '../base/util';\nimport { defaultCurrencyCode } from '@syncfusion/ej2-base';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */function () {\n  /**\n   * Constructor for the Grid Excel Export module.\n   *\n   * @param {IGrid} parent - specifies the IGrid\n   * @param {ServiceLocator} locator - specifies the ServiceLocator\n   * @hidden\n   */\n  function ExcelExport(parent, locator) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this.book = {};\n    this.workSheet = [];\n    this.rows = [];\n    this.columns = [];\n    this.styles = [];\n    this.rowLength = 1;\n    this.expType = 'AppendToSheet';\n    this.includeHiddenColumn = false;\n    this.isCsvExport = false;\n    this.isChild = false;\n    this.isElementIdChanged = false;\n    this.gridPool = {};\n    this.sheet = {};\n    this.grpFooterTemplates = [];\n    this.footerTemplates = [];\n    this.aggIndex = 0;\n    this.totalAggregates = 0;\n    this.parent = parent;\n    this.helper = new ExportHelper(parent);\n    this.locator = locator;\n    this.l10n = this.locator.getService('localization');\n  }\n  /**\n   * For internal use only - Get the module name.\n   *\n   * @returns {string} returns the module name\n   */\n  ExcelExport.prototype.getModuleName = function () {\n    return 'ExcelExport';\n  };\n  ExcelExport.prototype.init = function (gObj) {\n    if (gObj.element !== null && gObj.element.id === '') {\n      gObj.element.id = new Date().toISOString();\n      this.isElementIdChanged = true;\n    }\n    this.parent = gObj;\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.isExporting = undefined;\n    this.book = {};\n    this.workSheet = [];\n    this.rows = [];\n    this.columns = [];\n    this.styles = [];\n    this.rowLength = 1;\n    this.footer = undefined;\n    this.expType = 'AppendToSheet';\n    this.includeHiddenColumn = false;\n    this.exportValueFormatter = new ExportValueFormatter(gObj.locale);\n    gObj.id = getUid('main-grid');\n    this.gridPool[gObj.id] = false;\n  };\n  /**\n   * Export Grid to Excel file.\n   *\n   * @param {IGrid} grid - Defines the grid.\n   * @param  {exportProperties} exportProperties - Defines the export properties of the Grid.\n   * @param  {isMultipleExport} isMultipleExport - Defines is multiple Grid's are exported.\n   * @param  {Workbook} workbook - Defined the Workbook if multiple Grid is exported.\n   * @param  {boolean} isCsv - true if export to CSV.\n   * @param {boolean} isBlob - true if isBlob is enabled.\n   * @returns {Promise<any>} - Returns the map for export.\n   */\n  // eslint-disable-next-line\n  ExcelExport.prototype.Map = function (grid, exportProperties, isMultipleExport, workbook, isCsv, isBlob) {\n    var gObj = grid;\n    var cancel = 'cancel';\n    var isBlb = 'isBlob';\n    var Child = 'isChild';\n    var csv = 'isCsv';\n    var workbk = 'workbook';\n    var isMultiEx = 'isMultipleExport';\n    this.gridPool = {};\n    if ((grid.childGrid || grid.detailTemplate) && !(!isNullOrUndefined(exportProperties) && exportProperties.hierarchyExportMode === 'None')) {\n      grid.expandedRows = getPrintGridModel(grid).expandedRows;\n    }\n    var args = {\n      requestType: 'beforeExcelExport',\n      gridObject: gObj,\n      cancel: false,\n      isMultipleExport: isMultipleExport,\n      workbook: workbook,\n      isCsv: isCsv,\n      isBlob: isBlob,\n      isChild: this.isChild,\n      grpFooterTemplates: this.grpFooterTemplates\n    };\n    gObj.trigger(events.beforeExcelExport, args);\n    if (args[\"\" + cancel]) {\n      return new Promise(function (resolve) {\n        return resolve();\n      });\n    }\n    this.parent.log('exporting_begin', this.getModuleName());\n    this.data = new Data(gObj);\n    this.isExporting = true;\n    this.isBlob = args[\"\" + isBlb];\n    this.isChild = args[\"\" + Child];\n    this.grpFooterTemplates = args['grpFooterTemplates'];\n    if (args[\"\" + csv]) {\n      this.isCsvExport = args[\"\" + csv];\n    } else {\n      this.isCsvExport = false;\n    }\n    if (isExportColumns(exportProperties)) {\n      updateColumnTypeForExportColumns(exportProperties, gObj);\n    }\n    return this.processRecords(gObj, exportProperties, args[\"\" + isMultiEx], args[\"\" + workbk]);\n  };\n  ExcelExport.prototype.exportingSuccess = function (resolve) {\n    this.isExporting = false;\n    this.parent.trigger(events.excelExportComplete, this.isBlob ? {\n      promise: this.blobPromise\n    } : {\n      gridInstance: this.parent\n    });\n    this.parent.log('exporting_complete', this.getModuleName());\n    resolve(this.book);\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ExcelExport.prototype.processRecords = function (gObj, exportProperties, isMultipleExport, workbook) {\n    var _this = this;\n    if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.dataSource)) {\n      exportProperties.dataSource = exportProperties.dataSource instanceof DataManager ? exportProperties.dataSource : new DataManager(exportProperties.dataSource);\n      var query_1 = exportProperties.query ? exportProperties.query : new Query();\n      if (isNullOrUndefined(query_1.isCountRequired) || gObj.aggregates) {\n        query_1.isCountRequired = true;\n      }\n      return new Promise(function (resolve) {\n        var dataManager = exportProperties.dataSource.executeQuery(query_1);\n        dataManager.then(function (r) {\n          _this.init(gObj);\n          _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, r).then(function () {\n            _this.exportingSuccess(resolve);\n          });\n        });\n      });\n    } else if (!isNullOrUndefined(exportProperties) && exportProperties.exportType === 'CurrentPage' && !(this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length && !this.parent.getDataModule().isRemote())) {\n      return new Promise(function (resolve) {\n        _this.init(gObj);\n        _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, _this.parent.getCurrentViewRecords());\n        _this.exportingSuccess(resolve);\n      });\n    } else {\n      var allPromise_1 = [];\n      var query = ExportHelper.getQuery(gObj, this.data);\n      if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length && !this.parent.getDataModule().isRemote()) {\n        if (isNullOrUndefined(exportProperties)) {\n          exportProperties = {\n            hierarchyExportMode: 'All'\n          };\n        }\n        exportProperties.hierarchyExportMode = exportProperties.hierarchyExportMode === 'None' ? 'None' : 'All';\n        if (exportProperties.hierarchyExportMode === 'All') {\n          query.lazyLoad = [];\n        }\n      }\n      allPromise_1.push(this.data.getData({}, query));\n      allPromise_1.push(this.helper.getColumnData(gObj));\n      return new Promise(function (resolve, reject) {\n        Promise.all(allPromise_1).then(function (e) {\n          _this.init(gObj);\n          _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, e[0]).then(function () {\n            _this.exportingSuccess(resolve);\n          });\n        }).catch(function (e) {\n          reject(_this.book);\n          _this.parent.trigger(events.actionFailure, e);\n        });\n      });\n    }\n  };\n  ExcelExport.prototype.processInnerRecords = function (gObj, exportProperties,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  isMultipleExport, workbook, r) {\n    var _this = this;\n    this.groupedColLength = gObj.groupSettings.columns.length;\n    var blankRows = 5;\n    var separator;\n    var rows = [];\n    var colDepth = measureColumnDepth(gObj.columns);\n    var isExportPropertiesPresent = !isNullOrUndefined(exportProperties);\n    if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.multipleExport)) {\n      this.expType = !isNullOrUndefined(exportProperties.multipleExport.type) ? exportProperties.multipleExport.type : 'AppendToSheet';\n      if (!isNullOrUndefined(exportProperties.multipleExport.blankRows)) {\n        blankRows = exportProperties.multipleExport.blankRows;\n      }\n    }\n    if (isNullOrUndefined(workbook)) {\n      this.workSheet = [];\n      this.rows = [];\n      this.columns = [];\n      this.styles = [];\n      this.sheet.images = [];\n    } else if (this.expType === 'NewSheet') {\n      this.workSheet = workbook.worksheets;\n      this.rows = [];\n      this.columns = [];\n      this.sheet.images = [];\n      this.styles = workbook.styles;\n    } else {\n      this.workSheet = [];\n      this.rows = workbook.worksheets[0].rows;\n      this.columns = workbook.worksheets[0].columns;\n      this.styles = workbook.styles;\n      this.sheet.images = workbook.worksheets[0].images;\n      this.rowLength = this.rows[this.rows.length - 1].index + blankRows;\n      this.rowLength++;\n    }\n    if (isExportPropertiesPresent) {\n      if (!isNullOrUndefined(isMultipleExport)) {\n        if (!isNullOrUndefined(exportProperties.header) && (isMultipleExport || this.expType === 'NewSheet')) {\n          this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n        }\n        if (!isNullOrUndefined(exportProperties.footer)) {\n          if (this.expType === 'AppendToSheet') {\n            if (!isMultipleExport) {\n              this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n            }\n          } else {\n            this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n          }\n        }\n      } else {\n        if (!isNullOrUndefined(exportProperties.header)) {\n          this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n        }\n        if (!isNullOrUndefined(exportProperties.footer)) {\n          this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n        }\n      }\n    }\n    this.includeHiddenColumn = isExportPropertiesPresent ? exportProperties.includeHiddenColumn : false;\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Promise(function (resolve, reject) {\n      gObj.childGridLevel = 0;\n      rows = _this.processGridExport(gObj, exportProperties, r);\n      _this.globalResolve = resolve;\n      _this.gridPool[gObj.id] = true;\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n    }).then(function () {\n      var organisedRows = [];\n      _this.organiseRows(rows, rows[0].index, organisedRows);\n      _this.rows = _this.rows.concat(organisedRows);\n      //footer template add\n      if (!isNullOrUndefined(_this.footer)) {\n        if (_this.expType === 'AppendToSheet' && !isMultipleExport || _this.expType === 'NewSheet') {\n          _this.processExcelFooter(_this.footer);\n        }\n      }\n      if (_this.columns.length > 0) {\n        _this.sheet.columns = _this.columns;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      _this.sheet.rows = _this.rows;\n      _this.sheet.enableRtl = _this.parent.enableRtl;\n      if (_this.parent.allowFiltering && gObj.getVisibleColumns().length && isExportPropertiesPresent && exportProperties.enableFilter) {\n        var headerRowLen = exportProperties.header ? exportProperties.header.headerRows || exportProperties.header.rows.length : 0;\n        var autoFilters = {\n          row: colDepth + headerRowLen,\n          column: _this.groupedColLength ? _this.groupedColLength + 1 : _this.sheet.columns[0].index,\n          lastRow: _this.sheet.rows.length,\n          lastColumn: _this.sheet.columns.length\n        };\n        _this.sheet.autoFilters = autoFilters;\n      }\n      _this.workSheet.push(_this.sheet);\n      _this.book.worksheets = _this.workSheet;\n      _this.book.styles = _this.styles;\n      gObj.notify('finalPageSetup', _this.book);\n      if (!isMultipleExport) {\n        if (_this.isCsvExport) {\n          if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.separator) && exportProperties.separator !== ',') {\n            separator = exportProperties.separator;\n          }\n          var book = new Workbook(_this.book, 'csv', gObj.locale, defaultCurrencyCode, separator);\n          if (!_this.isBlob) {\n            if (isExportPropertiesPresent && exportProperties.fileName) {\n              book.save(exportProperties.fileName);\n            } else {\n              book.save('Export.csv');\n            }\n          } else {\n            _this.blobPromise = book.saveAsBlob('text/csv');\n          }\n        } else {\n          var book = new Workbook(_this.book, 'xlsx', gObj.locale, defaultCurrencyCode);\n          if (!_this.isBlob) {\n            if (isExportPropertiesPresent && exportProperties.fileName) {\n              book.save(exportProperties.fileName);\n            } else {\n              book.save('Export.xlsx');\n            }\n          } else {\n            _this.blobPromise = book.saveAsBlob('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n          }\n        }\n        if (_this.isElementIdChanged) {\n          gObj.element.id = '';\n        }\n        delete gObj.expandedRows;\n      }\n      return workbook;\n    });\n  };\n  ExcelExport.prototype.organiseRows = function (rows, initialIndex, organisedRows) {\n    if (!rows.length) {\n      return initialIndex;\n    }\n    for (var i = 0; i < rows.length; i++) {\n      var row = rows[parseInt(i.toString(), 10)];\n      var childRows = row.childRows;\n      if (childRows) {\n        row.index = initialIndex++;\n        delete row.childRows;\n        organisedRows.push(row);\n        initialIndex = this.organiseRows(childRows, initialIndex, organisedRows);\n      } else {\n        row.index = initialIndex++;\n        organisedRows.push(row);\n      }\n    }\n    return initialIndex;\n  };\n  ExcelExport.prototype.processGridExport = function (gObj, exportProperties, r) {\n    var excelRows = [];\n    if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.theme)) {\n      this.theme = exportProperties.theme;\n    }\n    if ((gObj.childGrid || gObj.detailTemplate) && !isNullOrUndefined(exportProperties)) {\n      gObj.hierarchyPrintMode = exportProperties.hierarchyExportMode || 'Expanded';\n    }\n    var helper = new ExportHelper(gObj, this.helper.getForeignKeyData());\n    var gColumns = isExportColumns(exportProperties) ? prepareColumns(exportProperties.columns, gObj.enableColumnVirtualization) : helper.getGridExportColumns(gObj.columns);\n    var headerRow = helper.getHeaders(gColumns, this.includeHiddenColumn);\n    var groupIndent = gObj.groupSettings.columns.length ? gObj.groupSettings.columns.length - 1 : 0;\n    excelRows = this.processHeaderContent(gObj, headerRow, groupIndent, excelRows);\n    if (!isNullOrUndefined(exportProperties) && Object.keys(exportProperties).length && isNullOrUndefined(exportProperties.dataSource)) {\n      if (exportProperties.exportType === 'CurrentPage' && (!gObj.groupSettings.enableLazyLoading || gObj.getDataModule().isRemote())) {\n        excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, gObj.currentViewData, excelRows, helper);\n      } else {\n        excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n      }\n    } else {\n      excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n    }\n    gObj.notify(events.exportDataBound, {\n      excelRows: excelRows,\n      type: 'excel'\n    });\n    this.capTemplate = undefined;\n    this.footerTemplates = [];\n    this.grpFooterTemplates = [];\n    this.aggIndex = 0;\n    this.totalAggregates = 0;\n    return excelRows;\n  };\n  ExcelExport.prototype.processRecordContent = function (gObj, returnType, headerRow, exportProperties, currentViewRecords, excelRow, helper) {\n    var record;\n    if (!isNullOrUndefined(currentViewRecords) && currentViewRecords.length) {\n      record = currentViewRecords;\n    } else {\n      record = returnType.result;\n    }\n    if (!isNullOrUndefined(record.level)) {\n      this.processGroupedRows(gObj, record, headerRow, record.level, 0, exportProperties, excelRow, helper);\n    } else {\n      this.processRecordRows(gObj, record, headerRow, 0, 0, exportProperties, excelRow, helper);\n    }\n    if (!isNullOrUndefined(returnType.aggregates)) {\n      if (!isNullOrUndefined(currentViewRecords) && !this.parent.groupSettings.enableLazyLoading) {\n        this.processAggregates(gObj, returnType.result, excelRow, currentViewRecords);\n      } else {\n        var result = returnType.result.GroupGuid ? returnType.result.records : returnType.result;\n        this.processAggregates(gObj, result, excelRow);\n      }\n    }\n    return excelRow;\n  };\n  ExcelExport.prototype.processGroupedRows = function (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  gObj, dataSource, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n    for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n      var item = dataSource_1[_i];\n      var cells = [];\n      var index = 1;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var cell = {};\n      cell.index = index + level - 1;\n      var col = gObj.getColumnByField(item.field);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      var args = {\n        value: item.key,\n        column: col,\n        style: undefined,\n        isForeignKey: col.isForeignColumn()\n      };\n      var value = gObj.getColumnByField(item.field).headerText + ': ' + (!col.enableGroupByFormat ? this.exportValueFormatter.formatCellValue(args) : item.key) + ' - ';\n      if (item.count > 1) {\n        value += item.count + ' items';\n      } else {\n        value += item.count + ' item';\n      }\n      var cArgs = {\n        captionText: value,\n        type: this.isCsvExport ? 'CSV' : 'Excel',\n        data: item\n      };\n      this.parent.trigger(events.exportGroupCaption, cArgs);\n      cell.value = cArgs.captionText;\n      cell.style = this.getCaptionThemeStyle(this.theme);\n      if (!isNullOrUndefined(cArgs.style)) {\n        cell.style = this.mergeOptions(cell.style, cArgs.style);\n      }\n      var captionModelGen = new CaptionSummaryModelGenerator(gObj);\n      var groupCaptionSummaryRows = captionModelGen.generateRows(item);\n      this.fillAggregates(gObj, groupCaptionSummaryRows, dataSource.level + dataSource.childLevels - 1, excelRows, this.rowLength);\n      cells.push(cell);\n      if (excelRows[excelRows.length - 1].cells.length > 0) {\n        var lIndex = dataSource.level + dataSource.childLevels + groupCaptionSummaryRows[0].cells.length;\n        var hIndex = 0;\n        for (var _a = 0, _b = excelRows[excelRows.length - 1].cells; _a < _b.length; _a++) {\n          var tCell = _b[_a];\n          if (tCell.index < lIndex) {\n            lIndex = tCell.index;\n          }\n          if (tCell.index > hIndex) {\n            hIndex = tCell.index;\n          }\n          if (cells[cells.length - 1].index !== tCell.index) {\n            cells.push(tCell);\n          }\n        }\n        if (lIndex - cell.index > 1) {\n          cell.colSpan = lIndex - cell.index;\n        }\n        while (hIndex < headerRow.columns.length + level + dataSource.childLevels) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var sCell = {};\n          sCell.index = hIndex + 1;\n          sCell.style = this.getCaptionThemeStyle(this.theme);\n          cells.push(sCell);\n          hIndex++;\n        }\n      } else {\n        var span = 0;\n        //Calculation for column span when group caption dont have aggregates\n        for (var _c = 0, _d = headerRow.columns; _c < _d.length; _c++) {\n          var col_1 = _d[_c];\n          if (col_1.visible) {\n            span++;\n          }\n        }\n        cell.colSpan = dataSource.childLevels + span;\n      }\n      excelRows[excelRows.length - 1].cells = cells;\n      this.rowLength++;\n      if (this.groupedColLength < 8 && level > 1) {\n        var grouping = {\n          outlineLevel: level - 1,\n          isCollapsed: true\n        };\n        excelRows[excelRows.length - 1].grouping = grouping;\n      }\n      if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n        this.processGroupedRows(gObj, item.items, headerRow, item.items.level, startIndex, excelExportProperties, excelRows, helper);\n        this.processAggregates(gObj, item, excelRows, undefined, level - 1 + dataSource.childLevels, true);\n      } else {\n        startIndex = this.processRecordRows(gObj, item.items, headerRow, level - 1, startIndex, excelExportProperties, excelRows, helper);\n        this.processAggregates(gObj, item, excelRows, undefined, level - 1, true);\n      }\n    }\n  };\n  ExcelExport.prototype.processRecordRows = function (gObj, record, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n    var index = 1;\n    var cells = [];\n    var columns = headerRow.columns;\n    var rows = helper.getGridRowModel(columns, record, gObj, startIndex);\n    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n      var row = rows_1[_i];\n      cells = [];\n      startIndex++;\n      index = 1;\n      var templateRowHeight = void 0;\n      for (var c = 0, len = row.cells.length; c < len; c++) {\n        var gCell = row.cells[parseInt(c.toString(), 10)];\n        if (gCell.cellType !== CellType.Data) {\n          continue;\n        }\n        var column = gCell.column;\n        var field = column.field;\n        var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n        var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n        if (column.type === 'dateonly' && typeof value === 'string' && value) {\n          var arr = value.split(/[^0-9.]/);\n          value = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10));\n        }\n        var fkData = void 0;\n        if (column.isForeignColumn && column.isForeignColumn()) {\n          fkData = helper.getFData(value, column);\n          value = getValue(column.foreignKeyValue, fkData);\n        }\n        if (!isNullOrUndefined(value)) {\n          var cell = {};\n          var idx = index + level + gObj.childGridLevel;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          var excelCellArgs = {\n            data: row.data,\n            column: column,\n            foreignKeyData: fkData,\n            value: value,\n            style: undefined,\n            colSpan: 1,\n            cell: cell\n          };\n          gObj.trigger(events.excelQueryCellInfo, excelCellArgs);\n          if (!isNullOrUndefined(excelCellArgs.image) && !isNullOrUndefined(excelCellArgs.image.base64)) {\n            templateRowHeight = this.setImage(excelCellArgs, idx);\n            if (excelCellArgs.image.height && excelCellArgs.value !== '') {\n              templateRowHeight += 30;\n            }\n          }\n          if (!isNullOrUndefined(excelCellArgs.hyperLink)) {\n            excelCellArgs.cell.hyperlink = {\n              target: excelCellArgs.hyperLink.target\n            };\n            excelCellArgs.value = excelCellArgs.hyperLink.displayText || excelCellArgs.value;\n          }\n          cell = excelCellArgs.cell;\n          cell.index = idx;\n          cell.value = excelCellArgs.value;\n          if (excelCellArgs.data === '' && gObj.childGridLevel && index === 1) {\n            var style = {};\n            style.hAlign = 'left';\n            excelCellArgs = {\n              style: style\n            };\n            cell.colSpan = gObj.getVisibleColumns().length;\n            cell.value = this.l10n.getConstant('EmptyRecord');\n          }\n          if (excelCellArgs.colSpan > 1) {\n            cell.colSpan = excelCellArgs.colSpan;\n          }\n          if (!isNullOrUndefined(excelCellArgs.style)) {\n            var styleIndex = this.getColumnStyle(gObj, index + level);\n            cell.style = this.mergeOptions(this.styles[parseInt(styleIndex.toString(), 10)], excelCellArgs.style);\n          } else {\n            cell.style = {\n              name: gObj.element.id + 'column' + (index + level)\n            };\n          }\n          cells.push(cell);\n        }\n        index++;\n      }\n      var excelRow = {\n        index: this.rowLength++,\n        cells: cells\n      };\n      if (!isNullOrUndefined(templateRowHeight)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        excelRow.height = templateRowHeight;\n      }\n      if (this.groupedColLength && this.groupedColLength < 8 && level + 1 > 0) {\n        excelRow.grouping = {\n          outlineLevel: level + 1,\n          isCollapsed: true\n        };\n        excelRows.push(excelRow);\n      } else {\n        excelRows.push(excelRow);\n      }\n      if ((row.isExpand || this.isChild) && (!isNullOrUndefined(gObj.childGrid) || !isNullOrUndefined(gObj.detailTemplate))) {\n        if (!isNullOrUndefined(gObj.childGrid)) {\n          gObj.isPrinting = true;\n          var exportType = !isNullOrUndefined(excelExportProperties) && excelExportProperties.exportType ? excelExportProperties.exportType : 'AllPages';\n          var returnVal = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n          var childGridObj = returnVal.childGrid;\n          var element = returnVal.element;\n          childGridObj.actionFailure = helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n          childGridObj.childGridLevel = gObj.childGridLevel + 1;\n          var childExportProperties = extend(excelExportProperties, {\n            columns: null,\n            dataSource: null,\n            query: null\n          });\n          var args = {\n            childGrid: childGridObj,\n            row: row,\n            exportProperties: childExportProperties\n          };\n          this.parent.trigger(events.exportDetailDataBound, args);\n          childGridObj.beforeDataBound = this.childGridCell(excelRow, childGridObj, childExportProperties, row);\n          childGridObj.appendTo(element);\n        } else {\n          var args = {\n            parentRow: row,\n            row: excelRow,\n            value: {},\n            action: 'excelexport',\n            gridInstance: gObj\n          };\n          this.parent.trigger(events.exportDetailTemplate, args);\n          excelRow.childRows = this.processDetailTemplate(args);\n        }\n      }\n      gObj.notify(events.exportRowDataBound, {\n        rowObj: row,\n        type: 'excel',\n        excelRows: excelRows\n      });\n    }\n    return startIndex;\n  };\n  ExcelExport.prototype.processDetailTemplate = function (templateData) {\n    var _this = this;\n    var rows = [];\n    var templateRowHeight;\n    var detailIndent = 2;\n    var detailCellIndex;\n    if (templateData.value.columnHeader || templateData.value.rows) {\n      var processCell_1 = function (currentCell, isHeader) {\n        var cell = {};\n        if (isNullOrUndefined(currentCell.index)) {\n          currentCell.index = detailCellIndex;\n          detailCellIndex++;\n        }\n        cell.index = currentCell.index + detailIndent;\n        if (!isNullOrUndefined(currentCell.value)) {\n          cell.value = currentCell.value;\n        }\n        if (!isNullOrUndefined(currentCell.colSpan)) {\n          cell.colSpan = currentCell.colSpan;\n        }\n        if (!isNullOrUndefined(currentCell.rowSpan)) {\n          cell.rowSpan = currentCell.rowSpan;\n        }\n        if (isHeader) {\n          cell.style = _this.getHeaderThemeStyle(_this.theme);\n        } else {\n          cell.style = _this.getRecordThemeStyle(_this.theme);\n        }\n        if (!isNullOrUndefined(currentCell.style)) {\n          var cellStyle = {\n            fontColor: currentCell.style.fontColor,\n            fontName: currentCell.style.fontName,\n            fontSize: currentCell.style.fontSize,\n            hAlign: currentCell.style.excelHAlign,\n            vAlign: currentCell.style.excelVAlign,\n            rotation: currentCell.style.excelRotation,\n            bold: currentCell.style.bold,\n            indent: currentCell.style.indent,\n            italic: currentCell.style.italic,\n            underline: currentCell.style.underline,\n            backColor: currentCell.style.backColor,\n            wrapText: currentCell.style.wrapText,\n            borders: currentCell.style.excelBorders,\n            numberFormat: currentCell.style.excelNumberFormat,\n            type: currentCell.style.excelType,\n            strikeThrough: currentCell.style.strikeThrough\n          };\n          cell.style = _this.mergeOptions(cellStyle, cell.style);\n        }\n        if (!isNullOrUndefined(currentCell.image) && !isNullOrUndefined(currentCell.image.base64)) {\n          if (currentCell.rowSpan > 1) {\n            _this.setImage(currentCell, cell.index);\n          } else {\n            templateRowHeight = _this.setImage(currentCell, cell.index);\n            if (currentCell.image.height && currentCell.value !== '') {\n              templateRowHeight += 30;\n            }\n          }\n        }\n        if (!isNullOrUndefined(currentCell.hyperLink)) {\n          cell.hyperlink = {\n            target: currentCell.hyperLink.target\n          };\n          cell.value = currentCell.hyperLink.displayText;\n        }\n        return cell;\n      };\n      var processRow = function (currentRow, isHeader) {\n        var excelDetailCells = [];\n        detailCellIndex = 0;\n        for (var j = 0; j < currentRow.cells.length; j++) {\n          var currentCell = currentRow.cells[parseInt(j.toString(), 10)];\n          var detailCell = processCell_1(currentCell, isHeader);\n          excelDetailCells.push(detailCell);\n        }\n        var row = {\n          index: _this.rowLength++,\n          cells: excelDetailCells\n        };\n        if (!isNullOrUndefined(templateRowHeight)) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          row.height = templateRowHeight;\n          templateRowHeight = null;\n        }\n        rows.push(row);\n      };\n      if (templateData.value.columnHeader) {\n        for (var i = 0; i < templateData.value.columnHeader.length; i++) {\n          processRow(templateData.value.columnHeader[parseInt(i.toString(), 10)], true);\n        }\n      }\n      if (templateData.value.rows) {\n        for (var i = 0; i < templateData.value.rows.length; i++) {\n          processRow(templateData.value.rows[parseInt(i.toString(), 10)]);\n        }\n      }\n    } else if (templateData.value.image) {\n      templateRowHeight = this.setImage(templateData.value, detailIndent);\n      var row = {\n        index: this.rowLength++,\n        cells: [{\n          index: detailIndent,\n          style: this.getRecordThemeStyle(this.theme)\n        }]\n      };\n      if (!isNullOrUndefined(templateRowHeight)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        row.height = templateRowHeight;\n        templateRowHeight = null;\n      }\n      rows.push(row);\n    } else if (templateData.value.text) {\n      var row = {\n        index: this.rowLength++,\n        cells: [{\n          index: detailIndent,\n          value: templateData.value.text,\n          style: this.getRecordThemeStyle(this.theme)\n        }]\n      };\n      rows.push(row);\n    } else if (templateData.value.hyperLink) {\n      var row = {\n        index: this.rowLength++,\n        cells: [{\n          index: 2,\n          hyperlink: {\n            target: templateData.value.hyperLink.target\n          },\n          value: templateData.value.hyperLink.displayText,\n          style: this.getRecordThemeStyle(this.theme)\n        }]\n      };\n      rows.push(row);\n    }\n    for (var i = 0; i < rows.length; i++) {\n      rows[parseInt(i.toString(), 10)].grouping = {\n        outlineLevel: 1,\n        isCollapsed: !templateData.parentRow.isExpand,\n        isHidden: !templateData.parentRow.isExpand\n      };\n    }\n    return rows;\n  };\n  ExcelExport.prototype.setImage = function (args, idx) {\n    if (isNullOrUndefined(this.sheet.images)) {\n      this.sheet.images = [];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var excelImage = {\n      image: args.image.base64,\n      row: this.rowLength,\n      column: idx,\n      lastRow: this.rowLength,\n      lastColumn: idx\n    };\n    if (args.image.width && args.image.height) {\n      excelImage.width = args.image.width;\n      excelImage.height = args.image.height;\n    }\n    this.sheet.images.push(excelImage);\n    this.columns[idx - 1].width = args.image.width || this.columns[idx - 1].width;\n    return args.image.height || 50;\n  };\n  ExcelExport.prototype.childGridCell = function (excelRow, childGridObj, excelExportProps, gRow) {\n    var _this = this;\n    return function (result) {\n      childGridObj.beforeDataBound = null;\n      result.cancel = true;\n      if (result.result.length === 0) {\n        result.result = [''];\n      }\n      excelRow.childRows = _this.processGridExport(childGridObj, excelExportProps, result);\n      var intent = _this.parent.groupSettings.columns.length;\n      var rows = excelRow.childRows;\n      for (var i = 0; i < rows.length; i++) {\n        rows[parseInt(i.toString(), 10)].grouping = {\n          outlineLevel: intent + childGridObj.childGridLevel,\n          isCollapsed: !gRow.isExpand,\n          isHidden: !gRow.isExpand\n        };\n      }\n      childGridObj.destroy();\n      detach(childGridObj.element);\n      _this.gridPool[childGridObj.id] = true;\n      _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n      return excelRow;\n    };\n  };\n  ExcelExport.prototype.processAggregates = function (gObj, rec, excelRows, currentViewRecords, indent, byGroup) {\n    var summaryModel = new SummaryModelGenerator(gObj);\n    var columns = summaryModel.getColumns();\n    columns = columns.filter(function (col) {\n      return isNullOrUndefined(col.commands) && col.type !== 'checkbox';\n    });\n    if (gObj.aggregates.length && this.parent !== gObj) {\n      gObj.aggregateModule.prepareSummaryInfo();\n    }\n    var data = undefined;\n    if (!isNullOrUndefined(currentViewRecords)) {\n      data = currentViewRecords;\n    } else {\n      data = rec;\n    }\n    if (indent === undefined) {\n      indent = 0;\n    }\n    if (gObj.groupSettings.columns.length > 0 && byGroup) {\n      var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n      var groupSummaryRows = groupSummaryModel.generateRows(data, {\n        level: data.level\n      });\n      if (groupSummaryRows.length > 0) {\n        excelRows = this.fillAggregates(gObj, groupSummaryRows, indent, excelRows);\n      }\n    } else {\n      indent = gObj.groupSettings.columns.length > 0 && !byGroup ? gObj.groupSettings.columns.length : indent;\n      var sRows = summaryModel.generateRows(data, rec.aggregates, null, null, columns);\n      if (sRows.length > 0 && !byGroup) {\n        indent = gObj.groupSettings.columns.length ? indent - 1 : indent;\n        excelRows = this.fillAggregates(gObj, sRows, indent, excelRows);\n      }\n    }\n    return excelRows;\n  };\n  ExcelExport.prototype.fillAggregates = function (gObj, rows, indent, excelRows, customIndex) {\n    for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n      var row = rows_2[_i];\n      var cells = [];\n      var isEmpty = true;\n      var index = 0;\n      for (var _a = 0, _b = row.cells; _a < _b.length; _a++) {\n        var cell = _b[_a];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var eCell = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var columnsDetails = {};\n        if (!isNullOrUndefined(cell.attributes.index)) {\n          columnsDetails = this.parent.getColumnByIndex(cell.attributes.index);\n        }\n        if (cell.cellType === CellType.DetailFooterIntent || columnsDetails.type === 'checkbox' || columnsDetails.commands) {\n          continue;\n        }\n        if (cell.visible || this.includeHiddenColumn) {\n          index++;\n          if (cell.isDataCell) {\n            isEmpty = false;\n            var footerTemplate = !isNullOrUndefined(cell.column.footerTemplate);\n            var groupFooterTemplate = !isNullOrUndefined(cell.column.groupFooterTemplate);\n            var groupCaptionTemplate = !isNullOrUndefined(cell.column.groupCaptionTemplate);\n            eCell.index = index + indent + gObj.childGridLevel;\n            if (footerTemplate) {\n              eCell.value = this.getAggreateValue(gObj, CellType.Summary, cell.column.footerTemplate, cell, row);\n            } else if (groupFooterTemplate) {\n              eCell.value = this.getAggreateValue(gObj, CellType.GroupSummary, cell.column.groupFooterTemplate, cell, row);\n            } else if (groupCaptionTemplate) {\n              eCell.value = this.getAggreateValue(gObj, CellType.CaptionSummary, cell.column.groupCaptionTemplate, cell, row);\n            } else {\n              for (var _c = 0, _d = Object.keys(row.data[cell.column.field]); _c < _d.length; _c++) {\n                var key = _d[_c];\n                if (key === cell.column.type) {\n                  if (!isNullOrUndefined(row.data[cell.column.field].Sum)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - sum\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Average)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - average\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Max)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - max\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Min)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - min\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Count)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - count\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].TrueCount)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - truecount\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].FalseCount)) {\n                    eCell.value = row.data[cell.column.field][cell.column.field + \" - falsecount\"];\n                  } else if (!isNullOrUndefined(row.data[cell.column.field].Custom)) {\n                    eCell.value = row.data[cell.column.field].Custom;\n                  }\n                }\n              }\n            }\n            eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n            this.aggregateStyle(cell.column, eCell.style, cell.column.field);\n            var gridCellStyle = cell.attributes.style;\n            if (gridCellStyle.textAlign) {\n              eCell.style.hAlign = gridCellStyle.textAlign.toLowerCase();\n            }\n            var args = {\n              row: row,\n              type: footerTemplate ? 'Footer' : groupFooterTemplate ? 'GroupFooter' : 'GroupCaption',\n              style: eCell,\n              cell: cell\n            };\n            this.parent.trigger(events.excelAggregateQueryCellInfo, args);\n            cells.push(eCell);\n          } else {\n            if (customIndex === undefined) {\n              eCell.index = index + indent + gObj.childGridLevel;\n              eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n              cells.push(eCell);\n            }\n          }\n        }\n      }\n      if (!isNullOrUndefined(customIndex)) {\n        excelRows.push({\n          index: customIndex,\n          cells: cells\n        });\n      } else {\n        var row_1 = {};\n        var dummyOutlineLevel = 'outlineLevel';\n        var dummyGrouping = 'grouping';\n        if (this.groupedColLength < 8 && this.groupedColLength > 0 && !(gObj.groupSettings.enableLazyLoading && isNullOrUndefined(excelRows[excelRows.length - 1][\"\" + dummyGrouping]))) {\n          var level = excelRows[excelRows.length - 1][\"\" + dummyGrouping][\"\" + dummyOutlineLevel];\n          var grouping = {\n            outlineLevel: level,\n            isCollapsed: true\n          };\n          row_1 = {\n            index: this.rowLength++,\n            cells: cells,\n            grouping: grouping\n          };\n        } else {\n          row_1 = {\n            index: this.rowLength++,\n            cells: cells\n          };\n        }\n        if (!isEmpty) {\n          excelRows.push(row_1);\n        }\n      }\n    }\n    return excelRows;\n  };\n  ExcelExport.prototype.aggregateStyle = function (col, style, field) {\n    var column = this.parent.getColumnByField(field);\n    if (typeof col.format === 'object') {\n      var format = col.format;\n      style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n      if (!isNullOrUndefined(format.type)) {\n        style.type = format.type.toLowerCase();\n      }\n    } else {\n      style.numberFormat = col.format;\n    }\n    if (!isNullOrUndefined(column) && isNullOrUndefined(style.type)) {\n      style.type = column.type.toLowerCase();\n    }\n  };\n  ExcelExport.prototype.getAggreateValue = function (gObj, cellType, template, cell, row) {\n    var templateFn = {};\n    templateFn[getEnumValue(CellType, cell.cellType)] = compile(template);\n    var txt;\n    var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n    if ((this.parent.isReact || this.parent.isVue || this.parent.isVue3 || this.parent.isAngular) && !(typeof cell.column.footerTemplate === 'string' || typeof cell.column.groupFooterTemplate === 'string' || typeof cell.column.groupCaptionTemplate === 'string')) {\n      txt = data[cell.column.type];\n      return !isNullOrUndefined(txt) ? txt : '';\n    } else {\n      txt = templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent);\n      if (this.parent.isVue3 && !isNullOrUndefined(txt[1])) {\n        return txt[1].textContent;\n      }\n    }\n    return !isNullOrUndefined(txt[0]) ? txt[0].textContent : '';\n  };\n  ExcelExport.prototype.mergeOptions = function (JSON1, JSON2) {\n    var result = {};\n    var attrname = Object.keys(JSON1);\n    for (var index = 0; index < attrname.length; index++) {\n      if (attrname[parseInt(index.toString(), 10)] !== 'name') {\n        result[attrname[parseInt(index.toString(), 10)]] = JSON1[attrname[parseInt(index.toString(), 10)]];\n      }\n    }\n    attrname = Object.keys(JSON2);\n    for (var index = 0; index < attrname.length; index++) {\n      if (attrname[parseInt(index.toString(), 10)] !== 'name') {\n        result[attrname[parseInt(index.toString(), 10)]] = JSON2[attrname[parseInt(index.toString(), 10)]];\n      }\n    }\n    return result;\n  };\n  ExcelExport.prototype.getColumnStyle = function (gObj, columnIndex) {\n    var index = 0;\n    for (var _i = 0, _a = this.styles; _i < _a.length; _i++) {\n      var style = _a[_i];\n      if (style.name === gObj.element.id + 'column' + columnIndex) {\n        return index;\n      }\n      index++;\n    }\n    return undefined;\n  };\n  ExcelExport.prototype.headerRotation = function (args) {\n    var degree = args.style.rotation;\n    if (degree <= 90 && degree >= 0) {\n      args.style.hAlign = 'Left';\n    } else if (degree > 90 && degree <= 180) {\n      args.style.hAlign = 'Right';\n    } else {\n      degree = 180;\n      args.style.hAlign = 'Right';\n    }\n    args.style.rotation = degree;\n  };\n  ExcelExport.prototype.processHeaderContent = function (gObj, headerRow, indent, excelRows) {\n    var rowIndex = 1;\n    var gridRows = headerRow.rows;\n    // Column collection with respect to the records in the grid\n    var gridColumns = headerRow.columns;\n    var spannedCells = [];\n    if (indent > 0) {\n      var index = 0;\n      while (index !== indent) {\n        this.columns.push({\n          index: index + 1,\n          width: 30\n        });\n        index++;\n      }\n    }\n    for (var col = 0; col < gridColumns.length; col++) {\n      this.parseStyles(gObj, gridColumns[parseInt(col.toString(), 10)], this.getRecordThemeStyle(this.theme), indent + col + 1);\n    }\n    var templateRowHeight;\n    for (var row = 0; row < gridRows.length; row++) {\n      var currentCellIndex = 1 + indent;\n      var cells = [];\n      for (var column = 0; column < gridRows[parseInt(row.toString(), 10)].cells.length; column++) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var style = {};\n        var cell = {};\n        var gridCell = gridRows[parseInt(row.toString(), 10)].cells[parseInt(column.toString(), 10)];\n        if (gridCell.cellType === CellType.HeaderIndent || gridCell.cellType === CellType.DetailHeader) {\n          continue;\n        }\n        var result = {\n          contains: true,\n          index: 1\n        };\n        while (result.contains) {\n          result = this.getIndex(spannedCells, rowIndex, currentCellIndex);\n          currentCellIndex = result.index;\n          if (!result.contains) {\n            cell.index = result.index + gObj.childGridLevel;\n            break;\n          }\n        }\n        if (!isNullOrUndefined(gridCell.rowSpan) && gridCell.rowSpan !== 1) {\n          cell.rowSpan = gridCell.rowSpan;\n          for (var i = rowIndex; i < gridCell.rowSpan + rowIndex; i++) {\n            var spannedCell = {\n              rowIndex: 0,\n              columnIndex: 0\n            };\n            spannedCell.rowIndex = i;\n            spannedCell.columnIndex = currentCellIndex;\n            spannedCells.push(spannedCell);\n          }\n        }\n        if (!isNullOrUndefined(gridCell.colSpan) && gridCell.colSpan !== 1) {\n          cell.colSpan = gridCell.colSpan;\n          currentCellIndex = currentCellIndex + cell.colSpan - 1;\n        }\n        cell.value = gridCell.column.headerText;\n        style = this.getHeaderThemeStyle(this.theme);\n        if (!isNullOrUndefined(gridCell.column.textAlign)) {\n          style.hAlign = gridCell.column.textAlign.toLowerCase();\n        }\n        if (!isNullOrUndefined(gridCell.column.headerTextAlign)) {\n          style.hAlign = gridCell.column.headerTextAlign.toLowerCase();\n        }\n        var excelHeaderCellArgs = {\n          cell: cell,\n          gridCell: gridCell,\n          style: style\n        };\n        gObj.trigger(events.excelHeaderQueryCellInfo, excelHeaderCellArgs);\n        if (excelHeaderCellArgs.style.rotation) {\n          this.headerRotation(excelHeaderCellArgs);\n        }\n        if (!isNullOrUndefined(excelHeaderCellArgs.image) && !isNullOrUndefined(excelHeaderCellArgs.image.base64)) {\n          templateRowHeight = this.setImage(excelHeaderCellArgs, currentCellIndex);\n        }\n        if (!isNullOrUndefined(excelHeaderCellArgs.hyperLink)) {\n          excelHeaderCellArgs.cell.hyperlink = {\n            target: excelHeaderCellArgs.hyperLink.target\n          };\n          cell.value = excelHeaderCellArgs.hyperLink.displayText || cell.value;\n        }\n        cell.style = excelHeaderCellArgs.style;\n        cells.push(cell);\n        currentCellIndex++;\n      }\n      var excelRow = {\n        index: this.rowLength++,\n        cells: cells\n      };\n      if (!isNullOrUndefined(templateRowHeight)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        excelRow.height = templateRowHeight;\n      }\n      excelRows.push(excelRow);\n    }\n    return excelRows;\n  };\n  ExcelExport.prototype.getHeaderThemeStyle = function (theme) {\n    var style = {};\n    style.fontSize = 12;\n    style.borders = {\n      color: '#E0E0E0'\n    };\n    style.bold = true;\n    if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.header)) {\n      style = this.updateThemeStyle(theme.header, style);\n    }\n    return style;\n  };\n  ExcelExport.prototype.updateThemeStyle = function (themestyle, style) {\n    return extend(style, themestyle);\n  };\n  ExcelExport.prototype.getCaptionThemeStyle = function (theme) {\n    var style = {};\n    style.fontSize = 13;\n    style.backColor = '#F6F6F6';\n    if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.caption)) {\n      style = this.updateThemeStyle(theme.caption, style);\n    }\n    return style;\n  };\n  ExcelExport.prototype.getRecordThemeStyle = function (theme) {\n    var style = {};\n    style.fontSize = 13;\n    style.borders = {\n      color: '#E0E0E0'\n    };\n    if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.record)) {\n      style = this.updateThemeStyle(theme.record, style);\n    }\n    return style;\n  };\n  ExcelExport.prototype.processExcelHeader = function (header) {\n    if (!isNullOrUndefined(header.rows) && (this.expType === 'NewSheet' || this.rowLength === 1)) {\n      var noRows = void 0;\n      if (header.headerRows === undefined) {\n        this.rowLength = header.rows.length;\n      } else {\n        this.rowLength = header.headerRows;\n      }\n      if (this.rowLength < header.rows.length) {\n        noRows = this.rowLength;\n      } else {\n        noRows = header.rows.length;\n      }\n      this.rowLength++;\n      for (var row = 0; row < noRows; row++) {\n        var json = header.rows[parseInt(row.toString(), 10)];\n        //Row index\n        if (!(json.index !== null && !isNullOrUndefined(json.index))) {\n          json.index = row + 1;\n        }\n        this.updatedCellIndex(json);\n      }\n    }\n  };\n  ExcelExport.prototype.updatedCellIndex = function (json) {\n    var cellsLength = json.cells.length;\n    for (var cellId = 0; cellId < cellsLength; cellId++) {\n      var jsonCell = json.cells[parseInt(cellId.toString(), 10)];\n      //cell index\n      if (!(jsonCell.index !== null && !isNullOrUndefined(jsonCell.index))) {\n        jsonCell.index = cellId + 1;\n      }\n    }\n    this.rows.push(json);\n  };\n  ExcelExport.prototype.processExcelFooter = function (footer) {\n    if (!isNullOrUndefined(footer.rows)) {\n      var noRows = void 0;\n      if (footer.footerRows === undefined) {\n        this.rowLength += footer.rows.length;\n      } else {\n        if (footer.footerRows > footer.rows.length) {\n          this.rowLength += footer.footerRows - footer.rows.length;\n          noRows = footer.rows.length;\n        } else {\n          noRows = footer.footerRows;\n        }\n      }\n      for (var row = 0; row < noRows; row++) {\n        var json = footer.rows[parseInt(row.toString(), 10)];\n        //Row index\n        if (json.index === null || json.index === undefined) {\n          json.index = this.rowLength++;\n        } else {\n          json.index += this.rowLength;\n        }\n        this.updatedCellIndex(json);\n      }\n    }\n  };\n  ExcelExport.prototype.getIndex = function (spannedCells, rowIndex, columnIndex) {\n    for (var _i = 0, spannedCells_1 = spannedCells; _i < spannedCells_1.length; _i++) {\n      var spannedCell = spannedCells_1[_i];\n      if (spannedCell.rowIndex === rowIndex && spannedCell.columnIndex === columnIndex) {\n        columnIndex = columnIndex + 1;\n        return {\n          contains: true,\n          index: columnIndex\n        };\n      }\n    }\n    return {\n      contains: false,\n      index: columnIndex\n    };\n  };\n  ExcelExport.prototype.parseStyles = function (gObj, col, style, index) {\n    if (!isNullOrUndefined(col.format)) {\n      if (typeof col.format === 'object') {\n        var format = col.format;\n        style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n        if (!isNullOrUndefined(format.type)) {\n          style.type = format.type === 'dateonly' ? 'date' : format.type.toLowerCase();\n        }\n      } else {\n        style.numberFormat = col.format;\n        style.type = col.type === 'dateonly' ? 'date' : col.type;\n      }\n    }\n    if (!isNullOrUndefined(col.textAlign)) {\n      style.hAlign = col.textAlign.toLowerCase();\n    }\n    if (Object.keys(style).length > 0) {\n      style.name = gObj.element.id + 'column' + index;\n      this.styles.push(style);\n    }\n    if (!isNullOrUndefined(col.width) && col.width !== 'auto' && !gObj.childGridLevel) {\n      this.columns.push({\n        index: index + gObj.childGridLevel,\n        width: typeof col.width === 'number' ? col.width : this.helper.getConvertedWidth(col.width)\n      });\n    }\n  };\n  ExcelExport.prototype.destroy = function () {\n    //destroy for exporting\n  };\n  return ExcelExport;\n}();\nexport { ExcelExport };","map":{"version":3,"names":["events","Workbook","isNullOrUndefined","getEnumValue","compile","getValue","detach","extend","Data","ExportHelper","ExportValueFormatter","SummaryModelGenerator","GroupSummaryModelGenerator","CaptionSummaryModelGenerator","CellType","Query","DataManager","getPrintGridModel","getUid","isExportColumns","updateColumnTypeForExportColumns","prepareColumns","measureColumnDepth","defaultCurrencyCode","ExcelExport","parent","locator","book","workSheet","rows","columns","styles","rowLength","expType","includeHiddenColumn","isCsvExport","isChild","isElementIdChanged","gridPool","sheet","grpFooterTemplates","footerTemplates","aggIndex","totalAggregates","helper","l10n","getService","prototype","getModuleName","init","gObj","element","id","Date","toISOString","isDestroyed","isExporting","undefined","footer","exportValueFormatter","locale","Map","grid","exportProperties","isMultipleExport","workbook","isCsv","isBlob","cancel","isBlb","Child","csv","workbk","isMultiEx","childGrid","detailTemplate","hierarchyExportMode","expandedRows","args","requestType","gridObject","trigger","beforeExcelExport","Promise","resolve","log","data","processRecords","exportingSuccess","excelExportComplete","promise","blobPromise","gridInstance","_this","dataSource","query_1","query","isCountRequired","aggregates","dataManager","executeQuery","then","r","processInnerRecords","exportType","groupSettings","enableLazyLoading","length","getDataModule","isRemote","getCurrentViewRecords","allPromise_1","getQuery","lazyLoad","push","getData","getColumnData","reject","all","e","catch","actionFailure","groupedColLength","blankRows","separator","colDepth","isExportPropertiesPresent","multipleExport","type","images","worksheets","index","header","processExcelHeader","JSON","parse","stringify","childGridLevel","processGridExport","globalResolve","checkAndExport","organisedRows","organiseRows","concat","processExcelFooter","enableRtl","allowFiltering","getVisibleColumns","enableFilter","headerRowLen","headerRows","autoFilters","row","column","lastRow","lastColumn","notify","fileName","save","saveAsBlob","initialIndex","i","parseInt","toString","childRows","excelRows","theme","hierarchyPrintMode","getForeignKeyData","gColumns","enableColumnVirtualization","getGridExportColumns","headerRow","getHeaders","groupIndent","processHeaderContent","Object","keys","processRecordContent","currentViewData","exportDataBound","capTemplate","returnType","currentViewRecords","excelRow","record","result","level","processGroupedRows","processRecordRows","processAggregates","GroupGuid","records","startIndex","excelExportProperties","_i","dataSource_1","item","cells","cell","col","getColumnByField","field","value","key","style","isForeignKey","isForeignColumn","headerText","enableGroupByFormat","formatCellValue","count","cArgs","captionText","exportGroupCaption","getCaptionThemeStyle","mergeOptions","captionModelGen","groupCaptionSummaryRows","generateRows","fillAggregates","childLevels","lIndex","hIndex","_a","_b","tCell","colSpan","sCell","span","_c","_d","col_1","visible","grouping","outlineLevel","isCollapsed","items","getGridRowModel","rows_1","templateRowHeight","c","len","gCell","cellType","cellValue","valueAccessor","arr","split","fkData","getFData","foreignKeyValue","idx","excelCellArgs","foreignKeyData","excelQueryCellInfo","image","base64","setImage","height","hyperLink","hyperlink","target","displayText","hAlign","getConstant","styleIndex","getColumnStyle","name","isExpand","isPrinting","returnVal","createChildGrid","childGridObj","failureHandler","childExportProperties","exportDetailDataBound","beforeDataBound","childGridCell","appendTo","parentRow","action","exportDetailTemplate","processDetailTemplate","exportRowDataBound","rowObj","templateData","detailIndent","detailCellIndex","columnHeader","processCell_1","currentCell","isHeader","rowSpan","getHeaderThemeStyle","getRecordThemeStyle","cellStyle","fontColor","fontName","fontSize","excelHAlign","vAlign","excelVAlign","rotation","excelRotation","bold","indent","italic","underline","backColor","wrapText","borders","excelBorders","numberFormat","excelNumberFormat","excelType","strikeThrough","processRow","currentRow","excelDetailCells","j","detailCell","text","isHidden","excelImage","width","excelExportProps","gRow","intent","destroy","rec","byGroup","summaryModel","getColumns","filter","commands","aggregateModule","prepareSummaryInfo","groupSummaryModel","groupSummaryRows","sRows","customIndex","rows_2","isEmpty","eCell","columnsDetails","attributes","getColumnByIndex","DetailFooterIntent","isDataCell","footerTemplate","groupFooterTemplate","groupCaptionTemplate","getAggreateValue","Summary","GroupSummary","CaptionSummary","Sum","Average","Max","Min","Count","TrueCount","FalseCount","Custom","aggregateStyle","gridCellStyle","textAlign","toLowerCase","excelAggregateQueryCellInfo","row_1","dummyOutlineLevel","dummyGrouping","format","skeleton","template","templateFn","txt","columnName","isReact","isVue","isVue3","isAngular","textContent","JSON1","JSON2","attrname","columnIndex","headerRotation","degree","rowIndex","gridRows","gridColumns","spannedCells","parseStyles","currentCellIndex","gridCell","HeaderIndent","DetailHeader","contains","getIndex","spannedCell","headerTextAlign","excelHeaderCellArgs","excelHeaderQueryCellInfo","color","updateThemeStyle","themestyle","caption","noRows","json","updatedCellIndex","cellsLength","cellId","jsonCell","footerRows","spannedCells_1","getConvertedWidth"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-grids/src/grid/actions/excel-export.js"],"sourcesContent":["import * as events from '../base/constant';\nimport { Workbook } from '@syncfusion/ej2-excel-export';\nimport { isNullOrUndefined, getEnumValue, compile, getValue, detach, extend } from '@syncfusion/ej2-base';\nimport { Data } from '../actions/data';\nimport { ExportHelper, ExportValueFormatter } from './export-helper';\nimport { SummaryModelGenerator, GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\nimport { CellType } from '../base/enum';\nimport { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getPrintGridModel, getUid, isExportColumns, updateColumnTypeForExportColumns, prepareColumns, measureColumnDepth } from '../base/util';\nimport { defaultCurrencyCode } from '@syncfusion/ej2-base';\n/**\n * @hidden\n * `ExcelExport` module is used to handle the Excel export action.\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for the Grid Excel Export module.\n     *\n     * @param {IGrid} parent - specifies the IGrid\n     * @param {ServiceLocator} locator - specifies the ServiceLocator\n     * @hidden\n     */\n    function ExcelExport(parent, locator) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.book = {};\n        this.workSheet = [];\n        this.rows = [];\n        this.columns = [];\n        this.styles = [];\n        this.rowLength = 1;\n        this.expType = 'AppendToSheet';\n        this.includeHiddenColumn = false;\n        this.isCsvExport = false;\n        this.isChild = false;\n        this.isElementIdChanged = false;\n        this.gridPool = {};\n        this.sheet = {};\n        this.grpFooterTemplates = [];\n        this.footerTemplates = [];\n        this.aggIndex = 0;\n        this.totalAggregates = 0;\n        this.parent = parent;\n        this.helper = new ExportHelper(parent);\n        this.locator = locator;\n        this.l10n = this.locator.getService('localization');\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @returns {string} returns the module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    ExcelExport.prototype.init = function (gObj) {\n        if (gObj.element !== null && gObj.element.id === '') {\n            gObj.element.id = new Date().toISOString();\n            this.isElementIdChanged = true;\n        }\n        this.parent = gObj;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.isExporting = undefined;\n        this.book = {};\n        this.workSheet = [];\n        this.rows = [];\n        this.columns = [];\n        this.styles = [];\n        this.rowLength = 1;\n        this.footer = undefined;\n        this.expType = 'AppendToSheet';\n        this.includeHiddenColumn = false;\n        this.exportValueFormatter = new ExportValueFormatter(gObj.locale);\n        gObj.id = getUid('main-grid');\n        this.gridPool[gObj.id] = false;\n    };\n    /**\n     * Export Grid to Excel file.\n     *\n     * @param {IGrid} grid - Defines the grid.\n     * @param  {exportProperties} exportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Defines is multiple Grid's are exported.\n     * @param  {Workbook} workbook - Defined the Workbook if multiple Grid is exported.\n     * @param  {boolean} isCsv - true if export to CSV.\n     * @param {boolean} isBlob - true if isBlob is enabled.\n     * @returns {Promise<any>} - Returns the map for export.\n     */\n    // eslint-disable-next-line\n    ExcelExport.prototype.Map = function (grid, exportProperties, isMultipleExport, workbook, isCsv, isBlob) {\n        var gObj = grid;\n        var cancel = 'cancel';\n        var isBlb = 'isBlob';\n        var Child = 'isChild';\n        var csv = 'isCsv';\n        var workbk = 'workbook';\n        var isMultiEx = 'isMultipleExport';\n        this.gridPool = {};\n        if ((grid.childGrid || grid.detailTemplate) && !(!isNullOrUndefined(exportProperties) && exportProperties.hierarchyExportMode === 'None')) {\n            grid.expandedRows = getPrintGridModel(grid).expandedRows;\n        }\n        var args = {\n            requestType: 'beforeExcelExport', gridObject: gObj, cancel: false,\n            isMultipleExport: isMultipleExport, workbook: workbook, isCsv: isCsv, isBlob: isBlob, isChild: this.isChild,\n            grpFooterTemplates: this.grpFooterTemplates\n        };\n        gObj.trigger(events.beforeExcelExport, args);\n        if (args[\"\" + cancel]) {\n            return new Promise(function (resolve) {\n                return resolve();\n            });\n        }\n        this.parent.log('exporting_begin', this.getModuleName());\n        this.data = new Data(gObj);\n        this.isExporting = true;\n        this.isBlob = args[\"\" + isBlb];\n        this.isChild = args[\"\" + Child];\n        this.grpFooterTemplates = args['grpFooterTemplates'];\n        if (args[\"\" + csv]) {\n            this.isCsvExport = args[\"\" + csv];\n        }\n        else {\n            this.isCsvExport = false;\n        }\n        if (isExportColumns(exportProperties)) {\n            updateColumnTypeForExportColumns(exportProperties, gObj);\n        }\n        return this.processRecords(gObj, exportProperties, args[\"\" + isMultiEx], args[\"\" + workbk]);\n    };\n    ExcelExport.prototype.exportingSuccess = function (resolve) {\n        this.isExporting = false;\n        this.parent.trigger(events.excelExportComplete, this.isBlob ? { promise: this.blobPromise } : { gridInstance: this.parent });\n        this.parent.log('exporting_complete', this.getModuleName());\n        resolve(this.book);\n    };\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ExcelExport.prototype.processRecords = function (gObj, exportProperties, isMultipleExport, workbook) {\n        var _this = this;\n        if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.dataSource)) {\n            exportProperties.dataSource = exportProperties.dataSource instanceof DataManager ?\n                exportProperties.dataSource : new DataManager(exportProperties.dataSource);\n            var query_1 = exportProperties.query ? exportProperties.query : new Query();\n            if (isNullOrUndefined(query_1.isCountRequired) || gObj.aggregates) {\n                query_1.isCountRequired = true;\n            }\n            return new Promise(function (resolve) {\n                var dataManager = exportProperties.dataSource.executeQuery(query_1);\n                dataManager.then(function (r) {\n                    _this.init(gObj);\n                    _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, r).then(function () {\n                        _this.exportingSuccess(resolve);\n                    });\n                });\n            });\n        }\n        else if (!isNullOrUndefined(exportProperties) && exportProperties.exportType === 'CurrentPage' &&\n            !(this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length\n                && !this.parent.getDataModule().isRemote())) {\n            return new Promise(function (resolve) {\n                _this.init(gObj);\n                _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, _this.parent.getCurrentViewRecords());\n                _this.exportingSuccess(resolve);\n            });\n        }\n        else {\n            var allPromise_1 = [];\n            var query = ExportHelper.getQuery(gObj, this.data);\n            if (this.parent.groupSettings.enableLazyLoading && this.parent.groupSettings.columns.length\n                && !this.parent.getDataModule().isRemote()) {\n                if (isNullOrUndefined(exportProperties)) {\n                    exportProperties = { hierarchyExportMode: 'All' };\n                }\n                exportProperties.hierarchyExportMode = exportProperties.hierarchyExportMode === 'None' ? 'None' : 'All';\n                if (exportProperties.hierarchyExportMode === 'All') {\n                    query.lazyLoad = [];\n                }\n            }\n            allPromise_1.push(this.data.getData({}, query));\n            allPromise_1.push(this.helper.getColumnData(gObj));\n            return new Promise(function (resolve, reject) {\n                Promise.all(allPromise_1).then(function (e) {\n                    _this.init(gObj);\n                    _this.processInnerRecords(gObj, exportProperties, isMultipleExport, workbook, e[0]).then(function () {\n                        _this.exportingSuccess(resolve);\n                    });\n                }).catch(function (e) {\n                    reject(_this.book);\n                    _this.parent.trigger(events.actionFailure, e);\n                });\n            });\n        }\n    };\n    ExcelExport.prototype.processInnerRecords = function (gObj, exportProperties, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isMultipleExport, workbook, r) {\n        var _this = this;\n        this.groupedColLength = gObj.groupSettings.columns.length;\n        var blankRows = 5;\n        var separator;\n        var rows = [];\n        var colDepth = measureColumnDepth(gObj.columns);\n        var isExportPropertiesPresent = !isNullOrUndefined(exportProperties);\n        if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.multipleExport)) {\n            this.expType = (!isNullOrUndefined(exportProperties.multipleExport.type) ? exportProperties.multipleExport.type : 'AppendToSheet');\n            if (!isNullOrUndefined(exportProperties.multipleExport.blankRows)) {\n                blankRows = exportProperties.multipleExport.blankRows;\n            }\n        }\n        if (isNullOrUndefined(workbook)) {\n            this.workSheet = [];\n            this.rows = [];\n            this.columns = [];\n            this.styles = [];\n            this.sheet.images = [];\n        }\n        else if (this.expType === 'NewSheet') {\n            this.workSheet = workbook.worksheets;\n            this.rows = [];\n            this.columns = [];\n            this.sheet.images = [];\n            this.styles = workbook.styles;\n        }\n        else {\n            this.workSheet = [];\n            this.rows = workbook.worksheets[0].rows;\n            this.columns = workbook.worksheets[0].columns;\n            this.styles = workbook.styles;\n            this.sheet.images = workbook.worksheets[0].images;\n            this.rowLength = (this.rows[this.rows.length - 1].index + blankRows);\n            this.rowLength++;\n        }\n        if (isExportPropertiesPresent) {\n            if (!isNullOrUndefined(isMultipleExport)) {\n                if (!isNullOrUndefined(exportProperties.header) && (isMultipleExport || this.expType === 'NewSheet')) {\n                    this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n                }\n                if (!isNullOrUndefined(exportProperties.footer)) {\n                    if (this.expType === 'AppendToSheet') {\n                        if (!isMultipleExport) {\n                            this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                        }\n                    }\n                    else {\n                        this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(exportProperties.header)) {\n                    this.processExcelHeader(JSON.parse(JSON.stringify(exportProperties.header)));\n                }\n                if (!isNullOrUndefined(exportProperties.footer)) {\n                    this.footer = JSON.parse(JSON.stringify(exportProperties.footer));\n                }\n            }\n        }\n        this.includeHiddenColumn = (isExportPropertiesPresent ? exportProperties.includeHiddenColumn : false);\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        return new Promise(function (resolve, reject) {\n            gObj.childGridLevel = 0;\n            rows = _this.processGridExport(gObj, exportProperties, r);\n            _this.globalResolve = resolve;\n            _this.gridPool[gObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n        }).then(function () {\n            var organisedRows = [];\n            _this.organiseRows(rows, rows[0].index, organisedRows);\n            _this.rows = _this.rows.concat(organisedRows);\n            //footer template add\n            if (!isNullOrUndefined(_this.footer)) {\n                if ((_this.expType === 'AppendToSheet' && !isMultipleExport) || (_this.expType === 'NewSheet')) {\n                    _this.processExcelFooter(_this.footer);\n                }\n            }\n            if (_this.columns.length > 0) {\n                _this.sheet.columns = _this.columns;\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            _this.sheet.rows = _this.rows;\n            _this.sheet.enableRtl = _this.parent.enableRtl;\n            if (_this.parent.allowFiltering && gObj.getVisibleColumns().length && isExportPropertiesPresent &&\n                exportProperties.enableFilter) {\n                var headerRowLen = exportProperties.header ? exportProperties.header.headerRows ||\n                    exportProperties.header.rows.length : 0;\n                var autoFilters = {\n                    row: colDepth + headerRowLen, column: _this.groupedColLength ? _this.groupedColLength + 1 :\n                        _this.sheet.columns[0].index, lastRow: _this.sheet.rows.length, lastColumn: _this.sheet.columns.length\n                };\n                _this.sheet.autoFilters = autoFilters;\n            }\n            _this.workSheet.push(_this.sheet);\n            _this.book.worksheets = _this.workSheet;\n            _this.book.styles = _this.styles;\n            gObj.notify('finalPageSetup', _this.book);\n            if (!isMultipleExport) {\n                if (_this.isCsvExport) {\n                    if (isExportPropertiesPresent && !isNullOrUndefined(exportProperties.separator)\n                        && exportProperties.separator !== ',') {\n                        separator = exportProperties.separator;\n                    }\n                    var book = new Workbook(_this.book, 'csv', gObj.locale, defaultCurrencyCode, separator);\n                    if (!_this.isBlob) {\n                        if (isExportPropertiesPresent && exportProperties.fileName) {\n                            book.save(exportProperties.fileName);\n                        }\n                        else {\n                            book.save('Export.csv');\n                        }\n                    }\n                    else {\n                        _this.blobPromise = book.saveAsBlob('text/csv');\n                    }\n                }\n                else {\n                    var book = new Workbook(_this.book, 'xlsx', gObj.locale, defaultCurrencyCode);\n                    if (!_this.isBlob) {\n                        if (isExportPropertiesPresent && exportProperties.fileName) {\n                            book.save(exportProperties.fileName);\n                        }\n                        else {\n                            book.save('Export.xlsx');\n                        }\n                    }\n                    else {\n                        _this.blobPromise = book.saveAsBlob('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\n                    }\n                }\n                if (_this.isElementIdChanged) {\n                    gObj.element.id = '';\n                }\n                delete gObj.expandedRows;\n            }\n            return workbook;\n        });\n    };\n    ExcelExport.prototype.organiseRows = function (rows, initialIndex, organisedRows) {\n        if (!rows.length) {\n            return initialIndex;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[parseInt(i.toString(), 10)];\n            var childRows = row.childRows;\n            if (childRows) {\n                row.index = initialIndex++;\n                delete row.childRows;\n                organisedRows.push(row);\n                initialIndex = this.organiseRows(childRows, initialIndex, organisedRows);\n            }\n            else {\n                row.index = initialIndex++;\n                organisedRows.push(row);\n            }\n        }\n        return initialIndex;\n    };\n    ExcelExport.prototype.processGridExport = function (gObj, exportProperties, r) {\n        var excelRows = [];\n        if (!isNullOrUndefined(exportProperties) && !isNullOrUndefined(exportProperties.theme)) {\n            this.theme = exportProperties.theme;\n        }\n        if ((gObj.childGrid || gObj.detailTemplate) && !isNullOrUndefined(exportProperties)) {\n            gObj.hierarchyPrintMode = exportProperties.hierarchyExportMode || 'Expanded';\n        }\n        var helper = new ExportHelper(gObj, this.helper.getForeignKeyData());\n        var gColumns = isExportColumns(exportProperties) ?\n            prepareColumns(exportProperties.columns, gObj.enableColumnVirtualization) :\n            helper.getGridExportColumns(gObj.columns);\n        var headerRow = helper.getHeaders(gColumns, this.includeHiddenColumn);\n        var groupIndent = gObj.groupSettings.columns.length ? gObj.groupSettings.columns.length - 1 : 0;\n        excelRows = this.processHeaderContent(gObj, headerRow, groupIndent, excelRows);\n        if (!isNullOrUndefined(exportProperties) && Object.keys(exportProperties).length &&\n            isNullOrUndefined(exportProperties.dataSource)) {\n            if (exportProperties.exportType === 'CurrentPage' && (!gObj.groupSettings.enableLazyLoading\n                || gObj.getDataModule().isRemote())) {\n                excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, gObj.currentViewData, excelRows, helper);\n            }\n            else {\n                excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n            }\n        }\n        else {\n            excelRows = this.processRecordContent(gObj, r, headerRow, exportProperties, undefined, excelRows, helper);\n        }\n        gObj.notify(events.exportDataBound, { excelRows: excelRows, type: 'excel' });\n        this.capTemplate = undefined;\n        this.footerTemplates = [];\n        this.grpFooterTemplates = [];\n        this.aggIndex = 0;\n        this.totalAggregates = 0;\n        return excelRows;\n    };\n    ExcelExport.prototype.processRecordContent = function (gObj, returnType, headerRow, exportProperties, currentViewRecords, excelRow, helper) {\n        var record;\n        if (!isNullOrUndefined(currentViewRecords) && currentViewRecords.length) {\n            record = currentViewRecords;\n        }\n        else {\n            record = returnType.result;\n        }\n        if (!isNullOrUndefined(record.level)) {\n            this.processGroupedRows(gObj, record, headerRow, record.level, 0, exportProperties, excelRow, helper);\n        }\n        else {\n            this.processRecordRows(gObj, record, headerRow, 0, 0, exportProperties, excelRow, helper);\n        }\n        if (!isNullOrUndefined(returnType.aggregates)) {\n            if (!isNullOrUndefined(currentViewRecords) && !this.parent.groupSettings.enableLazyLoading) {\n                this.processAggregates(gObj, returnType.result, excelRow, currentViewRecords);\n            }\n            else {\n                var result = returnType.result.GroupGuid ?\n                    returnType.result.records : returnType.result;\n                this.processAggregates(gObj, result, excelRow);\n            }\n        }\n        return excelRow;\n    };\n    ExcelExport.prototype.processGroupedRows = function (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    gObj, dataSource, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n        for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n            var item = dataSource_1[_i];\n            var cells = [];\n            var index = 1;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var cell = {};\n            cell.index = (index + level) - 1;\n            var col = gObj.getColumnByField(item.field);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var args = {\n                value: item.key,\n                column: col,\n                style: undefined,\n                isForeignKey: col.isForeignColumn()\n            };\n            var value = gObj.getColumnByField(item.field).headerText +\n                ': ' + (!col.enableGroupByFormat ? this.exportValueFormatter.formatCellValue(args) : item.key) + ' - ';\n            if (item.count > 1) {\n                value += item.count + ' items';\n            }\n            else {\n                value += item.count + ' item';\n            }\n            var cArgs = { captionText: value, type: this.isCsvExport ? 'CSV' : 'Excel', data: item };\n            this.parent.trigger(events.exportGroupCaption, cArgs);\n            cell.value = cArgs.captionText;\n            cell.style = this.getCaptionThemeStyle(this.theme);\n            if (!isNullOrUndefined(cArgs.style)) {\n                cell.style = this.mergeOptions(cell.style, cArgs.style);\n            }\n            var captionModelGen = new CaptionSummaryModelGenerator(gObj);\n            var groupCaptionSummaryRows = captionModelGen.generateRows(item);\n            this.fillAggregates(gObj, groupCaptionSummaryRows, (dataSource.level + dataSource.childLevels) - 1, excelRows, this.rowLength);\n            cells.push(cell);\n            if (excelRows[excelRows.length - 1].cells.length > 0) {\n                var lIndex = dataSource.level + dataSource.childLevels + groupCaptionSummaryRows[0].cells.length;\n                var hIndex = 0;\n                for (var _a = 0, _b = excelRows[excelRows.length - 1].cells; _a < _b.length; _a++) {\n                    var tCell = _b[_a];\n                    if (tCell.index < lIndex) {\n                        lIndex = tCell.index;\n                    }\n                    if (tCell.index > hIndex) {\n                        hIndex = tCell.index;\n                    }\n                    if (cells[cells.length - 1].index !== tCell.index) {\n                        cells.push(tCell);\n                    }\n                }\n                if ((lIndex - cell.index) > 1) {\n                    cell.colSpan = lIndex - cell.index;\n                }\n                while (hIndex < (headerRow.columns.length + level + dataSource.childLevels)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var sCell = {};\n                    sCell.index = (hIndex + 1);\n                    sCell.style = this.getCaptionThemeStyle(this.theme);\n                    cells.push(sCell);\n                    hIndex++;\n                }\n            }\n            else {\n                var span = 0;\n                //Calculation for column span when group caption dont have aggregates\n                for (var _c = 0, _d = headerRow.columns; _c < _d.length; _c++) {\n                    var col_1 = _d[_c];\n                    if (col_1.visible) {\n                        span++;\n                    }\n                }\n                cell.colSpan = (dataSource.childLevels + span);\n            }\n            excelRows[excelRows.length - 1].cells = cells;\n            this.rowLength++;\n            if (this.groupedColLength < 8 && level > 1) {\n                var grouping = { outlineLevel: level - 1, isCollapsed: true };\n                excelRows[excelRows.length - 1].grouping = grouping;\n            }\n            if (!isNullOrUndefined(dataSource.childLevels) && dataSource.childLevels > 0) {\n                this.processGroupedRows(gObj, item.items, headerRow, item.items.level, startIndex, excelExportProperties, excelRows, helper);\n                this.processAggregates(gObj, item, excelRows, undefined, (level - 1) + dataSource.childLevels, true);\n            }\n            else {\n                startIndex = this.processRecordRows(gObj, item.items, headerRow, (level - 1), startIndex, excelExportProperties, excelRows, helper);\n                this.processAggregates(gObj, item, excelRows, undefined, (level - 1), true);\n            }\n        }\n    };\n    ExcelExport.prototype.processRecordRows = function (gObj, record, headerRow, level, startIndex, excelExportProperties, excelRows, helper) {\n        var index = 1;\n        var cells = [];\n        var columns = headerRow.columns;\n        var rows = helper.getGridRowModel(columns, record, gObj, startIndex);\n        for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {\n            var row = rows_1[_i];\n            cells = [];\n            startIndex++;\n            index = 1;\n            var templateRowHeight = void 0;\n            for (var c = 0, len = row.cells.length; c < len; c++) {\n                var gCell = row.cells[parseInt(c.toString(), 10)];\n                if (gCell.cellType !== CellType.Data) {\n                    continue;\n                }\n                var column = gCell.column;\n                var field = column.field;\n                var cellValue = !isNullOrUndefined(field) ? column.valueAccessor(field, row.data, column) : '';\n                var value = !isNullOrUndefined(cellValue) ? cellValue : '';\n                if (column.type === 'dateonly' && typeof value === 'string' && value) {\n                    var arr = value.split(/[^0-9.]/);\n                    value = new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10));\n                }\n                var fkData = void 0;\n                if (column.isForeignColumn && column.isForeignColumn()) {\n                    fkData = helper.getFData(value, column);\n                    value = getValue(column.foreignKeyValue, fkData);\n                }\n                if (!isNullOrUndefined(value)) {\n                    var cell = {};\n                    var idx = index + level + gObj.childGridLevel;\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    var excelCellArgs = {\n                        data: row.data, column: column, foreignKeyData: fkData,\n                        value: value, style: undefined, colSpan: 1, cell: cell\n                    };\n                    gObj.trigger(events.excelQueryCellInfo, excelCellArgs);\n                    if (!isNullOrUndefined(excelCellArgs.image) && !isNullOrUndefined(excelCellArgs.image.base64)) {\n                        templateRowHeight = this.setImage(excelCellArgs, idx);\n                        if (excelCellArgs.image.height && excelCellArgs.value !== '') {\n                            templateRowHeight += 30;\n                        }\n                    }\n                    if (!isNullOrUndefined(excelCellArgs.hyperLink)) {\n                        excelCellArgs.cell.hyperlink = { target: excelCellArgs.hyperLink.target };\n                        excelCellArgs.value = excelCellArgs.hyperLink.displayText || excelCellArgs.value;\n                    }\n                    cell = excelCellArgs.cell;\n                    cell.index = idx;\n                    cell.value = excelCellArgs.value;\n                    if (excelCellArgs.data === '' && gObj.childGridLevel && index === 1) {\n                        var style = {};\n                        style.hAlign = 'left';\n                        excelCellArgs = { style: style };\n                        cell.colSpan = gObj.getVisibleColumns().length;\n                        cell.value = this.l10n.getConstant('EmptyRecord');\n                    }\n                    if (excelCellArgs.colSpan > 1) {\n                        cell.colSpan = excelCellArgs.colSpan;\n                    }\n                    if (!isNullOrUndefined(excelCellArgs.style)) {\n                        var styleIndex = this.getColumnStyle(gObj, index + level);\n                        cell.style = this.mergeOptions(this.styles[parseInt(styleIndex.toString(), 10)], excelCellArgs.style);\n                    }\n                    else {\n                        cell.style = { name: gObj.element.id + 'column' + (index + level) };\n                    }\n                    cells.push(cell);\n                }\n                index++;\n            }\n            var excelRow = { index: this.rowLength++, cells: cells };\n            if (!isNullOrUndefined(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                excelRow.height = templateRowHeight;\n            }\n            if (this.groupedColLength && this.groupedColLength < 8 && (level + 1) > 0) {\n                excelRow.grouping = { outlineLevel: (level + 1), isCollapsed: true };\n                excelRows.push(excelRow);\n            }\n            else {\n                excelRows.push(excelRow);\n            }\n            if ((row.isExpand || this.isChild) && (!isNullOrUndefined(gObj.childGrid) || !isNullOrUndefined(gObj.detailTemplate))) {\n                if (!isNullOrUndefined(gObj.childGrid)) {\n                    gObj.isPrinting = true;\n                    var exportType = (!isNullOrUndefined(excelExportProperties) && excelExportProperties.exportType) ?\n                        excelExportProperties.exportType : 'AllPages';\n                    var returnVal = this.helper.createChildGrid(gObj, row, exportType, this.gridPool);\n                    var childGridObj = returnVal.childGrid;\n                    var element = returnVal.element;\n                    childGridObj.actionFailure =\n                        helper.failureHandler(this.gridPool, childGridObj, this.globalResolve);\n                    childGridObj.childGridLevel = gObj.childGridLevel + 1;\n                    var childExportProperties = extend(excelExportProperties, {\n                        columns: null,\n                        dataSource: null,\n                        query: null\n                    });\n                    var args = { childGrid: childGridObj, row: row, exportProperties: childExportProperties };\n                    this.parent.trigger(events.exportDetailDataBound, args);\n                    childGridObj.beforeDataBound = this.childGridCell(excelRow, childGridObj, childExportProperties, row);\n                    childGridObj.appendTo(element);\n                }\n                else {\n                    var args = { parentRow: row, row: excelRow, value: {}, action: 'excelexport', gridInstance: gObj };\n                    this.parent.trigger(events.exportDetailTemplate, args);\n                    excelRow.childRows = this.processDetailTemplate(args);\n                }\n            }\n            gObj.notify(events.exportRowDataBound, { rowObj: row, type: 'excel', excelRows: excelRows });\n        }\n        return startIndex;\n    };\n    ExcelExport.prototype.processDetailTemplate = function (templateData) {\n        var _this = this;\n        var rows = [];\n        var templateRowHeight;\n        var detailIndent = 2;\n        var detailCellIndex;\n        if (templateData.value.columnHeader || templateData.value.rows) {\n            var processCell_1 = function (currentCell, isHeader) {\n                var cell = {};\n                if (isNullOrUndefined(currentCell.index)) {\n                    currentCell.index = detailCellIndex;\n                    detailCellIndex++;\n                }\n                cell.index = currentCell.index + detailIndent;\n                if (!isNullOrUndefined(currentCell.value)) {\n                    cell.value = currentCell.value;\n                }\n                if (!isNullOrUndefined(currentCell.colSpan)) {\n                    cell.colSpan = currentCell.colSpan;\n                }\n                if (!isNullOrUndefined(currentCell.rowSpan)) {\n                    cell.rowSpan = currentCell.rowSpan;\n                }\n                if (isHeader) {\n                    cell.style = _this.getHeaderThemeStyle(_this.theme);\n                }\n                else {\n                    cell.style = _this.getRecordThemeStyle(_this.theme);\n                }\n                if (!isNullOrUndefined(currentCell.style)) {\n                    var cellStyle = {\n                        fontColor: currentCell.style.fontColor,\n                        fontName: currentCell.style.fontName,\n                        fontSize: currentCell.style.fontSize,\n                        hAlign: currentCell.style.excelHAlign,\n                        vAlign: currentCell.style.excelVAlign,\n                        rotation: currentCell.style.excelRotation,\n                        bold: currentCell.style.bold,\n                        indent: currentCell.style.indent,\n                        italic: currentCell.style.italic,\n                        underline: currentCell.style.underline,\n                        backColor: currentCell.style.backColor,\n                        wrapText: currentCell.style.wrapText,\n                        borders: currentCell.style.excelBorders,\n                        numberFormat: currentCell.style.excelNumberFormat,\n                        type: currentCell.style.excelType,\n                        strikeThrough: currentCell.style.strikeThrough\n                    };\n                    cell.style = _this.mergeOptions(cellStyle, cell.style);\n                }\n                if (!isNullOrUndefined(currentCell.image) && !isNullOrUndefined(currentCell.image.base64)) {\n                    if (currentCell.rowSpan > 1) {\n                        _this.setImage(currentCell, cell.index);\n                    }\n                    else {\n                        templateRowHeight = _this.setImage(currentCell, cell.index);\n                        if (currentCell.image.height && currentCell.value !== '') {\n                            templateRowHeight += 30;\n                        }\n                    }\n                }\n                if (!isNullOrUndefined(currentCell.hyperLink)) {\n                    cell.hyperlink = { target: currentCell.hyperLink.target };\n                    cell.value = currentCell.hyperLink.displayText;\n                }\n                return cell;\n            };\n            var processRow = function (currentRow, isHeader) {\n                var excelDetailCells = [];\n                detailCellIndex = 0;\n                for (var j = 0; j < currentRow.cells.length; j++) {\n                    var currentCell = currentRow.cells[parseInt(j.toString(), 10)];\n                    var detailCell = processCell_1(currentCell, isHeader);\n                    excelDetailCells.push(detailCell);\n                }\n                var row = { index: _this.rowLength++, cells: excelDetailCells };\n                if (!isNullOrUndefined(templateRowHeight)) {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    row.height = templateRowHeight;\n                    templateRowHeight = null;\n                }\n                rows.push(row);\n            };\n            if (templateData.value.columnHeader) {\n                for (var i = 0; i < templateData.value.columnHeader.length; i++) {\n                    processRow(templateData.value.columnHeader[parseInt(i.toString(), 10)], true);\n                }\n            }\n            if (templateData.value.rows) {\n                for (var i = 0; i < templateData.value.rows.length; i++) {\n                    processRow(templateData.value.rows[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        else if (templateData.value.image) {\n            templateRowHeight = this.setImage(templateData.value, detailIndent);\n            var row = {\n                index: this.rowLength++,\n                cells: [{\n                        index: detailIndent,\n                        style: this.getRecordThemeStyle(this.theme)\n                    }]\n            };\n            if (!isNullOrUndefined(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                row.height = templateRowHeight;\n                templateRowHeight = null;\n            }\n            rows.push(row);\n        }\n        else if (templateData.value.text) {\n            var row = {\n                index: this.rowLength++,\n                cells: [{\n                        index: detailIndent,\n                        value: templateData.value.text,\n                        style: this.getRecordThemeStyle(this.theme)\n                    }]\n            };\n            rows.push(row);\n        }\n        else if (templateData.value.hyperLink) {\n            var row = {\n                index: this.rowLength++,\n                cells: [{\n                        index: 2,\n                        hyperlink: { target: templateData.value.hyperLink.target },\n                        value: templateData.value.hyperLink.displayText,\n                        style: this.getRecordThemeStyle(this.theme)\n                    }]\n            };\n            rows.push(row);\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].grouping = {\n                outlineLevel: 1, isCollapsed: !templateData.parentRow.isExpand, isHidden: !templateData.parentRow.isExpand\n            };\n        }\n        return rows;\n    };\n    ExcelExport.prototype.setImage = function (args, idx) {\n        if (isNullOrUndefined(this.sheet.images)) {\n            this.sheet.images = [];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var excelImage = {\n            image: args.image.base64, row: this.rowLength, column: idx,\n            lastRow: this.rowLength, lastColumn: idx\n        };\n        if (args.image.width && args.image.height) {\n            excelImage.width = args.image.width;\n            excelImage.height = args.image.height;\n        }\n        this.sheet.images.push(excelImage);\n        this.columns[idx - 1].width = args.image.width || this.columns[idx - 1].width;\n        return args.image.height || 50;\n    };\n    ExcelExport.prototype.childGridCell = function (excelRow, childGridObj, excelExportProps, gRow) {\n        var _this = this;\n        return function (result) {\n            childGridObj.beforeDataBound = null;\n            result.cancel = true;\n            if (result.result.length === 0) {\n                result.result = [''];\n            }\n            excelRow.childRows = _this.processGridExport(childGridObj, excelExportProps, result);\n            var intent = _this.parent.groupSettings.columns.length;\n            var rows = excelRow.childRows;\n            for (var i = 0; i < rows.length; i++) {\n                rows[parseInt(i.toString(), 10)].grouping = { outlineLevel: intent + childGridObj\n                        .childGridLevel, isCollapsed: !gRow.isExpand, isHidden: !gRow.isExpand };\n            }\n            childGridObj.destroy();\n            detach(childGridObj.element);\n            _this.gridPool[childGridObj.id] = true;\n            _this.helper.checkAndExport(_this.gridPool, _this.globalResolve);\n            return excelRow;\n        };\n    };\n    ExcelExport.prototype.processAggregates = function (gObj, rec, excelRows, currentViewRecords, indent, byGroup) {\n        var summaryModel = new SummaryModelGenerator(gObj);\n        var columns = summaryModel.getColumns();\n        columns = columns.filter(function (col) { return isNullOrUndefined(col.commands) && col.type !== 'checkbox'; });\n        if (gObj.aggregates.length && this.parent !== gObj) {\n            gObj.aggregateModule.prepareSummaryInfo();\n        }\n        var data = undefined;\n        if (!isNullOrUndefined(currentViewRecords)) {\n            data = currentViewRecords;\n        }\n        else {\n            data = rec;\n        }\n        if (indent === undefined) {\n            indent = 0;\n        }\n        if (gObj.groupSettings.columns.length > 0 && byGroup) {\n            var groupSummaryModel = new GroupSummaryModelGenerator(gObj);\n            var groupSummaryRows = groupSummaryModel.generateRows(data, { level: data.level });\n            if (groupSummaryRows.length > 0) {\n                excelRows = this.fillAggregates(gObj, groupSummaryRows, indent, excelRows);\n            }\n        }\n        else {\n            indent = gObj.groupSettings.columns.length > 0 && !byGroup ? gObj.groupSettings.columns.length : indent;\n            var sRows = summaryModel.generateRows(data, rec.aggregates, null, null, columns);\n            if (sRows.length > 0 && !byGroup) {\n                indent = gObj.groupSettings.columns.length ? indent - 1 : indent;\n                excelRows = this.fillAggregates(gObj, sRows, indent, excelRows);\n            }\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.fillAggregates = function (gObj, rows, indent, excelRows, customIndex) {\n        for (var _i = 0, rows_2 = rows; _i < rows_2.length; _i++) {\n            var row = rows_2[_i];\n            var cells = [];\n            var isEmpty = true;\n            var index = 0;\n            for (var _a = 0, _b = row.cells; _a < _b.length; _a++) {\n                var cell = _b[_a];\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var eCell = {};\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var columnsDetails = {};\n                if (!isNullOrUndefined(cell.attributes.index)) {\n                    columnsDetails = this.parent.getColumnByIndex(cell.attributes.index);\n                }\n                if (cell.cellType === CellType.DetailFooterIntent || columnsDetails.type === 'checkbox' || columnsDetails.commands) {\n                    continue;\n                }\n                if ((cell.visible || this.includeHiddenColumn)) {\n                    index++;\n                    if (cell.isDataCell) {\n                        isEmpty = false;\n                        var footerTemplate = !isNullOrUndefined(cell.column.footerTemplate);\n                        var groupFooterTemplate = !isNullOrUndefined(cell.column.groupFooterTemplate);\n                        var groupCaptionTemplate = !isNullOrUndefined(cell.column.groupCaptionTemplate);\n                        eCell.index = index + indent + gObj.childGridLevel;\n                        if (footerTemplate) {\n                            eCell.value = this.getAggreateValue(gObj, CellType.Summary, cell.column.footerTemplate, cell, row);\n                        }\n                        else if (groupFooterTemplate) {\n                            eCell.value = this.getAggreateValue(gObj, CellType.GroupSummary, cell.column.groupFooterTemplate, cell, row);\n                        }\n                        else if (groupCaptionTemplate) {\n                            eCell.value = this.getAggreateValue(gObj, CellType.CaptionSummary, cell.column.groupCaptionTemplate, cell, row);\n                        }\n                        else {\n                            for (var _c = 0, _d = Object.keys(row.data[cell.column.field]); _c < _d.length; _c++) {\n                                var key = _d[_c];\n                                if (key === cell.column.type) {\n                                    if (!isNullOrUndefined(row.data[cell.column.field].Sum)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - sum\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Average)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - average\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Max)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - max\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Min)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - min\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Count)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - count\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].TrueCount)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - truecount\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].FalseCount)) {\n                                        eCell.value = row.data[cell.column.field][cell.column.field + \" - falsecount\"];\n                                    }\n                                    else if (!isNullOrUndefined(row.data[cell.column.field].Custom)) {\n                                        eCell.value = row.data[cell.column.field].Custom;\n                                    }\n                                }\n                            }\n                        }\n                        eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n                        this.aggregateStyle(cell.column, eCell.style, cell.column.field);\n                        var gridCellStyle = cell.attributes.style;\n                        if (gridCellStyle.textAlign) {\n                            eCell.style.hAlign = gridCellStyle.textAlign.toLowerCase();\n                        }\n                        var args = {\n                            row: row,\n                            type: footerTemplate ? 'Footer' : groupFooterTemplate ? 'GroupFooter' : 'GroupCaption',\n                            style: eCell,\n                            cell: cell\n                        };\n                        this.parent.trigger(events.excelAggregateQueryCellInfo, args);\n                        cells.push(eCell);\n                    }\n                    else {\n                        if (customIndex === undefined) {\n                            eCell.index = index + indent + gObj.childGridLevel;\n                            eCell.style = this.getCaptionThemeStyle(this.theme); //{ name: gObj.element.id + 'column' + index };\n                            cells.push(eCell);\n                        }\n                    }\n                }\n            }\n            if (!isNullOrUndefined(customIndex)) {\n                excelRows.push({ index: customIndex, cells: cells });\n            }\n            else {\n                var row_1 = {};\n                var dummyOutlineLevel = 'outlineLevel';\n                var dummyGrouping = 'grouping';\n                if (this.groupedColLength < 8 && this.groupedColLength > 0 && !(gObj.groupSettings.enableLazyLoading && isNullOrUndefined(excelRows[excelRows.length - 1][\"\" + dummyGrouping]))) {\n                    var level = excelRows[excelRows.length - 1][\"\" + dummyGrouping][\"\" + dummyOutlineLevel];\n                    var grouping = { outlineLevel: level, isCollapsed: true };\n                    row_1 = { index: this.rowLength++, cells: cells, grouping: grouping };\n                }\n                else {\n                    row_1 = { index: this.rowLength++, cells: cells };\n                }\n                if (!isEmpty) {\n                    excelRows.push(row_1);\n                }\n            }\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.aggregateStyle = function (col, style, field) {\n        var column = this.parent.getColumnByField(field);\n        if (typeof col.format === 'object') {\n            var format = col.format;\n            style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n            if (!isNullOrUndefined(format.type)) {\n                style.type = format.type.toLowerCase();\n            }\n        }\n        else {\n            style.numberFormat = col.format;\n        }\n        if (!isNullOrUndefined(column) && isNullOrUndefined(style.type)) {\n            style.type = column.type.toLowerCase();\n        }\n    };\n    ExcelExport.prototype.getAggreateValue = function (gObj, cellType, template, cell, row) {\n        var templateFn = {};\n        templateFn[getEnumValue(CellType, cell.cellType)] = compile(template);\n        var txt;\n        var data = row.data[cell.column.field ? cell.column.field : cell.column.columnName];\n        if ((this.parent.isReact || this.parent.isVue || this.parent.isVue3 || this.parent.isAngular) &&\n            !(typeof cell.column.footerTemplate === 'string' || typeof cell.column.groupFooterTemplate === 'string' || typeof cell.column.groupCaptionTemplate === 'string')) {\n            txt = data[(cell.column.type)];\n            return !isNullOrUndefined(txt) ? (txt) : '';\n        }\n        else {\n            txt = (templateFn[getEnumValue(CellType, cell.cellType)](data, this.parent));\n            if (this.parent.isVue3 && !isNullOrUndefined(txt[1])) {\n                return txt[1].textContent;\n            }\n        }\n        return !isNullOrUndefined(txt[0]) ? txt[0].textContent : '';\n    };\n    ExcelExport.prototype.mergeOptions = function (JSON1, JSON2) {\n        var result = {};\n        var attrname = Object.keys(JSON1);\n        for (var index = 0; index < attrname.length; index++) {\n            if (attrname[parseInt(index.toString(), 10)] !== 'name') {\n                result[attrname[parseInt(index.toString(), 10)]] = JSON1[attrname[parseInt(index.toString(), 10)]];\n            }\n        }\n        attrname = Object.keys(JSON2);\n        for (var index = 0; index < attrname.length; index++) {\n            if (attrname[parseInt(index.toString(), 10)] !== 'name') {\n                result[attrname[parseInt(index.toString(), 10)]] = JSON2[attrname[parseInt(index.toString(), 10)]];\n            }\n        }\n        return result;\n    };\n    ExcelExport.prototype.getColumnStyle = function (gObj, columnIndex) {\n        var index = 0;\n        for (var _i = 0, _a = this.styles; _i < _a.length; _i++) {\n            var style = _a[_i];\n            if (style.name === gObj.element.id + 'column' + columnIndex) {\n                return index;\n            }\n            index++;\n        }\n        return undefined;\n    };\n    ExcelExport.prototype.headerRotation = function (args) {\n        var degree = args.style.rotation;\n        if (degree <= 90 && degree >= 0) {\n            args.style.hAlign = 'Left';\n        }\n        else if (degree > 90 && degree <= 180) {\n            args.style.hAlign = 'Right';\n        }\n        else {\n            degree = 180;\n            args.style.hAlign = 'Right';\n        }\n        args.style.rotation = degree;\n    };\n    ExcelExport.prototype.processHeaderContent = function (gObj, headerRow, indent, excelRows) {\n        var rowIndex = 1;\n        var gridRows = headerRow.rows;\n        // Column collection with respect to the records in the grid\n        var gridColumns = headerRow.columns;\n        var spannedCells = [];\n        if (indent > 0) {\n            var index = 0;\n            while (index !== indent) {\n                this.columns.push({ index: index + 1, width: 30 });\n                index++;\n            }\n        }\n        for (var col = 0; col < gridColumns.length; col++) {\n            this.parseStyles(gObj, gridColumns[parseInt(col.toString(), 10)], this.getRecordThemeStyle(this.theme), indent + col + 1);\n        }\n        var templateRowHeight;\n        for (var row = 0; row < gridRows.length; row++) {\n            var currentCellIndex = 1 + indent;\n            var cells = [];\n            for (var column = 0; column < gridRows[parseInt(row.toString(), 10)].cells.length; column++) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var style = {};\n                var cell = {};\n                var gridCell = gridRows[parseInt(row.toString(), 10)].cells[parseInt(column.toString(), 10)];\n                if (gridCell.cellType === CellType.HeaderIndent || gridCell.cellType === CellType.DetailHeader) {\n                    continue;\n                }\n                var result = { contains: true, index: 1 };\n                while (result.contains) {\n                    result = this.getIndex(spannedCells, rowIndex, currentCellIndex);\n                    currentCellIndex = result.index;\n                    if (!result.contains) {\n                        cell.index = result.index + gObj.childGridLevel;\n                        break;\n                    }\n                }\n                if (!isNullOrUndefined(gridCell.rowSpan) && gridCell.rowSpan !== 1) {\n                    cell.rowSpan = gridCell.rowSpan;\n                    for (var i = rowIndex; i < gridCell.rowSpan + rowIndex; i++) {\n                        var spannedCell = { rowIndex: 0, columnIndex: 0 };\n                        spannedCell.rowIndex = i;\n                        spannedCell.columnIndex = currentCellIndex;\n                        spannedCells.push(spannedCell);\n                    }\n                }\n                if (!isNullOrUndefined(gridCell.colSpan) && gridCell.colSpan !== 1) {\n                    cell.colSpan = gridCell.colSpan;\n                    currentCellIndex = currentCellIndex + cell.colSpan - 1;\n                }\n                cell.value = gridCell.column.headerText;\n                style = this.getHeaderThemeStyle(this.theme);\n                if (!isNullOrUndefined(gridCell.column.textAlign)) {\n                    style.hAlign = gridCell.column.textAlign.toLowerCase();\n                }\n                if (!isNullOrUndefined(gridCell.column.headerTextAlign)) {\n                    style.hAlign = gridCell.column.headerTextAlign.toLowerCase();\n                }\n                var excelHeaderCellArgs = { cell: cell, gridCell: gridCell, style: style };\n                gObj.trigger(events.excelHeaderQueryCellInfo, excelHeaderCellArgs);\n                if (excelHeaderCellArgs.style.rotation) {\n                    this.headerRotation(excelHeaderCellArgs);\n                }\n                if (!isNullOrUndefined(excelHeaderCellArgs.image) && !isNullOrUndefined(excelHeaderCellArgs.image.base64)) {\n                    templateRowHeight = this.setImage(excelHeaderCellArgs, currentCellIndex);\n                }\n                if (!isNullOrUndefined(excelHeaderCellArgs.hyperLink)) {\n                    excelHeaderCellArgs.cell.hyperlink = { target: excelHeaderCellArgs.hyperLink.target };\n                    cell.value = excelHeaderCellArgs.hyperLink.displayText || cell.value;\n                }\n                cell.style = excelHeaderCellArgs.style;\n                cells.push(cell);\n                currentCellIndex++;\n            }\n            var excelRow = { index: this.rowLength++, cells: cells };\n            if (!isNullOrUndefined(templateRowHeight)) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                excelRow.height = templateRowHeight;\n            }\n            excelRows.push(excelRow);\n        }\n        return excelRows;\n    };\n    ExcelExport.prototype.getHeaderThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 12;\n        style.borders = { color: '#E0E0E0' };\n        style.bold = true;\n        if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.header)) {\n            style = this.updateThemeStyle(theme.header, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.updateThemeStyle = function (themestyle, style) {\n        return extend(style, themestyle);\n    };\n    ExcelExport.prototype.getCaptionThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 13;\n        style.backColor = '#F6F6F6';\n        if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.caption)) {\n            style = this.updateThemeStyle(theme.caption, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.getRecordThemeStyle = function (theme) {\n        var style = {};\n        style.fontSize = 13;\n        style.borders = { color: '#E0E0E0' };\n        if (!isNullOrUndefined(theme) && !isNullOrUndefined(theme.record)) {\n            style = this.updateThemeStyle(theme.record, style);\n        }\n        return style;\n    };\n    ExcelExport.prototype.processExcelHeader = function (header) {\n        if (!isNullOrUndefined(header.rows) && (this.expType === 'NewSheet' || this.rowLength === 1)) {\n            var noRows = void 0;\n            if (header.headerRows === undefined) {\n                this.rowLength = header.rows.length;\n            }\n            else {\n                this.rowLength = header.headerRows;\n            }\n            if (this.rowLength < header.rows.length) {\n                noRows = this.rowLength;\n            }\n            else {\n                noRows = header.rows.length;\n            }\n            this.rowLength++;\n            for (var row = 0; row < noRows; row++) {\n                var json = header.rows[parseInt(row.toString(), 10)];\n                //Row index\n                if (!(json.index !== null && !isNullOrUndefined(json.index))) {\n                    json.index = (row + 1);\n                }\n                this.updatedCellIndex(json);\n            }\n        }\n    };\n    ExcelExport.prototype.updatedCellIndex = function (json) {\n        var cellsLength = json.cells.length;\n        for (var cellId = 0; cellId < cellsLength; cellId++) {\n            var jsonCell = json.cells[parseInt(cellId.toString(), 10)];\n            //cell index\n            if (!(jsonCell.index !== null && !isNullOrUndefined(jsonCell.index))) {\n                jsonCell.index = (cellId + 1);\n            }\n        }\n        this.rows.push(json);\n    };\n    ExcelExport.prototype.processExcelFooter = function (footer) {\n        if (!isNullOrUndefined(footer.rows)) {\n            var noRows = void 0;\n            if (footer.footerRows === undefined) {\n                this.rowLength += footer.rows.length;\n            }\n            else {\n                if (footer.footerRows > footer.rows.length) {\n                    this.rowLength += (footer.footerRows - footer.rows.length);\n                    noRows = footer.rows.length;\n                }\n                else {\n                    noRows = footer.footerRows;\n                }\n            }\n            for (var row = 0; row < noRows; row++) {\n                var json = footer.rows[parseInt(row.toString(), 10)];\n                //Row index\n                if (json.index === null || json.index === undefined) {\n                    json.index = this.rowLength++;\n                }\n                else {\n                    json.index += this.rowLength;\n                }\n                this.updatedCellIndex(json);\n            }\n        }\n    };\n    ExcelExport.prototype.getIndex = function (spannedCells, rowIndex, columnIndex) {\n        for (var _i = 0, spannedCells_1 = spannedCells; _i < spannedCells_1.length; _i++) {\n            var spannedCell = spannedCells_1[_i];\n            if ((spannedCell.rowIndex === rowIndex) && (spannedCell.columnIndex === columnIndex)) {\n                columnIndex = columnIndex + 1;\n                return { contains: true, index: columnIndex };\n            }\n        }\n        return { contains: false, index: columnIndex };\n    };\n    ExcelExport.prototype.parseStyles = function (gObj, col, style, index) {\n        if (!isNullOrUndefined(col.format)) {\n            if (typeof col.format === 'object') {\n                var format = col.format;\n                style.numberFormat = !isNullOrUndefined(format.format) ? format.format : format.skeleton;\n                if (!isNullOrUndefined(format.type)) {\n                    style.type = format.type === 'dateonly' ? 'date' : format.type.toLowerCase();\n                }\n            }\n            else {\n                style.numberFormat = col.format;\n                style.type = col.type === 'dateonly' ? 'date' : col.type;\n            }\n        }\n        if (!isNullOrUndefined(col.textAlign)) {\n            style.hAlign = col.textAlign.toLowerCase();\n        }\n        if (Object.keys(style).length > 0) {\n            style.name = gObj.element.id + 'column' + index;\n            this.styles.push(style);\n        }\n        if (!isNullOrUndefined(col.width) && col.width !== 'auto' && !gObj.childGridLevel) {\n            this.columns.push({ index: index + gObj.childGridLevel, width: typeof col.width === 'number' ?\n                    col.width : this.helper.getConvertedWidth(col.width) });\n        }\n    };\n    ExcelExport.prototype.destroy = function () {\n        //destroy for exporting\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}