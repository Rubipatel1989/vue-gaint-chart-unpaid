{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * Node appending methods.\n *\n * @hidden\n */\nvar InsertMethods = /** @class */function () {\n  function InsertMethods() {}\n  /**\n   * WrapBefore method\n   *\n   * @param {Text} textNode - specifies the text node\n   * @param {HTMLElement} parentNode - specifies the parent node\n   * @param {boolean} isAfter - specifies the boolean value\n   * @returns {Text} - returns the text value\n   * @hidden\n    */\n  InsertMethods.WrapBefore = function (textNode, parentNode, isAfter) {\n    parentNode.innerText = textNode.textContent;\n    //eslint-disable-next-line\n    !isAfter ? this.AppendBefore(parentNode, textNode) : this.AppendBefore(parentNode, textNode, true);\n    if (textNode.parentNode) {\n      textNode.parentNode.removeChild(textNode);\n    }\n    return parentNode.childNodes[0];\n  };\n  /**\n   * Wrap method\n   *\n   * @param {HTMLElement} childNode - specifies the child node\n   * @param {HTMLElement} parentNode - specifies the parent node.\n   * @returns {HTMLElement} - returns the element\n   * @hidden\n    */\n  InsertMethods.Wrap = function (childNode, parentNode) {\n    this.AppendBefore(parentNode, childNode);\n    parentNode.appendChild(childNode);\n    return childNode;\n  };\n  /**\n   * unwrap method\n   *\n   * @param {Node} node - specifies the node element.\n   * @returns {Node[]} - returns the array of value\n   * @hidden\n    */\n  InsertMethods.unwrap = function (node) {\n    var parent = node.parentNode;\n    var child = [];\n    for (; node.firstChild; null) {\n      child.push(parent.insertBefore(node.firstChild, node));\n    }\n    parent.removeChild(node);\n    return child;\n  };\n  /**\n   * AppendBefore method\n   *\n   * @param {HTMLElement} textNode - specifies the element\n   * @param {HTMLElement} parentNode - specifies the parent node\n   * @param {boolean} isAfter - specifies the boolean value\n   * @returns {void}\n   * @hidden\n    */\n  InsertMethods.AppendBefore = function (textNode, parentNode, isAfter) {\n    return parentNode.parentNode ? !isAfter ? parentNode.parentNode.insertBefore(textNode, parentNode) : parentNode.parentNode.insertBefore(textNode, parentNode.nextSibling) : parentNode;\n  };\n  return InsertMethods;\n}();\nexport { InsertMethods };","map":{"version":3,"names":["InsertMethods","WrapBefore","textNode","parentNode","isAfter","innerText","textContent","AppendBefore","removeChild","childNodes","Wrap","childNode","appendChild","unwrap","node","parent","child","firstChild","push","insertBefore","nextSibling"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-richtexteditor/src/editor-manager/plugin/insert-methods.js"],"sourcesContent":["/**\n * Node appending methods.\n *\n * @hidden\n */\nvar InsertMethods = /** @class */ (function () {\n    function InsertMethods() {\n    }\n    /**\n     * WrapBefore method\n     *\n     * @param {Text} textNode - specifies the text node\n     * @param {HTMLElement} parentNode - specifies the parent node\n     * @param {boolean} isAfter - specifies the boolean value\n     * @returns {Text} - returns the text value\n     * @hidden\n\n     */\n    InsertMethods.WrapBefore = function (textNode, parentNode, isAfter) {\n        parentNode.innerText = textNode.textContent;\n        //eslint-disable-next-line\n        (!isAfter) ? this.AppendBefore(parentNode, textNode) : this.AppendBefore(parentNode, textNode, true);\n        if (textNode.parentNode) {\n            textNode.parentNode.removeChild(textNode);\n        }\n        return parentNode.childNodes[0];\n    };\n    /**\n     * Wrap method\n     *\n     * @param {HTMLElement} childNode - specifies the child node\n     * @param {HTMLElement} parentNode - specifies the parent node.\n     * @returns {HTMLElement} - returns the element\n     * @hidden\n\n     */\n    InsertMethods.Wrap = function (childNode, parentNode) {\n        this.AppendBefore(parentNode, childNode);\n        parentNode.appendChild(childNode);\n        return childNode;\n    };\n    /**\n     * unwrap method\n     *\n     * @param {Node} node - specifies the node element.\n     * @returns {Node[]} - returns the array of value\n     * @hidden\n\n     */\n    InsertMethods.unwrap = function (node) {\n        var parent = node.parentNode;\n        var child = [];\n        for (; node.firstChild; null) {\n            child.push(parent.insertBefore(node.firstChild, node));\n        }\n        parent.removeChild(node);\n        return child;\n    };\n    /**\n     * AppendBefore method\n     *\n     * @param {HTMLElement} textNode - specifies the element\n     * @param {HTMLElement} parentNode - specifies the parent node\n     * @param {boolean} isAfter - specifies the boolean value\n     * @returns {void}\n     * @hidden\n\n     */\n    InsertMethods.AppendBefore = function (textNode, parentNode, isAfter) {\n        return (parentNode.parentNode) ? ((!isAfter) ? parentNode.parentNode.insertBefore(textNode, parentNode)\n            : parentNode.parentNode.insertBefore(textNode, parentNode.nextSibling)) :\n            parentNode;\n    };\n    return InsertMethods;\n}());\nexport { InsertMethods };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA,IAAIA,aAAa,GAAG,aAAe,YAAY;EAC3C,SAASA,aAAaA,CAAA,EAAG,CACzB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEIA,aAAa,CAACC,UAAU,GAAG,UAAUC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,EAAE;IAChED,UAAU,CAACE,SAAS,GAAGH,QAAQ,CAACI,WAAW;IAC3C;IACC,CAACF,OAAO,GAAI,IAAI,CAACG,YAAY,CAACJ,UAAU,EAAED,QAAQ,CAAC,GAAG,IAAI,CAACK,YAAY,CAACJ,UAAU,EAAED,QAAQ,EAAE,IAAI,CAAC;IACpG,IAAIA,QAAQ,CAACC,UAAU,EAAE;MACrBD,QAAQ,CAACC,UAAU,CAACK,WAAW,CAACN,QAAQ,CAAC;IAC7C;IACA,OAAOC,UAAU,CAACM,UAAU,CAAC,CAAC,CAAC;EACnC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EAEIT,aAAa,CAACU,IAAI,GAAG,UAAUC,SAAS,EAAER,UAAU,EAAE;IAClD,IAAI,CAACI,YAAY,CAACJ,UAAU,EAAEQ,SAAS,CAAC;IACxCR,UAAU,CAACS,WAAW,CAACD,SAAS,CAAC;IACjC,OAAOA,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EAEIX,aAAa,CAACa,MAAM,GAAG,UAAUC,IAAI,EAAE;IACnC,IAAIC,MAAM,GAAGD,IAAI,CAACX,UAAU;IAC5B,IAAIa,KAAK,GAAG,EAAE;IACd,OAAOF,IAAI,CAACG,UAAU,EAAE,IAAI,EAAE;MAC1BD,KAAK,CAACE,IAAI,CAACH,MAAM,CAACI,YAAY,CAACL,IAAI,CAACG,UAAU,EAAEH,IAAI,CAAC,CAAC;IAC1D;IACAC,MAAM,CAACP,WAAW,CAACM,IAAI,CAAC;IACxB,OAAOE,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEIhB,aAAa,CAACO,YAAY,GAAG,UAAUL,QAAQ,EAAEC,UAAU,EAAEC,OAAO,EAAE;IAClE,OAAQD,UAAU,CAACA,UAAU,GAAM,CAACC,OAAO,GAAID,UAAU,CAACA,UAAU,CAACgB,YAAY,CAACjB,QAAQ,EAAEC,UAAU,CAAC,GACjGA,UAAU,CAACA,UAAU,CAACgB,YAAY,CAACjB,QAAQ,EAAEC,UAAU,CAACiB,WAAW,CAAC,GACtEjB,UAAU;EAClB,CAAC;EACD,OAAOH,aAAa;AACxB,CAAC,CAAC,CAAE;AACJ,SAASA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}