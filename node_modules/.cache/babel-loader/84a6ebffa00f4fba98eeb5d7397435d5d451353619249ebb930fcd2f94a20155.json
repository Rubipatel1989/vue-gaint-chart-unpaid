{"ast":null,"code":"import Gantt from \"gantt-schedule-timeline-calendar\"; // Default import\nimport { onMounted, onBeforeUnmount } from \"vue\"; // Import Vue 3 lifecycle hooks\n\nexport default {\n  name: \"TimeGantt\",\n  setup() {\n    let gstcInstance; // Declare the Gantt instance\n\n    // Initialize the Gantt chart on component mount\n    onMounted(() => {\n      gstcInstance = Gantt({\n        element: document.getElementById(\"gantt\"),\n        // Attach to the DOM element\n        state: {\n          config: {\n            list: {\n              rows: {\n                // Define the rows for the Gantt chart\n                P001: {\n                  id: \"P001\",\n                  label: \"Product A\"\n                },\n                P002: {\n                  id: \"P002\",\n                  label: \"Product B\"\n                }\n              }\n            },\n            chart: {\n              items: {\n                // Define the items (tasks) in the chart\n                task1: {\n                  id: \"task1\",\n                  label: \"Selling Product A\",\n                  time: {\n                    start: new Date(\"2024-12-01\").getTime(),\n                    end: new Date(\"2024-12-10\").getTime()\n                  },\n                  rowId: \"P001\"\n                },\n                task2: {\n                  id: \"task2\",\n                  label: \"Selling Product B\",\n                  time: {\n                    start: new Date(\"2024-12-02\").getTime(),\n                    end: new Date(\"2024-12-07\").getTime()\n                  },\n                  rowId: \"P002\"\n                }\n              }\n            }\n          }\n        }\n      });\n    });\n\n    // Destroy the Gantt instance on component unmount\n    onBeforeUnmount(() => {\n      if (gstcInstance) {\n        gstcInstance.destroy();\n      }\n    });\n  }\n};","map":{"version":3,"names":["Gantt","onMounted","onBeforeUnmount","name","setup","gstcInstance","element","document","getElementById","state","config","list","rows","P001","id","label","P002","chart","items","task1","time","start","Date","getTime","end","rowId","task2","destroy"],"sources":["/var/www/vue/vue-gantt-chart/src/components/TimeGantt.vue"],"sourcesContent":["<template>\n       <div id=\"gantt\"></div>\n     </template>\n     \n     <script>\n     import Gantt from \"gantt-schedule-timeline-calendar\"; // Default import\n     import { onMounted, onBeforeUnmount } from \"vue\"; // Import Vue 3 lifecycle hooks\n     \n     export default {\n       name: \"TimeGantt\",\n       setup() {\n         let gstcInstance; // Declare the Gantt instance\n     \n         // Initialize the Gantt chart on component mount\n         onMounted(() => {\n           gstcInstance = Gantt({\n             element: document.getElementById(\"gantt\"), // Attach to the DOM element\n             state: {\n               config: {\n                 list: {\n                   rows: {\n                     // Define the rows for the Gantt chart\n                     P001: { id: \"P001\", label: \"Product A\" },\n                     P002: { id: \"P002\", label: \"Product B\" },\n                   },\n                 },\n                 chart: {\n                   items: {\n                     // Define the items (tasks) in the chart\n                     task1: {\n                       id: \"task1\",\n                       label: \"Selling Product A\",\n                       time: {\n                         start: new Date(\"2024-12-01\").getTime(),\n                         end: new Date(\"2024-12-10\").getTime(),\n                       },\n                       rowId: \"P001\",\n                     },\n                     task2: {\n                       id: \"task2\",\n                       label: \"Selling Product B\",\n                       time: {\n                         start: new Date(\"2024-12-02\").getTime(),\n                         end: new Date(\"2024-12-07\").getTime(),\n                       },\n                       rowId: \"P002\",\n                     },\n                   },\n                 },\n               },\n             },\n           });\n         });\n     \n         // Destroy the Gantt instance on component unmount\n         onBeforeUnmount(() => {\n           if (gstcInstance) {\n             gstcInstance.destroy();\n           }\n         });\n       },\n     };\n     </script>\n     \n     <style>\n     #gantt {\n       width: 100%;\n       height: 500px;\n       border: 1px solid #ccc;\n     }\n     </style>\n     "],"mappings":"AAKK,OAAOA,KAAI,MAAO,kCAAkC,EAAE;AACtD,SAASC,SAAS,EAAEC,eAAc,QAAS,KAAK,EAAE;;AAElD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,IAAIC,YAAY,EAAE;;IAElB;IACAJ,SAAS,CAAC,MAAM;MACdI,YAAW,GAAIL,KAAK,CAAC;QACnBM,OAAO,EAAEC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;QAAE;QAC3CC,KAAK,EAAE;UACLC,MAAM,EAAE;YACNC,IAAI,EAAE;cACJC,IAAI,EAAE;gBACJ;gBACAC,IAAI,EAAE;kBAAEC,EAAE,EAAE,MAAM;kBAAEC,KAAK,EAAE;gBAAY,CAAC;gBACxCC,IAAI,EAAE;kBAAEF,EAAE,EAAE,MAAM;kBAAEC,KAAK,EAAE;gBAAY;cACzC;YACF,CAAC;YACDE,KAAK,EAAE;cACLC,KAAK,EAAE;gBACL;gBACAC,KAAK,EAAE;kBACLL,EAAE,EAAE,OAAO;kBACXC,KAAK,EAAE,mBAAmB;kBAC1BK,IAAI,EAAE;oBACJC,KAAK,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC,CAAC;oBACvCC,GAAG,EAAE,IAAIF,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC;kBACtC,CAAC;kBACDE,KAAK,EAAE;gBACT,CAAC;gBACDC,KAAK,EAAE;kBACLZ,EAAE,EAAE,OAAO;kBACXC,KAAK,EAAE,mBAAmB;kBAC1BK,IAAI,EAAE;oBACJC,KAAK,EAAE,IAAIC,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC,CAAC;oBACvCC,GAAG,EAAE,IAAIF,IAAI,CAAC,YAAY,CAAC,CAACC,OAAO,CAAC;kBACtC,CAAC;kBACDE,KAAK,EAAE;gBACT;cACF;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAvB,eAAe,CAAC,MAAM;MACpB,IAAIG,YAAY,EAAE;QAChBA,YAAY,CAACsB,OAAO,CAAC,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}