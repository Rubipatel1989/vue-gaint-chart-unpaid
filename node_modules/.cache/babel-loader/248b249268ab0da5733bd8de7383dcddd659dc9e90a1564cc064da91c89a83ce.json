{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport TaskListExpander from '../Expander.vue';\nexport default {\n  name: 'TaskListHeader',\n  components: {\n    TaskListExpander\n  },\n  inject: ['root'],\n  data() {\n    return {\n      resizer: {\n        moving: false,\n        x: 0\n      }\n    };\n  },\n  computed: {\n    /**\n     * Is this row collapsible?\n     *\n     * @returns {bool}\n     */\n    collapsible() {\n      return this.root.state.tasks.filter(task => task.allChildren.length > 0);\n    }\n  },\n  methods: {\n    /**\n     * Get style\n     *\n     * @returns {object}\n     */\n    getStyle(column) {\n      return {\n        width: column.finalWidth + 'px'\n      };\n    },\n    /**\n     * Resizer mouse down event handler\n     */\n    resizerMouseDown(event, column) {\n      if (!this.resizer.moving) {\n        this.resizer.moving = column;\n        this.resizer.x = event.clientX;\n        this.resizer.initialWidth = column.width;\n        this.root.$emit('taskList-column-width-change-start', this.resizer.moving);\n      }\n    },\n    /**\n     * Resizer mouse move event handler\n     */\n    resizerMouseMove(event) {\n      if (this.resizer.moving) {\n        const lastWidth = this.resizer.moving.width;\n        this.resizer.moving.width = this.resizer.initialWidth + event.clientX - this.resizer.x;\n        if (this.resizer.moving.width < this.root.state.options.taskList.minWidth) {\n          this.resizer.moving.width = this.root.state.options.taskList.minWidth;\n        }\n        if (lastWidth !== this.resizer.moving.width) {\n          this.root.$emit('taskList-column-width-change', this.resizer.moving);\n        }\n      }\n    },\n    /**\n     * Resizer mouse up event handler\n     */\n    resizerMouseUp(event) {\n      if (this.resizer.moving) {\n        this.root.$emit('taskList-column-width-change-stop', this.resizer.moving);\n        this.resizer.moving = false;\n      }\n    }\n  },\n  /**\n   * Created\n   */\n  created() {\n    this.mouseUpListener = document.addEventListener('mouseup', this.resizerMouseUp.bind(this));\n    this.mouseMoveListener = document.addEventListener('mousemove', this.resizerMouseMove.bind(this));\n    this.root.$on('main-view-mousemove', this.resizerMouseMove);\n    this.root.$on('main-view-mouseup', this.resizerMouseUp);\n  },\n  /**\n   * Before destroy event - clear all event listeners\n   */\n  beforeDestroy() {\n    document.removeEventListener('mouseup', this.resizerMouseUp);\n    document.removeEventListener('mousemove', this.resizerMouseMove);\n  }\n};","map":{"version":3,"names":["TaskListExpander","name","components","inject","data","resizer","moving","x","computed","collapsible","root","state","tasks","filter","task","allChildren","length","methods","getStyle","column","width","finalWidth","resizerMouseDown","event","clientX","initialWidth","$emit","resizerMouseMove","lastWidth","options","taskList","minWidth","resizerMouseUp","created","mouseUpListener","document","addEventListener","bind","mouseMoveListener","$on","beforeDestroy","removeEventListener"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/gantt-elastic/src/components/TaskList/TaskListHeader.vue"],"sourcesContent":["<!--\n/**\n * @fileoverview TaskListHeader component\n * @license MIT\n * @author Rafal Pospiech <neuronet.io@gmail.com>\n * @package GanttElastic\n */\n-->\n<template>\n  <div\n    class=\"gantt-elastic__task-list-header\"\n    :style=\"{\n      ...root.style['task-list-header'],\n      height: `${root.state.options.calendar.height}px`,\n      'margin-bottom': `${root.state.options.calendar.gap}px`\n    }\"\n  >\n    <div\n      class=\"gantt-elastic__task-list-header-column\"\n      :style=\"{\n        ...root.style['task-list-header-column'],\n        ...column.style['task-list-header-column'],\n        ...getStyle(column)\n      }\"\n      v-for=\"column in root.getTaskListColumns\"\n      :key=\"column._id\"\n    >\n      <task-list-expander\n        v-if=\"column.expander\"\n        :tasks=\"collapsible\"\n        :options=\"root.state.options.taskList.expander\"\n      ></task-list-expander>\n      <div\n        class=\"gantt-elastic__task-list-header-label\"\n        :style=\"{ ...root.style['task-list-header-label'], ...column.style['task-list-header-label'] }\"\n        :column=\"column\"\n        @mouseup=\"resizerMouseUp\"\n      >\n        {{ column.label }}\n      </div>\n      <div\n        class=\"gantt-elastic__task-list-header-resizer-wrapper\"\n        :style=\"{\n          ...root.style['task-list-header-resizer-wrapper'],\n          ...column.style['task-list-header-resizer-wrapper']\n        }\"\n        :column=\"column\"\n        @mousedown=\"resizerMouseDown($event, column)\"\n      >\n        <div\n          class=\"gantt-elastic__task-list-header-resizer\"\n          :style=\"{ ...root.style['task-list-header-resizer'], ...column.style['task-list-header-resizer'] }\"\n        >\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n          <div\n            class=\"gantt-elastic__task-list-header-resizer-dot\"\n            :style=\"{ ...root.style['task-list-header-resizer-dot'], ...column.style['task-list-header-resizer-dot'] }\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TaskListExpander from '../Expander.vue';\nexport default {\n  name: 'TaskListHeader',\n  components: {\n    TaskListExpander\n  },\n\n  inject: ['root'],\n\n  data() {\n    return {\n      resizer: {\n        moving: false,\n        x: 0\n      }\n    };\n  },\n\n  computed: {\n    /**\n     * Is this row collapsible?\n     *\n     * @returns {bool}\n     */\n    collapsible() {\n      return this.root.state.tasks.filter(task => task.allChildren.length > 0);\n    }\n  },\n\n  methods: {\n    /**\n     * Get style\n     *\n     * @returns {object}\n     */\n    getStyle(column) {\n      return {\n        width: column.finalWidth + 'px'\n      };\n    },\n    /**\n     * Resizer mouse down event handler\n     */\n    resizerMouseDown(event, column) {\n      if (!this.resizer.moving) {\n        this.resizer.moving = column;\n        this.resizer.x = event.clientX;\n        this.resizer.initialWidth = column.width;\n        this.root.$emit('taskList-column-width-change-start', this.resizer.moving);\n      }\n    },\n\n    /**\n     * Resizer mouse move event handler\n     */\n    resizerMouseMove(event) {\n      if (this.resizer.moving) {\n        const lastWidth = this.resizer.moving.width;\n        this.resizer.moving.width = this.resizer.initialWidth + event.clientX - this.resizer.x;\n        if (this.resizer.moving.width < this.root.state.options.taskList.minWidth) {\n          this.resizer.moving.width = this.root.state.options.taskList.minWidth;\n        }\n        if (lastWidth !== this.resizer.moving.width) {\n          this.root.$emit('taskList-column-width-change', this.resizer.moving);\n        }\n      }\n    },\n\n    /**\n     * Resizer mouse up event handler\n     */\n    resizerMouseUp(event) {\n      if (this.resizer.moving) {\n        this.root.$emit('taskList-column-width-change-stop', this.resizer.moving);\n        this.resizer.moving = false;\n      }\n    }\n  },\n\n  /**\n   * Created\n   */\n  created() {\n    this.mouseUpListener = document.addEventListener('mouseup', this.resizerMouseUp.bind(this));\n    this.mouseMoveListener = document.addEventListener('mousemove', this.resizerMouseMove.bind(this));\n    this.root.$on('main-view-mousemove', this.resizerMouseMove);\n    this.root.$on('main-view-mouseup', this.resizerMouseUp);\n  },\n\n  /**\n   * Before destroy event - clear all event listeners\n   */\n  beforeDestroy() {\n    document.removeEventListener('mouseup', this.resizerMouseUp);\n    document.removeEventListener('mousemove', this.resizerMouseMove);\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}