{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */function () {\n  function BatchEdit(parent) {\n    this.batchChildCount = 0;\n    this.addedRecords = 'addedRecords';\n    this.deletedRecords = 'deletedRecords';\n    this.batchAddedRecords = [];\n    this.batchDeletedRecords = [];\n    this.batchAddRowRecord = [];\n    this.parent = parent;\n    this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n    this.batchRecords = [];\n    this.currentViewRecords = [];\n    this.isAdd = false;\n    this.addEventListener();\n  }\n  BatchEdit.prototype.addEventListener = function () {\n    this.parent.on(events.cellSaved, this.cellSaved, this);\n    this.parent.on(events.batchAdd, this.batchAdd, this);\n    this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n    this.parent.on(events.batchSave, this.batchSave, this);\n    this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n    this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n    this.parent.on('batchPageAction', this.batchPageAction, this);\n    this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n    this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n  };\n  /**\n   * @hidden\n   * @returns {void}\n   */\n  BatchEdit.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.parent.off(events.cellSaved, this.cellSaved);\n    this.parent.off(events.batchAdd, this.batchAdd);\n    this.parent.off(events.batchSave, this.batchSave);\n    this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n    this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n    this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n    this.parent.off('batchPageAction', this.batchPageAction);\n    this.parent.off('batchCancelAction', this.batchCancelAction);\n    this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n    this.parent.grid.off('next-cell-index', this.nextCellIndex);\n  };\n  /**\n   * To destroy the editModule\n   *\n   * @returns {void}\n   * @hidden\n   */\n  BatchEdit.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  /**\n   * @hidden\n   * @returns {Object[]} Returns modified records in batch editing.\n   */\n  BatchEdit.prototype.getBatchRecords = function () {\n    return this.batchRecords;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns index of newly add row\n   */\n  BatchEdit.prototype.getAddRowIndex = function () {\n    return this.addRowIndex;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns selected row index\n   */\n  BatchEdit.prototype.getSelectedIndex = function () {\n    return this.selectedIndex;\n  };\n  /**\n   * @hidden\n   * @returns {number} Returns newly added child count\n   */\n  BatchEdit.prototype.getBatchChildCount = function () {\n    return this.batchChildCount;\n  };\n  BatchEdit.prototype.batchPageAction = function () {\n    var data = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n    var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n    var index;\n    if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n      for (var i = 0; i < this.batchAddedRecords.length; i++) {\n        index = data.map(function (e) {\n          return e[\"\" + primaryKey];\n        }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n        data.splice(index, 1);\n      }\n    }\n    this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n  };\n  BatchEdit.prototype.cellSaved = function (args) {\n    var actualCellIndex = args.column.index;\n    if (actualCellIndex === this.parent.treeColumnIndex) {\n      this.parent.renderModule.cellRender({\n        data: args.rowData,\n        cell: args.cell,\n        column: this.parent.grid.getColumnByIndex(args.column.index)\n      });\n    }\n    if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n      var data = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n      var added = void 0;\n      var level = 'level';\n      var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n      var currentDataIndex = void 0;\n      var indexvalue = void 0;\n      var parentItem = 'parentItem';\n      var uniqueID = 'uniqueID';\n      var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n      var idMapping = void 0;\n      var parentUniqueID = void 0;\n      var parentIdMapping = void 0;\n      var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 : this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex : this.addRowIndex + 1;\n      rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n      if (this.newBatchRowAdded) {\n        if (this.batchRecords.length) {\n          idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n          parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n          if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n            parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n          }\n        }\n        this.batchAddedRecords = extendArray(this.batchAddedRecords);\n        this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n        this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n        added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n        added.uniqueID = getUid(this.parent.element.id + '_data_');\n        setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n        if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n          this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n          if (this.parent.editSettings.newRowPosition === 'Child') {\n            added.primaryParent = parentRecord;\n            if (this.selectedIndex > -1) {\n              added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n              added.parentUniqueID = added.parentItem.uniqueID;\n              delete added.parentItem.childRecords;\n              delete added.parentItem[this.parent.childMapping];\n              added.level = added.parentItem.level + 1;\n              added.index = this.batchIndex;\n              var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n              var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n              record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n              currentDataIndex = data.map(function (e) {\n                return e[\"\" + primaryKey_1];\n              }).indexOf(record[\"\" + primaryKey_1]);\n              if (this.isSelfReference) {\n                added[this.parent.parentIdMapping] = idMapping;\n              }\n              updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n            }\n          } else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n            added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n            if (added.level && this.selectedIndex > -1) {\n              added.parentItem = parentRecord;\n              added.parentUniqueID = parentUniqueID;\n              delete added.parentItem.childRecords;\n              delete added.parentItem[this.parent.childMapping];\n            }\n            added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n            if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n              var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n              var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n              record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n              currentDataIndex = data.map(function (e) {\n                return e[\"\" + primaryKey_1];\n              }).indexOf(record[\"\" + primaryKey_1]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n              var record = this.batchRecords[this.addRowIndex];\n              currentDataIndex = data.map(function (e) {\n                return e[\"\" + primaryKey_1];\n              }).indexOf(record[\"\" + primaryKey_1]);\n            }\n            if (this.isSelfReference) {\n              added[this.parent.parentIdMapping] = parentIdMapping;\n            }\n          }\n          added.index = added.index === -1 ? 0 : added.index;\n          added.hasChildRecords = false;\n          added.childRecords = [];\n          this.batchRecords.splice(added.index, 0, added);\n          this.currentViewRecords.splice(added.index, 0, added);\n          if (currentDataIndex) {\n            indexvalue = currentDataIndex;\n          } else {\n            indexvalue = added.index;\n          }\n          if (this.parent.editSettings.newRowPosition !== 'Above') {\n            indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n          }\n          data.splice(indexvalue, 0, added);\n          this.batchAddedRecords.push(added);\n        }\n        this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n        this.newBatchRowAdded = false;\n      }\n    }\n  };\n  BatchEdit.prototype.beforeBatchAdd = function (e) {\n    var isTabLastRow = 'isTabLastRow';\n    if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n      e.cancel = true;\n      this.parent.editModule[\"\" + isTabLastRow] = false;\n      return;\n    }\n    if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n      this.selectedIndex = this.parent.editModule['selectedIndex'];\n      this.addRowIndex = this.parent.editModule['addRowIndex'];\n      this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex] : this.parent.getCurrentViewRecords()[this.selectedIndex];\n    } else {\n      this.selectedIndex = this.parent.grid.selectedRowIndex;\n      this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n      this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n      this.addRowRecord = this.parent.getSelectedRecords()[0];\n    }\n  };\n  BatchEdit.prototype.batchAdd = function (e) {\n    if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n      this.isAdd = true;\n      this.newBatchRowAdded = true;\n      var actualIndex = 0;\n      if (!this.batchRecords.length) {\n        this.batchAddedRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n      }\n      if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n        classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n      }\n      if (this.parent.editSettings.newRowPosition !== 'Top') {\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n          records = this.batchRecords;\n        }\n        this.updateChildCount(records);\n        this.parent.notify(events.beginAdd, {});\n        this.batchChildCount = 0;\n      }\n      this.updateRowIndex();\n      // update focus module, need to refix this once grid source modified.\n      var focusModule = getValue('focusModule', this.parent.grid);\n      var table = this.parent.getContentTable();\n      if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n        actualIndex = e.row.rowIndex;\n        focusModule.getContent().matrix.matrix = this.matrix;\n      } else {\n        actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n        // if (this.parent.frozenRows || this.parent.frozenColumns) {\n        //   actualIndex = this.batchIndex;\n        // }\n      }\n      focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n      if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n        var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n        var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n        this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n      }\n    }\n  };\n  BatchEdit.prototype.beforeBatchDelete = function (args) {\n    if (!this.batchRecords.length) {\n      this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n      this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n    }\n    var focusModule = getValue('focusModule', this.parent.grid);\n    this.matrix = focusModule.getContent().matrix.matrix;\n    var row = [];\n    var records = [];\n    var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n    var data;\n    var childs;\n    var uid;\n    var rowElement = Array.isArray(args.row) ? args.row[0] : args.row;\n    if (!isNullOrUndefined(rowElement) && this.parent.getSelectedRows().indexOf(rowElement) === -1) {\n      data = args.rowData;\n      childs = findChildrenRecords(data);\n      uid = rowElement.getAttribute('data-uid');\n    } else {\n      data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n      childs = findChildrenRecords(data);\n      uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n    }\n    var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n    if (childs.length) {\n      var totalCount = parentRowIndex + childs.length;\n      var firstChildIndex = parentRowIndex + 1;\n      for (var i = firstChildIndex; i <= totalCount; i++) {\n        row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n        if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n          row.push(this.parent.grid.getHeaderContent()[parseInt(i.toString(), 10)]);\n        }\n      }\n    }\n    if (!isNullOrUndefined(data.parentItem)) {\n      var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n      if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n        var childIndex = parentItem.childRecords.indexOf(data);\n        parentItem.childRecords.splice(childIndex, 1);\n      }\n      this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n      this.batchDeletedRecords.push(data);\n    }\n    childs.push(data);\n    records = childs;\n    for (var i = 0; i < records.length; i++) {\n      var indexvalue = this.batchRecords.map(function (e) {\n        return e[\"\" + primarykey];\n      }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n      if (indexvalue !== -1) {\n        this.batchRecords.splice(indexvalue, 1);\n      }\n    }\n    for (var i = 0; i < row.length; i++) {\n      if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n        this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n      }\n    }\n  };\n  BatchEdit.prototype.updateRowIndex = function () {\n    var rows = this.parent.grid.getDataRows();\n    for (var i = 0; i < rows.length; i++) {\n      rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n    }\n  };\n  BatchEdit.prototype.updateChildCount = function (records) {\n    var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n    var addedRecords = 'addedRecords';\n    var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n    for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n      if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n        if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n          this.batchChildCount = this.batchChildCount + 1;\n        }\n      }\n    }\n  };\n  BatchEdit.prototype.beforeBatchSave = function (e) {\n    var changeRecords = 'changedRecords';\n    var deleterecords = 'deletedRecords';\n    var changedRecords = e.batchChanges[\"\" + changeRecords];\n    if (e.batchChanges[\"\" + changeRecords].length) {\n      var columnName = void 0;\n      for (var i = 0; i < changedRecords.length; i++) {\n        editAction({\n          value: changedRecords[parseInt(i.toString(), 10)],\n          action: 'edit'\n        }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n      }\n    }\n    if (e.batchChanges[\"\" + deleterecords].length) {\n      var deletedRecords = e.batchChanges[\"\" + deleterecords];\n      var record = deletedRecords;\n      for (var i = 0; i < record.length; i++) {\n        this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n        var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n        for (var c = 0; c < childs.length; c++) {\n          this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n        }\n        e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n      }\n    }\n    this.isAdd = false;\n  };\n  BatchEdit.prototype.deleteUniqueID = function (value) {\n    var idFilter = 'uniqueIDFilterCollection';\n    delete this.parent[\"\" + idFilter][\"\" + value];\n    var id = 'uniqueIDCollection';\n    delete this.parent[\"\" + id][\"\" + value];\n  };\n  BatchEdit.prototype.batchCancelAction = function () {\n    var targetElement = 'targetElement';\n    var index;\n    var parentItem = 'parentItem';\n    var indexvalue = 'index';\n    var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n    var childRecords = 'childRecords';\n    var data = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n    var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n    if (!isNullOrUndefined(this.batchAddedRecords)) {\n      for (var i = 0; i < this.batchAddedRecords.length; i++) {\n        index = data.map(function (e) {\n          return e[\"\" + primaryKey];\n        }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n        if (index !== -1) {\n          data.splice(index, 1);\n        }\n        if (this.parent.editSettings.newRowPosition === 'Child') {\n          index = currentViewRecords.map(function (e) {\n            return e[\"\" + primaryKey];\n          }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n          if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n            var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n            for (var j = 0; children && j < children.length; j++) {\n              if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n      var row = this.parent[\"\" + targetElement].closest('tr');\n      this.parent.collapseRow(row);\n      this.parent[\"\" + targetElement] = null;\n    }\n    if (!isNullOrUndefined(this.batchDeletedRecords)) {\n      for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n        if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n          index = currentViewRecords.map(function (e) {\n            return e[\"\" + primaryKey];\n          }).indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n          var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] : this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n          if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n            currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n          }\n        }\n      }\n    }\n    this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n    this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n    this.batchIndex = 0;\n    this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n    this.batchDeletedRecords = [];\n    this.parent.grid.renderModule.refresh();\n  };\n  BatchEdit.prototype.batchSave = function (args) {\n    if (this.parent.editSettings.mode === 'Batch') {\n      var i = void 0;\n      var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n      var deletedRecords = 'deletedRecords';\n      var addedRecords = 'addedRecords';\n      var index = 'index';\n      var uniqueID = 'uniqueID';\n      var data = this.parent.grid.dataSource instanceof DataManager ? this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n      var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n      var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n      var level = 'level';\n      var addRecords = batchChanges[\"\" + addedRecords];\n      var parentItem = 'parentItem';\n      var selectedIndex = void 0;\n      var addRowIndex = void 0;\n      var columnName = void 0;\n      var addRowRecord = void 0;\n      var childRecords = 'childRecords';\n      if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n        addRecords.reverse();\n      }\n      if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n        data.splice(data.length - addRecords.length, addRecords.length);\n        if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n          addRecords.reverse();\n          for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n            var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n            data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n          }\n        }\n        if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n          if (currentViewRecords.length > addRecords.length) {\n            currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n          }\n        } else {\n          var totalRecords = extendArray(data);\n          if (totalRecords.length) {\n            var startIndex = totalRecords.map(function (e) {\n              return e[\"\" + primarykey_1];\n            }).indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n            var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n            currentViewRecords = totalRecords.splice(startIndex, endIndex);\n          }\n        }\n      }\n      if (this.batchAddRowRecord.length === 0) {\n        this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n      }\n      if (this.parent.editModule['isAddedRowByContextMenu']) {\n        addRecords.reverse();\n      }\n      for (i = 0; i < addRecords.length; i++) {\n        var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n        delete taskData.parentItem;\n        delete taskData.uniqueID;\n        delete taskData.index;\n        delete taskData.level;\n        delete taskData.hasChildRecords;\n        delete taskData.childRecords;\n        delete taskData.parentUniqueID;\n        if (!isNullOrUndefined(taskData.primaryParent)) {\n          delete taskData.primaryParent;\n        }\n        if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n          var rowPosition = this.parent.editSettings.newRowPosition;\n          this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n          this.parent.editModule['previousNewRowPosition'] = rowPosition;\n        }\n        addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n        addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n        if (isNullOrUndefined(addRowRecord)) {\n          addRowRecord = this.batchAddRowRecord[i - 1];\n        }\n        if (this.isSelfReference) {\n          if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n            updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n          }\n        }\n        if (!isNullOrUndefined(addRowRecord)) {\n          addRowIndex = addRowRecord.index;\n        }\n        if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].index)) {\n          addRowIndex = 0;\n        }\n        if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n          if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n            selectedIndex = -1;\n            addRowRecord = null;\n          }\n        }\n        editAction({\n          value: addRecords[parseInt(i.toString(), 10)],\n          action: 'add'\n        }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n        selectedIndex = null;\n        if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) && (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n          var indexValue = currentViewRecords.map(function (e) {\n            return e[\"\" + primarykey_1];\n          }).indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n          var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n          for (var j = 0; j < children.length; j++) {\n            if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n              currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n            }\n          }\n        }\n      }\n      if (batchChanges[\"\" + deletedRecords].length) {\n        for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n          editAction({\n            value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)],\n            action: 'delete'\n          }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n        }\n      }\n      this.parent.parentData = [];\n      for (var i_2 = 0; i_2 < data.length; i_2++) {\n        data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n        setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n        if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n          this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n        }\n      }\n    }\n    this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    if (this.parent.editModule['isAddedRowByContextMenu']) {\n      this.parent.editModule['isAddedRowByContextMenu'] = false;\n    }\n  };\n  BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n    var rows = this.parent.grid.getDataRows();\n    if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') && this.selectedIndex > -1) {\n      if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n        if (this.parent.getBatchChanges()[this.addedRecords].length > 1 || this.parent.getBatchChanges()[this.deletedRecords].length) {\n          index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n          if (this.parent.editSettings.newRowPosition !== 'Child') {\n            var batchChildCount = this.getBatchChildCount();\n            index = index + batchChildCount;\n          }\n        } else {\n          index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n        }\n      }\n      if (index >= rows.length) {\n        index = rows.length - 1;\n      }\n      this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n      if (this.batchChildCount) {\n        index += this.batchChildCount;\n      }\n      this.batchChildCount = 0;\n    }\n    return index;\n  };\n  BatchEdit.prototype.immutableBatchAction = function (e) {\n    e.args.cancel = true;\n    var changes = this.parent.grid.getBatchChanges();\n    var addedRecords = [];\n    var index = 'index';\n    if (Object.keys(changes).length) {\n      addedRecords = changes.addedRecords;\n    }\n    for (var i = 0; i < addedRecords.length; i++) {\n      e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n    }\n  };\n  BatchEdit.prototype.nextCellIndex = function (args) {\n    var index = 'index';\n    var rowIndex = 'rowIndex';\n    if (this.parent.getSelectedRows().length) {\n      args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n    } else {\n      args[\"\" + index] = this.batchIndex;\n    }\n  };\n  return BatchEdit;\n}();\nexport { BatchEdit };","map":{"version":3,"names":["isNullOrUndefined","extend","setValue","getValue","events","DataManager","findChildrenRecords","getParentData","extendArray","getUid","updateParentRow","editAction","classList","BatchEdit","parent","batchChildCount","addedRecords","deletedRecords","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","isSelfReference","parentIdMapping","batchRecords","currentViewRecords","isAdd","addEventListener","prototype","on","cellSaved","batchAdd","beforeBatchAdd","batchSave","beforeBatchDelete","beforeBatchSave","batchPageAction","batchCancelAction","grid","immutableBatchAction","nextCellIndex","removeEventListener","isDestroyed","off","destroy","getBatchRecords","getAddRowIndex","addRowIndex","getSelectedIndex","selectedIndex","getBatchChildCount","data","dataSource","json","primaryKey","getPrimaryKeyFieldNames","index","length","i","map","e","indexOf","parseInt","toString","splice","args","actualCellIndex","column","treeColumnIndex","renderModule","cellRender","rowData","cell","getColumnByIndex","editSettings","mode","newRowPosition","added","level","primaryKey_1","currentDataIndex","indexvalue","parentItem","uniqueID","parentRecord","idMapping","parentUniqueID","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","push","getRowsObject","changes","element","id","Object","hasOwnProperty","call","batchIndex","primaryParent","childRecords","childMapping","childRecordCount","record","hasChildRecords","isTabLastRow","editModule","cancel","selectedRowIndex","addRowRecord","getCurrentViewRecords","getSelectedRecords","actualIndex","getDataRows","records","getBatchChanges","updateChildCount","notify","beginAdd","updateRowIndex","focusModule","table","getContentTable","row","rowIndex","getContent","matrix","getElementsByClassName","current","newlyAddedRecords","getAttribute","primarykey","childs","uid","rowElement","Array","isArray","getSelectedRows","parentRowIndex","getRowElementByUID","totalCount","firstChildIndex","frozenRows","frozenColumns","getFrozenColumns","getHeaderContent","childIndex","selectionModule","selectedRecords","rows","setAttribute","changeRecords","deleterecords","changedRecords","batchChanges","columnName","value","action","deleteUniqueID","c","concat","idFilter","targetElement","children","j","closest","collapseRow","positionIndex","refresh","updatedRecords","primarykey_1","addRecords","reverse","i_1","index_1","allowPaging","totalRecords","startIndex","endIndex","pageSettings","pageSize","flatData","taskData","rowPosition","indexValue","parentData","i_2","expanded","keys"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-treegrid/src/treegrid/actions/batch-edit.js"],"sourcesContent":["import { isNullOrUndefined, extend, setValue, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\nimport { classList } from '@syncfusion/ej2-base';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.column.index;\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.column.index)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem]) {\n                        parentUniqueID = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + parentItem][\"\" + uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[parseInt(this.addRowIndex.toString(), 10)][\"\" + level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[\"\" + primaryKey_1]; }).indexOf(record[\"\" + primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[parseInt(rowObjectIndex.toString(), 10)].data = added;\n                this.newBatchRowAdded = false;\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[\"\" + isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[\"\" + isTabLastRow] = false;\n            return;\n        }\n        if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) &&\n            !this.parent.editModule['isAddedRowByContextMenu'] && (this.parent.grid.selectedRowIndex === -1 || this.parent.editModule['batchEditModule'].isAdd)) {\n            this.selectedIndex = this.parent.editModule['selectedIndex'];\n            this.addRowIndex = this.parent.editModule['addRowIndex'];\n            this.addRowRecord = this.batchRecords.length ? this.batchRecords[this.selectedIndex]\n                : this.parent.getCurrentViewRecords()[this.selectedIndex];\n        }\n        else {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.parent.editModule['addRowIndex'] = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex'])) {\n                classList(this.parent.grid.getDataRows()[0], ['e-batchrow'], []);\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n            if (this.parent.editModule['isAddedRowByMethod'] && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                var newlyAddedRecords = this.parent.getBatchChanges()['addedRecords'];\n                var index = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[newlyAddedRecords.length - 1].getAttribute('data-rowindex'), 10);\n                this.batchRecords.splice(index, 0, newlyAddedRecords[newlyAddedRecords.length - 1]);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (args) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data;\n        var childs;\n        var uid;\n        var rowElement = Array.isArray(args.row) ? args.row[0] : args.row;\n        if (!isNullOrUndefined(rowElement) && this.parent.getSelectedRows().indexOf(rowElement) === -1) {\n            data = args.rowData;\n            childs = findChildrenRecords(data);\n            uid = rowElement.getAttribute('data-uid');\n        }\n        else {\n            data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n            childs = findChildrenRecords(data);\n            uid = this.parent.getSelectedRows()[0].getAttribute('data-uid');\n        }\n        var parentRowIndex = parseInt(this.parent.grid.getRowElementByUID(uid).getAttribute('data-rowindex'), 10);\n        if (childs.length) {\n            var totalCount = parentRowIndex + childs.length;\n            var firstChildIndex = parentRowIndex + 1;\n            for (var i = firstChildIndex; i <= totalCount; i++) {\n                row.push(this.parent.grid.getDataRows()[parseInt(i.toString(), 10)]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getHeaderContent()[parseInt(i.toString(), 10)]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[\"\" + primarykey]; }).indexOf(records[parseInt(i.toString(), 10)][\"\" + primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[parseInt(i.toString(), 10)])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[parseInt(i.toString(), 10)]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[parseInt(i.toString(), 10)].setAttribute('data-rowindex', i.toString());\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[\"\" + addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                if (this.parent.getBatchChanges()[\"\" + addedRecords][parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey] === records[parseInt(this.addRowIndex.toString(), 10)][\"\" + primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[\"\" + changeRecords];\n        if (e.batchChanges[\"\" + changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[parseInt(i.toString(), 10)], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[\"\" + deleterecords].length) {\n            var deletedRecords = e.batchChanges[\"\" + deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[parseInt(i.toString(), 10)].uniqueID);\n                var childs = findChildrenRecords(record[parseInt(i.toString(), 10)]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[parseInt(c.toString(), 10)].uniqueID);\n                }\n                e.batchChanges[\"\" + deleterecords] = e.batchChanges[\"\" + deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[\"\" + idFilter][\"\" + value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[\"\" + id][\"\" + value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[\"\" + primaryKey]; }).indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                if (index !== -1) {\n                    data.splice(index, 1);\n                }\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem] ? this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]\n                        : this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        var children = currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[parseInt(j.toString(), 10)][\"\" + primaryKey] === this.batchAddedRecords[parseInt(i.toString(), 10)][\"\" + primaryKey]) {\n                                currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.parent[\"\" + targetElement])) {\n            var row = this.parent[\"\" + targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[\"\" + targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[\"\" + primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] === 0 ? this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] :\n                        this.batchDeletedRecords[parseInt(i.toString(), 10)][\"\" + indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[parseInt(index.toString(), 10)])) {\n                        currentViewRecords[parseInt(index.toString(), 10)][\"\" + childRecords].splice(positionIndex, 0, this.batchDeletedRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[\"\" + addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom' && !Object.hasOwnProperty.call(args, 'updatedRecords')) {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (this.parent.editModule['isAddedRowByMethod'] && addRecords.length && !isNullOrUndefined(this.parent.editModule['addRowIndex']) && !this.parent.editModule['isAddedRowByContextMenu']) {\n                    addRecords.reverse();\n                    for (var i_1 = 0; i_1 < addRecords.length; i_1++) {\n                        var index_1 = parseInt(this.parent.getContentTable().getElementsByClassName('e-insertedrow')[parseInt(i_1.toString(), 10)].getAttribute('data-rowindex'), 10);\n                        data.splice(index_1, 0, addRecords[parseInt(i_1.toString(), 10)]);\n                    }\n                }\n                if (!this.parent.allowPaging && data.length !== currentViewRecords.length) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    if (totalRecords.length) {\n                        var startIndex = totalRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                            .indexOf(currentViewRecords[0][\"\" + primarykey_1]);\n                        var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                        currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                    }\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            if (this.parent.editModule['isAddedRowByContextMenu']) {\n                addRecords.reverse();\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[parseInt(i.toString(), 10)]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                if (addRecords.length > 1 && this.parent.editModule['isAddedRowByContextMenu']) {\n                    var rowPosition = this.parent.editSettings.newRowPosition;\n                    this.parent.editSettings.newRowPosition = this.parent.editModule['previousNewRowPosition'];\n                    this.parent.editModule['previousNewRowPosition'] = rowPosition;\n                }\n                addRecords[parseInt(i.toString(), 10)].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[parseInt(i.toString(), 10)];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[parseInt(i.toString(), 10)].parentItem, 'add', this.parent, this.isSelfReference, addRecords[parseInt(i.toString(), 10)]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].index)) {\n                    addRowIndex = 0;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[parseInt(i.toString(), 10)].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[parseInt(i.toString(), 10)], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem]) &&\n                    (isNullOrUndefined(this.parent.editModule['addRowIndex']) || this.isSelfReference)) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[\"\" + primarykey_1]; })\n                        .indexOf(addRecords[parseInt(i.toString(), 10)][\"\" + parentItem][\"\" + primarykey_1]);\n                    var children = currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[parseInt(j.toString(), 10)][\"\" + primarykey_1] === addRecords[parseInt(i.toString(), 10)][\"\" + primarykey_1]) {\n                            currentViewRecords[parseInt(indexValue.toString(), 10)][\"\" + childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[\"\" + deletedRecords].length) {\n                for (i = 0; i < batchChanges[\"\" + deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[\"\" + deletedRecords][parseInt(i.toString(), 10)], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_2 = 0; i_2 < data.length; i_2++) {\n                data[parseInt(i_2.toString(), 10)][\"\" + index] = i_2;\n                setValue('uniqueIDCollection.' + data[parseInt(i_2.toString(), 10)][\"\" + uniqueID] + '.index', i_2, this.parent);\n                if (!data[parseInt(i_2.toString(), 10)][\"\" + level]) {\n                    this.parent.parentData.push(data[parseInt(i_2.toString(), 10)]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n        if (this.parent.editModule['isAddedRowByContextMenu']) {\n            this.parent.editModule['isAddedRowByContextMenu'] = false;\n        }\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[parseInt(i.toString(), 10)][\"\" + index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        if (this.parent.getSelectedRows().length) {\n            args[\"\" + index] = this.parent.getSelectedRows()[0][\"\" + rowIndex];\n        }\n        else {\n            args[\"\" + index] = this.batchIndex;\n        }\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n"],"mappings":";;AAAA,SAASA,iBAAiB,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,QAAQ,sBAAsB;AACpF,OAAO,KAAKC,MAAM,MAAM,kBAAkB;AAC1C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,mBAAmB,EAAEC,aAAa,EAAEC,WAAW,QAAQ,UAAU;AAC1E,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,eAAe,EAAEC,UAAU,QAAQ,gBAAgB;AAC5D,SAASC,SAAS,QAAQ,sBAAsB;AAChD;AACA;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAe,YAAY;EACvC,SAASA,SAASA,CAACC,MAAM,EAAE;IACvB,IAAI,CAACC,eAAe,GAAG,CAAC;IACxB,IAAI,CAACC,YAAY,GAAG,cAAc;IAClC,IAAI,CAACC,cAAc,GAAG,gBAAgB;IACtC,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACC,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACC,iBAAiB,GAAG,EAAE;IAC3B,IAAI,CAACN,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACO,eAAe,GAAG,CAACrB,iBAAiB,CAACc,MAAM,CAACQ,eAAe,CAAC;IACjE,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC3B;EACAb,SAAS,CAACc,SAAS,CAACD,gBAAgB,GAAG,YAAY;IAC/C,IAAI,CAACZ,MAAM,CAACc,EAAE,CAACxB,MAAM,CAACyB,SAAS,EAAE,IAAI,CAACA,SAAS,EAAE,IAAI,CAAC;IACtD,IAAI,CAACf,MAAM,CAACc,EAAE,CAACxB,MAAM,CAAC0B,QAAQ,EAAE,IAAI,CAACA,QAAQ,EAAE,IAAI,CAAC;IACpD,IAAI,CAAChB,MAAM,CAACc,EAAE,CAACxB,MAAM,CAAC2B,cAAc,EAAE,IAAI,CAACA,cAAc,EAAE,IAAI,CAAC;IAChE,IAAI,CAACjB,MAAM,CAACc,EAAE,CAACxB,MAAM,CAAC4B,SAAS,EAAE,IAAI,CAACA,SAAS,EAAE,IAAI,CAAC;IACtD,IAAI,CAAClB,MAAM,CAACc,EAAE,CAACxB,MAAM,CAAC6B,iBAAiB,EAAE,IAAI,CAACA,iBAAiB,EAAE,IAAI,CAAC;IACtE,IAAI,CAACnB,MAAM,CAACc,EAAE,CAACxB,MAAM,CAAC8B,eAAe,EAAE,IAAI,CAACA,eAAe,EAAE,IAAI,CAAC;IAClE,IAAI,CAACpB,MAAM,CAACc,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAACO,eAAe,EAAE,IAAI,CAAC;IAC7D,IAAI,CAACrB,MAAM,CAACc,EAAE,CAAC,mBAAmB,EAAE,IAAI,CAACQ,iBAAiB,EAAE,IAAI,CAAC;IACjE,IAAI,CAACtB,MAAM,CAACuB,IAAI,CAACT,EAAE,CAAC,wBAAwB,EAAE,IAAI,CAACU,oBAAoB,EAAE,IAAI,CAAC;IAC9E,IAAI,CAACxB,MAAM,CAACuB,IAAI,CAACT,EAAE,CAAC,iBAAiB,EAAE,IAAI,CAACW,aAAa,EAAE,IAAI,CAAC;EACpE,CAAC;EACD;AACJ;AACA;AACA;EACI1B,SAAS,CAACc,SAAS,CAACa,mBAAmB,GAAG,YAAY;IAClD,IAAI,IAAI,CAAC1B,MAAM,CAAC2B,WAAW,EAAE;MACzB;IACJ;IACA,IAAI,CAAC3B,MAAM,CAAC4B,GAAG,CAACtC,MAAM,CAACyB,SAAS,EAAE,IAAI,CAACA,SAAS,CAAC;IACjD,IAAI,CAACf,MAAM,CAAC4B,GAAG,CAACtC,MAAM,CAAC0B,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAC;IAC/C,IAAI,CAAChB,MAAM,CAAC4B,GAAG,CAACtC,MAAM,CAAC4B,SAAS,EAAE,IAAI,CAACA,SAAS,CAAC;IACjD,IAAI,CAAClB,MAAM,CAAC4B,GAAG,CAACtC,MAAM,CAAC2B,cAAc,EAAE,IAAI,CAACA,cAAc,CAAC;IAC3D,IAAI,CAACjB,MAAM,CAAC4B,GAAG,CAACtC,MAAM,CAAC6B,iBAAiB,EAAE,IAAI,CAACA,iBAAiB,CAAC;IACjE,IAAI,CAACnB,MAAM,CAAC4B,GAAG,CAACtC,MAAM,CAAC8B,eAAe,EAAE,IAAI,CAACA,eAAe,CAAC;IAC7D,IAAI,CAACpB,MAAM,CAAC4B,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACP,eAAe,CAAC;IACxD,IAAI,CAACrB,MAAM,CAAC4B,GAAG,CAAC,mBAAmB,EAAE,IAAI,CAACN,iBAAiB,CAAC;IAC5D,IAAI,CAACtB,MAAM,CAACuB,IAAI,CAACK,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACJ,oBAAoB,CAAC;IACzE,IAAI,CAACxB,MAAM,CAACuB,IAAI,CAACK,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACH,aAAa,CAAC;EAC/D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1B,SAAS,CAACc,SAAS,CAACgB,OAAO,GAAG,YAAY;IACtC,IAAI,CAACH,mBAAmB,CAAC,CAAC;EAC9B,CAAC;EACD;AACJ;AACA;AACA;EACI3B,SAAS,CAACc,SAAS,CAACiB,eAAe,GAAG,YAAY;IAC9C,OAAO,IAAI,CAACrB,YAAY;EAC5B,CAAC;EACD;AACJ;AACA;AACA;EACIV,SAAS,CAACc,SAAS,CAACkB,cAAc,GAAG,YAAY;IAC7C,OAAO,IAAI,CAACC,WAAW;EAC3B,CAAC;EACD;AACJ;AACA;AACA;EACIjC,SAAS,CAACc,SAAS,CAACoB,gBAAgB,GAAG,YAAY;IAC/C,OAAO,IAAI,CAACC,aAAa;EAC7B,CAAC;EACD;AACJ;AACA;AACA;EACInC,SAAS,CAACc,SAAS,CAACsB,kBAAkB,GAAG,YAAY;IACjD,OAAO,IAAI,CAAClC,eAAe;EAC/B,CAAC;EACDF,SAAS,CAACc,SAAS,CAACQ,eAAe,GAAG,YAAY;IAC9C,IAAIe,IAAI,GAAI,IAAI,CAACpC,MAAM,CAACuB,IAAI,CAACc,UAAU,YAAY9C,WAAW,GAC1D,IAAI,CAACS,MAAM,CAACuB,IAAI,CAACc,UAAU,CAACA,UAAU,CAACC,IAAI,GAAG,IAAI,CAACtC,MAAM,CAACuB,IAAI,CAACc,UAAW;IAC9E,IAAIE,UAAU,GAAG,IAAI,CAACvC,MAAM,CAACuB,IAAI,CAACiB,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAIC,KAAK;IACT,IAAI,CAACvD,iBAAiB,CAAC,IAAI,CAACkB,iBAAiB,CAAC,IAAI,IAAI,CAACA,iBAAiB,CAACsC,MAAM,EAAE;MAC7E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvC,iBAAiB,CAACsC,MAAM,EAAEC,CAAC,EAAE,EAAE;QACpDF,KAAK,GAAGL,IAAI,CAACQ,GAAG,CAAC,UAAUC,CAAC,EAAE;UAAE,OAAOA,CAAC,CAAC,EAAE,GAAGN,UAAU,CAAC;QAAE,CAAC,CAAC,CAACO,OAAO,CAAC,IAAI,CAAC1C,iBAAiB,CAAC2C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGT,UAAU,CAAC,CAAC;QAC1IH,IAAI,CAACa,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;MACzB;IACJ;IACA,IAAI,CAACrC,iBAAiB,GAAG,IAAI,CAACK,YAAY,GAAG,IAAI,CAACH,iBAAiB,GAAG,IAAI,CAACD,mBAAmB,GAAG,IAAI,CAACK,kBAAkB,GAAG,EAAE;EACjI,CAAC;EACDX,SAAS,CAACc,SAAS,CAACE,SAAS,GAAG,UAAUmC,IAAI,EAAE;IAC5C,IAAIC,eAAe,GAAGD,IAAI,CAACE,MAAM,CAACX,KAAK;IACvC,IAAIU,eAAe,KAAK,IAAI,CAACnD,MAAM,CAACqD,eAAe,EAAE;MACjD,IAAI,CAACrD,MAAM,CAACsD,YAAY,CAACC,UAAU,CAAC;QAAEnB,IAAI,EAAEc,IAAI,CAACM,OAAO;QAAEC,IAAI,EAAEP,IAAI,CAACO,IAAI;QACrEL,MAAM,EAAE,IAAI,CAACpD,MAAM,CAACuB,IAAI,CAACmC,gBAAgB,CAACR,IAAI,CAACE,MAAM,CAACX,KAAK;MAC/D,CAAC,CAAC;IACN;IACA,IAAI,IAAI,CAAC9B,KAAK,IAAI,IAAI,CAACX,MAAM,CAAC2D,YAAY,CAACC,IAAI,KAAK,OAAO,IAAI,IAAI,CAAC5D,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,QAAQ,EAAE;MACjH,IAAIzB,IAAI,GAAI,IAAI,CAACpC,MAAM,CAACuB,IAAI,CAACc,UAAU,YAAY9C,WAAW,GAC1D,IAAI,CAACS,MAAM,CAACuB,IAAI,CAACc,UAAU,CAACA,UAAU,CAACC,IAAI,GAAG,IAAI,CAACtC,MAAM,CAACuB,IAAI,CAACc,UAAW;MAC9E,IAAIyB,KAAK,GAAG,KAAK,CAAC;MAClB,IAAIC,KAAK,GAAG,OAAO;MACnB,IAAIC,YAAY,GAAG,IAAI,CAAChE,MAAM,CAACuB,IAAI,CAACiB,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;MAChE,IAAIyB,gBAAgB,GAAG,KAAK,CAAC;MAC7B,IAAIC,UAAU,GAAG,KAAK,CAAC;MACvB,IAAIC,UAAU,GAAG,YAAY;MAC7B,IAAIC,QAAQ,GAAG,UAAU;MACzB,IAAIC,YAAY,GAAG,IAAI,CAACnC,aAAa,GAAG,CAAC,CAAC,GAAG,IAAI,CAACzB,YAAY,CAACsC,QAAQ,CAAC,IAAI,CAACf,WAAW,CAACgB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,GAAG,IAAI;MACjI,IAAIG,SAAS,GAAG,KAAK,CAAC;MACtB,IAAIC,cAAc,GAAG,KAAK,CAAC;MAC3B,IAAI/D,eAAe,GAAG,KAAK,CAAC;MAC5B,IAAIgE,cAAc,GAAG,IAAI,CAACxE,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,KAAK,IAAI,IAAI,CAAC3B,aAAa,KAAK,CAAC,CAAC,GAAG,CAAC,GACnG,IAAI,CAAClC,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,GAAG,IAAI,CAAC7B,WAAW,GAChE,IAAI,CAACA,WAAW,GAAG,CAAC;MAC9BwC,cAAc,GAAG,IAAI,CAACC,uBAAuB,CAACD,cAAc,CAAC;MAC7D,IAAI,IAAI,CAACE,gBAAgB,EAAE;QACvB,IAAI,IAAI,CAACjE,YAAY,CAACiC,MAAM,EAAE;UAC1B4B,SAAS,GAAG,IAAI,CAAC7D,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,IAAI,CAAChC,MAAM,CAACsE,SAAS,CAAC;UACtE9D,eAAe,GAAG,IAAI,CAACC,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,IAAI,CAAChC,MAAM,CAACQ,eAAe,CAAC;UAClF,IAAI,IAAI,CAACC,YAAY,CAACsC,QAAQ,CAAC,IAAI,CAACf,WAAW,CAACgB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,EAAE;YAC/EI,cAAc,GAAG,IAAI,CAAC9D,YAAY,CAACsC,QAAQ,CAAC,IAAI,CAACf,WAAW,CAACgB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,EAAE,GAAGC,QAAQ,CAAC;UACjH;QACJ;QACA,IAAI,CAAChE,iBAAiB,GAAGV,WAAW,CAAC,IAAI,CAACU,iBAAiB,CAAC;QAC5D,IAAI,CAACE,iBAAiB,GAAGZ,WAAW,CAAC,IAAI,CAACY,iBAAiB,CAAC;QAC5D,IAAI,CAACA,iBAAiB,CAACqE,IAAI,CAAC,IAAI,CAAClE,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC;QAChE8B,KAAK,GAAG,IAAI,CAAC9D,MAAM,CAACuB,IAAI,CAACqD,aAAa,CAAC,CAAC,CAAC7B,QAAQ,CAACyB,cAAc,CAACxB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC6B,OAAO;QACzFf,KAAK,CAACM,QAAQ,GAAGzE,MAAM,CAAC,IAAI,CAACK,MAAM,CAAC8E,OAAO,CAACC,EAAE,GAAG,QAAQ,CAAC;QAC1D3F,QAAQ,CAAC,qBAAqB,GAAG0E,KAAK,CAACM,QAAQ,EAAEN,KAAK,EAAE,IAAI,CAAC9D,MAAM,CAAC;QACpE,IAAI,CAACgF,MAAM,CAACnE,SAAS,CAACoE,cAAc,CAACC,IAAI,CAACpB,KAAK,EAAE,OAAO,CAAC,EAAE;UACvD,IAAI,CAACqB,UAAU,GAAG,IAAI,CAACjD,aAAa,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAACiD,UAAU;UACjE,IAAI,IAAI,CAACnF,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,EAAE;YACrDC,KAAK,CAACsB,aAAa,GAAGf,YAAY;YAClC,IAAI,IAAI,CAACnC,aAAa,GAAG,CAAC,CAAC,EAAE;cACzB4B,KAAK,CAACK,UAAU,GAAGhF,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACsB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC;cAClE8B,KAAK,CAACS,cAAc,GAAGT,KAAK,CAACK,UAAU,CAACC,QAAQ;cAChD,OAAON,KAAK,CAACK,UAAU,CAACkB,YAAY;cACpC,OAAOvB,KAAK,CAACK,UAAU,CAAC,IAAI,CAACnE,MAAM,CAACsF,YAAY,CAAC;cACjDxB,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACK,UAAU,CAACJ,KAAK,GAAG,CAAC;cACxCD,KAAK,CAACrB,KAAK,GAAG,IAAI,CAAC0C,UAAU;cAC7B,IAAII,gBAAgB,GAAG/F,mBAAmB,CAAC,IAAI,CAACiB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAACU,MAAM;cACtF,IAAI8C,MAAM,GAAGhG,mBAAmB,CAAC,IAAI,CAACiB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAACuD,gBAAgB,GAAG,CAAC,CAAC;cAC3FC,MAAM,GAAGtG,iBAAiB,CAACsG,MAAM,CAAC,GAAG,IAAI,CAAC/E,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,GAAGwD,MAAM;cACjFvB,gBAAgB,GAAG7B,IAAI,CAACQ,GAAG,CAAC,UAAUC,CAAC,EAAE;gBAAE,OAAOA,CAAC,CAAC,EAAE,GAAGmB,YAAY,CAAC;cAAE,CAAC,CAAC,CAAClB,OAAO,CAAC0C,MAAM,CAAC,EAAE,GAAGxB,YAAY,CAAC,CAAC;cAC7G,IAAI,IAAI,CAACzD,eAAe,EAAE;gBACtBuD,KAAK,CAAC,IAAI,CAAC9D,MAAM,CAACQ,eAAe,CAAC,GAAG8D,SAAS;cAClD;cACA1E,eAAe,CAACoE,YAAY,EAAEF,KAAK,CAACK,UAAU,EAAE,KAAK,EAAE,IAAI,CAACnE,MAAM,EAAE,IAAI,CAACO,eAAe,EAAEuD,KAAK,CAAC;YACpG;UACJ,CAAC,MACI,IAAI,CAAC,IAAI,CAAC9D,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,IAAI,IAAI,CAAC7D,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,KAC7G,CAAC3E,iBAAiB,CAAC,IAAI,CAACuB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,EAAE;YAC5D8B,KAAK,CAACC,KAAK,GAAG,IAAI,CAACtD,YAAY,CAACsC,QAAQ,CAAC,IAAI,CAACf,WAAW,CAACgB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGe,KAAK,CAAC;YACtF,IAAID,KAAK,CAACC,KAAK,IAAI,IAAI,CAAC7B,aAAa,GAAG,CAAC,CAAC,EAAE;cACxC4B,KAAK,CAACK,UAAU,GAAGE,YAAY;cAC/BP,KAAK,CAACS,cAAc,GAAGA,cAAc;cACrC,OAAOT,KAAK,CAACK,UAAU,CAACkB,YAAY;cACpC,OAAOvB,KAAK,CAACK,UAAU,CAAC,IAAI,CAACnE,MAAM,CAACsF,YAAY,CAAC;YACrD;YACAxB,KAAK,CAACrB,KAAK,GAAG,IAAI,CAACzC,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,GAAG,IAAI,CAACsB,UAAU,GAAG,IAAI,CAACA,UAAU,GAAG,CAAC;YACzG,IAAI,IAAI,CAACnF,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,IAAI,IAAI,CAAC3B,aAAa,GAAG,CAAC,CAAC,EAAE;cAChF,IAAIqD,gBAAgB,GAAG/F,mBAAmB,CAAC,IAAI,CAACiB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAACU,MAAM;cACtF,IAAI8C,MAAM,GAAGhG,mBAAmB,CAAC,IAAI,CAACiB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAACuD,gBAAgB,GAAG,CAAC,CAAC;cAC3FC,MAAM,GAAGtG,iBAAiB,CAACsG,MAAM,CAAC,GAAG,IAAI,CAAC/E,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,GAAGwD,MAAM;cACjFvB,gBAAgB,GAAG7B,IAAI,CAACQ,GAAG,CAAC,UAAUC,CAAC,EAAE;gBAAE,OAAOA,CAAC,CAAC,EAAE,GAAGmB,YAAY,CAAC;cAAE,CAAC,CAAC,CAAClB,OAAO,CAAC0C,MAAM,CAAC,EAAE,GAAGxB,YAAY,CAAC,CAAC;YACjH;YACA,IAAI,IAAI,CAAChE,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,IAAI,IAAI,CAAC3B,aAAa,GAAG,CAAC,CAAC,EAAE;cAChF,IAAIsD,MAAM,GAAG,IAAI,CAAC/E,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC;cAChDiC,gBAAgB,GAAG7B,IAAI,CAACQ,GAAG,CAAC,UAAUC,CAAC,EAAE;gBAAE,OAAOA,CAAC,CAAC,EAAE,GAAGmB,YAAY,CAAC;cAAE,CAAC,CAAC,CAAClB,OAAO,CAAC0C,MAAM,CAAC,EAAE,GAAGxB,YAAY,CAAC,CAAC;YACjH;YACA,IAAI,IAAI,CAACzD,eAAe,EAAE;cACtBuD,KAAK,CAAC,IAAI,CAAC9D,MAAM,CAACQ,eAAe,CAAC,GAAGA,eAAe;YACxD;UACJ;UACAsD,KAAK,CAACrB,KAAK,GAAGqB,KAAK,CAACrB,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,GAAGqB,KAAK,CAACrB,KAAK;UAClDqB,KAAK,CAAC2B,eAAe,GAAG,KAAK;UAC7B3B,KAAK,CAACuB,YAAY,GAAG,EAAE;UACvB,IAAI,CAAC5E,YAAY,CAACwC,MAAM,CAACa,KAAK,CAACrB,KAAK,EAAE,CAAC,EAAEqB,KAAK,CAAC;UAC/C,IAAI,CAACpD,kBAAkB,CAACuC,MAAM,CAACa,KAAK,CAACrB,KAAK,EAAE,CAAC,EAAEqB,KAAK,CAAC;UACrD,IAAIG,gBAAgB,EAAE;YAClBC,UAAU,GAAGD,gBAAgB;UACjC,CAAC,MACI;YACDC,UAAU,GAAGJ,KAAK,CAACrB,KAAK;UAC5B;UACA,IAAI,IAAI,CAACzC,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,EAAE;YACrDK,UAAU,GAAGJ,KAAK,CAACrB,KAAK,KAAK,CAAC,GAAGyB,UAAU,GAAGA,UAAU,GAAG,CAAC;UAChE;UACA9B,IAAI,CAACa,MAAM,CAACiB,UAAU,EAAE,CAAC,EAAEJ,KAAK,CAAC;UACjC,IAAI,CAAC1D,iBAAiB,CAACuE,IAAI,CAACb,KAAK,CAAC;QACtC;QACA,IAAI,CAAC9D,MAAM,CAACuB,IAAI,CAACqD,aAAa,CAAC,CAAC,CAAC7B,QAAQ,CAACyB,cAAc,CAACxB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACZ,IAAI,GAAG0B,KAAK;QACtF,IAAI,CAACY,gBAAgB,GAAG,KAAK;MACjC;IACJ;EACJ,CAAC;EACD3E,SAAS,CAACc,SAAS,CAACI,cAAc,GAAG,UAAU4B,CAAC,EAAE;IAC9C,IAAI6C,YAAY,GAAG,cAAc;IACjC,IAAI,IAAI,CAAC1F,MAAM,CAAC2D,YAAY,CAACC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC5D,MAAM,CAAC2F,UAAU,CAAC,EAAE,GAAGD,YAAY,CAAC,EAAE;MACvF7C,CAAC,CAAC+C,MAAM,GAAG,IAAI;MACf,IAAI,CAAC5F,MAAM,CAAC2F,UAAU,CAAC,EAAE,GAAGD,YAAY,CAAC,GAAG,KAAK;MACjD;IACJ;IACA,IAAI,IAAI,CAAC1F,MAAM,CAAC2F,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAACzG,iBAAiB,CAAC,IAAI,CAACc,MAAM,CAAC2F,UAAU,CAAC,aAAa,CAAC,CAAC,IACzG,CAAC,IAAI,CAAC3F,MAAM,CAAC2F,UAAU,CAAC,yBAAyB,CAAC,KAAK,IAAI,CAAC3F,MAAM,CAACuB,IAAI,CAACsE,gBAAgB,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC7F,MAAM,CAAC2F,UAAU,CAAC,iBAAiB,CAAC,CAAChF,KAAK,CAAC,EAAE;MACrJ,IAAI,CAACuB,aAAa,GAAG,IAAI,CAAClC,MAAM,CAAC2F,UAAU,CAAC,eAAe,CAAC;MAC5D,IAAI,CAAC3D,WAAW,GAAG,IAAI,CAAChC,MAAM,CAAC2F,UAAU,CAAC,aAAa,CAAC;MACxD,IAAI,CAACG,YAAY,GAAG,IAAI,CAACrF,YAAY,CAACiC,MAAM,GAAG,IAAI,CAACjC,YAAY,CAAC,IAAI,CAACyB,aAAa,CAAC,GAC9E,IAAI,CAAClC,MAAM,CAAC+F,qBAAqB,CAAC,CAAC,CAAC,IAAI,CAAC7D,aAAa,CAAC;IACjE,CAAC,MACI;MACD,IAAI,CAACA,aAAa,GAAG,IAAI,CAAClC,MAAM,CAACuB,IAAI,CAACsE,gBAAgB;MACtD,IAAI,CAAC7D,WAAW,GAAG,IAAI,CAAChC,MAAM,CAACuB,IAAI,CAACsE,gBAAgB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC7F,MAAM,CAACuB,IAAI,CAACsE,gBAAgB,GAAG,CAAC;MACjG,IAAI,CAAC7F,MAAM,CAAC2F,UAAU,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC3F,MAAM,CAACuB,IAAI,CAACsE,gBAAgB,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC7F,MAAM,CAACuB,IAAI,CAACsE,gBAAgB,GAAG,CAAC;MACtH,IAAI,CAACC,YAAY,GAAG,IAAI,CAAC9F,MAAM,CAACgG,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D;EACJ,CAAC;EACDjG,SAAS,CAACc,SAAS,CAACG,QAAQ,GAAG,UAAU6B,CAAC,EAAE;IACxC,IAAI,IAAI,CAAC7C,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,QAAQ,EAAE;MACtD,IAAI,CAAClD,KAAK,GAAG,IAAI;MACjB,IAAI,CAAC+D,gBAAgB,GAAG,IAAI;MAC5B,IAAIuB,WAAW,GAAG,CAAC;MACnB,IAAI,CAAC,IAAI,CAACxF,YAAY,CAACiC,MAAM,EAAE;QAC3B,IAAI,CAACtC,iBAAiB,GAAG,EAAE;QAC3B,IAAI,CAACK,YAAY,GAAGf,WAAW,CAAC,IAAI,CAACM,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC,CAAC;QACzE,IAAI,CAACrF,kBAAkB,GAAGhB,WAAW,CAAC,IAAI,CAACM,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC,CAAC;MACnF;MACA,IAAI,IAAI,CAAC/F,MAAM,CAAC2F,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAACzG,iBAAiB,CAAC,IAAI,CAACc,MAAM,CAAC2F,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE;QAC3G7F,SAAS,CAAC,IAAI,CAACE,MAAM,CAACuB,IAAI,CAAC2E,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC;MACpE;MACA,IAAI,IAAI,CAAClG,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,KAAK,EAAE;QACnD,IAAIsC,OAAO,GAAG,IAAI,CAACnG,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC/F,MAAM,CAAC2D,YAAY,CAACC,IAAI,KAAK,OAAO,KAAK,IAAI,CAAC5D,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,IAAI,CAAClG,YAAY,CAAC,CAACwC,MAAM,GAAG,CAAC,IACtG,IAAI,CAAC1C,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,IAAI,CAACjG,cAAc,CAAC,CAACuC,MAAM,CAAC,EAAE;UAC/DyD,OAAO,GAAG,IAAI,CAAC1F,YAAY;QAC/B;QACA,IAAI,CAAC4F,gBAAgB,CAACF,OAAO,CAAC;QAC9B,IAAI,CAACnG,MAAM,CAACsG,MAAM,CAAChH,MAAM,CAACiH,QAAQ,EAAE,CAAC,CAAC,CAAC;QACvC,IAAI,CAACtG,eAAe,GAAG,CAAC;MAC5B;MACA,IAAI,CAACuG,cAAc,CAAC,CAAC;MACrB;MACA,IAAIC,WAAW,GAAGpH,QAAQ,CAAC,aAAa,EAAE,IAAI,CAACW,MAAM,CAACuB,IAAI,CAAC;MAC3D,IAAImF,KAAK,GAAG,IAAI,CAAC1G,MAAM,CAAC2G,eAAe,CAAC,CAAC;MACzC,IAAI,IAAI,CAAC3G,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,IAAI,CAACjG,cAAc,CAAC,CAACuC,MAAM,IAAI,IAAI,CAAC1C,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,EAAE;QAClHoC,WAAW,GAAGpD,CAAC,CAAC+D,GAAG,CAACC,QAAQ;QAC5BJ,WAAW,CAACK,UAAU,CAAC,CAAC,CAACC,MAAM,CAACA,MAAM,GAAG,IAAI,CAACA,MAAM;MACxD,CAAC,MACI;QACDd,WAAW,GAAGS,KAAK,CAACM,sBAAsB,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAACH,QAAQ;QACpE;QACA;QACA;MACJ;MACAJ,WAAW,CAACK,UAAU,CAAC,CAAC,CAACC,MAAM,CAACE,OAAO,GAAG,CAAChB,WAAW,EAAEQ,WAAW,CAACK,UAAU,CAAC,CAAC,CAACC,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;MACnG,IAAI,IAAI,CAACjH,MAAM,CAAC2F,UAAU,CAAC,oBAAoB,CAAC,IAAI,CAACzG,iBAAiB,CAAC,IAAI,CAACc,MAAM,CAAC2F,UAAU,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC3F,MAAM,CAAC2F,UAAU,CAAC,yBAAyB,CAAC,EAAE;QACjK,IAAIuB,iBAAiB,GAAG,IAAI,CAAClH,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,cAAc,CAAC;QACrE,IAAI3D,KAAK,GAAGM,QAAQ,CAAC,IAAI,CAAC/C,MAAM,CAAC2G,eAAe,CAAC,CAAC,CAACK,sBAAsB,CAAC,eAAe,CAAC,CAACE,iBAAiB,CAACxE,MAAM,GAAG,CAAC,CAAC,CAACyE,YAAY,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;QAC3J,IAAI,CAAC1G,YAAY,CAACwC,MAAM,CAACR,KAAK,EAAE,CAAC,EAAEyE,iBAAiB,CAACA,iBAAiB,CAACxE,MAAM,GAAG,CAAC,CAAC,CAAC;MACvF;IACJ;EACJ,CAAC;EACD3C,SAAS,CAACc,SAAS,CAACM,iBAAiB,GAAG,UAAU+B,IAAI,EAAE;IACpD,IAAI,CAAC,IAAI,CAACzC,YAAY,CAACiC,MAAM,EAAE;MAC3B,IAAI,CAACjC,YAAY,GAAGf,WAAW,CAAC,IAAI,CAACM,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC,CAAC;MACzE,IAAI,CAACrF,kBAAkB,GAAGhB,WAAW,CAAC,IAAI,CAACM,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC,CAAC;IACnF;IACA,IAAIU,WAAW,GAAGpH,QAAQ,CAAC,aAAa,EAAE,IAAI,CAACW,MAAM,CAACuB,IAAI,CAAC;IAC3D,IAAI,CAACwF,MAAM,GAAGN,WAAW,CAACK,UAAU,CAAC,CAAC,CAACC,MAAM,CAACA,MAAM;IACpD,IAAIH,GAAG,GAAG,EAAE;IACZ,IAAIT,OAAO,GAAG,EAAE;IAChB,IAAIiB,UAAU,GAAG,IAAI,CAACpH,MAAM,CAACuB,IAAI,CAACiB,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAIJ,IAAI;IACR,IAAIiF,MAAM;IACV,IAAIC,GAAG;IACP,IAAIC,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACvE,IAAI,CAAC0D,GAAG,CAAC,GAAG1D,IAAI,CAAC0D,GAAG,CAAC,CAAC,CAAC,GAAG1D,IAAI,CAAC0D,GAAG;IACjE,IAAI,CAAC1H,iBAAiB,CAACqI,UAAU,CAAC,IAAI,IAAI,CAACvH,MAAM,CAAC0H,eAAe,CAAC,CAAC,CAAC5E,OAAO,CAACyE,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5FnF,IAAI,GAAGc,IAAI,CAACM,OAAO;MACnB6D,MAAM,GAAG7H,mBAAmB,CAAC4C,IAAI,CAAC;MAClCkF,GAAG,GAAGC,UAAU,CAACJ,YAAY,CAAC,UAAU,CAAC;IAC7C,CAAC,MACI;MACD/E,IAAI,GAAG,IAAI,CAACpC,MAAM,CAACuB,IAAI,CAACyE,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAChG,MAAM,CAACuB,IAAI,CAACyE,kBAAkB,CAAC,CAAC,CAACtD,MAAM,GAAG,CAAC,CAAC;MAC9F2E,MAAM,GAAG7H,mBAAmB,CAAC4C,IAAI,CAAC;MAClCkF,GAAG,GAAG,IAAI,CAACtH,MAAM,CAAC0H,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAACP,YAAY,CAAC,UAAU,CAAC;IACnE;IACA,IAAIQ,cAAc,GAAG5E,QAAQ,CAAC,IAAI,CAAC/C,MAAM,CAACuB,IAAI,CAACqG,kBAAkB,CAACN,GAAG,CAAC,CAACH,YAAY,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;IACzG,IAAIE,MAAM,CAAC3E,MAAM,EAAE;MACf,IAAImF,UAAU,GAAGF,cAAc,GAAGN,MAAM,CAAC3E,MAAM;MAC/C,IAAIoF,eAAe,GAAGH,cAAc,GAAG,CAAC;MACxC,KAAK,IAAIhF,CAAC,GAAGmF,eAAe,EAAEnF,CAAC,IAAIkF,UAAU,EAAElF,CAAC,EAAE,EAAE;QAChDiE,GAAG,CAACjC,IAAI,CAAC,IAAI,CAAC3E,MAAM,CAACuB,IAAI,CAAC2E,WAAW,CAAC,CAAC,CAACnD,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACpE,IAAI,IAAI,CAAChD,MAAM,CAAC+H,UAAU,IAAI,IAAI,CAAC/H,MAAM,CAACgI,aAAa,IAAI,IAAI,CAAChI,MAAM,CAACiI,gBAAgB,CAAC,CAAC,EAAE;UACvFrB,GAAG,CAACjC,IAAI,CAAC,IAAI,CAAC3E,MAAM,CAACuB,IAAI,CAAC2G,gBAAgB,CAAC,CAAC,CAACnF,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAC7E;MACJ;IACJ;IACA,IAAI,CAAC9D,iBAAiB,CAACkD,IAAI,CAAC+B,UAAU,CAAC,EAAE;MACrC,IAAIA,UAAU,GAAG1E,aAAa,CAAC,IAAI,CAACO,MAAM,EAAEoC,IAAI,CAAC+B,UAAU,CAACC,QAAQ,CAAC;MACrE,IAAI,CAAClF,iBAAiB,CAACiF,UAAU,CAAC,IAAIA,UAAU,CAACsB,eAAe,EAAE;QAC9D,IAAI0C,UAAU,GAAGhE,UAAU,CAACkB,YAAY,CAACvC,OAAO,CAACV,IAAI,CAAC;QACtD+B,UAAU,CAACkB,YAAY,CAACpC,MAAM,CAACkF,UAAU,EAAE,CAAC,CAAC;MACjD;MACA,IAAI,CAAC9H,mBAAmB,GAAGX,WAAW,CAAC,IAAI,CAACW,mBAAmB,CAAC;MAChE,IAAI,CAACA,mBAAmB,CAACsE,IAAI,CAACvC,IAAI,CAAC;IACvC;IACAiF,MAAM,CAAC1C,IAAI,CAACvC,IAAI,CAAC;IACjB+D,OAAO,GAAGkB,MAAM;IAChB,KAAK,IAAI1E,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwD,OAAO,CAACzD,MAAM,EAAEC,CAAC,EAAE,EAAE;MACrC,IAAIuB,UAAU,GAAG,IAAI,CAACzD,YAAY,CAACmC,GAAG,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAOA,CAAC,CAAC,EAAE,GAAGuE,UAAU,CAAC;MAAE,CAAC,CAAC,CAACtE,OAAO,CAACqD,OAAO,CAACpD,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGoE,UAAU,CAAC,CAAC;MACjJ,IAAIlD,UAAU,KAAK,CAAC,CAAC,EAAE;QACnB,IAAI,CAACzD,YAAY,CAACwC,MAAM,CAACiB,UAAU,EAAE,CAAC,CAAC;MAC3C;IACJ;IACA,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiE,GAAG,CAAClE,MAAM,EAAEC,CAAC,EAAE,EAAE;MACjC,IAAI,CAACzD,iBAAiB,CAAC0H,GAAG,CAAC7D,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;QACrD,IAAI,CAAChD,MAAM,CAACuB,IAAI,CAAC6G,eAAe,CAACC,eAAe,CAAC1D,IAAI,CAACiC,GAAG,CAAC7D,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MAC1F;IACJ;EACJ,CAAC;EACDjD,SAAS,CAACc,SAAS,CAAC2F,cAAc,GAAG,YAAY;IAC7C,IAAI8B,IAAI,GAAG,IAAI,CAACtI,MAAM,CAACuB,IAAI,CAAC2E,WAAW,CAAC,CAAC;IACzC,KAAK,IAAIvD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2F,IAAI,CAAC5F,MAAM,EAAEC,CAAC,EAAE,EAAE;MAClC2F,IAAI,CAACvF,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACuF,YAAY,CAAC,eAAe,EAAE5F,CAAC,CAACK,QAAQ,CAAC,CAAC,CAAC;IAChF;EACJ,CAAC;EACDjD,SAAS,CAACc,SAAS,CAACwF,gBAAgB,GAAG,UAAUF,OAAO,EAAE;IACtD,IAAI5D,UAAU,GAAG,IAAI,CAACvC,MAAM,CAACuB,IAAI,CAACiB,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAItC,YAAY,GAAG,cAAc;IACjC,IAAIiE,UAAU,GAAG,IAAI,CAACnE,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,GAAG,eAAe,GAAG,YAAY;IACrG,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC3C,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,EAAE,GAAGlG,YAAY,CAAC,CAACwC,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC9E,IAAI,CAACzD,iBAAiB,CAAC,IAAI,CAACc,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,EAAE,GAAGlG,YAAY,CAAC,CAAC6C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,EAAE;QACnH,IAAI,IAAI,CAACnE,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,EAAE,GAAGlG,YAAY,CAAC,CAAC6C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,EAAE,GAAG5B,UAAU,CAAC,KAAK4D,OAAO,CAACpD,QAAQ,CAAC,IAAI,CAACf,WAAW,CAACgB,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGT,UAAU,CAAC,EAAE;UACxL,IAAI,CAACtC,eAAe,GAAG,IAAI,CAACA,eAAe,GAAG,CAAC;QACnD;MACJ;IACJ;EACJ,CAAC;EACDF,SAAS,CAACc,SAAS,CAACO,eAAe,GAAG,UAAUyB,CAAC,EAAE;IAC/C,IAAI2F,aAAa,GAAG,gBAAgB;IACpC,IAAIC,aAAa,GAAG,gBAAgB;IACpC,IAAIC,cAAc,GAAG7F,CAAC,CAAC8F,YAAY,CAAC,EAAE,GAAGH,aAAa,CAAC;IACvD,IAAI3F,CAAC,CAAC8F,YAAY,CAAC,EAAE,GAAGH,aAAa,CAAC,CAAC9F,MAAM,EAAE;MAC3C,IAAIkG,UAAU,GAAG,KAAK,CAAC;MACvB,KAAK,IAAIjG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+F,cAAc,CAAChG,MAAM,EAAEC,CAAC,EAAE,EAAE;QAC5C9C,UAAU,CAAC;UAAEgJ,KAAK,EAAEH,cAAc,CAAC3F,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAAE8F,MAAM,EAAE;QAAO,CAAC,EAAE,IAAI,CAAC9I,MAAM,EAAE,IAAI,CAACO,eAAe,EAAE,IAAI,CAACyB,WAAW,EAAE,IAAI,CAACE,aAAa,EAAE0G,UAAU,CAAC;MAC1K;IACJ;IACA,IAAI/F,CAAC,CAAC8F,YAAY,CAAC,EAAE,GAAGF,aAAa,CAAC,CAAC/F,MAAM,EAAE;MAC3C,IAAIvC,cAAc,GAAG0C,CAAC,CAAC8F,YAAY,CAAC,EAAE,GAAGF,aAAa,CAAC;MACvD,IAAIjD,MAAM,GAAGrF,cAAc;MAC3B,KAAK,IAAIwC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,MAAM,CAAC9C,MAAM,EAAEC,CAAC,EAAE,EAAE;QACpC,IAAI,CAACoG,cAAc,CAACvD,MAAM,CAACzC,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACoB,QAAQ,CAAC;QAChE,IAAIiD,MAAM,GAAG7H,mBAAmB,CAACgG,MAAM,CAACzC,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACpE,KAAK,IAAIgG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3B,MAAM,CAAC3E,MAAM,EAAEsG,CAAC,EAAE,EAAE;UACpC,IAAI,CAACD,cAAc,CAAC1B,MAAM,CAACtE,QAAQ,CAACiG,CAAC,CAAChG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACoB,QAAQ,CAAC;QACpE;QACAvB,CAAC,CAAC8F,YAAY,CAAC,EAAE,GAAGF,aAAa,CAAC,GAAG5F,CAAC,CAAC8F,YAAY,CAAC,EAAE,GAAGF,aAAa,CAAC,CAACQ,MAAM,CAAC5B,MAAM,CAAC;MAC1F;IACJ;IACA,IAAI,CAAC1G,KAAK,GAAG,KAAK;EACtB,CAAC;EACDZ,SAAS,CAACc,SAAS,CAACkI,cAAc,GAAG,UAAUF,KAAK,EAAE;IAClD,IAAIK,QAAQ,GAAG,0BAA0B;IACzC,OAAO,IAAI,CAAClJ,MAAM,CAAC,EAAE,GAAGkJ,QAAQ,CAAC,CAAC,EAAE,GAAGL,KAAK,CAAC;IAC7C,IAAI9D,EAAE,GAAG,oBAAoB;IAC7B,OAAO,IAAI,CAAC/E,MAAM,CAAC,EAAE,GAAG+E,EAAE,CAAC,CAAC,EAAE,GAAG8D,KAAK,CAAC;EAC3C,CAAC;EACD9I,SAAS,CAACc,SAAS,CAACS,iBAAiB,GAAG,YAAY;IAChD,IAAI6H,aAAa,GAAG,eAAe;IACnC,IAAI1G,KAAK;IACT,IAAI0B,UAAU,GAAG,YAAY;IAC7B,IAAID,UAAU,GAAG,OAAO;IACxB,IAAIxD,kBAAkB,GAAG,IAAI,CAACV,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC;IACjE,IAAIV,YAAY,GAAG,cAAc;IACjC,IAAIjD,IAAI,GAAI,IAAI,CAACpC,MAAM,CAACuB,IAAI,CAACc,UAAU,YAAY9C,WAAW,GAC1D,IAAI,CAACS,MAAM,CAACuB,IAAI,CAACc,UAAU,CAACA,UAAU,CAACC,IAAI,GAAG,IAAI,CAACtC,MAAM,CAACuB,IAAI,CAACc,UAAW;IAC9E,IAAIE,UAAU,GAAG,IAAI,CAACvC,MAAM,CAACuB,IAAI,CAACiB,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,CAACtD,iBAAiB,CAAC,IAAI,CAACkB,iBAAiB,CAAC,EAAE;MAC5C,KAAK,IAAIuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvC,iBAAiB,CAACsC,MAAM,EAAEC,CAAC,EAAE,EAAE;QACpDF,KAAK,GAAGL,IAAI,CAACQ,GAAG,CAAC,UAAUC,CAAC,EAAE;UAAE,OAAOA,CAAC,CAAC,EAAE,GAAGN,UAAU,CAAC;QAAE,CAAC,CAAC,CAACO,OAAO,CAAC,IAAI,CAAC1C,iBAAiB,CAAC2C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGT,UAAU,CAAC,CAAC;QAC1I,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;UACdL,IAAI,CAACa,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;QACzB;QACA,IAAI,IAAI,CAACzC,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,EAAE;UACrDpB,KAAK,GAAG/B,kBAAkB,CAACkC,GAAG,CAAC,UAAUC,CAAC,EAAE;YAAE,OAAOA,CAAC,CAAC,EAAE,GAAGN,UAAU,CAAC;UAAE,CAAC,CAAC,CACtEO,OAAO,CAAC,IAAI,CAAC1C,iBAAiB,CAAC2C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,GAAG,IAAI,CAAC/D,iBAAiB,CAAC2C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,EAAE,GAAG5B,UAAU,CAAC,GACjK,IAAI,CAACnC,iBAAiB,CAAC2C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGT,UAAU,CAAC,CAAC;UAC1E,IAAI,CAACrD,iBAAiB,CAACwB,kBAAkB,CAACqC,QAAQ,CAACN,KAAK,CAACO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;YACxE,IAAIoG,QAAQ,GAAG1I,kBAAkB,CAACqC,QAAQ,CAACN,KAAK,CAACO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGqC,YAAY,CAAC;YACpF,KAAK,IAAIgE,CAAC,GAAG,CAAC,EAAED,QAAQ,IAAIC,CAAC,GAAGD,QAAQ,CAAC1G,MAAM,EAAE2G,CAAC,EAAE,EAAE;cAClD,IAAID,QAAQ,CAACrG,QAAQ,CAACsG,CAAC,CAACrG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGT,UAAU,CAAC,KAAK,IAAI,CAACnC,iBAAiB,CAAC2C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGT,UAAU,CAAC,EAAE;gBAC/H7B,kBAAkB,CAACqC,QAAQ,CAACN,KAAK,CAACO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGqC,YAAY,CAAC,CAACpC,MAAM,CAACoG,CAAC,EAAE,CAAC,CAAC;cACtF;YACJ;UACJ;QACJ;MACJ;IACJ;IACA,IAAI,CAACnK,iBAAiB,CAAC,IAAI,CAACc,MAAM,CAAC,EAAE,GAAGmJ,aAAa,CAAC,CAAC,EAAE;MACrD,IAAIvC,GAAG,GAAG,IAAI,CAAC5G,MAAM,CAAC,EAAE,GAAGmJ,aAAa,CAAC,CAACG,OAAO,CAAC,IAAI,CAAC;MACvD,IAAI,CAACtJ,MAAM,CAACuJ,WAAW,CAAC3C,GAAG,CAAC;MAC5B,IAAI,CAAC5G,MAAM,CAAC,EAAE,GAAGmJ,aAAa,CAAC,GAAG,IAAI;IAC1C;IACA,IAAI,CAACjK,iBAAiB,CAAC,IAAI,CAACmB,mBAAmB,CAAC,EAAE;MAC9C,KAAK,IAAIsC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACtC,mBAAmB,CAACqC,MAAM,EAAEC,CAAC,EAAE,EAAE;QACtD,IAAI,CAACzD,iBAAiB,CAAC,IAAI,CAACmB,mBAAmB,CAAC0C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,EAAE;UAC3F1B,KAAK,GAAG/B,kBAAkB,CAACkC,GAAG,CAAC,UAAUC,CAAC,EAAE;YAAE,OAAOA,CAAC,CAAC,EAAE,GAAGN,UAAU,CAAC;UAAE,CAAC,CAAC,CACtEO,OAAO,CAAC,IAAI,CAACzC,mBAAmB,CAAC0C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,EAAE,GAAG5B,UAAU,CAAC,CAAC;UACpG,IAAIiH,aAAa,GAAG,IAAI,CAACnJ,mBAAmB,CAAC0C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGkB,UAAU,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC7D,mBAAmB,CAAC0C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGkB,UAAU,CAAC,GACnK,IAAI,CAAC7D,mBAAmB,CAAC0C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGkB,UAAU,CAAC,GAAG,CAAC;UAC7E,IAAI,CAAChF,iBAAiB,CAACwB,kBAAkB,CAACqC,QAAQ,CAACN,KAAK,CAACO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;YACxEtC,kBAAkB,CAACqC,QAAQ,CAACN,KAAK,CAACO,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGqC,YAAY,CAAC,CAACpC,MAAM,CAACuG,aAAa,EAAE,CAAC,EAAE,IAAI,CAACnJ,mBAAmB,CAAC0C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UACxJ;QACJ;MACJ;IACJ;IACA,IAAI,CAAC5C,iBAAiB,GAAG,IAAI,CAACK,YAAY,GAAG,IAAI,CAACH,iBAAiB,GAAG,IAAI,CAACI,kBAAkB,GAAG,EAAE;IAClG,IAAI,CAACD,YAAY,GAAGf,WAAW,CAAC,IAAI,CAACM,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC,CAAC;IACzE,IAAI,CAACZ,UAAU,GAAG,CAAC;IACnB,IAAI,CAACzE,kBAAkB,GAAGhB,WAAW,CAAC,IAAI,CAACM,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC,CAAC;IAC/E,IAAI,CAAC1F,mBAAmB,GAAG,EAAE;IAC7B,IAAI,CAACL,MAAM,CAACuB,IAAI,CAAC+B,YAAY,CAACmG,OAAO,CAAC,CAAC;EAC3C,CAAC;EACD1J,SAAS,CAACc,SAAS,CAACK,SAAS,GAAG,UAAUgC,IAAI,EAAE;IAC5C,IAAI,IAAI,CAAClD,MAAM,CAAC2D,YAAY,CAACC,IAAI,KAAK,OAAO,EAAE;MAC3C,IAAIjB,CAAC,GAAG,KAAK,CAAC;MACd,IAAIgG,YAAY,GAAG3D,MAAM,CAACC,cAAc,CAACC,IAAI,CAAChC,IAAI,EAAE,gBAAgB,CAAC,GAAGA,IAAI,CAACwG,cAAc,GAAG,IAAI,CAAC1J,MAAM,CAACoG,eAAe,CAAC,CAAC;MAC3H,IAAIjG,cAAc,GAAG,gBAAgB;MACrC,IAAID,YAAY,GAAG,cAAc;MACjC,IAAIuC,KAAK,GAAG,OAAO;MACnB,IAAI2B,QAAQ,GAAG,UAAU;MACzB,IAAIhC,IAAI,GAAI,IAAI,CAACpC,MAAM,CAACuB,IAAI,CAACc,UAAU,YAAY9C,WAAW,GAC1D,IAAI,CAACS,MAAM,CAACuB,IAAI,CAACc,UAAU,CAACA,UAAU,CAACC,IAAI,GAAG,IAAI,CAACtC,MAAM,CAACuB,IAAI,CAACc,UAAW;MAC9E,IAAI3B,kBAAkB,GAAG,IAAI,CAACV,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC;MACjE,IAAI4D,YAAY,GAAG,IAAI,CAAC3J,MAAM,CAACuB,IAAI,CAACiB,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;MAChE,IAAIuB,KAAK,GAAG,OAAO;MACnB,IAAI6F,UAAU,GAAGjB,YAAY,CAAC,EAAE,GAAGzI,YAAY,CAAC;MAChD,IAAIiE,UAAU,GAAG,YAAY;MAC7B,IAAIjC,aAAa,GAAG,KAAK,CAAC;MAC1B,IAAIF,WAAW,GAAG,KAAK,CAAC;MACxB,IAAI4G,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI9C,YAAY,GAAG,KAAK,CAAC;MACzB,IAAIT,YAAY,GAAG,cAAc;MACjC,IAAIuE,UAAU,CAAClH,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC1C,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,QAAQ,EAAE;QAC/E+F,UAAU,CAACC,OAAO,CAAC,CAAC;MACxB;MACA,IAAI,IAAI,CAAC7J,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,QAAQ,IAAI,CAACmB,MAAM,CAACC,cAAc,CAACC,IAAI,CAAChC,IAAI,EAAE,gBAAgB,CAAC,EAAE;QAC7Gd,IAAI,CAACa,MAAM,CAACb,IAAI,CAACM,MAAM,GAAGkH,UAAU,CAAClH,MAAM,EAAEkH,UAAU,CAAClH,MAAM,CAAC;QAC/D,IAAI,IAAI,CAAC1C,MAAM,CAAC2F,UAAU,CAAC,oBAAoB,CAAC,IAAIiE,UAAU,CAAClH,MAAM,IAAI,CAACxD,iBAAiB,CAAC,IAAI,CAACc,MAAM,CAAC2F,UAAU,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC3F,MAAM,CAAC2F,UAAU,CAAC,yBAAyB,CAAC,EAAE;UACtLiE,UAAU,CAACC,OAAO,CAAC,CAAC;UACpB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGF,UAAU,CAAClH,MAAM,EAAEoH,GAAG,EAAE,EAAE;YAC9C,IAAIC,OAAO,GAAGhH,QAAQ,CAAC,IAAI,CAAC/C,MAAM,CAAC2G,eAAe,CAAC,CAAC,CAACK,sBAAsB,CAAC,eAAe,CAAC,CAACjE,QAAQ,CAAC+G,GAAG,CAAC9G,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACmE,YAAY,CAAC,eAAe,CAAC,EAAE,EAAE,CAAC;YAC7J/E,IAAI,CAACa,MAAM,CAAC8G,OAAO,EAAE,CAAC,EAAEH,UAAU,CAAC7G,QAAQ,CAAC+G,GAAG,CAAC9G,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UACrE;QACJ;QACA,IAAI,CAAC,IAAI,CAAChD,MAAM,CAACgK,WAAW,IAAI5H,IAAI,CAACM,MAAM,KAAKhC,kBAAkB,CAACgC,MAAM,EAAE;UACvE,IAAIhC,kBAAkB,CAACgC,MAAM,GAAGkH,UAAU,CAAClH,MAAM,EAAE;YAC/ChC,kBAAkB,CAACuC,MAAM,CAACvC,kBAAkB,CAACgC,MAAM,GAAGkH,UAAU,CAAClH,MAAM,EAAEkH,UAAU,CAAClH,MAAM,CAAC;UAC/F;QACJ,CAAC,MACI;UACD,IAAIuH,YAAY,GAAGvK,WAAW,CAAC0C,IAAI,CAAC;UACpC,IAAI6H,YAAY,CAACvH,MAAM,EAAE;YACrB,IAAIwH,UAAU,GAAGD,YAAY,CAACrH,GAAG,CAAC,UAAUC,CAAC,EAAE;cAAE,OAAOA,CAAC,CAAC,EAAE,GAAG8G,YAAY,CAAC;YAAE,CAAC,CAAC,CAC3E7G,OAAO,CAACpC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGiJ,YAAY,CAAC,CAAC;YACtD,IAAIQ,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAAClK,MAAM,CAACuB,IAAI,CAAC6I,YAAY,CAACC,QAAQ;YAClE3J,kBAAkB,GAAGuJ,YAAY,CAAChH,MAAM,CAACiH,UAAU,EAAEC,QAAQ,CAAC;UAClE;QACJ;MACJ;MACA,IAAI,IAAI,CAAC7J,iBAAiB,CAACoC,MAAM,KAAK,CAAC,EAAE;QACrC,IAAI,CAACpC,iBAAiB,CAACqE,IAAI,CAAC,IAAI,CAAC3E,MAAM,CAACsK,QAAQ,CAACpH,IAAI,CAACT,KAAK,CAAC,CAAC;MACjE;MACA,IAAI,IAAI,CAACzC,MAAM,CAAC2F,UAAU,CAAC,yBAAyB,CAAC,EAAE;QACnDiE,UAAU,CAACC,OAAO,CAAC,CAAC;MACxB;MACA,KAAKlH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiH,UAAU,CAAClH,MAAM,EAAEC,CAAC,EAAE,EAAE;QACpC,IAAI4H,QAAQ,GAAGpL,MAAM,CAAC,CAAC,CAAC,EAAEyK,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjE,OAAOuH,QAAQ,CAACpG,UAAU;QAC1B,OAAOoG,QAAQ,CAACnG,QAAQ;QACxB,OAAOmG,QAAQ,CAAC9H,KAAK;QACrB,OAAO8H,QAAQ,CAACxG,KAAK;QACrB,OAAOwG,QAAQ,CAAC9E,eAAe;QAC/B,OAAO8E,QAAQ,CAAClF,YAAY;QAC5B,OAAOkF,QAAQ,CAAChG,cAAc;QAC9B,IAAI,CAACrF,iBAAiB,CAACqL,QAAQ,CAACnF,aAAa,CAAC,EAAE;UAC5C,OAAOmF,QAAQ,CAACnF,aAAa;QACjC;QACA,IAAIwE,UAAU,CAAClH,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC1C,MAAM,CAAC2F,UAAU,CAAC,yBAAyB,CAAC,EAAE;UAC5E,IAAI6E,WAAW,GAAG,IAAI,CAACxK,MAAM,CAAC2D,YAAY,CAACE,cAAc;UACzD,IAAI,CAAC7D,MAAM,CAAC2D,YAAY,CAACE,cAAc,GAAG,IAAI,CAAC7D,MAAM,CAAC2F,UAAU,CAAC,wBAAwB,CAAC;UAC1F,IAAI,CAAC3F,MAAM,CAAC2F,UAAU,CAAC,wBAAwB,CAAC,GAAG6E,WAAW;QAClE;QACAZ,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACuH,QAAQ,GAAGA,QAAQ;QAC1DzE,YAAY,GAAG,IAAI,CAACxF,iBAAiB,CAACyC,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACjE,IAAI9D,iBAAiB,CAAC4G,YAAY,CAAC,EAAE;UACjCA,YAAY,GAAG,IAAI,CAACxF,iBAAiB,CAACqC,CAAC,GAAG,CAAC,CAAC;QAChD;QACA,IAAI,IAAI,CAACpC,eAAe,EAAE;UACtB,IAAI,CAACrB,iBAAiB,CAAC0K,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACmB,UAAU,CAAC,EAAE;YACvEvE,eAAe,CAAC+J,YAAY,EAAEC,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACmB,UAAU,EAAE,KAAK,EAAE,IAAI,CAACnE,MAAM,EAAE,IAAI,CAACO,eAAe,EAAEqJ,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UACtK;QACJ;QACA,IAAI,CAAC9D,iBAAiB,CAAC4G,YAAY,CAAC,EAAE;UAClC9D,WAAW,GAAG8D,YAAY,CAACrD,KAAK;QACpC;QACA,IAAIvD,iBAAiB,CAAC0K,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACP,KAAK,CAAC,EAAE;UACjET,WAAW,GAAG,CAAC;QACnB;QACA,IAAI,IAAI,CAAChC,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,KAAK,IAAI,IAAI,CAAC7D,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,QAAQ,EAAE;UAC3G,IAAI3E,iBAAiB,CAAC0K,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAACmB,UAAU,CAAC,IAAI,IAAI,CAACjC,aAAa,KAAK,CAAC,CAAC,EAAE;YACnGA,aAAa,GAAG,CAAC,CAAC;YAClB4D,YAAY,GAAG,IAAI;UACvB;QACJ;QACAjG,UAAU,CAAC;UAAEgJ,KAAK,EAAEe,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAAE8F,MAAM,EAAE;QAAM,CAAC,EAAE,IAAI,CAAC9I,MAAM,EAAE,IAAI,CAACO,eAAe,EAAEyB,WAAW,EAAEE,aAAa,EAAE0G,UAAU,EAAE9C,YAAY,CAAC;QACrK5D,aAAa,GAAG,IAAI;QACpB,IAAI,IAAI,CAAClC,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,IAAI,CAAC3E,iBAAiB,CAAC0K,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,KACjIjF,iBAAiB,CAAC,IAAI,CAACc,MAAM,CAAC2F,UAAU,CAAC,aAAa,CAAC,CAAC,IAAI,IAAI,CAACpF,eAAe,CAAC,EAAE;UACpF,IAAIkK,UAAU,GAAG/J,kBAAkB,CAACkC,GAAG,CAAC,UAAUC,CAAC,EAAE;YAAE,OAAOA,CAAC,CAAC,EAAE,GAAG8G,YAAY,CAAC;UAAE,CAAC,CAAC,CACjF7G,OAAO,CAAC8G,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGmB,UAAU,CAAC,CAAC,EAAE,GAAGwF,YAAY,CAAC,CAAC;UACxF,IAAIP,QAAQ,GAAG1I,kBAAkB,CAACqC,QAAQ,CAAC0H,UAAU,CAACzH,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGqC,YAAY,CAAC;UACzF,KAAK,IAAIgE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAAC1G,MAAM,EAAE2G,CAAC,EAAE,EAAE;YACtC,IAAID,QAAQ,CAACrG,QAAQ,CAACsG,CAAC,CAACrG,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG2G,YAAY,CAAC,KAAKC,UAAU,CAAC7G,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG2G,YAAY,CAAC,EAAE;cACvHjJ,kBAAkB,CAACqC,QAAQ,CAAC0H,UAAU,CAACzH,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGqC,YAAY,CAAC,CAACpC,MAAM,CAACoG,CAAC,EAAE,CAAC,CAAC;YAC3F;UACJ;QACJ;MACJ;MACA,IAAIV,YAAY,CAAC,EAAE,GAAGxI,cAAc,CAAC,CAACuC,MAAM,EAAE;QAC1C,KAAKC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgG,YAAY,CAAC,EAAE,GAAGxI,cAAc,CAAC,CAACuC,MAAM,EAAEC,CAAC,EAAE,EAAE;UAC3D9C,UAAU,CAAC;YAAEgJ,KAAK,EAAEF,YAAY,CAAC,EAAE,GAAGxI,cAAc,CAAC,CAAC4C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAAE8F,MAAM,EAAE;UAAS,CAAC,EAAE,IAAI,CAAC9I,MAAM,EAAE,IAAI,CAACO,eAAe,EAAEyB,WAAW,EAAEE,aAAa,EAAE0G,UAAU,EAAE9C,YAAY,CAAC;QACnM;MACJ;MACA,IAAI,CAAC9F,MAAM,CAAC0K,UAAU,GAAG,EAAE;MAC3B,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGvI,IAAI,CAACM,MAAM,EAAEiI,GAAG,EAAE,EAAE;QACxCvI,IAAI,CAACW,QAAQ,CAAC4H,GAAG,CAAC3H,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGP,KAAK,CAAC,GAAGkI,GAAG;QACpDvL,QAAQ,CAAC,qBAAqB,GAAGgD,IAAI,CAACW,QAAQ,CAAC4H,GAAG,CAAC3H,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGoB,QAAQ,CAAC,GAAG,QAAQ,EAAEuG,GAAG,EAAE,IAAI,CAAC3K,MAAM,CAAC;QAChH,IAAI,CAACoC,IAAI,CAACW,QAAQ,CAAC4H,GAAG,CAAC3H,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGe,KAAK,CAAC,EAAE;UACjD,IAAI,CAAC/D,MAAM,CAAC0K,UAAU,CAAC/F,IAAI,CAACvC,IAAI,CAACW,QAAQ,CAAC4H,GAAG,CAAC3H,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACnE;MACJ;IACJ;IACA,IAAI,CAAC1C,iBAAiB,GAAG,IAAI,CAACF,iBAAiB,GAAG,IAAI,CAACK,YAAY,GAAG,IAAI,CAACJ,mBAAmB,GAAG,IAAI,CAACK,kBAAkB,GAAG,EAAE;IAC7H,IAAI,IAAI,CAACV,MAAM,CAAC2F,UAAU,CAAC,yBAAyB,CAAC,EAAE;MACnD,IAAI,CAAC3F,MAAM,CAAC2F,UAAU,CAAC,yBAAyB,CAAC,GAAG,KAAK;IAC7D;EACJ,CAAC;EACD5F,SAAS,CAACc,SAAS,CAAC4D,uBAAuB,GAAG,UAAUhC,KAAK,EAAE;IAC3D,IAAI6F,IAAI,GAAG,IAAI,CAACtI,MAAM,CAACuB,IAAI,CAAC2E,WAAW,CAAC,CAAC;IACzC,IAAI,CAAC,IAAI,CAAClG,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,IAAI,IAAI,CAAC7D,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,KACxG,IAAI,CAAC3B,aAAa,GAAG,CAAC,CAAC,EAAE;MAC5B,IAAI,CAAChD,iBAAiB,CAAC,IAAI,CAACuB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,IAAI,IAAI,CAACvB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC4I,QAAQ,EAAE;QACzG,IAAI,IAAI,CAAC5K,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,IAAI,CAAClG,YAAY,CAAC,CAACwC,MAAM,GAAG,CAAC,IACxD,IAAI,CAAC1C,MAAM,CAACoG,eAAe,CAAC,CAAC,CAAC,IAAI,CAACjG,cAAc,CAAC,CAACuC,MAAM,EAAE;UAC9DD,KAAK,IAAIjD,mBAAmB,CAAC,IAAI,CAACiB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAACU,MAAM;UACxE,IAAI,IAAI,CAAC1C,MAAM,CAAC2D,YAAY,CAACE,cAAc,KAAK,OAAO,EAAE;YACrD,IAAI5D,eAAe,GAAG,IAAI,CAACkC,kBAAkB,CAAC,CAAC;YAC/CM,KAAK,GAAGA,KAAK,GAAGxC,eAAe;UACnC;QACJ,CAAC,MACI;UACDwC,KAAK,IAAIjD,mBAAmB,CAAC,IAAI,CAACiB,YAAY,CAAC,IAAI,CAACuB,WAAW,CAAC,CAAC,CAACU,MAAM;QAC5E;MACJ;MACA,IAAID,KAAK,IAAI6F,IAAI,CAAC5F,MAAM,EAAE;QACtBD,KAAK,GAAG6F,IAAI,CAAC5F,MAAM,GAAG,CAAC;MAC3B;MACA,IAAI,CAAC2D,gBAAgB,CAAC,IAAI,CAACrG,MAAM,CAACuB,IAAI,CAACwE,qBAAqB,CAAC,CAAC,CAAC;MAC/D,IAAI,IAAI,CAAC9F,eAAe,EAAE;QACtBwC,KAAK,IAAI,IAAI,CAACxC,eAAe;MACjC;MACA,IAAI,CAACA,eAAe,GAAG,CAAC;IAC5B;IACA,OAAOwC,KAAK;EAChB,CAAC;EACD1C,SAAS,CAACc,SAAS,CAACW,oBAAoB,GAAG,UAAUqB,CAAC,EAAE;IACpDA,CAAC,CAACK,IAAI,CAAC0C,MAAM,GAAG,IAAI;IACpB,IAAIf,OAAO,GAAG,IAAI,CAAC7E,MAAM,CAACuB,IAAI,CAAC6E,eAAe,CAAC,CAAC;IAChD,IAAIlG,YAAY,GAAG,EAAE;IACrB,IAAIuC,KAAK,GAAG,OAAO;IACnB,IAAIuC,MAAM,CAAC6F,IAAI,CAAChG,OAAO,CAAC,CAACnC,MAAM,EAAE;MAC7BxC,YAAY,GAAG2E,OAAO,CAAC3E,YAAY;IACvC;IACA,KAAK,IAAIyC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzC,YAAY,CAACwC,MAAM,EAAEC,CAAC,EAAE,EAAE;MAC1CE,CAAC,CAACyF,IAAI,CAACrF,MAAM,CAAC/C,YAAY,CAAC6C,QAAQ,CAACJ,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGP,KAAK,CAAC,EAAE,CAAC,CAAC;IAC1E;EACJ,CAAC;EACD1C,SAAS,CAACc,SAAS,CAACY,aAAa,GAAG,UAAUyB,IAAI,EAAE;IAChD,IAAIT,KAAK,GAAG,OAAO;IACnB,IAAIoE,QAAQ,GAAG,UAAU;IACzB,IAAI,IAAI,CAAC7G,MAAM,CAAC0H,eAAe,CAAC,CAAC,CAAChF,MAAM,EAAE;MACtCQ,IAAI,CAAC,EAAE,GAAGT,KAAK,CAAC,GAAG,IAAI,CAACzC,MAAM,CAAC0H,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAGb,QAAQ,CAAC;IACtE,CAAC,MACI;MACD3D,IAAI,CAAC,EAAE,GAAGT,KAAK,CAAC,GAAG,IAAI,CAAC0C,UAAU;IACtC;EACJ,CAAC;EACD,OAAOpF,SAAS;AACpB,CAAC,CAAC,CAAE;AACJ,SAASA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}