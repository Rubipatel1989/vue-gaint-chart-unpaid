{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nimport \"core-js/modules/esnext.iterator.reduce.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { isNullOrUndefined, isUndefined, extend, setValue, getValue, deleteObject, createElement } from '@syncfusion/ej2-base';\nimport { DataManager, Query, ODataAdaptor, WebApiAdaptor, ODataV4Adaptor } from '@syncfusion/ej2-data';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { getSwapKey, isScheduledTask, getTaskData, isRemoteData, getIndex, isCountRequired, updateDates } from '../base/utils';\nimport { CellEdit } from './cell-edit';\nimport { TaskbarEdit } from './taskbar-edit';\nimport { DialogEdit } from './dialog-edit';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MultiSelect, CheckBoxSelection, DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { ConnectorLineEdit } from './connector-line-edit';\nimport { TreeGrid, Edit as TreeGridEdit } from '@syncfusion/ej2-treegrid';\n/**\n * The Edit Module is used to handle editing actions.\n *\n */\nvar Edit = /** @class */function () {\n  function Edit(parent) {\n    this.isFromDeleteMethod = false;\n    this.targetedRecords = [];\n    this.isNewRecordAdded = false;\n    this.isValidatedEditedRecord = false;\n    this.createArray = true;\n    this.deletedRecord = [];\n    this.canReset = false;\n    /** @hidden */\n    this.updateParentRecords = [];\n    /** @hidden */\n    this.isaddtoBottom = false;\n    this.confirmDialog = null;\n    this.taskbarMoved = false;\n    this.predecessorUpdated = false;\n    this.isBreakLoop = false;\n    /**\n     * @private\n     */\n    this.deletedTaskDetails = [];\n    this.parent = parent;\n    this.parent.predecessorModule.validatedChildItems = [];\n    if (this.parent.editSettings.allowEditing && this.parent.editSettings.mode === 'Auto') {\n      this.cellEditModule = new CellEdit(this.parent);\n    }\n    if (this.parent.taskFields.dependency) {\n      this.parent.connectorLineEditModule = new ConnectorLineEdit(this.parent);\n    }\n    if (this.parent.editSettings.allowAdding || this.parent.editSettings.allowEditing && (this.parent.editSettings.mode === 'Dialog' || this.parent.editSettings.mode === 'Auto')) {\n      this.dialogModule = new DialogEdit(this.parent);\n    }\n    if (this.parent.editSettings.allowTaskbarEditing) {\n      this.taskbarEditModule = new TaskbarEdit(this.parent);\n    }\n    if (this.parent.editSettings.allowDeleting) {\n      var confirmDialog = createElement('div', {\n        id: this.parent.element.id + '_deleteConfirmDialog'\n      });\n      this.parent.element.appendChild(confirmDialog);\n      this.renderDeleteConfirmDialog();\n    }\n    this.parent.treeGrid.recordDoubleClick = this.recordDoubleClick.bind(this);\n    this.parent.treeGrid.editSettings.allowAdding = this.parent.editSettings.allowAdding;\n    this.parent.treeGrid.editSettings.allowDeleting = this.parent.editSettings.allowDeleting;\n    this.parent.treeGrid.editSettings.showDeleteConfirmDialog = this.parent.editSettings.showDeleteConfirmDialog;\n    this.parent.treeGrid.editSettings.allowNextRowEdit = this.parent.editSettings.allowNextRowEdit;\n    if (this.parent.editSettings.mode === 'Dialog') {\n      TreeGrid.Inject(TreeGridEdit);\n    }\n    this.updateDefaultColumnEditors();\n  }\n  Edit.prototype.getModuleName = function () {\n    return 'edit';\n  };\n  /**\n   * Method to update default edit params and editors for Gantt\n   *\n   * @returns {void} .\n   */\n  Edit.prototype.updateDefaultColumnEditors = function () {\n    var customEditorColumns = [this.parent.taskFields.id, this.parent.taskFields.progress, this.parent.taskFields.resourceInfo, this.parent.taskFields.type, 'taskType'];\n    for (var i = 0; i < customEditorColumns.length; i++) {\n      if (!isNullOrUndefined(customEditorColumns[i]) && customEditorColumns[i].length > 0) {\n        var column = this.parent.getColumnByField(customEditorColumns[parseInt(i.toString(), 10)], this.parent.treeGridModule.treeGridColumns);\n        if (column) {\n          if (column.field === this.parent.taskFields.id) {\n            this.updateIDColumnEditParams(column);\n          } else if (column.field === this.parent.taskFields.progress && isNullOrUndefined(column.edit)) {\n            this.updateProgessColumnEditParams(column);\n          } else if (column.field === this.parent.taskFields.resourceInfo) {\n            this.updateResourceColumnEditor(column);\n          } else if (column.field === this.parent.taskFields.type || column.field === 'taskType') {\n            this.updateTaskTypeColumnEditor(column);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Method to update editors for id column in Gantt\n   *\n   * @param {ColumnModel} column .\n   * @returns {void} .\n   */\n  Edit.prototype.updateIDColumnEditParams = function (column) {\n    var editParam = {\n      min: 0,\n      decimals: 0,\n      enableRtl: this.parent.enableRtl,\n      validateDecimalOnType: true,\n      format: 'n0',\n      showSpinButton: false\n    };\n    this.updateEditParams(column, editParam);\n  };\n  /**\n   * Method to update edit params of default progress column\n   *\n   * @param {ColumnModel} column .\n   * @returns {void} .\n   */\n  Edit.prototype.updateProgessColumnEditParams = function (column) {\n    var editParam = {\n      min: 0,\n      enableRtl: this.parent.enableRtl,\n      decimals: 0,\n      validateDecimalOnType: true,\n      max: 100,\n      format: 'n0'\n    };\n    this.updateEditParams(column, editParam);\n  };\n  /**\n   * Assign edit params for id and progress columns\n   *\n   * @param {ColumnModel} column .\n   * @param {object} editParam .\n   * @returns {void} .\n   */\n  Edit.prototype.updateEditParams = function (column, editParam) {\n    if (isNullOrUndefined(column.edit)) {\n      column.edit = {};\n      column.edit.params = {};\n    } else if (isNullOrUndefined(column.edit.params)) {\n      column.edit.params = {};\n    }\n    extend(editParam, column.edit.params);\n    column.edit.params = editParam;\n    var ganttColumn = this.parent.getColumnByField(column.field, this.parent.ganttColumns);\n    ganttColumn.edit = column.edit;\n  };\n  /**\n   * Method to update resource column editor for default resource column\n   *\n   * @param {ColumnModel} column .\n   * @returns {void} .\n   */\n  Edit.prototype.updateResourceColumnEditor = function (column) {\n    if (this.parent.editSettings.allowEditing && isNullOrUndefined(column.edit) && this.parent.editSettings.mode === 'Auto') {\n      column.editType = 'dropdownedit';\n      column.edit = this.getResourceEditor();\n      var ganttColumn = this.parent.getColumnByField(column.field, this.parent.ganttColumns);\n      ganttColumn.editType = 'dropdownedit';\n      ganttColumn.edit = column.edit;\n    }\n  };\n  /**\n   * Method to create resource custom editor\n   *\n   * @returns {IEditCell} .\n   */\n  Edit.prototype.getResourceEditor = function () {\n    var _this = this;\n    var resourceSettings = this.parent.resourceFields;\n    var editObject = {};\n    var editor;\n    MultiSelect.Inject(CheckBoxSelection);\n    editObject.write = function (args) {\n      _this.parent.treeGridModule.currentEditRow = {};\n      editor = new MultiSelect({\n        dataSource: new DataManager(_this.parent.resources),\n        fields: {\n          text: resourceSettings.name,\n          value: resourceSettings.id\n        },\n        enableRtl: _this.parent.enableRtl,\n        mode: 'CheckBox',\n        showDropDownIcon: true,\n        popupHeight: '350px',\n        delimiterChar: ',',\n        value: _this.parent.treeGridModule.getResourceIds(args.rowData)\n      });\n      editor.appendTo(args.element);\n    };\n    editObject.read = function (element) {\n      var value = element.ej2_instances[0].value;\n      var resourcesName = [];\n      if (isNullOrUndefined(value)) {\n        value = [];\n      }\n      for (var i = 0; i < value.length; i++) {\n        for (var j = 0; j < _this.parent.resources.length; j++) {\n          if (_this.parent.resources[j][resourceSettings.id] === value[i]) {\n            resourcesName.push(_this.parent.resources[j][resourceSettings.name]);\n            break;\n          }\n        }\n      }\n      _this.parent.treeGridModule.currentEditRow[_this.parent.taskFields.resourceInfo] = value;\n      return resourcesName.join(',');\n    };\n    editObject.destroy = function () {\n      if (editor) {\n        editor.destroy();\n      }\n    };\n    return editObject;\n  };\n  /**\n   * Method to update task type column editor for task type\n   *\n   * @param {ColumnModel} column .\n   * @returns {void} .\n   */\n  Edit.prototype.updateTaskTypeColumnEditor = function (column) {\n    if (this.parent.editSettings.allowEditing && isNullOrUndefined(column.edit) && this.parent.editSettings.mode === 'Auto') {\n      column.editType = 'dropdownedit';\n      column.edit = this.getTaskTypeEditor();\n      var ganttColumn = this.parent.getColumnByField(column.field, this.parent.ganttColumns);\n      ganttColumn.editType = 'dropdownedit';\n      ganttColumn.edit = column.edit;\n    }\n  };\n  /**\n   * Method to create task type custom editor\n   *\n   * @returns {IEditCell} .\n   */\n  Edit.prototype.getTaskTypeEditor = function () {\n    var _this = this;\n    var editObject = {};\n    var editor;\n    var types = [{\n      'ID': 1,\n      'Value': 'FixedUnit'\n    }, {\n      'ID': 2,\n      'Value': 'FixedWork'\n    }, {\n      'ID': 3,\n      'Value': 'FixedDuration'\n    }];\n    editObject.write = function (args) {\n      _this.parent.treeGridModule.currentEditRow = {};\n      editor = new DropDownList({\n        dataSource: new DataManager(types),\n        enableRtl: _this.parent.enableRtl,\n        fields: {\n          value: 'Value'\n        },\n        popupHeight: '350px',\n        value: getValue('taskType', args.rowData.ganttProperties)\n      });\n      editor.appendTo(args.element);\n    };\n    editObject.read = function (element) {\n      var value = element.ej2_instances[0].value;\n      var key = _this.parent.taskFields.type || 'taskType';\n      _this.parent.treeGridModule.currentEditRow[key] = value;\n      return value;\n    };\n    editObject.destroy = function () {\n      if (editor) {\n        editor.destroy();\n      }\n    };\n    return editObject;\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.reUpdateEditModules = function () {\n    var editSettings = this.parent.editSettings;\n    if (editSettings.allowEditing) {\n      if (this.parent.editModule.cellEditModule && editSettings.mode === 'Dialog') {\n        this.cellEditModule.destroy();\n        this.parent.treeGrid.recordDoubleClick = this.recordDoubleClick.bind(this);\n      } else if (isNullOrUndefined(this.parent.editModule.cellEditModule) && editSettings.mode === 'Auto') {\n        this.cellEditModule = new CellEdit(this.parent);\n      }\n      if (this.parent.editModule.dialogModule && editSettings.mode === 'Auto') {\n        this.parent.treeGrid.recordDoubleClick = undefined;\n      } else if (isNullOrUndefined(this.parent.editModule.dialogModule)) {\n        this.dialogModule = new DialogEdit(this.parent);\n      }\n    } else {\n      if (this.cellEditModule) {\n        this.cellEditModule.destroy();\n      }\n      if (this.dialogModule) {\n        this.dialogModule.destroy();\n      }\n    }\n    if (editSettings.allowDeleting && editSettings.showDeleteConfirmDialog) {\n      if (isNullOrUndefined(this.confirmDialog)) {\n        var confirmDialog = createElement('div', {\n          id: this.parent.element.id + '_deleteConfirmDialog'\n        });\n        this.parent.element.appendChild(confirmDialog);\n        this.renderDeleteConfirmDialog();\n      }\n    } else if (!editSettings.allowDeleting || !editSettings.showDeleteConfirmDialog) {\n      if (this.confirmDialog && !this.confirmDialog.isDestroyed) {\n        this.confirmDialog.destroy();\n      }\n    }\n    if (editSettings.allowTaskbarEditing) {\n      if (isNullOrUndefined(this.parent.editModule.taskbarEditModule)) {\n        this.taskbarEditModule = new TaskbarEdit(this.parent);\n      }\n    } else {\n      if (this.taskbarEditModule) {\n        this.taskbarEditModule.destroy();\n      }\n    }\n  };\n  Edit.prototype.recordDoubleClick = function (args) {\n    if (this.parent.editSettings.allowEditing && this.parent.editSettings.mode === 'Dialog') {\n      var ganttData = void 0;\n      if (args.row) {\n        var rowIndex = getValue('rowIndex', args.row);\n        ganttData = this.parent.currentViewData[rowIndex];\n      }\n      if (!isNullOrUndefined(ganttData)) {\n        this.dialogModule.openEditDialog(ganttData);\n      }\n    }\n    this.parent.ganttChartModule.recordDoubleClick(args);\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.destroy = function () {\n    if (this.cellEditModule) {\n      this.cellEditModule.destroy();\n    }\n    if (this.taskbarEditModule) {\n      this.taskbarEditModule.destroy();\n    }\n    if (this.dialogModule) {\n      this.dialogModule.destroy();\n    }\n    if (this.confirmDialog && !this.confirmDialog.isDestroyed) {\n      this.confirmDialog.destroy();\n    }\n  };\n  /**\n   * Method to update record with new values.\n   *\n   * @param {Object} data - Defines new data to update.\n   * @returns {void} .\n   */\n  Edit.prototype.updateRecordByID = function (data) {\n    var _this = this;\n    if (this.parent.enableImmutableMode && this.parent.editSettings.allowEditing && this.parent.treeGrid.element.getElementsByClassName('e-editedbatchcell').length > 0) {\n      this.parent.treeGrid.endEdit();\n    }\n    if (!this.parent.readOnly) {\n      var tasks = this.parent.taskFields;\n      if (isNullOrUndefined(data) || isNullOrUndefined(data[tasks.id])) {\n        return;\n      }\n      var ganttData = this.parent.viewType === 'ResourceView' ? this.parent.flatData[this.parent.getTaskIds().indexOf('T' + data[tasks.id])] : this.parent.getRecordByID(data[tasks.id]);\n      if (!isNullOrUndefined(ganttData[tasks.milestone])) {\n        if (ganttData[tasks.milestone] === true) {\n          ganttData[tasks.milestone] = false;\n        }\n      }\n      if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent']('Edit') && ganttData) {\n        this.parent.undoRedoModule['createUndoCollection']();\n        var details = {};\n        details['requestType'] = this.parent.contextMenuModule && this.parent.contextMenuModule.item ? this.parent.contextMenuModule.item : 'methodUpdate';\n        details['modifiedRecords'] = extend([], [ganttData], [], true);\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n      }\n      if (!isNullOrUndefined(this.parent.editModule) && ganttData) {\n        this.parent.isOnEdit = true;\n        this.validateUpdateValues(data, ganttData, true);\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n          if (this.parent.viewType === 'ProjectView' && data['ganttProperties'].predecessor) {\n            var _loop_1 = function (i) {\n              var isValid = ganttData.ganttProperties.predecessor.filter(function (pred) {\n                if (pred.from === data['ganttProperties'].predecessor[i].from && pred.to === data['ganttProperties'].predecessor[i].to && data['ganttProperties'].predecessor[i].offset !== pred.offset) {\n                  var record = _this.parent.flatData[_this.parent.ids.indexOf(pred.to)];\n                  var changeValue = record.ganttProperties.predecessor.filter(function (pred) {\n                    return pred.from === data['ganttProperties'].predecessor[i].from && pred.to === data['ganttProperties'].predecessor[i].to;\n                  });\n                  changeValue[0].offset = data['ganttProperties'].predecessor[i].offset;\n                }\n                return pred.from !== data['ganttProperties'].predecessor[i].from && pred.from !== data['ganttProperties'].predecessor[i].to;\n              });\n              if (isValid.length > 0) {\n                for (var j = 0; j < isValid.length; j++) {\n                  var record = this_1.parent.flatData[this_1.parent.ids.indexOf(isValid[j].from)];\n                  for (var k = 0; k < record.ganttProperties.predecessor.length; k++) {\n                    if (record.ganttProperties.predecessor[k].from === isValid[j].from && record.ganttProperties.predecessor[k].to === isValid[j].to) {\n                      record.ganttProperties.predecessor.splice(k, 1);\n                      break;\n                    }\n                  }\n                }\n                return \"break\";\n              }\n            };\n            var this_1 = this;\n            for (var i = 0; i < data['ganttProperties'].predecessor.length; i++) {\n              var state_1 = _loop_1(i);\n              if (state_1 === \"break\") break;\n            }\n          } else if (!data['ganttProperties'].predecessor && ganttData.ganttProperties.predecessor) {\n            for (var i = 0; i < ganttData.ganttProperties.predecessor.length; i++) {\n              var id = void 0;\n              if (ganttData.ganttProperties.taskId.toString() === ganttData.ganttProperties.predecessor[i].from) {\n                id = ganttData.ganttProperties.predecessor[i].to;\n              } else {\n                id = ganttData.ganttProperties.predecessor[i].from;\n              }\n              var parentRec = this.parent.flatData[this.parent.ids.indexOf(id)];\n              for (var j = 0; j < parentRec.ganttProperties.predecessor.length; j++) {\n                if (parentRec.ganttProperties.predecessor[j].from === ganttData.ganttProperties.predecessor[i].from && parentRec.ganttProperties.predecessor[j].to === ganttData.ganttProperties.predecessor[i].to) {\n                  parentRec.ganttProperties.predecessor.splice(j, 1);\n                }\n              }\n            }\n          }\n          ganttData.ganttProperties.resourceInfo = data['ganttProperties'].resourceInfo;\n        }\n        if (data[this.parent.taskFields.resourceInfo]) {\n          if (ganttData.ganttProperties.duration === 0) {\n            this.parent.dataOperation.updateWorkWithDuration(ganttData);\n          }\n          if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            this.updateResourceRelatedFields(ganttData, 'resource');\n          }\n          this.parent.dateValidationModule.calculateEndDate(ganttData);\n        }\n        var keys = Object.keys(data);\n        if (keys.indexOf(tasks.startDate) !== -1 || keys.indexOf(tasks.endDate) !== -1 || keys.indexOf(tasks.duration) !== -1) {\n          this.parent.dataOperation.calculateScheduledValues(ganttData, ganttData.taskData, false);\n        }\n        this.parent.dataOperation.updateWidthLeft(ganttData);\n        if (!isUndefined(data[this.parent.taskFields.dependency]) && data[this.parent.taskFields.dependency] !== ganttData.ganttProperties.predecessorsName) {\n          this.parent.connectorLineEditModule.updatePredecessor(ganttData, data[this.parent.taskFields.dependency]);\n        } else {\n          var args = {};\n          args.data = ganttData;\n          if (this.parent.viewType === 'ResourceView') {\n            args.action = 'methodUpdate';\n          }\n          this.parent.editModule.initiateUpdateAction(args);\n        }\n      }\n    }\n  };\n  /**\n   *\n   * @param {object} data .\n   * @param {IGanttData} ganttData .\n   * @param {boolean} isFromDialog .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.validateUpdateValues = function (data, ganttData, isFromDialog) {\n    var ganttObj = this.parent;\n    var tasks = ganttObj.taskFields;\n    var ganttPropByMapping = getSwapKey(ganttObj.columnMapping);\n    var scheduleFieldNames = [];\n    var isScheduleValueUpdated = false;\n    for (var _i = 0, _b = Object.keys(data); _i < _b.length; _i++) {\n      var key = _b[_i];\n      if ([tasks.startDate, tasks.endDate, tasks.duration].indexOf(key) !== -1) {\n        if (isNullOrUndefined(data[\"\" + key]) && !ganttObj.allowUnscheduledTasks) {\n          continue;\n        }\n        if (isFromDialog) {\n          if (tasks.duration === key) {\n            ganttObj.dataOperation.updateDurationValue(data[key], ganttData.ganttProperties);\n            if (ganttData.ganttProperties.duration > 0 && ganttData.ganttProperties.isMilestone) {\n              this.parent.setRecordValue('isMilestone', false, ganttData.ganttProperties, true);\n            }\n            ganttObj.dataOperation.updateMappingData(ganttData, ganttPropByMapping[key]);\n          } else {\n            var tempDate = typeof data[key] === 'string' ? new Date(data[key]) : data[key];\n            if (key === tasks.endDate && isNullOrUndefined(ganttData.ganttProperties.startDate) && (isNullOrUndefined(data[tasks.duration]) || data[tasks.duration] === '' || Number.isNaN(data[tasks.duration]))) {\n              tempDate = ganttData.ganttProperties.endDate;\n            }\n            ganttObj.setRecordValue(ganttPropByMapping[key], tempDate, ganttData.ganttProperties, true);\n            ganttObj.dataOperation.updateMappingData(ganttData, ganttPropByMapping[key]);\n          }\n        } else {\n          scheduleFieldNames.push(key);\n          isScheduleValueUpdated = true;\n        }\n      } else if (tasks.resourceInfo === key) {\n        var resourceData = ganttObj.dataOperation.setResourceInfo(data);\n        if (this.parent.viewType === 'ResourceView') {\n          if (JSON.stringify(resourceData) !== JSON.stringify(ganttData.ganttProperties.resourceInfo)) {\n            this.parent.editModule.dialogModule.isResourceUpdate = true;\n            this.parent.editModule.dialogModule.previousResource = !isNullOrUndefined(ganttData.ganttProperties.resourceInfo) ? ganttData.ganttProperties.resourceInfo.slice() : [];\n          } else {\n            this.parent.editModule.dialogModule.isResourceUpdate = false;\n          }\n        }\n        if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n          ganttData.ganttProperties.resourceInfo = resourceData;\n        }\n        ganttObj.dataOperation.updateMappingData(ganttData, 'resourceInfo');\n      } else if (tasks.dependency === key) {\n        //..\n      } else if ([tasks.progress, tasks.notes, tasks.durationUnit, tasks.expandState, tasks.milestone, tasks.name, tasks.baselineStartDate, tasks.baselineEndDate, tasks.id, tasks.segments, tasks.cssClass].indexOf(key) !== -1) {\n        var column = ganttObj.columnByField[key];\n        /* eslint-disable-next-line */\n        var value = data[key];\n        if (!isNullOrUndefined(column) && (column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit')) {\n          value = ganttObj.dataOperation.getDateFromFormat(value);\n        }\n        var ganttPropKey = ganttPropByMapping[key];\n        if (key === tasks.id) {\n          ganttPropKey = 'taskId';\n        } else if (key === tasks.name) {\n          ganttPropKey = 'taskName';\n        } else if (key === tasks.cssClass) {\n          ganttPropKey = 'cssClass';\n        } else if (key === tasks.milestone) {\n          ganttPropKey = 'isMilestone';\n          if (!isNullOrUndefined(tasks.duration)) {\n            var ganttProp = ganttData.ganttProperties;\n            var durationValue = data[tasks.duration];\n            if (value) {\n              durationValue = 0;\n            } else {\n              durationValue = durationValue <= 0 ? 1 : durationValue;\n            }\n            ganttObj.setRecordValue(tasks.duration, durationValue, ganttData, true);\n            ganttObj.setRecordValue('duration', durationValue, ganttProp, true);\n            ganttObj.setRecordValue('taskData.' + tasks.duration, durationValue, ganttData);\n          }\n        } else if (key === tasks.segments && !isNullOrUndefined(ganttData.ganttProperties.segments)) {\n          ganttPropKey = 'segments';\n          /* eslint-disable-next-line */\n          if (data && !isNullOrUndefined(data[this.parent.taskFields.segments]) && data[this.parent.taskFields.segments].length > 0) {\n            if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n              ganttData.ganttProperties.segments = data['ganttProperties'].segments;\n            }\n            var totDuration = 0;\n            for (var i = 0; i < ganttData.ganttProperties.segments.length; i++) {\n              totDuration = totDuration + ganttData.ganttProperties.segments[i].duration;\n            }\n            var sdate = ganttData.ganttProperties.startDate;\n            /* eslint-disable-next-line */\n            var edate = this.parent.dataOperation.getEndDate(sdate, totDuration, ganttData.ganttProperties.durationUnit, ganttData.ganttProperties, false);\n            ganttObj.setRecordValue('endDate', ganttObj.dataOperation.getDateFromFormat(edate), ganttData.ganttProperties, true);\n          }\n        }\n        if (!isNullOrUndefined(ganttPropKey)) {\n          var seg = [];\n          if (ganttPropKey === 'segments' && value && value.length > 0) {\n            for (var i = 0; i < value.length; i++) {\n              var segment = {};\n              if (value[i][this.parent.taskFields.startDate]) {\n                segment['startDate'] = value[i][this.parent.taskFields.startDate];\n              }\n              if (value[i][this.parent.taskFields.endDate]) {\n                segment['endDate'] = value[i][this.parent.taskFields.endDate];\n              }\n              if (value[i][this.parent.taskFields.duration]) {\n                segment['duration'] = parseFloat(value[i][this.parent.taskFields.duration]);\n              }\n              if (value[i][this.parent.taskFields.id]) {\n                segment['id'] = value[i][this.parent.taskFields.id];\n              }\n              seg.push(segment);\n            }\n            ganttObj.setRecordValue(ganttPropKey, seg, ganttData.ganttProperties, true);\n          } else {\n            ganttObj.setRecordValue(ganttPropKey, value, ganttData.ganttProperties, true);\n          }\n        }\n        if ((key === tasks.baselineStartDate || key === tasks.baselineEndDate) && ganttData.ganttProperties.baselineStartDate && ganttData.ganttProperties.baselineEndDate) {\n          ganttObj.setRecordValue('baselineStartDate', ganttObj.dataOperation.checkBaselineStartDate(ganttData.ganttProperties.baselineStartDate, ganttData.ganttProperties), ganttData.ganttProperties, true);\n          var dayEndTime = this.parent['getCurrentDayEndTime'](ganttData.ganttProperties.baselineEndDate);\n          if (ganttData.ganttProperties.baselineEndDate && ganttData.ganttProperties.baselineEndDate.getHours() === 0 && dayEndTime !== 86400) {\n            ganttObj.dataOperation.setTime(dayEndTime, ganttData.ganttProperties.baselineEndDate);\n          }\n          if (ganttData.ganttProperties.baselineStartDate && ganttData.ganttProperties.baselineEndDate && ganttData.ganttProperties.baselineStartDate.getTime() > ganttData.ganttProperties.baselineEndDate.getTime() || !isNullOrUndefined(ganttData.ganttProperties.baselineStartDate) && !isNullOrUndefined(ganttData.ganttProperties.startDate) && ganttData.ganttProperties.baselineStartDate.getTime() === ganttData.ganttProperties.startDate.getTime() && !isNullOrUndefined(ganttData.ganttProperties.baselineEndDate) && !isNullOrUndefined(ganttData.ganttProperties.endDate) && ganttData.ganttProperties.baselineEndDate.toLocaleDateString() === ganttData.ganttProperties.endDate.toLocaleDateString() && ganttData.ganttProperties.isMilestone) {\n            ganttData.ganttProperties.baselineEndDate = ganttData.ganttProperties.baselineStartDate;\n          }\n          ganttObj.setRecordValue('baselineEndDate', ganttObj.dataOperation.checkBaselineEndDate(ganttData.ganttProperties.baselineEndDate), ganttData.ganttProperties, true);\n          ganttObj.setRecordValue('baselineLeft', ganttObj.dataOperation.calculateBaselineLeft(ganttData.ganttProperties), ganttData.ganttProperties, true);\n          ganttObj.setRecordValue('baselineWidth', ganttObj.dataOperation.calculateBaselineWidth(ganttData.ganttProperties), ganttData.ganttProperties, true);\n        }\n        ganttObj.setRecordValue('taskData.' + key, value, ganttData);\n        /* eslint-disable-next-line */\n        if (key === tasks.segments && data && !isNullOrUndefined(data[this.parent.taskFields.segments]) && data[this.parent.taskFields.segments].length > 0) {\n          if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            ganttData.ganttProperties.segments = data['ganttProperties'].segments;\n          }\n          ganttObj.dataOperation.setSegmentsInfo(ganttData, true);\n        }\n        ganttObj.setRecordValue(key, value, ganttData);\n      } else if (tasks.indicators === key) {\n        var value = data[key];\n        ganttObj.setRecordValue('indicators', value, ganttData.ganttProperties, true);\n        ganttObj.setRecordValue('taskData.' + key, value, ganttData);\n        ganttObj.setRecordValue(key, value, ganttData);\n      } else if (tasks.work === key) {\n        ganttObj.setRecordValue('work', data[key], ganttData.ganttProperties, true);\n        this.parent.dataOperation.updateMappingData(ganttData, 'work');\n        this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n        this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n      } else if (key === tasks.type) {\n        ganttObj.setRecordValue('taskType', data[key], ganttData.ganttProperties, true);\n        //this.parent.dataOperation.updateMappingData(ganttData, 'taskType');\n      } else if (ganttObj.customColumns.indexOf(key) !== -1) {\n        var column = ganttObj.columnByField[key];\n        /* eslint-disable-next-line */\n        var value = data[key];\n        if (isNullOrUndefined(column.edit)) {\n          if (column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit') {\n            value = ganttObj.dataOperation.getDateFromFormat(value);\n          }\n        }\n        ganttObj.setRecordValue('taskData.' + key, value, ganttData);\n        ganttObj.setRecordValue(key, value, ganttData);\n      } else if (tasks.manual === key) {\n        ganttObj.setRecordValue('isAutoSchedule', !data[key], ganttData.ganttProperties, true);\n        this.parent.setRecordValue(key, data[key], ganttData);\n        this.updateTaskScheduleModes(ganttData);\n      }\n    }\n    if (isScheduleValueUpdated) {\n      this.validateScheduleValues(scheduleFieldNames, ganttData, data);\n    }\n  };\n  /**\n   * To update duration, work, resource unit\n   *\n   * @param {IGanttData} currentData .\n   * @param {string} column .\n   * @returns {void} .\n   */\n  Edit.prototype.updateResourceRelatedFields = function (currentData, column) {\n    var ganttProp = currentData.ganttProperties;\n    var taskType = ganttProp.taskType;\n    var isEffectDriven;\n    var isAutoSchedule = ganttProp.isAutoSchedule;\n    var resources = this.parent.editModule.dialogModule && this.parent.editModule.dialogModule['currentResources'] ? this.parent.editModule.dialogModule['currentResources'] : currentData.ganttProperties.resourceInfo;\n    if (!isNullOrUndefined(resources)) {\n      switch (taskType) {\n        case 'FixedUnit':\n          if (resources.length === 0) {\n            return;\n          } else if (isAutoSchedule && resources.length) {\n            if (column === 'resource') {\n              this.parent.dataOperation.updateWorkWithDuration(currentData);\n            } else if (column === 'work') {\n              this.parent.dataOperation.updateDurationWithWork(currentData);\n            } else if (column === 'duration' || column === 'endDate') {\n              this.parent.dataOperation.updateWorkWithDuration(currentData);\n              if (ganttProp.duration === 0) {\n                this.parent.setRecordValue('isMilestone', true, ganttProp, true);\n              }\n            }\n          } else if (!isAutoSchedule && column === 'work') {\n            this.parent.dataOperation.updateUnitWithWork(currentData);\n          } else {\n            this.parent.dataOperation.updateWorkWithDuration(currentData);\n          }\n          break;\n        case 'FixedWork':\n          if (resources.length === 0) {\n            return;\n          } else if (isAutoSchedule) {\n            if (column === 'duration' || column === 'endDate') {\n              this.parent.dataOperation.updateUnitWithWork(currentData);\n              this.parent.dataOperation.updateDurationWithWork(currentData);\n              if (ganttProp.duration === 0) {\n                this.parent.setRecordValue('isMilestone', true, ganttProp, true);\n                this.parent.setRecordValue('work', 0, ganttProp, true);\n                if (!isNullOrUndefined(this.parent.taskFields.work)) {\n                  this.parent.dataOperation.updateMappingData(currentData, 'work');\n                }\n              }\n            } else {\n              this.parent.dataOperation.updateDurationWithWork(currentData);\n            }\n          } else {\n            if (column === 'work') {\n              this.parent.dataOperation.updateUnitWithWork(currentData);\n            } else {\n              this.parent.dataOperation.updateWorkWithDuration(currentData);\n            }\n          }\n          break;\n        case 'FixedDuration':\n          if (resources.length === 0) {\n            // To validate the work column, if set duration as 0 via celledit action, where resource colection is 0\n            this.parent.dataOperation.updateWorkWithDuration(currentData);\n            return;\n          }\n          if (resources.length && (column === 'work' || isAutoSchedule && isEffectDriven && column === 'resource')) {\n            if (column === 'work') {\n              this.parent.dataOperation.updateUnitWithWork(currentData);\n            } else {\n              this.parent.dataOperation.updateWorkWithDuration(currentData);\n              this.parent.dataOperation.updateUnitWithWork(currentData);\n            }\n          } else {\n            this.parent.dataOperation.updateWorkWithDuration(currentData);\n          }\n          break;\n      }\n    }\n    // To validate the work colum if set duration as 0, while resource is null/undefined\n    else if (isNullOrUndefined(resources) && taskType === 'FixedDuration' && ganttProp.duration === 0) {\n      this.parent.dataOperation.updateWorkWithDuration(currentData);\n    }\n  };\n  Edit.prototype.validateScheduleValues = function (fieldNames, ganttData, data) {\n    var ganttObj = this.parent;\n    if (fieldNames.length > 2) {\n      ganttObj.dataOperation.calculateScheduledValues(ganttData, data, false);\n    } else if (fieldNames.length > 1) {\n      this.validateScheduleByTwoValues(data, fieldNames, ganttData);\n    } else {\n      this.dialogModule.validateScheduleValuesByCurrentField(fieldNames[0], data[fieldNames[0]], ganttData);\n    }\n  };\n  Edit.prototype.validateScheduleByTwoValues = function (data, fieldNames, ganttData) {\n    var ganttObj = this.parent;\n    var startDate;\n    var endDate;\n    var duration;\n    var tasks = ganttObj.taskFields;\n    var ganttProp = ganttData.ganttProperties;\n    var isUnscheduledTask = ganttObj.allowUnscheduledTasks;\n    if (fieldNames.indexOf(tasks.startDate) !== -1) {\n      startDate = data[tasks.startDate];\n    }\n    if (fieldNames.indexOf(tasks.endDate) !== -1) {\n      endDate = data[tasks.endDate];\n    }\n    if (fieldNames.indexOf(tasks.duration) !== -1) {\n      duration = data[tasks.duration];\n    }\n    if (startDate && endDate || isUnscheduledTask && fieldNames.indexOf(tasks.startDate) !== -1 && fieldNames.indexOf(tasks.endDate) !== -1) {\n      ganttObj.setRecordValue('startDate', ganttObj.dataOperation.getDateFromFormat(startDate), ganttProp, true);\n      ganttObj.setRecordValue('endDate', ganttObj.dataOperation.getDateFromFormat(endDate), ganttProp, true);\n      ganttObj.dataOperation.calculateDuration(ganttData);\n    } else if (endDate && duration || isUnscheduledTask && fieldNames.indexOf(tasks.endDate) !== -1 && fieldNames.indexOf(tasks.duration) !== -1) {\n      ganttObj.setRecordValue('endDate', ganttObj.dataOperation.getDateFromFormat(endDate), ganttProp, true);\n      ganttObj.dataOperation.updateDurationValue(duration, ganttProp);\n    } else if (startDate && duration || isUnscheduledTask && fieldNames.indexOf(tasks.startDate) !== -1 && fieldNames.indexOf(tasks.duration) !== -1) {\n      ganttObj.setRecordValue('startDate', ganttObj.dataOperation.getDateFromFormat(startDate), ganttProp, true);\n      ganttObj.dataOperation.updateDurationValue(duration, ganttProp);\n    }\n  };\n  Edit.prototype.isTaskbarMoved = function (data) {\n    var isMoved = false;\n    var taskData = data.ganttProperties;\n    var prevData = this.parent.previousRecords && this.parent.previousRecords[data.uniqueID];\n    if (prevData && prevData.ganttProperties) {\n      var prevStart = getValue('ganttProperties.startDate', prevData);\n      var prevEnd = getValue('ganttProperties.endDate', prevData);\n      var prevDuration = getValue('ganttProperties.duration', prevData);\n      var prevDurationUnit = getValue('ganttProperties.durationUnit', prevData);\n      var keys = Object.keys(prevData.ganttProperties);\n      if (keys.indexOf('startDate') !== -1 || keys.indexOf('endDate') !== -1 || keys.indexOf('duration') !== -1 || keys.indexOf('durationUnit') !== -1) {\n        if (isNullOrUndefined(prevStart) && !isNullOrUndefined(taskData.startDate) || isNullOrUndefined(prevEnd) && !isNullOrUndefined(taskData.endDate) || isNullOrUndefined(taskData.startDate) && !isNullOrUndefined(prevStart) || isNullOrUndefined(taskData.endDate) && !isNullOrUndefined(prevEnd) || prevStart && prevStart.getTime() !== taskData.startDate.getTime() || prevEnd && prevEnd.getTime() !== taskData.endDate.getTime() || !isNullOrUndefined(prevDuration) && prevDuration !== taskData.duration || !isNullOrUndefined(prevDuration) && prevDuration === taskData.duration && prevDurationUnit !== taskData.durationUnit) {\n          isMoved = true;\n        }\n      }\n    }\n    return isMoved;\n  };\n  Edit.prototype.isPredecessorUpdated = function (data) {\n    var isPredecessorUpdated = false;\n    var prevData = this.parent.previousRecords[data.uniqueID];\n    // eslint-disable-next-line\n    if (prevData && prevData.ganttProperties && prevData.ganttProperties.hasOwnProperty('predecessor')) {\n      if (data.ganttProperties.predecessorsName !== prevData.ganttProperties.predecessorsName && !(data.ganttProperties.predecessorsName === '' && isNullOrUndefined(prevData.ganttProperties.predecessorsName))) {\n        isPredecessorUpdated = true;\n      } else {\n        this.parent.setRecordValue('predecessor', prevData.ganttProperties.predecessor, data.ganttProperties, true);\n      }\n    }\n    return isPredecessorUpdated;\n  };\n  /**\n   * Method to check need to open predecessor validate dialog\n   *\n   * @param {IGanttData} data .\n   * @returns {boolean} .\n   */\n  Edit.prototype.isCheckPredecessor = function (data) {\n    var isValidatePredecessor = false;\n    var prevData = this.parent.previousRecords[data.uniqueID];\n    if (prevData && this.parent.taskFields.dependency && this.parent.isInPredecessorValidation && this.parent.predecessorModule.getValidPredecessor(data).length > 0) {\n      if (this.isTaskbarMoved(data)) {\n        isValidatePredecessor = true;\n      }\n    }\n    return isValidatePredecessor;\n  };\n  /**\n   * Method to copy the ganttProperties values\n   *\n   * @param {IGanttData} data .\n   * @param {IGanttData} updateData .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.updateGanttProperties = function (data, updateData) {\n    var skipProperty = ['taskId', 'uniqueID', 'rowUniqueID', 'parentId'];\n    Object.keys(data.ganttProperties).forEach(function (property) {\n      if (skipProperty.indexOf(property) === -1) {\n        updateData.ganttProperties[property] = data.ganttProperties[property];\n      }\n    });\n  };\n  /**\n   * Method to update all dependent record on edit action\n   *\n   * @param {ITaskAddedEventArgs} args .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.initiateUpdateAction = function (args) {\n    var isValidatePredecessor = this.isCheckPredecessor(args.data);\n    var parentData;\n    var childRecordIndex;\n    if (!isNullOrUndefined(args.data.parentItem) && !isValidatePredecessor) {\n      parentData = this.parent.getRecordByID(args.data.parentItem.taskId);\n      if (this.isTaskbarMoved(args.data) && this.parent.predecessorModule.getValidPredecessor(parentData).length > 0 && this.parent.isInPredecessorValidation) {\n        isValidatePredecessor = true;\n      } else {\n        isValidatePredecessor = false;\n      }\n    } else if (args.data.childRecords.length > 0 && !isValidatePredecessor) {\n      isValidatePredecessor = this.isCheckPredecessor(args.data);\n      if (!isValidatePredecessor && this.isTaskbarMoved(args.data)) {\n        for (var i = 0; i < args.data.childRecords.length; i++) {\n          if (this.parent.predecessorModule.getValidPredecessor(args.data.childRecords[i]).length > 0) {\n            childRecordIndex = i;\n            isValidatePredecessor = true;\n          }\n        }\n      }\n    }\n    if (!this.parent.undoRedoModule || this.parent.undoRedoModule && !this.parent.undoRedoModule['currentAction'] || this.parent.undoRedoModule['currentAction'] && this.parent.undoRedoModule['currentAction']['action'] !== 'indent' && this.parent.undoRedoModule['currentAction']['action'] !== 'outdent') {\n      this.taskbarMoved = this.isTaskbarMoved(args.data);\n    }\n    this.predecessorUpdated = this.isPredecessorUpdated(args.data);\n    if (this.predecessorUpdated) {\n      this.parent.isConnectorLineUpdate = true;\n      this.parent.connectorLineEditModule.addRemovePredecessor(args.data);\n    }\n    var validateObject = {};\n    if (isValidatePredecessor && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n      if (!isNullOrUndefined(parentData)) {\n        validateObject = this.parent.connectorLineEditModule.validateTypes(parentData, args.data);\n      } else if (!isNullOrUndefined(childRecordIndex)) {\n        validateObject = this.parent.connectorLineEditModule.validateTypes(args.data.childRecords[childRecordIndex], args.data);\n      } else {\n        validateObject = this.parent.connectorLineEditModule.validateTypes(args.data);\n      }\n      this.parent.isConnectorLineUpdate = true;\n      if (!isNullOrUndefined(getValue('violationType', validateObject))) {\n        var newArgs = this.validateTaskEvent(args);\n        if (newArgs.validateMode.preserveLinkWithEditing === false && newArgs.validateMode.removeLink === false && newArgs.validateMode.respectLink === false) {\n          this.parent.connectorLineEditModule.openValidationDialog(validateObject);\n        } else {\n          if (this.parent.editModule && this.parent.editModule.dialogModule && this.parent.editModule.dialogModule['isEdit'] && this.predecessorUpdated) {\n            this.isValidatedEditedRecord = true;\n            this.parent.predecessorModule.validatePredecessor(args.data, [], '');\n          }\n          this.parent.connectorLineEditModule.applyPredecessorOption();\n        }\n      } else {\n        this.updateEditedTask(args);\n      }\n    } else {\n      if (this.taskbarMoved) {\n        this.parent.isConnectorLineUpdate = true;\n      }\n      this.updateEditedTask(args);\n    }\n  };\n  /**\n   *\n   * @param {ITaskbarEditedEventArgs} editedEventArgs method to trigger validate predecessor link by dialog\n   * @returns {IValidateArgs} .\n   */\n  Edit.prototype.validateTaskEvent = function (editedEventArgs) {\n    var newArgs = {};\n    this.resetValidateArgs();\n    this.parent.currentEditedArgs = newArgs;\n    newArgs.cancel = false;\n    newArgs.data = editedEventArgs.data;\n    newArgs.requestType = 'validateLinkedTask';\n    newArgs.validateMode = this.parent.dialogValidateMode;\n    newArgs.editEventArgs = editedEventArgs;\n    this.parent.actionBeginTask(newArgs);\n    return newArgs;\n  };\n  Edit.prototype.resetValidateArgs = function () {\n    this.parent.dialogValidateMode.preserveLinkWithEditing = true;\n    this.parent.dialogValidateMode.removeLink = false;\n    this.parent.dialogValidateMode.respectLink = false;\n  };\n  Edit.prototype.validateChildPredecessors = function () {\n    for (var i = 0; i < this.parent.predecessorModule.validatedChildItems.length; i++) {\n      var child = this.parent.predecessorModule.validatedChildItems[i];\n      if (child.ganttProperties.predecessor && child.ganttProperties.predecessor.length > 0) {\n        this.parent.editedTaskBarItem = child;\n        if (!this.isValidatedEditedRecord) {\n          this.isFirstCall = true;\n        }\n        this.parent.predecessorModule.validatePredecessor(child, [], '');\n      }\n    }\n  };\n  /**\n   *\n   * @param {ITaskAddedEventArgs} args - Edited event args like taskbar editing, dialog editing, cell editing\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.updateEditedTask = function (args) {\n    var ganttRecord = args.data;\n    this.editedRecord = ganttRecord;\n    if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n      this.updateParentChildRecord(ganttRecord);\n    }\n    if (this.parent.predecessorModule) {\n      this.parent.predecessorModule.isValidatedParentTaskID = '';\n    }\n    if ((this.parent.isConnectorLineUpdate || this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n      /* validating predecessor for updated child items */\n      this.validateChildPredecessors();\n      /** validating predecessor for current edited records */\n      if (ganttRecord.ganttProperties.predecessor) {\n        this.parent.isMileStoneEdited = ganttRecord.ganttProperties.isMilestone;\n        if (this.taskbarMoved) {\n          this.parent.editedTaskBarItem = ganttRecord;\n        }\n        if (!this.isValidatedEditedRecord) {\n          this.isFirstCall = true;\n          this.parent.predecessorModule.validatePredecessor(ganttRecord, [], '');\n          this.parent.predecessorModule.isChildRecordValidated = [];\n        }\n        this.isValidatedEditedRecord = false;\n      }\n      this.parent.predecessorModule.isValidatedParentTaskID = '';\n      if (this.parent.allowParentDependency && this.parent.predecessorModule.isValidatedParentTaskID !== ganttRecord.ganttProperties.taskId && ganttRecord.hasChildRecords && this.parent.previousRecords[ganttRecord.uniqueID].ganttProperties.startDate && args.action !== 'TaskbarEditing' && (!ganttRecord.hasChildRecords || ganttRecord.hasChildRecords && ganttRecord.ganttProperties.isAutoSchedule)) {\n        this.parent.predecessorModule['updateChildItems'](ganttRecord);\n        this.validateChildPredecessors();\n      }\n      this.parent.predecessorModule.isValidatedParentTaskID = '';\n      if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n        for (var i = 0; i < ganttRecord.childRecords.length; i++) {\n          if (ganttRecord.childRecords[i].ganttProperties.predecessor) {\n            this.parent.predecessorModule.validatePredecessor(ganttRecord.childRecords[i], [], '');\n          }\n        }\n      }\n      this.updateParentItemOnEditing();\n      this.parent.dataOperation.updateParentItems(ganttRecord, true);\n    }\n    /** Update parent up-to zeroth level */\n    if (ganttRecord.parentItem) {\n      if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n        this.parent.dataOperation.updateParentItems(ganttRecord, true);\n      }\n      var parentData = this.parent.getRecordByID(ganttRecord.parentItem.taskId);\n      if (!isNullOrUndefined(parentData)) {\n        if (!parentData.ganttProperties.predecessorsName) {\n          this.isFirstCall = true;\n          this.parent.predecessorModule.validatePredecessor(parentData, [], '');\n          this.updateParentItemOnEditing();\n        }\n      }\n    }\n    if (this.parent.updateOffsetOnTaskbarEdit && this.parent.connectorLineEditModule && args.data) {\n      this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n      this.parent.connectorLineEditModule['calculateOffset'](args.data);\n    }\n    this.parent.predecessorModule['validatedParentIds'] = [];\n    if (isNullOrUndefined(this.dialogModule) || this.dialogModule && !this.dialogModule['isFromDialogPredecessor']) {\n      this.initiateSaveAction(args);\n    }\n  };\n  Edit.prototype.updateParentItemOnEditing = function () {\n    var _this = this;\n    var childRecord = getValue('parentRecord', this.parent.predecessorModule);\n    for (var i = 0; i < childRecord.length; i++) {\n      this.parent.dataOperation.updateParentItems(childRecord[i]);\n    }\n    if (this.parent.editModule['updateParentRecords'] && this.parent.editModule['updateParentRecords'].length > 0) {\n      this.parent.editModule['updateParentRecords'].forEach(function (record) {\n        if (record.ganttProperties.predecessor && record.ganttProperties.predecessor.length > 0) {\n          _this.parent.predecessorModule.validatePredecessor(record, [], '');\n        }\n      });\n    }\n    for (var i = 0; i < childRecord.length; i++) {\n      this.parent.dataOperation.updateParentItems(childRecord[i]);\n    }\n    setValue('parentRecord', [], this.parent.predecessorModule);\n    setValue('parentIds', [], this.parent.predecessorModule);\n  };\n  /**\n   * To update parent records while perform drag action.\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.updateParentChildRecord = function (data) {\n    var ganttRecord = data;\n    if (ganttRecord.hasChildRecords && this.taskbarMoved && (ganttRecord[this.parent.taskFields.manual] === false || this.parent.taskMode === 'Auto') && !isNullOrUndefined(this.parent.editModule.cellEditModule) && !this.parent.editModule.cellEditModule.isResourceCellEdited) {\n      this.parent.predecessorModule['updateChildItems'](ganttRecord);\n    }\n    if (!isNullOrUndefined(this.parent.editModule.cellEditModule)) {\n      this.parent.editModule.cellEditModule.isResourceCellEdited = false;\n    }\n  };\n  /**\n   * To update records while changing schedule mode.\n   *\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.updateTaskScheduleModes = function (data) {\n    var currentValue = data[this.parent.taskFields.startDate];\n    var ganttProp = data.ganttProperties;\n    if (this.parent.taskFields.manual) {\n      this.parent.setRecordValue(this.parent.taskFields.manual, !data.ganttProperties.isAutoSchedule, data);\n    }\n    if (data.hasChildRecords && ganttProp.isAutoSchedule) {\n      this.parent.setRecordValue('startDate', ganttProp.autoStartDate, ganttProp, true);\n      this.parent.setRecordValue('endDate', ganttProp.autoEndDate, ganttProp, true);\n      this.parent.setRecordValue('StartDate', ganttProp.autoStartDate, data, true);\n      this.parent.setRecordValue('EndDate', ganttProp.autoEndDate, data, true);\n      this.parent.setRecordValue('taskData.StartDate', ganttProp.autoStartDate, data, true);\n      this.parent.setRecordValue('taskData.EndDate', ganttProp.autoEndDate, data, true);\n      this.parent.setRecordValue('width', this.parent.dataOperation.calculateWidth(data, true), ganttProp, true);\n      this.parent.setRecordValue('left', this.parent.dataOperation.calculateLeft(ganttProp, true), ganttProp, true);\n      this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth(ganttProp.width, ganttProp.progress), ganttProp, true);\n      this.parent.dataOperation.calculateDuration(data);\n    } else if (data.hasChildRecords && !ganttProp.isAutoSchedule) {\n      this.parent.dataOperation.updateWidthLeft(data);\n      this.parent.dataOperation.calculateDuration(data);\n      this.parent.setRecordValue('autoStartDate', ganttProp.autoStartDate, ganttProp, true);\n      this.parent.setRecordValue('autoEndDate', ganttProp.autoEndDate, ganttProp, true);\n      this.parent.setRecordValue('autoDuration', this.parent.dataOperation.calculateAutoDuration(data), ganttProp, true);\n      this.parent.dataOperation.updateAutoWidthLeft(data);\n    } else {\n      var startDate = this.parent.dateValidationModule.checkStartDate(currentValue, data.ganttProperties);\n      this.parent.setRecordValue('startDate', startDate, data.ganttProperties, true);\n      this.parent.dataOperation.updateMappingData(data, 'startDate');\n      this.parent.dateValidationModule.calculateEndDate(data);\n      this.parent.setRecordValue('taskData.' + this.parent.taskFields.manual, data[this.parent.taskFields.manual], data);\n      this.parent.dataOperation.updateWidthLeft(data);\n    }\n  };\n  /**\n   * To update progress value of parent tasks\n   *\n   * @param {IParent} cloneParent .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.updateParentProgress = function (cloneParent) {\n    var parentProgress = 0;\n    var parent = this.parent.getParentTask(cloneParent);\n    var childRecords = parent.childRecords;\n    var childCount = childRecords ? childRecords.length : 0;\n    var totalProgress = 0;\n    var milesStoneCount = 0;\n    var taskCount = 0;\n    var totalDuration = 0;\n    var progressValues = {};\n    if (childRecords) {\n      for (var i = 0; i < childCount; i++) {\n        if ((!childRecords[i].ganttProperties.isMilestone || childRecords[i].hasChildRecords) && isScheduledTask(childRecords[i].ganttProperties)) {\n          progressValues = this.parent.dataOperation.getParentProgress(childRecords[i]);\n          totalProgress += getValue('totalProgress', progressValues);\n          totalDuration += getValue('totalDuration', progressValues);\n        } else {\n          milesStoneCount += 1;\n        }\n      }\n      taskCount = childCount - milesStoneCount;\n      parentProgress = taskCount > 0 ? Math.round(totalProgress / totalDuration) : 0;\n      if (isNaN(parentProgress)) {\n        parentProgress = 0;\n      }\n      this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth(parent.ganttProperties.isAutoSchedule ? parent.ganttProperties.width : parent.ganttProperties.autoWidth, parentProgress), parent.ganttProperties, true);\n      this.parent.setRecordValue('progress', Math.floor(parentProgress), parent.ganttProperties, true);\n      this.parent.setRecordValue('totalProgress', totalProgress, parent.ganttProperties, true);\n      this.parent.setRecordValue('totalDuration', totalDuration, parent.ganttProperties, true);\n    }\n    this.parent.dataOperation.updateTaskData(parent);\n    if (parent.parentItem) {\n      this.updateParentProgress(parent.parentItem);\n    }\n  };\n  /**\n   * Method to revert cell edit action\n   *\n   * @param {object} args .\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n  Edit.prototype.revertCellEdit = function (args) {\n    this.parent.editModule.reUpdatePreviousRecords(false, true);\n    this.resetEditProperties();\n  };\n  /**\n   * @param {boolean} isRefreshChart .\n   * @param {boolean} isRefreshGrid .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.reUpdatePreviousRecords = function (isRefreshChart, isRefreshGrid) {\n    var collection = this.parent.previousRecords;\n    var keys = Object.keys(collection);\n    for (var i = 0; i < keys.length; i++) {\n      var uniqueId = keys[i];\n      var prevTask = collection[uniqueId];\n      var originalData = this.parent.getTaskByUniqueID(uniqueId);\n      this.copyTaskData(originalData.taskData, prevTask.taskData);\n      delete prevTask.taskData;\n      this.copyTaskData(originalData.ganttProperties, prevTask.ganttProperties);\n      delete prevTask.ganttProperties;\n      this.copyTaskData(originalData, prevTask);\n      var rowIndex = this.parent.currentViewData.indexOf(originalData);\n      if (isRefreshChart) {\n        this.parent.chartRowsModule.refreshRow(rowIndex);\n      }\n      if (isRefreshGrid) {\n        var dataId = this.parent.viewType === 'ProjectView' ? originalData.ganttProperties.taskId : originalData.ganttProperties.rowUniqueID;\n        this.parent.treeGrid.grid.setRowData(dataId, originalData);\n        var row = this.parent.treeGrid.grid.getRowObjectFromUID(this.parent.treeGrid.grid.getDataRows()[rowIndex].getAttribute('data-uid'));\n        row.data = originalData;\n      }\n    }\n  };\n  /**\n   * Copy previous task data value to edited task data\n   *\n   * @param {object} existing .\n   * @param {object} newValue .\n   * @returns {void} .\n   */\n  Edit.prototype.copyTaskData = function (existing, newValue) {\n    if (!isNullOrUndefined(newValue)) {\n      extend(existing, newValue);\n    }\n  };\n  /**\n   * To update schedule date on editing.\n   *\n   * @param {ITaskbarEditedEventArgs} args .\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n  Edit.prototype.updateScheduleDatesOnEditing = function (args) {\n    //..\n  };\n  /**\n   * @param {ITaskbarEditedEventArgs} args .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.initiateSaveAction = function (args) {\n    var _this = this;\n    var eventArgs = {};\n    eventArgs.requestType = 'beforeSave';\n    eventArgs.data = args.data;\n    eventArgs.cancel = false;\n    this.createArray = true;\n    if (this.parent.toolbarModule && this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['getUndoCollection'].length > 0) {\n      this.parent.toolbarModule.enableItems([this.parent.controlId + '_undo'], true); // enable toolbar items.\n    }\n    eventArgs.modifiedRecords = this.parent.editedRecords;\n    if (!isNullOrUndefined(args.target)) {\n      eventArgs.target = args.target;\n    }\n    eventArgs.modifiedTaskData = getTaskData(this.parent.editedRecords, true);\n    if (args.action === 'DrawConnectorLine' || args.action === 'DeleteConnectorLine') {\n      eventArgs.action = args.action;\n      if (args.action === 'DeleteConnectorLine') {\n        this.parent.connectorLineEditModule['isPublicDependencyDelete'] = false;\n        if (this.parent.contextMenuModule) {\n          this.parent.contextMenuModule['isCntxtMenuDependencyDelete'] = false;\n        }\n      }\n    }\n    var ganttObj = this.parent;\n    var currentBaselineStart = __assign({}, eventArgs.data.ganttProperties.baselineStartDate);\n    var currentBaselineEnd = __assign({}, eventArgs.data.ganttProperties.baselineEndDate);\n    var currentProgress = eventArgs.data.ganttProperties.progress;\n    /* eslint-disable-next-line */\n    var unModifiedData = JSON.parse(JSON.stringify(eventArgs.data.ganttProperties));\n    this.parent.trigger('actionBegin', eventArgs, function (eventArg) {\n      if (currentBaselineStart !== eventArg.data['ganttProperties'].baselineStartDate || currentBaselineEnd !== eventArg.data['ganttProperties'].baselineEndDate) {\n        ganttObj.setRecordValue('baselineLeft', ganttObj.dataOperation.calculateBaselineLeft(eventArg.data['ganttProperties']), eventArg.data['ganttProperties'], true);\n        ganttObj.setRecordValue('baselineWidth', ganttObj.dataOperation.calculateBaselineWidth(eventArg.data['ganttProperties']), eventArg.data['ganttProperties'], true);\n      }\n      if (_this.parent.autoCalculateDateScheduling && unModifiedData !== eventArg.data['ganttProperties'] && !isNullOrUndefined(eventArg.data['parentItem'])) {\n        _this.updateParentItemOnEditing();\n        _this.parent.dataOperation.updateParentItems(eventArg.data, true);\n      }\n      var ganttProps = eventArg.data['ganttProperties'];\n      var startDate = ganttProps.startDate,\n        endDate = ganttProps.endDate,\n        segments = ganttProps.segments,\n        durationUnit = ganttProps.durationUnit,\n        isAutoSchedule = ganttProps.isAutoSchedule,\n        isMilestone = ganttProps.isMilestone;\n      if (startDate && endDate && !segments) {\n        var duration = _this.parent.dateValidationModule.getDuration(startDate, endDate, durationUnit, isAutoSchedule, isMilestone, true);\n        if (duration !== 0) {\n          ganttProps.isMilestone = false;\n          _this.parent.dateValidationModule.calculateDuration(eventArg.data);\n        }\n      }\n      _this.parent.dataOperation.updateWidthLeft(eventArg.data);\n      if (!isNullOrUndefined(_this.parent.taskFields.progress) && currentProgress !== eventArg.data['ganttProperties'].progress) {\n        var width = eventArg.data['ganttProperties'].isAutoSchedule ? eventArg.data['ganttProperties'].width : eventArg.data['ganttProperties'].autoWidth;\n        _this.parent.setRecordValue('progressWidth', _this.parent.dataOperation.getProgressWidth(width, eventArg.data['ganttProperties'].progress), eventArg.data['ganttProperties'], true);\n      }\n      _this.parent.chartRowsModule.updateSegment(eventArg.data['ganttProperties'].segments, eventArg.data['ganttProperties'].taskId);\n      if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n        _this.parent.showMaskRow();\n      } else {\n        _this.parent.showSpinner();\n      }\n      if (eventArg.cancel) {\n        _this.reUpdatePreviousRecords();\n        _this.parent.chartRowsModule.refreshRecords([args.data]);\n        _this.resetEditProperties(eventArgs);\n        // Trigger action complete event with save canceled request type\n      } else {\n        // To update task data for modified records.\n        if (eventArg.modifiedRecords) {\n          for (var i = 0; i < eventArg.modifiedRecords.length; i++) {\n            _this.parent.dataOperation.updateTaskData(eventArg.modifiedRecords[i]);\n          }\n        }\n        eventArg.modifiedTaskData = getTaskData(eventArg.modifiedRecords, null, null, _this.parent);\n        if (isRemoteData(_this.parent.dataSource)) {\n          var data = _this.parent.dataSource;\n          var updatedData = {\n            changedRecords: eventArg.modifiedTaskData\n          };\n          var query = _this.parent.query instanceof Query ? _this.parent.query : new Query();\n          var crud = null;\n          var dataAdaptor = data.adaptor;\n          if (!(dataAdaptor instanceof WebApiAdaptor && dataAdaptor instanceof ODataAdaptor) || data.dataSource.batchUrl) {\n            crud = data.saveChanges(updatedData, _this.parent.taskFields.id, null, query);\n          } else {\n            var changedRecords = 'changedRecords';\n            crud = data.update(_this.parent.taskFields.id, updatedData[changedRecords], null, query);\n          }\n          crud.then(function (e) {\n            return _this.dmSuccess(e, args);\n          }).catch(function (e) {\n            return _this.dmFailure(e, args);\n          });\n        } else {\n          _this.saveSuccess(args);\n        }\n        if (_this.parent.enableVirtualization && _this.parent.enableTimelineVirtualization) {\n          _this.parent.ganttChartModule['setVirtualHeight']();\n        }\n        if (_this.parent.undoRedoModule) {\n          _this.parent.previousFlatData = extend([], _this.parent.flatData, [], true);\n        }\n      }\n    });\n    this.parent.ganttChartModule.reRenderConnectorLines();\n  };\n  /* eslint-disable-next-line */\n  Edit.prototype.updateEditedFields = function (e) {\n    var eLength;\n    var rec;\n    if (e.changedRecords) {\n      eLength = e.changedRecords['length'];\n    } else {\n      eLength = e['length'];\n    }\n    for (var i = 0; i < eLength; i++) {\n      if (e.changedRecords) {\n        rec = e.changedRecords[parseInt(i.toString(), 10)];\n      } else {\n        rec = e[parseInt(i.toString(), 10)];\n      }\n      var _aLength = Object.keys(rec).length;\n      for (var j = 0, _a = Object.keys(rec); j < _aLength; j++) {\n        var key = _a[parseInt(j.toString(), 10)];\n        this.parent.editedRecords[parseInt(i.toString(), 10)][\"\" + key] = rec[\"\" + key];\n        this.parent.editedRecords[parseInt(i.toString(), 10)].taskData[\"\" + key] = rec[\"\" + key];\n      }\n      this.updateEditedRecordFields(rec, this.parent.editedRecords[parseInt(i.toString(), 10)]);\n    }\n  };\n  /* eslint-disable-next-line */\n  Edit.prototype.dmSuccess = function (e, args) {\n    this.updateEditedFields(e);\n    this.saveSuccess(args);\n  };\n  Edit.prototype.updateEditedRecordFields = function (rec, editedRecord) {\n    var fields = this.parent.taskFields;\n    var _aLength = Object.keys(rec).length;\n    for (var j = 0, _a = Object.keys(rec); j < _aLength; j++) {\n      var key = _a[parseInt(j.toString(), 10)];\n      editedRecord[\"\" + key] = rec[\"\" + key];\n    }\n    if (fields.id !== null) {\n      editedRecord.ganttProperties['taskId'] = rec[fields.id];\n    }\n    if (fields.name !== null) {\n      editedRecord.ganttProperties['taskName'] = rec[fields.name];\n    }\n    if (fields.startDate !== null) {\n      editedRecord.ganttProperties['startDate'] = rec[fields.startDate];\n    }\n    if (fields.endDate !== null) {\n      editedRecord.ganttProperties['endDate'] = rec[fields.endDate];\n    }\n    if (fields.duration !== null) {\n      editedRecord.ganttProperties['duration'] = parseFloat(rec[fields.duration]);\n    }\n    if (fields.durationUnit !== null) {\n      editedRecord.ganttProperties['durationUnit'] = rec[fields.durationUnit];\n    }\n    if (fields.progress !== null) {\n      editedRecord.ganttProperties['progress'] = rec[fields.progress];\n    }\n    if (fields.dependency !== null) {\n      editedRecord.ganttProperties['dependency'] = rec[fields.dependency];\n    }\n    if (fields.parentID !== null) {\n      editedRecord.ganttProperties['parentID'] = rec[fields.parentID];\n    }\n    if (fields.baselineEndDate !== null) {\n      editedRecord.ganttProperties['baselineEndDate'] = rec[fields.baselineEndDate];\n    }\n    if (fields.baselineStartDate !== null) {\n      editedRecord.ganttProperties['baselineStartDate'] = rec[fields.baselineStartDate];\n    }\n    if (fields.resourceInfo !== null) {\n      editedRecord.ganttProperties['resources'] = rec[fields.resourceInfo];\n    }\n  };\n  Edit.prototype.dmFailure = function (e, args) {\n    if (this.deletedTaskDetails.length) {\n      var deleteRecords = this.deletedTaskDetails;\n      for (var d = 0; d < deleteRecords.length; d++) {\n        deleteRecords[d].isDelete = false;\n      }\n      this.deletedTaskDetails = [];\n    }\n    this.reUpdatePreviousRecords(true, true);\n    this.resetEditProperties();\n    this.parent.trigger('actionFailure', {\n      error: e\n    });\n  };\n  Edit.prototype.updateSharedTask = function (data) {\n    var ids = data.ganttProperties.sharedTaskUniqueIds;\n    for (var i = 0; i < ids.length; i++) {\n      var editRecord = this.parent.flatData[this.parent.ids.indexOf(ids[i].toString())];\n      if (editRecord && editRecord.uniqueID !== data.uniqueID) {\n        this.updateGanttProperties(data, editRecord);\n        this.parent.setRecordValue('taskData', data.taskData, editRecord, true);\n        this.parent.dataOperation.updateTaskData(editRecord);\n        this.parent.dataOperation.updateResourceName(editRecord);\n        if (!isNullOrUndefined(editRecord.parentItem)) {\n          this.parent.dataOperation.updateParentItems(editRecord.parentItem);\n        }\n      }\n    }\n  };\n  /**\n   * Method for save action success for local and remote data\n   *\n   * @param {ITaskAddedEventArgs} args .\n   * @returns {void} .\n   */\n  Edit.prototype.saveSuccess = function (args) {\n    var eventArgs = {};\n    if (this.parent.timelineSettings.updateTimescaleView) {\n      var tempArray = this.parent.editedRecords;\n      this.parent.timelineModule.updateTimeLineOnEditing([tempArray], args.action);\n    }\n    if (this.parent.viewType === 'ResourceView') {\n      if (args.action === 'TaskbarEditing' || args.action === 'DrawConnectorLine' || args.action === 'DeleteConnectorLine') {\n        this.updateSharedTask(args.data);\n      } else if (args.action === 'DialogEditing' || args.action === 'CellEditing' || args.action === 'methodUpdate') {\n        if (this.parent.editModule.dialogModule.isResourceUpdate) {\n          /* eslint-disable-next-line */\n          this.updateResoures(this.parent.editModule.dialogModule.previousResource, args.data.ganttProperties.resourceInfo, args.data);\n          this.updateSharedTask(args.data);\n          this.isTreeGridRefresh = true;\n        } else {\n          this.updateSharedTask(args.data);\n        }\n      }\n      // method to update the edited parent records\n      for (var k = 0; k < this.updateParentRecords.length; k++) {\n        this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n      }\n      this.updateParentRecords = [];\n      this.parent.editModule.dialogModule.isResourceUpdate = false;\n      this.parent.editModule.dialogModule.previousResource = [];\n    }\n    var criticalModule = this.parent.criticalPathModule;\n    if (this.parent.enableCriticalPath && criticalModule && criticalModule.criticalPathCollection) {\n      criticalModule.showCriticalPath(true);\n      criticalModule.criticalConnectorLine(criticalModule.criticalPathCollection, criticalModule.detailPredecessorCollection, true, criticalModule.predecessorCollectionTaskIds);\n    }\n    if (!this.isTreeGridRefresh) {\n      if (this.parent.editSettings.allowEditing && this.parent.treeGrid.element.getElementsByClassName('e-editedbatchcell').length > 0) {\n        if (!this.parent.treeGrid.grid.element.querySelector('form').ej2_instances[0].validate()) {\n          setValue('isEdit', false, this.parent.treeGrid.grid);\n          this.parent.editModule.cellEditModule.isCellEdit = false;\n        }\n        this.parent.treeGrid.endEdit();\n      }\n      this.parent.chartRowsModule.refreshRecords(this.parent.editedRecords);\n      if (!this.parent.allowTaskbarOverlap && this.parent.showOverAllocation) {\n        this.parent.contentHeight = this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n        this.parent.ganttChartModule.chartBodyContent.style.height = this.parent.contentHeight + 'px';\n        this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n        if (this.parent.taskFields.dependency) {\n          this.parent.ganttChartModule.reRenderConnectorLines();\n        }\n      }\n      if ((this.parent.isConnectorLineUpdate || this.parent.undoRedoModule && this.parent.undoRedoModule['currentAction'] && this.parent.undoRedoModule['currentAction']['connectedRecords']) && !isNullOrUndefined(this.parent.connectorLineEditModule)) {\n        this.parent.updatedConnectorLineCollection = [];\n        this.parent.connectorLineIds = [];\n        this.parent.connectorLineEditModule.refreshEditedRecordConnectorLine(this.parent.editedRecords);\n        this.parent.ganttChartModule.reRenderConnectorLines();\n        this.updateScheduleDatesOnEditing(args);\n      }\n    }\n    if (!this.parent.editSettings.allowTaskbarEditing || this.parent.editSettings.allowTaskbarEditing && !this.taskbarEditModule.dependencyCancel) {\n      eventArgs.requestType = 'save';\n      eventArgs.data = args.data;\n      eventArgs.modifiedRecords = this.parent.editedRecords;\n      eventArgs.modifiedTaskData = getTaskData(this.parent.editedRecords, null, null, this.parent);\n      this.updateRowIndex();\n      if (!isNullOrUndefined(args.action)) {\n        setValue('action', args.action, eventArgs);\n      }\n      if (args.action === 'TaskbarEditing') {\n        eventArgs.taskBarEditAction = args.taskBarEditAction;\n      }\n      this.endEditAction(args);\n      this.parent.trigger('actionComplete', eventArgs);\n      if (this.parent.allowTaskbarDragAndDrop && this.parent.rowDragAndDropModule && this.parent.rowDragAndDropModule['draggedRecord']) {\n        this.parent.rowDragAndDropModule['draggedRecord'] = null;\n      }\n      if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n        this.parent.hideMaskRow();\n      } else {\n        this.parent.hideSpinner();\n      }\n    } else {\n      this.taskbarEditModule.dependencyCancel = false;\n      this.resetEditProperties();\n    }\n    if (this.parent.viewType === 'ResourceView' && this.isTreeGridRefresh) {\n      this.parent.treeGrid.parentData = [];\n      this.parent.updatedConnectorLineCollection = [];\n      this.parent.connectorLineIds = [];\n      this.parent.predecessorModule.createConnectorLinesCollection(this.parent.flatData);\n      this.parent.treeGrid.refresh();\n      this.isTreeGridRefresh = false;\n    }\n    this.parent.editedRecords = [];\n  };\n  Edit.prototype.updateResoures = function (prevResource, currentResource, updateRecord) {\n    var flatRecords = this.parent.flatData;\n    var currentLength = currentResource ? currentResource.length : 0;\n    var previousLength = prevResource ? prevResource.length : 0;\n    if (currentLength === 0 && previousLength === 0) {\n      return;\n    }\n    for (var index = 0; index < currentLength; index++) {\n      var recordIndex = [];\n      var resourceID = parseInt(currentResource[index][this.parent.resourceFields.id], 10).toString();\n      if (resourceID === 'NaN') {\n        resourceID = currentResource[index][this.parent.resourceFields.id];\n      }\n      for (var i = 0; i < prevResource.length; i++) {\n        var prevResourceID = parseInt(prevResource[i][this.parent.resourceFields.id], 10).toString();\n        if (prevResourceID === 'NaN') {\n          prevResourceID = prevResource[i][this.parent.resourceFields.id];\n        }\n        if (prevResourceID === resourceID) {\n          recordIndex.push(i);\n          break;\n        }\n      }\n      if (recordIndex.length === 0) {\n        var parentRecord = flatRecords[this.parent.getTaskIds().indexOf('R' + resourceID)];\n        if (parentRecord) {\n          this.addNewRecord(updateRecord, parentRecord);\n        }\n      } else {\n        var record1 = parseInt(recordIndex[0].toString(), 10);\n        if (record1.toString() === 'NaN') {\n          record1 = recordIndex[0].toString();\n        }\n        prevResource.splice(record1, 1);\n      }\n    }\n    var prevLength = prevResource ? prevResource.length : 0;\n    for (var index = 0; index < prevLength; index++) {\n      var taskID = updateRecord.ganttProperties.taskId;\n      var resourceID = prevResource[index][this.parent.resourceFields.id];\n      var record = flatRecords[this.parent.getTaskIds().indexOf('R' + resourceID)];\n      if (!isNullOrUndefined(record)) {\n        for (var j = 0; j < record.childRecords.length; j++) {\n          if (record.childRecords[j].ganttProperties.taskId === taskID) {\n            this.removeChildRecord(record.childRecords[j]);\n          }\n        }\n      }\n    }\n    if (currentLength > 0) {\n      var parentTask = this.parent.getParentTask(updateRecord.parentItem);\n      if (parentTask) {\n        if (parentTask.ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n          this.removeChildRecord(updateRecord);\n        }\n      }\n    }\n    //Assign resource to unassigned task\n    if (currentLength === 0) {\n      this.checkWithUnassignedTask(updateRecord);\n    }\n    if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.flatData[this.parent.flatData.length - 1].ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n      this.parent.flatData.splice(this.parent.flatData.length - 1, 1);\n      this.parent.currentViewData.splice(this.parent.currentViewData.length - 1, 1);\n      this.parent.taskIds.splice(this.parent.flatData.length - 1, 1);\n      this.parent.ids.splice(this.parent.flatData.length - 1, 1);\n    }\n  };\n  /**\n   * @param {IGanttData} updateRecord .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.checkWithUnassignedTask = function (updateRecord) {\n    var unassignedTasks = null;\n    // Block for check the unassigned task.\n    for (var i = 0; i < this.parent.flatData.length; i++) {\n      if (this.parent.flatData[i].ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n        unassignedTasks = this.parent.flatData[i];\n      }\n    }\n    if (!isNullOrUndefined(unassignedTasks)) {\n      this.addNewRecord(updateRecord, unassignedTasks);\n    } else {\n      // Block for create the unassigned task.\n      var unassignTaskObj = {};\n      unassignTaskObj[this.parent.taskFields.id] = 0;\n      unassignTaskObj[this.parent.taskFields.name] = this.parent.localeObj.getConstant('unassignedTask');\n      var beforeEditStatus = this.parent.isOnEdit;\n      this.parent.isOnEdit = false;\n      var cAddedRecord = this.parent.dataOperation.createRecord(unassignTaskObj, 0);\n      this.parent.isOnEdit = beforeEditStatus;\n      this.addRecordAsBottom(cAddedRecord);\n      var parentRecord = this.parent.flatData[this.parent.flatData.length - 1];\n      this.addNewRecord(updateRecord, parentRecord);\n      /* eslint-disable-next-line */\n      var source = this.parent.dataSource;\n      source.push(updateRecord.taskData);\n    }\n    var updatedData = this.parent.currentViewData.filter(function (data) {\n      return data.ganttProperties.taskId === updateRecord.ganttProperties.taskId && data.hasChildRecords === updateRecord.hasChildRecords;\n    })[0];\n    updateRecord.parentItem = updatedData.parentItem;\n    updateRecord.parentUniqueID = updatedData.parentUniqueID;\n  };\n  Edit.prototype.addRecordAsBottom = function (cAddedRecord) {\n    var recordIndex1 = this.parent.flatData.length;\n    this.parent.currentViewData.splice(recordIndex1 + 1, 0, cAddedRecord);\n    this.parent.flatData.splice(recordIndex1 + 1, 0, cAddedRecord);\n    this.parent.ids.splice(recordIndex1 + 1, 0, cAddedRecord.ganttProperties.rowUniqueID.toString());\n    var taskId = cAddedRecord.level === 0 ? 'R' + cAddedRecord.ganttProperties.taskId : 'T' + cAddedRecord.ganttProperties.taskId;\n    this.parent.getTaskIds().splice(recordIndex1 + 1, 0, taskId);\n    this.updateTreeGridUniqueID(cAddedRecord, 'add');\n  };\n  Edit.prototype.addNewRecord = function (updateRecord, parentRecord) {\n    var cAddedRecord = null;\n    cAddedRecord = extend({}, {}, updateRecord, true);\n    this.parent.setRecordValue('uniqueID', getUid(this.parent.element.id + '_data_'), cAddedRecord);\n    this.parent.setRecordValue('uniqueID', cAddedRecord.uniqueID, cAddedRecord.ganttProperties, true);\n    var uniqueId = cAddedRecord.uniqueID.replace(this.parent.element.id + '_data_', '');\n    this.parent.setRecordValue('rowUniqueID', uniqueId, cAddedRecord);\n    this.parent.setRecordValue('rowUniqueID', uniqueId, cAddedRecord.ganttProperties, true);\n    this.parent.setRecordValue('level', 1, cAddedRecord);\n    if (this.parent.taskFields.parentID) {\n      this.parent.setRecordValue('parentId', parentRecord.ganttProperties.taskId, cAddedRecord.ganttProperties, true);\n    }\n    this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentRecord), cAddedRecord);\n    var parentUniqId = cAddedRecord.parentItem ? cAddedRecord.parentItem.uniqueID : null;\n    this.parent.setRecordValue('parentUniqueID', parentUniqId, cAddedRecord);\n    updateRecord.ganttProperties.sharedTaskUniqueIds.push(uniqueId);\n    cAddedRecord.ganttProperties.sharedTaskUniqueIds = updateRecord.ganttProperties.sharedTaskUniqueIds;\n    this.addRecordAsChild(parentRecord, cAddedRecord);\n  };\n  Edit.prototype.removeChildRecord = function (record) {\n    var gObj = this.parent;\n    var data = [];\n    if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.json.length > 0) {\n      data = this.parent.dataSource.dataSource.json;\n    } else {\n      data = this.parent.currentViewData;\n    }\n    var dataSource = this.parent.dataSource;\n    var deletedRow = record;\n    var flatParentData = this.parent.getParentTask(deletedRow.parentItem);\n    if (deletedRow) {\n      if (deletedRow.parentItem) {\n        var deleteChildRecords = flatParentData ? flatParentData.childRecords : [];\n        var childIndex = 0;\n        if (deleteChildRecords && deleteChildRecords.length > 0) {\n          if (deleteChildRecords.length === 1) {\n            //For updating the parent record which has no child reords.\n            this.parent.isOnDelete = true;\n            deleteChildRecords[0].isDelete = true;\n            this.parent.dataOperation.updateParentItems(flatParentData);\n            this.parent.isOnDelete = false;\n            deleteChildRecords[0].isDelete = false;\n          }\n          childIndex = deleteChildRecords.indexOf(deletedRow);\n          flatParentData.childRecords.splice(childIndex, 1);\n          // collection for updating parent record\n          this.updateParentRecords.push(flatParentData);\n        }\n      }\n      if (deletedRow.ganttProperties.sharedTaskUniqueIds.length) {\n        var uniqueIDIndex = deletedRow.ganttProperties.sharedTaskUniqueIds.indexOf(deletedRow.ganttProperties.rowUniqueID);\n        deletedRow.ganttProperties.sharedTaskUniqueIds.splice(uniqueIDIndex, 1);\n      }\n      this.updateTreeGridUniqueID(deletedRow, 'delete');\n      //method to delete the record from datasource collection\n      if (!this.parent.taskFields.parentID) {\n        var deleteRecordIDs = [];\n        deleteRecordIDs.push(deletedRow.ganttProperties.rowUniqueID.toString());\n        if (this.parent.viewType === 'ProjectView') {\n          this.parent.editModule.removeFromDataSource(deleteRecordIDs);\n        }\n      }\n      var flatRecordIndex = this.parent.flatData.indexOf(deletedRow);\n      if (gObj.taskFields.parentID) {\n        var idx = void 0;\n        var ganttData = this.parent.currentViewData;\n        for (var i = 0; i < ganttData.length; i++) {\n          if (ganttData[i].ganttProperties.rowUniqueID === deletedRow.ganttProperties.rowUniqueID) {\n            idx = i;\n          }\n        }\n        if (idx !== -1) {\n          if (dataSource.length > 0) {\n            dataSource.splice(idx, 1);\n          }\n          data.splice(idx, 1);\n          this.parent.flatData.splice(flatRecordIndex, 1);\n          this.parent.ids.splice(flatRecordIndex, 1);\n          this.parent.getTaskIds().splice(flatRecordIndex, 1);\n        }\n      }\n      var recordIndex = data.indexOf(deletedRow);\n      if (!gObj.taskFields.parentID) {\n        var deletedRecordCount = this.parent.editModule.getChildCount(deletedRow, 0);\n        data.splice(recordIndex, deletedRecordCount + 1);\n        this.parent.flatData.splice(flatRecordIndex, deletedRecordCount + 1);\n        this.parent.ids.splice(flatRecordIndex, deletedRecordCount + 1);\n        this.parent.getTaskIds().splice(flatRecordIndex, deletedRecordCount + 1);\n      }\n      if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n        this.parent.setRecordValue('expanded', false, flatParentData);\n        this.parent.setRecordValue('hasChildRecords', false, flatParentData);\n      }\n    }\n  };\n  // Method to add new record after resource edit\n  Edit.prototype.addRecordAsChild = function (droppedRecord, draggedRecord) {\n    var gObj = this.parent;\n    var recordIndex1 = this.parent.flatData.indexOf(droppedRecord);\n    var childRecords = this.parent.editModule.getChildCount(droppedRecord, 0);\n    var childRecordsLength;\n    var spliceIndex;\n    var parentTask = this.parent.getTaskByUniqueID(draggedRecord.parentItem.uniqueID);\n    if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.dialogModule['indexes'] && this.dialogModule['indexes'].deletedIndexes && this.dialogModule['indexes'].deletedIndexes.length > 0) {\n      if (parentTask.ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n        childRecordsLength = this.parent.taskIds.length + 1;\n      } else {\n        for (var j = 0; j < this.dialogModule['indexes'].deletedIndexes.length; j++) {\n          if (this.dialogModule['indexes'].deletedIndexes[j].data.parentUniqueID === draggedRecord.parentUniqueID && draggedRecord.ganttProperties.taskId === this.dialogModule['indexes'].deletedIndexes[j].data.ganttProperties.taskId) {\n            var toIndex = this.dialogModule['indexes'].deletedIndexes[j].index;\n            if (this.dialogModule['indexes'].deletedIndexes[j].position === 'above') {\n              childRecordsLength = toIndex;\n            } else {\n              childRecordsLength = toIndex + 1;\n            }\n            for (var i = 0; i < droppedRecord.childRecords.length; i++) {\n              if ('T' + droppedRecord.childRecords[i].ganttProperties.taskId === this.dialogModule['indexes'].deletedIndexes[j].id) {\n                if (this.dialogModule['indexes'].deletedIndexes[j].position === 'above') {\n                  spliceIndex = i;\n                } else {\n                  spliceIndex = i + 1;\n                }\n                break;\n              }\n            }\n            break;\n          } else if (this.dialogModule['indexes'].deletedIndexes[j].data.parentUniqueID !== draggedRecord.parentUniqueID && draggedRecord.ganttProperties.taskId === this.dialogModule['indexes'].deletedIndexes[j].data.ganttProperties.taskId) {\n            var draggedParent = this.parent.getTaskByUniqueID(draggedRecord.parentItem.uniqueID);\n            childRecordsLength = draggedParent.index + draggedParent.childRecords.length + 1;\n            break;\n          }\n        }\n      }\n    } else if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && parentTask.ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask') && this.parent.undoRedoModule['currentAction']['deletedRecordsDetails']) {\n      for (var i = 0; i < this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'].length; i++) {\n        if (this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'][i].data.ganttProperties.taskId === draggedRecord.ganttProperties.taskId) {\n          if (parentTask.index) {\n            childRecordsLength = this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'][i].data.index;\n            spliceIndex = childRecordsLength - parentTask.index - 1;\n          } else {\n            childRecordsLength = isNullOrUndefined(childRecords) || childRecords === 0 ? recordIndex1 + 1 : childRecords + recordIndex1 + 1;\n            spliceIndex = 0;\n          }\n          break;\n        }\n      }\n    } else if (!isNullOrUndefined(this.addRowIndex) && this.addRowPosition && droppedRecord.childRecords && this.addRowPosition !== 'Child') {\n      var dropChildRecord = droppedRecord.childRecords[this.addRowIndex];\n      var position = this.addRowPosition === 'Above' || this.addRowPosition === 'Below' ? this.addRowPosition : 'Child';\n      childRecordsLength = dropChildRecord ? this.addRowIndex + recordIndex1 + 1 : childRecords + recordIndex1 + 1;\n      childRecordsLength = position === 'Above' ? childRecordsLength : childRecordsLength + 1;\n    } else {\n      childRecordsLength = isNullOrUndefined(childRecords) || childRecords === 0 ? recordIndex1 + 1 : childRecords + recordIndex1 + 1;\n    }\n    //this.ganttData.splice(childRecordsLength, 0, this.draggedRecord);\n    this.parent.currentViewData.splice(childRecordsLength, 0, draggedRecord);\n    this.parent.flatData.splice(childRecordsLength, 0, draggedRecord);\n    this.parent.ids.splice(childRecordsLength, 0, draggedRecord.ganttProperties.rowUniqueID.toString());\n    this.updateTreeGridUniqueID(draggedRecord, 'add');\n    var recordId = draggedRecord.level === 0 ? 'R' + draggedRecord.ganttProperties.taskId : 'T' + draggedRecord.ganttProperties.taskId;\n    this.parent.getTaskIds().splice(childRecordsLength, 0, recordId);\n    if (!droppedRecord.hasChildRecords) {\n      this.parent.setRecordValue('hasChildRecords', true, droppedRecord);\n      this.parent.setRecordValue('expanded', true, droppedRecord);\n      if (!droppedRecord.childRecords.length) {\n        droppedRecord.childRecords = [];\n        if (!gObj.taskFields.parentID && isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.child])) {\n          droppedRecord.taskData[this.parent.taskFields.child] = [];\n        }\n      }\n    }\n    if (spliceIndex >= 0) {\n      droppedRecord.childRecords.splice(spliceIndex, 0, draggedRecord);\n    } else {\n      droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n    }\n    if (!isNullOrUndefined(draggedRecord) && !this.parent.taskFields.parentID && !isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.child])) {\n      droppedRecord.taskData[this.parent.taskFields.child].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n    }\n    if (!isNullOrUndefined(draggedRecord.parentItem)) {\n      //collection to update the parent records\n      this.updateParentRecords.push(droppedRecord);\n    }\n  };\n  Edit.prototype.resetEditProperties = function (args) {\n    this.parent.currentEditedArgs = {};\n    this.resetValidateArgs();\n    this.parent.editedTaskBarItem = null;\n    this.parent.isOnEdit = false;\n    this.parent.predecessorModule.validatedChildItems = [];\n    this.parent.isConnectorLineUpdate = false;\n    this.parent.editedTaskBarItem = null;\n    this.taskbarMoved = false;\n    this.predecessorUpdated = false;\n    if (!isNullOrUndefined(this.dialogModule) && (isNullOrUndefined(args) || !isNullOrUndefined(args) && args['requestType'] === 'beforeSave' && !args['cancel'])) {\n      if (this.dialogModule.dialog && !this.dialogModule.dialogObj.isDestroyed) {\n        this.dialogModule.dialogObj.hide();\n      }\n      this.dialogModule.dialogClose();\n    }\n    this.parent.hideSpinner();\n    this.parent.initiateEditAction(false);\n  };\n  /**\n   * @param {ITaskAddedEventArgs} args .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.endEditAction = function (args) {\n    this.resetEditProperties();\n    if (args.action === 'TaskbarEditing') {\n      this.parent.trigger('taskbarEdited', args);\n    } else if (args.action === 'CellEditing') {\n      this.parent.trigger('endEdit', args);\n    } else if (args.action === 'DialogEditing') {\n      if (this.dialogModule.dialog && !this.dialogModule.dialogObj.isDestroyed) {\n        this.dialogModule.dialogObj.hide();\n      }\n      this.dialogModule.dialogClose();\n    }\n  };\n  // eslint-disable-next-line\n  Edit.prototype.saveFailed = function (args) {\n    this.reUpdatePreviousRecords();\n    this.parent.hideSpinner();\n    //action failure event trigger\n  };\n  /**\n   * To render delete confirmation dialog\n   *\n   * @returns {void} .\n   */\n  Edit.prototype.renderDeleteConfirmDialog = function () {\n    var dialogObj = new Dialog({\n      width: '320px',\n      isModal: true,\n      visible: false,\n      enableRtl: this.parent.enableRtl,\n      content: this.parent.localeObj.getConstant('confirmDelete'),\n      buttons: [{\n        click: this.confirmDeleteOkButton.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('okText'),\n          isPrimary: true\n        }\n      }, {\n        click: this.closeConfirmDialog.bind(this),\n        buttonModel: {\n          content: this.parent.localeObj.getConstant('cancel')\n        }\n      }],\n      target: this.parent.element,\n      animationSettings: {\n        effect: 'None'\n      }\n    });\n    dialogObj.appendTo('#' + this.parent.element.id + '_deleteConfirmDialog');\n    this.confirmDialog = dialogObj;\n  };\n  Edit.prototype.closeConfirmDialog = function () {\n    this.confirmDialog.hide();\n  };\n  Edit.prototype.confirmDeleteOkButton = function () {\n    this.deleteSelectedItems();\n    this.confirmDialog.hide();\n    var focussedElement = this.parent.element.querySelector('.e-treegrid');\n    focussedElement.focus();\n  };\n  /**\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.startDeleteAction = function () {\n    if (this.parent.editSettings.allowDeleting && !this.parent.readOnly) {\n      if (this.parent.editSettings.showDeleteConfirmDialog) {\n        this.confirmDialog.show();\n      } else {\n        this.deleteSelectedItems();\n        var focusingElement = this.parent.element.querySelector('.e-treegrid');\n        focusingElement.focus();\n      }\n    }\n  };\n  /**\n   *\n   * @param {IGanttData[]} selectedRecords - Defines the deleted records\n   * @returns {void} .\n   * Method to delete the records from resource view Gantt.\n   */\n  Edit.prototype.deleteResourceRecords = function (selectedRecords) {\n    var deleteRecords = [];\n    var _loop_2 = function (i) {\n      if (selectedRecords[i].parentItem) {\n        if (selectedRecords[i].ganttProperties.sharedTaskUniqueIds.length === 1) {\n          var data = selectedRecords[i];\n          var ids = data.ganttProperties.sharedTaskUniqueIds;\n          for (var j = 0; j < ids.length; j++) {\n            if (this_2.parent.ids.indexOf(ids[j].toString()) !== -1) {\n              deleteRecords.push(this_2.parent.flatData[this_2.parent.ids.indexOf(ids[j].toString())]);\n            } else if (this_2.parent.undoRedoModule && this_2.parent.undoRedoModule['isUndoRedoPerformed'] && this_2.parent.undoRedoModule['currentAction'] && this_2.parent.undoRedoModule['currentAction']['action'] === 'Delete') {\n              deleteRecords.push(this_2.parent.flatData[this_2.parent.taskIds.indexOf('T' + selectedRecords[i].ganttProperties.taskId)]);\n            }\n          }\n          if (this_2.parent.ids.indexOf(data.ganttProperties.rowUniqueID) !== -1 && deleteRecords.indexOf(this_2.parent.flatData[this_2.parent.ids.indexOf(data.ganttProperties.rowUniqueID)]) === -1) {\n            deleteRecords.push(this_2.parent.flatData[this_2.parent.ids.indexOf(data.ganttProperties.rowUniqueID)]);\n          }\n        } else if (this_2.parent.undoRedoModule && this_2.parent.undoRedoModule['isUndoRedoPerformed'] && selectedRecords[i].ganttProperties.sharedTaskUniqueIds.length > 1) {\n          deleteRecords.push(selectedRecords[i]);\n        }\n      } else {\n        var resourceParent = this_2.parent.flatData.filter(function (data) {\n          return data.ganttProperties.taskId === selectedRecords[i].ganttProperties.taskId && data.hasChildRecords;\n        })[0];\n        deleteRecords.push(resourceParent);\n      }\n    };\n    var this_2 = this;\n    for (var i = 0; i < selectedRecords.length; i++) {\n      _loop_2(i);\n    }\n    this.deleteRow(deleteRecords);\n  };\n  Edit.prototype.add = function (record, totalRecords) {\n    totalRecords.push(record);\n    if (record.hasChildRecords) {\n      var child = record.childRecords;\n      for (var i = 0; i < child.length; i++) {\n        this.add(child[i], totalRecords);\n      }\n    } else {\n      if (totalRecords.indexOf(record) === -1) {\n        totalRecords.push(record);\n      }\n    }\n  };\n  Edit.prototype.deleteSelectedItems = function () {\n    if (!this.isFromDeleteMethod) {\n      var selectedRecords = [];\n      if (this.parent.selectionSettings.mode !== 'Cell') {\n        selectedRecords = this.parent.selectionModule.getSelectedRecords();\n      } else if (this.parent.selectionSettings.mode === 'Cell') {\n        selectedRecords = this.parent.selectionModule.getCellSelectedRecords();\n      }\n      if (this.parent.viewType === 'ResourceView') {\n        this.deleteResourceRecords(selectedRecords);\n      } else {\n        this.deleteRow(selectedRecords);\n      }\n    } else {\n      if (this.targetedRecords.length) {\n        if (this.parent.viewType === 'ResourceView') {\n          this.deleteResourceRecords(this.targetedRecords);\n        } else {\n          this.deleteRow(this.targetedRecords);\n        }\n      }\n      this.isFromDeleteMethod = false;\n    }\n  };\n  /**\n   * Method to delete record.\n   *\n   * @param {number | string | number[] | string[] | IGanttData | IGanttData[]} taskDetail - Defines the details of data to delete.\n   * @returns {void} .\n   * @public\n   */\n  Edit.prototype.deleteRecord = function (taskDetail) {\n    this.isFromDeleteMethod = true;\n    var variableType = typeof taskDetail;\n    this.targetedRecords = [];\n    switch (variableType) {\n      case 'number':\n      case 'string':\n        {\n          var taskId = taskDetail.toString();\n          if (this.parent.viewType === 'ResourceView') {\n            if (!isNullOrUndefined(taskId) && this.parent.getTaskIds().indexOf('T' + taskId) !== -1) {\n              this.targetedRecords.push(this.parent.flatData[this.parent.getTaskIds().indexOf('T' + taskId)]);\n            }\n          } else {\n            if (!isNullOrUndefined(taskId) && this.parent.ids.indexOf(taskId) !== -1) {\n              this.targetedRecords.push(this.parent.getRecordByID(taskId));\n            }\n          }\n          break;\n        }\n      case 'object':\n        if (!Array.isArray(taskDetail)) {\n          this.targetedRecords.push(taskDetail.valueOf());\n        } else {\n          this.updateTargetedRecords(taskDetail);\n        }\n        break;\n      default:\n    }\n    this.startDeleteAction();\n  };\n  /**\n   * To update 'targetedRecords collection' from given array collection\n   *\n   * @param {object[]} taskDetailArray .\n   * @returns {void} .\n   */\n  Edit.prototype.updateTargetedRecords = function (taskDetailArray) {\n    if (taskDetailArray.length) {\n      var variableType = typeof taskDetailArray[0];\n      if (variableType === 'object') {\n        this.targetedRecords = taskDetailArray;\n      } else {\n        // Get record from array of task ids\n        for (var i = 0; i < taskDetailArray.length; i++) {\n          var id = taskDetailArray[i].toString();\n          if (this.parent.viewType === 'ResourceView') {\n            if (!isNullOrUndefined(id) && this.parent.getTaskIds().indexOf('T' + id) !== -1) {\n              this.targetedRecords.push(this.parent.flatData[this.parent.getTaskIds().indexOf('T' + id)]);\n            }\n          } else if (!isNullOrUndefined(id) && this.parent.ids.indexOf(id) !== -1) {\n            this.targetedRecords.push(this.parent.getRecordByID(id));\n          }\n        }\n      }\n    }\n  };\n  Edit.prototype.deleteRow = function (tasks) {\n    var rowItems = tasks && tasks.length ? tasks : this.parent.selectionModule.getSelectedRecords();\n    this.parent.addDeleteRecord = true;\n    if (rowItems.length) {\n      this.parent.isOnDelete = true;\n      rowItems.forEach(function (item) {\n        item.isDelete = true;\n      });\n      if (this.parent.viewType === 'ResourceView' && !tasks.length) {\n        rowItems = [];\n      }\n      if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent']('Delete')) {\n        if (this.parent.undoRedoModule['redoEnabled'] && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n          this.parent.undoRedoModule['disableRedo']();\n          this.parent.undoRedoModule['getUndoCollection'][0] = [];\n        }\n        if (!this.parent.undoRedoModule['isUndoRedoPerformed']) {\n          this.parent.undoRedoModule['createUndoCollection']();\n        }\n        var records = {};\n        records['action'] = 'Delete';\n        records['deletedRecordsDetails'] = [];\n        this.parent.undoRedoModule['findPosition'](extend([], [], rowItems, true), records, 'deletedRecordsDetails');\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = records;\n      }\n      var _loop_3 = function (i) {\n        var deleteRecord = rowItems[i];\n        if (this_3.deletedTaskDetails.indexOf(deleteRecord) !== -1) {\n          return \"continue\";\n        }\n        var deleteItems = [deleteRecord];\n        if (this_3.parent.viewType === 'ResourceView' && this_3.parent.undoRedoModule && this_3.parent.undoRedoModule['isUndoRedoPerformed'] && rowItems[i].ganttProperties.resourceInfo && rowItems[i].ganttProperties.resourceInfo.length > 1) {\n          deleteItems = [];\n          if (!rowItems[i].hasChildRecords) {\n            var id_1 = 'T' + rowItems[i].ganttProperties.taskId;\n            this_3.parent.taskIds.reduce(function (e, j) {\n              if (e === id_1) {\n                deleteItems.push(this.parent.flatData[j]);\n              }\n            }.bind(this_3), []);\n          }\n        }\n        for (var j = 0; j < deleteItems.length; j++) {\n          var parentTask = this_3.parent.getParentTask(deleteItems[j].parentItem);\n          if (deleteItems[j].parentItem) {\n            var childRecord = void 0;\n            if (!isNullOrUndefined(parentTask)) {\n              childRecord = parentTask.childRecords;\n              var filteredRecord = childRecord.length === 1 ? childRecord : childRecord.filter(function (data) {\n                return !data.isDelete;\n              });\n              if (filteredRecord.length > 0) {\n                this_3.parent.dataOperation.updateParentItems(deleteItems[j].parentItem);\n              }\n            }\n          }\n          var predecessor = deleteItems[j].ganttProperties.predecessor;\n          var canDeletePredecessor = true;\n          if (this_3.parent.viewType === 'ResourceView' && parentTask && parentTask.ganttProperties.taskName !== this_3.parent.localeObj.getConstant('unassignedTask')) {\n            canDeletePredecessor = false;\n          }\n          if (predecessor && predecessor.length && canDeletePredecessor) {\n            this_3.removePredecessorOnDelete(deleteItems[j]);\n          }\n          this_3.deletedTaskDetails.push(deleteItems[j]);\n          if (deleteItems[j].hasChildRecords) {\n            this_3.deleteChildRecords(deleteItems[j]);\n          }\n        }\n      };\n      var this_3 = this;\n      for (var i = 0; i < rowItems.length; i++) {\n        _loop_3(i);\n      }\n      if (this.parent.selectionModule && this.parent.allowSelection) {\n        // clear selection\n        this.parent.selectionModule.clearSelection();\n      }\n      var delereArgs = {};\n      delereArgs.deletedRecordCollection = this.deletedTaskDetails;\n      delereArgs.updatedRecordCollection = this.parent.editedRecords;\n      delereArgs.cancel = false;\n      delereArgs.action = 'delete';\n      this.initiateDeleteAction(delereArgs);\n      this.parent.isOnDelete = false;\n    }\n    if (!isNullOrUndefined(this.parent.toolbarModule)) {\n      this.parent.toolbarModule.refreshToolbarItems();\n    }\n  };\n  Edit.prototype.removePredecessorOnDelete = function (record) {\n    var predecessors = record.ganttProperties.predecessor;\n    for (var i = 0; i < predecessors.length; i++) {\n      var predecessor = predecessors[i];\n      var recordId = this.parent.viewType === 'ResourceView' ? record.ganttProperties.taskId : record.ganttProperties.rowUniqueID;\n      if (predecessor.from.toString() === recordId.toString()) {\n        var toRecord = this.parent.connectorLineModule.getRecordByID(predecessor.to.toString());\n        if (!isNullOrUndefined(toRecord)) {\n          var toRecordPredcessor = extend([], [], toRecord.ganttProperties.predecessor, true);\n          var index = void 0;\n          for (var t = 0; t < toRecordPredcessor.length; t++) {\n            var toId = this.parent.viewType === 'ResourceView' ? toRecord.ganttProperties.taskId : toRecord.ganttProperties.rowUniqueID;\n            if (toRecordPredcessor[t].to.toString() === toId.toString() && toRecordPredcessor[t].from.toString() === recordId.toString()) {\n              index = t;\n              break;\n            }\n          }\n          toRecordPredcessor.splice(index, 1);\n          this.updatePredecessorValues(toRecord, toRecordPredcessor);\n        }\n      } else if (predecessor.to.toString() === recordId.toString()) {\n        var fromRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from.toString());\n        if (!isNullOrUndefined(fromRecord)) {\n          var fromRecordPredcessor = extend([], [], fromRecord.ganttProperties.predecessor, true);\n          var index = void 0;\n          for (var t = 0; t < fromRecordPredcessor.length; t++) {\n            var fromId = this.parent.viewType === 'ResourceView' ? fromRecord.ganttProperties.taskId : fromRecord.ganttProperties.rowUniqueID;\n            if (fromRecordPredcessor[t].from.toString() === fromId.toString() && fromRecordPredcessor[t].to.toString() === recordId.toString()) {\n              index = t;\n              break;\n            }\n          }\n          if (record.uniqueID === fromRecord.parentUniqueID || record.parentUniqueID === fromRecord.uniqueID || this.parent.isOnDelete) {\n            fromRecordPredcessor.splice(index, 1);\n            this.updatePredecessorValues(fromRecord, fromRecordPredcessor);\n          }\n        }\n      }\n    }\n  };\n  Edit.prototype.updatePredecessorValues = function (record, predcessorArray) {\n    this.parent.setRecordValue('predecessor', predcessorArray, record.ganttProperties, true);\n    var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(record);\n    this.parent.setRecordValue('predecessorsName', predecessorString, record.ganttProperties, true);\n    this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, record);\n    this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, record);\n  };\n  /**\n   * Method to update TaskID of a gantt record\n   *\n   * @param {string | number} currentId .\n   * @param {number | string} newId .\n   * @returns {void} .\n   */\n  Edit.prototype.updateTaskId = function (currentId, newId) {\n    if (!this.parent.readOnly) {\n      var cId = typeof currentId === 'number' ? currentId.toString() : currentId;\n      var nId = typeof newId === 'number' ? newId.toString() : newId;\n      var ids = this.parent.ids;\n      if (!isNullOrUndefined(cId) && !isNullOrUndefined(nId)) {\n        var cIndex = ids.indexOf(cId);\n        var nIndex = ids.indexOf(nId);\n        // return false for invalid taskID\n        if (cIndex === -1 || nIndex > -1) {\n          return;\n        }\n        var thisRecord = this.parent.flatData[cIndex];\n        if (!isNullOrUndefined(thisRecord)) {\n          this.parent.setRecordValue('taskId', newId, thisRecord.ganttProperties, true);\n          this.parent.setRecordValue('rowUniqueID', nId, thisRecord.ganttProperties, true);\n          this.parent.setRecordValue(this.parent.taskFields.id, newId, thisRecord, true);\n          this.parent.setRecordValue(this.parent.taskFields.id, newId, thisRecord.taskData, true);\n        }\n        ids[cIndex] = nId;\n        if (thisRecord.hasChildRecords && this.parent.taskFields.parentID) {\n          var childRecords = thisRecord.childRecords;\n          for (var count = 0; count < childRecords.length; count++) {\n            var childRecord = childRecords[count];\n            childRecord[this.parent.taskFields.parentID] = newId;\n            this.parent.chartRowsModule.refreshRecords([childRecord]);\n          }\n        }\n        if (this.parent.taskFields.dependency && !isNullOrUndefined(thisRecord.ganttProperties.predecessor)) {\n          var predecessors = thisRecord.ganttProperties.predecessor;\n          var currentGanttRecord = void 0;\n          for (var i = 0; i < predecessors.length; i++) {\n            var predecessor = predecessors[i];\n            if (predecessor.to === cId) {\n              currentGanttRecord = this.parent.flatData[ids.indexOf(predecessor.from)];\n            } else if (predecessor.from === cId) {\n              currentGanttRecord = this.parent.flatData[ids.indexOf(predecessor.to)];\n            }\n            this.updatePredecessorOnUpdateId(currentGanttRecord, cId, nId);\n          }\n        }\n        this.parent.treeGrid.parentData = [];\n        this.parent.treeGrid.refresh();\n      }\n    }\n  };\n  Edit.prototype.updatePredecessorOnUpdateId = function (currentGanttRecord, cId, nId) {\n    if (this.parent.flatData.indexOf(currentGanttRecord) > -1) {\n      var pred = currentGanttRecord.ganttProperties.predecessor;\n      for (var j = 0; j < pred.length; j++) {\n        var pre = pred[j];\n        if (pre.to === cId) {\n          pre.to = nId;\n        } else if (pre.from === cId) {\n          pre.from = nId;\n        }\n      }\n    }\n    this.updatePredecessorValues(currentGanttRecord, currentGanttRecord.ganttProperties.predecessor);\n  };\n  Edit.prototype.deleteChildRecords = function (record) {\n    var childRecords = record.childRecords;\n    for (var c = 0; c < childRecords.length; c++) {\n      var childRecord = childRecords[c];\n      if (this.deletedTaskDetails.indexOf(childRecord) !== -1) {\n        continue;\n      }\n      var predecessor = childRecord.ganttProperties.predecessor;\n      var canDeletePredecessor = true;\n      var parentTask = this.parent.getParentTask(childRecord.parentItem);\n      if (this.parent.viewType === 'ResourceView' && parentTask && parentTask.ganttProperties.taskName !== this.parent.localeObj.getConstant('unassignedTask')) {\n        canDeletePredecessor = false;\n      }\n      if (predecessor && predecessor.length && canDeletePredecessor) {\n        this.removePredecessorOnDelete(childRecord);\n      }\n      this.deletedTaskDetails.push(childRecord);\n      if (childRecord.hasChildRecords) {\n        this.deleteChildRecords(childRecord);\n      }\n    }\n  };\n  Edit.prototype.removeFromDataSource = function (deleteRecordIDs) {\n    var dataSource;\n    if (this.parent.dataSource instanceof DataManager) {\n      dataSource = this.parent.dataSource.dataSource.json;\n    } else {\n      dataSource = this.parent.dataSource;\n    }\n    this.removeData(dataSource, deleteRecordIDs);\n    this.isBreakLoop = false;\n  };\n  Edit.prototype.removeData = function (dataCollection, record) {\n    for (var i = 0; i < dataCollection.length; i++) {\n      if (this.isBreakLoop) {\n        break;\n      }\n      if (record.indexOf(getValue(this.parent.taskFields.id, dataCollection[i]).toString()) !== -1) {\n        if (dataCollection[i][this.parent.taskFields.child]) {\n          var childRecords = dataCollection[i][this.parent.taskFields.child];\n          this.removeData(childRecords, record);\n        }\n        record.splice(record.indexOf(getValue(this.parent.taskFields.id, dataCollection[i]).toString()), 1);\n        dataCollection.splice(i, 1);\n        if (record.length === 0) {\n          this.isBreakLoop = true;\n          break;\n        }\n      } else if (dataCollection[i][this.parent.taskFields.child]) {\n        var childRecords = dataCollection[i][this.parent.taskFields.child];\n        this.removeData(childRecords, record);\n      }\n    }\n  };\n  Edit.prototype.initiateDeleteAction = function (args) {\n    var _this = this;\n    this.parent.showSpinner();\n    var eventArgs = {};\n    eventArgs.requestType = 'beforeDelete';\n    eventArgs.data = args.deletedRecordCollection;\n    eventArgs.modifiedRecords = args.updatedRecordCollection;\n    eventArgs.modifiedTaskData = getTaskData(args.updatedRecordCollection, null, null, this.parent);\n    this.parent.trigger('actionBegin', eventArgs, function (eventArg) {\n      if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n        _this.parent.showMaskRow();\n      } else {\n        _this.parent.showSpinner();\n      }\n      if (eventArg.cancel) {\n        var deleteRecords = _this.deletedTaskDetails;\n        for (var d = 0; d < deleteRecords.length; d++) {\n          deleteRecords[d].isDelete = false;\n        }\n        _this.deletedTaskDetails = [];\n        _this.reUpdatePreviousRecords();\n        _this.parent.initiateEditAction(false);\n        _this.parent.hideSpinner();\n      } else {\n        if (isRemoteData(_this.parent.dataSource)) {\n          var data_1 = _this.parent.dataSource;\n          if (_this.parent.timezone) {\n            eventArg.modifiedRecords.forEach(function (modifiedRecord) {\n              updateDates(modifiedRecord, _this.parent);\n            });\n          }\n          var updatedData_1 = {\n            deletedRecords: getTaskData(eventArg.data, null, null, _this.parent),\n            changedRecords: eventArg.modifiedTaskData\n          };\n          var adaptor = data_1.adaptor;\n          var query_1 = _this.parent.query instanceof Query ? _this.parent.query : new Query();\n          if (!(adaptor instanceof WebApiAdaptor && adaptor instanceof ODataAdaptor) || data_1.dataSource.batchUrl) {\n            var crud = data_1.saveChanges(updatedData_1, _this.parent.taskFields.id, null, query_1);\n            crud.then(function () {\n              return _this.deleteSuccess(args);\n            }).catch(function (e) {\n              return _this.dmFailure(e, args);\n            });\n          } else {\n            var deletedRecords = 'deletedRecords';\n            var deleteCrud = null;\n            for (var i = 0; i < updatedData_1[deletedRecords].length; i++) {\n              deleteCrud = data_1.remove(_this.parent.taskFields.id, updatedData_1[deletedRecords][i], null, query_1);\n            }\n            deleteCrud.then(function () {\n              var changedRecords = 'changedRecords';\n              var _loop_4 = function (i) {\n                if (updatedData_1['deletedRecords'].some(function (record) {\n                  return record[_this.parent.taskFields.id] === updatedData_1[changedRecords][i].taskId;\n                })) {\n                  updatedData_1[changedRecords].splice(i, 1);\n                }\n              };\n              for (var i = updatedData_1[changedRecords].length - 1; i >= 0; i--) {\n                _loop_4(i);\n              }\n              var updateCrud = data_1.update(_this.parent.taskFields.id, updatedData_1[changedRecords], null, query_1);\n              updateCrud.then(function () {\n                return _this.deleteSuccess(args);\n              }).catch(function (e) {\n                return _this.dmFailure(e, args);\n              });\n            }).catch(function (e) {\n              return _this.dmFailure(e, args);\n            });\n          }\n        } else {\n          _this.deleteSuccess(args);\n        }\n      }\n    });\n  };\n  Edit.prototype.deleteSuccess = function (args) {\n    var _this = this;\n    var flatData = this.parent.flatData;\n    var currentData = this.parent.currentViewData;\n    var deletedRecords = [];\n    for (var i = 0; i < args.deletedRecordCollection.length; i++) {\n      if (this.parent.viewType === 'ProjectView') {\n        var record = this.parent.getRecordByID(args.deletedRecordCollection[i].ganttProperties.taskId);\n        if (!isNullOrUndefined(record)) {\n          deletedRecords.push(record);\n        }\n      } else {\n        var id = void 0;\n        if (args.deletedRecordCollection[i].hasChildRecords) {\n          id = 'R' + args.deletedRecordCollection[i].ganttProperties.taskId;\n        } else {\n          id = 'T' + args.deletedRecordCollection[i].ganttProperties.taskId;\n        }\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n          deletedRecords.push(this.parent.getTaskByUniqueID(args.deletedRecordCollection[i].uniqueID));\n        } else {\n          deletedRecords.push(this.parent.flatData[this.parent.taskIds.indexOf(id.toString())]);\n        }\n      }\n    }\n    var deleteRecordIDs = [];\n    if (deletedRecords.length > 0) {\n      var recordIndex = void 0;\n      var record = void 0;\n      if (this.parent.enableVirtualization) {\n        recordIndex = this.parent.flatData.indexOf(deletedRecords[deletedRecords.length - 1]);\n        this.parent.staticSelectedRowIndex = this.parent.selectedRowIndex = recordIndex;\n        record = this.parent.flatData[this.parent.selectedRowIndex + 1];\n        // perform toolbar CollapseAll later delete action issue handle\n        if (!this.parent.isCollapseAll) {\n          // Random parent record delete action, maintaining proper record selection\n          this.parent.staticSelectedRowIndex = recordIndex - (deletedRecords.length - 1);\n        }\n      } else {\n        recordIndex = this.parent.currentViewData.indexOf(deletedRecords[deletedRecords.length - 1]);\n        this.parent.staticSelectedRowIndex = this.parent.selectedRowIndex = recordIndex;\n        record = this.parent.currentViewData[this.parent.selectedRowIndex + 1];\n      }\n      if (!isNullOrUndefined(record)) {\n        this.parent.currentSelection = record;\n      } else {\n        var prevRecordIndex = this.parent.selectedRowIndex - 1;\n        if (prevRecordIndex >= 0) {\n          this.parent.currentSelection = this.parent.enableVirtualization ? this.parent.flatData[prevRecordIndex] : this.parent.currentViewData[prevRecordIndex];\n        }\n      }\n    }\n    this.deletedRecord = deletedRecords;\n    for (var i = 0; i < deletedRecords.length; i++) {\n      var deleteRecord = deletedRecords[i];\n      var currentIndex = void 0;\n      var flatIndex = void 0;\n      if (this.parent.viewType === 'ResourceView') {\n        if (deleteRecord.hasChildRecords) {\n          currentIndex = this.parent.taskIds.indexOf('R' + deleteRecord.ganttProperties.taskId.toString());\n          flatIndex = this.parent.taskIds.indexOf('R' + deleteRecord.ganttProperties.taskId.toString());\n        } else {\n          currentIndex = this.parent.taskIds.indexOf('T' + deleteRecord.ganttProperties.taskId.toString());\n          flatIndex = this.parent.taskIds.indexOf('T' + deleteRecord.ganttProperties.taskId.toString());\n        }\n      } else {\n        currentIndex = currentData.indexOf(deleteRecord);\n        flatIndex = flatData.indexOf(deleteRecord);\n      }\n      var treeGridParentIndex = this.parent.treeGrid.parentData.indexOf(deleteRecord);\n      var tempData = getValue('dataOperation.dataArray', this.parent);\n      var dataIndex = tempData.indexOf(deleteRecord.taskData);\n      var childIndex = void 0;\n      if (currentIndex !== -1) {\n        currentData.splice(currentIndex, 1);\n      }\n      if (flatIndex !== -1) {\n        flatData.splice(flatIndex, 1);\n      }\n      if (dataIndex !== -1) {\n        tempData.splice(dataIndex, 1);\n      }\n      if (!isNullOrUndefined(deleteRecord)) {\n        deleteRecordIDs.push(deleteRecord.ganttProperties.taskId.toString());\n        if (flatIndex !== -1) {\n          this.parent.ids.splice(flatIndex, 1);\n          if (this.parent.viewType === 'ResourceView') {\n            this.parent.getTaskIds().splice(flatIndex, 1);\n            if (!deleteRecord.hasChildRecords) {\n              deleteRecord.ganttProperties.resourceInfo = null;\n              delete deleteRecord.ganttProperties.resourceNames;\n              deleteRecord[this.parent.taskFields.resourceInfo] = null;\n              deleteRecord.ganttProperties.sharedTaskUniqueIds = [];\n              delete deleteRecord.taskData[this.parent.taskFields.resourceInfo];\n            }\n          }\n        }\n        if (deleteRecord.level === 0 && treeGridParentIndex !== -1) {\n          this.parent.treeGrid.parentData.splice(treeGridParentIndex, 1);\n        }\n        if (deleteRecord.parentItem) {\n          var parentItem = this.parent.getParentTask(deleteRecord.parentItem);\n          if (parentItem) {\n            var childRecords = parentItem.childRecords;\n            childIndex = childRecords.indexOf(deleteRecord);\n            if (childIndex !== -1) {\n              childRecords.splice(childIndex, 1);\n            }\n            if (!childRecords.length) {\n              this.parent.setRecordValue('hasChildRecords', false, parentItem);\n            }\n          }\n        }\n        this.updateTreeGridUniqueID(deleteRecord, 'delete');\n      }\n    }\n    if (deleteRecordIDs.length > 0) {\n      this.removeFromDataSource(deleteRecordIDs);\n    }\n    var eventArgs = {};\n    this.parent.updatedConnectorLineCollection = [];\n    this.parent.connectorLineIds = [];\n    this.parent.predecessorModule.createConnectorLinesCollection(this.parent.flatData);\n    this.parent.treeGrid.parentData = [];\n    this.isAdded = false;\n    this.parent.treeGrid.editModule['isOnBatch'] = false;\n    this.parent.treeGrid.refresh();\n    if (this.parent.enableImmutableMode) {\n      this.refreshRecordInImmutableMode();\n    }\n    // Trigger actioncomplete event for delete action\n    eventArgs.requestType = 'delete';\n    eventArgs.data = args.deletedRecordCollection;\n    eventArgs.modifiedRecords = args.updatedRecordCollection;\n    eventArgs.modifiedTaskData = getTaskData(args.updatedRecordCollection, null, null, this.parent);\n    setValue('action', args.action, eventArgs);\n    this.parent.isOnDelete = false;\n    if (this.parent.viewType === 'ResourceView' && (!this.parent.undoRedoModule || this.parent.undoRedoModule && (!this.parent.undoRedoModule['isUndoRedoPerformed'] || this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']['action'] === 'Delete'))) {\n      var updateUnAssignedResources_1 = eventArgs.data.filter(function (data) {\n        return !data.hasChildRecords;\n      });\n      var _loop_5 = function (i) {\n        var unassignedTask = this_4.parent.flatData.filter(function (data) {\n          return data.ganttProperties.taskName === _this.parent.localeObj.getConstant('unassignedTask');\n        })[0];\n        var isDuplicate = [];\n        if (unassignedTask) {\n          isDuplicate = unassignedTask.childRecords.filter(function (data) {\n            return data.ganttProperties.taskId === updateUnAssignedResources_1[i].ganttProperties.taskId;\n          });\n        }\n        var parentTask = this_4.parent.getParentTask(updateUnAssignedResources_1[i].parentItem);\n        if (parentTask && parentTask.ganttProperties.taskName !== this_4.parent.localeObj.getConstant('unassignedTask') && isDuplicate.length === 0) {\n          this_4.checkWithUnassignedTask(updateUnAssignedResources_1[i]);\n        } else if (!parentTask && (!isDuplicate || isDuplicate.length === 0)) {\n          this_4.checkWithUnassignedTask(updateUnAssignedResources_1[i]);\n        }\n        unassignedTask = this_4.parent.flatData.filter(function (data) {\n          return data.ganttProperties.taskName === _this.parent.localeObj.getConstant('unassignedTask');\n        })[0];\n        var parentItem = this_4.parent.currentViewData.filter(function (data) {\n          if (data.ganttProperties.taskId === updateUnAssignedResources_1[i].ganttProperties.taskId && !data.hasChildRecords && data.parentItem && unassignedTask.uniqueID === data.parentItem.uniqueID) {\n            return data;\n          } else {\n            return null;\n          }\n        });\n        if (parentItem[0]) {\n          this_4.parent.dataOperation.updateParentItems(parentItem[0]);\n        }\n      };\n      var this_4 = this;\n      for (var i = 0; i < updateUnAssignedResources_1.length; i++) {\n        _loop_5(i);\n      }\n    }\n    this.parent.trigger('actionComplete', eventArgs);\n    this.deletedTaskDetails = [];\n    this.parent.initiateEditAction(false);\n    if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n      this.parent.hideMaskRow();\n    } else {\n      this.parent.hideSpinner();\n    }\n  };\n  /**\n   *\n   * @returns {number | string} .\n   * @private\n   */\n  Edit.prototype.getNewTaskId = function () {\n    var ids = this.parent.viewType === 'ResourceView' ? this.parent.getTaskIds() : this.parent.ids;\n    var maxId = ids.length;\n    var newTaskId = maxId + 1;\n    if (this.parent.viewType === 'ResourceView') {\n      if (ids.indexOf('T' + newTaskId) !== -1 || ids.indexOf('R' + newTaskId) !== -1) {\n        newTaskId = newTaskId + 1;\n        if (ids.indexOf('T' + newTaskId) !== -1 || ids.indexOf('R' + newTaskId) !== -1) {\n          do {\n            newTaskId = newTaskId + 1;\n          } while (ids.indexOf('T' + newTaskId) !== -1 || ids.indexOf('R' + newTaskId) !== -1);\n        }\n      }\n    } else {\n      if (ids.indexOf(newTaskId.toString()) !== -1) {\n        newTaskId = newTaskId + 1;\n        if (ids.indexOf(newTaskId.toString()) !== -1) {\n          do {\n            newTaskId = newTaskId + 1;\n          } while (ids.indexOf(newTaskId.toString()) !== -1);\n        }\n      }\n    }\n    if (this.parent.columnByField[this.parent.taskFields.id].editType === 'stringedit') {\n      return newTaskId = newTaskId.toString();\n    } else {\n      return newTaskId;\n    }\n  };\n  /**\n   * @param {object} obj .\n   * @param {RowPosition} rowPosition .\n   * @returns {void} .\n   * @private\n   */\n  // eslint-disable-next-line\n  Edit.prototype.prepareNewlyAddedData = function (obj, rowPosition) {\n    var taskModel = this.parent.taskFields;\n    var id;\n    var newTaskIDmd;\n    var ids = this.parent.ids;\n    /*Validate Task Id of data*/\n    if (obj[taskModel.id]) {\n      if (ids.indexOf(obj[taskModel.id].toString()) !== -1) {\n        obj[taskModel.id] = null;\n      } else {\n        if (typeof obj[taskModel.id] === 'string') {\n          newTaskIDmd = obj[taskModel.id];\n        } else {\n          newTaskIDmd = parseInt(obj[taskModel.id], 10);\n        }\n        obj[taskModel.id] = isNullOrUndefined(newTaskIDmd) ? null : newTaskIDmd;\n      }\n    }\n    if (!obj[taskModel.id]) {\n      id = this.getNewTaskId();\n      obj[taskModel.id] = id;\n    }\n    if (!this.parent.allowUnscheduledTasks && !obj[taskModel.startDate]) {\n      obj[taskModel.startDate] = this.parent.projectStartDate;\n    }\n    if (!this.parent.allowUnscheduledTasks && taskModel.duration && isNullOrUndefined(obj[taskModel.duration])) {\n      if (!obj[taskModel.endDate]) {\n        obj[taskModel.duration] = '5';\n      }\n    }\n    if (taskModel.progress) {\n      obj[taskModel.progress] = obj[taskModel.progress] ? obj[taskModel.progress] > 100 ? 100 : obj[taskModel.progress] : 0;\n    }\n    if (!this.parent.allowUnscheduledTasks && !obj[taskModel.endDate] && taskModel.endDate) {\n      if (!obj[taskModel.duration]) {\n        var startDate = this.parent.dataOperation.getDateFromFormat(this.parent.projectStartDate);\n        if (!isNullOrUndefined(startDate)) {\n          startDate.setDate(startDate.getDate() + 4);\n          obj[taskModel.endDate] = this.parent.getFormatedDate(startDate, this.parent.getDateFormat());\n        }\n      }\n    }\n  };\n  /**\n   * @param {object} obj .\n   * @param {number} level .\n   * @param {RowPosition} rowPosition .\n   * @param {IGanttData} parentItem .\n   * @param {number} rowIndex .\n   * @returns {IGanttData} .\n   * @private\n   */\n  Edit.prototype.updateNewlyAddedDataBeforeAjax = function (obj, level, rowPosition, parentItem, rowIndex) {\n    var cAddedRecord = this.parent.dataOperation.createRecord(obj, level);\n    switch (rowPosition) {\n      case 'Above':\n        cAddedRecord.index = rowIndex;\n        break;\n      case 'Below':\n      case 'Child':\n        cAddedRecord.index = rowIndex + 1;\n        break;\n      case 'Bottom':\n        cAddedRecord.index = this.parent.enableVirtualization ? this.parent.flatData.length : this.parent.currentViewData.length;\n        break;\n      case 'Top':\n        cAddedRecord.index = 0;\n        break;\n      default:\n        break;\n    }\n    if (!isNullOrUndefined(parentItem)) {\n      this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentItem), cAddedRecord);\n      var pIndex = cAddedRecord.parentItem ? cAddedRecord.parentItem.index : null;\n      this.parent.setRecordValue('parentIndex', pIndex, cAddedRecord);\n      var parentUniqId = cAddedRecord.parentItem ? cAddedRecord.parentItem.uniqueID : null;\n      this.parent.setRecordValue('parentUniqueID', parentUniqId, cAddedRecord);\n      if (!isNullOrUndefined(this.parent.taskFields.id) && !isNullOrUndefined(this.parent.taskFields.parentID) && cAddedRecord.parentItem) {\n        if (this.parent.viewType === 'ProjectView') {\n          this.parent.setRecordValue(this.parent.taskFields.parentID, cAddedRecord.parentItem.taskId, cAddedRecord.taskData, true);\n        }\n        this.parent.setRecordValue('parentId', cAddedRecord.parentItem.taskId, cAddedRecord.ganttProperties, true);\n        this.parent.setRecordValue(this.parent.taskFields.parentID, cAddedRecord.parentItem.taskId, cAddedRecord, true);\n      }\n    }\n    this.parent.isOnEdit = true;\n    if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      if (obj['hasChildRecords']) {\n        var totalRecords = [];\n        var currentAction = this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'];\n        for (var i = 0; i < obj['childRecords'].length; i++) {\n          this.add(obj['childRecords'][i], totalRecords);\n        }\n        for (var j = 0; j < currentAction.length; j++) {\n          if (obj['ganttProperties'].taskId === currentAction[j]['data'].ganttProperties.taskId) {\n            if (currentAction[j]['position'] === 'child') {\n              rowPosition = 'Child';\n            } else if (currentAction[j]['position'] === 'below') {\n              rowPosition = 'Below';\n            } else if (currentAction[j]['position'] === 'above') {\n              rowPosition = 'Above';\n            }\n            this.backUpAndPushNewlyAddedRecord(cAddedRecord, rowPosition, parentItem);\n            for (var i = 0; i < totalRecords.length; i++) {\n              if (this.parent.viewType === 'ProjectView') {\n                if (totalRecords[i].parentItem.taskId === cAddedRecord.ganttProperties.taskId) {\n                  totalRecords[i].parentItem.index = cAddedRecord.index;\n                  totalRecords[i].parentItem.taskId = cAddedRecord.ganttProperties.taskId;\n                  totalRecords[i].parentItem.uniqueID = cAddedRecord.ganttProperties.uniqueID;\n                  totalRecords[i].parentUniqueID = cAddedRecord.ganttProperties.uniqueID;\n                }\n              } else {\n                totalRecords[i].parentItem.index = cAddedRecord.index;\n                totalRecords[i].parentItem.taskId = cAddedRecord.ganttProperties.rowUniqueID;\n                totalRecords[i].parentItem.uniqueID = cAddedRecord.ganttProperties.uniqueID;\n                totalRecords[i].parentUniqueID = cAddedRecord.ganttProperties.uniqueID;\n              }\n            }\n            break;\n          }\n        }\n        this.addRowSelectedItem = cAddedRecord;\n        cAddedRecord.taskData[this.parent.taskFields.child] = [];\n        for (var k = 0; k < totalRecords.length; k++) {\n          this.parent.isOnEdit = false;\n          var newRecord = this.parent.dataOperation.createRecord(totalRecords[k], totalRecords[k].level);\n          if (newRecord.childRecords.length === 0 && newRecord.taskData[this.parent.taskFields.child]) {\n            newRecord.taskData[this.parent.taskFields.child] = [];\n          }\n          parentItem = this.parent.getRecordByID(totalRecords[k].parentItem.taskId);\n          if (!isNullOrUndefined(parentItem)) {\n            this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentItem), newRecord);\n            var pIndex = newRecord.parentItem ? newRecord.parentItem.index : null;\n            this.parent.setRecordValue('parentIndex', pIndex, newRecord);\n            var parentUniqId = newRecord.parentItem ? newRecord.parentItem.uniqueID : null;\n            this.parent.setRecordValue('parentUniqueID', parentUniqId, newRecord);\n            if (!isNullOrUndefined(this.parent.taskFields.id) && !isNullOrUndefined(this.parent.taskFields.parentID) && newRecord.parentItem) {\n              if (this.parent.viewType === 'ProjectView') {\n                this.parent.setRecordValue(this.parent.taskFields.parentID, newRecord.parentItem.taskId, newRecord.taskData, true);\n              }\n              this.parent.setRecordValue('parentId', newRecord.parentItem.taskId, newRecord.ganttProperties, true);\n              this.parent.setRecordValue(this.parent.taskFields.parentID, newRecord.parentItem.taskId, newRecord, true);\n            }\n          }\n          this.parent.isOnEdit = true;\n          if (newRecord.parentItem) {\n            if (parentItem.childRecords.length === 0) {\n              rowPosition = 'Child';\n            } else {\n              rowPosition = 'Below';\n            }\n          }\n          if (this.parent.getParentTask(newRecord.parentItem).childRecords.length > 0) {\n            this.addRowSelectedItem = this.parent.getParentTask(newRecord.parentItem).childRecords[this.parent.getParentTask(newRecord.parentItem).childRecords.length - 1];\n          }\n          this.backUpAndPushNewlyAddedRecord(newRecord, rowPosition, parentItem);\n          for (var i = 0; i < totalRecords.length; i++) {\n            if (this.parent.viewType === 'ProjectView') {\n              if (totalRecords[i].parentItem.taskId === newRecord.ganttProperties.taskId) {\n                totalRecords[i].parentItem.index = newRecord.index;\n                totalRecords[i].parentItem.taskId = newRecord.ganttProperties.taskId;\n                totalRecords[i].parentItem.uniqueID = newRecord.ganttProperties.uniqueID;\n                totalRecords[i].parentUniqueID = newRecord.ganttProperties.uniqueID;\n              }\n            } else {\n              totalRecords[i].parentItem.index = cAddedRecord.index;\n              totalRecords[i].parentItem.taskId = cAddedRecord.ganttProperties.rowUniqueID;\n              totalRecords[i].parentItem.uniqueID = cAddedRecord.ganttProperties.uniqueID;\n              totalRecords[i].parentUniqueID = cAddedRecord.ganttProperties.uniqueID;\n            }\n          }\n        }\n      } else {\n        this.backUpAndPushNewlyAddedRecord(cAddedRecord, rowPosition, parentItem);\n      }\n    } else {\n      this.backUpAndPushNewlyAddedRecord(cAddedRecord, rowPosition, parentItem);\n    }\n    // need to push in dataSource also.\n    if (this.parent.taskFields.dependency && cAddedRecord.ganttProperties.predecessorsName) {\n      if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n        this.parent.predecessorModule.ensurePredecessorCollectionHelper(cAddedRecord, cAddedRecord.ganttProperties);\n      }\n      this.parent.predecessorModule.updatePredecessorHelper(cAddedRecord);\n      this.parent.predecessorModule.validatePredecessorDates(cAddedRecord);\n    }\n    if (cAddedRecord.parentItem && this.parent.getParentTask(cAddedRecord.parentItem).ganttProperties.isAutoSchedule) {\n      this.parent.dataOperation.updateParentItems(cAddedRecord.parentItem);\n    }\n    this.parent.isOnEdit = false;\n    return cAddedRecord;\n  };\n  /**\n   * @param {IGanttData} record .\n   * @param {number} count .\n   * @returns {number} .\n   * @private\n   */\n  Edit.prototype.getChildCount = function (record, count) {\n    var currentRecord;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    for (var i = 0; i < record.childRecords.length; i++) {\n      currentRecord = record.childRecords[i];\n      count++;\n      if (currentRecord.hasChildRecords) {\n        count = this.getChildCount(currentRecord, count);\n      }\n    }\n    return count;\n  };\n  /**\n   * @param {IGanttData} data .\n   * @param {number} count .\n   * @param {IGanttData[]} collection .\n   * @returns {number} .\n   * @private\n   */\n  Edit.prototype.getVisibleChildRecordCount = function (data, count, collection) {\n    var childRecords;\n    var length;\n    if (data.hasChildRecords) {\n      childRecords = data.childRecords;\n      length = childRecords.length;\n      for (var i = 0; i < length; i++) {\n        if (collection.indexOf(childRecords[i]) !== -1) {\n          count++;\n        }\n        if (childRecords[i].hasChildRecords) {\n          count = this.getVisibleChildRecordCount(childRecords[i], count, collection);\n        }\n      }\n    } else {\n      if (collection.indexOf(data) !== -1) {\n        count++;\n      }\n    }\n    return count;\n  };\n  /**\n   * @param {IGanttData} parentRecord .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.updatePredecessorOnIndentOutdent = function (parentRecord) {\n    var len = parentRecord.ganttProperties.predecessor.length;\n    var parentRecordTaskData = parentRecord.ganttProperties;\n    var predecessorCollection = parentRecordTaskData.predecessor;\n    var childRecord;\n    var predecessorIndex;\n    var updatedPredecessor = [];\n    var validPredecessor;\n    for (var count = 0; count < len; count++) {\n      var fromRecord = this.parent.getRecordByID(predecessorCollection[count].from);\n      var toRecord = this.parent.getRecordByID(predecessorCollection[count].to);\n      validPredecessor = this.parent.connectorLineEditModule.validateParentPredecessor(fromRecord, toRecord);\n      if (!validPredecessor || !this.parent.allowParentDependency) {\n        if (predecessorCollection[count].to === parentRecordTaskData.rowUniqueID.toString()) {\n          childRecord = this.parent.getRecordByID(predecessorCollection[count].from);\n          predecessorIndex = getIndex(predecessorCollection[count], 'from', childRecord.ganttProperties.predecessor, 'to');\n          // eslint-disable-next-line\n          var predecessorCollections = extend([], childRecord.ganttProperties.predecessor, [], true);\n          predecessorCollections.splice(predecessorIndex, 1);\n          this.parent.setRecordValue('predecessor', predecessorCollections, childRecord.ganttProperties, true);\n        } else if (predecessorCollection[count].from === parentRecordTaskData.rowUniqueID.toString()) {\n          childRecord = this.parent.getRecordByID(predecessorCollection[count].to);\n          var prdcList = childRecord.ganttProperties.predecessorsName.toString().split(',');\n          var str = predecessorCollection[count].from + predecessorCollection[count].type;\n          var ind = prdcList.indexOf(str);\n          prdcList.splice(ind, 1);\n          this.parent.setRecordValue('predecessorsName', prdcList.join(','), childRecord.ganttProperties, true);\n          this.parent.setRecordValue(this.parent.taskFields.dependency, prdcList.join(','), childRecord);\n          predecessorIndex = getIndex(predecessorCollection[count], 'from', childRecord.ganttProperties.predecessor, 'to');\n          // eslint-disable-next-line\n          var temppredecessorCollection = extend([], childRecord.ganttProperties.predecessor, [], true);\n          temppredecessorCollection.splice(predecessorIndex, 1);\n          this.parent.setRecordValue('predecessor', temppredecessorCollection, childRecord.ganttProperties, true);\n          this.parent.predecessorModule.validatePredecessorDates(childRecord);\n        }\n      }\n    }\n    if (!validPredecessor || !this.parent.allowParentDependency) {\n      this.parent.setRecordValue('predecessor', updatedPredecessor, parentRecord.ganttProperties, true);\n      this.parent.setRecordValue('predecessorsName', '', parentRecord.ganttProperties, true);\n    }\n  };\n  /**\n   * @param {IGanttData} record .\n   * @param {RowPosition} rowPosition .\n   * @param {IGanttData} parentItem .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.backUpAndPushNewlyAddedRecord = function (record, rowPosition, parentItem) {\n    var flatRecords = this.parent.flatData;\n    var currentViewData = this.parent.currentViewData;\n    var ids = this.parent.ids;\n    var currentItemIndex;\n    var recordIndex;\n    var updatedCollectionIndex;\n    var childIndex;\n    switch (rowPosition) {\n      case 'Top':\n        flatRecords.splice(0, 0, record);\n        currentViewData.splice(0, 0, record);\n        ids.splice(0, 0, record.ganttProperties.rowUniqueID.toString()); // need to check NAN\n        break;\n      case 'Bottom':\n        flatRecords.push(record);\n        currentViewData.push(record);\n        ids.push(record.ganttProperties.rowUniqueID.toString()); // need to check NAN\n        if (this.parent.viewType === 'ResourceView') {\n          var taskId = record.level === 0 ? 'R' + record.ganttProperties.taskId : 'T' + record.ganttProperties.taskId;\n          this.parent.getTaskIds().push(taskId);\n        }\n        break;\n      case 'Above':\n        /*Record Updates*/\n        recordIndex = flatRecords.indexOf(this.addRowSelectedItem);\n        updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem);\n        this.recordCollectionUpdate(childIndex, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition);\n        break;\n      case 'Below':\n        currentItemIndex = flatRecords.indexOf(this.addRowSelectedItem);\n        if (this.addRowSelectedItem.hasChildRecords) {\n          var dataChildCount = this.getChildCount(this.addRowSelectedItem, 0);\n          recordIndex = currentItemIndex + dataChildCount + 1;\n          updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) + this.getVisibleChildRecordCount(this.addRowSelectedItem, 0, currentViewData) + 1;\n        } else {\n          recordIndex = currentItemIndex + 1;\n          updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) + 1;\n        }\n        this.recordCollectionUpdate(childIndex + 1, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition);\n        break;\n      case 'Child':\n        currentItemIndex = flatRecords.indexOf(this.addRowSelectedItem);\n        if (this.addRowSelectedItem.hasChildRecords) {\n          var dataChildCount = this.getChildCount(this.addRowSelectedItem, 0);\n          recordIndex = currentItemIndex + dataChildCount + 1;\n          //Expand Add record's parent item for project view\n          if (!this.addRowSelectedItem.expanded && !this.parent.enableMultiTaskbar) {\n            this.parent.expandByID(this.addRowSelectedItem.ganttProperties.rowUniqueID);\n          }\n          updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) + this.getVisibleChildRecordCount(this.addRowSelectedItem, 0, currentViewData) + 1;\n        } else {\n          this.parent.setRecordValue('hasChildRecords', true, this.addRowSelectedItem);\n          this.parent.setRecordValue('isMilestone', false, this.addRowSelectedItem.ganttProperties, true);\n          this.parent.setRecordValue('expanded', true, this.addRowSelectedItem);\n          this.parent.setRecordValue('childRecords', [], this.addRowSelectedItem);\n          recordIndex = currentItemIndex + 1;\n          updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) + 1;\n          if (this.addRowSelectedItem.ganttProperties.predecessor) {\n            this.updatePredecessorOnIndentOutdent(this.addRowSelectedItem);\n          }\n          if (!isNullOrUndefined(this.addRowSelectedItem.ganttProperties.segments)) {\n            this.addRowSelectedItem.ganttProperties.segments = null;\n          }\n        }\n        this.recordCollectionUpdate(childIndex + 1, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition);\n        break;\n    }\n    this.newlyAddedRecordBackup = record;\n  };\n  /**\n   * @param {number} childIndex .\n   * @param {number} recordIndex .\n   * @param {number} updatedCollectionIndex .\n   * @param {IGanttData} record .\n   * @param {IGanttData} parentItem .\n   * @param {RowPosition} rowPosition .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.recordCollectionUpdate = function (childIndex, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition) {\n    var flatRecords = this.parent.flatData;\n    var currentViewData = this.parent.currentViewData;\n    var ids = this.parent.ids;\n    /* Record collection update */\n    flatRecords.splice(recordIndex, 0, record);\n    currentViewData.splice(updatedCollectionIndex, 0, record);\n    ids.splice(recordIndex, 0, record.ganttProperties.rowUniqueID.toString());\n    if (this.parent.viewType === 'ResourceView') {\n      var taskId = record.level === 0 ? 'R' + record.ganttProperties.taskId : 'T' + record.ganttProperties.taskId;\n      this.parent.getTaskIds().splice(recordIndex, 0, taskId);\n    }\n    /* data Source update */\n    if (!isNullOrUndefined(parentItem)) {\n      if (rowPosition === 'Above') {\n        childIndex = parentItem.childRecords.indexOf(this.addRowSelectedItem);\n      } else if (rowPosition === 'Below') {\n        childIndex = parentItem.childRecords.indexOf(this.addRowSelectedItem) + 1;\n      } else {\n        childIndex = parentItem.childRecords.length;\n      }\n      /*Child collection update*/\n      parentItem.childRecords.splice(childIndex, 0, record);\n      if (!this.parent.taskFields.child) {\n        this.parent.taskFields.child = 'Children';\n      }\n      if (this.parent.dataSource instanceof DataManager && isNullOrUndefined(parentItem.taskData[this.parent.taskFields.parentID]) || !isNullOrUndefined(this.parent.dataSource)) {\n        var child = this.parent.taskFields.child;\n        if (parentItem.taskData[child] && parentItem.taskData[child].length > 0) {\n          if (rowPosition === 'Above' || rowPosition === 'Below') {\n            parentItem.taskData[child].splice(childIndex, 0, record.taskData);\n          } else {\n            parentItem.taskData[child].push(record.taskData);\n          }\n        } else {\n          parentItem.taskData[child] = [];\n          parentItem.taskData[child].push(record.taskData);\n        }\n        this.isNewRecordAdded = true;\n      }\n    }\n  };\n  /**\n   * @param {IGanttData} cAddedRecord .\n   * @param {IGanttData} modifiedRecords .\n   * @param {string} event .\n   * @returns {ITaskAddedEventArgs} .\n   * @private\n   */\n  Edit.prototype.constructTaskAddedEventArgs = function (cAddedRecord, modifiedRecords, event) {\n    var eventArgs = {};\n    eventArgs.action = eventArgs.requestType = event;\n    if (cAddedRecord.length > 1) {\n      eventArgs.data = [];\n      eventArgs.newTaskData = [];\n      eventArgs.recordIndex = [];\n      for (var i = 0; i < cAddedRecord.length; i++) {\n        eventArgs.data[i] = cAddedRecord[i];\n        eventArgs.newTaskData[i] = getTaskData([cAddedRecord[i]], eventArgs.data[i], eventArgs, this.parent);\n        eventArgs.recordIndex[i] = cAddedRecord[i].index;\n      }\n    } else if (cAddedRecord.length === 1) {\n      for (var i = 0; i < cAddedRecord.length; i++) {\n        eventArgs.data = cAddedRecord[i];\n        eventArgs.newTaskData = getTaskData([cAddedRecord[i]], eventArgs.data, eventArgs, this.parent);\n        eventArgs.recordIndex = cAddedRecord[i].index;\n      }\n    }\n    eventArgs.modifiedRecords = modifiedRecords;\n    eventArgs.modifiedTaskData = getTaskData(modifiedRecords, null, null, this.parent);\n    return eventArgs;\n  };\n  /**\n   * @param {ITaskAddedEventArgs} args .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.addSuccess = function (args) {\n    // let addedRecords: IGanttData = args.addedRecord;\n    // let eventArgs: IActionBeginEventArgs = {};\n    this.parent.updatedConnectorLineCollection = [];\n    this.parent.connectorLineIds = [];\n    this.parent.predecessorModule.createConnectorLinesCollection(this.parent.flatData);\n    this.parent.treeGrid.parentData = [];\n    this.parent.addDeleteRecord = true;\n    this.parent.treeGrid['isAddedFromGantt'] = true;\n    this.isAdded = true;\n    if (this.parent.treeGrid.editModule) {\n      this.parent.treeGrid.editModule['isOnBatch'] = false;\n    }\n    this.parent.treeGrid.refresh();\n    if (this.parent.enableImmutableMode) {\n      this.parent.modifiedRecords = args.modifiedRecords;\n      this.parent.modifiedRecords.push(args.data);\n      this.refreshRecordInImmutableMode();\n    }\n  };\n  Edit.prototype.refreshRecordInImmutableMode = function (data, dragged) {\n    if (!dragged && !isNullOrUndefined(data)) {\n      for (var i = data[0].index + 1; i < this.parent.currentViewData.length; i++) {\n        if (data[0].level < this.parent.currentViewData[i].level) {\n          this.parent.modifiedRecords.push(this.parent.currentViewData[i]);\n        } else {\n          break;\n        }\n      }\n    }\n    var _loop_6 = function (i) {\n      var originalData = this_5.parent.modifiedRecords[i];\n      var treeIndex = this_5.parent.rowDragAndDropModule && this_5.parent.allowRowDragAndDrop ? 1 : 0;\n      var uniqueTaskID = this_5.parent.taskFields.id;\n      var originalIndex = this_5.parent.currentViewData.findIndex(function (data) {\n        return data[uniqueTaskID] === originalData[uniqueTaskID];\n      });\n      if (this_5.parent.treeGrid.getRows()[originalIndex]) {\n        var row = this_5.parent.treeGrid.grid.getRowObjectFromUID(this_5.parent.treeGrid.grid.getDataRows()[originalIndex].getAttribute('data-uid'));\n        this_5.parent.treeGrid.renderModule.cellRender({\n          data: row.data,\n          cell: this_5.parent.treeGrid.getRows()[originalIndex].cells[this_5.parent.treeColumnIndex + treeIndex],\n          column: this_5.parent.treeGrid.grid.getColumns()[this_5.parent.treeColumnIndex],\n          requestType: 'rowDragAndDrop'\n        });\n        this_5.parent.treeGrid.renderModule.RowModifier({\n          data: originalData,\n          row: this_5.parent.treeGrid.getRows()[originalIndex],\n          rowHeight: this_5.parent.rowHeight\n        });\n      }\n    };\n    var this_5 = this;\n    for (var i = 0; i < this.parent.modifiedRecords.length; i++) {\n      _loop_6(i);\n    }\n  };\n  /**\n   * @param {IGanttData} addedRecord .\n   * @param {RowPosition} rowPosition .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.updateRealDataSource = function (addedRecord, rowPosition) {\n    var taskFields = this.parent.taskFields;\n    var dataSource = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) : this.parent.dataSource;\n    if (this.parent.dataSource instanceof DataManager) {\n      dataSource = this.parent.dataSource.dataSource.json;\n    }\n    for (var i = 0; i < addedRecord.length; i++) {\n      if (isNullOrUndefined(rowPosition) || isNullOrUndefined(this.addRowSelectedItem)) {\n        rowPosition = rowPosition === 'Bottom' ? 'Bottom' : 'Top';\n      }\n      if (rowPosition === 'Top') {\n        dataSource.splice(0, 0, addedRecord[i].taskData);\n      } else if (rowPosition === 'Bottom') {\n        dataSource.push(addedRecord[i].taskData);\n      } else {\n        if (!isNullOrUndefined(taskFields.id) && !isNullOrUndefined(taskFields.parentID) && rowPosition === 'Child') {\n          dataSource.push(addedRecord[i].taskData);\n        } else {\n          if (!this.isNewRecordAdded) {\n            this.addDataInRealDataSource(dataSource, addedRecord[i].taskData, rowPosition);\n          }\n          this.isNewRecordAdded = false;\n        }\n      }\n      this.isBreakLoop = false;\n    }\n  };\n  /**\n   * @param {object[]} dataCollection .\n   * @param {IGanttData} record .\n   * @param {RowPosition} rowPosition .\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.addDataInRealDataSource = function (dataCollection, record, rowPosition) {\n    for (var i = 0; i < dataCollection.length; i++) {\n      var child = this.parent.taskFields.child;\n      if (this.isBreakLoop) {\n        break;\n      }\n      if (getValue(this.parent.taskFields.id, dataCollection[i]).toString() === this.addRowSelectedItem.ganttProperties.rowUniqueID.toString()) {\n        var index = void 0;\n        if (this.parent.rowDragAndDropModule && this.parent.rowDragAndDropModule['droppedRecord'] && this.parent.viewType === 'ResourceView') {\n          for (var i_1 = 0; i_1 < dataCollection.length; i_1++) {\n            if (dataCollection[i_1][this.parent.taskFields.id] === this.parent.rowDragAndDropModule['droppedRecord'].ganttProperties.taskId) {\n              index = i_1;\n              break;\n            }\n          }\n        }\n        if (rowPosition === 'Above') {\n          if (index) {\n            dataCollection.splice(index, 0, record);\n          } else {\n            dataCollection.splice(i, 0, record);\n          }\n        } else if (rowPosition === 'Below') {\n          if (index) {\n            dataCollection.splice(index + 1, 0, record);\n          } else {\n            dataCollection.splice(i + 1, 0, record);\n          }\n        } else if (rowPosition === 'Child') {\n          if (dataCollection[i][child] && dataCollection[i][child].length > 0) {\n            dataCollection[i][child].push(record);\n          } else {\n            dataCollection[i][child] = [];\n            dataCollection[i][child].push(record);\n          }\n        }\n        this.isBreakLoop = true;\n        break;\n      } else if (dataCollection[i][child]) {\n        var childRecords = dataCollection[i][child];\n        this.addDataInRealDataSource(childRecords, record, rowPosition);\n      }\n    }\n  };\n  /**\n   * Method to update the values to client side from server side.\n   *\n   * @param {Object} e - Defines the new modified data from the server.\n   * @param {Object[]} e.addedRecords .\n   * @param {Object[]} e.changedRecords .\n   * @param {ITaskAddedEventArgs} args - Defines the client side data.\n   * @returns {void} .\n   */\n  Edit.prototype.updateClientDataFromServer = function (e, args) {\n    var serverReturnedValue = e.addedRecords[0];\n    var _aLength = Object.keys(serverReturnedValue).length;\n    for (var j = 0, _a = Object.keys(serverReturnedValue); j < _aLength; j++) {\n      var key = _a[parseInt(j.toString(), 10)];\n      args.data[\"\" + key] = serverReturnedValue[\"\" + key];\n    }\n    if (this.parent.taskFields.id !== null) {\n      args.data.ganttProperties['taskId'] = serverReturnedValue[this.parent.taskFields.id];\n    }\n    if (this.parent.taskFields.name !== null) {\n      args.data.ganttProperties['taskName'] = serverReturnedValue[this.parent.taskFields.name];\n    }\n    if (this.parent.taskFields.startDate !== null) {\n      args.data.ganttProperties['startDate'] = serverReturnedValue[this.parent.taskFields.startDate];\n    }\n    if (this.parent.taskFields.endDate !== null) {\n      args.data.ganttProperties['endDate'] = serverReturnedValue[this.parent.taskFields.endDate];\n    }\n    if (this.parent.taskFields.duration !== null) {\n      args.data.ganttProperties['duration'] = parseFloat(serverReturnedValue[this.parent.taskFields.duration]);\n    }\n    if (this.parent.taskFields.durationUnit !== null) {\n      args.data.ganttProperties['durationUnit'] = serverReturnedValue[this.parent.taskFields.durationUnit];\n    }\n    if (this.parent.taskFields.progress !== null) {\n      args.data.ganttProperties['progress'] = serverReturnedValue[this.parent.taskFields.progress];\n    }\n    if (this.parent.taskFields.dependency !== null) {\n      args.data.ganttProperties['dependency'] = serverReturnedValue[this.parent.taskFields.dependency];\n    }\n    if (this.parent.taskFields.parentID !== null) {\n      args.data.ganttProperties['parentID'] = serverReturnedValue[this.parent.taskFields.parentID];\n    }\n    if (this.parent.taskFields.baselineEndDate !== null) {\n      args.data.ganttProperties['baselineEndDate'] = serverReturnedValue[this.parent.taskFields.baselineEndDate];\n    }\n    if (this.parent.taskFields.baselineStartDate !== null) {\n      args.data.ganttProperties['baselineStartDate'] = serverReturnedValue[this.parent.taskFields.baselineStartDate];\n    }\n    if (this.parent.taskFields.resourceInfo !== null) {\n      args.data.ganttProperties['resources'] = serverReturnedValue[this.parent.taskFields.resourceInfo];\n    }\n  };\n  Edit.prototype.addNewUndoCollection = function (record, args) {\n    if (this.parent.undoRedoModule && (!this.parent.undoRedoModule['isUndoRedoPerformed'] || this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']['action'] === 'Add' && this.parent.viewType === 'ResourceView') && this.parent['isUndoRedoItemPresent']('Add')) {\n      record['action'] = 'Add';\n      var tempArray_1 = args.data.length > 0 ? extend([], [], args.data, true) : [args.data];\n      var addedRec = [];\n      var _loop_7 = function (i) {\n        addedRec = this_6.parent.flatData.filter(function (data) {\n          return tempArray_1[i].index === data.index && tempArray_1[i]['ganttProperties'].taskId === data.ganttProperties.taskId;\n        });\n      };\n      var this_6 = this;\n      for (var i = 0; i < tempArray_1.length; i++) {\n        _loop_7(i);\n      }\n      record['addedRecords'] = extend([], [], addedRec, true);\n      this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n    }\n  };\n  /**\n   * Method to add new record.\n   *\n   * @param {Object[] | Object} data - Defines the new data to add.\n   * @param {RowPosition} rowPosition - Defines the position of row.\n   * @param {number} rowIndex - Defines the row index.\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.addRecord = function (data, rowPosition, rowIndex) {\n    var _this = this;\n    var tempTaskID = this.parent.taskFields.id;\n    if (this.parent.editModule && this.parent.editSettings.allowAdding) {\n      this.parent.isDynamicData = true;\n      this.parent.treeGrid['isAddedFromGantt'] = true;\n      this.parent.isOnAdded = true;\n      var cAddedRecord_1 = [];\n      if (isNullOrUndefined(data)) {\n        this.validateTaskPosition(data, rowPosition, rowIndex, cAddedRecord_1);\n      } else if (data instanceof Array) {\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n          var addData = data;\n          var addIndex = rowIndex;\n          if (this.parent.viewType === 'ResourceView') {\n            if (data[0]['position'] === 'below') {\n              rowPosition = 'Below';\n            } else if (data[0]['position'] === 'above') {\n              rowPosition = 'Above';\n            } else if (data[0]['position'] === 'child') {\n              rowPosition = 'Child';\n            }\n            addIndex = this.parent.taskIds.indexOf(data[0]['id'].toString());\n            addData = data[0]['data'];\n          }\n          this.validateTaskPosition(addData, rowPosition, addIndex, cAddedRecord_1);\n        } else {\n          for (var i = 0; i < data.length; i++) {\n            this.validateTaskPosition(data[i], rowPosition, rowIndex, cAddedRecord_1);\n          }\n        }\n      } else if (typeof data === 'object') {\n        this.validateTaskPosition(data, rowPosition, rowIndex, cAddedRecord_1);\n      } else {\n        return;\n      }\n      var args = {};\n      args = this.constructTaskAddedEventArgs(cAddedRecord_1, this.parent.editedRecords, 'beforeAdd');\n      if (!isNullOrUndefined(rowPosition)) {\n        args.rowPosition = rowPosition;\n      }\n      if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent']('Add')) {\n        if (this.parent.undoRedoModule['redoEnabled']) {\n          this.parent.undoRedoModule['disableRedo']();\n        }\n        this.parent.undoRedoModule['createUndoCollection']();\n      }\n      this.parent.trigger('actionBegin', args, function (args) {\n        _this.parent.previousRecords = {};\n        if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n          _this.parent.showMaskRow();\n        } else {\n          _this.parent.showSpinner();\n        }\n        var tasks = _this.parent.taskFields;\n        var ganttData;\n        if (_this.parent.viewType === 'ResourceView') {\n          if (args.data['childRecords'].length > 0) {\n            ganttData = _this.parent.flatData[_this.parent.getTaskIds().indexOf('R' + args.data[tasks.id])];\n          } else {\n            ganttData = _this.parent.flatData[_this.parent.getTaskIds().indexOf('T' + args.data[tasks.id])];\n          }\n        } else {\n          ganttData = _this.parent.getRecordByID(args.data[tasks.id]);\n        }\n        if (!isNullOrUndefined(ganttData)) {\n          _this.validateUpdateValues(args.newTaskData, ganttData, true);\n          _this.parent.dateValidationModule.calculateEndDate(ganttData);\n          _this.parent.dataOperation.updateWidthLeft(ganttData);\n          _this.parent.dataOperation.updateParentItems(ganttData);\n        }\n        if (!isNullOrUndefined(args.data[\"\" + tempTaskID])) {\n          if (args.data[tempTaskID] !== args.data['ganttProperties']['taskId']) {\n            for (var _i = 0, _b = Object.keys(_this.parent.ids); _i < _b.length; _i++) {\n              var key = _b[_i];\n              if (_this.parent.ids[key] === args.data['ganttProperties']['taskId'].toString()) {\n                _this.parent.ids[key] = args.data[tempTaskID].toString();\n                break;\n              }\n            }\n            args.data['ganttProperties']['taskId'] = args.data[tempTaskID];\n            args.newTaskData[tempTaskID] = args.data[tempTaskID];\n            args.data['ganttProperties']['rowUniqueID'] = args.data[tempTaskID].toString();\n          }\n        }\n        if (!args.cancel) {\n          var record = {};\n          if (isRemoteData(_this.parent.dataSource)) {\n            var data_2 = _this.parent.dataSource;\n            var updatedData_2 = {\n              addedRecords: [args.newTaskData],\n              changedRecords: args.modifiedTaskData\n            };\n            /* tslint:disable-next-line */\n            var query = _this.parent.query instanceof Query ? _this.parent.query : new Query();\n            var adaptor = data_2.adaptor;\n            if (!(adaptor instanceof WebApiAdaptor || adaptor instanceof ODataAdaptor || adaptor instanceof ODataV4Adaptor) || data_2.dataSource.batchUrl) {\n              /* tslint:disable-next-line */\n              var crud = data_2.saveChanges(updatedData_2, _this.parent.taskFields.id, null, query);\n              crud.then(function (e) {\n                if (e.addedRecords[0][_this.parent.taskFields.id].toString() !== args.data['ganttProperties']['taskId']) {\n                  args.data['ganttProperties']['taskId'] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                  args.newTaskData[tempTaskID] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                  args.data['ganttProperties']['rowUniqueID'] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                  _this.parent.ids.push(e.addedRecords[0][_this.parent.taskFields.id].toString());\n                }\n                var prevID = args.data.ganttProperties.taskId.toString();\n                if (_this.parent.taskFields.id && !isNullOrUndefined(e.addedRecords[0][_this.parent.taskFields.id]) && e.addedRecords[0][_this.parent.taskFields.id].toString() === prevID) {\n                  _this.parent.setRecordValue('taskId', e.addedRecords[0][_this.parent.taskFields.id], args.data.ganttProperties, true);\n                  _this.parent.setRecordValue('taskData', e.addedRecords[0], args.data);\n                  _this.parent.setRecordValue(_this.parent.taskFields.id, e.addedRecords[0][_this.parent.taskFields.id], args.data);\n                  _this.parent.setRecordValue('rowUniqueID', e.addedRecords[0][_this.parent.taskFields.id].toString(), args.data.ganttProperties, true);\n                  _this.updateClientDataFromServer(e, args);\n                  var idsIndex = _this.parent.ids.indexOf(prevID);\n                  if (idsIndex !== -1) {\n                    _this.parent.ids[idsIndex] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                  }\n                }\n                _this.updateNewRecord(cAddedRecord_1, args);\n              }).catch(function (e) {\n                _this.removeAddedRecord();\n                _this.dmFailure(e, args);\n                _this._resetProperties();\n              });\n            } else {\n              var addedRecords = 'addedRecords';\n              var insertCrud = data_2.insert(updatedData_2[addedRecords], null, query);\n              insertCrud.then(function (e) {\n                var addedRecords;\n                if (!isNullOrUndefined(e[0])) {\n                  addedRecords = e[0];\n                } else {\n                  addedRecords = updatedData_2['addedRecords'][0];\n                }\n                cAddedRecord_1.forEach(function (record) {\n                  if (!isNullOrUndefined(record)) {\n                    _this.updateEditedRecordFields(addedRecords, record);\n                    _this.parent.dataOperation.updateTaskData(record);\n                  }\n                });\n                _this.updateNewRecord(cAddedRecord_1, args);\n              }).catch(function (e) {\n                _this.removeAddedRecord();\n                _this.dmFailure(e, args);\n                _this._resetProperties();\n              });\n            }\n          } else {\n            if (_this.parent.viewType === 'ProjectView') {\n              if (rowPosition === 'Top' || rowPosition === 'Bottom' || rowPosition === 'Above' || rowPosition === 'Below' || rowPosition === 'Child' || isNullOrUndefined(rowPosition) && !args.data.parentItem) {\n                if (args.data instanceof Array) {\n                  _this.updateRealDataSource(args.data, rowPosition);\n                } else {\n                  var data_3 = [];\n                  data_3.push(args.data);\n                  _this.updateRealDataSource(data_3, rowPosition);\n                  _this.parent.currentSelection = cAddedRecord_1[0];\n                }\n              }\n            } else {\n              var dataSource = isCountRequired(_this.parent) ? getValue('result', _this.parent.dataSource) : _this.parent.dataSource; // eslint-disable-line\n              dataSource.push(args.data.taskData);\n            }\n            if (cAddedRecord_1.level === 0) {\n              _this.parent.treeGrid.parentData.splice(0, 0, cAddedRecord_1);\n            }\n            _this.updateTreeGridUniqueID(cAddedRecord_1, 'add');\n            if (_this.parent.viewType === 'ResourceView' && _this.parent.undoRedoModule && _this.parent.undoRedoModule['currentAction']) {\n              var canDelete = false;\n              if (args.data['hasChildRecords']) {\n                canDelete = true;\n              } else {\n                if (args.data['parentItem']) {\n                  var parentTask = _this.parent.getTaskByUniqueID(args.data['parentItem'].uniqueID);\n                  if (parentTask.ganttProperties.taskName !== _this.parent.localeObj.getConstant('unassignedTask')) {\n                    canDelete = true;\n                  }\n                }\n              }\n              if (_this.parent.taskIds.indexOf('R0') !== -1 && _this.parent.undoRedoModule && _this.parent.undoRedoModule['isUndoRedoPerformed'] && _this.parent.undoRedoModule['currentAction']['action'] === 'Delete' && canDelete) {\n                var unassignedTask = _this.parent.flatData[_this.parent.taskIds.indexOf('R0')];\n                var isPresent = unassignedTask.childRecords.filter(function (data) {\n                  return data.ganttProperties.taskId === args.data['ganttProperties'].taskId;\n                });\n                if (args.data['hasChildRecords']) {\n                  isPresent = args.data['childRecords'];\n                }\n                var _loop_8 = function (j) {\n                  if (unassignedTask.childRecords.length === 1) {\n                    _this.parent.flatData.splice(_this.parent.taskIds.indexOf('R0'), 2);\n                    _this.parent.ids.splice(_this.parent.taskIds.indexOf('R0'), 2);\n                    _this.parent.taskIds.splice(_this.parent.taskIds.indexOf('R0'), 2);\n                  } else {\n                    var index = _this.parent.taskIds.indexOf('T' + isPresent[j].ganttProperties.taskId);\n                    var id_2 = 'T' + isPresent[j].ganttProperties.taskId;\n                    var indexes = _this.parent.taskIds.reduce(function (a, e, i) {\n                      if (e === id_2) {\n                        a.push(i);\n                      }\n                      return a;\n                    }, []);\n                    index = indexes[indexes.length - 1];\n                    _this.parent.taskIds.splice(index, 1);\n                    _this.parent.flatData.splice(index, 1);\n                    _this.parent.ids.splice(index, 1);\n                  }\n                };\n                for (var j = 0; j < isPresent.length; j++) {\n                  _loop_8(j);\n                }\n                if (unassignedTask && _this.parent.viewType === 'ResourceView') {\n                  var isValid = _this.parent.flatData[_this.parent.taskIds.indexOf('R0') + 1];\n                  if (!isValid) {\n                    _this.parent.flatData.splice(_this.parent.taskIds.indexOf('R0'), 1);\n                    _this.parent.ids.splice(_this.parent.taskIds.indexOf('R0'), 1);\n                    _this.parent.taskIds.splice(_this.parent.taskIds.indexOf('R0'), 1);\n                  }\n                }\n              }\n            }\n            _this.refreshNewlyAddedRecord(args, cAddedRecord_1);\n            if (_this.parent.viewType === 'ResourceView' && _this.parent.taskFields.work && ganttData) {\n              _this.parent.dataOperation.updateParentItems(ganttData, true);\n            }\n            _this.addNewUndoCollection(record, args);\n            _this._resetProperties();\n          }\n          _this.parent.isOnAdded = false;\n        } else {\n          _this.removeAddedRecord();\n          _this.reUpdatePreviousRecords();\n          _this._resetProperties();\n        }\n      });\n    }\n  };\n  Edit.prototype.createNewRecord = function () {\n    var tempRecord = {};\n    var ganttColumns = this.parent.ganttColumns;\n    var taskSettingsFields = this.parent.taskFields;\n    var taskId = this.parent.editModule.getNewTaskId();\n    for (var i = 0; i < ganttColumns.length; i++) {\n      var fieldName = ganttColumns[i].field;\n      if (fieldName === taskSettingsFields.id) {\n        tempRecord[fieldName] = taskId;\n      } else if (ganttColumns[i].field === taskSettingsFields.startDate) {\n        if (isNullOrUndefined(tempRecord[taskSettingsFields.endDate])) {\n          tempRecord[fieldName] = this.parent.editModule.dialogModule.getMinimumStartDate();\n        } else {\n          tempRecord[fieldName] = new Date(tempRecord[taskSettingsFields.endDate]);\n        }\n        if (this.parent.timezone) {\n          tempRecord[fieldName] = this.parent.dateValidationModule.remove(tempRecord[fieldName], this.parent.timezone);\n        }\n      } else if (ganttColumns[i].field === taskSettingsFields.endDate) {\n        if (isNullOrUndefined(tempRecord[taskSettingsFields.startDate])) {\n          tempRecord[fieldName] = this.parent.editModule.dialogModule.getMinimumStartDate();\n        } else {\n          tempRecord[fieldName] = new Date(tempRecord[taskSettingsFields.startDate]);\n        }\n        if (this.parent.timezone) {\n          tempRecord[fieldName] = this.parent.dateValidationModule.remove(tempRecord[fieldName], this.parent.timezone);\n        }\n      } else if (ganttColumns[i].field === taskSettingsFields.duration) {\n        tempRecord[fieldName] = 1;\n      } else if (ganttColumns[i].field === taskSettingsFields.name) {\n        tempRecord[fieldName] = this.parent.editModule.dialogModule['localeObj'].getConstant('addDialogTitle') + ' ' + taskId;\n      } else if (ganttColumns[i].field === taskSettingsFields.progress) {\n        tempRecord[fieldName] = 0;\n      } else if (ganttColumns[i].field === taskSettingsFields.work) {\n        tempRecord[fieldName] = 0;\n      } else if (ganttColumns[i].field === taskSettingsFields.type || ganttColumns[i].field === 'taskType') {\n        tempRecord[fieldName] = this.parent.taskType;\n      } else if (ganttColumns[i].field === taskSettingsFields.milestone) {\n        tempRecord[fieldName] = null;\n      } else {\n        tempRecord[this.parent.ganttColumns[i].field] = '';\n      }\n    }\n    return tempRecord;\n  };\n  /**\n   * Method to validateTaskPosition.\n   *\n   * @param {Object | object[] } data - Defines the new data to add.\n   * @param {RowPosition} rowPosition - Defines the position of row.\n   * @param {number} rowIndex - Defines the row index.\n   * @param {IGanttData} cAddedRecord - Defines the single data to validate.\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.validateTaskPosition = function (data, rowPosition, rowIndex, cAddedRecord) {\n    var selectedRowIndex = isNullOrUndefined(rowIndex) || isNaN(parseInt(rowIndex.toString(), 10)) ? this.parent.selectionModule ? (this.parent.selectionSettings.mode === 'Row' || this.parent.selectionSettings.mode === 'Both') && this.parent.selectionModule.selectedRowIndexes.length === 1 ? this.parent.selectionModule.selectedRowIndexes[0] : this.parent.selectionSettings.mode === 'Cell' && this.parent.selectionModule.getSelectedRowCellIndexes().length === 1 ? this.parent.selectionModule.getSelectedRowCellIndexes()[0].rowIndex : null : null : rowIndex;\n    this.addRowSelectedItem = isNullOrUndefined(selectedRowIndex) ? null : this.parent.updatedRecords[selectedRowIndex];\n    rowPosition = isNullOrUndefined(rowPosition) ? this.parent.editSettings.newRowPosition : rowPosition;\n    data = isNullOrUndefined(data) ? this.createNewRecord() : data;\n    if ((isNullOrUndefined(selectedRowIndex) || selectedRowIndex < 0 || isNullOrUndefined(this.addRowSelectedItem)) && (rowPosition === 'Above' || rowPosition === 'Below' || rowPosition === 'Child') || !rowPosition || rowPosition !== 'Above' && rowPosition !== 'Below' && rowPosition !== 'Child' && rowPosition !== 'Top' && rowPosition !== 'Bottom') {\n      rowPosition = 'Top';\n    }\n    var level = 0;\n    var parentItem;\n    switch (rowPosition) {\n      case 'Top':\n      case 'Bottom':\n        if (this.parent.viewType === 'ResourceView') {\n          level = 1;\n        } else {\n          level = 0;\n        }\n        break;\n      case 'Above':\n      case 'Below':\n        level = this.addRowSelectedItem.level;\n        parentItem = this.parent.getParentTask(this.addRowSelectedItem.parentItem);\n        break;\n      case 'Child':\n        level = this.addRowSelectedItem.level + 1;\n        parentItem = this.addRowSelectedItem;\n        break;\n    }\n    if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      this.prepareNewlyAddedData(data, rowPosition);\n    }\n    var AddRecord = this.updateNewlyAddedDataBeforeAjax(data, level, rowPosition, parentItem, rowIndex);\n    cAddedRecord.push(AddRecord);\n  };\n  Edit.prototype.updateRowIndex = function () {\n    var treeGrid = this.parent.treeGrid;\n    var currentViewData = this.parent.currentViewData;\n    var rowCount = currentViewData.length;\n    for (var index = 0; index < rowCount; index++) {\n      var row = treeGrid.getRowByIndex(index);\n      if (row) {\n        var rowIndex = Number(row.getAttribute('data-rowindex'));\n        currentViewData[index].index = rowIndex;\n        if (currentViewData[index].parentItem && currentViewData[index].parentItem.taskId) {\n          var parentRecord = this.parent.getRecordByID(currentViewData[index].parentItem.taskId);\n          currentViewData[index].parentItem.index = parentRecord.index;\n          currentViewData[index].parentItem.level = parentRecord.level;\n        }\n      }\n    }\n  };\n  Edit.prototype.updateNewRecord = function (cAddedRecord, args) {\n    var _this = this;\n    cAddedRecord.forEach(function (record) {\n      if (record.level === 0) {\n        _this.parent.treeGrid.parentData.splice(0, 0, record);\n        var tempData = getValue('dataOperation.dataArray', _this.parent);\n        tempData.splice(0, 0, record.taskData);\n      }\n      _this.updateTreeGridUniqueID(record, 'add');\n    });\n    this.updateTreeGridUniqueID(cAddedRecord, 'add');\n    this.refreshNewlyAddedRecord(args, cAddedRecord);\n    var objCollection = {};\n    this.addNewUndoCollection(objCollection, args);\n    this._resetProperties();\n  };\n  /**\n   * Method to reset the flag after adding new record\n   *\n   * @returns {void} .\n   */\n  Edit.prototype._resetProperties = function () {\n    this.parent.isOnEdit = false;\n    this.parent.hideSpinner();\n    this.addRowSelectedItem = null;\n    this.newlyAddedRecordBackup = null;\n    this.isBreakLoop = false;\n    this.parent.element.tabIndex = 0;\n    this.parent.initiateEditAction(false);\n  };\n  /**\n   * Method to update unique id collection in TreeGrid\n   *\n   * @param {IGanttData} data .\n   * @param {string} action .\n   * @returns {void} .\n   */\n  Edit.prototype.updateTreeGridUniqueID = function (data, action) {\n    if (action === 'add') {\n      setValue('uniqueIDCollection.' + data.uniqueID, data, this.parent.treeGrid);\n    } else if (action === 'delete') {\n      deleteObject(getValue('uniqueIDCollection', this.parent.treeGrid), data.uniqueID);\n    }\n  };\n  Edit.prototype.refreshNewlyAddedRecord = function (args, cAddedRecord) {\n    if (this.parent.selectionModule && this.parent.allowSelection && (this.parent.selectionSettings.mode === 'Row' || this.parent.selectionSettings.mode === 'Both')) {\n      this.parent.staticSelectedRowIndex = this.parent.currentViewData.indexOf(args.data);\n    }\n    if (this.parent.timelineSettings.updateTimescaleView) {\n      var tempArray = [];\n      if (args.modifiedRecords.length > 0) {\n        tempArray = args.data.length > 0 ? extend([], [], args.data, true) : [args.data]; // eslint-disable-next-line\n        tempArray.push.apply(tempArray, args.modifiedRecords);\n      } else {\n        tempArray = args.data.length > 0 ? extend([], [], args.data, true) : [args.data];\n      }\n      this.parent.timelineModule.updateTimeLineOnEditing([tempArray], args.action);\n    }\n    this.addSuccess(args);\n    args = this.constructTaskAddedEventArgs(cAddedRecord, args.modifiedRecords, 'add');\n    if (this.dialogModule.isAddNewResource && !this.parent.isEdit && this.parent.taskFields.work) {\n      this.parent.dataOperation.updateWorkWithDuration(cAddedRecord[0]);\n    }\n    this.updateRowIndex();\n    this.parent.trigger('actionComplete', args);\n    if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n      this.parent.hideMaskRow();\n    } else {\n      this.parent.hideSpinner();\n    }\n    if (this.dialogModule.dialog && !this.dialogModule.dialogObj.isDestroyed) {\n      this.dialogModule.dialogObj.hide();\n    }\n    this.dialogModule.dialogClose();\n    if (this.parent.viewType === 'ResourceView') {\n      if (cAddedRecord.length > 1) {\n        for (var i = 0; i < cAddedRecord.length; i++) {\n          args.data[i].ganttProperties.sharedTaskUniqueIds.push(args.data[i].ganttProperties.rowUniqueID);\n          if (args.data[i].ganttProperties.resourceInfo) {\n            // if ((args.data[i] as IGanttData).ganttProperties.resourceInfo.length > 1) {\n            var resources = extend([], [], args.data[i].ganttProperties.resourceInfo, true);\n            resources.splice(0, 1);\n            this.updateResoures([], resources, args.data[i]);\n            // }\n          } else {\n            if (!this.parent.undoRedoModule || this.parent.undoRedoModule && !args.data[i]['hasChildRecords'] && this.parent.undoRedoModule['isUndoRedoPerformed'] || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n              this.removeChildRecord(args.data[i]);\n              this.parent.editModule.checkWithUnassignedTask(args.data[i]);\n            }\n          }\n          for (var k = 0; k < this.updateParentRecords.length; k++) {\n            this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n          }\n          this.updateParentRecords = [];\n        }\n      } else {\n        args.data.ganttProperties.sharedTaskUniqueIds.push(args.data.ganttProperties.rowUniqueID);\n        // eslint-disable-next-line\n        if (args.data.ganttProperties.resourceInfo && args.data.ganttProperties.resourceInfo.length) {\n          if (args.data.ganttProperties.resourceInfo.length > 1) {\n            // eslint-disable-next-line\n            var resources = extend([], [], args.data.ganttProperties.resourceInfo, true);\n            resources.splice(0, 1);\n            this.updateResoures([], resources, args.data);\n          }\n        } else {\n          if (!this.parent.undoRedoModule || this.parent.undoRedoModule && !args.data['hasChildRecords'] && this.parent.undoRedoModule['isUndoRedoPerformed'] || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            this.removeChildRecord(args.data);\n            this.parent.editModule.checkWithUnassignedTask(args.data);\n          }\n        }\n        for (var k = 0; k < this.updateParentRecords.length; k++) {\n          this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n        }\n        this.updateParentRecords = [];\n      }\n    }\n  };\n  /**\n   *\n   * @returns {void} .\n   * @private\n   */\n  Edit.prototype.removeAddedRecord = function () {\n    var flatRecords = this.parent.flatData;\n    var currentViewData = this.parent.currentViewData;\n    var ids = this.parent.ids;\n    var flatRecordsIndex = flatRecords.indexOf(this.newlyAddedRecordBackup);\n    var currentViewDataIndex = currentViewData.indexOf(this.newlyAddedRecordBackup);\n    var idsIndex = ids.indexOf(this.newlyAddedRecordBackup.ganttProperties.rowUniqueID.toString());\n    deleteObject(this.parent.previousRecords, flatRecords[flatRecordsIndex].uniqueID);\n    if (this.newlyAddedRecordBackup.parentItem) {\n      var parentItem = this.parent.getParentTask(this.newlyAddedRecordBackup.parentItem);\n      var parentIndex = parentItem.childRecords.indexOf(this.newlyAddedRecordBackup);\n      parentItem.childRecords.splice(parentIndex, 1);\n    }\n    flatRecords.splice(flatRecordsIndex, 1);\n    currentViewData.splice(currentViewDataIndex, 1);\n    ids.splice(idsIndex, 1);\n  };\n  Edit.prototype.getPrevRecordIndex = function () {\n    var prevRecord = this.parent.updatedRecords[this.parent.selectionModule.getSelectedRowIndexes()[0] - 1];\n    var selectedRecord = this.parent.selectionModule.getSelectedRecords()[0];\n    var parent = this.parent.getRootParent(prevRecord, selectedRecord.level);\n    var prevIndex = this.parent.updatedRecords.indexOf(parent);\n    return prevIndex;\n  };\n  /**\n   * indent a selected record\n   *\n   * @returns {void} .\n   */\n  Edit.prototype.indent = function () {\n    var index = this.parent.selectedRowIndex;\n    var isSelected = this.parent.selectionModule ? this.parent.selectionModule.selectedRowIndexes.length === 1 || this.parent.selectionModule.getSelectedRowCellIndexes().length === 1 ? true : false : false;\n    var dropIndex;\n    var prevRecord = this.parent.updatedRecords[this.parent.selectionModule.getSelectedRowIndexes()[0] - 1];\n    var selectedRecord = this.parent.selectionModule.getSelectedRecords()[0];\n    if (!this.parent.editSettings.allowEditing || index === 0 || index === -1 || !isSelected || this.parent.viewType === 'ResourceView' || !isNullOrUndefined(this.parent.updatedRecords[index]) && this.parent.updatedRecords[index].level - prevRecord.level === 1) {\n      return;\n    } else {\n      if (prevRecord.level - selectedRecord.level === 0) {\n        dropIndex = this.parent.selectionModule.getSelectedRowIndexes()[0] - 1;\n      } else {\n        dropIndex = this.getPrevRecordIndex();\n      }\n      this.indentOutdentRow([this.parent.selectionModule.getSelectedRowIndexes()[0]], dropIndex, 'child');\n    }\n  };\n  /**\n   * To perform outdent operation for selected row\n   *\n   * @returns {void} .\n   */\n  Edit.prototype.outdent = function () {\n    var index = this.parent.selectionModule.getSelectedRowIndexes()[0];\n    var dropIndex;\n    var isSelected = this.parent.selectionModule ? this.parent.selectionModule.selectedRowIndexes.length === 1 || this.parent.selectionModule.getSelectedRowCellIndexes().length === 1 ? true : false : false;\n    if (!this.parent.editSettings.allowEditing || index === -1 || index === 0 || !isSelected || this.parent.viewType === 'ResourceView' || this.parent.updatedRecords[index].level === 0) {\n      return;\n    } else {\n      var thisParent = this.parent.getTaskByUniqueID(this.parent.selectionModule.getSelectedRecords()[0].parentItem.uniqueID);\n      dropIndex = this.parent.updatedRecords.indexOf(thisParent);\n      this.indentOutdentRow([index], dropIndex, 'below');\n    }\n  };\n  Edit.prototype.indentOutdentRow = function (fromIndexes, toIndex, pos) {\n    var _this = this;\n    // eslint-disable-next-line\n    if (fromIndexes[0] !== toIndex && pos === 'above' || 'below' || 'child') {\n      if (pos === 'above') {\n        this.dropPosition = 'topSegment';\n      }\n      if (pos === 'below') {\n        this.dropPosition = 'bottomSegment';\n      }\n      if (pos === 'child') {\n        this.dropPosition = 'middleSegment';\n      }\n      var action = void 0;\n      var record = [];\n      for (var i = 0; i < fromIndexes.length; i++) {\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']) {\n          if (this.parent.undoRedoModule['currentAction']['modifiedRecord']) {\n            record[i] = this.parent.undoRedoModule['currentAction']['modifiedRecord'][i].data;\n          } else {\n            record[i] = this.parent.undoRedoModule['currentAction']['data'][i];\n          }\n        } else {\n          record[i] = this.parent.updatedRecords[fromIndexes[i]];\n        }\n      }\n      var isByMethod_1 = true;\n      var args_1 = {\n        data: record,\n        dropIndex: toIndex,\n        dropPosition: this.dropPosition\n      };\n      if (this.dropPosition === 'middleSegment') {\n        action = 'indenting';\n      } else if (this.dropPosition === 'bottomSegment') {\n        action = 'outdenting';\n      }\n      var actionArgs = {\n        action: action,\n        data: record[0],\n        cancel: false\n      };\n      this.parent.trigger('actionBegin', actionArgs, function (actionArg) {\n        if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n          _this.parent.showMaskRow();\n        } else {\n          _this.parent.showSpinner();\n        }\n        if (!actionArg.cancel) {\n          _this.reArrangeRows(args_1, isByMethod_1);\n        } else {\n          return;\n        }\n      });\n    } else {\n      return;\n    }\n  };\n  Edit.prototype.reArrangeRows = function (args, isByMethod) {\n    var _this = this;\n    this.dropPosition = args.dropPosition;\n    this.parent['oldRecords'] = [];\n    this.parent['oldRecords'] = extend([], [], args.data, true);\n    if (args.dropPosition !== 'Invalid' && this.parent.editModule) {\n      var obj = this.parent;\n      var draggedRec = void 0;\n      this.droppedRecord = obj.updatedRecords[args.dropIndex];\n      var action = args.dropPosition === 'middleSegment' ? 'Indent' : 'Outdent';\n      if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent'](action)) {\n        var record = {};\n        record['action'] = action;\n        record['modifiedRecord'] = [];\n        record['selectedRowIndexes'] = extend([], [], this.parent.selectionModule.selectedRowIndexes, true);\n        this.parent.undoRedoModule['findPosition'](extend([], [], [args.data], true)[0], record, 'modifiedRecord');\n        record['droppedRecord'] = extend([], [], this.droppedRecord, true);\n        if (this.parent.undoRedoModule['redoEnabled']) {\n          this.parent.undoRedoModule['redoEnabled'] = false;\n          this.parent.undoRedoModule['getUndoCollection'] = [];\n          this.parent.undoRedoModule['getRedoCollection'] = [];\n          if (this.parent.toolbarModule) {\n            this.parent.toolbarModule.enableItems([this.parent.controlId + '_redo'], false);\n          }\n          this.parent.undoRedoModule['getUndoCollection'][0] = [];\n        }\n        this.parent.undoRedoModule['createUndoCollection']();\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n      }\n      var dragRecords = [];\n      var droppedRec = this.droppedRecord;\n      if (!args.data[0]) {\n        dragRecords.push(args.data);\n      } else {\n        dragRecords = args.data;\n      }\n      var c = 0;\n      var dLength = dragRecords.length;\n      for (var i = 0; i < dLength; i++) {\n        this.parent.isOnEdit = true;\n        draggedRec = dragRecords[i];\n        this.draggedRecord = draggedRec;\n        if (this.dropPosition !== 'Invalid') {\n          if (isByMethod) {\n            this.deleteDragRow();\n          }\n          var recordIndex1 = this.treeGridData.indexOf(droppedRec);\n          if (this.dropPosition === 'bottomSegment') {\n            if (!droppedRec.hasChildRecords) {\n              if (this.parent.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n              }\n              this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n              this.parent.ids.splice(recordIndex1 + 1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n            } else {\n              c = this.parent.editModule.getChildCount(droppedRec, 0);\n              if (this.parent.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(recordIndex1 + c + 1, 0, this.draggedRecord.taskData);\n              }\n              this.treeGridData.splice(recordIndex1 + c + 1, 0, this.draggedRecord);\n              this.parent.ids.splice(recordIndex1 + c + 1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n              var idIndex = this.parent.ids.indexOf(this.draggedRecord[this.parent.taskFields.id].toString());\n              if (idIndex !== recordIndex1 + c + 1) {\n                this.parent.ids.splice(idIndex, 1);\n                this.parent.ids.splice(recordIndex1 + c + 1, 0, this.draggedRecord[this.parent.taskFields.id].toString());\n              }\n            }\n            this.parent.setRecordValue('parentItem', this.treeGridData[recordIndex1].parentItem, draggedRec);\n            this.parent.setRecordValue('parentUniqueID', this.treeGridData[recordIndex1].parentUniqueID, draggedRec);\n            this.parent.setRecordValue('level', this.treeGridData[recordIndex1].level, draggedRec);\n            if (draggedRec.hasChildRecords) {\n              var level = 1;\n              this.updateChildRecordLevel(draggedRec, level);\n              this.updateChildRecord(draggedRec, recordIndex1 + c + 1);\n            }\n            if (droppedRec.parentItem) {\n              var record = this.parent.getParentTask(droppedRec.parentItem).childRecords;\n              var childRecords = record;\n              var droppedRecordIndex = childRecords.indexOf(droppedRec) + 1;\n              childRecords.splice(droppedRecordIndex, 0, draggedRec);\n            }\n          }\n          if (this.dropPosition === 'middleSegment') {\n            this.dropMiddle(recordIndex1);\n          }\n          if (!isNullOrUndefined(draggedRec.parentItem && this.updateParentRecords.indexOf(draggedRec.parentItem) !== -1)) {\n            this.updateParentRecords.push(this.parent.getTaskByUniqueID(draggedRec.parentItem.uniqueID));\n          }\n        }\n        if (isNullOrUndefined(draggedRec.parentItem)) {\n          var parentRecords = this.parent.treeGrid.parentData;\n          var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n          if (this.dropPosition === 'bottomSegment') {\n            parentRecords.splice(newParentIndex + 1, 0, draggedRec);\n          }\n        }\n        this.refreshDataSource();\n      }\n      if (this.dropPosition === 'middleSegment') {\n        if (!isNullOrUndefined(droppedRec.ganttProperties.predecessor)) {\n          var len = droppedRec.ganttProperties.predecessor.length;\n          for (var count = len - 1; count >= 0; count--) {\n            if (!isNullOrUndefined(droppedRec.ganttProperties.predecessor)) {\n              var fromRecord = this.parent.getRecordByID(droppedRec.ganttProperties.predecessor[count].from);\n              var toRecord = this.parent.getRecordByID(droppedRec.ganttProperties.predecessor[count].to);\n              var validPredecessor = this.parent.connectorLineEditModule.validateParentPredecessor(fromRecord, toRecord);\n              if (droppedRec.ganttProperties.predecessor && (!validPredecessor || !this.parent.allowParentDependency)) {\n                this.parent.editModule.removePredecessorOnDelete(droppedRec);\n                droppedRec.ganttProperties.predecessor.splice(count, 1);\n                droppedRec.ganttProperties.predecessorsName = null;\n                droppedRec[this.parent.taskFields.dependency] = null;\n                droppedRec.taskData[this.parent.taskFields.dependency] = null;\n              }\n            }\n          }\n        }\n        if (droppedRec.ganttProperties.isMilestone) {\n          this.parent.setRecordValue('isMilestone', false, droppedRec.ganttProperties, true);\n          if (!isNullOrUndefined(droppedRec.taskData[this.parent.taskFields.milestone])) {\n            if (droppedRec.taskData[this.parent.taskFields.milestone] === true) {\n              droppedRec.taskData[this.parent.taskFields.milestone] = false;\n            }\n          }\n        }\n      }\n      for (var k = 0; k < this.updateParentRecords.length; k++) {\n        this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n      }\n      this.parent.editedRecords.forEach(function (record) {\n        _this.isFirstCall = true;\n        _this.parent.predecessorModule.validatePredecessor(record, [], '');\n      });\n      for (var k = 0; k < this.updateParentRecords.length; k++) {\n        this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n      }\n      this.updateParentRecords = [];\n      this.parent.isOnEdit = false;\n    }\n    this.canReset = true;\n    this.refreshRecord(args);\n  };\n  /**\n   * @returns {void} .\n   * @param {RowDropEventArgs} args .\n   * @param {boolean} isDrag .\n   * @private\n   */\n  Edit.prototype.refreshRecord = function (args, isDrag) {\n    var _this = this;\n    if (isRemoteData(this.parent.dataSource)) {\n      var data = this.parent.dataSource;\n      var updatedData = {\n        changedRecords: getTaskData(this.parent.editedRecords, null, null, this.parent)\n      };\n      var queryValue = this.parent.query instanceof Query ? this.parent.query : new Query();\n      var crud = null;\n      var adaptor = data.adaptor;\n      if (!(adaptor instanceof WebApiAdaptor && adaptor instanceof ODataAdaptor) || data.dataSource.batchUrl) {\n        crud = data.saveChanges(updatedData, this.parent.taskFields.id, null, queryValue);\n      } else {\n        var changedRecords = 'changedRecords';\n        crud = data.update(this.parent.taskFields.id, updatedData[changedRecords], null, queryValue);\n      }\n      crud.then(function (e) {\n        return _this.indentSuccess(e, args, isDrag);\n      }).catch(function (e) {\n        return _this.indentFailure(e);\n      });\n    } else {\n      this.indentOutdentSuccess(args, isDrag);\n    }\n  };\n  Edit.prototype.indentSuccess = function (e, args, isDrag) {\n    this.updateEditedFields(e);\n    this.indentOutdentSuccess(args, isDrag);\n  };\n  Edit.prototype.indentFailure = function (e) {\n    this.parent.trigger('actionFailure', {\n      error: e\n    });\n  };\n  Edit.prototype.indentOutdentSuccess = function (args, isDrag) {\n    this.parent.treeGrid.parentData = [];\n    if (this.parent.treeGrid.editModule) {\n      this.parent.treeGrid.editModule['isOnBatch'] = false;\n    }\n    this.parent.treeGrid.refresh();\n    if (this.parent.enableImmutableMode) {\n      this.refreshRecordInImmutableMode(args.data, isDrag);\n      this.parent.chartRowsModule.refreshRecords(this.parent.editedRecords);\n    }\n    if (isDrag) {\n      args.requestType = 'rowDropped';\n    } else {\n      if (this.dropPosition === 'middleSegment') {\n        args.requestType = 'indented';\n      } else if (this.dropPosition === 'bottomSegment') {\n        args.requestType = 'outdented';\n      }\n    }\n    args.modifiedRecords = this.parent.editedRecords;\n    if (this.parent.timezone) {\n      for (var i = 0; i < args.modifiedRecords.length; i++) {\n        updateDates(args.modifiedRecords[i], this.parent);\n      }\n    }\n    if (this.canReset) {\n      this.parent.previousRecords = {};\n    }\n    this.canReset = false;\n    this.parent.trigger('actionComplete', args);\n    if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n      this.parent.hideMaskRow();\n    } else {\n      this.parent.hideSpinner();\n    }\n    if (this.parent.rowDragAndDropModule) {\n      this.parent.rowDragAndDropModule['draggedRecord'] = null;\n    }\n  };\n  Edit.prototype.refreshDataSource = function () {\n    var draggedRec = this.draggedRecord;\n    var droppedRec = this.droppedRecord;\n    var proxy = this.parent;\n    var tempData;\n    var indx;\n    if (this.parent.dataSource instanceof DataManager) {\n      tempData = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      tempData = proxy.dataSource;\n    }\n    if (tempData.length > 0 && !isNullOrUndefined(droppedRec) && !droppedRec.parentItem) {\n      for (var i = 0; i < Object.keys(tempData).length; i++) {\n        if (tempData[i][this.parent.taskFields.child] === droppedRec.taskData[this.parent.taskFields.child]) {\n          indx = i;\n        }\n      }\n      if (this.dropPosition === 'topSegment') {\n        if (!this.parent.taskFields.parentID) {\n          tempData.splice(indx, 0, draggedRec.taskData);\n        }\n      } else if (this.dropPosition === 'bottomSegment') {\n        if (!this.parent.taskFields.parentID) {\n          tempData.splice(indx + 1, 0, draggedRec.taskData);\n        }\n      }\n    } else if (!this.parent.taskFields.parentID && !isNullOrUndefined(droppedRec) && droppedRec.parentItem) {\n      if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n        var rowPos = this.dropPosition === 'topSegment' ? 'Above' : 'Below';\n        this.parent.editModule.addRowSelectedItem = droppedRec;\n        var dragRecord = [];\n        if (!Array.isArray(draggedRec)) {\n          dragRecord[0] = draggedRec;\n        } else {\n          dragRecord = draggedRec;\n        }\n        this.parent.editModule.updateRealDataSource(dragRecord, rowPos);\n        delete this.parent.editModule.addRowSelectedItem;\n      }\n    }\n    if (this.parent.taskFields.parentID) {\n      if (draggedRec.parentItem) {\n        if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n          draggedRec[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.parentID];\n          draggedRec.taskData[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.parentID];\n          draggedRec.ganttProperties['parentId'] = droppedRec[this.parent.taskFields.parentID];\n        } else {\n          draggedRec[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.id];\n          draggedRec.taskData[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.id];\n          draggedRec.ganttProperties['parentId'] = droppedRec[this.parent.taskFields.id];\n        }\n      } else {\n        draggedRec[this.parent.taskFields.parentID] = null;\n        draggedRec.taskData[this.parent.taskFields.parentID] = null;\n        draggedRec.ganttProperties['parentId'] = null;\n      }\n    }\n  };\n  Edit.prototype.deleteDragRow = function () {\n    if (this.parent.dataSource instanceof DataManager) {\n      this.ganttData = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      this.ganttData = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) : this.parent.dataSource;\n    }\n    this.treeGridData = isCountRequired(this.parent) ? getValue('result', this.parent.treeGrid.dataSource) : this.parent.treeGrid.dataSource;\n    var delRow = this.parent.getTaskByUniqueID(this.draggedRecord.uniqueID);\n    this.removeRecords(delRow);\n  };\n  Edit.prototype.updateIndentedChildRecords = function (indentedRecord) {\n    var createParentItem = {\n      uniqueID: indentedRecord.uniqueID,\n      expanded: indentedRecord.expanded,\n      level: indentedRecord.level,\n      index: indentedRecord.index,\n      taskId: indentedRecord.ganttProperties.rowUniqueID\n    };\n    for (var i = 0; i < indentedRecord.childRecords.length; i++) {\n      this.parent.setRecordValue('parentItem', createParentItem, indentedRecord.childRecords[i]);\n      this.parent.setRecordValue('parentUniqueID', indentedRecord.uniqueID, indentedRecord.childRecords[i]);\n    }\n    if (indentedRecord.hasChildRecords) {\n      indentedRecord = indentedRecord.childRecords;\n      for (var j = 0; j < indentedRecord['length']; j++) {\n        this.updateIndentedChildRecords(indentedRecord[j]);\n      }\n    }\n  };\n  Edit.prototype.dropMiddle = function (recordIndex1) {\n    var obj = this.parent;\n    var childRec;\n    var childRecordsLength;\n    if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']['modifiedRecord'] && this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].position !== 'child') {\n      if (this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].position === 'above') {\n        childRecordsLength = this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].id.toString());\n      } else if (this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].position === 'below') {\n        childRecordsLength = this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].id.toString()) + 1;\n      }\n    } else {\n      childRec = this.parent.editModule.getChildCount(this.droppedRecord, 0);\n      childRecordsLength = isNullOrUndefined(childRec) || childRec === 0 ? recordIndex1 + 1 : childRec + recordIndex1 + 1;\n    }\n    if (this.dropPosition === 'middleSegment') {\n      if (obj.taskFields.parentID && this.ganttData.length > 0) {\n        this.ganttData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n      }\n      this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n      this.parent.ids.splice(childRecordsLength, 0, this.draggedRecord[this.parent.taskFields.id].toString());\n      this.recordLevel();\n      if (this.draggedRecord.hasChildRecords) {\n        this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n        if (this.parent.enableImmutableMode) {\n          var indentedRecord = this.draggedRecord;\n          this.updateIndentedChildRecords(indentedRecord);\n        }\n      }\n      if (isNullOrUndefined(this.draggedRecord.parentItem && this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n        this.updateParentRecords.push(this.draggedRecord.parentItem);\n      }\n    }\n  };\n  Edit.prototype.updateChildRecordLevel = function (record, levl) {\n    var length = 0;\n    var currentRec;\n    levl++;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    length = record.childRecords.length;\n    for (var j = 0; j < length; j++) {\n      currentRec = record.childRecords[j];\n      var parentData = void 0;\n      if (record.parentItem) {\n        var id = 'uniqueIDCollection';\n        parentData = this.parent.treeGrid[id][record.parentItem.uniqueID];\n      }\n      currentRec.level = record.parentItem ? parentData.level + levl : record.level + 1;\n      if (currentRec.hasChildRecords) {\n        levl--;\n        levl = this.updateChildRecordLevel(currentRec, levl);\n      }\n    }\n    return levl;\n  };\n  /* eslint-disable-next-line */\n  Edit.prototype.updateChildRecord = function (record, count, expanded) {\n    var currentRec;\n    var obj = this.parent;\n    var length = 0;\n    if (!record.hasChildRecords) {\n      return 0;\n    }\n    length = record.childRecords.length;\n    for (var i = 0; i < length; i++) {\n      currentRec = record.childRecords[i];\n      count++;\n      obj.flatData.splice(count, 0, currentRec);\n      this.parent.ids.splice(count, 0, currentRec.ganttProperties.rowUniqueID.toString());\n      if (obj.taskFields.parentID && this.ganttData.length > 0) {\n        this.ganttData.splice(count, 0, currentRec.taskData);\n      }\n      if (currentRec.hasChildRecords) {\n        count = this.updateChildRecord(currentRec, count);\n      }\n    }\n    return count;\n  };\n  Edit.prototype.removeRecords = function (record) {\n    var obj = this.parent;\n    var dataSource;\n    if (this.parent.dataSource instanceof DataManager) {\n      dataSource = getValue('dataOperation.dataArray', this.parent);\n    } else {\n      dataSource = this.parent.dataSource;\n    }\n    var delRow = record;\n    if (delRow) {\n      var flatParent = this.parent.getParentTask(delRow.parentItem);\n      if (delRow.parentItem) {\n        var childRecords = flatParent ? flatParent.childRecords : [];\n        var childIndex = 0;\n        if (childRecords && childRecords.length > 0) {\n          childIndex = childRecords.indexOf(delRow);\n          flatParent.childRecords.splice(childIndex, 1);\n          if (!this.parent.taskFields.parentID) {\n            flatParent.taskData[this.parent.taskFields.child].splice(childIndex, 1);\n          }\n          // collection for updating parent record\n          this.updateParentRecords.push(flatParent);\n        }\n      }\n      if (obj.taskFields.parentID) {\n        if (delRow.hasChildRecords && delRow.childRecords.length > 0) {\n          this.removeChildItem(delRow);\n        }\n        var indx = void 0;\n        var ganttData = dataSource.length > 0 ? dataSource : this.parent.currentViewData;\n        for (var i = 0; i < ganttData.length; i++) {\n          if (ganttData[i][this.parent.taskFields.id] === delRow.taskData[this.parent.taskFields.id]) {\n            indx = i;\n          }\n        }\n        if (indx !== -1) {\n          if (dataSource.length > 0) {\n            dataSource.splice(indx, 1);\n          }\n          var gridIndx = void 0;\n          for (var i = 0; i < this.treeGridData.length; i++) {\n            if (this.treeGridData[i][this.parent.taskFields.id] === delRow.taskData[this.parent.taskFields.id]) {\n              gridIndx = i;\n            }\n          }\n          this.treeGridData.splice(gridIndx, 1);\n          this.parent.ids.splice(gridIndx, 1);\n          if (this.parent.treeGrid.parentData.indexOf(delRow) !== -1) {\n            this.parent.treeGrid.parentData.splice(this.parent.treeGrid.parentData.indexOf(delRow), 1);\n          }\n        }\n      }\n      var recordIdx = this.treeGridData.indexOf(delRow);\n      if (!obj.taskFields.parentID) {\n        var deletedRecordCount = this.getChildCount(delRow, 0);\n        this.treeGridData.splice(recordIdx, deletedRecordCount + 1);\n        this.parent.ids.splice(recordIdx, deletedRecordCount + 1);\n        var parentIndex = this.ganttData.indexOf(delRow.taskData);\n        if (parentIndex !== -1) {\n          this.ganttData.splice(parentIndex, 1);\n          this.parent.treeGrid.parentData.splice(parentIndex, 1);\n        }\n      }\n      if (delRow.parentItem && flatParent && flatParent.childRecords && !flatParent.childRecords.length) {\n        this.parent.setRecordValue('expanded', false, flatParent);\n        this.parent.setRecordValue('hasChildRecords', false, flatParent);\n      }\n    }\n  };\n  Edit.prototype.removeChildItem = function (record) {\n    var currentRec;\n    var indx;\n    for (var i = 0; i < record.childRecords.length; i++) {\n      currentRec = record.childRecords[i];\n      var data = void 0;\n      if (this.parent.dataSource instanceof DataManager) {\n        data = getValue('dataOperation.dataArray', this.parent);\n      } else {\n        data = this.parent.dataSource;\n      }\n      for (var j = 0; j < data.length; j++) {\n        if (data[j][this.parent.taskFields.id] === currentRec.taskData[this.parent.taskFields.id]) {\n          indx = j;\n        }\n      }\n      if (indx !== -1) {\n        if (data.length > 0) {\n          data.splice(indx, 1);\n        }\n        var gridIndx = void 0;\n        for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n          if (this.treeGridData[i_2][this.parent.taskFields.id] === currentRec.taskData[this.parent.taskFields.id]) {\n            gridIndx = i_2;\n          }\n        }\n        this.treeGridData.splice(gridIndx, 1);\n        this.parent.ids.splice(gridIndx, 1);\n      }\n      if (currentRec.hasChildRecords) {\n        this.removeChildItem(currentRec);\n      }\n    }\n  };\n  Edit.prototype.recordLevel = function () {\n    var obj = this.parent;\n    var draggedRec = this.draggedRecord;\n    var droppedRec = this.droppedRecord;\n    var childItem = obj.taskFields.child;\n    if (!droppedRec.hasChildRecords) {\n      droppedRec.hasChildRecords = true;\n      if (!droppedRec.childRecords.length) {\n        droppedRec.childRecords = [];\n        if (!obj.taskFields.parentID && isNullOrUndefined(droppedRec.taskData[childItem])) {\n          droppedRec.taskData[childItem] = [];\n        }\n      }\n    }\n    if (this.dropPosition === 'middleSegment') {\n      var parentItem = extend({}, droppedRec);\n      delete parentItem.childRecords;\n      var createParentItem = {\n        uniqueID: parentItem.uniqueID,\n        expanded: parentItem.expanded,\n        level: parentItem.level,\n        index: parentItem.index,\n        taskId: parentItem.ganttProperties.rowUniqueID\n      };\n      this.parent.setRecordValue('parentItem', createParentItem, draggedRec);\n      this.parent.setRecordValue('parentUniqueID', droppedRec.uniqueID, draggedRec);\n      droppedRec.childRecords.splice(droppedRec.childRecords.length, 0, draggedRec);\n      if (!isNullOrUndefined(draggedRec) && !obj.taskFields.parentID && !isNullOrUndefined(droppedRec.taskData[childItem])) {\n        droppedRec.taskData[obj.taskFields.child].splice(droppedRec.childRecords.length, 0, draggedRec.taskData);\n      }\n      if (!isNullOrUndefined(droppedRec.ganttProperties.segments) && droppedRec.ganttProperties.segments.length > 0) {\n        droppedRec.ganttProperties.segments = null;\n        droppedRec.taskData[obj.taskFields.segments] = null;\n      }\n      if (!draggedRec.hasChildRecords) {\n        draggedRec.level = droppedRec.level + 1;\n      } else {\n        var level = 1;\n        draggedRec.level = droppedRec.level + 1;\n        this.updateChildRecordLevel(draggedRec, level);\n      }\n      droppedRec.expanded = true;\n    }\n  };\n  return Edit;\n}();\nexport { Edit };","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","isNullOrUndefined","isUndefined","extend","setValue","getValue","deleteObject","createElement","DataManager","Query","ODataAdaptor","WebApiAdaptor","ODataV4Adaptor","getUid","getSwapKey","isScheduledTask","getTaskData","isRemoteData","getIndex","isCountRequired","updateDates","CellEdit","TaskbarEdit","DialogEdit","Dialog","MultiSelect","CheckBoxSelection","DropDownList","ConnectorLineEdit","TreeGrid","Edit","TreeGridEdit","parent","isFromDeleteMethod","targetedRecords","isNewRecordAdded","isValidatedEditedRecord","createArray","deletedRecord","canReset","updateParentRecords","isaddtoBottom","confirmDialog","taskbarMoved","predecessorUpdated","isBreakLoop","deletedTaskDetails","predecessorModule","validatedChildItems","editSettings","allowEditing","mode","cellEditModule","taskFields","dependency","connectorLineEditModule","allowAdding","dialogModule","allowTaskbarEditing","taskbarEditModule","allowDeleting","id","element","appendChild","renderDeleteConfirmDialog","treeGrid","recordDoubleClick","bind","showDeleteConfirmDialog","allowNextRowEdit","Inject","updateDefaultColumnEditors","getModuleName","customEditorColumns","progress","resourceInfo","type","column","getColumnByField","parseInt","toString","treeGridModule","treeGridColumns","field","updateIDColumnEditParams","edit","updateProgessColumnEditParams","updateResourceColumnEditor","updateTaskTypeColumnEditor","editParam","min","decimals","enableRtl","validateDecimalOnType","format","showSpinButton","updateEditParams","max","params","ganttColumn","ganttColumns","editType","getResourceEditor","_this","resourceSettings","resourceFields","editObject","editor","write","args","currentEditRow","dataSource","resources","fields","text","name","value","showDropDownIcon","popupHeight","delimiterChar","getResourceIds","rowData","appendTo","read","ej2_instances","resourcesName","j","push","join","destroy","getTaskTypeEditor","types","ganttProperties","key","reUpdateEditModules","editModule","undefined","isDestroyed","ganttData","row","rowIndex","currentViewData","openEditDialog","ganttChartModule","updateRecordByID","data","enableImmutableMode","getElementsByClassName","endEdit","readOnly","tasks","viewType","flatData","getTaskIds","indexOf","getRecordByID","milestone","undoRedoModule","details","contextMenuModule","item","isOnEdit","validateUpdateValues","predecessor","_loop_1","isValid","filter","pred","from","to","offset","record","ids","changeValue","this_1","k","splice","state_1","taskId","parentRec","duration","dataOperation","updateWorkWithDuration","updateResourceRelatedFields","dateValidationModule","calculateEndDate","keys","startDate","endDate","calculateScheduledValues","taskData","updateWidthLeft","predecessorsName","updatePredecessor","action","initiateUpdateAction","isFromDialog","ganttObj","ganttPropByMapping","columnMapping","scheduleFieldNames","isScheduleValueUpdated","_i","_b","allowUnscheduledTasks","updateDurationValue","isMilestone","setRecordValue","updateMappingData","tempDate","Date","Number","isNaN","resourceData","setResourceInfo","JSON","stringify","isResourceUpdate","previousResource","slice","notes","durationUnit","expandState","baselineStartDate","baselineEndDate","segments","cssClass","columnByField","getDateFromFormat","ganttPropKey","ganttProp","durationValue","totDuration","sdate","edate","getEndDate","seg","segment","parseFloat","checkBaselineStartDate","dayEndTime","getHours","setTime","getTime","toLocaleDateString","checkBaselineEndDate","calculateBaselineLeft","calculateBaselineWidth","setSegmentsInfo","indicators","work","customColumns","manual","updateTaskScheduleModes","validateScheduleValues","currentData","taskType","isEffectDriven","isAutoSchedule","updateDurationWithWork","updateUnitWithWork","fieldNames","validateScheduleByTwoValues","validateScheduleValuesByCurrentField","isUnscheduledTask","calculateDuration","isTaskbarMoved","isMoved","prevData","previousRecords","uniqueID","prevStart","prevEnd","prevDuration","prevDurationUnit","isPredecessorUpdated","isCheckPredecessor","isValidatePredecessor","isInPredecessorValidation","getValidPredecessor","updateGanttProperties","updateData","skipProperty","forEach","property","parentData","childRecordIndex","parentItem","childRecords","isConnectorLineUpdate","addRemovePredecessor","validateObject","autoCalculateDateScheduling","isLoad","loadChildOnDemand","hasChildMapping","validateTypes","newArgs","validateTaskEvent","validateMode","preserveLinkWithEditing","removeLink","respectLink","openValidationDialog","validatePredecessor","applyPredecessorOption","updateEditedTask","editedEventArgs","resetValidateArgs","currentEditedArgs","cancel","requestType","dialogValidateMode","editEventArgs","actionBeginTask","validateChildPredecessors","child","editedTaskBarItem","isFirstCall","ganttRecord","editedRecord","updateParentChildRecord","isValidatedParentTaskID","isMileStoneEdited","isChildRecordValidated","allowParentDependency","hasChildRecords","updateParentItemOnEditing","updateParentItems","updateOffsetOnTaskbarEdit","initiateSaveAction","childRecord","taskMode","isResourceCellEdited","currentValue","autoStartDate","autoEndDate","calculateWidth","calculateLeft","getProgressWidth","width","calculateAutoDuration","updateAutoWidthLeft","checkStartDate","updateParentProgress","cloneParent","parentProgress","getParentTask","childCount","totalProgress","milesStoneCount","taskCount","totalDuration","progressValues","getParentProgress","Math","round","autoWidth","floor","updateTaskData","revertCellEdit","reUpdatePreviousRecords","resetEditProperties","isRefreshChart","isRefreshGrid","collection","uniqueId","prevTask","originalData","getTaskByUniqueID","copyTaskData","chartRowsModule","refreshRow","dataId","rowUniqueID","grid","setRowData","getRowObjectFromUID","getDataRows","getAttribute","existing","newValue","updateScheduleDatesOnEditing","eventArgs","toolbarModule","enableItems","controlId","modifiedRecords","editedRecords","target","modifiedTaskData","currentBaselineStart","currentBaselineEnd","currentProgress","unModifiedData","parse","trigger","eventArg","ganttProps","getDuration","updateSegment","loadingIndicator","indicatorType","showMaskRow","showSpinner","refreshRecords","updatedData","changedRecords","query","crud","dataAdaptor","adaptor","batchUrl","saveChanges","update","then","e","dmSuccess","catch","dmFailure","saveSuccess","enableVirtualization","enableTimelineVirtualization","previousFlatData","reRenderConnectorLines","updateEditedFields","eLength","rec","_aLength","_a","updateEditedRecordFields","parentID","deleteRecords","d","isDelete","error","updateSharedTask","sharedTaskUniqueIds","editRecord","updateResourceName","timelineSettings","updateTimescaleView","tempArray","timelineModule","updateTimeLineOnEditing","updateResoures","isTreeGridRefresh","criticalModule","criticalPathModule","enableCriticalPath","criticalPathCollection","showCriticalPath","criticalConnectorLine","detailPredecessorCollection","predecessorCollectionTaskIds","querySelector","validate","isCellEdit","allowTaskbarOverlap","showOverAllocation","contentHeight","children","chartBodyContent","style","height","renderRangeContainer","updatedConnectorLineCollection","connectorLineIds","refreshEditedRecordConnectorLine","dependencyCancel","updateRowIndex","taskBarEditAction","endEditAction","allowTaskbarDragAndDrop","rowDragAndDropModule","hideMaskRow","hideSpinner","createConnectorLinesCollection","refresh","prevResource","currentResource","updateRecord","flatRecords","currentLength","previousLength","index","recordIndex","resourceID","prevResourceID","parentRecord","addNewRecord","record1","prevLength","taskID","removeChildRecord","parentTask","taskName","localeObj","getConstant","checkWithUnassignedTask","taskIds","unassignedTasks","unassignTaskObj","beforeEditStatus","cAddedRecord","createRecord","addRecordAsBottom","source","parentUniqueID","recordIndex1","level","updateTreeGridUniqueID","replace","getCloneParent","parentUniqId","addRecordAsChild","gObj","json","deletedRow","flatParentData","deleteChildRecords","childIndex","isOnDelete","uniqueIDIndex","deleteRecordIDs","removeFromDataSource","flatRecordIndex","idx","deletedRecordCount","getChildCount","droppedRecord","draggedRecord","childRecordsLength","spliceIndex","deletedIndexes","toIndex","position","draggedParent","addRowIndex","addRowPosition","dropChildRecord","recordId","dialog","dialogObj","hide","dialogClose","initiateEditAction","saveFailed","isModal","visible","content","buttons","click","confirmDeleteOkButton","buttonModel","isPrimary","closeConfirmDialog","animationSettings","effect","deleteSelectedItems","focussedElement","focus","startDeleteAction","show","focusingElement","deleteResourceRecords","selectedRecords","_loop_2","this_2","resourceParent","deleteRow","add","totalRecords","selectionSettings","selectionModule","getSelectedRecords","getCellSelectedRecords","deleteRecord","taskDetail","variableType","Array","isArray","valueOf","updateTargetedRecords","taskDetailArray","rowItems","addDeleteRecord","records","_loop_3","this_3","deleteItems","id_1","reduce","filteredRecord","canDeletePredecessor","removePredecessorOnDelete","allowSelection","clearSelection","delereArgs","deletedRecordCollection","updatedRecordCollection","initiateDeleteAction","refreshToolbarItems","predecessors","toRecord","connectorLineModule","toRecordPredcessor","toId","updatePredecessorValues","fromRecord","fromRecordPredcessor","fromId","predcessorArray","predecessorString","getPredecessorStringValue","updateTaskId","currentId","newId","cId","nId","cIndex","nIndex","thisRecord","count","currentGanttRecord","updatePredecessorOnUpdateId","pre","c","removeData","dataCollection","data_1","timezone","modifiedRecord","updatedData_1","deletedRecords","query_1","deleteSuccess","deleteCrud","remove","_loop_4","some","updateCrud","staticSelectedRowIndex","selectedRowIndex","isCollapseAll","currentSelection","prevRecordIndex","currentIndex","flatIndex","treeGridParentIndex","tempData","dataIndex","resourceNames","isAdded","refreshRecordInImmutableMode","updateUnAssignedResources_1","_loop_5","unassignedTask","this_4","isDuplicate","getNewTaskId","maxId","newTaskId","prepareNewlyAddedData","obj","rowPosition","taskModel","newTaskIDmd","projectStartDate","setDate","getDate","getFormatedDate","getDateFormat","updateNewlyAddedDataBeforeAjax","pIndex","currentAction","backUpAndPushNewlyAddedRecord","addRowSelectedItem","newRecord","ensurePredecessorCollectionHelper","updatePredecessorHelper","validatePredecessorDates","currentRecord","getVisibleChildRecordCount","updatePredecessorOnIndentOutdent","len","parentRecordTaskData","predecessorCollection","predecessorIndex","updatedPredecessor","validPredecessor","validateParentPredecessor","predecessorCollections","prdcList","split","str","ind","temppredecessorCollection","currentItemIndex","updatedCollectionIndex","recordCollectionUpdate","dataChildCount","expanded","enableMultiTaskbar","expandByID","newlyAddedRecordBackup","constructTaskAddedEventArgs","event","newTaskData","addSuccess","dragged","_loop_6","this_5","treeIndex","allowRowDragAndDrop","uniqueTaskID","originalIndex","findIndex","getRows","renderModule","cellRender","cell","cells","treeColumnIndex","getColumns","RowModifier","rowHeight","updateRealDataSource","addedRecord","addDataInRealDataSource","i_1","updateClientDataFromServer","serverReturnedValue","addedRecords","addNewUndoCollection","tempArray_1","addedRec","_loop_7","this_6","addRecord","tempTaskID","isDynamicData","isOnAdded","cAddedRecord_1","validateTaskPosition","addData","addIndex","data_2","updatedData_2","prevID","idsIndex","updateNewRecord","removeAddedRecord","_resetProperties","insertCrud","insert","data_3","canDelete","isPresent","_loop_8","id_2","indexes","a","refreshNewlyAddedRecord","createNewRecord","tempRecord","taskSettingsFields","fieldName","getMinimumStartDate","selectedRowIndexes","getSelectedRowCellIndexes","updatedRecords","newRowPosition","AddRecord","rowCount","getRowByIndex","objCollection","tabIndex","isAddNewResource","isEdit","flatRecordsIndex","currentViewDataIndex","parentIndex","getPrevRecordIndex","prevRecord","getSelectedRowIndexes","selectedRecord","getRootParent","prevIndex","indent","isSelected","dropIndex","indentOutdentRow","outdent","thisParent","fromIndexes","pos","dropPosition","isByMethod_1","args_1","actionArgs","actionArg","reArrangeRows","isByMethod","draggedRec","dragRecords","droppedRec","dLength","deleteDragRow","treeGridData","idIndex","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","parentRecords","newParentIndex","refreshDataSource","refreshRecord","isDrag","queryValue","indentSuccess","indentFailure","indentOutdentSuccess","proxy","indx","rowPos","dragRecord","delRow","removeRecords","updateIndentedChildRecords","indentedRecord","createParentItem","childRec","recordLevel","levl","currentRec","flatParent","removeChildItem","gridIndx","recordIdx","i_2","childItem"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/actions/edit.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { isNullOrUndefined, isUndefined, extend, setValue, getValue, deleteObject, createElement } from '@syncfusion/ej2-base';\nimport { DataManager, Query, ODataAdaptor, WebApiAdaptor, ODataV4Adaptor } from '@syncfusion/ej2-data';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { getSwapKey, isScheduledTask, getTaskData, isRemoteData, getIndex, isCountRequired, updateDates } from '../base/utils';\nimport { CellEdit } from './cell-edit';\nimport { TaskbarEdit } from './taskbar-edit';\nimport { DialogEdit } from './dialog-edit';\nimport { Dialog } from '@syncfusion/ej2-popups';\nimport { MultiSelect, CheckBoxSelection, DropDownList } from '@syncfusion/ej2-dropdowns';\nimport { ConnectorLineEdit } from './connector-line-edit';\nimport { TreeGrid, Edit as TreeGridEdit } from '@syncfusion/ej2-treegrid';\n/**\n * The Edit Module is used to handle editing actions.\n *\n */\nvar Edit = /** @class */ (function () {\n    function Edit(parent) {\n        this.isFromDeleteMethod = false;\n        this.targetedRecords = [];\n        this.isNewRecordAdded = false;\n        this.isValidatedEditedRecord = false;\n        this.createArray = true;\n        this.deletedRecord = [];\n        this.canReset = false;\n        /** @hidden */\n        this.updateParentRecords = [];\n        /** @hidden */\n        this.isaddtoBottom = false;\n        this.confirmDialog = null;\n        this.taskbarMoved = false;\n        this.predecessorUpdated = false;\n        this.isBreakLoop = false;\n        /**\n         * @private\n         */\n        this.deletedTaskDetails = [];\n        this.parent = parent;\n        this.parent.predecessorModule.validatedChildItems = [];\n        if (this.parent.editSettings.allowEditing && this.parent.editSettings.mode === 'Auto') {\n            this.cellEditModule = new CellEdit(this.parent);\n        }\n        if (this.parent.taskFields.dependency) {\n            this.parent.connectorLineEditModule = new ConnectorLineEdit(this.parent);\n        }\n        if (this.parent.editSettings.allowAdding || (this.parent.editSettings.allowEditing &&\n            (this.parent.editSettings.mode === 'Dialog' || this.parent.editSettings.mode === 'Auto'))) {\n            this.dialogModule = new DialogEdit(this.parent);\n        }\n        if (this.parent.editSettings.allowTaskbarEditing) {\n            this.taskbarEditModule = new TaskbarEdit(this.parent);\n        }\n        if (this.parent.editSettings.allowDeleting) {\n            var confirmDialog = createElement('div', {\n                id: this.parent.element.id + '_deleteConfirmDialog'\n            });\n            this.parent.element.appendChild(confirmDialog);\n            this.renderDeleteConfirmDialog();\n        }\n        this.parent.treeGrid.recordDoubleClick = this.recordDoubleClick.bind(this);\n        this.parent.treeGrid.editSettings.allowAdding = this.parent.editSettings.allowAdding;\n        this.parent.treeGrid.editSettings.allowDeleting = this.parent.editSettings.allowDeleting;\n        this.parent.treeGrid.editSettings.showDeleteConfirmDialog = this.parent.editSettings.showDeleteConfirmDialog;\n        this.parent.treeGrid.editSettings.allowNextRowEdit = this.parent.editSettings.allowNextRowEdit;\n        if (this.parent.editSettings.mode === 'Dialog') {\n            TreeGrid.Inject(TreeGridEdit);\n        }\n        this.updateDefaultColumnEditors();\n    }\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * Method to update default edit params and editors for Gantt\n     *\n     * @returns {void} .\n     */\n    Edit.prototype.updateDefaultColumnEditors = function () {\n        var customEditorColumns = [this.parent.taskFields.id, this.parent.taskFields.progress, this.parent.taskFields.resourceInfo,\n            this.parent.taskFields.type, 'taskType'];\n        for (var i = 0; i < customEditorColumns.length; i++) {\n            if (!isNullOrUndefined(customEditorColumns[i]) && customEditorColumns[i].length > 0) {\n                var column = this.parent.getColumnByField(customEditorColumns[parseInt(i.toString(), 10)], this.parent.treeGridModule.treeGridColumns);\n                if (column) {\n                    if (column.field === this.parent.taskFields.id) {\n                        this.updateIDColumnEditParams(column);\n                    }\n                    else if (column.field === this.parent.taskFields.progress && isNullOrUndefined(column.edit)) {\n                        this.updateProgessColumnEditParams(column);\n                    }\n                    else if (column.field === this.parent.taskFields.resourceInfo) {\n                        this.updateResourceColumnEditor(column);\n                    }\n                    else if (column.field === this.parent.taskFields.type || column.field === 'taskType') {\n                        this.updateTaskTypeColumnEditor(column);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Method to update editors for id column in Gantt\n     *\n     * @param {ColumnModel} column .\n     * @returns {void} .\n     */\n    Edit.prototype.updateIDColumnEditParams = function (column) {\n        var editParam = {\n            min: 0,\n            decimals: 0,\n            enableRtl: this.parent.enableRtl,\n            validateDecimalOnType: true,\n            format: 'n0',\n            showSpinButton: false\n        };\n        this.updateEditParams(column, editParam);\n    };\n    /**\n     * Method to update edit params of default progress column\n     *\n     * @param {ColumnModel} column .\n     * @returns {void} .\n     */\n    Edit.prototype.updateProgessColumnEditParams = function (column) {\n        var editParam = {\n            min: 0,\n            enableRtl: this.parent.enableRtl,\n            decimals: 0,\n            validateDecimalOnType: true,\n            max: 100,\n            format: 'n0'\n        };\n        this.updateEditParams(column, editParam);\n    };\n    /**\n     * Assign edit params for id and progress columns\n     *\n     * @param {ColumnModel} column .\n     * @param {object} editParam .\n     * @returns {void} .\n     */\n    Edit.prototype.updateEditParams = function (column, editParam) {\n        if (isNullOrUndefined(column.edit)) {\n            column.edit = {};\n            column.edit.params = {};\n        }\n        else if (isNullOrUndefined(column.edit.params)) {\n            column.edit.params = {};\n        }\n        extend(editParam, column.edit.params);\n        column.edit.params = editParam;\n        var ganttColumn = this.parent.getColumnByField(column.field, this.parent.ganttColumns);\n        ganttColumn.edit = column.edit;\n    };\n    /**\n     * Method to update resource column editor for default resource column\n     *\n     * @param {ColumnModel} column .\n     * @returns {void} .\n     */\n    Edit.prototype.updateResourceColumnEditor = function (column) {\n        if (this.parent.editSettings.allowEditing && isNullOrUndefined(column.edit) && this.parent.editSettings.mode === 'Auto') {\n            column.editType = 'dropdownedit';\n            column.edit = this.getResourceEditor();\n            var ganttColumn = this.parent.getColumnByField(column.field, this.parent.ganttColumns);\n            ganttColumn.editType = 'dropdownedit';\n            ganttColumn.edit = column.edit;\n        }\n    };\n    /**\n     * Method to create resource custom editor\n     *\n     * @returns {IEditCell} .\n     */\n    Edit.prototype.getResourceEditor = function () {\n        var _this = this;\n        var resourceSettings = this.parent.resourceFields;\n        var editObject = {};\n        var editor;\n        MultiSelect.Inject(CheckBoxSelection);\n        editObject.write = function (args) {\n            _this.parent.treeGridModule.currentEditRow = {};\n            editor = new MultiSelect({\n                dataSource: new DataManager(_this.parent.resources),\n                fields: { text: resourceSettings.name, value: resourceSettings.id },\n                enableRtl: _this.parent.enableRtl,\n                mode: 'CheckBox',\n                showDropDownIcon: true,\n                popupHeight: '350px',\n                delimiterChar: ',',\n                value: _this.parent.treeGridModule.getResourceIds(args.rowData)\n            });\n            editor.appendTo(args.element);\n        };\n        editObject.read = function (element) {\n            var value = element.ej2_instances[0].value;\n            var resourcesName = [];\n            if (isNullOrUndefined(value)) {\n                value = [];\n            }\n            for (var i = 0; i < value.length; i++) {\n                for (var j = 0; j < _this.parent.resources.length; j++) {\n                    if (_this.parent.resources[j][resourceSettings.id] === value[i]) {\n                        resourcesName.push(_this.parent.resources[j][resourceSettings.name]);\n                        break;\n                    }\n                }\n            }\n            _this.parent.treeGridModule.currentEditRow[_this.parent.taskFields.resourceInfo] = value;\n            return resourcesName.join(',');\n        };\n        editObject.destroy = function () {\n            if (editor) {\n                editor.destroy();\n            }\n        };\n        return editObject;\n    };\n    /**\n     * Method to update task type column editor for task type\n     *\n     * @param {ColumnModel} column .\n     * @returns {void} .\n     */\n    Edit.prototype.updateTaskTypeColumnEditor = function (column) {\n        if (this.parent.editSettings.allowEditing && isNullOrUndefined(column.edit) && this.parent.editSettings.mode === 'Auto') {\n            column.editType = 'dropdownedit';\n            column.edit = this.getTaskTypeEditor();\n            var ganttColumn = this.parent.getColumnByField(column.field, this.parent.ganttColumns);\n            ganttColumn.editType = 'dropdownedit';\n            ganttColumn.edit = column.edit;\n        }\n    };\n    /**\n     * Method to create task type custom editor\n     *\n     * @returns {IEditCell} .\n     */\n    Edit.prototype.getTaskTypeEditor = function () {\n        var _this = this;\n        var editObject = {};\n        var editor;\n        var types = [{ 'ID': 1, 'Value': 'FixedUnit' }, { 'ID': 2, 'Value': 'FixedWork' }, { 'ID': 3, 'Value': 'FixedDuration' }];\n        editObject.write = function (args) {\n            _this.parent.treeGridModule.currentEditRow = {};\n            editor = new DropDownList({\n                dataSource: new DataManager(types),\n                enableRtl: _this.parent.enableRtl,\n                fields: { value: 'Value' },\n                popupHeight: '350px',\n                value: getValue('taskType', args.rowData.ganttProperties)\n            });\n            editor.appendTo(args.element);\n        };\n        editObject.read = function (element) {\n            var value = element.ej2_instances[0].value;\n            var key = _this.parent.taskFields.type || 'taskType';\n            _this.parent.treeGridModule.currentEditRow[key] = value;\n            return value;\n        };\n        editObject.destroy = function () {\n            if (editor) {\n                editor.destroy();\n            }\n        };\n        return editObject;\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.reUpdateEditModules = function () {\n        var editSettings = this.parent.editSettings;\n        if (editSettings.allowEditing) {\n            if (this.parent.editModule.cellEditModule && editSettings.mode === 'Dialog') {\n                this.cellEditModule.destroy();\n                this.parent.treeGrid.recordDoubleClick = this.recordDoubleClick.bind(this);\n            }\n            else if (isNullOrUndefined(this.parent.editModule.cellEditModule) && editSettings.mode === 'Auto') {\n                this.cellEditModule = new CellEdit(this.parent);\n            }\n            if (this.parent.editModule.dialogModule && editSettings.mode === 'Auto') {\n                this.parent.treeGrid.recordDoubleClick = undefined;\n            }\n            else if (isNullOrUndefined(this.parent.editModule.dialogModule)) {\n                this.dialogModule = new DialogEdit(this.parent);\n            }\n        }\n        else {\n            if (this.cellEditModule) {\n                this.cellEditModule.destroy();\n            }\n            if (this.dialogModule) {\n                this.dialogModule.destroy();\n            }\n        }\n        if (editSettings.allowDeleting && editSettings.showDeleteConfirmDialog) {\n            if (isNullOrUndefined(this.confirmDialog)) {\n                var confirmDialog = createElement('div', {\n                    id: this.parent.element.id + '_deleteConfirmDialog'\n                });\n                this.parent.element.appendChild(confirmDialog);\n                this.renderDeleteConfirmDialog();\n            }\n        }\n        else if (!editSettings.allowDeleting || !editSettings.showDeleteConfirmDialog) {\n            if (this.confirmDialog && !this.confirmDialog.isDestroyed) {\n                this.confirmDialog.destroy();\n            }\n        }\n        if (editSettings.allowTaskbarEditing) {\n            if (isNullOrUndefined(this.parent.editModule.taskbarEditModule)) {\n                this.taskbarEditModule = new TaskbarEdit(this.parent);\n            }\n        }\n        else {\n            if (this.taskbarEditModule) {\n                this.taskbarEditModule.destroy();\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        if (this.parent.editSettings.allowEditing && this.parent.editSettings.mode === 'Dialog') {\n            var ganttData = void 0;\n            if (args.row) {\n                var rowIndex = getValue('rowIndex', args.row);\n                ganttData = this.parent.currentViewData[rowIndex];\n            }\n            if (!isNullOrUndefined(ganttData)) {\n                this.dialogModule.openEditDialog(ganttData);\n            }\n        }\n        this.parent.ganttChartModule.recordDoubleClick(args);\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.destroy = function () {\n        if (this.cellEditModule) {\n            this.cellEditModule.destroy();\n        }\n        if (this.taskbarEditModule) {\n            this.taskbarEditModule.destroy();\n        }\n        if (this.dialogModule) {\n            this.dialogModule.destroy();\n        }\n        if (this.confirmDialog && !this.confirmDialog.isDestroyed) {\n            this.confirmDialog.destroy();\n        }\n    };\n    /**\n     * Method to update record with new values.\n     *\n     * @param {Object} data - Defines new data to update.\n     * @returns {void} .\n     */\n    Edit.prototype.updateRecordByID = function (data) {\n        var _this = this;\n        if (this.parent.enableImmutableMode && this.parent.editSettings.allowEditing &&\n            this.parent.treeGrid.element.getElementsByClassName('e-editedbatchcell').length > 0) {\n            this.parent.treeGrid.endEdit();\n        }\n        if (!this.parent.readOnly) {\n            var tasks = this.parent.taskFields;\n            if (isNullOrUndefined(data) || isNullOrUndefined(data[tasks.id])) {\n                return;\n            }\n            var ganttData = this.parent.viewType === 'ResourceView' ?\n                this.parent.flatData[this.parent.getTaskIds().indexOf('T' + data[tasks.id])] : this.parent.getRecordByID(data[tasks.id]);\n            if (!isNullOrUndefined(ganttData[tasks.milestone])) {\n                if (ganttData[tasks.milestone] === true) {\n                    ganttData[tasks.milestone] = false;\n                }\n            }\n            if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent']('Edit') && ganttData) {\n                this.parent.undoRedoModule['createUndoCollection']();\n                var details = {};\n                details['requestType'] = ((this.parent.contextMenuModule && this.parent.contextMenuModule.item) ? this.parent.contextMenuModule.item : 'methodUpdate');\n                details['modifiedRecords'] = extend([], [ganttData], [], true);\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n            }\n            if (!isNullOrUndefined(this.parent.editModule) && ganttData) {\n                this.parent.isOnEdit = true;\n                this.validateUpdateValues(data, ganttData, true);\n                if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                    if (this.parent.viewType === 'ProjectView' && data['ganttProperties'].predecessor) {\n                        var _loop_1 = function (i) {\n                            var isValid = ganttData.ganttProperties.predecessor.filter(function (pred) {\n                                if ((pred.from === data['ganttProperties'].predecessor[i].from &&\n                                    pred.to === data['ganttProperties'].predecessor[i].to\n                                    && data['ganttProperties'].predecessor[i].offset !== pred.offset)) {\n                                    var record = _this.parent.flatData[_this.parent.ids.indexOf(pred.to)];\n                                    var changeValue = record.ganttProperties.predecessor.filter(function (pred) {\n                                        return (pred.from === data['ganttProperties'].predecessor[i].from && pred.to === data['ganttProperties'].predecessor[i].to);\n                                    });\n                                    changeValue[0].offset = data['ganttProperties'].predecessor[i].offset;\n                                }\n                                return pred.from !== data['ganttProperties'].predecessor[i].from && pred.from !== data['ganttProperties'].predecessor[i].to;\n                            });\n                            if (isValid.length > 0) {\n                                for (var j = 0; j < isValid.length; j++) {\n                                    var record = this_1.parent.flatData[this_1.parent.ids.indexOf(isValid[j].from)];\n                                    for (var k = 0; k < record.ganttProperties.predecessor.length; k++) {\n                                        if (record.ganttProperties.predecessor[k].from === isValid[j].from &&\n                                            record.ganttProperties.predecessor[k].to === isValid[j].to) {\n                                            record.ganttProperties.predecessor.splice(k, 1);\n                                            break;\n                                        }\n                                    }\n                                }\n                                return \"break\";\n                            }\n                        };\n                        var this_1 = this;\n                        for (var i = 0; i < data['ganttProperties'].predecessor.length; i++) {\n                            var state_1 = _loop_1(i);\n                            if (state_1 === \"break\")\n                                break;\n                        }\n                    }\n                    else if (!data['ganttProperties'].predecessor && ganttData.ganttProperties.predecessor) {\n                        for (var i = 0; i < ganttData.ganttProperties.predecessor.length; i++) {\n                            var id = void 0;\n                            if (ganttData.ganttProperties.taskId.toString() === ganttData.ganttProperties.predecessor[i].from) {\n                                id = ganttData.ganttProperties.predecessor[i].to;\n                            }\n                            else {\n                                id = ganttData.ganttProperties.predecessor[i].from;\n                            }\n                            var parentRec = this.parent.flatData[this.parent.ids.indexOf(id)];\n                            for (var j = 0; j < parentRec.ganttProperties.predecessor.length; j++) {\n                                if (parentRec.ganttProperties.predecessor[j].from ===\n                                    ganttData.ganttProperties.predecessor[i].from &&\n                                    parentRec.ganttProperties.predecessor[j].to ===\n                                        ganttData.ganttProperties.predecessor[i].to) {\n                                    parentRec.ganttProperties.predecessor.splice(j, 1);\n                                }\n                            }\n                        }\n                    }\n                    ganttData.ganttProperties.resourceInfo = data['ganttProperties'].resourceInfo;\n                }\n                if (data[this.parent.taskFields.resourceInfo]) {\n                    if (ganttData.ganttProperties.duration === 0) {\n                        this.parent.dataOperation.updateWorkWithDuration(ganttData);\n                    }\n                    if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                        this.updateResourceRelatedFields(ganttData, 'resource');\n                    }\n                    this.parent.dateValidationModule.calculateEndDate(ganttData);\n                }\n                var keys = Object.keys(data);\n                if (keys.indexOf(tasks.startDate) !== -1 || keys.indexOf(tasks.endDate) !== -1 ||\n                    keys.indexOf(tasks.duration) !== -1) {\n                    this.parent.dataOperation.calculateScheduledValues(ganttData, ganttData.taskData, false);\n                }\n                this.parent.dataOperation.updateWidthLeft(ganttData);\n                if (!isUndefined(data[this.parent.taskFields.dependency]) &&\n                    data[this.parent.taskFields.dependency] !== ganttData.ganttProperties.predecessorsName) {\n                    this.parent.connectorLineEditModule.updatePredecessor(ganttData, data[this.parent.taskFields.dependency]);\n                }\n                else {\n                    var args = {};\n                    args.data = ganttData;\n                    if (this.parent.viewType === 'ResourceView') {\n                        args.action = 'methodUpdate';\n                    }\n                    this.parent.editModule.initiateUpdateAction(args);\n                }\n            }\n        }\n    };\n    /**\n     *\n     * @param {object} data .\n     * @param {IGanttData} ganttData .\n     * @param {boolean} isFromDialog .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.validateUpdateValues = function (data, ganttData, isFromDialog) {\n        var ganttObj = this.parent;\n        var tasks = ganttObj.taskFields;\n        var ganttPropByMapping = getSwapKey(ganttObj.columnMapping);\n        var scheduleFieldNames = [];\n        var isScheduleValueUpdated = false;\n        for (var _i = 0, _b = Object.keys(data); _i < _b.length; _i++) {\n            var key = _b[_i];\n            if ([tasks.startDate, tasks.endDate, tasks.duration].indexOf(key) !== -1) {\n                if (isNullOrUndefined(data[\"\" + key]) && !ganttObj.allowUnscheduledTasks) {\n                    continue;\n                }\n                if (isFromDialog) {\n                    if (tasks.duration === key) {\n                        ganttObj.dataOperation.updateDurationValue(data[key], ganttData.ganttProperties);\n                        if (ganttData.ganttProperties.duration > 0 && ganttData.ganttProperties.isMilestone) {\n                            this.parent.setRecordValue('isMilestone', false, ganttData.ganttProperties, true);\n                        }\n                        ganttObj.dataOperation.updateMappingData(ganttData, ganttPropByMapping[key]);\n                    }\n                    else {\n                        var tempDate = typeof data[key] === 'string' ? new Date(data[key]) : data[key];\n                        if (key === tasks.endDate && isNullOrUndefined(ganttData.ganttProperties.startDate) && (isNullOrUndefined(data[tasks.duration]) || data[tasks.duration] === '' || Number.isNaN(data[tasks.duration]))) {\n                            tempDate = ganttData.ganttProperties.endDate;\n                        }\n                        ganttObj.setRecordValue(ganttPropByMapping[key], tempDate, ganttData.ganttProperties, true);\n                        ganttObj.dataOperation.updateMappingData(ganttData, ganttPropByMapping[key]);\n                    }\n                }\n                else {\n                    scheduleFieldNames.push(key);\n                    isScheduleValueUpdated = true;\n                }\n            }\n            else if (tasks.resourceInfo === key) {\n                var resourceData = ganttObj.dataOperation.setResourceInfo(data);\n                if (this.parent.viewType === 'ResourceView') {\n                    if (JSON.stringify(resourceData) !== JSON.stringify(ganttData.ganttProperties.resourceInfo)) {\n                        this.parent.editModule.dialogModule.isResourceUpdate = true;\n                        this.parent.editModule.dialogModule.previousResource = !isNullOrUndefined(ganttData.ganttProperties.resourceInfo) ? ganttData.ganttProperties.resourceInfo.slice() : [];\n                    }\n                    else {\n                        this.parent.editModule.dialogModule.isResourceUpdate = false;\n                    }\n                }\n                if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                    ganttData.ganttProperties.resourceInfo = resourceData;\n                }\n                ganttObj.dataOperation.updateMappingData(ganttData, 'resourceInfo');\n            }\n            else if (tasks.dependency === key) {\n                //..\n            }\n            else if ([tasks.progress, tasks.notes, tasks.durationUnit, tasks.expandState,\n                tasks.milestone, tasks.name, tasks.baselineStartDate,\n                tasks.baselineEndDate, tasks.id, tasks.segments, tasks.cssClass].indexOf(key) !== -1) {\n                var column = ganttObj.columnByField[key];\n                /* eslint-disable-next-line */\n                var value = data[key];\n                if (!isNullOrUndefined(column) && (column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit')) {\n                    value = ganttObj.dataOperation.getDateFromFormat(value);\n                }\n                var ganttPropKey = ganttPropByMapping[key];\n                if (key === tasks.id) {\n                    ganttPropKey = 'taskId';\n                }\n                else if (key === tasks.name) {\n                    ganttPropKey = 'taskName';\n                }\n                else if (key === tasks.cssClass) {\n                    ganttPropKey = 'cssClass';\n                }\n                else if (key === tasks.milestone) {\n                    ganttPropKey = 'isMilestone';\n                    if (!isNullOrUndefined(tasks.duration)) {\n                        var ganttProp = ganttData.ganttProperties;\n                        var durationValue = data[tasks.duration];\n                        if (value) {\n                            durationValue = 0;\n                        }\n                        else {\n                            durationValue = durationValue <= 0 ? 1 : durationValue;\n                        }\n                        ganttObj.setRecordValue(tasks.duration, durationValue, ganttData, true);\n                        ganttObj.setRecordValue('duration', durationValue, ganttProp, true);\n                        ganttObj.setRecordValue('taskData.' + tasks.duration, durationValue, ganttData);\n                    }\n                }\n                else if ((key === tasks.segments) && (!isNullOrUndefined(ganttData.ganttProperties.segments))) {\n                    ganttPropKey = 'segments';\n                    /* eslint-disable-next-line */\n                    if (data && !isNullOrUndefined(data[this.parent.taskFields.segments]) && data[this.parent.taskFields.segments].length > 0) {\n                        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                            ganttData.ganttProperties.segments = data['ganttProperties'].segments;\n                        }\n                        var totDuration = 0;\n                        for (var i = 0; i < ganttData.ganttProperties.segments.length; i++) {\n                            totDuration = totDuration + ganttData.ganttProperties.segments[i].duration;\n                        }\n                        var sdate = ganttData.ganttProperties.startDate;\n                        /* eslint-disable-next-line */\n                        var edate = this.parent.dataOperation.getEndDate(sdate, totDuration, ganttData.ganttProperties.durationUnit, ganttData.ganttProperties, false);\n                        ganttObj.setRecordValue('endDate', ganttObj.dataOperation.getDateFromFormat(edate), ganttData.ganttProperties, true);\n                    }\n                }\n                if (!isNullOrUndefined(ganttPropKey)) {\n                    var seg = [];\n                    if (ganttPropKey === 'segments' && value && value.length > 0) {\n                        for (var i = 0; i < value.length; i++) {\n                            var segment = {};\n                            if (value[i][this.parent.taskFields.startDate]) {\n                                segment['startDate'] = value[i][this.parent.taskFields.startDate];\n                            }\n                            if (value[i][this.parent.taskFields.endDate]) {\n                                segment['endDate'] = value[i][this.parent.taskFields.endDate];\n                            }\n                            if (value[i][this.parent.taskFields.duration]) {\n                                segment['duration'] = parseFloat(value[i][this.parent.taskFields.duration]);\n                            }\n                            if (value[i][this.parent.taskFields.id]) {\n                                segment['id'] = value[i][this.parent.taskFields.id];\n                            }\n                            seg.push(segment);\n                        }\n                        ganttObj.setRecordValue(ganttPropKey, seg, ganttData.ganttProperties, true);\n                    }\n                    else {\n                        ganttObj.setRecordValue(ganttPropKey, value, ganttData.ganttProperties, true);\n                    }\n                }\n                if ((key === tasks.baselineStartDate || key === tasks.baselineEndDate) &&\n                    (ganttData.ganttProperties.baselineStartDate && ganttData.ganttProperties.baselineEndDate)) {\n                    ganttObj.setRecordValue('baselineStartDate', ganttObj.dataOperation.checkBaselineStartDate(ganttData.ganttProperties.baselineStartDate, ganttData.ganttProperties), ganttData.ganttProperties, true);\n                    var dayEndTime = this.parent['getCurrentDayEndTime'](ganttData.ganttProperties.baselineEndDate);\n                    if (ganttData.ganttProperties.baselineEndDate && ganttData.ganttProperties.baselineEndDate.getHours() === 0 &&\n                        dayEndTime !== 86400) {\n                        ganttObj.dataOperation.setTime(dayEndTime, ganttData.ganttProperties.baselineEndDate);\n                    }\n                    if ((ganttData.ganttProperties.baselineStartDate && ganttData.ganttProperties.baselineEndDate &&\n                        (ganttData.ganttProperties.baselineStartDate.getTime() > ganttData.ganttProperties.baselineEndDate.getTime())) ||\n                        ((!isNullOrUndefined(ganttData.ganttProperties.baselineStartDate) &&\n                            !isNullOrUndefined(ganttData.ganttProperties.startDate) &&\n                            (ganttData.ganttProperties.baselineStartDate.getTime() === ganttData.ganttProperties.startDate.getTime()))\n                            && (!isNullOrUndefined(ganttData.ganttProperties.baselineEndDate) &&\n                                !isNullOrUndefined(ganttData.ganttProperties.endDate) &&\n                                (ganttData.ganttProperties.baselineEndDate.toLocaleDateString() ===\n                                    ganttData.ganttProperties.endDate.toLocaleDateString())) &&\n                            ganttData.ganttProperties.isMilestone)) {\n                        ganttData.ganttProperties.baselineEndDate = ganttData.ganttProperties.baselineStartDate;\n                    }\n                    ganttObj.setRecordValue('baselineEndDate', ganttObj.dataOperation.checkBaselineEndDate(ganttData.ganttProperties.baselineEndDate), ganttData.ganttProperties, true);\n                    ganttObj.setRecordValue('baselineLeft', ganttObj.dataOperation.calculateBaselineLeft(ganttData.ganttProperties), ganttData.ganttProperties, true);\n                    ganttObj.setRecordValue('baselineWidth', ganttObj.dataOperation.calculateBaselineWidth(ganttData.ganttProperties), ganttData.ganttProperties, true);\n                }\n                ganttObj.setRecordValue('taskData.' + key, value, ganttData);\n                /* eslint-disable-next-line */\n                if (key === tasks.segments && data && !isNullOrUndefined(data[this.parent.taskFields.segments]) && data[this.parent.taskFields.segments].length > 0) {\n                    if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                        ganttData.ganttProperties.segments = data['ganttProperties'].segments;\n                    }\n                    ganttObj.dataOperation.setSegmentsInfo(ganttData, true);\n                }\n                ganttObj.setRecordValue(key, value, ganttData);\n            }\n            else if (tasks.indicators === key) {\n                var value = data[key];\n                ganttObj.setRecordValue('indicators', value, ganttData.ganttProperties, true);\n                ganttObj.setRecordValue('taskData.' + key, value, ganttData);\n                ganttObj.setRecordValue(key, value, ganttData);\n            }\n            else if (tasks.work === key) {\n                ganttObj.setRecordValue('work', data[key], ganttData.ganttProperties, true);\n                this.parent.dataOperation.updateMappingData(ganttData, 'work');\n                this.parent.dataOperation.updateMappingData(ganttData, 'duration');\n                this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n            }\n            else if (key === tasks.type) {\n                ganttObj.setRecordValue('taskType', data[key], ganttData.ganttProperties, true);\n                //this.parent.dataOperation.updateMappingData(ganttData, 'taskType');\n            }\n            else if (ganttObj.customColumns.indexOf(key) !== -1) {\n                var column = ganttObj.columnByField[key];\n                /* eslint-disable-next-line */\n                var value = data[key];\n                if (isNullOrUndefined(column.edit)) {\n                    if (column.editType === 'datepickeredit' || column.editType === 'datetimepickeredit') {\n                        value = ganttObj.dataOperation.getDateFromFormat(value);\n                    }\n                }\n                ganttObj.setRecordValue('taskData.' + key, value, ganttData);\n                ganttObj.setRecordValue(key, value, ganttData);\n            }\n            else if (tasks.manual === key) {\n                ganttObj.setRecordValue('isAutoSchedule', !data[key], ganttData.ganttProperties, true);\n                this.parent.setRecordValue(key, data[key], ganttData);\n                this.updateTaskScheduleModes(ganttData);\n            }\n        }\n        if (isScheduleValueUpdated) {\n            this.validateScheduleValues(scheduleFieldNames, ganttData, data);\n        }\n    };\n    /**\n     * To update duration, work, resource unit\n     *\n     * @param {IGanttData} currentData .\n     * @param {string} column .\n     * @returns {void} .\n     */\n    Edit.prototype.updateResourceRelatedFields = function (currentData, column) {\n        var ganttProp = currentData.ganttProperties;\n        var taskType = ganttProp.taskType;\n        var isEffectDriven;\n        var isAutoSchedule = ganttProp.isAutoSchedule;\n        var resources = (this.parent.editModule.dialogModule &&\n            this.parent.editModule.dialogModule['currentResources']) ? this.parent.editModule.dialogModule['currentResources']\n            : currentData.ganttProperties.resourceInfo;\n        if (!isNullOrUndefined(resources)) {\n            switch (taskType) {\n                case 'FixedUnit':\n                    if (resources.length === 0) {\n                        return;\n                    }\n                    else if (isAutoSchedule && resources.length) {\n                        if ((column === 'resource')) {\n                            this.parent.dataOperation.updateWorkWithDuration(currentData);\n                        }\n                        else if (column === 'work') {\n                            this.parent.dataOperation.updateDurationWithWork(currentData);\n                        }\n                        else if (column === 'duration' || column === 'endDate') {\n                            this.parent.dataOperation.updateWorkWithDuration(currentData);\n                            if (ganttProp.duration === 0) {\n                                this.parent.setRecordValue('isMilestone', true, ganttProp, true);\n                            }\n                        }\n                    }\n                    else if (!isAutoSchedule && column === 'work') {\n                        this.parent.dataOperation.updateUnitWithWork(currentData);\n                    }\n                    else {\n                        this.parent.dataOperation.updateWorkWithDuration(currentData);\n                    }\n                    break;\n                case 'FixedWork':\n                    if (resources.length === 0) {\n                        return;\n                    }\n                    else if (isAutoSchedule) {\n                        if (column === 'duration' || column === 'endDate') {\n                            this.parent.dataOperation.updateUnitWithWork(currentData);\n                            this.parent.dataOperation.updateDurationWithWork(currentData);\n                            if (ganttProp.duration === 0) {\n                                this.parent.setRecordValue('isMilestone', true, ganttProp, true);\n                                this.parent.setRecordValue('work', 0, ganttProp, true);\n                                if (!isNullOrUndefined(this.parent.taskFields.work)) {\n                                    this.parent.dataOperation.updateMappingData(currentData, 'work');\n                                }\n                            }\n                        }\n                        else {\n                            this.parent.dataOperation.updateDurationWithWork(currentData);\n                        }\n                    }\n                    else {\n                        if (column === 'work') {\n                            this.parent.dataOperation.updateUnitWithWork(currentData);\n                        }\n                        else {\n                            this.parent.dataOperation.updateWorkWithDuration(currentData);\n                        }\n                    }\n                    break;\n                case 'FixedDuration':\n                    if (resources.length === 0) {\n                        // To validate the work column, if set duration as 0 via celledit action, where resource colection is 0\n                        this.parent.dataOperation.updateWorkWithDuration(currentData);\n                        return;\n                    }\n                    if (resources.length && (column === 'work' || (isAutoSchedule &&\n                        isEffectDriven && (column === 'resource')))) {\n                        if (column === 'work') {\n                            this.parent.dataOperation.updateUnitWithWork(currentData);\n                        }\n                        else {\n                            this.parent.dataOperation.updateWorkWithDuration(currentData);\n                            this.parent.dataOperation.updateUnitWithWork(currentData);\n                        }\n                    }\n                    else {\n                        this.parent.dataOperation.updateWorkWithDuration(currentData);\n                    }\n                    break;\n            }\n        }\n        // To validate the work colum if set duration as 0, while resource is null/undefined\n        else if (isNullOrUndefined(resources) && taskType === 'FixedDuration' && ganttProp.duration === 0) {\n            this.parent.dataOperation.updateWorkWithDuration(currentData);\n        }\n    };\n    Edit.prototype.validateScheduleValues = function (fieldNames, ganttData, data) {\n        var ganttObj = this.parent;\n        if (fieldNames.length > 2) {\n            ganttObj.dataOperation.calculateScheduledValues(ganttData, data, false);\n        }\n        else if (fieldNames.length > 1) {\n            this.validateScheduleByTwoValues(data, fieldNames, ganttData);\n        }\n        else {\n            this.dialogModule.validateScheduleValuesByCurrentField(fieldNames[0], data[fieldNames[0]], ganttData);\n        }\n    };\n    Edit.prototype.validateScheduleByTwoValues = function (data, fieldNames, ganttData) {\n        var ganttObj = this.parent;\n        var startDate;\n        var endDate;\n        var duration;\n        var tasks = ganttObj.taskFields;\n        var ganttProp = ganttData.ganttProperties;\n        var isUnscheduledTask = ganttObj.allowUnscheduledTasks;\n        if (fieldNames.indexOf(tasks.startDate) !== -1) {\n            startDate = data[tasks.startDate];\n        }\n        if (fieldNames.indexOf(tasks.endDate) !== -1) {\n            endDate = data[tasks.endDate];\n        }\n        if (fieldNames.indexOf(tasks.duration) !== -1) {\n            duration = data[tasks.duration];\n        }\n        if (startDate && endDate || (isUnscheduledTask && (fieldNames.indexOf(tasks.startDate) !== -1) &&\n            (fieldNames.indexOf(tasks.endDate) !== -1))) {\n            ganttObj.setRecordValue('startDate', ganttObj.dataOperation.getDateFromFormat(startDate), ganttProp, true);\n            ganttObj.setRecordValue('endDate', ganttObj.dataOperation.getDateFromFormat(endDate), ganttProp, true);\n            ganttObj.dataOperation.calculateDuration(ganttData);\n        }\n        else if (endDate && duration || (isUnscheduledTask &&\n            (fieldNames.indexOf(tasks.endDate) !== -1) && (fieldNames.indexOf(tasks.duration) !== -1))) {\n            ganttObj.setRecordValue('endDate', ganttObj.dataOperation.getDateFromFormat(endDate), ganttProp, true);\n            ganttObj.dataOperation.updateDurationValue(duration, ganttProp);\n        }\n        else if (startDate && duration || (isUnscheduledTask && (fieldNames.indexOf(tasks.startDate) !== -1)\n            && (fieldNames.indexOf(tasks.duration) !== -1))) {\n            ganttObj.setRecordValue('startDate', ganttObj.dataOperation.getDateFromFormat(startDate), ganttProp, true);\n            ganttObj.dataOperation.updateDurationValue(duration, ganttProp);\n        }\n    };\n    Edit.prototype.isTaskbarMoved = function (data) {\n        var isMoved = false;\n        var taskData = data.ganttProperties;\n        var prevData = this.parent.previousRecords &&\n            this.parent.previousRecords[data.uniqueID];\n        if (prevData && prevData.ganttProperties) {\n            var prevStart = getValue('ganttProperties.startDate', prevData);\n            var prevEnd = getValue('ganttProperties.endDate', prevData);\n            var prevDuration = getValue('ganttProperties.duration', prevData);\n            var prevDurationUnit = getValue('ganttProperties.durationUnit', prevData);\n            var keys = Object.keys(prevData.ganttProperties);\n            if (keys.indexOf('startDate') !== -1 || keys.indexOf('endDate') !== -1 ||\n                keys.indexOf('duration') !== -1 || keys.indexOf('durationUnit') !== -1) {\n                if ((isNullOrUndefined(prevStart) && !isNullOrUndefined(taskData.startDate)) ||\n                    (isNullOrUndefined(prevEnd) && !isNullOrUndefined(taskData.endDate)) ||\n                    (isNullOrUndefined(taskData.startDate) && !isNullOrUndefined(prevStart)) ||\n                    (isNullOrUndefined(taskData.endDate) && !isNullOrUndefined(prevEnd)) ||\n                    (prevStart && prevStart.getTime() !== taskData.startDate.getTime())\n                    || (prevEnd && prevEnd.getTime() !== taskData.endDate.getTime())\n                    || (!isNullOrUndefined(prevDuration) && prevDuration !== taskData.duration)\n                    || (!isNullOrUndefined(prevDuration) && prevDuration === taskData.duration &&\n                        prevDurationUnit !== taskData.durationUnit)) {\n                    isMoved = true;\n                }\n            }\n        }\n        return isMoved;\n    };\n    Edit.prototype.isPredecessorUpdated = function (data) {\n        var isPredecessorUpdated = false;\n        var prevData = this.parent.previousRecords[data.uniqueID];\n        // eslint-disable-next-line\n        if (prevData && prevData.ganttProperties && prevData.ganttProperties.hasOwnProperty('predecessor')) {\n            if (data.ganttProperties.predecessorsName !== prevData.ganttProperties.predecessorsName &&\n                !(data.ganttProperties.predecessorsName === '' && isNullOrUndefined(prevData.ganttProperties.predecessorsName))) {\n                isPredecessorUpdated = true;\n            }\n            else {\n                this.parent.setRecordValue('predecessor', prevData.ganttProperties.predecessor, data.ganttProperties, true);\n            }\n        }\n        return isPredecessorUpdated;\n    };\n    /**\n     * Method to check need to open predecessor validate dialog\n     *\n     * @param {IGanttData} data .\n     * @returns {boolean} .\n     */\n    Edit.prototype.isCheckPredecessor = function (data) {\n        var isValidatePredecessor = false;\n        var prevData = this.parent.previousRecords[data.uniqueID];\n        if (prevData && this.parent.taskFields.dependency && this.parent.isInPredecessorValidation &&\n            this.parent.predecessorModule.getValidPredecessor(data).length > 0) {\n            if (this.isTaskbarMoved(data)) {\n                isValidatePredecessor = true;\n            }\n        }\n        return isValidatePredecessor;\n    };\n    /**\n     * Method to copy the ganttProperties values\n     *\n     * @param {IGanttData} data .\n     * @param {IGanttData} updateData .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.updateGanttProperties = function (data, updateData) {\n        var skipProperty = ['taskId', 'uniqueID', 'rowUniqueID', 'parentId'];\n        Object.keys(data.ganttProperties).forEach(function (property) {\n            if (skipProperty.indexOf(property) === -1) {\n                updateData.ganttProperties[property] = data.ganttProperties[property];\n            }\n        });\n    };\n    /**\n     * Method to update all dependent record on edit action\n     *\n     * @param {ITaskAddedEventArgs} args .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.initiateUpdateAction = function (args) {\n        var isValidatePredecessor = this.isCheckPredecessor(args.data);\n        var parentData;\n        var childRecordIndex;\n        if (!isNullOrUndefined(args.data.parentItem) && !isValidatePredecessor) {\n            parentData = this.parent.getRecordByID(args.data.parentItem.taskId);\n            if (this.isTaskbarMoved(args.data) && this.parent.predecessorModule.getValidPredecessor(parentData).length > 0\n                && this.parent.isInPredecessorValidation) {\n                isValidatePredecessor = true;\n            }\n            else {\n                isValidatePredecessor = false;\n            }\n        }\n        else if (args.data.childRecords.length > 0 && !isValidatePredecessor) {\n            isValidatePredecessor = this.isCheckPredecessor(args.data);\n            if (!isValidatePredecessor && this.isTaskbarMoved(args.data)) {\n                for (var i = 0; i < args.data.childRecords.length; i++) {\n                    if (this.parent.predecessorModule.getValidPredecessor(args.data.childRecords[i]).length > 0) {\n                        childRecordIndex = i;\n                        isValidatePredecessor = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.undoRedoModule || (this.parent.undoRedoModule && !this.parent.undoRedoModule['currentAction'] ||\n            (this.parent.undoRedoModule['currentAction'] && this.parent.undoRedoModule['currentAction']['action'] !== 'indent' &&\n                this.parent.undoRedoModule['currentAction']['action'] !== 'outdent'))) {\n            this.taskbarMoved = this.isTaskbarMoved(args.data);\n        }\n        this.predecessorUpdated = this.isPredecessorUpdated(args.data);\n        if (this.predecessorUpdated) {\n            this.parent.isConnectorLineUpdate = true;\n            this.parent.connectorLineEditModule.addRemovePredecessor(args.data);\n        }\n        var validateObject = {};\n        if (isValidatePredecessor && this.parent.autoCalculateDateScheduling && !(this.parent.isLoad &&\n            this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n            if (!isNullOrUndefined(parentData)) {\n                validateObject = this.parent.connectorLineEditModule.validateTypes(parentData, args.data);\n            }\n            else if (!isNullOrUndefined(childRecordIndex)) {\n                validateObject = this.parent.connectorLineEditModule.validateTypes(args.data.childRecords[childRecordIndex], args.data);\n            }\n            else {\n                validateObject = this.parent.connectorLineEditModule.validateTypes(args.data);\n            }\n            this.parent.isConnectorLineUpdate = true;\n            if (!isNullOrUndefined(getValue('violationType', validateObject))) {\n                var newArgs = this.validateTaskEvent(args);\n                if (newArgs.validateMode.preserveLinkWithEditing === false &&\n                    newArgs.validateMode.removeLink === false &&\n                    newArgs.validateMode.respectLink === false) {\n                    this.parent.connectorLineEditModule.openValidationDialog(validateObject);\n                }\n                else {\n                    if (this.parent.editModule && this.parent.editModule.dialogModule &&\n                        this.parent.editModule.dialogModule['isEdit'] && this.predecessorUpdated) {\n                        this.isValidatedEditedRecord = true;\n                        this.parent.predecessorModule.validatePredecessor(args.data, [], '');\n                    }\n                    this.parent.connectorLineEditModule.applyPredecessorOption();\n                }\n            }\n            else {\n                this.updateEditedTask(args);\n            }\n        }\n        else {\n            if (this.taskbarMoved) {\n                this.parent.isConnectorLineUpdate = true;\n            }\n            this.updateEditedTask(args);\n        }\n    };\n    /**\n     *\n     * @param {ITaskbarEditedEventArgs} editedEventArgs method to trigger validate predecessor link by dialog\n     * @returns {IValidateArgs} .\n     */\n    Edit.prototype.validateTaskEvent = function (editedEventArgs) {\n        var newArgs = {};\n        this.resetValidateArgs();\n        this.parent.currentEditedArgs = newArgs;\n        newArgs.cancel = false;\n        newArgs.data = editedEventArgs.data;\n        newArgs.requestType = 'validateLinkedTask';\n        newArgs.validateMode = this.parent.dialogValidateMode;\n        newArgs.editEventArgs = editedEventArgs;\n        this.parent.actionBeginTask(newArgs);\n        return newArgs;\n    };\n    Edit.prototype.resetValidateArgs = function () {\n        this.parent.dialogValidateMode.preserveLinkWithEditing = true;\n        this.parent.dialogValidateMode.removeLink = false;\n        this.parent.dialogValidateMode.respectLink = false;\n    };\n    Edit.prototype.validateChildPredecessors = function () {\n        for (var i = 0; i < this.parent.predecessorModule.validatedChildItems.length; i++) {\n            var child = this.parent.predecessorModule.validatedChildItems[i];\n            if (child.ganttProperties.predecessor && child.ganttProperties.predecessor.length > 0) {\n                this.parent.editedTaskBarItem = child;\n                if (!this.isValidatedEditedRecord) {\n                    this.isFirstCall = true;\n                }\n                this.parent.predecessorModule.validatePredecessor(child, [], '');\n            }\n        }\n    };\n    /**\n     *\n     * @param {ITaskAddedEventArgs} args - Edited event args like taskbar editing, dialog editing, cell editing\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.updateEditedTask = function (args) {\n        var ganttRecord = args.data;\n        this.editedRecord = ganttRecord;\n        if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n            this.parent.taskFields.hasChildMapping)) {\n            this.updateParentChildRecord(ganttRecord);\n        }\n        if (this.parent.predecessorModule) {\n            this.parent.predecessorModule.isValidatedParentTaskID = '';\n        }\n        if ((this.parent.isConnectorLineUpdate || (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'])) && this.parent.autoCalculateDateScheduling &&\n            !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand && this.parent.taskFields.hasChildMapping)) {\n            /* validating predecessor for updated child items */\n            this.validateChildPredecessors();\n            /** validating predecessor for current edited records */\n            if (ganttRecord.ganttProperties.predecessor) {\n                this.parent.isMileStoneEdited = ganttRecord.ganttProperties.isMilestone;\n                if (this.taskbarMoved) {\n                    this.parent.editedTaskBarItem = ganttRecord;\n                }\n                if (!this.isValidatedEditedRecord) {\n                    this.isFirstCall = true;\n                    this.parent.predecessorModule.validatePredecessor(ganttRecord, [], '');\n                    this.parent.predecessorModule.isChildRecordValidated = [];\n                }\n                this.isValidatedEditedRecord = false;\n            }\n            this.parent.predecessorModule.isValidatedParentTaskID = '';\n            if (this.parent.allowParentDependency && this.parent.predecessorModule.isValidatedParentTaskID !==\n                ganttRecord.ganttProperties.taskId && ganttRecord.hasChildRecords &&\n                (this.parent.previousRecords[ganttRecord.uniqueID].ganttProperties.startDate) && (args.action !== 'TaskbarEditing') &&\n                (!ganttRecord.hasChildRecords || (ganttRecord.hasChildRecords && ganttRecord.ganttProperties.isAutoSchedule))) {\n                this.parent.predecessorModule['updateChildItems'](ganttRecord);\n                this.validateChildPredecessors();\n            }\n            this.parent.predecessorModule.isValidatedParentTaskID = '';\n            if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                for (var i = 0; i < ganttRecord.childRecords.length; i++) {\n                    if (ganttRecord.childRecords[i].ganttProperties.predecessor) {\n                        this.parent.predecessorModule.validatePredecessor(ganttRecord.childRecords[i], [], '');\n                    }\n                }\n            }\n            this.updateParentItemOnEditing();\n            this.parent.dataOperation.updateParentItems(ganttRecord, true);\n        }\n        /** Update parent up-to zeroth level */\n        if (ganttRecord.parentItem) {\n            if (this.parent.autoCalculateDateScheduling && !(this.parent.isLoad && this.parent.treeGrid.loadChildOnDemand &&\n                this.parent.taskFields.hasChildMapping)) {\n                this.parent.dataOperation.updateParentItems(ganttRecord, true);\n            }\n            var parentData = this.parent.getRecordByID(ganttRecord.parentItem.taskId);\n            if (!isNullOrUndefined(parentData)) {\n                if (!parentData.ganttProperties.predecessorsName) {\n                    this.isFirstCall = true;\n                    this.parent.predecessorModule.validatePredecessor(parentData, [], '');\n                    this.updateParentItemOnEditing();\n                }\n            }\n        }\n        if (this.parent.updateOffsetOnTaskbarEdit && this.parent.connectorLineEditModule && args.data) {\n            this.parent.connectorLineEditModule['validatedOffsetIds'] = [];\n            this.parent.connectorLineEditModule['calculateOffset'](args.data);\n        }\n        this.parent.predecessorModule['validatedParentIds'] = [];\n        if (isNullOrUndefined(this.dialogModule) || (this.dialogModule && !this.dialogModule['isFromDialogPredecessor'])) {\n            this.initiateSaveAction(args);\n        }\n    };\n    Edit.prototype.updateParentItemOnEditing = function () {\n        var _this = this;\n        var childRecord = getValue('parentRecord', this.parent.predecessorModule);\n        for (var i = 0; i < childRecord.length; i++) {\n            this.parent.dataOperation.updateParentItems(childRecord[i]);\n        }\n        if (this.parent.editModule['updateParentRecords'] && this.parent.editModule['updateParentRecords'].length > 0) {\n            this.parent.editModule['updateParentRecords'].forEach(function (record) {\n                if (record.ganttProperties.predecessor && record.ganttProperties.predecessor.length > 0) {\n                    _this.parent.predecessorModule.validatePredecessor(record, [], '');\n                }\n            });\n        }\n        for (var i = 0; i < childRecord.length; i++) {\n            this.parent.dataOperation.updateParentItems(childRecord[i]);\n        }\n        setValue('parentRecord', [], this.parent.predecessorModule);\n        setValue('parentIds', [], this.parent.predecessorModule);\n    };\n    /**\n     * To update parent records while perform drag action.\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.updateParentChildRecord = function (data) {\n        var ganttRecord = data;\n        if (ganttRecord.hasChildRecords && this.taskbarMoved && (ganttRecord[this.parent.taskFields.manual] === false ||\n            this.parent.taskMode === 'Auto') && (!isNullOrUndefined(this.parent.editModule.cellEditModule) &&\n            !this.parent.editModule.cellEditModule.isResourceCellEdited)) {\n            this.parent.predecessorModule['updateChildItems'](ganttRecord);\n        }\n        if (!isNullOrUndefined(this.parent.editModule.cellEditModule)) {\n            this.parent.editModule.cellEditModule.isResourceCellEdited = false;\n        }\n    };\n    /**\n     * To update records while changing schedule mode.\n     *\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.updateTaskScheduleModes = function (data) {\n        var currentValue = data[this.parent.taskFields.startDate];\n        var ganttProp = data.ganttProperties;\n        if (this.parent.taskFields.manual) {\n            this.parent.setRecordValue(this.parent.taskFields.manual, !data.ganttProperties.isAutoSchedule, data);\n        }\n        if (data.hasChildRecords && ganttProp.isAutoSchedule) {\n            this.parent.setRecordValue('startDate', ganttProp.autoStartDate, ganttProp, true);\n            this.parent.setRecordValue('endDate', ganttProp.autoEndDate, ganttProp, true);\n            this.parent.setRecordValue('StartDate', ganttProp.autoStartDate, data, true);\n            this.parent.setRecordValue('EndDate', ganttProp.autoEndDate, data, true);\n            this.parent.setRecordValue('taskData.StartDate', ganttProp.autoStartDate, data, true);\n            this.parent.setRecordValue('taskData.EndDate', ganttProp.autoEndDate, data, true);\n            this.parent.setRecordValue('width', this.parent.dataOperation.calculateWidth(data, true), ganttProp, true);\n            this.parent.setRecordValue('left', this.parent.dataOperation.calculateLeft(ganttProp, true), ganttProp, true);\n            this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth(ganttProp.width, ganttProp.progress), ganttProp, true);\n            this.parent.dataOperation.calculateDuration(data);\n        }\n        else if (data.hasChildRecords && !ganttProp.isAutoSchedule) {\n            this.parent.dataOperation.updateWidthLeft(data);\n            this.parent.dataOperation.calculateDuration(data);\n            this.parent.setRecordValue('autoStartDate', ganttProp.autoStartDate, ganttProp, true);\n            this.parent.setRecordValue('autoEndDate', ganttProp.autoEndDate, ganttProp, true);\n            this.parent.setRecordValue('autoDuration', this.parent.dataOperation.calculateAutoDuration(data), ganttProp, true);\n            this.parent.dataOperation.updateAutoWidthLeft(data);\n        }\n        else {\n            var startDate = this.parent.dateValidationModule.checkStartDate(currentValue, data.ganttProperties);\n            this.parent.setRecordValue('startDate', startDate, data.ganttProperties, true);\n            this.parent.dataOperation.updateMappingData(data, 'startDate');\n            this.parent.dateValidationModule.calculateEndDate(data);\n            this.parent.setRecordValue('taskData.' + this.parent.taskFields.manual, data[this.parent.taskFields.manual], data);\n            this.parent.dataOperation.updateWidthLeft(data);\n        }\n    };\n    /**\n     * To update progress value of parent tasks\n     *\n     * @param {IParent} cloneParent .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.updateParentProgress = function (cloneParent) {\n        var parentProgress = 0;\n        var parent = this.parent.getParentTask(cloneParent);\n        var childRecords = parent.childRecords;\n        var childCount = childRecords ? childRecords.length : 0;\n        var totalProgress = 0;\n        var milesStoneCount = 0;\n        var taskCount = 0;\n        var totalDuration = 0;\n        var progressValues = {};\n        if (childRecords) {\n            for (var i = 0; i < childCount; i++) {\n                if ((!childRecords[i].ganttProperties.isMilestone || childRecords[i].hasChildRecords) &&\n                    isScheduledTask(childRecords[i].ganttProperties)) {\n                    progressValues = this.parent.dataOperation.getParentProgress(childRecords[i]);\n                    totalProgress += getValue('totalProgress', progressValues);\n                    totalDuration += getValue('totalDuration', progressValues);\n                }\n                else {\n                    milesStoneCount += 1;\n                }\n            }\n            taskCount = childCount - milesStoneCount;\n            parentProgress = taskCount > 0 ? Math.round(totalProgress / totalDuration) : 0;\n            if (isNaN(parentProgress)) {\n                parentProgress = 0;\n            }\n            this.parent.setRecordValue('progressWidth', this.parent.dataOperation.getProgressWidth(parent.ganttProperties.isAutoSchedule ? parent.ganttProperties.width : parent.ganttProperties.autoWidth, parentProgress), parent.ganttProperties, true);\n            this.parent.setRecordValue('progress', Math.floor(parentProgress), parent.ganttProperties, true);\n            this.parent.setRecordValue('totalProgress', totalProgress, parent.ganttProperties, true);\n            this.parent.setRecordValue('totalDuration', totalDuration, parent.ganttProperties, true);\n        }\n        this.parent.dataOperation.updateTaskData(parent);\n        if (parent.parentItem) {\n            this.updateParentProgress(parent.parentItem);\n        }\n    };\n    /**\n     * Method to revert cell edit action\n     *\n     * @param {object} args .\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    Edit.prototype.revertCellEdit = function (args) {\n        this.parent.editModule.reUpdatePreviousRecords(false, true);\n        this.resetEditProperties();\n    };\n    /**\n     * @param {boolean} isRefreshChart .\n     * @param {boolean} isRefreshGrid .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.reUpdatePreviousRecords = function (isRefreshChart, isRefreshGrid) {\n        var collection = this.parent.previousRecords;\n        var keys = Object.keys(collection);\n        for (var i = 0; i < keys.length; i++) {\n            var uniqueId = keys[i];\n            var prevTask = collection[uniqueId];\n            var originalData = this.parent.getTaskByUniqueID(uniqueId);\n            this.copyTaskData(originalData.taskData, prevTask.taskData);\n            delete prevTask.taskData;\n            this.copyTaskData(originalData.ganttProperties, prevTask.ganttProperties);\n            delete prevTask.ganttProperties;\n            this.copyTaskData(originalData, prevTask);\n            var rowIndex = this.parent.currentViewData.indexOf(originalData);\n            if (isRefreshChart) {\n                this.parent.chartRowsModule.refreshRow(rowIndex);\n            }\n            if (isRefreshGrid) {\n                var dataId = this.parent.viewType === 'ProjectView' ? originalData.ganttProperties.taskId : originalData.ganttProperties.rowUniqueID;\n                this.parent.treeGrid.grid.setRowData(dataId, originalData);\n                var row = this.parent.treeGrid.grid.getRowObjectFromUID(this.parent.treeGrid.grid.getDataRows()[rowIndex].getAttribute('data-uid'));\n                row.data = originalData;\n            }\n        }\n    };\n    /**\n     * Copy previous task data value to edited task data\n     *\n     * @param {object} existing .\n     * @param {object} newValue .\n     * @returns {void} .\n     */\n    Edit.prototype.copyTaskData = function (existing, newValue) {\n        if (!isNullOrUndefined(newValue)) {\n            extend(existing, newValue);\n        }\n    };\n    /**\n     * To update schedule date on editing.\n     *\n     * @param {ITaskbarEditedEventArgs} args .\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    Edit.prototype.updateScheduleDatesOnEditing = function (args) {\n        //..\n    };\n    /**\n     * @param {ITaskbarEditedEventArgs} args .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.initiateSaveAction = function (args) {\n        var _this = this;\n        var eventArgs = {};\n        eventArgs.requestType = 'beforeSave';\n        eventArgs.data = args.data;\n        eventArgs.cancel = false;\n        this.createArray = true;\n        if (this.parent.toolbarModule && this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['getUndoCollection'].length > 0) {\n            this.parent.toolbarModule.enableItems([this.parent.controlId + '_undo'], true); // enable toolbar items.\n        }\n        eventArgs.modifiedRecords = this.parent.editedRecords;\n        if (!isNullOrUndefined(args.target)) {\n            eventArgs.target = args.target;\n        }\n        eventArgs.modifiedTaskData = getTaskData(this.parent.editedRecords, true);\n        if (args.action === 'DrawConnectorLine' || args.action === 'DeleteConnectorLine') {\n            eventArgs.action = args.action;\n            if (args.action === 'DeleteConnectorLine') {\n                this.parent.connectorLineEditModule['isPublicDependencyDelete'] = false;\n                if (this.parent.contextMenuModule) {\n                    this.parent.contextMenuModule['isCntxtMenuDependencyDelete'] = false;\n                }\n            }\n        }\n        var ganttObj = this.parent;\n        var currentBaselineStart = __assign({}, eventArgs.data.ganttProperties.baselineStartDate);\n        var currentBaselineEnd = __assign({}, eventArgs.data.ganttProperties.baselineEndDate);\n        var currentProgress = eventArgs.data.ganttProperties.progress;\n        /* eslint-disable-next-line */\n        var unModifiedData = JSON.parse(JSON.stringify(eventArgs.data.ganttProperties));\n        this.parent.trigger('actionBegin', eventArgs, function (eventArg) {\n            if (currentBaselineStart !== eventArg.data['ganttProperties'].baselineStartDate\n                || currentBaselineEnd !== eventArg.data['ganttProperties'].baselineEndDate) {\n                ganttObj.setRecordValue('baselineLeft', ganttObj.dataOperation.calculateBaselineLeft(eventArg.data['ganttProperties']), eventArg.data['ganttProperties'], true);\n                ganttObj.setRecordValue('baselineWidth', ganttObj.dataOperation.calculateBaselineWidth(eventArg.data['ganttProperties']), eventArg.data['ganttProperties'], true);\n            }\n            if (_this.parent.autoCalculateDateScheduling && unModifiedData !== eventArg.data['ganttProperties'] &&\n                !isNullOrUndefined(eventArg.data['parentItem'])) {\n                _this.updateParentItemOnEditing();\n                _this.parent.dataOperation.updateParentItems(eventArg.data, true);\n            }\n            var ganttProps = eventArg.data['ganttProperties'];\n            var startDate = ganttProps.startDate, endDate = ganttProps.endDate, segments = ganttProps.segments, durationUnit = ganttProps.durationUnit, isAutoSchedule = ganttProps.isAutoSchedule, isMilestone = ganttProps.isMilestone;\n            if (startDate && endDate && !segments) {\n                var duration = _this.parent.dateValidationModule.getDuration(startDate, endDate, durationUnit, isAutoSchedule, isMilestone, true);\n                if (duration !== 0) {\n                    ganttProps.isMilestone = false;\n                    _this.parent.dateValidationModule.calculateDuration(eventArg.data);\n                }\n            }\n            _this.parent.dataOperation.updateWidthLeft(eventArg.data);\n            if (!isNullOrUndefined(_this.parent.taskFields.progress) && currentProgress !== eventArg.data['ganttProperties'].progress) {\n                var width = eventArg.data['ganttProperties'].isAutoSchedule ? eventArg.data['ganttProperties'].width :\n                    eventArg.data['ganttProperties'].autoWidth;\n                _this.parent.setRecordValue('progressWidth', _this.parent.dataOperation.getProgressWidth(width, eventArg.data['ganttProperties'].progress), eventArg.data['ganttProperties'], true);\n            }\n            _this.parent.chartRowsModule.updateSegment(eventArg.data['ganttProperties'].segments, eventArg.data['ganttProperties'].taskId);\n            if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                _this.parent.showMaskRow();\n            }\n            else {\n                _this.parent.showSpinner();\n            }\n            if (eventArg.cancel) {\n                _this.reUpdatePreviousRecords();\n                _this.parent.chartRowsModule.refreshRecords([args.data]);\n                _this.resetEditProperties(eventArgs);\n                // Trigger action complete event with save canceled request type\n            }\n            else {\n                // To update task data for modified records.\n                if (eventArg.modifiedRecords) {\n                    for (var i = 0; i < eventArg.modifiedRecords.length; i++) {\n                        _this.parent.dataOperation.updateTaskData(eventArg.modifiedRecords[i]);\n                    }\n                }\n                eventArg.modifiedTaskData = getTaskData(eventArg.modifiedRecords, null, null, _this.parent);\n                if (isRemoteData(_this.parent.dataSource)) {\n                    var data = _this.parent.dataSource;\n                    var updatedData = {\n                        changedRecords: eventArg.modifiedTaskData\n                    };\n                    var query = _this.parent.query instanceof Query ? _this.parent.query : new Query();\n                    var crud = null;\n                    var dataAdaptor = data.adaptor;\n                    if (!(dataAdaptor instanceof WebApiAdaptor && dataAdaptor instanceof ODataAdaptor) || data.dataSource.batchUrl) {\n                        crud = data.saveChanges(updatedData, _this.parent.taskFields.id, null, query);\n                    }\n                    else {\n                        var changedRecords = 'changedRecords';\n                        crud = data.update(_this.parent.taskFields.id, updatedData[changedRecords], null, query);\n                    }\n                    crud.then(function (e) { return _this.dmSuccess(e, args); })\n                        .catch(function (e) { return _this.dmFailure(e, args); });\n                }\n                else {\n                    _this.saveSuccess(args);\n                }\n                if (_this.parent.enableVirtualization && _this.parent.enableTimelineVirtualization) {\n                    _this.parent.ganttChartModule['setVirtualHeight']();\n                }\n                if (_this.parent.undoRedoModule) {\n                    _this.parent.previousFlatData = extend([], _this.parent.flatData, [], true);\n                }\n            }\n        });\n        this.parent.ganttChartModule.reRenderConnectorLines();\n    };\n    /* eslint-disable-next-line */\n    Edit.prototype.updateEditedFields = function (e) {\n        var eLength;\n        var rec;\n        if (e.changedRecords) {\n            eLength = e.changedRecords['length'];\n        }\n        else {\n            eLength = e['length'];\n        }\n        for (var i = 0; i < eLength; i++) {\n            if (e.changedRecords) {\n                rec = e.changedRecords[parseInt(i.toString(), 10)];\n            }\n            else {\n                rec = e[parseInt(i.toString(), 10)];\n            }\n            var _aLength = Object.keys(rec).length;\n            for (var j = 0, _a = Object.keys(rec); j < _aLength; j++) {\n                var key = _a[parseInt(j.toString(), 10)];\n                this.parent.editedRecords[parseInt(i.toString(), 10)][\"\" + key] = rec[\"\" + key];\n                this.parent.editedRecords[parseInt(i.toString(), 10)].taskData[\"\" + key] = rec[\"\" + key];\n            }\n            this.updateEditedRecordFields(rec, this.parent.editedRecords[parseInt(i.toString(), 10)]);\n        }\n    };\n    /* eslint-disable-next-line */\n    Edit.prototype.dmSuccess = function (e, args) {\n        this.updateEditedFields(e);\n        this.saveSuccess(args);\n    };\n    Edit.prototype.updateEditedRecordFields = function (rec, editedRecord) {\n        var fields = this.parent.taskFields;\n        var _aLength = Object.keys(rec).length;\n        for (var j = 0, _a = Object.keys(rec); j < _aLength; j++) {\n            var key = _a[parseInt(j.toString(), 10)];\n            editedRecord[\"\" + key] = rec[\"\" + key];\n        }\n        if (fields.id !== null) {\n            editedRecord.ganttProperties['taskId'] = rec[fields.id];\n        }\n        if (fields.name !== null) {\n            editedRecord.ganttProperties['taskName'] = rec[fields.name];\n        }\n        if (fields.startDate !== null) {\n            editedRecord.ganttProperties['startDate'] = rec[fields.startDate];\n        }\n        if (fields.endDate !== null) {\n            editedRecord.ganttProperties['endDate'] = rec[fields.endDate];\n        }\n        if (fields.duration !== null) {\n            editedRecord.ganttProperties['duration'] = parseFloat(rec[fields.duration]);\n        }\n        if (fields.durationUnit !== null) {\n            editedRecord.ganttProperties['durationUnit'] = rec[fields.durationUnit];\n        }\n        if (fields.progress !== null) {\n            editedRecord.ganttProperties['progress'] = rec[fields.progress];\n        }\n        if (fields.dependency !== null) {\n            editedRecord.ganttProperties['dependency'] = rec[fields.dependency];\n        }\n        if (fields.parentID !== null) {\n            editedRecord.ganttProperties['parentID'] = rec[fields.parentID];\n        }\n        if (fields.baselineEndDate !== null) {\n            editedRecord.ganttProperties['baselineEndDate'] = rec[fields.baselineEndDate];\n        }\n        if (fields.baselineStartDate !== null) {\n            editedRecord.ganttProperties['baselineStartDate'] = rec[fields.baselineStartDate];\n        }\n        if (fields.resourceInfo !== null) {\n            editedRecord.ganttProperties['resources'] = rec[fields.resourceInfo];\n        }\n    };\n    Edit.prototype.dmFailure = function (e, args) {\n        if (this.deletedTaskDetails.length) {\n            var deleteRecords = this.deletedTaskDetails;\n            for (var d = 0; d < deleteRecords.length; d++) {\n                deleteRecords[d].isDelete = false;\n            }\n            this.deletedTaskDetails = [];\n        }\n        this.reUpdatePreviousRecords(true, true);\n        this.resetEditProperties();\n        this.parent.trigger('actionFailure', { error: e });\n    };\n    Edit.prototype.updateSharedTask = function (data) {\n        var ids = data.ganttProperties.sharedTaskUniqueIds;\n        for (var i = 0; i < ids.length; i++) {\n            var editRecord = this.parent.flatData[this.parent.ids.indexOf(ids[i].toString())];\n            if (editRecord && editRecord.uniqueID !== data.uniqueID) {\n                this.updateGanttProperties(data, editRecord);\n                this.parent.setRecordValue('taskData', data.taskData, editRecord, true);\n                this.parent.dataOperation.updateTaskData(editRecord);\n                this.parent.dataOperation.updateResourceName(editRecord);\n                if (!isNullOrUndefined(editRecord.parentItem)) {\n                    this.parent.dataOperation.updateParentItems(editRecord.parentItem);\n                }\n            }\n        }\n    };\n    /**\n     * Method for save action success for local and remote data\n     *\n     * @param {ITaskAddedEventArgs} args .\n     * @returns {void} .\n     */\n    Edit.prototype.saveSuccess = function (args) {\n        var eventArgs = {};\n        if (this.parent.timelineSettings.updateTimescaleView) {\n            var tempArray = this.parent.editedRecords;\n            this.parent.timelineModule.updateTimeLineOnEditing([tempArray], args.action);\n        }\n        if (this.parent.viewType === 'ResourceView') {\n            if (args.action === 'TaskbarEditing' || args.action === 'DrawConnectorLine' || args.action === 'DeleteConnectorLine') {\n                this.updateSharedTask(args.data);\n            }\n            else if (args.action === 'DialogEditing' || args.action === 'CellEditing' || args.action === 'methodUpdate') {\n                if (this.parent.editModule.dialogModule.isResourceUpdate) {\n                    /* eslint-disable-next-line */\n                    this.updateResoures(this.parent.editModule.dialogModule.previousResource, args.data.ganttProperties.resourceInfo, args.data);\n                    this.updateSharedTask(args.data);\n                    this.isTreeGridRefresh = true;\n                }\n                else {\n                    this.updateSharedTask(args.data);\n                }\n            }\n            // method to update the edited parent records\n            for (var k = 0; k < this.updateParentRecords.length; k++) {\n                this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n            }\n            this.updateParentRecords = [];\n            this.parent.editModule.dialogModule.isResourceUpdate = false;\n            this.parent.editModule.dialogModule.previousResource = [];\n        }\n        var criticalModule = this.parent.criticalPathModule;\n        if (this.parent.enableCriticalPath && criticalModule && criticalModule.criticalPathCollection) {\n            criticalModule.showCriticalPath(true);\n            criticalModule.criticalConnectorLine(criticalModule.criticalPathCollection, criticalModule.detailPredecessorCollection, true, criticalModule.predecessorCollectionTaskIds);\n        }\n        if (!this.isTreeGridRefresh) {\n            if (this.parent.editSettings.allowEditing && this.parent.treeGrid.element.getElementsByClassName('e-editedbatchcell').length > 0) {\n                if (!this.parent.treeGrid.grid.element.querySelector('form').ej2_instances[0].validate()) {\n                    setValue('isEdit', false, this.parent.treeGrid.grid);\n                    this.parent.editModule.cellEditModule.isCellEdit = false;\n                }\n                this.parent.treeGrid.endEdit();\n            }\n            this.parent.chartRowsModule.refreshRecords(this.parent.editedRecords);\n            if (!this.parent.allowTaskbarOverlap && this.parent.showOverAllocation) {\n                this.parent.contentHeight = this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n                this.parent.ganttChartModule.chartBodyContent.style.height = this.parent.contentHeight + 'px';\n                this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n                if (this.parent.taskFields.dependency) {\n                    this.parent.ganttChartModule.reRenderConnectorLines();\n                }\n            }\n            if ((this.parent.isConnectorLineUpdate || (this.parent.undoRedoModule && this.parent.undoRedoModule['currentAction'] &&\n                this.parent.undoRedoModule['currentAction']['connectedRecords'])) && !isNullOrUndefined(this.parent.connectorLineEditModule)) {\n                this.parent.updatedConnectorLineCollection = [];\n                this.parent.connectorLineIds = [];\n                this.parent.connectorLineEditModule.refreshEditedRecordConnectorLine(this.parent.editedRecords);\n                this.parent.ganttChartModule.reRenderConnectorLines();\n                this.updateScheduleDatesOnEditing(args);\n            }\n        }\n        if (!this.parent.editSettings.allowTaskbarEditing || (this.parent.editSettings.allowTaskbarEditing &&\n            !this.taskbarEditModule.dependencyCancel)) {\n            eventArgs.requestType = 'save';\n            eventArgs.data = args.data;\n            eventArgs.modifiedRecords = this.parent.editedRecords;\n            eventArgs.modifiedTaskData = getTaskData(this.parent.editedRecords, null, null, this.parent);\n            this.updateRowIndex();\n            if (!isNullOrUndefined(args.action)) {\n                setValue('action', args.action, eventArgs);\n            }\n            if (args.action === 'TaskbarEditing') {\n                eventArgs.taskBarEditAction = args.taskBarEditAction;\n            }\n            this.endEditAction(args);\n            this.parent.trigger('actionComplete', eventArgs);\n            if (this.parent.allowTaskbarDragAndDrop && this.parent.rowDragAndDropModule && this.parent.rowDragAndDropModule['draggedRecord']) {\n                this.parent.rowDragAndDropModule['draggedRecord'] = null;\n            }\n            if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                this.parent.hideMaskRow();\n            }\n            else {\n                this.parent.hideSpinner();\n            }\n        }\n        else {\n            this.taskbarEditModule.dependencyCancel = false;\n            this.resetEditProperties();\n        }\n        if (this.parent.viewType === 'ResourceView' && this.isTreeGridRefresh) {\n            this.parent.treeGrid.parentData = [];\n            this.parent.updatedConnectorLineCollection = [];\n            this.parent.connectorLineIds = [];\n            this.parent.predecessorModule.createConnectorLinesCollection(this.parent.flatData);\n            this.parent.treeGrid.refresh();\n            this.isTreeGridRefresh = false;\n        }\n        this.parent.editedRecords = [];\n    };\n    Edit.prototype.updateResoures = function (prevResource, currentResource, updateRecord) {\n        var flatRecords = this.parent.flatData;\n        var currentLength = currentResource ? currentResource.length : 0;\n        var previousLength = prevResource ? prevResource.length : 0;\n        if (currentLength === 0 && previousLength === 0) {\n            return;\n        }\n        for (var index = 0; index < currentLength; index++) {\n            var recordIndex = [];\n            var resourceID = parseInt(currentResource[index][this.parent.resourceFields.id], 10).toString();\n            if (resourceID === 'NaN') {\n                resourceID = currentResource[index][this.parent.resourceFields.id];\n            }\n            for (var i = 0; i < prevResource.length; i++) {\n                var prevResourceID = parseInt(prevResource[i][this.parent.resourceFields.id], 10).toString();\n                if (prevResourceID === 'NaN') {\n                    prevResourceID = prevResource[i][this.parent.resourceFields.id];\n                }\n                if (prevResourceID === resourceID) {\n                    recordIndex.push(i);\n                    break;\n                }\n            }\n            if (recordIndex.length === 0) {\n                var parentRecord = flatRecords[this.parent.getTaskIds().indexOf('R' + resourceID)];\n                if (parentRecord) {\n                    this.addNewRecord(updateRecord, parentRecord);\n                }\n            }\n            else {\n                var record1 = parseInt(recordIndex[0].toString(), 10);\n                if (record1.toString() === 'NaN') {\n                    record1 = recordIndex[0].toString();\n                }\n                prevResource.splice(record1, 1);\n            }\n        }\n        var prevLength = prevResource ? prevResource.length : 0;\n        for (var index = 0; index < prevLength; index++) {\n            var taskID = updateRecord.ganttProperties.taskId;\n            var resourceID = prevResource[index][this.parent.resourceFields.id];\n            var record = flatRecords[this.parent.getTaskIds().indexOf('R' + resourceID)];\n            if (!isNullOrUndefined(record)) {\n                for (var j = 0; j < record.childRecords.length; j++) {\n                    if (record.childRecords[j].ganttProperties.taskId === taskID) {\n                        this.removeChildRecord(record.childRecords[j]);\n                    }\n                }\n            }\n        }\n        if (currentLength > 0) {\n            var parentTask = this.parent.getParentTask(updateRecord.parentItem);\n            if (parentTask) {\n                if (parentTask.ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n                    this.removeChildRecord(updateRecord);\n                }\n            }\n        }\n        //Assign resource to unassigned task\n        if (currentLength === 0) {\n            this.checkWithUnassignedTask(updateRecord);\n        }\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.flatData[this.parent.flatData.length - 1].ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n            this.parent.flatData.splice(this.parent.flatData.length - 1, 1);\n            this.parent.currentViewData.splice(this.parent.currentViewData.length - 1, 1);\n            this.parent.taskIds.splice(this.parent.flatData.length - 1, 1);\n            this.parent.ids.splice(this.parent.flatData.length - 1, 1);\n        }\n    };\n    /**\n     * @param {IGanttData} updateRecord .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.checkWithUnassignedTask = function (updateRecord) {\n        var unassignedTasks = null;\n        // Block for check the unassigned task.\n        for (var i = 0; i < this.parent.flatData.length; i++) {\n            if (this.parent.flatData[i].ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n                unassignedTasks = this.parent.flatData[i];\n            }\n        }\n        if (!isNullOrUndefined(unassignedTasks)) {\n            this.addNewRecord(updateRecord, unassignedTasks);\n        }\n        else {\n            // Block for create the unassigned task.\n            var unassignTaskObj = {};\n            unassignTaskObj[this.parent.taskFields.id] = 0;\n            unassignTaskObj[this.parent.taskFields.name] = this.parent.localeObj.getConstant('unassignedTask');\n            var beforeEditStatus = this.parent.isOnEdit;\n            this.parent.isOnEdit = false;\n            var cAddedRecord = this.parent.dataOperation.createRecord(unassignTaskObj, 0);\n            this.parent.isOnEdit = beforeEditStatus;\n            this.addRecordAsBottom(cAddedRecord);\n            var parentRecord = this.parent.flatData[this.parent.flatData.length - 1];\n            this.addNewRecord(updateRecord, parentRecord);\n            /* eslint-disable-next-line */\n            var source = this.parent.dataSource;\n            source.push(updateRecord.taskData);\n        }\n        var updatedData = this.parent.currentViewData.filter(function (data) {\n            return (data.ganttProperties.taskId === updateRecord.ganttProperties.taskId &&\n                (data.hasChildRecords === updateRecord.hasChildRecords));\n        })[0];\n        updateRecord.parentItem = updatedData.parentItem;\n        updateRecord.parentUniqueID = updatedData.parentUniqueID;\n    };\n    Edit.prototype.addRecordAsBottom = function (cAddedRecord) {\n        var recordIndex1 = this.parent.flatData.length;\n        this.parent.currentViewData.splice(recordIndex1 + 1, 0, cAddedRecord);\n        this.parent.flatData.splice(recordIndex1 + 1, 0, cAddedRecord);\n        this.parent.ids.splice(recordIndex1 + 1, 0, cAddedRecord.ganttProperties.rowUniqueID.toString());\n        var taskId = cAddedRecord.level === 0 ? 'R' + cAddedRecord.ganttProperties.taskId : 'T' + cAddedRecord.ganttProperties.taskId;\n        this.parent.getTaskIds().splice(recordIndex1 + 1, 0, taskId);\n        this.updateTreeGridUniqueID(cAddedRecord, 'add');\n    };\n    Edit.prototype.addNewRecord = function (updateRecord, parentRecord) {\n        var cAddedRecord = null;\n        cAddedRecord = extend({}, {}, updateRecord, true);\n        this.parent.setRecordValue('uniqueID', getUid(this.parent.element.id + '_data_'), cAddedRecord);\n        this.parent.setRecordValue('uniqueID', cAddedRecord.uniqueID, cAddedRecord.ganttProperties, true);\n        var uniqueId = cAddedRecord.uniqueID.replace(this.parent.element.id + '_data_', '');\n        this.parent.setRecordValue('rowUniqueID', uniqueId, cAddedRecord);\n        this.parent.setRecordValue('rowUniqueID', uniqueId, cAddedRecord.ganttProperties, true);\n        this.parent.setRecordValue('level', 1, cAddedRecord);\n        if (this.parent.taskFields.parentID) {\n            this.parent.setRecordValue('parentId', parentRecord.ganttProperties.taskId, cAddedRecord.ganttProperties, true);\n        }\n        this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentRecord), cAddedRecord);\n        var parentUniqId = cAddedRecord.parentItem ? cAddedRecord.parentItem.uniqueID : null;\n        this.parent.setRecordValue('parentUniqueID', parentUniqId, cAddedRecord);\n        updateRecord.ganttProperties.sharedTaskUniqueIds.push(uniqueId);\n        cAddedRecord.ganttProperties.sharedTaskUniqueIds = updateRecord.ganttProperties.sharedTaskUniqueIds;\n        this.addRecordAsChild(parentRecord, cAddedRecord);\n    };\n    Edit.prototype.removeChildRecord = function (record) {\n        var gObj = this.parent;\n        var data = [];\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.json.length > 0) {\n            data = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            data = this.parent.currentViewData;\n        }\n        var dataSource = this.parent.dataSource;\n        var deletedRow = record;\n        var flatParentData = this.parent.getParentTask(deletedRow.parentItem);\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var deleteChildRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (deleteChildRecords && deleteChildRecords.length > 0) {\n                    if (deleteChildRecords.length === 1) {\n                        //For updating the parent record which has no child reords.\n                        this.parent.isOnDelete = true;\n                        deleteChildRecords[0].isDelete = true;\n                        this.parent.dataOperation.updateParentItems(flatParentData);\n                        this.parent.isOnDelete = false;\n                        deleteChildRecords[0].isDelete = false;\n                    }\n                    childIndex = deleteChildRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    // collection for updating parent record\n                    this.updateParentRecords.push(flatParentData);\n                }\n            }\n            if (deletedRow.ganttProperties.sharedTaskUniqueIds.length) {\n                var uniqueIDIndex = deletedRow.ganttProperties.sharedTaskUniqueIds.indexOf(deletedRow.ganttProperties.rowUniqueID);\n                deletedRow.ganttProperties.sharedTaskUniqueIds.splice(uniqueIDIndex, 1);\n            }\n            this.updateTreeGridUniqueID(deletedRow, 'delete');\n            //method to delete the record from datasource collection\n            if (!this.parent.taskFields.parentID) {\n                var deleteRecordIDs = [];\n                deleteRecordIDs.push(deletedRow.ganttProperties.rowUniqueID.toString());\n                if (this.parent.viewType === 'ProjectView') {\n                    this.parent.editModule.removeFromDataSource(deleteRecordIDs);\n                }\n            }\n            var flatRecordIndex = this.parent.flatData.indexOf(deletedRow);\n            if (gObj.taskFields.parentID) {\n                var idx = void 0;\n                var ganttData = this.parent.currentViewData;\n                for (var i = 0; i < ganttData.length; i++) {\n                    if (ganttData[i].ganttProperties.rowUniqueID === deletedRow.ganttProperties.rowUniqueID) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    if (dataSource.length > 0) {\n                        dataSource.splice(idx, 1);\n                    }\n                    data.splice(idx, 1);\n                    this.parent.flatData.splice(flatRecordIndex, 1);\n                    this.parent.ids.splice(flatRecordIndex, 1);\n                    this.parent.getTaskIds().splice(flatRecordIndex, 1);\n                }\n            }\n            var recordIndex = data.indexOf(deletedRow);\n            if (!gObj.taskFields.parentID) {\n                var deletedRecordCount = this.parent.editModule.getChildCount(deletedRow, 0);\n                data.splice(recordIndex, deletedRecordCount + 1);\n                this.parent.flatData.splice(flatRecordIndex, deletedRecordCount + 1);\n                this.parent.ids.splice(flatRecordIndex, deletedRecordCount + 1);\n                this.parent.getTaskIds().splice(flatRecordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                this.parent.setRecordValue('expanded', false, flatParentData);\n                this.parent.setRecordValue('hasChildRecords', false, flatParentData);\n            }\n        }\n    };\n    // Method to add new record after resource edit\n    Edit.prototype.addRecordAsChild = function (droppedRecord, draggedRecord) {\n        var gObj = this.parent;\n        var recordIndex1 = this.parent.flatData.indexOf(droppedRecord);\n        var childRecords = this.parent.editModule.getChildCount(droppedRecord, 0);\n        var childRecordsLength;\n        var spliceIndex;\n        var parentTask = this.parent.getTaskByUniqueID(draggedRecord.parentItem.uniqueID);\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.dialogModule['indexes'] && this.dialogModule['indexes'].deletedIndexes && this.dialogModule['indexes'].deletedIndexes.length > 0) {\n            if (parentTask.ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask')) {\n                childRecordsLength = this.parent.taskIds.length + 1;\n            }\n            else {\n                for (var j = 0; j < this.dialogModule['indexes'].deletedIndexes.length; j++) {\n                    if (this.dialogModule['indexes'].deletedIndexes[j].data.parentUniqueID === draggedRecord.parentUniqueID && draggedRecord.ganttProperties.taskId === this.dialogModule['indexes'].deletedIndexes[j].data.ganttProperties.taskId) {\n                        var toIndex = this.dialogModule['indexes'].deletedIndexes[j].index;\n                        if (this.dialogModule['indexes'].deletedIndexes[j].position === 'above') {\n                            (childRecordsLength = toIndex);\n                        }\n                        else {\n                            (childRecordsLength = toIndex + 1);\n                        }\n                        for (var i = 0; i < droppedRecord.childRecords.length; i++) {\n                            if ('T' + droppedRecord.childRecords[i].ganttProperties.taskId === this.dialogModule['indexes'].deletedIndexes[j].id) {\n                                if (this.dialogModule['indexes'].deletedIndexes[j].position === 'above') {\n                                    spliceIndex = i;\n                                }\n                                else {\n                                    spliceIndex = i + 1;\n                                }\n                                break;\n                            }\n                        }\n                        break;\n                    }\n                    else if (this.dialogModule['indexes'].deletedIndexes[j].data.parentUniqueID !== draggedRecord.parentUniqueID && draggedRecord.ganttProperties.taskId === this.dialogModule['indexes'].deletedIndexes[j].data.ganttProperties.taskId) {\n                        var draggedParent = this.parent.getTaskByUniqueID(draggedRecord.parentItem.uniqueID);\n                        childRecordsLength = draggedParent.index + draggedParent.childRecords.length + 1;\n                        break;\n                    }\n                }\n            }\n        }\n        else if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && parentTask.ganttProperties.taskName === this.parent.localeObj.getConstant('unassignedTask') && this.parent.undoRedoModule['currentAction']['deletedRecordsDetails']) {\n            for (var i = 0; i < this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'].length; i++) {\n                if (this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'][i].data.ganttProperties.taskId === draggedRecord.ganttProperties.taskId) {\n                    if (parentTask.index) {\n                        childRecordsLength = this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'][i].data.index;\n                        spliceIndex = childRecordsLength - parentTask.index - 1;\n                    }\n                    else {\n                        childRecordsLength = (isNullOrUndefined(childRecords) ||\n                            childRecords === 0) ? recordIndex1 + 1 :\n                            childRecords + recordIndex1 + 1;\n                        spliceIndex = 0;\n                    }\n                    break;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(this.addRowIndex) && this.addRowPosition && droppedRecord.childRecords && this.addRowPosition !== 'Child') {\n            var dropChildRecord = droppedRecord.childRecords[this.addRowIndex];\n            var position = this.addRowPosition === 'Above' || this.addRowPosition === 'Below' ? this.addRowPosition :\n                'Child';\n            childRecordsLength = dropChildRecord ? this.addRowIndex + recordIndex1 + 1 :\n                childRecords + recordIndex1 + 1;\n            childRecordsLength = position === 'Above' ? childRecordsLength : childRecordsLength + 1;\n        }\n        else {\n            childRecordsLength = (isNullOrUndefined(childRecords) ||\n                childRecords === 0) ? recordIndex1 + 1 :\n                childRecords + recordIndex1 + 1;\n        }\n        //this.ganttData.splice(childRecordsLength, 0, this.draggedRecord);\n        this.parent.currentViewData.splice(childRecordsLength, 0, draggedRecord);\n        this.parent.flatData.splice(childRecordsLength, 0, draggedRecord);\n        this.parent.ids.splice(childRecordsLength, 0, draggedRecord.ganttProperties.rowUniqueID.toString());\n        this.updateTreeGridUniqueID(draggedRecord, 'add');\n        var recordId = draggedRecord.level === 0 ? 'R' + draggedRecord.ganttProperties.taskId : 'T' + draggedRecord.ganttProperties.taskId;\n        this.parent.getTaskIds().splice(childRecordsLength, 0, recordId);\n        if (!droppedRecord.hasChildRecords) {\n            this.parent.setRecordValue('hasChildRecords', true, droppedRecord);\n            this.parent.setRecordValue('expanded', true, droppedRecord);\n            if (!droppedRecord.childRecords.length) {\n                droppedRecord.childRecords = [];\n                if (!gObj.taskFields.parentID && isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.child])) {\n                    droppedRecord.taskData[this.parent.taskFields.child] = [];\n                }\n            }\n        }\n        if (spliceIndex >= 0) {\n            droppedRecord.childRecords.splice(spliceIndex, 0, draggedRecord);\n        }\n        else {\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n        }\n        if (!isNullOrUndefined(draggedRecord) && !this.parent.taskFields.parentID\n            && !isNullOrUndefined(droppedRecord.taskData[this.parent.taskFields.child])) {\n            droppedRecord.taskData[this.parent.taskFields.child].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n        }\n        if (!isNullOrUndefined(draggedRecord.parentItem)) {\n            //collection to update the parent records\n            this.updateParentRecords.push(droppedRecord);\n        }\n    };\n    Edit.prototype.resetEditProperties = function (args) {\n        this.parent.currentEditedArgs = {};\n        this.resetValidateArgs();\n        this.parent.editedTaskBarItem = null;\n        this.parent.isOnEdit = false;\n        this.parent.predecessorModule.validatedChildItems = [];\n        this.parent.isConnectorLineUpdate = false;\n        this.parent.editedTaskBarItem = null;\n        this.taskbarMoved = false;\n        this.predecessorUpdated = false;\n        if (!isNullOrUndefined(this.dialogModule) && (isNullOrUndefined(args) ||\n            (!isNullOrUndefined(args) && args['requestType'] === 'beforeSave' && !args['cancel']))) {\n            if (this.dialogModule.dialog && !this.dialogModule.dialogObj.isDestroyed) {\n                this.dialogModule.dialogObj.hide();\n            }\n            this.dialogModule.dialogClose();\n        }\n        this.parent.hideSpinner();\n        this.parent.initiateEditAction(false);\n    };\n    /**\n     * @param {ITaskAddedEventArgs} args .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.endEditAction = function (args) {\n        this.resetEditProperties();\n        if (args.action === 'TaskbarEditing') {\n            this.parent.trigger('taskbarEdited', args);\n        }\n        else if (args.action === 'CellEditing') {\n            this.parent.trigger('endEdit', args);\n        }\n        else if (args.action === 'DialogEditing') {\n            if (this.dialogModule.dialog && !this.dialogModule.dialogObj.isDestroyed) {\n                this.dialogModule.dialogObj.hide();\n            }\n            this.dialogModule.dialogClose();\n        }\n    };\n    // eslint-disable-next-line\n    Edit.prototype.saveFailed = function (args) {\n        this.reUpdatePreviousRecords();\n        this.parent.hideSpinner();\n        //action failure event trigger\n    };\n    /**\n     * To render delete confirmation dialog\n     *\n     * @returns {void} .\n     */\n    Edit.prototype.renderDeleteConfirmDialog = function () {\n        var dialogObj = new Dialog({\n            width: '320px',\n            isModal: true,\n            visible: false,\n            enableRtl: this.parent.enableRtl,\n            content: this.parent.localeObj.getConstant('confirmDelete'),\n            buttons: [\n                {\n                    click: this.confirmDeleteOkButton.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('okText'), isPrimary: true }\n                },\n                {\n                    click: this.closeConfirmDialog.bind(this),\n                    buttonModel: { content: this.parent.localeObj.getConstant('cancel') }\n                }\n            ],\n            target: this.parent.element,\n            animationSettings: { effect: 'None' }\n        });\n        dialogObj.appendTo('#' + this.parent.element.id + '_deleteConfirmDialog');\n        this.confirmDialog = dialogObj;\n    };\n    Edit.prototype.closeConfirmDialog = function () {\n        this.confirmDialog.hide();\n    };\n    Edit.prototype.confirmDeleteOkButton = function () {\n        this.deleteSelectedItems();\n        this.confirmDialog.hide();\n        var focussedElement = this.parent.element.querySelector('.e-treegrid');\n        focussedElement.focus();\n    };\n    /**\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.startDeleteAction = function () {\n        if (this.parent.editSettings.allowDeleting && !this.parent.readOnly) {\n            if (this.parent.editSettings.showDeleteConfirmDialog) {\n                this.confirmDialog.show();\n            }\n            else {\n                this.deleteSelectedItems();\n                var focusingElement = this.parent.element.querySelector('.e-treegrid');\n                focusingElement.focus();\n            }\n        }\n    };\n    /**\n     *\n     * @param {IGanttData[]} selectedRecords - Defines the deleted records\n     * @returns {void} .\n     * Method to delete the records from resource view Gantt.\n     */\n    Edit.prototype.deleteResourceRecords = function (selectedRecords) {\n        var deleteRecords = [];\n        var _loop_2 = function (i) {\n            if (selectedRecords[i].parentItem) {\n                if (selectedRecords[i].ganttProperties.sharedTaskUniqueIds.length === 1) {\n                    var data = selectedRecords[i];\n                    var ids = data.ganttProperties.sharedTaskUniqueIds;\n                    for (var j = 0; j < ids.length; j++) {\n                        if (this_2.parent.ids.indexOf(ids[j].toString()) !== -1) {\n                            deleteRecords.push(this_2.parent.flatData[this_2.parent.ids.indexOf(ids[j].toString())]);\n                        }\n                        else if (this_2.parent.undoRedoModule && this_2.parent.undoRedoModule['isUndoRedoPerformed'] && this_2.parent.undoRedoModule['currentAction'] && this_2.parent.undoRedoModule['currentAction']['action'] === 'Delete') {\n                            deleteRecords.push(this_2.parent.flatData[this_2.parent.taskIds.indexOf('T' + selectedRecords[i].ganttProperties.taskId)]);\n                        }\n                    }\n                    if (this_2.parent.ids.indexOf(data.ganttProperties.rowUniqueID) !== -1 &&\n                        deleteRecords.indexOf(this_2.parent.flatData[this_2.parent.ids.indexOf(data.ganttProperties.rowUniqueID)]) === -1) {\n                        deleteRecords.push(this_2.parent.flatData[this_2.parent.ids.indexOf(data.ganttProperties.rowUniqueID)]);\n                    }\n                }\n                else if (this_2.parent.undoRedoModule && this_2.parent.undoRedoModule['isUndoRedoPerformed'] && selectedRecords[i].ganttProperties.sharedTaskUniqueIds.length > 1) {\n                    deleteRecords.push(selectedRecords[i]);\n                }\n            }\n            else {\n                var resourceParent = this_2.parent.flatData.filter(function (data) {\n                    return (data.ganttProperties.taskId === selectedRecords[i].ganttProperties.taskId &&\n                        data.hasChildRecords);\n                })[0];\n                deleteRecords.push(resourceParent);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < selectedRecords.length; i++) {\n            _loop_2(i);\n        }\n        this.deleteRow(deleteRecords);\n    };\n    Edit.prototype.add = function (record, totalRecords) {\n        totalRecords.push(record);\n        if (record.hasChildRecords) {\n            var child = record.childRecords;\n            for (var i = 0; i < child.length; i++) {\n                this.add(child[i], totalRecords);\n            }\n        }\n        else {\n            if (totalRecords.indexOf(record) === -1) {\n                totalRecords.push(record);\n            }\n        }\n    };\n    Edit.prototype.deleteSelectedItems = function () {\n        if (!this.isFromDeleteMethod) {\n            var selectedRecords = [];\n            if (this.parent.selectionSettings.mode !== 'Cell') {\n                selectedRecords = this.parent.selectionModule.getSelectedRecords();\n            }\n            else if (this.parent.selectionSettings.mode === 'Cell') {\n                selectedRecords = this.parent.selectionModule.getCellSelectedRecords();\n            }\n            if (this.parent.viewType === 'ResourceView') {\n                this.deleteResourceRecords(selectedRecords);\n            }\n            else {\n                this.deleteRow(selectedRecords);\n            }\n        }\n        else {\n            if (this.targetedRecords.length) {\n                if (this.parent.viewType === 'ResourceView') {\n                    this.deleteResourceRecords(this.targetedRecords);\n                }\n                else {\n                    this.deleteRow(this.targetedRecords);\n                }\n            }\n            this.isFromDeleteMethod = false;\n        }\n    };\n    /**\n     * Method to delete record.\n     *\n     * @param {number | string | number[] | string[] | IGanttData | IGanttData[]} taskDetail - Defines the details of data to delete.\n     * @returns {void} .\n     * @public\n     */\n    Edit.prototype.deleteRecord = function (taskDetail) {\n        this.isFromDeleteMethod = true;\n        var variableType = typeof (taskDetail);\n        this.targetedRecords = [];\n        switch (variableType) {\n            case 'number':\n            case 'string':\n                {\n                    var taskId = taskDetail.toString();\n                    if (this.parent.viewType === 'ResourceView') {\n                        if (!isNullOrUndefined(taskId) && this.parent.getTaskIds().indexOf('T' + taskId) !== -1) {\n                            this.targetedRecords.push(this.parent.flatData[this.parent.getTaskIds().indexOf('T' + taskId)]);\n                        }\n                    }\n                    else {\n                        if (!isNullOrUndefined(taskId) && this.parent.ids.indexOf(taskId) !== -1) {\n                            this.targetedRecords.push(this.parent.getRecordByID(taskId));\n                        }\n                    }\n                    break;\n                }\n            case 'object':\n                if (!Array.isArray(taskDetail)) {\n                    this.targetedRecords.push(taskDetail.valueOf());\n                }\n                else {\n                    this.updateTargetedRecords(taskDetail);\n                }\n                break;\n            default:\n        }\n        this.startDeleteAction();\n    };\n    /**\n     * To update 'targetedRecords collection' from given array collection\n     *\n     * @param {object[]} taskDetailArray .\n     * @returns {void} .\n     */\n    Edit.prototype.updateTargetedRecords = function (taskDetailArray) {\n        if (taskDetailArray.length) {\n            var variableType = typeof (taskDetailArray[0]);\n            if (variableType === 'object') {\n                this.targetedRecords = taskDetailArray;\n            }\n            else {\n                // Get record from array of task ids\n                for (var i = 0; i < taskDetailArray.length; i++) {\n                    var id = taskDetailArray[i].toString();\n                    if (this.parent.viewType === 'ResourceView') {\n                        if (!isNullOrUndefined(id) && this.parent.getTaskIds().indexOf('T' + id) !== -1) {\n                            this.targetedRecords.push(this.parent.flatData[this.parent.getTaskIds().indexOf('T' + id)]);\n                        }\n                    }\n                    else if (!isNullOrUndefined(id) && this.parent.ids.indexOf(id) !== -1) {\n                        this.targetedRecords.push(this.parent.getRecordByID(id));\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.deleteRow = function (tasks) {\n        var rowItems = tasks && tasks.length ? tasks :\n            this.parent.selectionModule.getSelectedRecords();\n        this.parent.addDeleteRecord = true;\n        if (rowItems.length) {\n            this.parent.isOnDelete = true;\n            rowItems.forEach(function (item) {\n                item.isDelete = true;\n            });\n            if (this.parent.viewType === 'ResourceView' && !tasks.length) {\n                rowItems = [];\n            }\n            if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent']('Delete')) {\n                if (this.parent.undoRedoModule['redoEnabled'] && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                    this.parent.undoRedoModule['disableRedo']();\n                    this.parent.undoRedoModule['getUndoCollection'][0] = [];\n                }\n                if (!this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                    this.parent.undoRedoModule['createUndoCollection']();\n                }\n                var records = {};\n                records['action'] = 'Delete';\n                records['deletedRecordsDetails'] = [];\n                this.parent.undoRedoModule['findPosition'](extend([], [], rowItems, true), records, 'deletedRecordsDetails');\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = records;\n            }\n            var _loop_3 = function (i) {\n                var deleteRecord = rowItems[i];\n                if (this_3.deletedTaskDetails.indexOf(deleteRecord) !== -1) {\n                    return \"continue\";\n                }\n                var deleteItems = [deleteRecord];\n                if (this_3.parent.viewType === 'ResourceView' && this_3.parent.undoRedoModule && this_3.parent.undoRedoModule['isUndoRedoPerformed'] && rowItems[i].ganttProperties.resourceInfo && rowItems[i].ganttProperties.resourceInfo.length > 1) {\n                    deleteItems = [];\n                    if (!rowItems[i].hasChildRecords) {\n                        var id_1 = 'T' + rowItems[i].ganttProperties.taskId;\n                        this_3.parent.taskIds.reduce(function (e, j) {\n                            if (e === id_1) {\n                                deleteItems.push(this.parent.flatData[j]);\n                            }\n                        }.bind(this_3), []);\n                    }\n                }\n                for (var j = 0; j < deleteItems.length; j++) {\n                    var parentTask = this_3.parent.getParentTask(deleteItems[j].parentItem);\n                    if (deleteItems[j].parentItem) {\n                        var childRecord = void 0;\n                        if (!isNullOrUndefined(parentTask)) {\n                            childRecord = parentTask.childRecords;\n                            var filteredRecord = childRecord.length === 1 ?\n                                childRecord : childRecord.filter(function (data) {\n                                return !data.isDelete;\n                            });\n                            if (filteredRecord.length > 0) {\n                                this_3.parent.dataOperation.updateParentItems(deleteItems[j].parentItem);\n                            }\n                        }\n                    }\n                    var predecessor = deleteItems[j].ganttProperties.predecessor;\n                    var canDeletePredecessor = true;\n                    if (this_3.parent.viewType === 'ResourceView' && parentTask && parentTask.ganttProperties.taskName !==\n                        this_3.parent.localeObj.getConstant('unassignedTask')) {\n                        canDeletePredecessor = false;\n                    }\n                    if (predecessor && predecessor.length && canDeletePredecessor) {\n                        this_3.removePredecessorOnDelete(deleteItems[j]);\n                    }\n                    this_3.deletedTaskDetails.push(deleteItems[j]);\n                    if (deleteItems[j].hasChildRecords) {\n                        this_3.deleteChildRecords(deleteItems[j]);\n                    }\n                }\n            };\n            var this_3 = this;\n            for (var i = 0; i < rowItems.length; i++) {\n                _loop_3(i);\n            }\n            if (this.parent.selectionModule && this.parent.allowSelection) {\n                // clear selection\n                this.parent.selectionModule.clearSelection();\n            }\n            var delereArgs = {};\n            delereArgs.deletedRecordCollection = this.deletedTaskDetails;\n            delereArgs.updatedRecordCollection = this.parent.editedRecords;\n            delereArgs.cancel = false;\n            delereArgs.action = 'delete';\n            this.initiateDeleteAction(delereArgs);\n            this.parent.isOnDelete = false;\n        }\n        if (!isNullOrUndefined(this.parent.toolbarModule)) {\n            this.parent.toolbarModule.refreshToolbarItems();\n        }\n    };\n    Edit.prototype.removePredecessorOnDelete = function (record) {\n        var predecessors = record.ganttProperties.predecessor;\n        for (var i = 0; i < predecessors.length; i++) {\n            var predecessor = predecessors[i];\n            var recordId = this.parent.viewType === 'ResourceView' ? record.ganttProperties.taskId :\n                record.ganttProperties.rowUniqueID;\n            if (predecessor.from.toString() === recordId.toString()) {\n                var toRecord = this.parent.connectorLineModule.getRecordByID(predecessor.to.toString());\n                if (!isNullOrUndefined(toRecord)) {\n                    var toRecordPredcessor = extend([], [], toRecord.ganttProperties.predecessor, true);\n                    var index = void 0;\n                    for (var t = 0; t < toRecordPredcessor.length; t++) {\n                        var toId = this.parent.viewType === 'ResourceView' ? toRecord.ganttProperties.taskId :\n                            toRecord.ganttProperties.rowUniqueID;\n                        if (toRecordPredcessor[t].to.toString() === toId.toString()\n                            && toRecordPredcessor[t].from.toString() === recordId.toString()) {\n                            index = t;\n                            break;\n                        }\n                    }\n                    toRecordPredcessor.splice(index, 1);\n                    this.updatePredecessorValues(toRecord, toRecordPredcessor);\n                }\n            }\n            else if (predecessor.to.toString() === recordId.toString()) {\n                var fromRecord = this.parent.connectorLineModule.getRecordByID(predecessor.from.toString());\n                if (!isNullOrUndefined(fromRecord)) {\n                    var fromRecordPredcessor = extend([], [], fromRecord.ganttProperties.predecessor, true);\n                    var index = void 0;\n                    for (var t = 0; t < fromRecordPredcessor.length; t++) {\n                        var fromId = this.parent.viewType === 'ResourceView' ? fromRecord.ganttProperties.taskId :\n                            fromRecord.ganttProperties.rowUniqueID;\n                        if (fromRecordPredcessor[t].from.toString() === fromId.toString()\n                            && fromRecordPredcessor[t].to.toString() === recordId.toString()) {\n                            index = t;\n                            break;\n                        }\n                    }\n                    if (record.uniqueID === fromRecord.parentUniqueID ||\n                        record.parentUniqueID === fromRecord.uniqueID || this.parent.isOnDelete) {\n                        fromRecordPredcessor.splice(index, 1);\n                        this.updatePredecessorValues(fromRecord, fromRecordPredcessor);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.updatePredecessorValues = function (record, predcessorArray) {\n        this.parent.setRecordValue('predecessor', predcessorArray, record.ganttProperties, true);\n        var predecessorString = this.parent.predecessorModule.getPredecessorStringValue(record);\n        this.parent.setRecordValue('predecessorsName', predecessorString, record.ganttProperties, true);\n        this.parent.setRecordValue('taskData.' + this.parent.taskFields.dependency, predecessorString, record);\n        this.parent.setRecordValue(this.parent.taskFields.dependency, predecessorString, record);\n    };\n    /**\n     * Method to update TaskID of a gantt record\n     *\n     * @param {string | number} currentId .\n     * @param {number | string} newId .\n     * @returns {void} .\n     */\n    Edit.prototype.updateTaskId = function (currentId, newId) {\n        if (!this.parent.readOnly) {\n            var cId = typeof currentId === 'number' ? currentId.toString() : currentId;\n            var nId = typeof newId === 'number' ? newId.toString() : newId;\n            var ids = this.parent.ids;\n            if (!isNullOrUndefined(cId) && !isNullOrUndefined(nId)) {\n                var cIndex = ids.indexOf(cId);\n                var nIndex = ids.indexOf(nId);\n                // return false for invalid taskID\n                if (cIndex === -1 || nIndex > -1) {\n                    return;\n                }\n                var thisRecord = this.parent.flatData[cIndex];\n                if (!isNullOrUndefined(thisRecord)) {\n                    this.parent.setRecordValue('taskId', newId, thisRecord.ganttProperties, true);\n                    this.parent.setRecordValue('rowUniqueID', nId, thisRecord.ganttProperties, true);\n                    this.parent.setRecordValue(this.parent.taskFields.id, newId, thisRecord, true);\n                    this.parent.setRecordValue(this.parent.taskFields.id, newId, thisRecord.taskData, true);\n                }\n                ids[cIndex] = nId;\n                if (thisRecord.hasChildRecords && this.parent.taskFields.parentID) {\n                    var childRecords = thisRecord.childRecords;\n                    for (var count = 0; count < childRecords.length; count++) {\n                        var childRecord = childRecords[count];\n                        childRecord[this.parent.taskFields.parentID] = newId;\n                        this.parent.chartRowsModule.refreshRecords([childRecord]);\n                    }\n                }\n                if (this.parent.taskFields.dependency && !isNullOrUndefined(thisRecord.ganttProperties.predecessor)) {\n                    var predecessors = thisRecord.ganttProperties.predecessor;\n                    var currentGanttRecord = void 0;\n                    for (var i = 0; i < predecessors.length; i++) {\n                        var predecessor = predecessors[i];\n                        if (predecessor.to === cId) {\n                            currentGanttRecord = this.parent.flatData[ids.indexOf(predecessor.from)];\n                        }\n                        else if (predecessor.from === cId) {\n                            currentGanttRecord = this.parent.flatData[ids.indexOf(predecessor.to)];\n                        }\n                        this.updatePredecessorOnUpdateId(currentGanttRecord, cId, nId);\n                    }\n                }\n                this.parent.treeGrid.parentData = [];\n                this.parent.treeGrid.refresh();\n            }\n        }\n    };\n    Edit.prototype.updatePredecessorOnUpdateId = function (currentGanttRecord, cId, nId) {\n        if (this.parent.flatData.indexOf(currentGanttRecord) > -1) {\n            var pred = currentGanttRecord.ganttProperties.predecessor;\n            for (var j = 0; j < pred.length; j++) {\n                var pre = pred[j];\n                if (pre.to === cId) {\n                    pre.to = nId;\n                }\n                else if (pre.from === cId) {\n                    pre.from = nId;\n                }\n            }\n        }\n        this.updatePredecessorValues(currentGanttRecord, currentGanttRecord.ganttProperties.predecessor);\n    };\n    Edit.prototype.deleteChildRecords = function (record) {\n        var childRecords = record.childRecords;\n        for (var c = 0; c < childRecords.length; c++) {\n            var childRecord = childRecords[c];\n            if (this.deletedTaskDetails.indexOf(childRecord) !== -1) {\n                continue;\n            }\n            var predecessor = childRecord.ganttProperties.predecessor;\n            var canDeletePredecessor = true;\n            var parentTask = this.parent.getParentTask(childRecord.parentItem);\n            if (this.parent.viewType === 'ResourceView' && parentTask && parentTask.ganttProperties.taskName !==\n                this.parent.localeObj.getConstant('unassignedTask')) {\n                canDeletePredecessor = false;\n            }\n            if (predecessor && predecessor.length && canDeletePredecessor) {\n                this.removePredecessorOnDelete(childRecord);\n            }\n            this.deletedTaskDetails.push(childRecord);\n            if (childRecord.hasChildRecords) {\n                this.deleteChildRecords(childRecord);\n            }\n        }\n    };\n    Edit.prototype.removeFromDataSource = function (deleteRecordIDs) {\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        this.removeData(dataSource, deleteRecordIDs);\n        this.isBreakLoop = false;\n    };\n    Edit.prototype.removeData = function (dataCollection, record) {\n        for (var i = 0; i < dataCollection.length; i++) {\n            if (this.isBreakLoop) {\n                break;\n            }\n            if (record.indexOf(getValue(this.parent.taskFields.id, dataCollection[i]).toString()) !== -1) {\n                if (dataCollection[i][this.parent.taskFields.child]) {\n                    var childRecords = dataCollection[i][this.parent.taskFields.child];\n                    this.removeData(childRecords, record);\n                }\n                record.splice(record.indexOf(getValue(this.parent.taskFields.id, dataCollection[i]).toString()), 1);\n                dataCollection.splice(i, 1);\n                if (record.length === 0) {\n                    this.isBreakLoop = true;\n                    break;\n                }\n            }\n            else if (dataCollection[i][this.parent.taskFields.child]) {\n                var childRecords = dataCollection[i][this.parent.taskFields.child];\n                this.removeData(childRecords, record);\n            }\n        }\n    };\n    Edit.prototype.initiateDeleteAction = function (args) {\n        var _this = this;\n        this.parent.showSpinner();\n        var eventArgs = {};\n        eventArgs.requestType = 'beforeDelete';\n        eventArgs.data = args.deletedRecordCollection;\n        eventArgs.modifiedRecords = args.updatedRecordCollection;\n        eventArgs.modifiedTaskData = getTaskData(args.updatedRecordCollection, null, null, this.parent);\n        this.parent.trigger('actionBegin', eventArgs, function (eventArg) {\n            if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                _this.parent.showMaskRow();\n            }\n            else {\n                _this.parent.showSpinner();\n            }\n            if (eventArg.cancel) {\n                var deleteRecords = _this.deletedTaskDetails;\n                for (var d = 0; d < deleteRecords.length; d++) {\n                    deleteRecords[d].isDelete = false;\n                }\n                _this.deletedTaskDetails = [];\n                _this.reUpdatePreviousRecords();\n                _this.parent.initiateEditAction(false);\n                _this.parent.hideSpinner();\n            }\n            else {\n                if (isRemoteData(_this.parent.dataSource)) {\n                    var data_1 = _this.parent.dataSource;\n                    if (_this.parent.timezone) {\n                        eventArg.modifiedRecords.forEach(function (modifiedRecord) {\n                            updateDates(modifiedRecord, _this.parent);\n                        });\n                    }\n                    var updatedData_1 = {\n                        deletedRecords: getTaskData(eventArg.data, null, null, _this.parent),\n                        changedRecords: eventArg.modifiedTaskData\n                    };\n                    var adaptor = data_1.adaptor;\n                    var query_1 = _this.parent.query instanceof Query ? _this.parent.query : new Query();\n                    if (!(adaptor instanceof WebApiAdaptor && adaptor instanceof ODataAdaptor) || data_1.dataSource.batchUrl) {\n                        var crud = data_1.saveChanges(updatedData_1, _this.parent.taskFields.id, null, query_1);\n                        crud.then(function () { return _this.deleteSuccess(args); })\n                            .catch(function (e) { return _this.dmFailure(e, args); });\n                    }\n                    else {\n                        var deletedRecords = 'deletedRecords';\n                        var deleteCrud = null;\n                        for (var i = 0; i < updatedData_1[deletedRecords].length; i++) {\n                            deleteCrud = data_1.remove(_this.parent.taskFields.id, updatedData_1[deletedRecords][i], null, query_1);\n                        }\n                        deleteCrud.then(function () {\n                            var changedRecords = 'changedRecords';\n                            var _loop_4 = function (i) {\n                                if (updatedData_1['deletedRecords'].some(function (record) { return record[_this.parent.taskFields.id] === updatedData_1[changedRecords][i].taskId; })) {\n                                    updatedData_1[changedRecords].splice(i, 1);\n                                }\n                            };\n                            for (var i = updatedData_1[changedRecords].length - 1; i >= 0; i--) {\n                                _loop_4(i);\n                            }\n                            var updateCrud = data_1.update(_this.parent.taskFields.id, updatedData_1[changedRecords], null, query_1);\n                            updateCrud.then(function () { return _this.deleteSuccess(args); })\n                                .catch(function (e) { return _this.dmFailure(e, args); });\n                        }).catch(function (e) { return _this.dmFailure(e, args); });\n                    }\n                }\n                else {\n                    _this.deleteSuccess(args);\n                }\n            }\n        });\n    };\n    Edit.prototype.deleteSuccess = function (args) {\n        var _this = this;\n        var flatData = this.parent.flatData;\n        var currentData = this.parent.currentViewData;\n        var deletedRecords = [];\n        for (var i = 0; i < args.deletedRecordCollection.length; i++) {\n            if (this.parent.viewType === 'ProjectView') {\n                var record = this.parent.getRecordByID(args.deletedRecordCollection[i].ganttProperties.taskId);\n                if (!isNullOrUndefined(record)) {\n                    deletedRecords.push(record);\n                }\n            }\n            else {\n                var id = void 0;\n                if (args.deletedRecordCollection[i].hasChildRecords) {\n                    id = 'R' + args.deletedRecordCollection[i].ganttProperties.taskId;\n                }\n                else {\n                    id = 'T' + args.deletedRecordCollection[i].ganttProperties.taskId;\n                }\n                if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                    deletedRecords.push(this.parent.getTaskByUniqueID(args.deletedRecordCollection[i].uniqueID));\n                }\n                else {\n                    deletedRecords.push(this.parent.flatData[this.parent.taskIds.indexOf(id.toString())]);\n                }\n            }\n        }\n        var deleteRecordIDs = [];\n        if (deletedRecords.length > 0) {\n            var recordIndex = void 0;\n            var record = void 0;\n            if (this.parent.enableVirtualization) {\n                recordIndex = this.parent.flatData.indexOf(deletedRecords[deletedRecords.length - 1]);\n                this.parent.staticSelectedRowIndex = this.parent.selectedRowIndex = recordIndex;\n                record = this.parent.flatData[this.parent.selectedRowIndex + 1];\n                // perform toolbar CollapseAll later delete action issue handle\n                if (!this.parent.isCollapseAll) {\n                    // Random parent record delete action, maintaining proper record selection\n                    this.parent.staticSelectedRowIndex = (recordIndex - (deletedRecords.length - 1));\n                }\n            }\n            else {\n                recordIndex = this.parent.currentViewData.indexOf(deletedRecords[deletedRecords.length - 1]);\n                this.parent.staticSelectedRowIndex = this.parent.selectedRowIndex = recordIndex;\n                record = this.parent.currentViewData[this.parent.selectedRowIndex + 1];\n            }\n            if (!isNullOrUndefined(record)) {\n                this.parent.currentSelection = record;\n            }\n            else {\n                var prevRecordIndex = this.parent.selectedRowIndex - 1;\n                if (prevRecordIndex >= 0) {\n                    this.parent.currentSelection = this.parent.enableVirtualization ?\n                        this.parent.flatData[prevRecordIndex] : this.parent.currentViewData[prevRecordIndex];\n                }\n            }\n        }\n        this.deletedRecord = deletedRecords;\n        for (var i = 0; i < deletedRecords.length; i++) {\n            var deleteRecord = deletedRecords[i];\n            var currentIndex = void 0;\n            var flatIndex = void 0;\n            if (this.parent.viewType === 'ResourceView') {\n                if (deleteRecord.hasChildRecords) {\n                    currentIndex = this.parent.taskIds.indexOf('R' + deleteRecord.ganttProperties.taskId.toString());\n                    flatIndex = this.parent.taskIds.indexOf('R' + deleteRecord.ganttProperties.taskId.toString());\n                }\n                else {\n                    currentIndex = this.parent.taskIds.indexOf('T' + deleteRecord.ganttProperties.taskId.toString());\n                    flatIndex = this.parent.taskIds.indexOf('T' + deleteRecord.ganttProperties.taskId.toString());\n                }\n            }\n            else {\n                currentIndex = currentData.indexOf(deleteRecord);\n                flatIndex = flatData.indexOf(deleteRecord);\n            }\n            var treeGridParentIndex = this.parent.treeGrid.parentData.indexOf(deleteRecord);\n            var tempData = getValue('dataOperation.dataArray', this.parent);\n            var dataIndex = tempData.indexOf(deleteRecord.taskData);\n            var childIndex = void 0;\n            if (currentIndex !== -1) {\n                currentData.splice(currentIndex, 1);\n            }\n            if (flatIndex !== -1) {\n                flatData.splice(flatIndex, 1);\n            }\n            if (dataIndex !== -1) {\n                tempData.splice(dataIndex, 1);\n            }\n            if (!isNullOrUndefined(deleteRecord)) {\n                deleteRecordIDs.push(deleteRecord.ganttProperties.taskId.toString());\n                if (flatIndex !== -1) {\n                    this.parent.ids.splice(flatIndex, 1);\n                    if (this.parent.viewType === 'ResourceView') {\n                        this.parent.getTaskIds().splice(flatIndex, 1);\n                        if (!deleteRecord.hasChildRecords) {\n                            deleteRecord.ganttProperties.resourceInfo = null;\n                            delete deleteRecord.ganttProperties.resourceNames;\n                            deleteRecord[this.parent.taskFields.resourceInfo] = null;\n                            deleteRecord.ganttProperties.sharedTaskUniqueIds = [];\n                            delete deleteRecord.taskData[this.parent.taskFields.resourceInfo];\n                        }\n                    }\n                }\n                if (deleteRecord.level === 0 && treeGridParentIndex !== -1) {\n                    this.parent.treeGrid.parentData.splice(treeGridParentIndex, 1);\n                }\n                if (deleteRecord.parentItem) {\n                    var parentItem = this.parent.getParentTask(deleteRecord.parentItem);\n                    if (parentItem) {\n                        var childRecords = parentItem.childRecords;\n                        childIndex = childRecords.indexOf(deleteRecord);\n                        if (childIndex !== -1) {\n                            childRecords.splice(childIndex, 1);\n                        }\n                        if (!childRecords.length) {\n                            this.parent.setRecordValue('hasChildRecords', false, parentItem);\n                        }\n                    }\n                }\n                this.updateTreeGridUniqueID(deleteRecord, 'delete');\n            }\n        }\n        if (deleteRecordIDs.length > 0) {\n            this.removeFromDataSource(deleteRecordIDs);\n        }\n        var eventArgs = {};\n        this.parent.updatedConnectorLineCollection = [];\n        this.parent.connectorLineIds = [];\n        this.parent.predecessorModule.createConnectorLinesCollection(this.parent.flatData);\n        this.parent.treeGrid.parentData = [];\n        this.isAdded = false;\n        this.parent.treeGrid.editModule['isOnBatch'] = false;\n        this.parent.treeGrid.refresh();\n        if (this.parent.enableImmutableMode) {\n            this.refreshRecordInImmutableMode();\n        }\n        // Trigger actioncomplete event for delete action\n        eventArgs.requestType = 'delete';\n        eventArgs.data = args.deletedRecordCollection;\n        eventArgs.modifiedRecords = args.updatedRecordCollection;\n        eventArgs.modifiedTaskData = getTaskData(args.updatedRecordCollection, null, null, this.parent);\n        setValue('action', args.action, eventArgs);\n        this.parent.isOnDelete = false;\n        if (this.parent.viewType === 'ResourceView' && (!this.parent.undoRedoModule || (this.parent.undoRedoModule && (!this.parent.undoRedoModule['isUndoRedoPerformed'] || (this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']['action'] === 'Delete'))))) {\n            var updateUnAssignedResources_1 = eventArgs.data.filter(function (data) {\n                return !data.hasChildRecords;\n            });\n            var _loop_5 = function (i) {\n                var unassignedTask = this_4.parent.flatData.filter(function (data) {\n                    return data.ganttProperties.taskName === _this.parent.localeObj.getConstant('unassignedTask');\n                })[0];\n                var isDuplicate = [];\n                if (unassignedTask) {\n                    isDuplicate = unassignedTask.childRecords.filter(function (data) {\n                        return data.ganttProperties.taskId === updateUnAssignedResources_1[i].ganttProperties.taskId;\n                    });\n                }\n                var parentTask = this_4.parent.getParentTask(updateUnAssignedResources_1[i].parentItem);\n                if (parentTask && parentTask.ganttProperties.taskName !==\n                    this_4.parent.localeObj.getConstant('unassignedTask') && isDuplicate.length === 0) {\n                    this_4.checkWithUnassignedTask(updateUnAssignedResources_1[i]);\n                }\n                else if (!parentTask && (!isDuplicate || isDuplicate.length === 0)) {\n                    this_4.checkWithUnassignedTask(updateUnAssignedResources_1[i]);\n                }\n                unassignedTask = this_4.parent.flatData.filter(function (data) {\n                    return data.ganttProperties.taskName === _this.parent.localeObj.getConstant('unassignedTask');\n                })[0];\n                var parentItem = this_4.parent.currentViewData.filter(function (data) {\n                    if (data.ganttProperties.taskId === updateUnAssignedResources_1[i].ganttProperties.taskId &&\n                        (!data.hasChildRecords && data.parentItem)\n                        && unassignedTask.uniqueID === data.parentItem.uniqueID) {\n                        return data;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n                if (parentItem[0]) {\n                    this_4.parent.dataOperation.updateParentItems(parentItem[0]);\n                }\n            };\n            var this_4 = this;\n            for (var i = 0; i < updateUnAssignedResources_1.length; i++) {\n                _loop_5(i);\n            }\n        }\n        this.parent.trigger('actionComplete', eventArgs);\n        this.deletedTaskDetails = [];\n        this.parent.initiateEditAction(false);\n        if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n            this.parent.hideMaskRow();\n        }\n        else {\n            this.parent.hideSpinner();\n        }\n    };\n    /**\n     *\n     * @returns {number | string} .\n     * @private\n     */\n    Edit.prototype.getNewTaskId = function () {\n        var ids = this.parent.viewType === 'ResourceView' ? this.parent.getTaskIds() : this.parent.ids;\n        var maxId = ids.length;\n        var newTaskId = maxId + 1;\n        if (this.parent.viewType === 'ResourceView') {\n            if (ids.indexOf('T' + newTaskId) !== -1 || ids.indexOf('R' + newTaskId) !== -1) {\n                newTaskId = newTaskId + 1;\n                if (ids.indexOf('T' + newTaskId) !== -1 || ids.indexOf('R' + newTaskId) !== -1) {\n                    do {\n                        newTaskId = newTaskId + 1;\n                    } while (ids.indexOf('T' + newTaskId) !== -1 || ids.indexOf('R' + newTaskId) !== -1);\n                }\n            }\n        }\n        else {\n            if (ids.indexOf(newTaskId.toString()) !== -1) {\n                newTaskId = newTaskId + 1;\n                if (ids.indexOf(newTaskId.toString()) !== -1) {\n                    do {\n                        newTaskId = newTaskId + 1;\n                    } while (ids.indexOf(newTaskId.toString()) !== -1);\n                }\n            }\n        }\n        if (this.parent.columnByField[this.parent.taskFields.id].editType === 'stringedit') {\n            return newTaskId = newTaskId.toString();\n        }\n        else {\n            return newTaskId;\n        }\n    };\n    /**\n     * @param {object} obj .\n     * @param {RowPosition} rowPosition .\n     * @returns {void} .\n     * @private\n     */\n    // eslint-disable-next-line\n    Edit.prototype.prepareNewlyAddedData = function (obj, rowPosition) {\n        var taskModel = this.parent.taskFields;\n        var id;\n        var newTaskIDmd;\n        var ids = this.parent.ids;\n        /*Validate Task Id of data*/\n        if (obj[taskModel.id]) {\n            if (ids.indexOf(obj[taskModel.id].toString()) !== -1) {\n                obj[taskModel.id] = null;\n            }\n            else {\n                if (typeof (obj[taskModel.id]) === 'string') {\n                    newTaskIDmd = obj[taskModel.id];\n                }\n                else {\n                    newTaskIDmd = parseInt(obj[taskModel.id], 10);\n                }\n                obj[taskModel.id] = isNullOrUndefined(newTaskIDmd) ? null : newTaskIDmd;\n            }\n        }\n        if (!obj[taskModel.id]) {\n            id = this.getNewTaskId();\n            obj[taskModel.id] = id;\n        }\n        if (!this.parent.allowUnscheduledTasks && !obj[taskModel.startDate]) {\n            obj[taskModel.startDate] = this.parent.projectStartDate;\n        }\n        if (!this.parent.allowUnscheduledTasks && taskModel.duration && isNullOrUndefined(obj[taskModel.duration])) {\n            if (!obj[taskModel.endDate]) {\n                obj[taskModel.duration] = '5';\n            }\n        }\n        if (taskModel.progress) {\n            obj[taskModel.progress] = obj[taskModel.progress] ? (obj[taskModel.progress] > 100 ? 100 : obj[taskModel.progress]) : 0;\n        }\n        if (!this.parent.allowUnscheduledTasks && !obj[taskModel.endDate] && taskModel.endDate) {\n            if (!obj[taskModel.duration]) {\n                var startDate = this.parent.dataOperation.getDateFromFormat(this.parent.projectStartDate);\n                if (!isNullOrUndefined(startDate)) {\n                    startDate.setDate(startDate.getDate() + 4);\n                    obj[taskModel.endDate] = this.parent.getFormatedDate(startDate, this.parent.getDateFormat());\n                }\n            }\n        }\n    };\n    /**\n     * @param {object} obj .\n     * @param {number} level .\n     * @param {RowPosition} rowPosition .\n     * @param {IGanttData} parentItem .\n     * @param {number} rowIndex .\n     * @returns {IGanttData} .\n     * @private\n     */\n    Edit.prototype.updateNewlyAddedDataBeforeAjax = function (obj, level, rowPosition, parentItem, rowIndex) {\n        var cAddedRecord = this.parent.dataOperation.createRecord(obj, level);\n        switch (rowPosition) {\n            case 'Above':\n                cAddedRecord.index = rowIndex;\n                break;\n            case 'Below':\n            case 'Child':\n                cAddedRecord.index = rowIndex + 1;\n                break;\n            case 'Bottom':\n                cAddedRecord.index = this.parent.enableVirtualization ? this.parent.flatData.length : this.parent.currentViewData.length;\n                break;\n            case 'Top':\n                cAddedRecord.index = 0;\n                break;\n            default:\n                break;\n        }\n        if (!isNullOrUndefined(parentItem)) {\n            this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentItem), cAddedRecord);\n            var pIndex = cAddedRecord.parentItem ? cAddedRecord.parentItem.index : null;\n            this.parent.setRecordValue('parentIndex', pIndex, cAddedRecord);\n            var parentUniqId = cAddedRecord.parentItem ? cAddedRecord.parentItem.uniqueID : null;\n            this.parent.setRecordValue('parentUniqueID', parentUniqId, cAddedRecord);\n            if (!isNullOrUndefined(this.parent.taskFields.id) &&\n                !isNullOrUndefined(this.parent.taskFields.parentID) && cAddedRecord.parentItem) {\n                if (this.parent.viewType === 'ProjectView') {\n                    this.parent.setRecordValue(this.parent.taskFields.parentID, cAddedRecord.parentItem.taskId, cAddedRecord.taskData, true);\n                }\n                this.parent.setRecordValue('parentId', cAddedRecord.parentItem.taskId, cAddedRecord.ganttProperties, true);\n                this.parent.setRecordValue(this.parent.taskFields.parentID, cAddedRecord.parentItem.taskId, cAddedRecord, true);\n            }\n        }\n        this.parent.isOnEdit = true;\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            if (obj['hasChildRecords']) {\n                var totalRecords = [];\n                var currentAction = this.parent.undoRedoModule['currentAction']['deletedRecordsDetails'];\n                for (var i = 0; i < obj['childRecords'].length; i++) {\n                    this.add(obj['childRecords'][i], totalRecords);\n                }\n                for (var j = 0; j < currentAction.length; j++) {\n                    if (obj['ganttProperties'].taskId === currentAction[j]['data'].ganttProperties.taskId) {\n                        if (currentAction[j]['position'] === 'child') {\n                            rowPosition = 'Child';\n                        }\n                        else if (currentAction[j]['position'] === 'below') {\n                            rowPosition = 'Below';\n                        }\n                        else if (currentAction[j]['position'] === 'above') {\n                            rowPosition = 'Above';\n                        }\n                        this.backUpAndPushNewlyAddedRecord(cAddedRecord, rowPosition, parentItem);\n                        for (var i = 0; i < totalRecords.length; i++) {\n                            if (this.parent.viewType === 'ProjectView') {\n                                if (totalRecords[i].parentItem.taskId === cAddedRecord.ganttProperties.taskId) {\n                                    totalRecords[i].parentItem.index = cAddedRecord.index;\n                                    totalRecords[i].parentItem.taskId = cAddedRecord.ganttProperties.taskId;\n                                    totalRecords[i].parentItem.uniqueID = cAddedRecord.ganttProperties.uniqueID;\n                                    totalRecords[i].parentUniqueID = cAddedRecord.ganttProperties.uniqueID;\n                                }\n                            }\n                            else {\n                                totalRecords[i].parentItem.index = cAddedRecord.index;\n                                totalRecords[i].parentItem.taskId = cAddedRecord.ganttProperties.rowUniqueID;\n                                totalRecords[i].parentItem.uniqueID = cAddedRecord.ganttProperties.uniqueID;\n                                totalRecords[i].parentUniqueID = cAddedRecord.ganttProperties.uniqueID;\n                            }\n                        }\n                        break;\n                    }\n                }\n                this.addRowSelectedItem = cAddedRecord;\n                cAddedRecord.taskData[this.parent.taskFields.child] = [];\n                for (var k = 0; k < totalRecords.length; k++) {\n                    this.parent.isOnEdit = false;\n                    var newRecord = this.parent.dataOperation.createRecord(totalRecords[k], totalRecords[k].level);\n                    if (newRecord.childRecords.length === 0 && newRecord.taskData[this.parent.taskFields.child]) {\n                        newRecord.taskData[this.parent.taskFields.child] = [];\n                    }\n                    parentItem = this.parent.getRecordByID(totalRecords[k].parentItem.taskId);\n                    if (!isNullOrUndefined(parentItem)) {\n                        this.parent.setRecordValue('parentItem', this.parent.dataOperation.getCloneParent(parentItem), newRecord);\n                        var pIndex = newRecord.parentItem ? newRecord.parentItem.index : null;\n                        this.parent.setRecordValue('parentIndex', pIndex, newRecord);\n                        var parentUniqId = newRecord.parentItem ? newRecord.parentItem.uniqueID : null;\n                        this.parent.setRecordValue('parentUniqueID', parentUniqId, newRecord);\n                        if (!isNullOrUndefined(this.parent.taskFields.id) &&\n                            !isNullOrUndefined(this.parent.taskFields.parentID) && newRecord.parentItem) {\n                            if (this.parent.viewType === 'ProjectView') {\n                                this.parent.setRecordValue(this.parent.taskFields.parentID, newRecord.parentItem.taskId, newRecord.taskData, true);\n                            }\n                            this.parent.setRecordValue('parentId', newRecord.parentItem.taskId, newRecord.ganttProperties, true);\n                            this.parent.setRecordValue(this.parent.taskFields.parentID, newRecord.parentItem.taskId, newRecord, true);\n                        }\n                    }\n                    this.parent.isOnEdit = true;\n                    if (newRecord.parentItem) {\n                        if (parentItem.childRecords.length === 0) {\n                            rowPosition = 'Child';\n                        }\n                        else {\n                            rowPosition = 'Below';\n                        }\n                    }\n                    if (this.parent.getParentTask(newRecord.parentItem).childRecords.length > 0) {\n                        this.addRowSelectedItem = this.parent.getParentTask(newRecord.parentItem).childRecords[this.parent.getParentTask(newRecord.parentItem).childRecords.length - 1];\n                    }\n                    this.backUpAndPushNewlyAddedRecord(newRecord, rowPosition, parentItem);\n                    for (var i = 0; i < totalRecords.length; i++) {\n                        if (this.parent.viewType === 'ProjectView') {\n                            if (totalRecords[i].parentItem.taskId === newRecord.ganttProperties.taskId) {\n                                totalRecords[i].parentItem.index = newRecord.index;\n                                totalRecords[i].parentItem.taskId = newRecord.ganttProperties.taskId;\n                                totalRecords[i].parentItem.uniqueID = newRecord.ganttProperties.uniqueID;\n                                totalRecords[i].parentUniqueID = newRecord.ganttProperties.uniqueID;\n                            }\n                        }\n                        else {\n                            totalRecords[i].parentItem.index = cAddedRecord.index;\n                            totalRecords[i].parentItem.taskId = cAddedRecord.ganttProperties.rowUniqueID;\n                            totalRecords[i].parentItem.uniqueID = cAddedRecord.ganttProperties.uniqueID;\n                            totalRecords[i].parentUniqueID = cAddedRecord.ganttProperties.uniqueID;\n                        }\n                    }\n                }\n            }\n            else {\n                this.backUpAndPushNewlyAddedRecord(cAddedRecord, rowPosition, parentItem);\n            }\n        }\n        else {\n            this.backUpAndPushNewlyAddedRecord(cAddedRecord, rowPosition, parentItem);\n        }\n        // need to push in dataSource also.\n        if (this.parent.taskFields.dependency && cAddedRecord.ganttProperties.predecessorsName) {\n            if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                this.parent.predecessorModule.ensurePredecessorCollectionHelper(cAddedRecord, cAddedRecord.ganttProperties);\n            }\n            this.parent.predecessorModule.updatePredecessorHelper(cAddedRecord);\n            this.parent.predecessorModule.validatePredecessorDates(cAddedRecord);\n        }\n        if (cAddedRecord.parentItem && this.parent.getParentTask(cAddedRecord.parentItem).ganttProperties.isAutoSchedule) {\n            this.parent.dataOperation.updateParentItems(cAddedRecord.parentItem);\n        }\n        this.parent.isOnEdit = false;\n        return cAddedRecord;\n    };\n    /**\n     * @param {IGanttData} record .\n     * @param {number} count .\n     * @returns {number} .\n     * @private\n     */\n    Edit.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    /**\n     * @param {IGanttData} data .\n     * @param {number} count .\n     * @param {IGanttData[]} collection .\n     * @returns {number} .\n     * @private\n     */\n    Edit.prototype.getVisibleChildRecordCount = function (data, count, collection) {\n        var childRecords;\n        var length;\n        if (data.hasChildRecords) {\n            childRecords = data.childRecords;\n            length = childRecords.length;\n            for (var i = 0; i < length; i++) {\n                if (collection.indexOf(childRecords[i]) !== -1) {\n                    count++;\n                }\n                if (childRecords[i].hasChildRecords) {\n                    count = this.getVisibleChildRecordCount(childRecords[i], count, collection);\n                }\n            }\n        }\n        else {\n            if (collection.indexOf(data) !== -1) {\n                count++;\n            }\n        }\n        return count;\n    };\n    /**\n     * @param {IGanttData} parentRecord .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.updatePredecessorOnIndentOutdent = function (parentRecord) {\n        var len = parentRecord.ganttProperties.predecessor.length;\n        var parentRecordTaskData = parentRecord.ganttProperties;\n        var predecessorCollection = parentRecordTaskData.predecessor;\n        var childRecord;\n        var predecessorIndex;\n        var updatedPredecessor = [];\n        var validPredecessor;\n        for (var count = 0; count < len; count++) {\n            var fromRecord = this.parent.getRecordByID(predecessorCollection[count].from);\n            var toRecord = this.parent.getRecordByID(predecessorCollection[count].to);\n            validPredecessor = this.parent.connectorLineEditModule.validateParentPredecessor(fromRecord, toRecord);\n            if (!validPredecessor || !this.parent.allowParentDependency) {\n                if (predecessorCollection[count].to === parentRecordTaskData.rowUniqueID.toString()) {\n                    childRecord = this.parent.getRecordByID(predecessorCollection[count].from);\n                    predecessorIndex = getIndex(predecessorCollection[count], 'from', childRecord.ganttProperties.predecessor, 'to');\n                    // eslint-disable-next-line\n                    var predecessorCollections = (extend([], childRecord.ganttProperties.predecessor, [], true));\n                    predecessorCollections.splice(predecessorIndex, 1);\n                    this.parent.setRecordValue('predecessor', predecessorCollections, childRecord.ganttProperties, true);\n                }\n                else if (predecessorCollection[count].from === parentRecordTaskData.rowUniqueID.toString()) {\n                    childRecord = this.parent.getRecordByID(predecessorCollection[count].to);\n                    var prdcList = (childRecord.ganttProperties.predecessorsName.toString()).split(',');\n                    var str = predecessorCollection[count].from + predecessorCollection[count].type;\n                    var ind = prdcList.indexOf(str);\n                    prdcList.splice(ind, 1);\n                    this.parent.setRecordValue('predecessorsName', prdcList.join(','), childRecord.ganttProperties, true);\n                    this.parent.setRecordValue(this.parent.taskFields.dependency, prdcList.join(','), childRecord);\n                    predecessorIndex = getIndex(predecessorCollection[count], 'from', childRecord.ganttProperties.predecessor, 'to');\n                    // eslint-disable-next-line\n                    var temppredecessorCollection = (extend([], childRecord.ganttProperties.predecessor, [], true));\n                    temppredecessorCollection.splice(predecessorIndex, 1);\n                    this.parent.setRecordValue('predecessor', temppredecessorCollection, childRecord.ganttProperties, true);\n                    this.parent.predecessorModule.validatePredecessorDates(childRecord);\n                }\n            }\n        }\n        if (!validPredecessor || !this.parent.allowParentDependency) {\n            this.parent.setRecordValue('predecessor', updatedPredecessor, parentRecord.ganttProperties, true);\n            this.parent.setRecordValue('predecessorsName', '', parentRecord.ganttProperties, true);\n        }\n    };\n    /**\n     * @param {IGanttData} record .\n     * @param {RowPosition} rowPosition .\n     * @param {IGanttData} parentItem .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.backUpAndPushNewlyAddedRecord = function (record, rowPosition, parentItem) {\n        var flatRecords = this.parent.flatData;\n        var currentViewData = this.parent.currentViewData;\n        var ids = this.parent.ids;\n        var currentItemIndex;\n        var recordIndex;\n        var updatedCollectionIndex;\n        var childIndex;\n        switch (rowPosition) {\n            case 'Top':\n                flatRecords.splice(0, 0, record);\n                currentViewData.splice(0, 0, record);\n                ids.splice(0, 0, record.ganttProperties.rowUniqueID.toString()); // need to check NAN\n                break;\n            case 'Bottom':\n                flatRecords.push(record);\n                currentViewData.push(record);\n                ids.push(record.ganttProperties.rowUniqueID.toString()); // need to check NAN\n                if (this.parent.viewType === 'ResourceView') {\n                    var taskId = record.level === 0 ? 'R' + record.ganttProperties.taskId : 'T' + record.ganttProperties.taskId;\n                    this.parent.getTaskIds().push(taskId);\n                }\n                break;\n            case 'Above':\n                /*Record Updates*/\n                recordIndex = flatRecords.indexOf(this.addRowSelectedItem);\n                updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem);\n                this.recordCollectionUpdate(childIndex, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition);\n                break;\n            case 'Below':\n                currentItemIndex = flatRecords.indexOf(this.addRowSelectedItem);\n                if (this.addRowSelectedItem.hasChildRecords) {\n                    var dataChildCount = this.getChildCount(this.addRowSelectedItem, 0);\n                    recordIndex = currentItemIndex + dataChildCount + 1;\n                    updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) +\n                        this.getVisibleChildRecordCount(this.addRowSelectedItem, 0, currentViewData) + 1;\n                }\n                else {\n                    recordIndex = currentItemIndex + 1;\n                    updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) + 1;\n                }\n                this.recordCollectionUpdate(childIndex + 1, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition);\n                break;\n            case 'Child':\n                currentItemIndex = flatRecords.indexOf(this.addRowSelectedItem);\n                if (this.addRowSelectedItem.hasChildRecords) {\n                    var dataChildCount = this.getChildCount(this.addRowSelectedItem, 0);\n                    recordIndex = currentItemIndex + dataChildCount + 1;\n                    //Expand Add record's parent item for project view\n                    if (!this.addRowSelectedItem.expanded && !this.parent.enableMultiTaskbar) {\n                        this.parent.expandByID(this.addRowSelectedItem.ganttProperties.rowUniqueID);\n                    }\n                    updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) +\n                        this.getVisibleChildRecordCount(this.addRowSelectedItem, 0, currentViewData) + 1;\n                }\n                else {\n                    this.parent.setRecordValue('hasChildRecords', true, this.addRowSelectedItem);\n                    this.parent.setRecordValue('isMilestone', false, this.addRowSelectedItem.ganttProperties, true);\n                    this.parent.setRecordValue('expanded', true, this.addRowSelectedItem);\n                    this.parent.setRecordValue('childRecords', [], this.addRowSelectedItem);\n                    recordIndex = currentItemIndex + 1;\n                    updatedCollectionIndex = currentViewData.indexOf(this.addRowSelectedItem) + 1;\n                    if (this.addRowSelectedItem.ganttProperties.predecessor) {\n                        this.updatePredecessorOnIndentOutdent(this.addRowSelectedItem);\n                    }\n                    if (!isNullOrUndefined(this.addRowSelectedItem.ganttProperties.segments)) {\n                        this.addRowSelectedItem.ganttProperties.segments = null;\n                    }\n                }\n                this.recordCollectionUpdate(childIndex + 1, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition);\n                break;\n        }\n        this.newlyAddedRecordBackup = record;\n    };\n    /**\n     * @param {number} childIndex .\n     * @param {number} recordIndex .\n     * @param {number} updatedCollectionIndex .\n     * @param {IGanttData} record .\n     * @param {IGanttData} parentItem .\n     * @param {RowPosition} rowPosition .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.recordCollectionUpdate = function (childIndex, recordIndex, updatedCollectionIndex, record, parentItem, rowPosition) {\n        var flatRecords = this.parent.flatData;\n        var currentViewData = this.parent.currentViewData;\n        var ids = this.parent.ids;\n        /* Record collection update */\n        flatRecords.splice(recordIndex, 0, record);\n        currentViewData.splice(updatedCollectionIndex, 0, record);\n        ids.splice(recordIndex, 0, record.ganttProperties.rowUniqueID.toString());\n        if (this.parent.viewType === 'ResourceView') {\n            var taskId = record.level === 0 ? 'R' + record.ganttProperties.taskId : 'T' + record.ganttProperties.taskId;\n            this.parent.getTaskIds().splice(recordIndex, 0, taskId);\n        }\n        /* data Source update */\n        if (!isNullOrUndefined(parentItem)) {\n            if (rowPosition === 'Above') {\n                childIndex = parentItem.childRecords.indexOf(this.addRowSelectedItem);\n            }\n            else if (rowPosition === 'Below') {\n                childIndex = parentItem.childRecords.indexOf(this.addRowSelectedItem) + 1;\n            }\n            else {\n                childIndex = parentItem.childRecords.length;\n            }\n            /*Child collection update*/\n            parentItem.childRecords.splice(childIndex, 0, record);\n            if (!this.parent.taskFields.child) {\n                this.parent.taskFields.child = 'Children';\n            }\n            if ((this.parent.dataSource instanceof DataManager &&\n                isNullOrUndefined(parentItem.taskData[this.parent.taskFields.parentID])) ||\n                !isNullOrUndefined(this.parent.dataSource)) {\n                var child = this.parent.taskFields.child;\n                if (parentItem.taskData[child] && parentItem.taskData[child].length > 0) {\n                    if (rowPosition === 'Above' || rowPosition === 'Below') {\n                        parentItem.taskData[child].splice(childIndex, 0, record.taskData);\n                    }\n                    else {\n                        parentItem.taskData[child].push(record.taskData);\n                    }\n                }\n                else {\n                    parentItem.taskData[child] = [];\n                    parentItem.taskData[child].push(record.taskData);\n                }\n                this.isNewRecordAdded = true;\n            }\n        }\n    };\n    /**\n     * @param {IGanttData} cAddedRecord .\n     * @param {IGanttData} modifiedRecords .\n     * @param {string} event .\n     * @returns {ITaskAddedEventArgs} .\n     * @private\n     */\n    Edit.prototype.constructTaskAddedEventArgs = function (cAddedRecord, modifiedRecords, event) {\n        var eventArgs = {};\n        eventArgs.action = eventArgs.requestType = event;\n        if (cAddedRecord.length > 1) {\n            eventArgs.data = [];\n            eventArgs.newTaskData = [];\n            eventArgs.recordIndex = [];\n            for (var i = 0; i < cAddedRecord.length; i++) {\n                eventArgs.data[i] = cAddedRecord[i];\n                (eventArgs.newTaskData[i]) = (getTaskData([cAddedRecord[i]], eventArgs.data[i], eventArgs, this.parent));\n                eventArgs.recordIndex[i] = cAddedRecord[i].index;\n            }\n        }\n        else if (cAddedRecord.length === 1) {\n            for (var i = 0; i < cAddedRecord.length; i++) {\n                (eventArgs.data) = (cAddedRecord[i]);\n                (eventArgs.newTaskData) = (getTaskData([cAddedRecord[i]], eventArgs.data, eventArgs, this.parent));\n                eventArgs.recordIndex = cAddedRecord[i].index;\n            }\n        }\n        eventArgs.modifiedRecords = modifiedRecords;\n        eventArgs.modifiedTaskData = getTaskData(modifiedRecords, null, null, this.parent);\n        return eventArgs;\n    };\n    /**\n     * @param {ITaskAddedEventArgs} args .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.addSuccess = function (args) {\n        // let addedRecords: IGanttData = args.addedRecord;\n        // let eventArgs: IActionBeginEventArgs = {};\n        this.parent.updatedConnectorLineCollection = [];\n        this.parent.connectorLineIds = [];\n        this.parent.predecessorModule.createConnectorLinesCollection(this.parent.flatData);\n        this.parent.treeGrid.parentData = [];\n        this.parent.addDeleteRecord = true;\n        this.parent.treeGrid['isAddedFromGantt'] = true;\n        this.isAdded = true;\n        if (this.parent.treeGrid.editModule) {\n            this.parent.treeGrid.editModule['isOnBatch'] = false;\n        }\n        this.parent.treeGrid.refresh();\n        if (this.parent.enableImmutableMode) {\n            this.parent.modifiedRecords = args.modifiedRecords;\n            this.parent.modifiedRecords.push(args.data);\n            this.refreshRecordInImmutableMode();\n        }\n    };\n    Edit.prototype.refreshRecordInImmutableMode = function (data, dragged) {\n        if (!dragged && !isNullOrUndefined(data)) {\n            for (var i = data[0].index + 1; i < this.parent.currentViewData.length; i++) {\n                if (data[0].level < this.parent.currentViewData[i].level) {\n                    this.parent.modifiedRecords.push(this.parent.currentViewData[i]);\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        var _loop_6 = function (i) {\n            var originalData = this_5.parent.modifiedRecords[i];\n            var treeIndex = this_5.parent.rowDragAndDropModule && this_5.parent.allowRowDragAndDrop ? 1 : 0;\n            var uniqueTaskID = this_5.parent.taskFields.id;\n            var originalIndex = this_5.parent.currentViewData.findIndex(function (data) {\n                return (data[uniqueTaskID] === originalData[uniqueTaskID]);\n            });\n            if (this_5.parent.treeGrid.getRows()[originalIndex]) {\n                var row = this_5.parent.treeGrid.grid.getRowObjectFromUID(this_5.parent.treeGrid.grid.getDataRows()[originalIndex].getAttribute('data-uid'));\n                this_5.parent.treeGrid.renderModule.cellRender({\n                    data: row.data,\n                    cell: this_5.parent.treeGrid.getRows()[originalIndex].cells[this_5.parent.treeColumnIndex + treeIndex],\n                    column: this_5.parent.treeGrid.grid.getColumns()[this_5.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n                this_5.parent.treeGrid.renderModule.RowModifier({\n                    data: originalData, row: this_5.parent.treeGrid.getRows()[originalIndex], rowHeight: this_5.parent.rowHeight\n                });\n            }\n        };\n        var this_5 = this;\n        for (var i = 0; i < this.parent.modifiedRecords.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * @param {IGanttData} addedRecord .\n     * @param {RowPosition} rowPosition .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.updateRealDataSource = function (addedRecord, rowPosition) {\n        var taskFields = this.parent.taskFields;\n        var dataSource = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) :\n            this.parent.dataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        for (var i = 0; i < addedRecord.length; i++) {\n            if (isNullOrUndefined(rowPosition) || isNullOrUndefined(this.addRowSelectedItem)) {\n                rowPosition = rowPosition === 'Bottom' ? 'Bottom' : 'Top';\n            }\n            if (rowPosition === 'Top') {\n                dataSource.splice(0, 0, addedRecord[i].taskData);\n            }\n            else if (rowPosition === 'Bottom') {\n                dataSource.push(addedRecord[i].taskData);\n            }\n            else {\n                if (!isNullOrUndefined(taskFields.id) && !isNullOrUndefined(taskFields.parentID) && rowPosition === 'Child') {\n                    dataSource.push(addedRecord[i].taskData);\n                }\n                else {\n                    if (!this.isNewRecordAdded) {\n                        this.addDataInRealDataSource(dataSource, addedRecord[i].taskData, rowPosition);\n                    }\n                    this.isNewRecordAdded = false;\n                }\n            }\n            this.isBreakLoop = false;\n        }\n    };\n    /**\n     * @param {object[]} dataCollection .\n     * @param {IGanttData} record .\n     * @param {RowPosition} rowPosition .\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.addDataInRealDataSource = function (dataCollection, record, rowPosition) {\n        for (var i = 0; i < dataCollection.length; i++) {\n            var child = this.parent.taskFields.child;\n            if (this.isBreakLoop) {\n                break;\n            }\n            if (getValue(this.parent.taskFields.id, dataCollection[i]).toString() ===\n                this.addRowSelectedItem.ganttProperties.rowUniqueID.toString()) {\n                var index = void 0;\n                if (this.parent.rowDragAndDropModule && this.parent.rowDragAndDropModule['droppedRecord'] && this.parent.viewType === 'ResourceView') {\n                    for (var i_1 = 0; i_1 < dataCollection.length; i_1++) {\n                        if (dataCollection[i_1][this.parent.taskFields.id] === this.parent.rowDragAndDropModule['droppedRecord'].ganttProperties.taskId) {\n                            index = i_1;\n                            break;\n                        }\n                    }\n                }\n                if (rowPosition === 'Above') {\n                    if (index) {\n                        dataCollection.splice(index, 0, record);\n                    }\n                    else {\n                        dataCollection.splice(i, 0, record);\n                    }\n                }\n                else if (rowPosition === 'Below') {\n                    if (index) {\n                        dataCollection.splice(index + 1, 0, record);\n                    }\n                    else {\n                        dataCollection.splice(i + 1, 0, record);\n                    }\n                }\n                else if (rowPosition === 'Child') {\n                    if (dataCollection[i][child] && dataCollection[i][child].length > 0) {\n                        dataCollection[i][child].push(record);\n                    }\n                    else {\n                        dataCollection[i][child] = [];\n                        dataCollection[i][child].push(record);\n                    }\n                }\n                this.isBreakLoop = true;\n                break;\n            }\n            else if (dataCollection[i][child]) {\n                var childRecords = dataCollection[i][child];\n                this.addDataInRealDataSource(childRecords, record, rowPosition);\n            }\n        }\n    };\n    /**\n     * Method to update the values to client side from server side.\n     *\n     * @param {Object} e - Defines the new modified data from the server.\n     * @param {Object[]} e.addedRecords .\n     * @param {Object[]} e.changedRecords .\n     * @param {ITaskAddedEventArgs} args - Defines the client side data.\n     * @returns {void} .\n     */\n    Edit.prototype.updateClientDataFromServer = function (e, args) {\n        var serverReturnedValue = e.addedRecords[0];\n        var _aLength = Object.keys(serverReturnedValue).length;\n        for (var j = 0, _a = Object.keys(serverReturnedValue); j < _aLength; j++) {\n            var key = _a[parseInt(j.toString(), 10)];\n            args.data[\"\" + key] = serverReturnedValue[\"\" + key];\n        }\n        if (this.parent.taskFields.id !== null) {\n            args.data.ganttProperties['taskId'] = serverReturnedValue[this.parent.taskFields.id];\n        }\n        if (this.parent.taskFields.name !== null) {\n            args.data.ganttProperties['taskName'] = serverReturnedValue[this.parent.taskFields.name];\n        }\n        if (this.parent.taskFields.startDate !== null) {\n            args.data.ganttProperties['startDate'] = serverReturnedValue[this.parent.taskFields.startDate];\n        }\n        if (this.parent.taskFields.endDate !== null) {\n            args.data.ganttProperties['endDate'] = serverReturnedValue[this.parent.taskFields.endDate];\n        }\n        if (this.parent.taskFields.duration !== null) {\n            args.data.ganttProperties['duration'] = parseFloat(serverReturnedValue[this.parent.taskFields.duration]);\n        }\n        if (this.parent.taskFields.durationUnit !== null) {\n            args.data.ganttProperties['durationUnit'] = serverReturnedValue[this.parent.taskFields.durationUnit];\n        }\n        if (this.parent.taskFields.progress !== null) {\n            args.data.ganttProperties['progress'] = serverReturnedValue[this.parent.taskFields.progress];\n        }\n        if (this.parent.taskFields.dependency !== null) {\n            args.data.ganttProperties['dependency'] = serverReturnedValue[this.parent.taskFields.dependency];\n        }\n        if (this.parent.taskFields.parentID !== null) {\n            args.data.ganttProperties['parentID'] = serverReturnedValue[this.parent.taskFields.parentID];\n        }\n        if (this.parent.taskFields.baselineEndDate !== null) {\n            args.data.ganttProperties['baselineEndDate'] = serverReturnedValue[this.parent.taskFields.baselineEndDate];\n        }\n        if (this.parent.taskFields.baselineStartDate !== null) {\n            args.data.ganttProperties['baselineStartDate'] = serverReturnedValue[this.parent.taskFields.baselineStartDate];\n        }\n        if (this.parent.taskFields.resourceInfo !== null) {\n            args.data.ganttProperties['resources'] = serverReturnedValue[this.parent.taskFields.resourceInfo];\n        }\n    };\n    Edit.prototype.addNewUndoCollection = function (record, args) {\n        if (this.parent.undoRedoModule && (!this.parent.undoRedoModule['isUndoRedoPerformed'] || (this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']['action'] === 'Add' && this.parent.viewType === 'ResourceView'))\n            && this.parent['isUndoRedoItemPresent']('Add')) {\n            record['action'] = 'Add';\n            var tempArray_1 = args.data.length > 0 ?\n                extend([], [], args.data, true) : [args.data];\n            var addedRec = [];\n            var _loop_7 = function (i) {\n                addedRec = (this_6.parent.flatData.filter(function (data) {\n                    return (tempArray_1[i].index === data.index && tempArray_1[i]['ganttProperties'].taskId === data.ganttProperties.taskId);\n                }));\n            };\n            var this_6 = this;\n            for (var i = 0; i < tempArray_1.length; i++) {\n                _loop_7(i);\n            }\n            record['addedRecords'] = extend([], [], addedRec, true);\n            this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n        }\n    };\n    /**\n     * Method to add new record.\n     *\n     * @param {Object[] | Object} data - Defines the new data to add.\n     * @param {RowPosition} rowPosition - Defines the position of row.\n     * @param {number} rowIndex - Defines the row index.\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.addRecord = function (data, rowPosition, rowIndex) {\n        var _this = this;\n        var tempTaskID = this.parent.taskFields.id;\n        if (this.parent.editModule && this.parent.editSettings.allowAdding) {\n            this.parent.isDynamicData = true;\n            this.parent.treeGrid['isAddedFromGantt'] = true;\n            this.parent.isOnAdded = true;\n            var cAddedRecord_1 = [];\n            if (isNullOrUndefined(data)) {\n                this.validateTaskPosition(data, rowPosition, rowIndex, cAddedRecord_1);\n            }\n            else if (data instanceof Array) {\n                if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed']) {\n                    var addData = data;\n                    var addIndex = rowIndex;\n                    if (this.parent.viewType === 'ResourceView') {\n                        if (data[0]['position'] === 'below') {\n                            rowPosition = 'Below';\n                        }\n                        else if (data[0]['position'] === 'above') {\n                            rowPosition = 'Above';\n                        }\n                        else if (data[0]['position'] === 'child') {\n                            rowPosition = 'Child';\n                        }\n                        addIndex = this.parent.taskIds.indexOf(data[0]['id'].toString());\n                        addData = data[0]['data'];\n                    }\n                    this.validateTaskPosition(addData, rowPosition, addIndex, cAddedRecord_1);\n                }\n                else {\n                    for (var i = 0; i < data.length; i++) {\n                        this.validateTaskPosition(data[i], rowPosition, rowIndex, cAddedRecord_1);\n                    }\n                }\n            }\n            else if (typeof (data) === 'object') {\n                this.validateTaskPosition(data, rowPosition, rowIndex, cAddedRecord_1);\n            }\n            else {\n                return;\n            }\n            var args = {};\n            args = this.constructTaskAddedEventArgs(cAddedRecord_1, this.parent.editedRecords, 'beforeAdd');\n            if (!isNullOrUndefined(rowPosition)) {\n                args.rowPosition = rowPosition;\n            }\n            if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent']('Add')) {\n                if (this.parent.undoRedoModule['redoEnabled']) {\n                    this.parent.undoRedoModule['disableRedo']();\n                }\n                this.parent.undoRedoModule['createUndoCollection']();\n            }\n            this.parent.trigger('actionBegin', args, function (args) {\n                _this.parent.previousRecords = {};\n                if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                    _this.parent.showMaskRow();\n                }\n                else {\n                    _this.parent.showSpinner();\n                }\n                var tasks = _this.parent.taskFields;\n                var ganttData;\n                if (_this.parent.viewType === 'ResourceView') {\n                    if (args.data['childRecords'].length > 0) {\n                        ganttData = _this.parent.flatData[_this.parent.getTaskIds().indexOf('R' + args.data[tasks.id])];\n                    }\n                    else {\n                        ganttData = _this.parent.flatData[_this.parent.getTaskIds().indexOf('T' + args.data[tasks.id])];\n                    }\n                }\n                else {\n                    ganttData = _this.parent.getRecordByID(args.data[tasks.id]);\n                }\n                if (!isNullOrUndefined(ganttData)) {\n                    _this.validateUpdateValues(args.newTaskData, ganttData, true);\n                    _this.parent.dateValidationModule.calculateEndDate(ganttData);\n                    _this.parent.dataOperation.updateWidthLeft(ganttData);\n                    _this.parent.dataOperation.updateParentItems(ganttData);\n                }\n                if (!isNullOrUndefined(args.data[\"\" + tempTaskID])) {\n                    if (args.data[tempTaskID] !== args.data['ganttProperties']['taskId']) {\n                        for (var _i = 0, _b = Object.keys(_this.parent.ids); _i < _b.length; _i++) {\n                            var key = _b[_i];\n                            if (_this.parent.ids[key] === args.data['ganttProperties']['taskId'].toString()) {\n                                _this.parent.ids[key] = args.data[tempTaskID].toString();\n                                break;\n                            }\n                        }\n                        args.data['ganttProperties']['taskId'] = args.data[tempTaskID];\n                        args.newTaskData[tempTaskID] = args.data[tempTaskID];\n                        args.data['ganttProperties']['rowUniqueID'] = args.data[tempTaskID].toString();\n                    }\n                }\n                if (!args.cancel) {\n                    var record = {};\n                    if (isRemoteData(_this.parent.dataSource)) {\n                        var data_2 = _this.parent.dataSource;\n                        var updatedData_2 = {\n                            addedRecords: [args.newTaskData],\n                            changedRecords: args.modifiedTaskData\n                        };\n                        /* tslint:disable-next-line */\n                        var query = _this.parent.query instanceof Query ? _this.parent.query : new Query();\n                        var adaptor = data_2.adaptor;\n                        if (!(adaptor instanceof WebApiAdaptor || adaptor instanceof ODataAdaptor ||\n                            adaptor instanceof ODataV4Adaptor) || data_2.dataSource.batchUrl) {\n                            /* tslint:disable-next-line */\n                            var crud = data_2.saveChanges(updatedData_2, _this.parent.taskFields.id, null, query);\n                            crud.then(function (e) {\n                                if (e.addedRecords[0][_this.parent.taskFields.id].toString() !== args.data['ganttProperties']['taskId']) {\n                                    args.data['ganttProperties']['taskId'] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                                    args.newTaskData[tempTaskID] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                                    args.data['ganttProperties']['rowUniqueID'] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                                    _this.parent.ids.push(e.addedRecords[0][_this.parent.taskFields.id].toString());\n                                }\n                                var prevID = args.data.ganttProperties.taskId.toString();\n                                if (_this.parent.taskFields.id && !isNullOrUndefined(e.addedRecords[0][_this.parent.taskFields.id]) &&\n                                    e.addedRecords[0][_this.parent.taskFields.id].toString() === prevID) {\n                                    _this.parent.setRecordValue('taskId', e.addedRecords[0][_this.parent.taskFields.id], args.data.ganttProperties, true);\n                                    _this.parent.setRecordValue('taskData', e.addedRecords[0], args.data);\n                                    _this.parent.setRecordValue(_this.parent.taskFields.id, e.addedRecords[0][_this.parent.taskFields.id], args.data);\n                                    _this.parent.setRecordValue('rowUniqueID', e.addedRecords[0][_this.parent.taskFields.id].toString(), args.data.ganttProperties, true);\n                                    _this.updateClientDataFromServer(e, args);\n                                    var idsIndex = _this.parent.ids.indexOf(prevID);\n                                    if (idsIndex !== -1) {\n                                        _this.parent.ids[idsIndex] = e.addedRecords[0][_this.parent.taskFields.id].toString();\n                                    }\n                                }\n                                _this.updateNewRecord(cAddedRecord_1, args);\n                            }).catch(function (e) {\n                                _this.removeAddedRecord();\n                                _this.dmFailure(e, args);\n                                _this._resetProperties();\n                            });\n                        }\n                        else {\n                            var addedRecords = 'addedRecords';\n                            var insertCrud = data_2.insert(updatedData_2[addedRecords], null, query);\n                            insertCrud.then(function (e) {\n                                var addedRecords;\n                                if (!isNullOrUndefined(e[0])) {\n                                    addedRecords = e[0];\n                                }\n                                else {\n                                    addedRecords = updatedData_2['addedRecords'][0];\n                                }\n                                cAddedRecord_1.forEach(function (record) {\n                                    if (!isNullOrUndefined(record)) {\n                                        _this.updateEditedRecordFields(addedRecords, record);\n                                        _this.parent.dataOperation.updateTaskData(record);\n                                    }\n                                });\n                                _this.updateNewRecord(cAddedRecord_1, args);\n                            }).catch(function (e) {\n                                _this.removeAddedRecord();\n                                _this.dmFailure(e, args);\n                                _this._resetProperties();\n                            });\n                        }\n                    }\n                    else {\n                        if (_this.parent.viewType === 'ProjectView') {\n                            if ((rowPosition === 'Top' || rowPosition === 'Bottom') ||\n                                ((rowPosition === 'Above' || rowPosition === 'Below' || rowPosition === 'Child') || isNullOrUndefined(rowPosition) && !args.data.parentItem)) {\n                                if (args.data instanceof Array) {\n                                    _this.updateRealDataSource(args.data, rowPosition);\n                                }\n                                else {\n                                    var data_3 = [];\n                                    data_3.push(args.data);\n                                    _this.updateRealDataSource(data_3, rowPosition);\n                                    _this.parent.currentSelection = cAddedRecord_1[0];\n                                }\n                            }\n                        }\n                        else {\n                            var dataSource = isCountRequired(_this.parent) ? getValue('result', _this.parent.dataSource) :\n                                _this.parent.dataSource; // eslint-disable-line\n                            dataSource.push(args.data.taskData);\n                        }\n                        if (cAddedRecord_1.level === 0) {\n                            _this.parent.treeGrid.parentData.splice(0, 0, cAddedRecord_1);\n                        }\n                        _this.updateTreeGridUniqueID(cAddedRecord_1, 'add');\n                        if (_this.parent.viewType === 'ResourceView' && _this.parent.undoRedoModule && _this.parent.undoRedoModule['currentAction']) {\n                            var canDelete = false;\n                            if (args.data['hasChildRecords']) {\n                                canDelete = true;\n                            }\n                            else {\n                                if (args.data['parentItem']) {\n                                    var parentTask = _this.parent.getTaskByUniqueID(args.data['parentItem'].uniqueID);\n                                    if (parentTask.ganttProperties.taskName !== _this.parent.localeObj.getConstant('unassignedTask')) {\n                                        canDelete = true;\n                                    }\n                                }\n                            }\n                            if (_this.parent.taskIds.indexOf('R0') !== -1 && _this.parent.undoRedoModule && _this.parent.undoRedoModule['isUndoRedoPerformed'] && _this.parent.undoRedoModule['currentAction']['action'] === 'Delete'\n                                && canDelete) {\n                                var unassignedTask = _this.parent.flatData[_this.parent.taskIds.indexOf('R0')];\n                                var isPresent = unassignedTask.childRecords.filter(function (data) { return data.ganttProperties.taskId === args.data['ganttProperties'].taskId; });\n                                if (args.data['hasChildRecords']) {\n                                    isPresent = args.data['childRecords'];\n                                }\n                                var _loop_8 = function (j) {\n                                    if (unassignedTask.childRecords.length === 1) {\n                                        _this.parent.flatData.splice(_this.parent.taskIds.indexOf('R0'), 2);\n                                        _this.parent.ids.splice(_this.parent.taskIds.indexOf('R0'), 2);\n                                        _this.parent.taskIds.splice(_this.parent.taskIds.indexOf('R0'), 2);\n                                    }\n                                    else {\n                                        var index = _this.parent.taskIds.indexOf('T' + isPresent[j].ganttProperties.taskId);\n                                        var id_2 = 'T' + isPresent[j].ganttProperties.taskId;\n                                        var indexes = _this.parent.taskIds.reduce(function (a, e, i) {\n                                            if (e === id_2) {\n                                                a.push(i);\n                                            }\n                                            return a;\n                                        }, []);\n                                        index = indexes[indexes.length - 1];\n                                        _this.parent.taskIds.splice(index, 1);\n                                        _this.parent.flatData.splice(index, 1);\n                                        _this.parent.ids.splice(index, 1);\n                                    }\n                                };\n                                for (var j = 0; j < isPresent.length; j++) {\n                                    _loop_8(j);\n                                }\n                                if (unassignedTask && _this.parent.viewType === 'ResourceView') {\n                                    var isValid = _this.parent.flatData[_this.parent.taskIds.indexOf('R0') + 1];\n                                    if (!isValid) {\n                                        _this.parent.flatData.splice(_this.parent.taskIds.indexOf('R0'), 1);\n                                        _this.parent.ids.splice(_this.parent.taskIds.indexOf('R0'), 1);\n                                        _this.parent.taskIds.splice(_this.parent.taskIds.indexOf('R0'), 1);\n                                    }\n                                }\n                            }\n                        }\n                        _this.refreshNewlyAddedRecord(args, cAddedRecord_1);\n                        if (_this.parent.viewType === 'ResourceView' && _this.parent.taskFields.work && ganttData) {\n                            _this.parent.dataOperation.updateParentItems(ganttData, true);\n                        }\n                        _this.addNewUndoCollection(record, args);\n                        _this._resetProperties();\n                    }\n                    _this.parent.isOnAdded = false;\n                }\n                else {\n                    _this.removeAddedRecord();\n                    _this.reUpdatePreviousRecords();\n                    _this._resetProperties();\n                }\n            });\n        }\n    };\n    Edit.prototype.createNewRecord = function () {\n        var tempRecord = {};\n        var ganttColumns = this.parent.ganttColumns;\n        var taskSettingsFields = this.parent.taskFields;\n        var taskId = this.parent.editModule.getNewTaskId();\n        for (var i = 0; i < ganttColumns.length; i++) {\n            var fieldName = ganttColumns[i].field;\n            if (fieldName === taskSettingsFields.id) {\n                tempRecord[fieldName] = taskId;\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.startDate) {\n                if (isNullOrUndefined(tempRecord[taskSettingsFields.endDate])) {\n                    tempRecord[fieldName] = this.parent.editModule.dialogModule.getMinimumStartDate();\n                }\n                else {\n                    tempRecord[fieldName] = new Date(tempRecord[taskSettingsFields.endDate]);\n                }\n                if (this.parent.timezone) {\n                    tempRecord[fieldName] = this.parent.dateValidationModule.remove(tempRecord[fieldName], this.parent.timezone);\n                }\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.endDate) {\n                if (isNullOrUndefined(tempRecord[taskSettingsFields.startDate])) {\n                    tempRecord[fieldName] = this.parent.editModule.dialogModule.getMinimumStartDate();\n                }\n                else {\n                    tempRecord[fieldName] = new Date(tempRecord[taskSettingsFields.startDate]);\n                }\n                if (this.parent.timezone) {\n                    tempRecord[fieldName] = this.parent.dateValidationModule.remove(tempRecord[fieldName], this.parent.timezone);\n                }\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.duration) {\n                tempRecord[fieldName] = 1;\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.name) {\n                tempRecord[fieldName] = this.parent.editModule.dialogModule['localeObj'].getConstant('addDialogTitle') + ' ' + taskId;\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.progress) {\n                tempRecord[fieldName] = 0;\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.work) {\n                tempRecord[fieldName] = 0;\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.type || ganttColumns[i].field === 'taskType') {\n                tempRecord[fieldName] = this.parent.taskType;\n            }\n            else if (ganttColumns[i].field === taskSettingsFields.milestone) {\n                tempRecord[fieldName] = null;\n            }\n            else {\n                tempRecord[this.parent.ganttColumns[i].field] = '';\n            }\n        }\n        return tempRecord;\n    };\n    /**\n     * Method to validateTaskPosition.\n     *\n     * @param {Object | object[] } data - Defines the new data to add.\n     * @param {RowPosition} rowPosition - Defines the position of row.\n     * @param {number} rowIndex - Defines the row index.\n     * @param {IGanttData} cAddedRecord - Defines the single data to validate.\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.validateTaskPosition = function (data, rowPosition, rowIndex, cAddedRecord) {\n        var selectedRowIndex = isNullOrUndefined(rowIndex) || isNaN(parseInt(rowIndex.toString(), 10)) ?\n            this.parent.selectionModule ?\n                (this.parent.selectionSettings.mode === 'Row' || this.parent.selectionSettings.mode === 'Both') &&\n                    this.parent.selectionModule.selectedRowIndexes.length === 1 ?\n                    this.parent.selectionModule.selectedRowIndexes[0] :\n                    this.parent.selectionSettings.mode === 'Cell' &&\n                        this.parent.selectionModule.getSelectedRowCellIndexes().length === 1 ?\n                        this.parent.selectionModule.getSelectedRowCellIndexes()[0].rowIndex : null : null : rowIndex;\n        this.addRowSelectedItem = isNullOrUndefined(selectedRowIndex) ? null : this.parent.updatedRecords[selectedRowIndex];\n        rowPosition = isNullOrUndefined(rowPosition) ? this.parent.editSettings.newRowPosition : rowPosition;\n        data = isNullOrUndefined(data) ? this.createNewRecord() : data;\n        if (((isNullOrUndefined(selectedRowIndex) || selectedRowIndex < 0 ||\n            isNullOrUndefined(this.addRowSelectedItem)) && (rowPosition === 'Above'\n            || rowPosition === 'Below'\n            || rowPosition === 'Child')) || !rowPosition || (rowPosition !== 'Above'\n            && rowPosition !== 'Below'\n            && rowPosition !== 'Child' && rowPosition !== 'Top' &&\n            rowPosition !== 'Bottom')) {\n            rowPosition = 'Top';\n        }\n        var level = 0;\n        var parentItem;\n        switch (rowPosition) {\n            case 'Top':\n            case 'Bottom':\n                if (this.parent.viewType === 'ResourceView') {\n                    level = 1;\n                }\n                else {\n                    level = 0;\n                }\n                break;\n            case 'Above':\n            case 'Below':\n                level = this.addRowSelectedItem.level;\n                parentItem = this.parent.getParentTask(this.addRowSelectedItem.parentItem);\n                break;\n            case 'Child':\n                level = this.addRowSelectedItem.level + 1;\n                parentItem = this.addRowSelectedItem;\n                break;\n        }\n        if (!this.parent.undoRedoModule || !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            this.prepareNewlyAddedData(data, rowPosition);\n        }\n        var AddRecord = (this.updateNewlyAddedDataBeforeAjax(data, level, rowPosition, parentItem, rowIndex));\n        cAddedRecord.push(AddRecord);\n    };\n    Edit.prototype.updateRowIndex = function () {\n        var treeGrid = this.parent.treeGrid;\n        var currentViewData = this.parent.currentViewData;\n        var rowCount = currentViewData.length;\n        for (var index = 0; index < rowCount; index++) {\n            var row = treeGrid.getRowByIndex(index);\n            if (row) {\n                var rowIndex = Number(row.getAttribute('data-rowindex'));\n                currentViewData[index].index = rowIndex;\n                if (currentViewData[index].parentItem && currentViewData[index].parentItem.taskId) {\n                    var parentRecord = this.parent.getRecordByID(currentViewData[index].parentItem.taskId);\n                    currentViewData[index].parentItem.index = parentRecord.index;\n                    currentViewData[index].parentItem.level = parentRecord.level;\n                }\n            }\n        }\n    };\n    Edit.prototype.updateNewRecord = function (cAddedRecord, args) {\n        var _this = this;\n        cAddedRecord.forEach(function (record) {\n            if (record.level === 0) {\n                _this.parent.treeGrid.parentData.splice(0, 0, record);\n                var tempData = getValue('dataOperation.dataArray', _this.parent);\n                tempData.splice(0, 0, record.taskData);\n            }\n            _this.updateTreeGridUniqueID(record, 'add');\n        });\n        this.updateTreeGridUniqueID(cAddedRecord, 'add');\n        this.refreshNewlyAddedRecord(args, cAddedRecord);\n        var objCollection = {};\n        this.addNewUndoCollection(objCollection, args);\n        this._resetProperties();\n    };\n    /**\n     * Method to reset the flag after adding new record\n     *\n     * @returns {void} .\n     */\n    Edit.prototype._resetProperties = function () {\n        this.parent.isOnEdit = false;\n        this.parent.hideSpinner();\n        this.addRowSelectedItem = null;\n        this.newlyAddedRecordBackup = null;\n        this.isBreakLoop = false;\n        this.parent.element.tabIndex = 0;\n        this.parent.initiateEditAction(false);\n    };\n    /**\n     * Method to update unique id collection in TreeGrid\n     *\n     * @param {IGanttData} data .\n     * @param {string} action .\n     * @returns {void} .\n     */\n    Edit.prototype.updateTreeGridUniqueID = function (data, action) {\n        if (action === 'add') {\n            setValue('uniqueIDCollection.' + data.uniqueID, data, this.parent.treeGrid);\n        }\n        else if (action === 'delete') {\n            deleteObject(getValue('uniqueIDCollection', this.parent.treeGrid), data.uniqueID);\n        }\n    };\n    Edit.prototype.refreshNewlyAddedRecord = function (args, cAddedRecord) {\n        if (this.parent.selectionModule && this.parent.allowSelection &&\n            (this.parent.selectionSettings.mode === 'Row' || this.parent.selectionSettings.mode === 'Both')) {\n            this.parent.staticSelectedRowIndex = this.parent.currentViewData.indexOf(args.data);\n        }\n        if (this.parent.timelineSettings.updateTimescaleView) {\n            var tempArray = [];\n            if (args.modifiedRecords.length > 0) {\n                tempArray = args.data.length > 0 ?\n                    extend([], [], args.data, true) : [args.data]; // eslint-disable-next-line\n                tempArray.push.apply(tempArray, args.modifiedRecords);\n            }\n            else {\n                tempArray = args.data.length > 0 ?\n                    extend([], [], args.data, true) : [args.data];\n            }\n            this.parent.timelineModule.updateTimeLineOnEditing([tempArray], args.action);\n        }\n        this.addSuccess(args);\n        args = this.constructTaskAddedEventArgs(cAddedRecord, args.modifiedRecords, 'add');\n        if (this.dialogModule.isAddNewResource && !this.parent.isEdit && this.parent.taskFields.work) {\n            this.parent.dataOperation.updateWorkWithDuration(cAddedRecord[0]);\n        }\n        this.updateRowIndex();\n        this.parent.trigger('actionComplete', args);\n        if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n            this.parent.hideMaskRow();\n        }\n        else {\n            this.parent.hideSpinner();\n        }\n        if (this.dialogModule.dialog && !this.dialogModule.dialogObj.isDestroyed) {\n            this.dialogModule.dialogObj.hide();\n        }\n        this.dialogModule.dialogClose();\n        if (this.parent.viewType === 'ResourceView') {\n            if (cAddedRecord.length > 1) {\n                for (var i = 0; i < cAddedRecord.length; i++) {\n                    args.data[i].ganttProperties.sharedTaskUniqueIds.push(args.data[i]\n                        .ganttProperties.rowUniqueID);\n                    if (args.data[i].ganttProperties.resourceInfo) {\n                        // if ((args.data[i] as IGanttData).ganttProperties.resourceInfo.length > 1) {\n                        var resources = extend([], [], args.data[i].ganttProperties.resourceInfo, true);\n                        resources.splice(0, 1);\n                        this.updateResoures([], resources, args.data[i]);\n                        // }\n                    }\n                    else {\n                        if (!this.parent.undoRedoModule || (this.parent.undoRedoModule && !args.data[i]['hasChildRecords'] && this.parent.undoRedoModule['isUndoRedoPerformed'] || !this.parent.undoRedoModule['isUndoRedoPerformed'])) {\n                            this.removeChildRecord(args.data[i]);\n                            this.parent.editModule.checkWithUnassignedTask(args.data[i]);\n                        }\n                    }\n                    for (var k = 0; k < this.updateParentRecords.length; k++) {\n                        this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n                    }\n                    this.updateParentRecords = [];\n                }\n            }\n            else {\n                args.data.ganttProperties.sharedTaskUniqueIds.push(args.data.ganttProperties.rowUniqueID);\n                // eslint-disable-next-line\n                if (args.data.ganttProperties.resourceInfo && args.data.ganttProperties.resourceInfo.length) {\n                    if (args.data.ganttProperties.resourceInfo.length > 1) {\n                        // eslint-disable-next-line\n                        var resources = extend([], [], args.data.ganttProperties.resourceInfo, true);\n                        resources.splice(0, 1);\n                        this.updateResoures([], resources, args.data);\n                    }\n                }\n                else {\n                    if (!this.parent.undoRedoModule || (this.parent.undoRedoModule && !args.data['hasChildRecords'] && this.parent.undoRedoModule['isUndoRedoPerformed'] || !this.parent.undoRedoModule['isUndoRedoPerformed'])) {\n                        this.removeChildRecord(args.data);\n                        this.parent.editModule.checkWithUnassignedTask(args.data);\n                    }\n                }\n                for (var k = 0; k < this.updateParentRecords.length; k++) {\n                    this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n                }\n                this.updateParentRecords = [];\n            }\n        }\n    };\n    /**\n     *\n     * @returns {void} .\n     * @private\n     */\n    Edit.prototype.removeAddedRecord = function () {\n        var flatRecords = this.parent.flatData;\n        var currentViewData = this.parent.currentViewData;\n        var ids = this.parent.ids;\n        var flatRecordsIndex = flatRecords.indexOf(this.newlyAddedRecordBackup);\n        var currentViewDataIndex = currentViewData.indexOf(this.newlyAddedRecordBackup);\n        var idsIndex = ids.indexOf(this.newlyAddedRecordBackup.ganttProperties.rowUniqueID.toString());\n        deleteObject(this.parent.previousRecords, flatRecords[flatRecordsIndex].uniqueID);\n        if (this.newlyAddedRecordBackup.parentItem) {\n            var parentItem = this.parent.getParentTask(this.newlyAddedRecordBackup.parentItem);\n            var parentIndex = parentItem.childRecords.indexOf(this.newlyAddedRecordBackup);\n            parentItem.childRecords.splice(parentIndex, 1);\n        }\n        flatRecords.splice(flatRecordsIndex, 1);\n        currentViewData.splice(currentViewDataIndex, 1);\n        ids.splice(idsIndex, 1);\n    };\n    Edit.prototype.getPrevRecordIndex = function () {\n        var prevRecord = this.parent.updatedRecords[this.parent.selectionModule.getSelectedRowIndexes()[0] - 1];\n        var selectedRecord = this.parent.selectionModule.getSelectedRecords()[0];\n        var parent = this.parent.getRootParent(prevRecord, selectedRecord.level);\n        var prevIndex = this.parent.updatedRecords.indexOf(parent);\n        return prevIndex;\n    };\n    /**\n     * indent a selected record\n     *\n     * @returns {void} .\n     */\n    Edit.prototype.indent = function () {\n        var index = this.parent.selectedRowIndex;\n        var isSelected = this.parent.selectionModule ? this.parent.selectionModule.selectedRowIndexes.length === 1 ||\n            this.parent.selectionModule.getSelectedRowCellIndexes().length === 1 ? true : false : false;\n        var dropIndex;\n        var prevRecord = this.parent.updatedRecords[this.parent.selectionModule.getSelectedRowIndexes()[0] - 1];\n        var selectedRecord = this.parent.selectionModule.getSelectedRecords()[0];\n        if (!this.parent.editSettings.allowEditing || index === 0 || index === -1 || !isSelected ||\n            this.parent.viewType === 'ResourceView' || !isNullOrUndefined(this.parent.updatedRecords[index]) && this.parent.updatedRecords[index].level - prevRecord.level === 1) {\n            return;\n        }\n        else {\n            if (prevRecord.level - selectedRecord.level === 0) {\n                dropIndex = this.parent.selectionModule.getSelectedRowIndexes()[0] - 1;\n            }\n            else {\n                dropIndex = this.getPrevRecordIndex();\n            }\n            this.indentOutdentRow([this.parent.selectionModule.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n    };\n    /**\n     * To perform outdent operation for selected row\n     *\n     * @returns {void} .\n     */\n    Edit.prototype.outdent = function () {\n        var index = this.parent.selectionModule.getSelectedRowIndexes()[0];\n        var dropIndex;\n        var isSelected = this.parent.selectionModule ? this.parent.selectionModule.selectedRowIndexes.length === 1 ||\n            this.parent.selectionModule.getSelectedRowCellIndexes().length === 1 ? true : false : false;\n        if (!this.parent.editSettings.allowEditing || index === -1 || index === 0 || !isSelected ||\n            this.parent.viewType === 'ResourceView' || this.parent.updatedRecords[index].level === 0) {\n            return;\n        }\n        else {\n            var thisParent = this.parent.getTaskByUniqueID(this.parent.selectionModule.getSelectedRecords()[0].parentItem.uniqueID);\n            dropIndex = this.parent.updatedRecords.indexOf(thisParent);\n            this.indentOutdentRow([index], dropIndex, 'below');\n        }\n    };\n    Edit.prototype.indentOutdentRow = function (fromIndexes, toIndex, pos) {\n        var _this = this;\n        // eslint-disable-next-line\n        if (fromIndexes[0] !== toIndex && pos === 'above' || 'below' || 'child') {\n            if (pos === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (pos === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (pos === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var action = void 0;\n            var record = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']) {\n                    if (this.parent.undoRedoModule['currentAction']['modifiedRecord']) {\n                        record[i] = this.parent.undoRedoModule['currentAction']['modifiedRecord'][i].data;\n                    }\n                    else {\n                        record[i] = this.parent.undoRedoModule['currentAction']['data'][i];\n                    }\n                }\n                else {\n                    record[i] = this.parent.updatedRecords[fromIndexes[i]];\n                }\n            }\n            var isByMethod_1 = true;\n            var args_1 = {\n                data: record,\n                dropIndex: toIndex,\n                dropPosition: this.dropPosition\n            };\n            if (this.dropPosition === 'middleSegment') {\n                action = 'indenting';\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                action = 'outdenting';\n            }\n            var actionArgs = {\n                action: action,\n                data: record[0],\n                cancel: false\n            };\n            this.parent.trigger('actionBegin', actionArgs, function (actionArg) {\n                if (!isNullOrUndefined(_this.parent.loadingIndicator) && _this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n                    _this.parent.showMaskRow();\n                }\n                else {\n                    _this.parent.showSpinner();\n                }\n                if (!actionArg.cancel) {\n                    _this.reArrangeRows(args_1, isByMethod_1);\n                }\n                else {\n                    return;\n                }\n            });\n        }\n        else {\n            return;\n        }\n    };\n    Edit.prototype.reArrangeRows = function (args, isByMethod) {\n        var _this = this;\n        this.dropPosition = args.dropPosition;\n        this.parent['oldRecords'] = [];\n        this.parent['oldRecords'] = extend([], [], args.data, true);\n        if (args.dropPosition !== 'Invalid' && this.parent.editModule) {\n            var obj = this.parent;\n            var draggedRec = void 0;\n            this.droppedRecord = obj.updatedRecords[args.dropIndex];\n            var action = args.dropPosition === 'middleSegment' ? 'Indent' : 'Outdent';\n            if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent['isUndoRedoItemPresent'](action)) {\n                var record = {};\n                record['action'] = action;\n                record['modifiedRecord'] = [];\n                record['selectedRowIndexes'] = extend([], [], this.parent.selectionModule.selectedRowIndexes, true);\n                this.parent.undoRedoModule['findPosition'](extend([], [], [args.data], true)[0], record, 'modifiedRecord');\n                record['droppedRecord'] = extend([], [], this.droppedRecord, true);\n                if (this.parent.undoRedoModule['redoEnabled']) {\n                    this.parent.undoRedoModule['redoEnabled'] = false;\n                    this.parent.undoRedoModule['getUndoCollection'] = [];\n                    this.parent.undoRedoModule['getRedoCollection'] = [];\n                    if (this.parent.toolbarModule) {\n                        this.parent.toolbarModule.enableItems([this.parent.controlId + '_redo'], false);\n                    }\n                    this.parent.undoRedoModule['getUndoCollection'][0] = [];\n                }\n                this.parent.undoRedoModule['createUndoCollection']();\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = record;\n            }\n            var dragRecords = [];\n            var droppedRec = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var c = 0;\n            var dLength = dragRecords.length;\n            for (var i = 0; i < dLength; i++) {\n                this.parent.isOnEdit = true;\n                draggedRec = dragRecords[i];\n                this.draggedRecord = draggedRec;\n                if (this.dropPosition !== 'Invalid') {\n                    if (isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRec);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRec.hasChildRecords) {\n                            if (this.parent.taskFields.parentID && this.ganttData.length > 0) {\n                                this.ganttData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                            this.parent.ids.splice(recordIndex1 + 1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n                        }\n                        else {\n                            c = this.parent.editModule.getChildCount(droppedRec, 0);\n                            if (this.parent.taskFields.parentID && this.ganttData.length > 0) {\n                                this.ganttData.splice(recordIndex1 + c + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + c + 1, 0, this.draggedRecord);\n                            this.parent.ids.splice(recordIndex1 + c + 1, 0, this.draggedRecord.ganttProperties.rowUniqueID.toString());\n                            var idIndex = this.parent.ids.indexOf(this.draggedRecord[this.parent.taskFields.id].toString());\n                            if (idIndex !== recordIndex1 + c + 1) {\n                                this.parent.ids.splice(idIndex, 1);\n                                this.parent.ids.splice(recordIndex1 + c + 1, 0, this.draggedRecord[this.parent.taskFields.id].toString());\n                            }\n                        }\n                        this.parent.setRecordValue('parentItem', this.treeGridData[recordIndex1].parentItem, draggedRec);\n                        this.parent.setRecordValue('parentUniqueID', this.treeGridData[recordIndex1].parentUniqueID, draggedRec);\n                        this.parent.setRecordValue('level', this.treeGridData[recordIndex1].level, draggedRec);\n                        if (draggedRec.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRec, level);\n                            this.updateChildRecord(draggedRec, recordIndex1 + c + 1);\n                        }\n                        if (droppedRec.parentItem) {\n                            var record = this.parent.getParentTask(droppedRec.parentItem).childRecords;\n                            var childRecords = record;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRec) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRec);\n                        }\n                    }\n                    if (this.dropPosition === 'middleSegment') {\n                        this.dropMiddle(recordIndex1);\n                    }\n                    if (!isNullOrUndefined(draggedRec.parentItem && this.updateParentRecords.indexOf(draggedRec.parentItem) !== -1)) {\n                        this.updateParentRecords.push(this.parent.getTaskByUniqueID(draggedRec.parentItem.uniqueID));\n                    }\n                }\n                if (isNullOrUndefined(draggedRec.parentItem)) {\n                    var parentRecords = this.parent.treeGrid.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRec);\n                    }\n                }\n                this.refreshDataSource();\n            }\n            if (this.dropPosition === 'middleSegment') {\n                if (!isNullOrUndefined(droppedRec.ganttProperties.predecessor)) {\n                    var len = droppedRec.ganttProperties.predecessor.length;\n                    for (var count = len - 1; count >= 0; count--) {\n                        if (!isNullOrUndefined(droppedRec.ganttProperties.predecessor)) {\n                            var fromRecord = this.parent.getRecordByID(droppedRec.ganttProperties.predecessor[count].from);\n                            var toRecord = this.parent.getRecordByID(droppedRec.ganttProperties.predecessor[count].to);\n                            var validPredecessor = this.parent.connectorLineEditModule.validateParentPredecessor(fromRecord, toRecord);\n                            if (droppedRec.ganttProperties.predecessor && (!validPredecessor || !this.parent.allowParentDependency)) {\n                                this.parent.editModule.removePredecessorOnDelete(droppedRec);\n                                droppedRec.ganttProperties.predecessor.splice(count, 1);\n                                droppedRec.ganttProperties.predecessorsName = null;\n                                droppedRec[this.parent.taskFields.dependency] = null;\n                                droppedRec.taskData[this.parent.taskFields.dependency] = null;\n                            }\n                        }\n                    }\n                }\n                if (droppedRec.ganttProperties.isMilestone) {\n                    this.parent.setRecordValue('isMilestone', false, droppedRec.ganttProperties, true);\n                    if (!isNullOrUndefined(droppedRec.taskData[this.parent.taskFields.milestone])) {\n                        if (droppedRec.taskData[this.parent.taskFields.milestone] === true) {\n                            droppedRec.taskData[this.parent.taskFields.milestone] = false;\n                        }\n                    }\n                }\n            }\n            for (var k = 0; k < this.updateParentRecords.length; k++) {\n                this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n            }\n            this.parent.editedRecords.forEach(function (record) {\n                _this.isFirstCall = true;\n                _this.parent.predecessorModule.validatePredecessor(record, [], '');\n            });\n            for (var k = 0; k < this.updateParentRecords.length; k++) {\n                this.parent.dataOperation.updateParentItems(this.updateParentRecords[k]);\n            }\n            this.updateParentRecords = [];\n            this.parent.isOnEdit = false;\n        }\n        this.canReset = true;\n        this.refreshRecord(args);\n    };\n    /**\n     * @returns {void} .\n     * @param {RowDropEventArgs} args .\n     * @param {boolean} isDrag .\n     * @private\n     */\n    Edit.prototype.refreshRecord = function (args, isDrag) {\n        var _this = this;\n        if (isRemoteData(this.parent.dataSource)) {\n            var data = this.parent.dataSource;\n            var updatedData = {\n                changedRecords: getTaskData(this.parent.editedRecords, null, null, this.parent)\n            };\n            var queryValue = this.parent.query instanceof Query ? this.parent.query : new Query();\n            var crud = null;\n            var adaptor = data.adaptor;\n            if (!(adaptor instanceof WebApiAdaptor && adaptor instanceof ODataAdaptor) || data.dataSource.batchUrl) {\n                crud = data.saveChanges(updatedData, this.parent.taskFields.id, null, queryValue);\n            }\n            else {\n                var changedRecords = 'changedRecords';\n                crud = data.update(this.parent.taskFields.id, updatedData[changedRecords], null, queryValue);\n            }\n            crud.then(function (e) { return _this.indentSuccess(e, args, isDrag); })\n                .catch(function (e) { return _this.indentFailure(e); });\n        }\n        else {\n            this.indentOutdentSuccess(args, isDrag);\n        }\n    };\n    Edit.prototype.indentSuccess = function (e, args, isDrag) {\n        this.updateEditedFields(e);\n        this.indentOutdentSuccess(args, isDrag);\n    };\n    Edit.prototype.indentFailure = function (e) {\n        this.parent.trigger('actionFailure', { error: e });\n    };\n    Edit.prototype.indentOutdentSuccess = function (args, isDrag) {\n        this.parent.treeGrid.parentData = [];\n        if (this.parent.treeGrid.editModule) {\n            this.parent.treeGrid.editModule['isOnBatch'] = false;\n        }\n        this.parent.treeGrid.refresh();\n        if (this.parent.enableImmutableMode) {\n            this.refreshRecordInImmutableMode(args.data, isDrag);\n            this.parent.chartRowsModule.refreshRecords(this.parent.editedRecords);\n        }\n        if (isDrag) {\n            args.requestType = 'rowDropped';\n        }\n        else {\n            if (this.dropPosition === 'middleSegment') {\n                args.requestType = 'indented';\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                args.requestType = 'outdented';\n            }\n        }\n        args.modifiedRecords = this.parent.editedRecords;\n        if (this.parent.timezone) {\n            for (var i = 0; i < args.modifiedRecords.length; i++) {\n                updateDates(args.modifiedRecords[i], this.parent);\n            }\n        }\n        if (this.canReset) {\n            this.parent.previousRecords = {};\n        }\n        this.canReset = false;\n        this.parent.trigger('actionComplete', args);\n        if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n            this.parent.hideMaskRow();\n        }\n        else {\n            this.parent.hideSpinner();\n        }\n        if (this.parent.rowDragAndDropModule) {\n            this.parent.rowDragAndDropModule['draggedRecord'] = null;\n        }\n    };\n    Edit.prototype.refreshDataSource = function () {\n        var draggedRec = this.draggedRecord;\n        var droppedRec = this.droppedRecord;\n        var proxy = this.parent;\n        var tempData;\n        var indx;\n        if (this.parent.dataSource instanceof DataManager) {\n            tempData = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            tempData = proxy.dataSource;\n        }\n        if (tempData.length > 0 && (!isNullOrUndefined(droppedRec) && !droppedRec.parentItem)) {\n            for (var i = 0; i < Object.keys(tempData).length; i++) {\n                if (tempData[i][this.parent.taskFields.child] === droppedRec.taskData[this.parent.taskFields.child]) {\n                    indx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.taskFields.parentID) {\n                    tempData.splice(indx, 0, draggedRec.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.taskFields.parentID) {\n                    tempData.splice(indx + 1, 0, draggedRec.taskData);\n                }\n            }\n        }\n        else if (!this.parent.taskFields.parentID && (!isNullOrUndefined(droppedRec) && droppedRec.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var rowPos = this.dropPosition === 'topSegment' ? 'Above' : 'Below';\n                this.parent.editModule.addRowSelectedItem = droppedRec;\n                var dragRecord = [];\n                if (!Array.isArray(draggedRec)) {\n                    dragRecord[0] = draggedRec;\n                }\n                else {\n                    dragRecord = draggedRec;\n                }\n                this.parent.editModule.updateRealDataSource(dragRecord, rowPos);\n                delete this.parent.editModule.addRowSelectedItem;\n            }\n        }\n        if (this.parent.taskFields.parentID) {\n            if (draggedRec.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRec[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.parentID];\n                    draggedRec.taskData[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.parentID];\n                    draggedRec.ganttProperties['parentId'] = droppedRec[this.parent.taskFields.parentID];\n                }\n                else {\n                    draggedRec[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.id];\n                    draggedRec.taskData[this.parent.taskFields.parentID] = droppedRec[this.parent.taskFields.id];\n                    draggedRec.ganttProperties['parentId'] = droppedRec[this.parent.taskFields.id];\n                }\n            }\n            else {\n                draggedRec[this.parent.taskFields.parentID] = null;\n                draggedRec.taskData[this.parent.taskFields.parentID] = null;\n                draggedRec.ganttProperties['parentId'] = null;\n            }\n        }\n    };\n    Edit.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager) {\n            this.ganttData = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            this.ganttData = isCountRequired(this.parent) ? getValue('result', this.parent.dataSource) :\n                this.parent.dataSource;\n        }\n        this.treeGridData = isCountRequired(this.parent) ?\n            getValue('result', this.parent.treeGrid.dataSource) : this.parent.treeGrid.dataSource;\n        var delRow = this.parent.getTaskByUniqueID(this.draggedRecord.uniqueID);\n        this.removeRecords(delRow);\n    };\n    Edit.prototype.updateIndentedChildRecords = function (indentedRecord) {\n        var createParentItem = {\n            uniqueID: indentedRecord.uniqueID,\n            expanded: indentedRecord.expanded,\n            level: indentedRecord.level,\n            index: indentedRecord.index,\n            taskId: indentedRecord.ganttProperties.rowUniqueID\n        };\n        for (var i = 0; i < indentedRecord.childRecords.length; i++) {\n            this.parent.setRecordValue('parentItem', createParentItem, indentedRecord.childRecords[i]);\n            this.parent.setRecordValue('parentUniqueID', indentedRecord.uniqueID, indentedRecord.childRecords[i]);\n        }\n        if (indentedRecord.hasChildRecords) {\n            indentedRecord = indentedRecord.childRecords;\n            for (var j = 0; j < indentedRecord['length']; j++) {\n                this.updateIndentedChildRecords(indentedRecord[j]);\n            }\n        }\n    };\n    Edit.prototype.dropMiddle = function (recordIndex1) {\n        var obj = this.parent;\n        var childRec;\n        var childRecordsLength;\n        if (this.parent.undoRedoModule && this.parent.undoRedoModule['isUndoRedoPerformed'] && this.parent.undoRedoModule['currentAction']['modifiedRecord']\n            && this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].position !== 'child') {\n            if (this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].position === 'above') {\n                childRecordsLength = this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].id.toString());\n            }\n            else if (this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].position === 'below') {\n                childRecordsLength = this.parent.ids.indexOf(this.parent.undoRedoModule['currentAction']['modifiedRecord'][0].id.toString()) + 1;\n            }\n        }\n        else {\n            childRec = this.parent.editModule.getChildCount(this.droppedRecord, 0);\n            childRecordsLength = (isNullOrUndefined(childRec) ||\n                childRec === 0) ? recordIndex1 + 1 :\n                childRec + recordIndex1 + 1;\n        }\n        if (this.dropPosition === 'middleSegment') {\n            if (obj.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n            }\n            this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            this.parent.ids.splice(childRecordsLength, 0, this.draggedRecord[this.parent.taskFields.id].toString());\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n                if (this.parent.enableImmutableMode) {\n                    var indentedRecord = this.draggedRecord;\n                    this.updateIndentedChildRecords(indentedRecord);\n                }\n            }\n            if (isNullOrUndefined(this.draggedRecord.parentItem &&\n                this.updateParentRecords.indexOf(this.draggedRecord.parentItem) !== -1)) {\n                this.updateParentRecords.push(this.draggedRecord.parentItem);\n            }\n        }\n    };\n    Edit.prototype.updateChildRecordLevel = function (record, levl) {\n        var length = 0;\n        var currentRec;\n        levl++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var j = 0; j < length; j++) {\n            currentRec = record.childRecords[j];\n            var parentData = void 0;\n            if (record.parentItem) {\n                var id = 'uniqueIDCollection';\n                parentData = this.parent.treeGrid[id][record.parentItem.uniqueID];\n            }\n            currentRec.level = record.parentItem ? parentData.level + levl : record.level + 1;\n            if (currentRec.hasChildRecords) {\n                levl--;\n                levl = this.updateChildRecordLevel(currentRec, levl);\n            }\n        }\n        return levl;\n    };\n    /* eslint-disable-next-line */\n    Edit.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRec;\n        var obj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRec = record.childRecords[i];\n            count++;\n            obj.flatData.splice(count, 0, currentRec);\n            this.parent.ids.splice(count, 0, currentRec.ganttProperties.rowUniqueID.toString());\n            if (obj.taskFields.parentID && this.ganttData.length > 0) {\n                this.ganttData.splice(count, 0, currentRec.taskData);\n            }\n            if (currentRec.hasChildRecords) {\n                count = this.updateChildRecord(currentRec, count);\n            }\n        }\n        return count;\n    };\n    Edit.prototype.removeRecords = function (record) {\n        var obj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager) {\n            dataSource = getValue('dataOperation.dataArray', this.parent);\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var delRow = record;\n        if (delRow) {\n            var flatParent = this.parent.getParentTask(delRow.parentItem);\n            if (delRow.parentItem) {\n                var childRecords = flatParent ? flatParent.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(delRow);\n                    flatParent.childRecords.splice(childIndex, 1);\n                    if (!this.parent.taskFields.parentID) {\n                        flatParent.taskData[this.parent.taskFields.child].splice(childIndex, 1);\n                    }\n                    // collection for updating parent record\n                    this.updateParentRecords.push(flatParent);\n                }\n            }\n            if (obj.taskFields.parentID) {\n                if (delRow.hasChildRecords && delRow.childRecords.length > 0) {\n                    this.removeChildItem(delRow);\n                }\n                var indx = void 0;\n                var ganttData = dataSource.length > 0 ?\n                    dataSource : this.parent.currentViewData;\n                for (var i = 0; i < ganttData.length; i++) {\n                    if (ganttData[i][this.parent.taskFields.id] === delRow.taskData[this.parent.taskFields.id]) {\n                        indx = i;\n                    }\n                }\n                if (indx !== -1) {\n                    if (dataSource.length > 0) {\n                        dataSource.splice(indx, 1);\n                    }\n                    var gridIndx = void 0;\n                    for (var i = 0; i < this.treeGridData.length; i++) {\n                        if (this.treeGridData[i][this.parent.taskFields.id] === delRow.taskData[this.parent.taskFields.id]) {\n                            gridIndx = i;\n                        }\n                    }\n                    this.treeGridData.splice(gridIndx, 1);\n                    this.parent.ids.splice(gridIndx, 1);\n                    if (this.parent.treeGrid.parentData.indexOf(delRow) !== -1) {\n                        this.parent.treeGrid.parentData.splice(this.parent.treeGrid.parentData.indexOf(delRow), 1);\n                    }\n                }\n            }\n            var recordIdx = this.treeGridData.indexOf(delRow);\n            if (!obj.taskFields.parentID) {\n                var deletedRecordCount = this.getChildCount(delRow, 0);\n                this.treeGridData.splice(recordIdx, deletedRecordCount + 1);\n                this.parent.ids.splice(recordIdx, deletedRecordCount + 1);\n                var parentIndex = this.ganttData.indexOf(delRow.taskData);\n                if (parentIndex !== -1) {\n                    this.ganttData.splice(parentIndex, 1);\n                    this.parent.treeGrid.parentData.splice(parentIndex, 1);\n                }\n            }\n            if (delRow.parentItem && flatParent && flatParent.childRecords && !flatParent.childRecords.length) {\n                this.parent.setRecordValue('expanded', false, flatParent);\n                this.parent.setRecordValue('hasChildRecords', false, flatParent);\n            }\n        }\n    };\n    Edit.prototype.removeChildItem = function (record) {\n        var currentRec;\n        var indx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRec = record.childRecords[i];\n            var data = void 0;\n            if (this.parent.dataSource instanceof DataManager) {\n                data = getValue('dataOperation.dataArray', this.parent);\n            }\n            else {\n                data = this.parent.dataSource;\n            }\n            for (var j = 0; j < data.length; j++) {\n                if (data[j][this.parent.taskFields.id] === currentRec.taskData[this.parent.taskFields.id]) {\n                    indx = j;\n                }\n            }\n            if (indx !== -1) {\n                if (data.length > 0) {\n                    data.splice(indx, 1);\n                }\n                var gridIndx = void 0;\n                for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                    if (this.treeGridData[i_2][this.parent.taskFields.id] === currentRec.taskData[this.parent.taskFields.id]) {\n                        gridIndx = i_2;\n                    }\n                }\n                this.treeGridData.splice(gridIndx, 1);\n                this.parent.ids.splice(gridIndx, 1);\n            }\n            if (currentRec.hasChildRecords) {\n                this.removeChildItem(currentRec);\n            }\n        }\n    };\n    Edit.prototype.recordLevel = function () {\n        var obj = this.parent;\n        var draggedRec = this.draggedRecord;\n        var droppedRec = this.droppedRecord;\n        var childItem = obj.taskFields.child;\n        if (!droppedRec.hasChildRecords) {\n            droppedRec.hasChildRecords = true;\n            if (!droppedRec.childRecords.length) {\n                droppedRec.childRecords = [];\n                if (!obj.taskFields.parentID && isNullOrUndefined(droppedRec.taskData[childItem])) {\n                    droppedRec.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRec);\n            delete parentItem.childRecords;\n            var createParentItem = {\n                uniqueID: parentItem.uniqueID,\n                expanded: parentItem.expanded,\n                level: parentItem.level,\n                index: parentItem.index,\n                taskId: parentItem.ganttProperties.rowUniqueID\n            };\n            this.parent.setRecordValue('parentItem', createParentItem, draggedRec);\n            this.parent.setRecordValue('parentUniqueID', droppedRec.uniqueID, draggedRec);\n            droppedRec.childRecords.splice(droppedRec.childRecords.length, 0, draggedRec);\n            if (!isNullOrUndefined(draggedRec) && !obj.taskFields.parentID &&\n                !isNullOrUndefined(droppedRec.taskData[childItem])) {\n                droppedRec.taskData[obj.taskFields.child].splice(droppedRec.childRecords.length, 0, draggedRec.taskData);\n            }\n            if (!isNullOrUndefined(droppedRec.ganttProperties.segments) && droppedRec.ganttProperties.segments.length > 0) {\n                droppedRec.ganttProperties.segments = null;\n                droppedRec.taskData[obj.taskFields.segments] = null;\n            }\n            if (!draggedRec.hasChildRecords) {\n                draggedRec.level = droppedRec.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRec.level = droppedRec.level + 1;\n                this.updateChildRecordLevel(draggedRec, level);\n            }\n            droppedRec.expanded = true;\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n"],"mappings":";;;;;;AAAA,IAAIA,QAAQ,GAAI,IAAI,IAAI,IAAI,CAACA,QAAQ,IAAK,YAAY;EAClDA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAASC,CAAC,EAAE;IACpC,KAAK,IAAIC,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEH,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;MACjDD,CAAC,GAAGG,SAAS,CAACF,CAAC,CAAC;MAChB,KAAK,IAAII,CAAC,IAAIL,CAAC,EAAE,IAAIH,MAAM,CAACS,SAAS,CAACC,cAAc,CAACC,IAAI,CAACR,CAAC,EAAEK,CAAC,CAAC,EAC3DN,CAAC,CAACM,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACnB;IACA,OAAON,CAAC;EACZ,CAAC;EACD,OAAOH,QAAQ,CAACa,KAAK,CAAC,IAAI,EAAEN,SAAS,CAAC;AAC1C,CAAC;AACD,SAASO,iBAAiB,EAAEC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,aAAa,QAAQ,sBAAsB;AAC9H,SAASC,WAAW,EAAEC,KAAK,EAAEC,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,sBAAsB;AACtG,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,UAAU,EAAEC,eAAe,EAAEC,WAAW,EAAEC,YAAY,EAAEC,QAAQ,EAAEC,eAAe,EAAEC,WAAW,QAAQ,eAAe;AAC9H,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,WAAW,EAAEC,iBAAiB,EAAEC,YAAY,QAAQ,2BAA2B;AACxF,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,QAAQ,EAAEC,IAAI,IAAIC,YAAY,QAAQ,0BAA0B;AACzE;AACA;AACA;AACA;AACA,IAAID,IAAI,GAAG,aAAe,YAAY;EAClC,SAASA,IAAIA,CAACE,MAAM,EAAE;IAClB,IAAI,CAACC,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,gBAAgB,GAAG,KAAK;IAC7B,IAAI,CAACC,uBAAuB,GAAG,KAAK;IACpC,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB;IACA,IAAI,CAACC,mBAAmB,GAAG,EAAE;IAC7B;IACA,IAAI,CAACC,aAAa,GAAG,KAAK;IAC1B,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB;AACR;AACA;IACQ,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACd,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACA,MAAM,CAACe,iBAAiB,CAACC,mBAAmB,GAAG,EAAE;IACtD,IAAI,IAAI,CAAChB,MAAM,CAACiB,YAAY,CAACC,YAAY,IAAI,IAAI,CAAClB,MAAM,CAACiB,YAAY,CAACE,IAAI,KAAK,MAAM,EAAE;MACnF,IAAI,CAACC,cAAc,GAAG,IAAI/B,QAAQ,CAAC,IAAI,CAACW,MAAM,CAAC;IACnD;IACA,IAAI,IAAI,CAACA,MAAM,CAACqB,UAAU,CAACC,UAAU,EAAE;MACnC,IAAI,CAACtB,MAAM,CAACuB,uBAAuB,GAAG,IAAI3B,iBAAiB,CAAC,IAAI,CAACI,MAAM,CAAC;IAC5E;IACA,IAAI,IAAI,CAACA,MAAM,CAACiB,YAAY,CAACO,WAAW,IAAK,IAAI,CAACxB,MAAM,CAACiB,YAAY,CAACC,YAAY,KAC7E,IAAI,CAAClB,MAAM,CAACiB,YAAY,CAACE,IAAI,KAAK,QAAQ,IAAI,IAAI,CAACnB,MAAM,CAACiB,YAAY,CAACE,IAAI,KAAK,MAAM,CAAE,EAAE;MAC3F,IAAI,CAACM,YAAY,GAAG,IAAIlC,UAAU,CAAC,IAAI,CAACS,MAAM,CAAC;IACnD;IACA,IAAI,IAAI,CAACA,MAAM,CAACiB,YAAY,CAACS,mBAAmB,EAAE;MAC9C,IAAI,CAACC,iBAAiB,GAAG,IAAIrC,WAAW,CAAC,IAAI,CAACU,MAAM,CAAC;IACzD;IACA,IAAI,IAAI,CAACA,MAAM,CAACiB,YAAY,CAACW,aAAa,EAAE;MACxC,IAAIlB,aAAa,GAAGnC,aAAa,CAAC,KAAK,EAAE;QACrCsD,EAAE,EAAE,IAAI,CAAC7B,MAAM,CAAC8B,OAAO,CAACD,EAAE,GAAG;MACjC,CAAC,CAAC;MACF,IAAI,CAAC7B,MAAM,CAAC8B,OAAO,CAACC,WAAW,CAACrB,aAAa,CAAC;MAC9C,IAAI,CAACsB,yBAAyB,CAAC,CAAC;IACpC;IACA,IAAI,CAAChC,MAAM,CAACiC,QAAQ,CAACC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1E,IAAI,CAACnC,MAAM,CAACiC,QAAQ,CAAChB,YAAY,CAACO,WAAW,GAAG,IAAI,CAACxB,MAAM,CAACiB,YAAY,CAACO,WAAW;IACpF,IAAI,CAACxB,MAAM,CAACiC,QAAQ,CAAChB,YAAY,CAACW,aAAa,GAAG,IAAI,CAAC5B,MAAM,CAACiB,YAAY,CAACW,aAAa;IACxF,IAAI,CAAC5B,MAAM,CAACiC,QAAQ,CAAChB,YAAY,CAACmB,uBAAuB,GAAG,IAAI,CAACpC,MAAM,CAACiB,YAAY,CAACmB,uBAAuB;IAC5G,IAAI,CAACpC,MAAM,CAACiC,QAAQ,CAAChB,YAAY,CAACoB,gBAAgB,GAAG,IAAI,CAACrC,MAAM,CAACiB,YAAY,CAACoB,gBAAgB;IAC9F,IAAI,IAAI,CAACrC,MAAM,CAACiB,YAAY,CAACE,IAAI,KAAK,QAAQ,EAAE;MAC5CtB,QAAQ,CAACyC,MAAM,CAACvC,YAAY,CAAC;IACjC;IACA,IAAI,CAACwC,0BAA0B,CAAC,CAAC;EACrC;EACAzC,IAAI,CAACjC,SAAS,CAAC2E,aAAa,GAAG,YAAY;IACvC,OAAO,MAAM;EACjB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI1C,IAAI,CAACjC,SAAS,CAAC0E,0BAA0B,GAAG,YAAY;IACpD,IAAIE,mBAAmB,GAAG,CAAC,IAAI,CAACzC,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE,IAAI,CAAC7B,MAAM,CAACqB,UAAU,CAACqB,QAAQ,EAAE,IAAI,CAAC1C,MAAM,CAACqB,UAAU,CAACsB,YAAY,EACtH,IAAI,CAAC3C,MAAM,CAACqB,UAAU,CAACuB,IAAI,EAAE,UAAU,CAAC;IAC5C,KAAK,IAAIpF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiF,mBAAmB,CAAC9E,MAAM,EAAEH,CAAC,EAAE,EAAE;MACjD,IAAI,CAACS,iBAAiB,CAACwE,mBAAmB,CAACjF,CAAC,CAAC,CAAC,IAAIiF,mBAAmB,CAACjF,CAAC,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;QACjF,IAAIkF,MAAM,GAAG,IAAI,CAAC7C,MAAM,CAAC8C,gBAAgB,CAACL,mBAAmB,CAACM,QAAQ,CAACvF,CAAC,CAACwF,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,IAAI,CAAChD,MAAM,CAACiD,cAAc,CAACC,eAAe,CAAC;QACtI,IAAIL,MAAM,EAAE;UACR,IAAIA,MAAM,CAACM,KAAK,KAAK,IAAI,CAACnD,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE;YAC5C,IAAI,CAACuB,wBAAwB,CAACP,MAAM,CAAC;UACzC,CAAC,MACI,IAAIA,MAAM,CAACM,KAAK,KAAK,IAAI,CAACnD,MAAM,CAACqB,UAAU,CAACqB,QAAQ,IAAIzE,iBAAiB,CAAC4E,MAAM,CAACQ,IAAI,CAAC,EAAE;YACzF,IAAI,CAACC,6BAA6B,CAACT,MAAM,CAAC;UAC9C,CAAC,MACI,IAAIA,MAAM,CAACM,KAAK,KAAK,IAAI,CAACnD,MAAM,CAACqB,UAAU,CAACsB,YAAY,EAAE;YAC3D,IAAI,CAACY,0BAA0B,CAACV,MAAM,CAAC;UAC3C,CAAC,MACI,IAAIA,MAAM,CAACM,KAAK,KAAK,IAAI,CAACnD,MAAM,CAACqB,UAAU,CAACuB,IAAI,IAAIC,MAAM,CAACM,KAAK,KAAK,UAAU,EAAE;YAClF,IAAI,CAACK,0BAA0B,CAACX,MAAM,CAAC;UAC3C;QACJ;MACJ;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI/C,IAAI,CAACjC,SAAS,CAACuF,wBAAwB,GAAG,UAAUP,MAAM,EAAE;IACxD,IAAIY,SAAS,GAAG;MACZC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,IAAI,CAAC5D,MAAM,CAAC4D,SAAS;MAChCC,qBAAqB,EAAE,IAAI;MAC3BC,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE;IACpB,CAAC;IACD,IAAI,CAACC,gBAAgB,CAACnB,MAAM,EAAEY,SAAS,CAAC;EAC5C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI3D,IAAI,CAACjC,SAAS,CAACyF,6BAA6B,GAAG,UAAUT,MAAM,EAAE;IAC7D,IAAIY,SAAS,GAAG;MACZC,GAAG,EAAE,CAAC;MACNE,SAAS,EAAE,IAAI,CAAC5D,MAAM,CAAC4D,SAAS;MAChCD,QAAQ,EAAE,CAAC;MACXE,qBAAqB,EAAE,IAAI;MAC3BI,GAAG,EAAE,GAAG;MACRH,MAAM,EAAE;IACZ,CAAC;IACD,IAAI,CAACE,gBAAgB,CAACnB,MAAM,EAAEY,SAAS,CAAC;EAC5C,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI3D,IAAI,CAACjC,SAAS,CAACmG,gBAAgB,GAAG,UAAUnB,MAAM,EAAEY,SAAS,EAAE;IAC3D,IAAIxF,iBAAiB,CAAC4E,MAAM,CAACQ,IAAI,CAAC,EAAE;MAChCR,MAAM,CAACQ,IAAI,GAAG,CAAC,CAAC;MAChBR,MAAM,CAACQ,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC;IAC3B,CAAC,MACI,IAAIjG,iBAAiB,CAAC4E,MAAM,CAACQ,IAAI,CAACa,MAAM,CAAC,EAAE;MAC5CrB,MAAM,CAACQ,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC;IAC3B;IACA/F,MAAM,CAACsF,SAAS,EAAEZ,MAAM,CAACQ,IAAI,CAACa,MAAM,CAAC;IACrCrB,MAAM,CAACQ,IAAI,CAACa,MAAM,GAAGT,SAAS;IAC9B,IAAIU,WAAW,GAAG,IAAI,CAACnE,MAAM,CAAC8C,gBAAgB,CAACD,MAAM,CAACM,KAAK,EAAE,IAAI,CAACnD,MAAM,CAACoE,YAAY,CAAC;IACtFD,WAAW,CAACd,IAAI,GAAGR,MAAM,CAACQ,IAAI;EAClC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIvD,IAAI,CAACjC,SAAS,CAAC0F,0BAA0B,GAAG,UAAUV,MAAM,EAAE;IAC1D,IAAI,IAAI,CAAC7C,MAAM,CAACiB,YAAY,CAACC,YAAY,IAAIjD,iBAAiB,CAAC4E,MAAM,CAACQ,IAAI,CAAC,IAAI,IAAI,CAACrD,MAAM,CAACiB,YAAY,CAACE,IAAI,KAAK,MAAM,EAAE;MACrH0B,MAAM,CAACwB,QAAQ,GAAG,cAAc;MAChCxB,MAAM,CAACQ,IAAI,GAAG,IAAI,CAACiB,iBAAiB,CAAC,CAAC;MACtC,IAAIH,WAAW,GAAG,IAAI,CAACnE,MAAM,CAAC8C,gBAAgB,CAACD,MAAM,CAACM,KAAK,EAAE,IAAI,CAACnD,MAAM,CAACoE,YAAY,CAAC;MACtFD,WAAW,CAACE,QAAQ,GAAG,cAAc;MACrCF,WAAW,CAACd,IAAI,GAAGR,MAAM,CAACQ,IAAI;IAClC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIvD,IAAI,CAACjC,SAAS,CAACyG,iBAAiB,GAAG,YAAY;IAC3C,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,gBAAgB,GAAG,IAAI,CAACxE,MAAM,CAACyE,cAAc;IACjD,IAAIC,UAAU,GAAG,CAAC,CAAC;IACnB,IAAIC,MAAM;IACVlF,WAAW,CAAC6C,MAAM,CAAC5C,iBAAiB,CAAC;IACrCgF,UAAU,CAACE,KAAK,GAAG,UAAUC,IAAI,EAAE;MAC/BN,KAAK,CAACvE,MAAM,CAACiD,cAAc,CAAC6B,cAAc,GAAG,CAAC,CAAC;MAC/CH,MAAM,GAAG,IAAIlF,WAAW,CAAC;QACrBsF,UAAU,EAAE,IAAIvG,WAAW,CAAC+F,KAAK,CAACvE,MAAM,CAACgF,SAAS,CAAC;QACnDC,MAAM,EAAE;UAAEC,IAAI,EAAEV,gBAAgB,CAACW,IAAI;UAAEC,KAAK,EAAEZ,gBAAgB,CAAC3C;QAAG,CAAC;QACnE+B,SAAS,EAAEW,KAAK,CAACvE,MAAM,CAAC4D,SAAS;QACjCzC,IAAI,EAAE,UAAU;QAChBkE,gBAAgB,EAAE,IAAI;QACtBC,WAAW,EAAE,OAAO;QACpBC,aAAa,EAAE,GAAG;QAClBH,KAAK,EAAEb,KAAK,CAACvE,MAAM,CAACiD,cAAc,CAACuC,cAAc,CAACX,IAAI,CAACY,OAAO;MAClE,CAAC,CAAC;MACFd,MAAM,CAACe,QAAQ,CAACb,IAAI,CAAC/C,OAAO,CAAC;IACjC,CAAC;IACD4C,UAAU,CAACiB,IAAI,GAAG,UAAU7D,OAAO,EAAE;MACjC,IAAIsD,KAAK,GAAGtD,OAAO,CAAC8D,aAAa,CAAC,CAAC,CAAC,CAACR,KAAK;MAC1C,IAAIS,aAAa,GAAG,EAAE;MACtB,IAAI5H,iBAAiB,CAACmH,KAAK,CAAC,EAAE;QAC1BA,KAAK,GAAG,EAAE;MACd;MACA,KAAK,IAAI5H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4H,KAAK,CAACzH,MAAM,EAAEH,CAAC,EAAE,EAAE;QACnC,KAAK,IAAIsI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,KAAK,CAACvE,MAAM,CAACgF,SAAS,CAACrH,MAAM,EAAEmI,CAAC,EAAE,EAAE;UACpD,IAAIvB,KAAK,CAACvE,MAAM,CAACgF,SAAS,CAACc,CAAC,CAAC,CAACtB,gBAAgB,CAAC3C,EAAE,CAAC,KAAKuD,KAAK,CAAC5H,CAAC,CAAC,EAAE;YAC7DqI,aAAa,CAACE,IAAI,CAACxB,KAAK,CAACvE,MAAM,CAACgF,SAAS,CAACc,CAAC,CAAC,CAACtB,gBAAgB,CAACW,IAAI,CAAC,CAAC;YACpE;UACJ;QACJ;MACJ;MACAZ,KAAK,CAACvE,MAAM,CAACiD,cAAc,CAAC6B,cAAc,CAACP,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACsB,YAAY,CAAC,GAAGyC,KAAK;MACxF,OAAOS,aAAa,CAACG,IAAI,CAAC,GAAG,CAAC;IAClC,CAAC;IACDtB,UAAU,CAACuB,OAAO,GAAG,YAAY;MAC7B,IAAItB,MAAM,EAAE;QACRA,MAAM,CAACsB,OAAO,CAAC,CAAC;MACpB;IACJ,CAAC;IACD,OAAOvB,UAAU;EACrB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI5E,IAAI,CAACjC,SAAS,CAAC2F,0BAA0B,GAAG,UAAUX,MAAM,EAAE;IAC1D,IAAI,IAAI,CAAC7C,MAAM,CAACiB,YAAY,CAACC,YAAY,IAAIjD,iBAAiB,CAAC4E,MAAM,CAACQ,IAAI,CAAC,IAAI,IAAI,CAACrD,MAAM,CAACiB,YAAY,CAACE,IAAI,KAAK,MAAM,EAAE;MACrH0B,MAAM,CAACwB,QAAQ,GAAG,cAAc;MAChCxB,MAAM,CAACQ,IAAI,GAAG,IAAI,CAAC6C,iBAAiB,CAAC,CAAC;MACtC,IAAI/B,WAAW,GAAG,IAAI,CAACnE,MAAM,CAAC8C,gBAAgB,CAACD,MAAM,CAACM,KAAK,EAAE,IAAI,CAACnD,MAAM,CAACoE,YAAY,CAAC;MACtFD,WAAW,CAACE,QAAQ,GAAG,cAAc;MACrCF,WAAW,CAACd,IAAI,GAAGR,MAAM,CAACQ,IAAI;IAClC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIvD,IAAI,CAACjC,SAAS,CAACqI,iBAAiB,GAAG,YAAY;IAC3C,IAAI3B,KAAK,GAAG,IAAI;IAChB,IAAIG,UAAU,GAAG,CAAC,CAAC;IACnB,IAAIC,MAAM;IACV,IAAIwB,KAAK,GAAG,CAAC;MAAE,IAAI,EAAE,CAAC;MAAE,OAAO,EAAE;IAAY,CAAC,EAAE;MAAE,IAAI,EAAE,CAAC;MAAE,OAAO,EAAE;IAAY,CAAC,EAAE;MAAE,IAAI,EAAE,CAAC;MAAE,OAAO,EAAE;IAAgB,CAAC,CAAC;IACzHzB,UAAU,CAACE,KAAK,GAAG,UAAUC,IAAI,EAAE;MAC/BN,KAAK,CAACvE,MAAM,CAACiD,cAAc,CAAC6B,cAAc,GAAG,CAAC,CAAC;MAC/CH,MAAM,GAAG,IAAIhF,YAAY,CAAC;QACtBoF,UAAU,EAAE,IAAIvG,WAAW,CAAC2H,KAAK,CAAC;QAClCvC,SAAS,EAAEW,KAAK,CAACvE,MAAM,CAAC4D,SAAS;QACjCqB,MAAM,EAAE;UAAEG,KAAK,EAAE;QAAQ,CAAC;QAC1BE,WAAW,EAAE,OAAO;QACpBF,KAAK,EAAE/G,QAAQ,CAAC,UAAU,EAAEwG,IAAI,CAACY,OAAO,CAACW,eAAe;MAC5D,CAAC,CAAC;MACFzB,MAAM,CAACe,QAAQ,CAACb,IAAI,CAAC/C,OAAO,CAAC;IACjC,CAAC;IACD4C,UAAU,CAACiB,IAAI,GAAG,UAAU7D,OAAO,EAAE;MACjC,IAAIsD,KAAK,GAAGtD,OAAO,CAAC8D,aAAa,CAAC,CAAC,CAAC,CAACR,KAAK;MAC1C,IAAIiB,GAAG,GAAG9B,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACuB,IAAI,IAAI,UAAU;MACpD2B,KAAK,CAACvE,MAAM,CAACiD,cAAc,CAAC6B,cAAc,CAACuB,GAAG,CAAC,GAAGjB,KAAK;MACvD,OAAOA,KAAK;IAChB,CAAC;IACDV,UAAU,CAACuB,OAAO,GAAG,YAAY;MAC7B,IAAItB,MAAM,EAAE;QACRA,MAAM,CAACsB,OAAO,CAAC,CAAC;MACpB;IACJ,CAAC;IACD,OAAOvB,UAAU;EACrB,CAAC;EACD;AACJ;AACA;AACA;EACI5E,IAAI,CAACjC,SAAS,CAACyI,mBAAmB,GAAG,YAAY;IAC7C,IAAIrF,YAAY,GAAG,IAAI,CAACjB,MAAM,CAACiB,YAAY;IAC3C,IAAIA,YAAY,CAACC,YAAY,EAAE;MAC3B,IAAI,IAAI,CAAClB,MAAM,CAACuG,UAAU,CAACnF,cAAc,IAAIH,YAAY,CAACE,IAAI,KAAK,QAAQ,EAAE;QACzE,IAAI,CAACC,cAAc,CAAC6E,OAAO,CAAC,CAAC;QAC7B,IAAI,CAACjG,MAAM,CAACiC,QAAQ,CAACC,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;MAC9E,CAAC,MACI,IAAIlE,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACuG,UAAU,CAACnF,cAAc,CAAC,IAAIH,YAAY,CAACE,IAAI,KAAK,MAAM,EAAE;QAC/F,IAAI,CAACC,cAAc,GAAG,IAAI/B,QAAQ,CAAC,IAAI,CAACW,MAAM,CAAC;MACnD;MACA,IAAI,IAAI,CAACA,MAAM,CAACuG,UAAU,CAAC9E,YAAY,IAAIR,YAAY,CAACE,IAAI,KAAK,MAAM,EAAE;QACrE,IAAI,CAACnB,MAAM,CAACiC,QAAQ,CAACC,iBAAiB,GAAGsE,SAAS;MACtD,CAAC,MACI,IAAIvI,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAAC,EAAE;QAC7D,IAAI,CAACA,YAAY,GAAG,IAAIlC,UAAU,CAAC,IAAI,CAACS,MAAM,CAAC;MACnD;IACJ,CAAC,MACI;MACD,IAAI,IAAI,CAACoB,cAAc,EAAE;QACrB,IAAI,CAACA,cAAc,CAAC6E,OAAO,CAAC,CAAC;MACjC;MACA,IAAI,IAAI,CAACxE,YAAY,EAAE;QACnB,IAAI,CAACA,YAAY,CAACwE,OAAO,CAAC,CAAC;MAC/B;IACJ;IACA,IAAIhF,YAAY,CAACW,aAAa,IAAIX,YAAY,CAACmB,uBAAuB,EAAE;MACpE,IAAInE,iBAAiB,CAAC,IAAI,CAACyC,aAAa,CAAC,EAAE;QACvC,IAAIA,aAAa,GAAGnC,aAAa,CAAC,KAAK,EAAE;UACrCsD,EAAE,EAAE,IAAI,CAAC7B,MAAM,CAAC8B,OAAO,CAACD,EAAE,GAAG;QACjC,CAAC,CAAC;QACF,IAAI,CAAC7B,MAAM,CAAC8B,OAAO,CAACC,WAAW,CAACrB,aAAa,CAAC;QAC9C,IAAI,CAACsB,yBAAyB,CAAC,CAAC;MACpC;IACJ,CAAC,MACI,IAAI,CAACf,YAAY,CAACW,aAAa,IAAI,CAACX,YAAY,CAACmB,uBAAuB,EAAE;MAC3E,IAAI,IAAI,CAAC1B,aAAa,IAAI,CAAC,IAAI,CAACA,aAAa,CAAC+F,WAAW,EAAE;QACvD,IAAI,CAAC/F,aAAa,CAACuF,OAAO,CAAC,CAAC;MAChC;IACJ;IACA,IAAIhF,YAAY,CAACS,mBAAmB,EAAE;MAClC,IAAIzD,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACuG,UAAU,CAAC5E,iBAAiB,CAAC,EAAE;QAC7D,IAAI,CAACA,iBAAiB,GAAG,IAAIrC,WAAW,CAAC,IAAI,CAACU,MAAM,CAAC;MACzD;IACJ,CAAC,MACI;MACD,IAAI,IAAI,CAAC2B,iBAAiB,EAAE;QACxB,IAAI,CAACA,iBAAiB,CAACsE,OAAO,CAAC,CAAC;MACpC;IACJ;EACJ,CAAC;EACDnG,IAAI,CAACjC,SAAS,CAACqE,iBAAiB,GAAG,UAAU2C,IAAI,EAAE;IAC/C,IAAI,IAAI,CAAC7E,MAAM,CAACiB,YAAY,CAACC,YAAY,IAAI,IAAI,CAAClB,MAAM,CAACiB,YAAY,CAACE,IAAI,KAAK,QAAQ,EAAE;MACrF,IAAIuF,SAAS,GAAG,KAAK,CAAC;MACtB,IAAI7B,IAAI,CAAC8B,GAAG,EAAE;QACV,IAAIC,QAAQ,GAAGvI,QAAQ,CAAC,UAAU,EAAEwG,IAAI,CAAC8B,GAAG,CAAC;QAC7CD,SAAS,GAAG,IAAI,CAAC1G,MAAM,CAAC6G,eAAe,CAACD,QAAQ,CAAC;MACrD;MACA,IAAI,CAAC3I,iBAAiB,CAACyI,SAAS,CAAC,EAAE;QAC/B,IAAI,CAACjF,YAAY,CAACqF,cAAc,CAACJ,SAAS,CAAC;MAC/C;IACJ;IACA,IAAI,CAAC1G,MAAM,CAAC+G,gBAAgB,CAAC7E,iBAAiB,CAAC2C,IAAI,CAAC;EACxD,CAAC;EACD;AACJ;AACA;AACA;EACI/E,IAAI,CAACjC,SAAS,CAACoI,OAAO,GAAG,YAAY;IACjC,IAAI,IAAI,CAAC7E,cAAc,EAAE;MACrB,IAAI,CAACA,cAAc,CAAC6E,OAAO,CAAC,CAAC;IACjC;IACA,IAAI,IAAI,CAACtE,iBAAiB,EAAE;MACxB,IAAI,CAACA,iBAAiB,CAACsE,OAAO,CAAC,CAAC;IACpC;IACA,IAAI,IAAI,CAACxE,YAAY,EAAE;MACnB,IAAI,CAACA,YAAY,CAACwE,OAAO,CAAC,CAAC;IAC/B;IACA,IAAI,IAAI,CAACvF,aAAa,IAAI,CAAC,IAAI,CAACA,aAAa,CAAC+F,WAAW,EAAE;MACvD,IAAI,CAAC/F,aAAa,CAACuF,OAAO,CAAC,CAAC;IAChC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACInG,IAAI,CAACjC,SAAS,CAACmJ,gBAAgB,GAAG,UAAUC,IAAI,EAAE;IAC9C,IAAI1C,KAAK,GAAG,IAAI;IAChB,IAAI,IAAI,CAACvE,MAAM,CAACkH,mBAAmB,IAAI,IAAI,CAAClH,MAAM,CAACiB,YAAY,CAACC,YAAY,IACxE,IAAI,CAAClB,MAAM,CAACiC,QAAQ,CAACH,OAAO,CAACqF,sBAAsB,CAAC,mBAAmB,CAAC,CAACxJ,MAAM,GAAG,CAAC,EAAE;MACrF,IAAI,CAACqC,MAAM,CAACiC,QAAQ,CAACmF,OAAO,CAAC,CAAC;IAClC;IACA,IAAI,CAAC,IAAI,CAACpH,MAAM,CAACqH,QAAQ,EAAE;MACvB,IAAIC,KAAK,GAAG,IAAI,CAACtH,MAAM,CAACqB,UAAU;MAClC,IAAIpD,iBAAiB,CAACgJ,IAAI,CAAC,IAAIhJ,iBAAiB,CAACgJ,IAAI,CAACK,KAAK,CAACzF,EAAE,CAAC,CAAC,EAAE;QAC9D;MACJ;MACA,IAAI6E,SAAS,GAAG,IAAI,CAAC1G,MAAM,CAACuH,QAAQ,KAAK,cAAc,GACnD,IAAI,CAACvH,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAGT,IAAI,CAACK,KAAK,CAACzF,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC7B,MAAM,CAAC2H,aAAa,CAACV,IAAI,CAACK,KAAK,CAACzF,EAAE,CAAC,CAAC;MAC5H,IAAI,CAAC5D,iBAAiB,CAACyI,SAAS,CAACY,KAAK,CAACM,SAAS,CAAC,CAAC,EAAE;QAChD,IAAIlB,SAAS,CAACY,KAAK,CAACM,SAAS,CAAC,KAAK,IAAI,EAAE;UACrClB,SAAS,CAACY,KAAK,CAACM,SAAS,CAAC,GAAG,KAAK;QACtC;MACJ;MACA,IAAI,IAAI,CAAC5H,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC,uBAAuB,CAAC,CAAC,MAAM,CAAC,IAAI0G,SAAS,EAAE;QAC/I,IAAI,CAAC1G,MAAM,CAAC6H,cAAc,CAAC,sBAAsB,CAAC,CAAC,CAAC;QACpD,IAAIC,OAAO,GAAG,CAAC,CAAC;QAChBA,OAAO,CAAC,aAAa,CAAC,GAAK,IAAI,CAAC9H,MAAM,CAAC+H,iBAAiB,IAAI,IAAI,CAAC/H,MAAM,CAAC+H,iBAAiB,CAACC,IAAI,GAAI,IAAI,CAAChI,MAAM,CAAC+H,iBAAiB,CAACC,IAAI,GAAG,cAAe;QACtJF,OAAO,CAAC,iBAAiB,CAAC,GAAG3J,MAAM,CAAC,EAAE,EAAE,CAACuI,SAAS,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC;QAC9D,IAAI,CAAC1G,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAClK,MAAM,GAAG,CAAC,CAAC,GAAGmK,OAAO;MACzH;MACA,IAAI,CAAC7J,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACuG,UAAU,CAAC,IAAIG,SAAS,EAAE;QACzD,IAAI,CAAC1G,MAAM,CAACiI,QAAQ,GAAG,IAAI;QAC3B,IAAI,CAACC,oBAAoB,CAACjB,IAAI,EAAEP,SAAS,EAAE,IAAI,CAAC;QAChD,IAAI,IAAI,CAAC1G,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;UACjF,IAAI,IAAI,CAAC7H,MAAM,CAACuH,QAAQ,KAAK,aAAa,IAAIN,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,EAAE;YAC/E,IAAIC,OAAO,GAAG,SAAAA,CAAU5K,CAAC,EAAE;cACvB,IAAI6K,OAAO,GAAG3B,SAAS,CAACN,eAAe,CAAC+B,WAAW,CAACG,MAAM,CAAC,UAAUC,IAAI,EAAE;gBACvE,IAAKA,IAAI,CAACC,IAAI,KAAKvB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACgL,IAAI,IAC1DD,IAAI,CAACE,EAAE,KAAKxB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACiL,EAAE,IAClDxB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACkL,MAAM,KAAKH,IAAI,CAACG,MAAM,EAAG;kBACnE,IAAIC,MAAM,GAAGpE,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACjD,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACa,IAAI,CAACE,EAAE,CAAC,CAAC;kBACrE,IAAII,WAAW,GAAGF,MAAM,CAACvC,eAAe,CAAC+B,WAAW,CAACG,MAAM,CAAC,UAAUC,IAAI,EAAE;oBACxE,OAAQA,IAAI,CAACC,IAAI,KAAKvB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACgL,IAAI,IAAID,IAAI,CAACE,EAAE,KAAKxB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACiL,EAAE;kBAC9H,CAAC,CAAC;kBACFI,WAAW,CAAC,CAAC,CAAC,CAACH,MAAM,GAAGzB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACkL,MAAM;gBACzE;gBACA,OAAOH,IAAI,CAACC,IAAI,KAAKvB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACgL,IAAI,IAAID,IAAI,CAACC,IAAI,KAAKvB,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAAC3K,CAAC,CAAC,CAACiL,EAAE;cAC/H,CAAC,CAAC;cACF,IAAIJ,OAAO,CAAC1K,MAAM,GAAG,CAAC,EAAE;gBACpB,KAAK,IAAImI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuC,OAAO,CAAC1K,MAAM,EAAEmI,CAAC,EAAE,EAAE;kBACrC,IAAI6C,MAAM,GAAGG,MAAM,CAAC9I,MAAM,CAACwH,QAAQ,CAACsB,MAAM,CAAC9I,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACW,OAAO,CAACvC,CAAC,CAAC,CAAC0C,IAAI,CAAC,CAAC;kBAC/E,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACvC,eAAe,CAAC+B,WAAW,CAACxK,MAAM,EAAEoL,CAAC,EAAE,EAAE;oBAChE,IAAIJ,MAAM,CAACvC,eAAe,CAAC+B,WAAW,CAACY,CAAC,CAAC,CAACP,IAAI,KAAKH,OAAO,CAACvC,CAAC,CAAC,CAAC0C,IAAI,IAC9DG,MAAM,CAACvC,eAAe,CAAC+B,WAAW,CAACY,CAAC,CAAC,CAACN,EAAE,KAAKJ,OAAO,CAACvC,CAAC,CAAC,CAAC2C,EAAE,EAAE;sBAC5DE,MAAM,CAACvC,eAAe,CAAC+B,WAAW,CAACa,MAAM,CAACD,CAAC,EAAE,CAAC,CAAC;sBAC/C;oBACJ;kBACJ;gBACJ;gBACA,OAAO,OAAO;cAClB;YACJ,CAAC;YACD,IAAID,MAAM,GAAG,IAAI;YACjB,KAAK,IAAItL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyJ,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,CAACxK,MAAM,EAAEH,CAAC,EAAE,EAAE;cACjE,IAAIyL,OAAO,GAAGb,OAAO,CAAC5K,CAAC,CAAC;cACxB,IAAIyL,OAAO,KAAK,OAAO,EACnB;YACR;UACJ,CAAC,MACI,IAAI,CAAChC,IAAI,CAAC,iBAAiB,CAAC,CAACkB,WAAW,IAAIzB,SAAS,CAACN,eAAe,CAAC+B,WAAW,EAAE;YACpF,KAAK,IAAI3K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkJ,SAAS,CAACN,eAAe,CAAC+B,WAAW,CAACxK,MAAM,EAAEH,CAAC,EAAE,EAAE;cACnE,IAAIqE,EAAE,GAAG,KAAK,CAAC;cACf,IAAI6E,SAAS,CAACN,eAAe,CAAC8C,MAAM,CAAClG,QAAQ,CAAC,CAAC,KAAK0D,SAAS,CAACN,eAAe,CAAC+B,WAAW,CAAC3K,CAAC,CAAC,CAACgL,IAAI,EAAE;gBAC/F3G,EAAE,GAAG6E,SAAS,CAACN,eAAe,CAAC+B,WAAW,CAAC3K,CAAC,CAAC,CAACiL,EAAE;cACpD,CAAC,MACI;gBACD5G,EAAE,GAAG6E,SAAS,CAACN,eAAe,CAAC+B,WAAW,CAAC3K,CAAC,CAAC,CAACgL,IAAI;cACtD;cACA,IAAIW,SAAS,GAAG,IAAI,CAACnJ,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAAC7F,EAAE,CAAC,CAAC;cACjE,KAAK,IAAIiE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqD,SAAS,CAAC/C,eAAe,CAAC+B,WAAW,CAACxK,MAAM,EAAEmI,CAAC,EAAE,EAAE;gBACnE,IAAIqD,SAAS,CAAC/C,eAAe,CAAC+B,WAAW,CAACrC,CAAC,CAAC,CAAC0C,IAAI,KAC7C9B,SAAS,CAACN,eAAe,CAAC+B,WAAW,CAAC3K,CAAC,CAAC,CAACgL,IAAI,IAC7CW,SAAS,CAAC/C,eAAe,CAAC+B,WAAW,CAACrC,CAAC,CAAC,CAAC2C,EAAE,KACvC/B,SAAS,CAACN,eAAe,CAAC+B,WAAW,CAAC3K,CAAC,CAAC,CAACiL,EAAE,EAAE;kBACjDU,SAAS,CAAC/C,eAAe,CAAC+B,WAAW,CAACa,MAAM,CAAClD,CAAC,EAAE,CAAC,CAAC;gBACtD;cACJ;YACJ;UACJ;UACAY,SAAS,CAACN,eAAe,CAACzD,YAAY,GAAGsE,IAAI,CAAC,iBAAiB,CAAC,CAACtE,YAAY;QACjF;QACA,IAAIsE,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAACsB,YAAY,CAAC,EAAE;UAC3C,IAAI+D,SAAS,CAACN,eAAe,CAACgD,QAAQ,KAAK,CAAC,EAAE;YAC1C,IAAI,CAACpJ,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAAC5C,SAAS,CAAC;UAC/D;UACA,IAAI,CAAC,IAAI,CAAC1G,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;YACnF,IAAI,CAAC0B,2BAA2B,CAAC7C,SAAS,EAAE,UAAU,CAAC;UAC3D;UACA,IAAI,CAAC1G,MAAM,CAACwJ,oBAAoB,CAACC,gBAAgB,CAAC/C,SAAS,CAAC;QAChE;QACA,IAAIgD,IAAI,GAAGtM,MAAM,CAACsM,IAAI,CAACzC,IAAI,CAAC;QAC5B,IAAIyC,IAAI,CAAChC,OAAO,CAACJ,KAAK,CAACqC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAID,IAAI,CAAChC,OAAO,CAACJ,KAAK,CAACsC,OAAO,CAAC,KAAK,CAAC,CAAC,IAC1EF,IAAI,CAAChC,OAAO,CAACJ,KAAK,CAAC8B,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;UACrC,IAAI,CAACpJ,MAAM,CAACqJ,aAAa,CAACQ,wBAAwB,CAACnD,SAAS,EAAEA,SAAS,CAACoD,QAAQ,EAAE,KAAK,CAAC;QAC5F;QACA,IAAI,CAAC9J,MAAM,CAACqJ,aAAa,CAACU,eAAe,CAACrD,SAAS,CAAC;QACpD,IAAI,CAACxI,WAAW,CAAC+I,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAACC,UAAU,CAAC,CAAC,IACrD2F,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAACC,UAAU,CAAC,KAAKoF,SAAS,CAACN,eAAe,CAAC4D,gBAAgB,EAAE;UACxF,IAAI,CAAChK,MAAM,CAACuB,uBAAuB,CAAC0I,iBAAiB,CAACvD,SAAS,EAAEO,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAACC,UAAU,CAAC,CAAC;QAC7G,CAAC,MACI;UACD,IAAIuD,IAAI,GAAG,CAAC,CAAC;UACbA,IAAI,CAACoC,IAAI,GAAGP,SAAS;UACrB,IAAI,IAAI,CAAC1G,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;YACzC1C,IAAI,CAACqF,MAAM,GAAG,cAAc;UAChC;UACA,IAAI,CAAClK,MAAM,CAACuG,UAAU,CAAC4D,oBAAoB,CAACtF,IAAI,CAAC;QACrD;MACJ;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI/E,IAAI,CAACjC,SAAS,CAACqK,oBAAoB,GAAG,UAAUjB,IAAI,EAAEP,SAAS,EAAE0D,YAAY,EAAE;IAC3E,IAAIC,QAAQ,GAAG,IAAI,CAACrK,MAAM;IAC1B,IAAIsH,KAAK,GAAG+C,QAAQ,CAAChJ,UAAU;IAC/B,IAAIiJ,kBAAkB,GAAGxL,UAAU,CAACuL,QAAQ,CAACE,aAAa,CAAC;IAC3D,IAAIC,kBAAkB,GAAG,EAAE;IAC3B,IAAIC,sBAAsB,GAAG,KAAK;IAClC,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGvN,MAAM,CAACsM,IAAI,CAACzC,IAAI,CAAC,EAAEyD,EAAE,GAAGC,EAAE,CAAChN,MAAM,EAAE+M,EAAE,EAAE,EAAE;MAC3D,IAAIrE,GAAG,GAAGsE,EAAE,CAACD,EAAE,CAAC;MAChB,IAAI,CAACpD,KAAK,CAACqC,SAAS,EAAErC,KAAK,CAACsC,OAAO,EAAEtC,KAAK,CAAC8B,QAAQ,CAAC,CAAC1B,OAAO,CAACrB,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACtE,IAAIpI,iBAAiB,CAACgJ,IAAI,CAAC,EAAE,GAAGZ,GAAG,CAAC,CAAC,IAAI,CAACgE,QAAQ,CAACO,qBAAqB,EAAE;UACtE;QACJ;QACA,IAAIR,YAAY,EAAE;UACd,IAAI9C,KAAK,CAAC8B,QAAQ,KAAK/C,GAAG,EAAE;YACxBgE,QAAQ,CAAChB,aAAa,CAACwB,mBAAmB,CAAC5D,IAAI,CAACZ,GAAG,CAAC,EAAEK,SAAS,CAACN,eAAe,CAAC;YAChF,IAAIM,SAAS,CAACN,eAAe,CAACgD,QAAQ,GAAG,CAAC,IAAI1C,SAAS,CAACN,eAAe,CAAC0E,WAAW,EAAE;cACjF,IAAI,CAAC9K,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE,KAAK,EAAErE,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;YACrF;YACAiE,QAAQ,CAAChB,aAAa,CAAC2B,iBAAiB,CAACtE,SAAS,EAAE4D,kBAAkB,CAACjE,GAAG,CAAC,CAAC;UAChF,CAAC,MACI;YACD,IAAI4E,QAAQ,GAAG,OAAOhE,IAAI,CAACZ,GAAG,CAAC,KAAK,QAAQ,GAAG,IAAI6E,IAAI,CAACjE,IAAI,CAACZ,GAAG,CAAC,CAAC,GAAGY,IAAI,CAACZ,GAAG,CAAC;YAC9E,IAAIA,GAAG,KAAKiB,KAAK,CAACsC,OAAO,IAAI3L,iBAAiB,CAACyI,SAAS,CAACN,eAAe,CAACuD,SAAS,CAAC,KAAK1L,iBAAiB,CAACgJ,IAAI,CAACK,KAAK,CAAC8B,QAAQ,CAAC,CAAC,IAAInC,IAAI,CAACK,KAAK,CAAC8B,QAAQ,CAAC,KAAK,EAAE,IAAI+B,MAAM,CAACC,KAAK,CAACnE,IAAI,CAACK,KAAK,CAAC8B,QAAQ,CAAC,CAAC,CAAC,EAAE;cACnM6B,QAAQ,GAAGvE,SAAS,CAACN,eAAe,CAACwD,OAAO;YAChD;YACAS,QAAQ,CAACU,cAAc,CAACT,kBAAkB,CAACjE,GAAG,CAAC,EAAE4E,QAAQ,EAAEvE,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;YAC3FiE,QAAQ,CAAChB,aAAa,CAAC2B,iBAAiB,CAACtE,SAAS,EAAE4D,kBAAkB,CAACjE,GAAG,CAAC,CAAC;UAChF;QACJ,CAAC,MACI;UACDmE,kBAAkB,CAACzE,IAAI,CAACM,GAAG,CAAC;UAC5BoE,sBAAsB,GAAG,IAAI;QACjC;MACJ,CAAC,MACI,IAAInD,KAAK,CAAC3E,YAAY,KAAK0D,GAAG,EAAE;QACjC,IAAIgF,YAAY,GAAGhB,QAAQ,CAAChB,aAAa,CAACiC,eAAe,CAACrE,IAAI,CAAC;QAC/D,IAAI,IAAI,CAACjH,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;UACzC,IAAIgE,IAAI,CAACC,SAAS,CAACH,YAAY,CAAC,KAAKE,IAAI,CAACC,SAAS,CAAC9E,SAAS,CAACN,eAAe,CAACzD,YAAY,CAAC,EAAE;YACzF,IAAI,CAAC3C,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACgK,gBAAgB,GAAG,IAAI;YAC3D,IAAI,CAACzL,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACiK,gBAAgB,GAAG,CAACzN,iBAAiB,CAACyI,SAAS,CAACN,eAAe,CAACzD,YAAY,CAAC,GAAG+D,SAAS,CAACN,eAAe,CAACzD,YAAY,CAACgJ,KAAK,CAAC,CAAC,GAAG,EAAE;UAC3K,CAAC,MACI;YACD,IAAI,CAAC3L,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACgK,gBAAgB,GAAG,KAAK;UAChE;QACJ;QACA,IAAI,CAAC,IAAI,CAACzL,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;UACnFnB,SAAS,CAACN,eAAe,CAACzD,YAAY,GAAG0I,YAAY;QACzD;QACAhB,QAAQ,CAAChB,aAAa,CAAC2B,iBAAiB,CAACtE,SAAS,EAAE,cAAc,CAAC;MACvE,CAAC,MACI,IAAIY,KAAK,CAAChG,UAAU,KAAK+E,GAAG,EAAE;QAC/B;MAAA,CACH,MACI,IAAI,CAACiB,KAAK,CAAC5E,QAAQ,EAAE4E,KAAK,CAACsE,KAAK,EAAEtE,KAAK,CAACuE,YAAY,EAAEvE,KAAK,CAACwE,WAAW,EACxExE,KAAK,CAACM,SAAS,EAAEN,KAAK,CAACnC,IAAI,EAAEmC,KAAK,CAACyE,iBAAiB,EACpDzE,KAAK,CAAC0E,eAAe,EAAE1E,KAAK,CAACzF,EAAE,EAAEyF,KAAK,CAAC2E,QAAQ,EAAE3E,KAAK,CAAC4E,QAAQ,CAAC,CAACxE,OAAO,CAACrB,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACtF,IAAIxD,MAAM,GAAGwH,QAAQ,CAAC8B,aAAa,CAAC9F,GAAG,CAAC;QACxC;QACA,IAAIjB,KAAK,GAAG6B,IAAI,CAACZ,GAAG,CAAC;QACrB,IAAI,CAACpI,iBAAiB,CAAC4E,MAAM,CAAC,KAAKA,MAAM,CAACwB,QAAQ,KAAK,gBAAgB,IAAIxB,MAAM,CAACwB,QAAQ,KAAK,oBAAoB,CAAC,EAAE;UAClHe,KAAK,GAAGiF,QAAQ,CAAChB,aAAa,CAAC+C,iBAAiB,CAAChH,KAAK,CAAC;QAC3D;QACA,IAAIiH,YAAY,GAAG/B,kBAAkB,CAACjE,GAAG,CAAC;QAC1C,IAAIA,GAAG,KAAKiB,KAAK,CAACzF,EAAE,EAAE;UAClBwK,YAAY,GAAG,QAAQ;QAC3B,CAAC,MACI,IAAIhG,GAAG,KAAKiB,KAAK,CAACnC,IAAI,EAAE;UACzBkH,YAAY,GAAG,UAAU;QAC7B,CAAC,MACI,IAAIhG,GAAG,KAAKiB,KAAK,CAAC4E,QAAQ,EAAE;UAC7BG,YAAY,GAAG,UAAU;QAC7B,CAAC,MACI,IAAIhG,GAAG,KAAKiB,KAAK,CAACM,SAAS,EAAE;UAC9ByE,YAAY,GAAG,aAAa;UAC5B,IAAI,CAACpO,iBAAiB,CAACqJ,KAAK,CAAC8B,QAAQ,CAAC,EAAE;YACpC,IAAIkD,SAAS,GAAG5F,SAAS,CAACN,eAAe;YACzC,IAAImG,aAAa,GAAGtF,IAAI,CAACK,KAAK,CAAC8B,QAAQ,CAAC;YACxC,IAAIhE,KAAK,EAAE;cACPmH,aAAa,GAAG,CAAC;YACrB,CAAC,MACI;cACDA,aAAa,GAAGA,aAAa,IAAI,CAAC,GAAG,CAAC,GAAGA,aAAa;YAC1D;YACAlC,QAAQ,CAACU,cAAc,CAACzD,KAAK,CAAC8B,QAAQ,EAAEmD,aAAa,EAAE7F,SAAS,EAAE,IAAI,CAAC;YACvE2D,QAAQ,CAACU,cAAc,CAAC,UAAU,EAAEwB,aAAa,EAAED,SAAS,EAAE,IAAI,CAAC;YACnEjC,QAAQ,CAACU,cAAc,CAAC,WAAW,GAAGzD,KAAK,CAAC8B,QAAQ,EAAEmD,aAAa,EAAE7F,SAAS,CAAC;UACnF;QACJ,CAAC,MACI,IAAKL,GAAG,KAAKiB,KAAK,CAAC2E,QAAQ,IAAM,CAAChO,iBAAiB,CAACyI,SAAS,CAACN,eAAe,CAAC6F,QAAQ,CAAE,EAAE;UAC3FI,YAAY,GAAG,UAAU;UACzB;UACA,IAAIpF,IAAI,IAAI,CAAChJ,iBAAiB,CAACgJ,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAAC4K,QAAQ,CAAC,CAAC,IAAIhF,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAAC4K,QAAQ,CAAC,CAACtO,MAAM,GAAG,CAAC,EAAE;YACvH,IAAI,IAAI,CAACqC,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;cACjFnB,SAAS,CAACN,eAAe,CAAC6F,QAAQ,GAAGhF,IAAI,CAAC,iBAAiB,CAAC,CAACgF,QAAQ;YACzE;YACA,IAAIO,WAAW,GAAG,CAAC;YACnB,KAAK,IAAIhP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkJ,SAAS,CAACN,eAAe,CAAC6F,QAAQ,CAACtO,MAAM,EAAEH,CAAC,EAAE,EAAE;cAChEgP,WAAW,GAAGA,WAAW,GAAG9F,SAAS,CAACN,eAAe,CAAC6F,QAAQ,CAACzO,CAAC,CAAC,CAAC4L,QAAQ;YAC9E;YACA,IAAIqD,KAAK,GAAG/F,SAAS,CAACN,eAAe,CAACuD,SAAS;YAC/C;YACA,IAAI+C,KAAK,GAAG,IAAI,CAAC1M,MAAM,CAACqJ,aAAa,CAACsD,UAAU,CAACF,KAAK,EAAED,WAAW,EAAE9F,SAAS,CAACN,eAAe,CAACyF,YAAY,EAAEnF,SAAS,CAACN,eAAe,EAAE,KAAK,CAAC;YAC9IiE,QAAQ,CAACU,cAAc,CAAC,SAAS,EAAEV,QAAQ,CAAChB,aAAa,CAAC+C,iBAAiB,CAACM,KAAK,CAAC,EAAEhG,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;UACxH;QACJ;QACA,IAAI,CAACnI,iBAAiB,CAACoO,YAAY,CAAC,EAAE;UAClC,IAAIO,GAAG,GAAG,EAAE;UACZ,IAAIP,YAAY,KAAK,UAAU,IAAIjH,KAAK,IAAIA,KAAK,CAACzH,MAAM,GAAG,CAAC,EAAE;YAC1D,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4H,KAAK,CAACzH,MAAM,EAAEH,CAAC,EAAE,EAAE;cACnC,IAAIqP,OAAO,GAAG,CAAC,CAAC;cAChB,IAAIzH,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACsI,SAAS,CAAC,EAAE;gBAC5CkD,OAAO,CAAC,WAAW,CAAC,GAAGzH,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACsI,SAAS,CAAC;cACrE;cACA,IAAIvE,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACuI,OAAO,CAAC,EAAE;gBAC1CiD,OAAO,CAAC,SAAS,CAAC,GAAGzH,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACuI,OAAO,CAAC;cACjE;cACA,IAAIxE,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAAC+H,QAAQ,CAAC,EAAE;gBAC3CyD,OAAO,CAAC,UAAU,CAAC,GAAGC,UAAU,CAAC1H,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAAC+H,QAAQ,CAAC,CAAC;cAC/E;cACA,IAAIhE,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,EAAE;gBACrCgL,OAAO,CAAC,IAAI,CAAC,GAAGzH,KAAK,CAAC5H,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC;cACvD;cACA+K,GAAG,CAAC7G,IAAI,CAAC8G,OAAO,CAAC;YACrB;YACAxC,QAAQ,CAACU,cAAc,CAACsB,YAAY,EAAEO,GAAG,EAAElG,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;UAC/E,CAAC,MACI;YACDiE,QAAQ,CAACU,cAAc,CAACsB,YAAY,EAAEjH,KAAK,EAAEsB,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;UACjF;QACJ;QACA,IAAI,CAACC,GAAG,KAAKiB,KAAK,CAACyE,iBAAiB,IAAI1F,GAAG,KAAKiB,KAAK,CAAC0E,eAAe,KAChEtF,SAAS,CAACN,eAAe,CAAC2F,iBAAiB,IAAIrF,SAAS,CAACN,eAAe,CAAC4F,eAAgB,EAAE;UAC5F3B,QAAQ,CAACU,cAAc,CAAC,mBAAmB,EAAEV,QAAQ,CAAChB,aAAa,CAAC0D,sBAAsB,CAACrG,SAAS,CAACN,eAAe,CAAC2F,iBAAiB,EAAErF,SAAS,CAACN,eAAe,CAAC,EAAEM,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;UACpM,IAAI4G,UAAU,GAAG,IAAI,CAAChN,MAAM,CAAC,sBAAsB,CAAC,CAAC0G,SAAS,CAACN,eAAe,CAAC4F,eAAe,CAAC;UAC/F,IAAItF,SAAS,CAACN,eAAe,CAAC4F,eAAe,IAAItF,SAAS,CAACN,eAAe,CAAC4F,eAAe,CAACiB,QAAQ,CAAC,CAAC,KAAK,CAAC,IACvGD,UAAU,KAAK,KAAK,EAAE;YACtB3C,QAAQ,CAAChB,aAAa,CAAC6D,OAAO,CAACF,UAAU,EAAEtG,SAAS,CAACN,eAAe,CAAC4F,eAAe,CAAC;UACzF;UACA,IAAKtF,SAAS,CAACN,eAAe,CAAC2F,iBAAiB,IAAIrF,SAAS,CAACN,eAAe,CAAC4F,eAAe,IACxFtF,SAAS,CAACN,eAAe,CAAC2F,iBAAiB,CAACoB,OAAO,CAAC,CAAC,GAAGzG,SAAS,CAACN,eAAe,CAAC4F,eAAe,CAACmB,OAAO,CAAC,CAAE,IAC3G,CAAClP,iBAAiB,CAACyI,SAAS,CAACN,eAAe,CAAC2F,iBAAiB,CAAC,IAC7D,CAAC9N,iBAAiB,CAACyI,SAAS,CAACN,eAAe,CAACuD,SAAS,CAAC,IACtDjD,SAAS,CAACN,eAAe,CAAC2F,iBAAiB,CAACoB,OAAO,CAAC,CAAC,KAAKzG,SAAS,CAACN,eAAe,CAACuD,SAAS,CAACwD,OAAO,CAAC,CAAE,IACrG,CAAClP,iBAAiB,CAACyI,SAAS,CAACN,eAAe,CAAC4F,eAAe,CAAC,IAC7D,CAAC/N,iBAAiB,CAACyI,SAAS,CAACN,eAAe,CAACwD,OAAO,CAAC,IACpDlD,SAAS,CAACN,eAAe,CAAC4F,eAAe,CAACoB,kBAAkB,CAAC,CAAC,KAC3D1G,SAAS,CAACN,eAAe,CAACwD,OAAO,CAACwD,kBAAkB,CAAC,CAAG,IAChE1G,SAAS,CAACN,eAAe,CAAC0E,WAAY,EAAE;YAC5CpE,SAAS,CAACN,eAAe,CAAC4F,eAAe,GAAGtF,SAAS,CAACN,eAAe,CAAC2F,iBAAiB;UAC3F;UACA1B,QAAQ,CAACU,cAAc,CAAC,iBAAiB,EAAEV,QAAQ,CAAChB,aAAa,CAACgE,oBAAoB,CAAC3G,SAAS,CAACN,eAAe,CAAC4F,eAAe,CAAC,EAAEtF,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;UACnKiE,QAAQ,CAACU,cAAc,CAAC,cAAc,EAAEV,QAAQ,CAAChB,aAAa,CAACiE,qBAAqB,CAAC5G,SAAS,CAACN,eAAe,CAAC,EAAEM,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;UACjJiE,QAAQ,CAACU,cAAc,CAAC,eAAe,EAAEV,QAAQ,CAAChB,aAAa,CAACkE,sBAAsB,CAAC7G,SAAS,CAACN,eAAe,CAAC,EAAEM,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;QACvJ;QACAiE,QAAQ,CAACU,cAAc,CAAC,WAAW,GAAG1E,GAAG,EAAEjB,KAAK,EAAEsB,SAAS,CAAC;QAC5D;QACA,IAAIL,GAAG,KAAKiB,KAAK,CAAC2E,QAAQ,IAAIhF,IAAI,IAAI,CAAChJ,iBAAiB,CAACgJ,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAAC4K,QAAQ,CAAC,CAAC,IAAIhF,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAAC4K,QAAQ,CAAC,CAACtO,MAAM,GAAG,CAAC,EAAE;UACjJ,IAAI,IAAI,CAACqC,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;YACjFnB,SAAS,CAACN,eAAe,CAAC6F,QAAQ,GAAGhF,IAAI,CAAC,iBAAiB,CAAC,CAACgF,QAAQ;UACzE;UACA5B,QAAQ,CAAChB,aAAa,CAACmE,eAAe,CAAC9G,SAAS,EAAE,IAAI,CAAC;QAC3D;QACA2D,QAAQ,CAACU,cAAc,CAAC1E,GAAG,EAAEjB,KAAK,EAAEsB,SAAS,CAAC;MAClD,CAAC,MACI,IAAIY,KAAK,CAACmG,UAAU,KAAKpH,GAAG,EAAE;QAC/B,IAAIjB,KAAK,GAAG6B,IAAI,CAACZ,GAAG,CAAC;QACrBgE,QAAQ,CAACU,cAAc,CAAC,YAAY,EAAE3F,KAAK,EAAEsB,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;QAC7EiE,QAAQ,CAACU,cAAc,CAAC,WAAW,GAAG1E,GAAG,EAAEjB,KAAK,EAAEsB,SAAS,CAAC;QAC5D2D,QAAQ,CAACU,cAAc,CAAC1E,GAAG,EAAEjB,KAAK,EAAEsB,SAAS,CAAC;MAClD,CAAC,MACI,IAAIY,KAAK,CAACoG,IAAI,KAAKrH,GAAG,EAAE;QACzBgE,QAAQ,CAACU,cAAc,CAAC,MAAM,EAAE9D,IAAI,CAACZ,GAAG,CAAC,EAAEK,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;QAC3E,IAAI,CAACpG,MAAM,CAACqJ,aAAa,CAAC2B,iBAAiB,CAACtE,SAAS,EAAE,MAAM,CAAC;QAC9D,IAAI,CAAC1G,MAAM,CAACqJ,aAAa,CAAC2B,iBAAiB,CAACtE,SAAS,EAAE,UAAU,CAAC;QAClE,IAAI,CAAC1G,MAAM,CAACqJ,aAAa,CAAC2B,iBAAiB,CAACtE,SAAS,EAAE,SAAS,CAAC;MACrE,CAAC,MACI,IAAIL,GAAG,KAAKiB,KAAK,CAAC1E,IAAI,EAAE;QACzByH,QAAQ,CAACU,cAAc,CAAC,UAAU,EAAE9D,IAAI,CAACZ,GAAG,CAAC,EAAEK,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;QAC/E;MACJ,CAAC,MACI,IAAIiE,QAAQ,CAACsD,aAAa,CAACjG,OAAO,CAACrB,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACjD,IAAIxD,MAAM,GAAGwH,QAAQ,CAAC8B,aAAa,CAAC9F,GAAG,CAAC;QACxC;QACA,IAAIjB,KAAK,GAAG6B,IAAI,CAACZ,GAAG,CAAC;QACrB,IAAIpI,iBAAiB,CAAC4E,MAAM,CAACQ,IAAI,CAAC,EAAE;UAChC,IAAIR,MAAM,CAACwB,QAAQ,KAAK,gBAAgB,IAAIxB,MAAM,CAACwB,QAAQ,KAAK,oBAAoB,EAAE;YAClFe,KAAK,GAAGiF,QAAQ,CAAChB,aAAa,CAAC+C,iBAAiB,CAAChH,KAAK,CAAC;UAC3D;QACJ;QACAiF,QAAQ,CAACU,cAAc,CAAC,WAAW,GAAG1E,GAAG,EAAEjB,KAAK,EAAEsB,SAAS,CAAC;QAC5D2D,QAAQ,CAACU,cAAc,CAAC1E,GAAG,EAAEjB,KAAK,EAAEsB,SAAS,CAAC;MAClD,CAAC,MACI,IAAIY,KAAK,CAACsG,MAAM,KAAKvH,GAAG,EAAE;QAC3BgE,QAAQ,CAACU,cAAc,CAAC,gBAAgB,EAAE,CAAC9D,IAAI,CAACZ,GAAG,CAAC,EAAEK,SAAS,CAACN,eAAe,EAAE,IAAI,CAAC;QACtF,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC1E,GAAG,EAAEY,IAAI,CAACZ,GAAG,CAAC,EAAEK,SAAS,CAAC;QACrD,IAAI,CAACmH,uBAAuB,CAACnH,SAAS,CAAC;MAC3C;IACJ;IACA,IAAI+D,sBAAsB,EAAE;MACxB,IAAI,CAACqD,sBAAsB,CAACtD,kBAAkB,EAAE9D,SAAS,EAAEO,IAAI,CAAC;IACpE;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACInH,IAAI,CAACjC,SAAS,CAAC0L,2BAA2B,GAAG,UAAUwE,WAAW,EAAElL,MAAM,EAAE;IACxE,IAAIyJ,SAAS,GAAGyB,WAAW,CAAC3H,eAAe;IAC3C,IAAI4H,QAAQ,GAAG1B,SAAS,CAAC0B,QAAQ;IACjC,IAAIC,cAAc;IAClB,IAAIC,cAAc,GAAG5B,SAAS,CAAC4B,cAAc;IAC7C,IAAIlJ,SAAS,GAAI,IAAI,CAAChF,MAAM,CAACuG,UAAU,CAAC9E,YAAY,IAChD,IAAI,CAACzB,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAAC,kBAAkB,CAAC,GAAI,IAAI,CAACzB,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAAC,kBAAkB,CAAC,GAChHsM,WAAW,CAAC3H,eAAe,CAACzD,YAAY;IAC9C,IAAI,CAAC1E,iBAAiB,CAAC+G,SAAS,CAAC,EAAE;MAC/B,QAAQgJ,QAAQ;QACZ,KAAK,WAAW;UACZ,IAAIhJ,SAAS,CAACrH,MAAM,KAAK,CAAC,EAAE;YACxB;UACJ,CAAC,MACI,IAAIuQ,cAAc,IAAIlJ,SAAS,CAACrH,MAAM,EAAE;YACzC,IAAKkF,MAAM,KAAK,UAAU,EAAG;cACzB,IAAI,CAAC7C,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;YACjE,CAAC,MACI,IAAIlL,MAAM,KAAK,MAAM,EAAE;cACxB,IAAI,CAAC7C,MAAM,CAACqJ,aAAa,CAAC8E,sBAAsB,CAACJ,WAAW,CAAC;YACjE,CAAC,MACI,IAAIlL,MAAM,KAAK,UAAU,IAAIA,MAAM,KAAK,SAAS,EAAE;cACpD,IAAI,CAAC7C,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;cAC7D,IAAIzB,SAAS,CAAClD,QAAQ,KAAK,CAAC,EAAE;gBAC1B,IAAI,CAACpJ,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE,IAAI,EAAEuB,SAAS,EAAE,IAAI,CAAC;cACpE;YACJ;UACJ,CAAC,MACI,IAAI,CAAC4B,cAAc,IAAIrL,MAAM,KAAK,MAAM,EAAE;YAC3C,IAAI,CAAC7C,MAAM,CAACqJ,aAAa,CAAC+E,kBAAkB,CAACL,WAAW,CAAC;UAC7D,CAAC,MACI;YACD,IAAI,CAAC/N,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;UACjE;UACA;QACJ,KAAK,WAAW;UACZ,IAAI/I,SAAS,CAACrH,MAAM,KAAK,CAAC,EAAE;YACxB;UACJ,CAAC,MACI,IAAIuQ,cAAc,EAAE;YACrB,IAAIrL,MAAM,KAAK,UAAU,IAAIA,MAAM,KAAK,SAAS,EAAE;cAC/C,IAAI,CAAC7C,MAAM,CAACqJ,aAAa,CAAC+E,kBAAkB,CAACL,WAAW,CAAC;cACzD,IAAI,CAAC/N,MAAM,CAACqJ,aAAa,CAAC8E,sBAAsB,CAACJ,WAAW,CAAC;cAC7D,IAAIzB,SAAS,CAAClD,QAAQ,KAAK,CAAC,EAAE;gBAC1B,IAAI,CAACpJ,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE,IAAI,EAAEuB,SAAS,EAAE,IAAI,CAAC;gBAChE,IAAI,CAACtM,MAAM,CAAC+K,cAAc,CAAC,MAAM,EAAE,CAAC,EAAEuB,SAAS,EAAE,IAAI,CAAC;gBACtD,IAAI,CAACrO,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACqB,UAAU,CAACqM,IAAI,CAAC,EAAE;kBACjD,IAAI,CAAC1N,MAAM,CAACqJ,aAAa,CAAC2B,iBAAiB,CAAC+C,WAAW,EAAE,MAAM,CAAC;gBACpE;cACJ;YACJ,CAAC,MACI;cACD,IAAI,CAAC/N,MAAM,CAACqJ,aAAa,CAAC8E,sBAAsB,CAACJ,WAAW,CAAC;YACjE;UACJ,CAAC,MACI;YACD,IAAIlL,MAAM,KAAK,MAAM,EAAE;cACnB,IAAI,CAAC7C,MAAM,CAACqJ,aAAa,CAAC+E,kBAAkB,CAACL,WAAW,CAAC;YAC7D,CAAC,MACI;cACD,IAAI,CAAC/N,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;YACjE;UACJ;UACA;QACJ,KAAK,eAAe;UAChB,IAAI/I,SAAS,CAACrH,MAAM,KAAK,CAAC,EAAE;YACxB;YACA,IAAI,CAACqC,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;YAC7D;UACJ;UACA,IAAI/I,SAAS,CAACrH,MAAM,KAAKkF,MAAM,KAAK,MAAM,IAAKqL,cAAc,IACzDD,cAAc,IAAKpL,MAAM,KAAK,UAAY,CAAC,EAAE;YAC7C,IAAIA,MAAM,KAAK,MAAM,EAAE;cACnB,IAAI,CAAC7C,MAAM,CAACqJ,aAAa,CAAC+E,kBAAkB,CAACL,WAAW,CAAC;YAC7D,CAAC,MACI;cACD,IAAI,CAAC/N,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;cAC7D,IAAI,CAAC/N,MAAM,CAACqJ,aAAa,CAAC+E,kBAAkB,CAACL,WAAW,CAAC;YAC7D;UACJ,CAAC,MACI;YACD,IAAI,CAAC/N,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;UACjE;UACA;MACR;IACJ;IACA;IAAA,KACK,IAAI9P,iBAAiB,CAAC+G,SAAS,CAAC,IAAIgJ,QAAQ,KAAK,eAAe,IAAI1B,SAAS,CAAClD,QAAQ,KAAK,CAAC,EAAE;MAC/F,IAAI,CAACpJ,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACyE,WAAW,CAAC;IACjE;EACJ,CAAC;EACDjO,IAAI,CAACjC,SAAS,CAACiQ,sBAAsB,GAAG,UAAUO,UAAU,EAAE3H,SAAS,EAAEO,IAAI,EAAE;IAC3E,IAAIoD,QAAQ,GAAG,IAAI,CAACrK,MAAM;IAC1B,IAAIqO,UAAU,CAAC1Q,MAAM,GAAG,CAAC,EAAE;MACvB0M,QAAQ,CAAChB,aAAa,CAACQ,wBAAwB,CAACnD,SAAS,EAAEO,IAAI,EAAE,KAAK,CAAC;IAC3E,CAAC,MACI,IAAIoH,UAAU,CAAC1Q,MAAM,GAAG,CAAC,EAAE;MAC5B,IAAI,CAAC2Q,2BAA2B,CAACrH,IAAI,EAAEoH,UAAU,EAAE3H,SAAS,CAAC;IACjE,CAAC,MACI;MACD,IAAI,CAACjF,YAAY,CAAC8M,oCAAoC,CAACF,UAAU,CAAC,CAAC,CAAC,EAAEpH,IAAI,CAACoH,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE3H,SAAS,CAAC;IACzG;EACJ,CAAC;EACD5G,IAAI,CAACjC,SAAS,CAACyQ,2BAA2B,GAAG,UAAUrH,IAAI,EAAEoH,UAAU,EAAE3H,SAAS,EAAE;IAChF,IAAI2D,QAAQ,GAAG,IAAI,CAACrK,MAAM;IAC1B,IAAI2J,SAAS;IACb,IAAIC,OAAO;IACX,IAAIR,QAAQ;IACZ,IAAI9B,KAAK,GAAG+C,QAAQ,CAAChJ,UAAU;IAC/B,IAAIiL,SAAS,GAAG5F,SAAS,CAACN,eAAe;IACzC,IAAIoI,iBAAiB,GAAGnE,QAAQ,CAACO,qBAAqB;IACtD,IAAIyD,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAACqC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5CA,SAAS,GAAG1C,IAAI,CAACK,KAAK,CAACqC,SAAS,CAAC;IACrC;IACA,IAAI0E,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAACsC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1CA,OAAO,GAAG3C,IAAI,CAACK,KAAK,CAACsC,OAAO,CAAC;IACjC;IACA,IAAIyE,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAAC8B,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3CA,QAAQ,GAAGnC,IAAI,CAACK,KAAK,CAAC8B,QAAQ,CAAC;IACnC;IACA,IAAIO,SAAS,IAAIC,OAAO,IAAK4E,iBAAiB,IAAKH,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAACqC,SAAS,CAAC,KAAK,CAAC,CAAE,IACzF0E,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAACsC,OAAO,CAAC,KAAK,CAAC,CAAG,EAAE;MAC7CS,QAAQ,CAACU,cAAc,CAAC,WAAW,EAAEV,QAAQ,CAAChB,aAAa,CAAC+C,iBAAiB,CAACzC,SAAS,CAAC,EAAE2C,SAAS,EAAE,IAAI,CAAC;MAC1GjC,QAAQ,CAACU,cAAc,CAAC,SAAS,EAAEV,QAAQ,CAAChB,aAAa,CAAC+C,iBAAiB,CAACxC,OAAO,CAAC,EAAE0C,SAAS,EAAE,IAAI,CAAC;MACtGjC,QAAQ,CAAChB,aAAa,CAACoF,iBAAiB,CAAC/H,SAAS,CAAC;IACvD,CAAC,MACI,IAAIkD,OAAO,IAAIR,QAAQ,IAAKoF,iBAAiB,IAC7CH,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAACsC,OAAO,CAAC,KAAK,CAAC,CAAE,IAAKyE,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAAC8B,QAAQ,CAAC,KAAK,CAAC,CAAG,EAAE;MAC5FiB,QAAQ,CAACU,cAAc,CAAC,SAAS,EAAEV,QAAQ,CAAChB,aAAa,CAAC+C,iBAAiB,CAACxC,OAAO,CAAC,EAAE0C,SAAS,EAAE,IAAI,CAAC;MACtGjC,QAAQ,CAAChB,aAAa,CAACwB,mBAAmB,CAACzB,QAAQ,EAAEkD,SAAS,CAAC;IACnE,CAAC,MACI,IAAI3C,SAAS,IAAIP,QAAQ,IAAKoF,iBAAiB,IAAKH,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAACqC,SAAS,CAAC,KAAK,CAAC,CAAE,IAC5F0E,UAAU,CAAC3G,OAAO,CAACJ,KAAK,CAAC8B,QAAQ,CAAC,KAAK,CAAC,CAAG,EAAE;MACjDiB,QAAQ,CAACU,cAAc,CAAC,WAAW,EAAEV,QAAQ,CAAChB,aAAa,CAAC+C,iBAAiB,CAACzC,SAAS,CAAC,EAAE2C,SAAS,EAAE,IAAI,CAAC;MAC1GjC,QAAQ,CAAChB,aAAa,CAACwB,mBAAmB,CAACzB,QAAQ,EAAEkD,SAAS,CAAC;IACnE;EACJ,CAAC;EACDxM,IAAI,CAACjC,SAAS,CAAC6Q,cAAc,GAAG,UAAUzH,IAAI,EAAE;IAC5C,IAAI0H,OAAO,GAAG,KAAK;IACnB,IAAI7E,QAAQ,GAAG7C,IAAI,CAACb,eAAe;IACnC,IAAIwI,QAAQ,GAAG,IAAI,CAAC5O,MAAM,CAAC6O,eAAe,IACtC,IAAI,CAAC7O,MAAM,CAAC6O,eAAe,CAAC5H,IAAI,CAAC6H,QAAQ,CAAC;IAC9C,IAAIF,QAAQ,IAAIA,QAAQ,CAACxI,eAAe,EAAE;MACtC,IAAI2I,SAAS,GAAG1Q,QAAQ,CAAC,2BAA2B,EAAEuQ,QAAQ,CAAC;MAC/D,IAAII,OAAO,GAAG3Q,QAAQ,CAAC,yBAAyB,EAAEuQ,QAAQ,CAAC;MAC3D,IAAIK,YAAY,GAAG5Q,QAAQ,CAAC,0BAA0B,EAAEuQ,QAAQ,CAAC;MACjE,IAAIM,gBAAgB,GAAG7Q,QAAQ,CAAC,8BAA8B,EAAEuQ,QAAQ,CAAC;MACzE,IAAIlF,IAAI,GAAGtM,MAAM,CAACsM,IAAI,CAACkF,QAAQ,CAACxI,eAAe,CAAC;MAChD,IAAIsD,IAAI,CAAChC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAIgC,IAAI,CAAChC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAClEgC,IAAI,CAAChC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAIgC,IAAI,CAAChC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;QACxE,IAAKzJ,iBAAiB,CAAC8Q,SAAS,CAAC,IAAI,CAAC9Q,iBAAiB,CAAC6L,QAAQ,CAACH,SAAS,CAAC,IACtE1L,iBAAiB,CAAC+Q,OAAO,CAAC,IAAI,CAAC/Q,iBAAiB,CAAC6L,QAAQ,CAACF,OAAO,CAAE,IACnE3L,iBAAiB,CAAC6L,QAAQ,CAACH,SAAS,CAAC,IAAI,CAAC1L,iBAAiB,CAAC8Q,SAAS,CAAE,IACvE9Q,iBAAiB,CAAC6L,QAAQ,CAACF,OAAO,CAAC,IAAI,CAAC3L,iBAAiB,CAAC+Q,OAAO,CAAE,IACnED,SAAS,IAAIA,SAAS,CAAC5B,OAAO,CAAC,CAAC,KAAKrD,QAAQ,CAACH,SAAS,CAACwD,OAAO,CAAC,CAAE,IAC/D6B,OAAO,IAAIA,OAAO,CAAC7B,OAAO,CAAC,CAAC,KAAKrD,QAAQ,CAACF,OAAO,CAACuD,OAAO,CAAC,CAAE,IAC5D,CAAClP,iBAAiB,CAACgR,YAAY,CAAC,IAAIA,YAAY,KAAKnF,QAAQ,CAACV,QAAS,IACvE,CAACnL,iBAAiB,CAACgR,YAAY,CAAC,IAAIA,YAAY,KAAKnF,QAAQ,CAACV,QAAQ,IACtE8F,gBAAgB,KAAKpF,QAAQ,CAAC+B,YAAa,EAAE;UACjD8C,OAAO,GAAG,IAAI;QAClB;MACJ;IACJ;IACA,OAAOA,OAAO;EAClB,CAAC;EACD7O,IAAI,CAACjC,SAAS,CAACsR,oBAAoB,GAAG,UAAUlI,IAAI,EAAE;IAClD,IAAIkI,oBAAoB,GAAG,KAAK;IAChC,IAAIP,QAAQ,GAAG,IAAI,CAAC5O,MAAM,CAAC6O,eAAe,CAAC5H,IAAI,CAAC6H,QAAQ,CAAC;IACzD;IACA,IAAIF,QAAQ,IAAIA,QAAQ,CAACxI,eAAe,IAAIwI,QAAQ,CAACxI,eAAe,CAACtI,cAAc,CAAC,aAAa,CAAC,EAAE;MAChG,IAAImJ,IAAI,CAACb,eAAe,CAAC4D,gBAAgB,KAAK4E,QAAQ,CAACxI,eAAe,CAAC4D,gBAAgB,IACnF,EAAE/C,IAAI,CAACb,eAAe,CAAC4D,gBAAgB,KAAK,EAAE,IAAI/L,iBAAiB,CAAC2Q,QAAQ,CAACxI,eAAe,CAAC4D,gBAAgB,CAAC,CAAC,EAAE;QACjHmF,oBAAoB,GAAG,IAAI;MAC/B,CAAC,MACI;QACD,IAAI,CAACnP,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE6D,QAAQ,CAACxI,eAAe,CAAC+B,WAAW,EAAElB,IAAI,CAACb,eAAe,EAAE,IAAI,CAAC;MAC/G;IACJ;IACA,OAAO+I,oBAAoB;EAC/B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIrP,IAAI,CAACjC,SAAS,CAACuR,kBAAkB,GAAG,UAAUnI,IAAI,EAAE;IAChD,IAAIoI,qBAAqB,GAAG,KAAK;IACjC,IAAIT,QAAQ,GAAG,IAAI,CAAC5O,MAAM,CAAC6O,eAAe,CAAC5H,IAAI,CAAC6H,QAAQ,CAAC;IACzD,IAAIF,QAAQ,IAAI,IAAI,CAAC5O,MAAM,CAACqB,UAAU,CAACC,UAAU,IAAI,IAAI,CAACtB,MAAM,CAACsP,yBAAyB,IACtF,IAAI,CAACtP,MAAM,CAACe,iBAAiB,CAACwO,mBAAmB,CAACtI,IAAI,CAAC,CAACtJ,MAAM,GAAG,CAAC,EAAE;MACpE,IAAI,IAAI,CAAC+Q,cAAc,CAACzH,IAAI,CAAC,EAAE;QAC3BoI,qBAAqB,GAAG,IAAI;MAChC;IACJ;IACA,OAAOA,qBAAqB;EAChC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIvP,IAAI,CAACjC,SAAS,CAAC2R,qBAAqB,GAAG,UAAUvI,IAAI,EAAEwI,UAAU,EAAE;IAC/D,IAAIC,YAAY,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC;IACpEtS,MAAM,CAACsM,IAAI,CAACzC,IAAI,CAACb,eAAe,CAAC,CAACuJ,OAAO,CAAC,UAAUC,QAAQ,EAAE;MAC1D,IAAIF,YAAY,CAAChI,OAAO,CAACkI,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QACvCH,UAAU,CAACrJ,eAAe,CAACwJ,QAAQ,CAAC,GAAG3I,IAAI,CAACb,eAAe,CAACwJ,QAAQ,CAAC;MACzE;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI9P,IAAI,CAACjC,SAAS,CAACsM,oBAAoB,GAAG,UAAUtF,IAAI,EAAE;IAClD,IAAIwK,qBAAqB,GAAG,IAAI,CAACD,kBAAkB,CAACvK,IAAI,CAACoC,IAAI,CAAC;IAC9D,IAAI4I,UAAU;IACd,IAAIC,gBAAgB;IACpB,IAAI,CAAC7R,iBAAiB,CAAC4G,IAAI,CAACoC,IAAI,CAAC8I,UAAU,CAAC,IAAI,CAACV,qBAAqB,EAAE;MACpEQ,UAAU,GAAG,IAAI,CAAC7P,MAAM,CAAC2H,aAAa,CAAC9C,IAAI,CAACoC,IAAI,CAAC8I,UAAU,CAAC7G,MAAM,CAAC;MACnE,IAAI,IAAI,CAACwF,cAAc,CAAC7J,IAAI,CAACoC,IAAI,CAAC,IAAI,IAAI,CAACjH,MAAM,CAACe,iBAAiB,CAACwO,mBAAmB,CAACM,UAAU,CAAC,CAAClS,MAAM,GAAG,CAAC,IACvG,IAAI,CAACqC,MAAM,CAACsP,yBAAyB,EAAE;QAC1CD,qBAAqB,GAAG,IAAI;MAChC,CAAC,MACI;QACDA,qBAAqB,GAAG,KAAK;MACjC;IACJ,CAAC,MACI,IAAIxK,IAAI,CAACoC,IAAI,CAAC+I,YAAY,CAACrS,MAAM,GAAG,CAAC,IAAI,CAAC0R,qBAAqB,EAAE;MAClEA,qBAAqB,GAAG,IAAI,CAACD,kBAAkB,CAACvK,IAAI,CAACoC,IAAI,CAAC;MAC1D,IAAI,CAACoI,qBAAqB,IAAI,IAAI,CAACX,cAAc,CAAC7J,IAAI,CAACoC,IAAI,CAAC,EAAE;QAC1D,KAAK,IAAIzJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqH,IAAI,CAACoC,IAAI,CAAC+I,YAAY,CAACrS,MAAM,EAAEH,CAAC,EAAE,EAAE;UACpD,IAAI,IAAI,CAACwC,MAAM,CAACe,iBAAiB,CAACwO,mBAAmB,CAAC1K,IAAI,CAACoC,IAAI,CAAC+I,YAAY,CAACxS,CAAC,CAAC,CAAC,CAACG,MAAM,GAAG,CAAC,EAAE;YACzFmS,gBAAgB,GAAGtS,CAAC;YACpB6R,qBAAqB,GAAG,IAAI;UAChC;QACJ;MACJ;IACJ;IACA,IAAI,CAAC,IAAI,CAACrP,MAAM,CAAC6H,cAAc,IAAK,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,IACzG,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAC9G,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,SAAW,EAAE;MAC3E,IAAI,CAAClH,YAAY,GAAG,IAAI,CAAC+N,cAAc,CAAC7J,IAAI,CAACoC,IAAI,CAAC;IACtD;IACA,IAAI,CAACrG,kBAAkB,GAAG,IAAI,CAACuO,oBAAoB,CAACtK,IAAI,CAACoC,IAAI,CAAC;IAC9D,IAAI,IAAI,CAACrG,kBAAkB,EAAE;MACzB,IAAI,CAACZ,MAAM,CAACiQ,qBAAqB,GAAG,IAAI;MACxC,IAAI,CAACjQ,MAAM,CAACuB,uBAAuB,CAAC2O,oBAAoB,CAACrL,IAAI,CAACoC,IAAI,CAAC;IACvE;IACA,IAAIkJ,cAAc,GAAG,CAAC,CAAC;IACvB,IAAId,qBAAqB,IAAI,IAAI,CAACrP,MAAM,CAACoQ,2BAA2B,IAAI,EAAE,IAAI,CAACpQ,MAAM,CAACqQ,MAAM,IACxF,IAAI,CAACrQ,MAAM,CAACiC,QAAQ,CAACqO,iBAAiB,IAAI,IAAI,CAACtQ,MAAM,CAACqB,UAAU,CAACkP,eAAe,CAAC,EAAE;MACnF,IAAI,CAACtS,iBAAiB,CAAC4R,UAAU,CAAC,EAAE;QAChCM,cAAc,GAAG,IAAI,CAACnQ,MAAM,CAACuB,uBAAuB,CAACiP,aAAa,CAACX,UAAU,EAAEhL,IAAI,CAACoC,IAAI,CAAC;MAC7F,CAAC,MACI,IAAI,CAAChJ,iBAAiB,CAAC6R,gBAAgB,CAAC,EAAE;QAC3CK,cAAc,GAAG,IAAI,CAACnQ,MAAM,CAACuB,uBAAuB,CAACiP,aAAa,CAAC3L,IAAI,CAACoC,IAAI,CAAC+I,YAAY,CAACF,gBAAgB,CAAC,EAAEjL,IAAI,CAACoC,IAAI,CAAC;MAC3H,CAAC,MACI;QACDkJ,cAAc,GAAG,IAAI,CAACnQ,MAAM,CAACuB,uBAAuB,CAACiP,aAAa,CAAC3L,IAAI,CAACoC,IAAI,CAAC;MACjF;MACA,IAAI,CAACjH,MAAM,CAACiQ,qBAAqB,GAAG,IAAI;MACxC,IAAI,CAAChS,iBAAiB,CAACI,QAAQ,CAAC,eAAe,EAAE8R,cAAc,CAAC,CAAC,EAAE;QAC/D,IAAIM,OAAO,GAAG,IAAI,CAACC,iBAAiB,CAAC7L,IAAI,CAAC;QAC1C,IAAI4L,OAAO,CAACE,YAAY,CAACC,uBAAuB,KAAK,KAAK,IACtDH,OAAO,CAACE,YAAY,CAACE,UAAU,KAAK,KAAK,IACzCJ,OAAO,CAACE,YAAY,CAACG,WAAW,KAAK,KAAK,EAAE;UAC5C,IAAI,CAAC9Q,MAAM,CAACuB,uBAAuB,CAACwP,oBAAoB,CAACZ,cAAc,CAAC;QAC5E,CAAC,MACI;UACD,IAAI,IAAI,CAACnQ,MAAM,CAACuG,UAAU,IAAI,IAAI,CAACvG,MAAM,CAACuG,UAAU,CAAC9E,YAAY,IAC7D,IAAI,CAACzB,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,CAACb,kBAAkB,EAAE;YAC1E,IAAI,CAACR,uBAAuB,GAAG,IAAI;YACnC,IAAI,CAACJ,MAAM,CAACe,iBAAiB,CAACiQ,mBAAmB,CAACnM,IAAI,CAACoC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC;UACxE;UACA,IAAI,CAACjH,MAAM,CAACuB,uBAAuB,CAAC0P,sBAAsB,CAAC,CAAC;QAChE;MACJ,CAAC,MACI;QACD,IAAI,CAACC,gBAAgB,CAACrM,IAAI,CAAC;MAC/B;IACJ,CAAC,MACI;MACD,IAAI,IAAI,CAAClE,YAAY,EAAE;QACnB,IAAI,CAACX,MAAM,CAACiQ,qBAAqB,GAAG,IAAI;MAC5C;MACA,IAAI,CAACiB,gBAAgB,CAACrM,IAAI,CAAC;IAC/B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI/E,IAAI,CAACjC,SAAS,CAAC6S,iBAAiB,GAAG,UAAUS,eAAe,EAAE;IAC1D,IAAIV,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,CAACW,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACpR,MAAM,CAACqR,iBAAiB,GAAGZ,OAAO;IACvCA,OAAO,CAACa,MAAM,GAAG,KAAK;IACtBb,OAAO,CAACxJ,IAAI,GAAGkK,eAAe,CAAClK,IAAI;IACnCwJ,OAAO,CAACc,WAAW,GAAG,oBAAoB;IAC1Cd,OAAO,CAACE,YAAY,GAAG,IAAI,CAAC3Q,MAAM,CAACwR,kBAAkB;IACrDf,OAAO,CAACgB,aAAa,GAAGN,eAAe;IACvC,IAAI,CAACnR,MAAM,CAAC0R,eAAe,CAACjB,OAAO,CAAC;IACpC,OAAOA,OAAO;EAClB,CAAC;EACD3Q,IAAI,CAACjC,SAAS,CAACuT,iBAAiB,GAAG,YAAY;IAC3C,IAAI,CAACpR,MAAM,CAACwR,kBAAkB,CAACZ,uBAAuB,GAAG,IAAI;IAC7D,IAAI,CAAC5Q,MAAM,CAACwR,kBAAkB,CAACX,UAAU,GAAG,KAAK;IACjD,IAAI,CAAC7Q,MAAM,CAACwR,kBAAkB,CAACV,WAAW,GAAG,KAAK;EACtD,CAAC;EACDhR,IAAI,CAACjC,SAAS,CAAC8T,yBAAyB,GAAG,YAAY;IACnD,KAAK,IAAInU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACwC,MAAM,CAACe,iBAAiB,CAACC,mBAAmB,CAACrD,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC/E,IAAIoU,KAAK,GAAG,IAAI,CAAC5R,MAAM,CAACe,iBAAiB,CAACC,mBAAmB,CAACxD,CAAC,CAAC;MAChE,IAAIoU,KAAK,CAACxL,eAAe,CAAC+B,WAAW,IAAIyJ,KAAK,CAACxL,eAAe,CAAC+B,WAAW,CAACxK,MAAM,GAAG,CAAC,EAAE;QACnF,IAAI,CAACqC,MAAM,CAAC6R,iBAAiB,GAAGD,KAAK;QACrC,IAAI,CAAC,IAAI,CAACxR,uBAAuB,EAAE;UAC/B,IAAI,CAAC0R,WAAW,GAAG,IAAI;QAC3B;QACA,IAAI,CAAC9R,MAAM,CAACe,iBAAiB,CAACiQ,mBAAmB,CAACY,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC;MACpE;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI9R,IAAI,CAACjC,SAAS,CAACqT,gBAAgB,GAAG,UAAUrM,IAAI,EAAE;IAC9C,IAAIkN,WAAW,GAAGlN,IAAI,CAACoC,IAAI;IAC3B,IAAI,CAAC+K,YAAY,GAAGD,WAAW;IAC/B,IAAI,IAAI,CAAC/R,MAAM,CAACoQ,2BAA2B,IAAI,EAAE,IAAI,CAACpQ,MAAM,CAACqQ,MAAM,IAAI,IAAI,CAACrQ,MAAM,CAACiC,QAAQ,CAACqO,iBAAiB,IACzG,IAAI,CAACtQ,MAAM,CAACqB,UAAU,CAACkP,eAAe,CAAC,EAAE;MACzC,IAAI,CAAC0B,uBAAuB,CAACF,WAAW,CAAC;IAC7C;IACA,IAAI,IAAI,CAAC/R,MAAM,CAACe,iBAAiB,EAAE;MAC/B,IAAI,CAACf,MAAM,CAACe,iBAAiB,CAACmR,uBAAuB,GAAG,EAAE;IAC9D;IACA,IAAI,CAAC,IAAI,CAAClS,MAAM,CAACiQ,qBAAqB,IAAK,IAAI,CAACjQ,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAE,KAAK,IAAI,CAAC7H,MAAM,CAACoQ,2BAA2B,IACnK,EAAE,IAAI,CAACpQ,MAAM,CAACqQ,MAAM,IAAI,IAAI,CAACrQ,MAAM,CAACiC,QAAQ,CAACqO,iBAAiB,IAAI,IAAI,CAACtQ,MAAM,CAACqB,UAAU,CAACkP,eAAe,CAAC,EAAE;MAC3G;MACA,IAAI,CAACoB,yBAAyB,CAAC,CAAC;MAChC;MACA,IAAII,WAAW,CAAC3L,eAAe,CAAC+B,WAAW,EAAE;QACzC,IAAI,CAACnI,MAAM,CAACmS,iBAAiB,GAAGJ,WAAW,CAAC3L,eAAe,CAAC0E,WAAW;QACvE,IAAI,IAAI,CAACnK,YAAY,EAAE;UACnB,IAAI,CAACX,MAAM,CAAC6R,iBAAiB,GAAGE,WAAW;QAC/C;QACA,IAAI,CAAC,IAAI,CAAC3R,uBAAuB,EAAE;UAC/B,IAAI,CAAC0R,WAAW,GAAG,IAAI;UACvB,IAAI,CAAC9R,MAAM,CAACe,iBAAiB,CAACiQ,mBAAmB,CAACe,WAAW,EAAE,EAAE,EAAE,EAAE,CAAC;UACtE,IAAI,CAAC/R,MAAM,CAACe,iBAAiB,CAACqR,sBAAsB,GAAG,EAAE;QAC7D;QACA,IAAI,CAAChS,uBAAuB,GAAG,KAAK;MACxC;MACA,IAAI,CAACJ,MAAM,CAACe,iBAAiB,CAACmR,uBAAuB,GAAG,EAAE;MAC1D,IAAI,IAAI,CAAClS,MAAM,CAACqS,qBAAqB,IAAI,IAAI,CAACrS,MAAM,CAACe,iBAAiB,CAACmR,uBAAuB,KAC1FH,WAAW,CAAC3L,eAAe,CAAC8C,MAAM,IAAI6I,WAAW,CAACO,eAAe,IAChE,IAAI,CAACtS,MAAM,CAAC6O,eAAe,CAACkD,WAAW,CAACjD,QAAQ,CAAC,CAAC1I,eAAe,CAACuD,SAAU,IAAK9E,IAAI,CAACqF,MAAM,KAAK,gBAAiB,KAClH,CAAC6H,WAAW,CAACO,eAAe,IAAKP,WAAW,CAACO,eAAe,IAAIP,WAAW,CAAC3L,eAAe,CAAC8H,cAAe,CAAC,EAAE;QAC/G,IAAI,CAAClO,MAAM,CAACe,iBAAiB,CAAC,kBAAkB,CAAC,CAACgR,WAAW,CAAC;QAC9D,IAAI,CAACJ,yBAAyB,CAAC,CAAC;MACpC;MACA,IAAI,CAAC3R,MAAM,CAACe,iBAAiB,CAACmR,uBAAuB,GAAG,EAAE;MAC1D,IAAI,IAAI,CAAClS,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;QACjF,KAAK,IAAIrK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuU,WAAW,CAAC/B,YAAY,CAACrS,MAAM,EAAEH,CAAC,EAAE,EAAE;UACtD,IAAIuU,WAAW,CAAC/B,YAAY,CAACxS,CAAC,CAAC,CAAC4I,eAAe,CAAC+B,WAAW,EAAE;YACzD,IAAI,CAACnI,MAAM,CAACe,iBAAiB,CAACiQ,mBAAmB,CAACe,WAAW,CAAC/B,YAAY,CAACxS,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;UAC1F;QACJ;MACJ;MACA,IAAI,CAAC+U,yBAAyB,CAAC,CAAC;MAChC,IAAI,CAACvS,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACT,WAAW,EAAE,IAAI,CAAC;IAClE;IACA;IACA,IAAIA,WAAW,CAAChC,UAAU,EAAE;MACxB,IAAI,IAAI,CAAC/P,MAAM,CAACoQ,2BAA2B,IAAI,EAAE,IAAI,CAACpQ,MAAM,CAACqQ,MAAM,IAAI,IAAI,CAACrQ,MAAM,CAACiC,QAAQ,CAACqO,iBAAiB,IACzG,IAAI,CAACtQ,MAAM,CAACqB,UAAU,CAACkP,eAAe,CAAC,EAAE;QACzC,IAAI,CAACvQ,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACT,WAAW,EAAE,IAAI,CAAC;MAClE;MACA,IAAIlC,UAAU,GAAG,IAAI,CAAC7P,MAAM,CAAC2H,aAAa,CAACoK,WAAW,CAAChC,UAAU,CAAC7G,MAAM,CAAC;MACzE,IAAI,CAACjL,iBAAiB,CAAC4R,UAAU,CAAC,EAAE;QAChC,IAAI,CAACA,UAAU,CAACzJ,eAAe,CAAC4D,gBAAgB,EAAE;UAC9C,IAAI,CAAC8H,WAAW,GAAG,IAAI;UACvB,IAAI,CAAC9R,MAAM,CAACe,iBAAiB,CAACiQ,mBAAmB,CAACnB,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC;UACrE,IAAI,CAAC0C,yBAAyB,CAAC,CAAC;QACpC;MACJ;IACJ;IACA,IAAI,IAAI,CAACvS,MAAM,CAACyS,yBAAyB,IAAI,IAAI,CAACzS,MAAM,CAACuB,uBAAuB,IAAIsD,IAAI,CAACoC,IAAI,EAAE;MAC3F,IAAI,CAACjH,MAAM,CAACuB,uBAAuB,CAAC,oBAAoB,CAAC,GAAG,EAAE;MAC9D,IAAI,CAACvB,MAAM,CAACuB,uBAAuB,CAAC,iBAAiB,CAAC,CAACsD,IAAI,CAACoC,IAAI,CAAC;IACrE;IACA,IAAI,CAACjH,MAAM,CAACe,iBAAiB,CAAC,oBAAoB,CAAC,GAAG,EAAE;IACxD,IAAI9C,iBAAiB,CAAC,IAAI,CAACwD,YAAY,CAAC,IAAK,IAAI,CAACA,YAAY,IAAI,CAAC,IAAI,CAACA,YAAY,CAAC,yBAAyB,CAAE,EAAE;MAC9G,IAAI,CAACiR,kBAAkB,CAAC7N,IAAI,CAAC;IACjC;EACJ,CAAC;EACD/E,IAAI,CAACjC,SAAS,CAAC0U,yBAAyB,GAAG,YAAY;IACnD,IAAIhO,KAAK,GAAG,IAAI;IAChB,IAAIoO,WAAW,GAAGtU,QAAQ,CAAC,cAAc,EAAE,IAAI,CAAC2B,MAAM,CAACe,iBAAiB,CAAC;IACzE,KAAK,IAAIvD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmV,WAAW,CAAChV,MAAM,EAAEH,CAAC,EAAE,EAAE;MACzC,IAAI,CAACwC,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACG,WAAW,CAACnV,CAAC,CAAC,CAAC;IAC/D;IACA,IAAI,IAAI,CAACwC,MAAM,CAACuG,UAAU,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAACvG,MAAM,CAACuG,UAAU,CAAC,qBAAqB,CAAC,CAAC5I,MAAM,GAAG,CAAC,EAAE;MAC3G,IAAI,CAACqC,MAAM,CAACuG,UAAU,CAAC,qBAAqB,CAAC,CAACoJ,OAAO,CAAC,UAAUhH,MAAM,EAAE;QACpE,IAAIA,MAAM,CAACvC,eAAe,CAAC+B,WAAW,IAAIQ,MAAM,CAACvC,eAAe,CAAC+B,WAAW,CAACxK,MAAM,GAAG,CAAC,EAAE;UACrF4G,KAAK,CAACvE,MAAM,CAACe,iBAAiB,CAACiQ,mBAAmB,CAACrI,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;QACtE;MACJ,CAAC,CAAC;IACN;IACA,KAAK,IAAInL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmV,WAAW,CAAChV,MAAM,EAAEH,CAAC,EAAE,EAAE;MACzC,IAAI,CAACwC,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACG,WAAW,CAACnV,CAAC,CAAC,CAAC;IAC/D;IACAY,QAAQ,CAAC,cAAc,EAAE,EAAE,EAAE,IAAI,CAAC4B,MAAM,CAACe,iBAAiB,CAAC;IAC3D3C,QAAQ,CAAC,WAAW,EAAE,EAAE,EAAE,IAAI,CAAC4B,MAAM,CAACe,iBAAiB,CAAC;EAC5D,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjB,IAAI,CAACjC,SAAS,CAACoU,uBAAuB,GAAG,UAAUhL,IAAI,EAAE;IACrD,IAAI8K,WAAW,GAAG9K,IAAI;IACtB,IAAI8K,WAAW,CAACO,eAAe,IAAI,IAAI,CAAC3R,YAAY,KAAKoR,WAAW,CAAC,IAAI,CAAC/R,MAAM,CAACqB,UAAU,CAACuM,MAAM,CAAC,KAAK,KAAK,IACzG,IAAI,CAAC5N,MAAM,CAAC4S,QAAQ,KAAK,MAAM,CAAC,IAAK,CAAC3U,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACuG,UAAU,CAACnF,cAAc,CAAC,IAC9F,CAAC,IAAI,CAACpB,MAAM,CAACuG,UAAU,CAACnF,cAAc,CAACyR,oBAAqB,EAAE;MAC9D,IAAI,CAAC7S,MAAM,CAACe,iBAAiB,CAAC,kBAAkB,CAAC,CAACgR,WAAW,CAAC;IAClE;IACA,IAAI,CAAC9T,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACuG,UAAU,CAACnF,cAAc,CAAC,EAAE;MAC3D,IAAI,CAACpB,MAAM,CAACuG,UAAU,CAACnF,cAAc,CAACyR,oBAAoB,GAAG,KAAK;IACtE;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI/S,IAAI,CAACjC,SAAS,CAACgQ,uBAAuB,GAAG,UAAU5G,IAAI,EAAE;IACrD,IAAI6L,YAAY,GAAG7L,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAACsI,SAAS,CAAC;IACzD,IAAI2C,SAAS,GAAGrF,IAAI,CAACb,eAAe;IACpC,IAAI,IAAI,CAACpG,MAAM,CAACqB,UAAU,CAACuM,MAAM,EAAE;MAC/B,IAAI,CAAC5N,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAACuM,MAAM,EAAE,CAAC3G,IAAI,CAACb,eAAe,CAAC8H,cAAc,EAAEjH,IAAI,CAAC;IACzG;IACA,IAAIA,IAAI,CAACqL,eAAe,IAAIhG,SAAS,CAAC4B,cAAc,EAAE;MAClD,IAAI,CAAClO,MAAM,CAAC+K,cAAc,CAAC,WAAW,EAAEuB,SAAS,CAACyG,aAAa,EAAEzG,SAAS,EAAE,IAAI,CAAC;MACjF,IAAI,CAACtM,MAAM,CAAC+K,cAAc,CAAC,SAAS,EAAEuB,SAAS,CAAC0G,WAAW,EAAE1G,SAAS,EAAE,IAAI,CAAC;MAC7E,IAAI,CAACtM,MAAM,CAAC+K,cAAc,CAAC,WAAW,EAAEuB,SAAS,CAACyG,aAAa,EAAE9L,IAAI,EAAE,IAAI,CAAC;MAC5E,IAAI,CAACjH,MAAM,CAAC+K,cAAc,CAAC,SAAS,EAAEuB,SAAS,CAAC0G,WAAW,EAAE/L,IAAI,EAAE,IAAI,CAAC;MACxE,IAAI,CAACjH,MAAM,CAAC+K,cAAc,CAAC,oBAAoB,EAAEuB,SAAS,CAACyG,aAAa,EAAE9L,IAAI,EAAE,IAAI,CAAC;MACrF,IAAI,CAACjH,MAAM,CAAC+K,cAAc,CAAC,kBAAkB,EAAEuB,SAAS,CAAC0G,WAAW,EAAE/L,IAAI,EAAE,IAAI,CAAC;MACjF,IAAI,CAACjH,MAAM,CAAC+K,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAAC4J,cAAc,CAAChM,IAAI,EAAE,IAAI,CAAC,EAAEqF,SAAS,EAAE,IAAI,CAAC;MAC1G,IAAI,CAACtM,MAAM,CAAC+K,cAAc,CAAC,MAAM,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAAC6J,aAAa,CAAC5G,SAAS,EAAE,IAAI,CAAC,EAAEA,SAAS,EAAE,IAAI,CAAC;MAC7G,IAAI,CAACtM,MAAM,CAAC+K,cAAc,CAAC,eAAe,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAAC8J,gBAAgB,CAAC7G,SAAS,CAAC8G,KAAK,EAAE9G,SAAS,CAAC5J,QAAQ,CAAC,EAAE4J,SAAS,EAAE,IAAI,CAAC;MAC7I,IAAI,CAACtM,MAAM,CAACqJ,aAAa,CAACoF,iBAAiB,CAACxH,IAAI,CAAC;IACrD,CAAC,MACI,IAAIA,IAAI,CAACqL,eAAe,IAAI,CAAChG,SAAS,CAAC4B,cAAc,EAAE;MACxD,IAAI,CAAClO,MAAM,CAACqJ,aAAa,CAACU,eAAe,CAAC9C,IAAI,CAAC;MAC/C,IAAI,CAACjH,MAAM,CAACqJ,aAAa,CAACoF,iBAAiB,CAACxH,IAAI,CAAC;MACjD,IAAI,CAACjH,MAAM,CAAC+K,cAAc,CAAC,eAAe,EAAEuB,SAAS,CAACyG,aAAa,EAAEzG,SAAS,EAAE,IAAI,CAAC;MACrF,IAAI,CAACtM,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAEuB,SAAS,CAAC0G,WAAW,EAAE1G,SAAS,EAAE,IAAI,CAAC;MACjF,IAAI,CAACtM,MAAM,CAAC+K,cAAc,CAAC,cAAc,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAACgK,qBAAqB,CAACpM,IAAI,CAAC,EAAEqF,SAAS,EAAE,IAAI,CAAC;MAClH,IAAI,CAACtM,MAAM,CAACqJ,aAAa,CAACiK,mBAAmB,CAACrM,IAAI,CAAC;IACvD,CAAC,MACI;MACD,IAAI0C,SAAS,GAAG,IAAI,CAAC3J,MAAM,CAACwJ,oBAAoB,CAAC+J,cAAc,CAACT,YAAY,EAAE7L,IAAI,CAACb,eAAe,CAAC;MACnG,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,WAAW,EAAEpB,SAAS,EAAE1C,IAAI,CAACb,eAAe,EAAE,IAAI,CAAC;MAC9E,IAAI,CAACpG,MAAM,CAACqJ,aAAa,CAAC2B,iBAAiB,CAAC/D,IAAI,EAAE,WAAW,CAAC;MAC9D,IAAI,CAACjH,MAAM,CAACwJ,oBAAoB,CAACC,gBAAgB,CAACxC,IAAI,CAAC;MACvD,IAAI,CAACjH,MAAM,CAAC+K,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAACuM,MAAM,EAAE3G,IAAI,CAAC,IAAI,CAACjH,MAAM,CAACqB,UAAU,CAACuM,MAAM,CAAC,EAAE3G,IAAI,CAAC;MAClH,IAAI,CAACjH,MAAM,CAACqJ,aAAa,CAACU,eAAe,CAAC9C,IAAI,CAAC;IACnD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACInH,IAAI,CAACjC,SAAS,CAAC2V,oBAAoB,GAAG,UAAUC,WAAW,EAAE;IACzD,IAAIC,cAAc,GAAG,CAAC;IACtB,IAAI1T,MAAM,GAAG,IAAI,CAACA,MAAM,CAAC2T,aAAa,CAACF,WAAW,CAAC;IACnD,IAAIzD,YAAY,GAAGhQ,MAAM,CAACgQ,YAAY;IACtC,IAAI4D,UAAU,GAAG5D,YAAY,GAAGA,YAAY,CAACrS,MAAM,GAAG,CAAC;IACvD,IAAIkW,aAAa,GAAG,CAAC;IACrB,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,SAAS,GAAG,CAAC;IACjB,IAAIC,aAAa,GAAG,CAAC;IACrB,IAAIC,cAAc,GAAG,CAAC,CAAC;IACvB,IAAIjE,YAAY,EAAE;MACd,KAAK,IAAIxS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoW,UAAU,EAAEpW,CAAC,EAAE,EAAE;QACjC,IAAI,CAAC,CAACwS,YAAY,CAACxS,CAAC,CAAC,CAAC4I,eAAe,CAAC0E,WAAW,IAAIkF,YAAY,CAACxS,CAAC,CAAC,CAAC8U,eAAe,KAChFvT,eAAe,CAACiR,YAAY,CAACxS,CAAC,CAAC,CAAC4I,eAAe,CAAC,EAAE;UAClD6N,cAAc,GAAG,IAAI,CAACjU,MAAM,CAACqJ,aAAa,CAAC6K,iBAAiB,CAAClE,YAAY,CAACxS,CAAC,CAAC,CAAC;UAC7EqW,aAAa,IAAIxV,QAAQ,CAAC,eAAe,EAAE4V,cAAc,CAAC;UAC1DD,aAAa,IAAI3V,QAAQ,CAAC,eAAe,EAAE4V,cAAc,CAAC;QAC9D,CAAC,MACI;UACDH,eAAe,IAAI,CAAC;QACxB;MACJ;MACAC,SAAS,GAAGH,UAAU,GAAGE,eAAe;MACxCJ,cAAc,GAAGK,SAAS,GAAG,CAAC,GAAGI,IAAI,CAACC,KAAK,CAACP,aAAa,GAAGG,aAAa,CAAC,GAAG,CAAC;MAC9E,IAAI5I,KAAK,CAACsI,cAAc,CAAC,EAAE;QACvBA,cAAc,GAAG,CAAC;MACtB;MACA,IAAI,CAAC1T,MAAM,CAAC+K,cAAc,CAAC,eAAe,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAAC8J,gBAAgB,CAACnT,MAAM,CAACoG,eAAe,CAAC8H,cAAc,GAAGlO,MAAM,CAACoG,eAAe,CAACgN,KAAK,GAAGpT,MAAM,CAACoG,eAAe,CAACiO,SAAS,EAAEX,cAAc,CAAC,EAAE1T,MAAM,CAACoG,eAAe,EAAE,IAAI,CAAC;MAC9O,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAEoJ,IAAI,CAACG,KAAK,CAACZ,cAAc,CAAC,EAAE1T,MAAM,CAACoG,eAAe,EAAE,IAAI,CAAC;MAChG,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,eAAe,EAAE8I,aAAa,EAAE7T,MAAM,CAACoG,eAAe,EAAE,IAAI,CAAC;MACxF,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,eAAe,EAAEiJ,aAAa,EAAEhU,MAAM,CAACoG,eAAe,EAAE,IAAI,CAAC;IAC5F;IACA,IAAI,CAACpG,MAAM,CAACqJ,aAAa,CAACkL,cAAc,CAACvU,MAAM,CAAC;IAChD,IAAIA,MAAM,CAAC+P,UAAU,EAAE;MACnB,IAAI,CAACyD,oBAAoB,CAACxT,MAAM,CAAC+P,UAAU,CAAC;IAChD;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACAjQ,IAAI,CAACjC,SAAS,CAAC2W,cAAc,GAAG,UAAU3P,IAAI,EAAE;IAC5C,IAAI,CAAC7E,MAAM,CAACuG,UAAU,CAACkO,uBAAuB,CAAC,KAAK,EAAE,IAAI,CAAC;IAC3D,IAAI,CAACC,mBAAmB,CAAC,CAAC;EAC9B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI5U,IAAI,CAACjC,SAAS,CAAC4W,uBAAuB,GAAG,UAAUE,cAAc,EAAEC,aAAa,EAAE;IAC9E,IAAIC,UAAU,GAAG,IAAI,CAAC7U,MAAM,CAAC6O,eAAe;IAC5C,IAAInF,IAAI,GAAGtM,MAAM,CAACsM,IAAI,CAACmL,UAAU,CAAC;IAClC,KAAK,IAAIrX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkM,IAAI,CAAC/L,MAAM,EAAEH,CAAC,EAAE,EAAE;MAClC,IAAIsX,QAAQ,GAAGpL,IAAI,CAAClM,CAAC,CAAC;MACtB,IAAIuX,QAAQ,GAAGF,UAAU,CAACC,QAAQ,CAAC;MACnC,IAAIE,YAAY,GAAG,IAAI,CAAChV,MAAM,CAACiV,iBAAiB,CAACH,QAAQ,CAAC;MAC1D,IAAI,CAACI,YAAY,CAACF,YAAY,CAAClL,QAAQ,EAAEiL,QAAQ,CAACjL,QAAQ,CAAC;MAC3D,OAAOiL,QAAQ,CAACjL,QAAQ;MACxB,IAAI,CAACoL,YAAY,CAACF,YAAY,CAAC5O,eAAe,EAAE2O,QAAQ,CAAC3O,eAAe,CAAC;MACzE,OAAO2O,QAAQ,CAAC3O,eAAe;MAC/B,IAAI,CAAC8O,YAAY,CAACF,YAAY,EAAED,QAAQ,CAAC;MACzC,IAAInO,QAAQ,GAAG,IAAI,CAAC5G,MAAM,CAAC6G,eAAe,CAACa,OAAO,CAACsN,YAAY,CAAC;MAChE,IAAIL,cAAc,EAAE;QAChB,IAAI,CAAC3U,MAAM,CAACmV,eAAe,CAACC,UAAU,CAACxO,QAAQ,CAAC;MACpD;MACA,IAAIgO,aAAa,EAAE;QACf,IAAIS,MAAM,GAAG,IAAI,CAACrV,MAAM,CAACuH,QAAQ,KAAK,aAAa,GAAGyN,YAAY,CAAC5O,eAAe,CAAC8C,MAAM,GAAG8L,YAAY,CAAC5O,eAAe,CAACkP,WAAW;QACpI,IAAI,CAACtV,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAACC,UAAU,CAACH,MAAM,EAAEL,YAAY,CAAC;QAC1D,IAAIrO,GAAG,GAAG,IAAI,CAAC3G,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAACE,mBAAmB,CAAC,IAAI,CAACzV,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAACG,WAAW,CAAC,CAAC,CAAC9O,QAAQ,CAAC,CAAC+O,YAAY,CAAC,UAAU,CAAC,CAAC;QACnIhP,GAAG,CAACM,IAAI,GAAG+N,YAAY;MAC3B;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIlV,IAAI,CAACjC,SAAS,CAACqX,YAAY,GAAG,UAAUU,QAAQ,EAAEC,QAAQ,EAAE;IACxD,IAAI,CAAC5X,iBAAiB,CAAC4X,QAAQ,CAAC,EAAE;MAC9B1X,MAAM,CAACyX,QAAQ,EAAEC,QAAQ,CAAC;IAC9B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA/V,IAAI,CAACjC,SAAS,CAACiY,4BAA4B,GAAG,UAAUjR,IAAI,EAAE;IAC1D;EAAA,CACH;EACD;AACJ;AACA;AACA;AACA;EACI/E,IAAI,CAACjC,SAAS,CAAC6U,kBAAkB,GAAG,UAAU7N,IAAI,EAAE;IAChD,IAAIN,KAAK,GAAG,IAAI;IAChB,IAAIwR,SAAS,GAAG,CAAC,CAAC;IAClBA,SAAS,CAACxE,WAAW,GAAG,YAAY;IACpCwE,SAAS,CAAC9O,IAAI,GAAGpC,IAAI,CAACoC,IAAI;IAC1B8O,SAAS,CAACzE,MAAM,GAAG,KAAK;IACxB,IAAI,CAACjR,WAAW,GAAG,IAAI;IACvB,IAAI,IAAI,CAACL,MAAM,CAACgW,aAAa,IAAI,IAAI,CAAChW,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAClK,MAAM,GAAG,CAAC,EAAE;MAC7K,IAAI,CAACqC,MAAM,CAACgW,aAAa,CAACC,WAAW,CAAC,CAAC,IAAI,CAACjW,MAAM,CAACkW,SAAS,GAAG,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACpF;IACAH,SAAS,CAACI,eAAe,GAAG,IAAI,CAACnW,MAAM,CAACoW,aAAa;IACrD,IAAI,CAACnY,iBAAiB,CAAC4G,IAAI,CAACwR,MAAM,CAAC,EAAE;MACjCN,SAAS,CAACM,MAAM,GAAGxR,IAAI,CAACwR,MAAM;IAClC;IACAN,SAAS,CAACO,gBAAgB,GAAGtX,WAAW,CAAC,IAAI,CAACgB,MAAM,CAACoW,aAAa,EAAE,IAAI,CAAC;IACzE,IAAIvR,IAAI,CAACqF,MAAM,KAAK,mBAAmB,IAAIrF,IAAI,CAACqF,MAAM,KAAK,qBAAqB,EAAE;MAC9E6L,SAAS,CAAC7L,MAAM,GAAGrF,IAAI,CAACqF,MAAM;MAC9B,IAAIrF,IAAI,CAACqF,MAAM,KAAK,qBAAqB,EAAE;QACvC,IAAI,CAAClK,MAAM,CAACuB,uBAAuB,CAAC,0BAA0B,CAAC,GAAG,KAAK;QACvE,IAAI,IAAI,CAACvB,MAAM,CAAC+H,iBAAiB,EAAE;UAC/B,IAAI,CAAC/H,MAAM,CAAC+H,iBAAiB,CAAC,6BAA6B,CAAC,GAAG,KAAK;QACxE;MACJ;IACJ;IACA,IAAIsC,QAAQ,GAAG,IAAI,CAACrK,MAAM;IAC1B,IAAIuW,oBAAoB,GAAGpZ,QAAQ,CAAC,CAAC,CAAC,EAAE4Y,SAAS,CAAC9O,IAAI,CAACb,eAAe,CAAC2F,iBAAiB,CAAC;IACzF,IAAIyK,kBAAkB,GAAGrZ,QAAQ,CAAC,CAAC,CAAC,EAAE4Y,SAAS,CAAC9O,IAAI,CAACb,eAAe,CAAC4F,eAAe,CAAC;IACrF,IAAIyK,eAAe,GAAGV,SAAS,CAAC9O,IAAI,CAACb,eAAe,CAAC1D,QAAQ;IAC7D;IACA,IAAIgU,cAAc,GAAGnL,IAAI,CAACoL,KAAK,CAACpL,IAAI,CAACC,SAAS,CAACuK,SAAS,CAAC9O,IAAI,CAACb,eAAe,CAAC,CAAC;IAC/E,IAAI,CAACpG,MAAM,CAAC4W,OAAO,CAAC,aAAa,EAAEb,SAAS,EAAE,UAAUc,QAAQ,EAAE;MAC9D,IAAIN,oBAAoB,KAAKM,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAAC8E,iBAAiB,IACxEyK,kBAAkB,KAAKK,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAAC+E,eAAe,EAAE;QAC5E3B,QAAQ,CAACU,cAAc,CAAC,cAAc,EAAEV,QAAQ,CAAChB,aAAa,CAACiE,qBAAqB,CAACuJ,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE4P,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC;QAC/JoD,QAAQ,CAACU,cAAc,CAAC,eAAe,EAAEV,QAAQ,CAAChB,aAAa,CAACkE,sBAAsB,CAACsJ,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE4P,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC;MACrK;MACA,IAAI1C,KAAK,CAACvE,MAAM,CAACoQ,2BAA2B,IAAIsG,cAAc,KAAKG,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,IAC/F,CAAChJ,iBAAiB,CAAC4Y,QAAQ,CAAC5P,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE;QACjD1C,KAAK,CAACgO,yBAAyB,CAAC,CAAC;QACjChO,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACqE,QAAQ,CAAC5P,IAAI,EAAE,IAAI,CAAC;MACrE;MACA,IAAI6P,UAAU,GAAGD,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC;MACjD,IAAI0C,SAAS,GAAGmN,UAAU,CAACnN,SAAS;QAAEC,OAAO,GAAGkN,UAAU,CAAClN,OAAO;QAAEqC,QAAQ,GAAG6K,UAAU,CAAC7K,QAAQ;QAAEJ,YAAY,GAAGiL,UAAU,CAACjL,YAAY;QAAEqC,cAAc,GAAG4I,UAAU,CAAC5I,cAAc;QAAEpD,WAAW,GAAGgM,UAAU,CAAChM,WAAW;MAC5N,IAAInB,SAAS,IAAIC,OAAO,IAAI,CAACqC,QAAQ,EAAE;QACnC,IAAI7C,QAAQ,GAAG7E,KAAK,CAACvE,MAAM,CAACwJ,oBAAoB,CAACuN,WAAW,CAACpN,SAAS,EAAEC,OAAO,EAAEiC,YAAY,EAAEqC,cAAc,EAAEpD,WAAW,EAAE,IAAI,CAAC;QACjI,IAAI1B,QAAQ,KAAK,CAAC,EAAE;UAChB0N,UAAU,CAAChM,WAAW,GAAG,KAAK;UAC9BvG,KAAK,CAACvE,MAAM,CAACwJ,oBAAoB,CAACiF,iBAAiB,CAACoI,QAAQ,CAAC5P,IAAI,CAAC;QACtE;MACJ;MACA1C,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAACU,eAAe,CAAC8M,QAAQ,CAAC5P,IAAI,CAAC;MACzD,IAAI,CAAChJ,iBAAiB,CAACsG,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACqB,QAAQ,CAAC,IAAI+T,eAAe,KAAKI,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAACvE,QAAQ,EAAE;QACvH,IAAI0Q,KAAK,GAAGyD,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAACiH,cAAc,GAAG2I,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAACmM,KAAK,GAChGyD,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAACoN,SAAS;QAC9C9P,KAAK,CAACvE,MAAM,CAAC+K,cAAc,CAAC,eAAe,EAAExG,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAAC8J,gBAAgB,CAACC,KAAK,EAAEyD,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAACvE,QAAQ,CAAC,EAAEmU,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,EAAE,IAAI,CAAC;MACvL;MACA1C,KAAK,CAACvE,MAAM,CAACmV,eAAe,CAAC6B,aAAa,CAACH,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAACgF,QAAQ,EAAE4K,QAAQ,CAAC5P,IAAI,CAAC,iBAAiB,CAAC,CAACiC,MAAM,CAAC;MAC9H,IAAI,CAACjL,iBAAiB,CAACsG,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAAC,IAAI1S,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;QAChH3S,KAAK,CAACvE,MAAM,CAACmX,WAAW,CAAC,CAAC;MAC9B,CAAC,MACI;QACD5S,KAAK,CAACvE,MAAM,CAACoX,WAAW,CAAC,CAAC;MAC9B;MACA,IAAIP,QAAQ,CAACvF,MAAM,EAAE;QACjB/M,KAAK,CAACkQ,uBAAuB,CAAC,CAAC;QAC/BlQ,KAAK,CAACvE,MAAM,CAACmV,eAAe,CAACkC,cAAc,CAAC,CAACxS,IAAI,CAACoC,IAAI,CAAC,CAAC;QACxD1C,KAAK,CAACmQ,mBAAmB,CAACqB,SAAS,CAAC;QACpC;MACJ,CAAC,MACI;QACD;QACA,IAAIc,QAAQ,CAACV,eAAe,EAAE;UAC1B,KAAK,IAAI3Y,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqZ,QAAQ,CAACV,eAAe,CAACxY,MAAM,EAAEH,CAAC,EAAE,EAAE;YACtD+G,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAACkL,cAAc,CAACsC,QAAQ,CAACV,eAAe,CAAC3Y,CAAC,CAAC,CAAC;UAC1E;QACJ;QACAqZ,QAAQ,CAACP,gBAAgB,GAAGtX,WAAW,CAAC6X,QAAQ,CAACV,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE5R,KAAK,CAACvE,MAAM,CAAC;QAC3F,IAAIf,YAAY,CAACsF,KAAK,CAACvE,MAAM,CAAC+E,UAAU,CAAC,EAAE;UACvC,IAAIkC,IAAI,GAAG1C,KAAK,CAACvE,MAAM,CAAC+E,UAAU;UAClC,IAAIuS,WAAW,GAAG;YACdC,cAAc,EAAEV,QAAQ,CAACP;UAC7B,CAAC;UACD,IAAIkB,KAAK,GAAGjT,KAAK,CAACvE,MAAM,CAACwX,KAAK,YAAY/Y,KAAK,GAAG8F,KAAK,CAACvE,MAAM,CAACwX,KAAK,GAAG,IAAI/Y,KAAK,CAAC,CAAC;UAClF,IAAIgZ,IAAI,GAAG,IAAI;UACf,IAAIC,WAAW,GAAGzQ,IAAI,CAAC0Q,OAAO;UAC9B,IAAI,EAAED,WAAW,YAAY/Y,aAAa,IAAI+Y,WAAW,YAAYhZ,YAAY,CAAC,IAAIuI,IAAI,CAAClC,UAAU,CAAC6S,QAAQ,EAAE;YAC5GH,IAAI,GAAGxQ,IAAI,CAAC4Q,WAAW,CAACP,WAAW,EAAE/S,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE,IAAI,EAAE2V,KAAK,CAAC;UACjF,CAAC,MACI;YACD,IAAID,cAAc,GAAG,gBAAgB;YACrCE,IAAI,GAAGxQ,IAAI,CAAC6Q,MAAM,CAACvT,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAEyV,WAAW,CAACC,cAAc,CAAC,EAAE,IAAI,EAAEC,KAAK,CAAC;UAC5F;UACAC,IAAI,CAACM,IAAI,CAAC,UAAUC,CAAC,EAAE;YAAE,OAAOzT,KAAK,CAAC0T,SAAS,CAACD,CAAC,EAAEnT,IAAI,CAAC;UAAE,CAAC,CAAC,CACvDqT,KAAK,CAAC,UAAUF,CAAC,EAAE;YAAE,OAAOzT,KAAK,CAAC4T,SAAS,CAACH,CAAC,EAAEnT,IAAI,CAAC;UAAE,CAAC,CAAC;QACjE,CAAC,MACI;UACDN,KAAK,CAAC6T,WAAW,CAACvT,IAAI,CAAC;QAC3B;QACA,IAAIN,KAAK,CAACvE,MAAM,CAACqY,oBAAoB,IAAI9T,KAAK,CAACvE,MAAM,CAACsY,4BAA4B,EAAE;UAChF/T,KAAK,CAACvE,MAAM,CAAC+G,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,CAAC;QACvD;QACA,IAAIxC,KAAK,CAACvE,MAAM,CAAC6H,cAAc,EAAE;UAC7BtD,KAAK,CAACvE,MAAM,CAACuY,gBAAgB,GAAGpa,MAAM,CAAC,EAAE,EAAEoG,KAAK,CAACvE,MAAM,CAACwH,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC;QAC/E;MACJ;IACJ,CAAC,CAAC;IACF,IAAI,CAACxH,MAAM,CAAC+G,gBAAgB,CAACyR,sBAAsB,CAAC,CAAC;EACzD,CAAC;EACD;EACA1Y,IAAI,CAACjC,SAAS,CAAC4a,kBAAkB,GAAG,UAAUT,CAAC,EAAE;IAC7C,IAAIU,OAAO;IACX,IAAIC,GAAG;IACP,IAAIX,CAAC,CAACT,cAAc,EAAE;MAClBmB,OAAO,GAAGV,CAAC,CAACT,cAAc,CAAC,QAAQ,CAAC;IACxC,CAAC,MACI;MACDmB,OAAO,GAAGV,CAAC,CAAC,QAAQ,CAAC;IACzB;IACA,KAAK,IAAIxa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkb,OAAO,EAAElb,CAAC,EAAE,EAAE;MAC9B,IAAIwa,CAAC,CAACT,cAAc,EAAE;QAClBoB,GAAG,GAAGX,CAAC,CAACT,cAAc,CAACxU,QAAQ,CAACvF,CAAC,CAACwF,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MACtD,CAAC,MACI;QACD2V,GAAG,GAAGX,CAAC,CAACjV,QAAQ,CAACvF,CAAC,CAACwF,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MACvC;MACA,IAAI4V,QAAQ,GAAGxb,MAAM,CAACsM,IAAI,CAACiP,GAAG,CAAC,CAAChb,MAAM;MACtC,KAAK,IAAImI,CAAC,GAAG,CAAC,EAAE+S,EAAE,GAAGzb,MAAM,CAACsM,IAAI,CAACiP,GAAG,CAAC,EAAE7S,CAAC,GAAG8S,QAAQ,EAAE9S,CAAC,EAAE,EAAE;QACtD,IAAIO,GAAG,GAAGwS,EAAE,CAAC9V,QAAQ,CAAC+C,CAAC,CAAC9C,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACxC,IAAI,CAAChD,MAAM,CAACoW,aAAa,CAACrT,QAAQ,CAACvF,CAAC,CAACwF,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,GAAGqD,GAAG,CAAC,GAAGsS,GAAG,CAAC,EAAE,GAAGtS,GAAG,CAAC;QAC/E,IAAI,CAACrG,MAAM,CAACoW,aAAa,CAACrT,QAAQ,CAACvF,CAAC,CAACwF,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC8G,QAAQ,CAAC,EAAE,GAAGzD,GAAG,CAAC,GAAGsS,GAAG,CAAC,EAAE,GAAGtS,GAAG,CAAC;MAC5F;MACA,IAAI,CAACyS,wBAAwB,CAACH,GAAG,EAAE,IAAI,CAAC3Y,MAAM,CAACoW,aAAa,CAACrT,QAAQ,CAACvF,CAAC,CAACwF,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7F;EACJ,CAAC;EACD;EACAlD,IAAI,CAACjC,SAAS,CAACoa,SAAS,GAAG,UAAUD,CAAC,EAAEnT,IAAI,EAAE;IAC1C,IAAI,CAAC4T,kBAAkB,CAACT,CAAC,CAAC;IAC1B,IAAI,CAACI,WAAW,CAACvT,IAAI,CAAC;EAC1B,CAAC;EACD/E,IAAI,CAACjC,SAAS,CAACib,wBAAwB,GAAG,UAAUH,GAAG,EAAE3G,YAAY,EAAE;IACnE,IAAI/M,MAAM,GAAG,IAAI,CAACjF,MAAM,CAACqB,UAAU;IACnC,IAAIuX,QAAQ,GAAGxb,MAAM,CAACsM,IAAI,CAACiP,GAAG,CAAC,CAAChb,MAAM;IACtC,KAAK,IAAImI,CAAC,GAAG,CAAC,EAAE+S,EAAE,GAAGzb,MAAM,CAACsM,IAAI,CAACiP,GAAG,CAAC,EAAE7S,CAAC,GAAG8S,QAAQ,EAAE9S,CAAC,EAAE,EAAE;MACtD,IAAIO,GAAG,GAAGwS,EAAE,CAAC9V,QAAQ,CAAC+C,CAAC,CAAC9C,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MACxCgP,YAAY,CAAC,EAAE,GAAG3L,GAAG,CAAC,GAAGsS,GAAG,CAAC,EAAE,GAAGtS,GAAG,CAAC;IAC1C;IACA,IAAIpB,MAAM,CAACpD,EAAE,KAAK,IAAI,EAAE;MACpBmQ,YAAY,CAAC5L,eAAe,CAAC,QAAQ,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAACpD,EAAE,CAAC;IAC3D;IACA,IAAIoD,MAAM,CAACE,IAAI,KAAK,IAAI,EAAE;MACtB6M,YAAY,CAAC5L,eAAe,CAAC,UAAU,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAACE,IAAI,CAAC;IAC/D;IACA,IAAIF,MAAM,CAAC0E,SAAS,KAAK,IAAI,EAAE;MAC3BqI,YAAY,CAAC5L,eAAe,CAAC,WAAW,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAAC0E,SAAS,CAAC;IACrE;IACA,IAAI1E,MAAM,CAAC2E,OAAO,KAAK,IAAI,EAAE;MACzBoI,YAAY,CAAC5L,eAAe,CAAC,SAAS,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAAC2E,OAAO,CAAC;IACjE;IACA,IAAI3E,MAAM,CAACmE,QAAQ,KAAK,IAAI,EAAE;MAC1B4I,YAAY,CAAC5L,eAAe,CAAC,UAAU,CAAC,GAAG0G,UAAU,CAAC6L,GAAG,CAAC1T,MAAM,CAACmE,QAAQ,CAAC,CAAC;IAC/E;IACA,IAAInE,MAAM,CAAC4G,YAAY,KAAK,IAAI,EAAE;MAC9BmG,YAAY,CAAC5L,eAAe,CAAC,cAAc,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAAC4G,YAAY,CAAC;IAC3E;IACA,IAAI5G,MAAM,CAACvC,QAAQ,KAAK,IAAI,EAAE;MAC1BsP,YAAY,CAAC5L,eAAe,CAAC,UAAU,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAACvC,QAAQ,CAAC;IACnE;IACA,IAAIuC,MAAM,CAAC3D,UAAU,KAAK,IAAI,EAAE;MAC5B0Q,YAAY,CAAC5L,eAAe,CAAC,YAAY,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAAC3D,UAAU,CAAC;IACvE;IACA,IAAI2D,MAAM,CAAC8T,QAAQ,KAAK,IAAI,EAAE;MAC1B/G,YAAY,CAAC5L,eAAe,CAAC,UAAU,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAAC8T,QAAQ,CAAC;IACnE;IACA,IAAI9T,MAAM,CAAC+G,eAAe,KAAK,IAAI,EAAE;MACjCgG,YAAY,CAAC5L,eAAe,CAAC,iBAAiB,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAAC+G,eAAe,CAAC;IACjF;IACA,IAAI/G,MAAM,CAAC8G,iBAAiB,KAAK,IAAI,EAAE;MACnCiG,YAAY,CAAC5L,eAAe,CAAC,mBAAmB,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAAC8G,iBAAiB,CAAC;IACrF;IACA,IAAI9G,MAAM,CAACtC,YAAY,KAAK,IAAI,EAAE;MAC9BqP,YAAY,CAAC5L,eAAe,CAAC,WAAW,CAAC,GAAGuS,GAAG,CAAC1T,MAAM,CAACtC,YAAY,CAAC;IACxE;EACJ,CAAC;EACD7C,IAAI,CAACjC,SAAS,CAACsa,SAAS,GAAG,UAAUH,CAAC,EAAEnT,IAAI,EAAE;IAC1C,IAAI,IAAI,CAAC/D,kBAAkB,CAACnD,MAAM,EAAE;MAChC,IAAIqb,aAAa,GAAG,IAAI,CAAClY,kBAAkB;MAC3C,KAAK,IAAImY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACrb,MAAM,EAAEsb,CAAC,EAAE,EAAE;QAC3CD,aAAa,CAACC,CAAC,CAAC,CAACC,QAAQ,GAAG,KAAK;MACrC;MACA,IAAI,CAACpY,kBAAkB,GAAG,EAAE;IAChC;IACA,IAAI,CAAC2T,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC;IACxC,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAAC1U,MAAM,CAAC4W,OAAO,CAAC,eAAe,EAAE;MAAEuC,KAAK,EAAEnB;IAAE,CAAC,CAAC;EACtD,CAAC;EACDlY,IAAI,CAACjC,SAAS,CAACub,gBAAgB,GAAG,UAAUnS,IAAI,EAAE;IAC9C,IAAI2B,GAAG,GAAG3B,IAAI,CAACb,eAAe,CAACiT,mBAAmB;IAClD,KAAK,IAAI7b,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoL,GAAG,CAACjL,MAAM,EAAEH,CAAC,EAAE,EAAE;MACjC,IAAI8b,UAAU,GAAG,IAAI,CAACtZ,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACkB,GAAG,CAACpL,CAAC,CAAC,CAACwF,QAAQ,CAAC,CAAC,CAAC,CAAC;MACjF,IAAIsW,UAAU,IAAIA,UAAU,CAACxK,QAAQ,KAAK7H,IAAI,CAAC6H,QAAQ,EAAE;QACrD,IAAI,CAACU,qBAAqB,CAACvI,IAAI,EAAEqS,UAAU,CAAC;QAC5C,IAAI,CAACtZ,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAE9D,IAAI,CAAC6C,QAAQ,EAAEwP,UAAU,EAAE,IAAI,CAAC;QACvE,IAAI,CAACtZ,MAAM,CAACqJ,aAAa,CAACkL,cAAc,CAAC+E,UAAU,CAAC;QACpD,IAAI,CAACtZ,MAAM,CAACqJ,aAAa,CAACkQ,kBAAkB,CAACD,UAAU,CAAC;QACxD,IAAI,CAACrb,iBAAiB,CAACqb,UAAU,CAACvJ,UAAU,CAAC,EAAE;UAC3C,IAAI,CAAC/P,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC8G,UAAU,CAACvJ,UAAU,CAAC;QACtE;MACJ;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIjQ,IAAI,CAACjC,SAAS,CAACua,WAAW,GAAG,UAAUvT,IAAI,EAAE;IACzC,IAAIkR,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,IAAI,CAAC/V,MAAM,CAACwZ,gBAAgB,CAACC,mBAAmB,EAAE;MAClD,IAAIC,SAAS,GAAG,IAAI,CAAC1Z,MAAM,CAACoW,aAAa;MACzC,IAAI,CAACpW,MAAM,CAAC2Z,cAAc,CAACC,uBAAuB,CAAC,CAACF,SAAS,CAAC,EAAE7U,IAAI,CAACqF,MAAM,CAAC;IAChF;IACA,IAAI,IAAI,CAAClK,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;MACzC,IAAI1C,IAAI,CAACqF,MAAM,KAAK,gBAAgB,IAAIrF,IAAI,CAACqF,MAAM,KAAK,mBAAmB,IAAIrF,IAAI,CAACqF,MAAM,KAAK,qBAAqB,EAAE;QAClH,IAAI,CAACkP,gBAAgB,CAACvU,IAAI,CAACoC,IAAI,CAAC;MACpC,CAAC,MACI,IAAIpC,IAAI,CAACqF,MAAM,KAAK,eAAe,IAAIrF,IAAI,CAACqF,MAAM,KAAK,aAAa,IAAIrF,IAAI,CAACqF,MAAM,KAAK,cAAc,EAAE;QACzG,IAAI,IAAI,CAAClK,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACgK,gBAAgB,EAAE;UACtD;UACA,IAAI,CAACoO,cAAc,CAAC,IAAI,CAAC7Z,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACiK,gBAAgB,EAAE7G,IAAI,CAACoC,IAAI,CAACb,eAAe,CAACzD,YAAY,EAAEkC,IAAI,CAACoC,IAAI,CAAC;UAC5H,IAAI,CAACmS,gBAAgB,CAACvU,IAAI,CAACoC,IAAI,CAAC;UAChC,IAAI,CAAC6S,iBAAiB,GAAG,IAAI;QACjC,CAAC,MACI;UACD,IAAI,CAACV,gBAAgB,CAACvU,IAAI,CAACoC,IAAI,CAAC;QACpC;MACJ;MACA;MACA,KAAK,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvI,mBAAmB,CAAC7C,MAAM,EAAEoL,CAAC,EAAE,EAAE;QACtD,IAAI,CAAC/I,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC,IAAI,CAAChS,mBAAmB,CAACuI,CAAC,CAAC,CAAC;MAC5E;MACA,IAAI,CAACvI,mBAAmB,GAAG,EAAE;MAC7B,IAAI,CAACR,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACgK,gBAAgB,GAAG,KAAK;MAC5D,IAAI,CAACzL,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACiK,gBAAgB,GAAG,EAAE;IAC7D;IACA,IAAIqO,cAAc,GAAG,IAAI,CAAC/Z,MAAM,CAACga,kBAAkB;IACnD,IAAI,IAAI,CAACha,MAAM,CAACia,kBAAkB,IAAIF,cAAc,IAAIA,cAAc,CAACG,sBAAsB,EAAE;MAC3FH,cAAc,CAACI,gBAAgB,CAAC,IAAI,CAAC;MACrCJ,cAAc,CAACK,qBAAqB,CAACL,cAAc,CAACG,sBAAsB,EAAEH,cAAc,CAACM,2BAA2B,EAAE,IAAI,EAAEN,cAAc,CAACO,4BAA4B,CAAC;IAC9K;IACA,IAAI,CAAC,IAAI,CAACR,iBAAiB,EAAE;MACzB,IAAI,IAAI,CAAC9Z,MAAM,CAACiB,YAAY,CAACC,YAAY,IAAI,IAAI,CAAClB,MAAM,CAACiC,QAAQ,CAACH,OAAO,CAACqF,sBAAsB,CAAC,mBAAmB,CAAC,CAACxJ,MAAM,GAAG,CAAC,EAAE;QAC9H,IAAI,CAAC,IAAI,CAACqC,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAACzT,OAAO,CAACyY,aAAa,CAAC,MAAM,CAAC,CAAC3U,aAAa,CAAC,CAAC,CAAC,CAAC4U,QAAQ,CAAC,CAAC,EAAE;UACtFpc,QAAQ,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC4B,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAAC;UACpD,IAAI,CAACvV,MAAM,CAACuG,UAAU,CAACnF,cAAc,CAACqZ,UAAU,GAAG,KAAK;QAC5D;QACA,IAAI,CAACza,MAAM,CAACiC,QAAQ,CAACmF,OAAO,CAAC,CAAC;MAClC;MACA,IAAI,CAACpH,MAAM,CAACmV,eAAe,CAACkC,cAAc,CAAC,IAAI,CAACrX,MAAM,CAACoW,aAAa,CAAC;MACrE,IAAI,CAAC,IAAI,CAACpW,MAAM,CAAC0a,mBAAmB,IAAI,IAAI,CAAC1a,MAAM,CAAC2a,kBAAkB,EAAE;QACpE,IAAI,CAAC3a,MAAM,CAAC4a,aAAa,GAAG,IAAI,CAAC5a,MAAM,CAAC,SAAS,CAAC,CAACmH,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC0T,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;QACrH,IAAI,CAAC7a,MAAM,CAAC+G,gBAAgB,CAAC+T,gBAAgB,CAACC,KAAK,CAACC,MAAM,GAAG,IAAI,CAAChb,MAAM,CAAC4a,aAAa,GAAG,IAAI;QAC7F,IAAI,CAAC5a,MAAM,CAAC+G,gBAAgB,CAACkU,oBAAoB,CAAC,IAAI,CAACjb,MAAM,CAAC6G,eAAe,CAAC;QAC9E,IAAI,IAAI,CAAC7G,MAAM,CAACqB,UAAU,CAACC,UAAU,EAAE;UACnC,IAAI,CAACtB,MAAM,CAAC+G,gBAAgB,CAACyR,sBAAsB,CAAC,CAAC;QACzD;MACJ;MACA,IAAI,CAAC,IAAI,CAACxY,MAAM,CAACiQ,qBAAqB,IAAK,IAAI,CAACjQ,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,IAChH,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,kBAAkB,CAAE,KAAK,CAAC5J,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACuB,uBAAuB,CAAC,EAAE;QAC9H,IAAI,CAACvB,MAAM,CAACkb,8BAA8B,GAAG,EAAE;QAC/C,IAAI,CAAClb,MAAM,CAACmb,gBAAgB,GAAG,EAAE;QACjC,IAAI,CAACnb,MAAM,CAACuB,uBAAuB,CAAC6Z,gCAAgC,CAAC,IAAI,CAACpb,MAAM,CAACoW,aAAa,CAAC;QAC/F,IAAI,CAACpW,MAAM,CAAC+G,gBAAgB,CAACyR,sBAAsB,CAAC,CAAC;QACrD,IAAI,CAAC1C,4BAA4B,CAACjR,IAAI,CAAC;MAC3C;IACJ;IACA,IAAI,CAAC,IAAI,CAAC7E,MAAM,CAACiB,YAAY,CAACS,mBAAmB,IAAK,IAAI,CAAC1B,MAAM,CAACiB,YAAY,CAACS,mBAAmB,IAC9F,CAAC,IAAI,CAACC,iBAAiB,CAAC0Z,gBAAiB,EAAE;MAC3CtF,SAAS,CAACxE,WAAW,GAAG,MAAM;MAC9BwE,SAAS,CAAC9O,IAAI,GAAGpC,IAAI,CAACoC,IAAI;MAC1B8O,SAAS,CAACI,eAAe,GAAG,IAAI,CAACnW,MAAM,CAACoW,aAAa;MACrDL,SAAS,CAACO,gBAAgB,GAAGtX,WAAW,CAAC,IAAI,CAACgB,MAAM,CAACoW,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAACpW,MAAM,CAAC;MAC5F,IAAI,CAACsb,cAAc,CAAC,CAAC;MACrB,IAAI,CAACrd,iBAAiB,CAAC4G,IAAI,CAACqF,MAAM,CAAC,EAAE;QACjC9L,QAAQ,CAAC,QAAQ,EAAEyG,IAAI,CAACqF,MAAM,EAAE6L,SAAS,CAAC;MAC9C;MACA,IAAIlR,IAAI,CAACqF,MAAM,KAAK,gBAAgB,EAAE;QAClC6L,SAAS,CAACwF,iBAAiB,GAAG1W,IAAI,CAAC0W,iBAAiB;MACxD;MACA,IAAI,CAACC,aAAa,CAAC3W,IAAI,CAAC;MACxB,IAAI,CAAC7E,MAAM,CAAC4W,OAAO,CAAC,gBAAgB,EAAEb,SAAS,CAAC;MAChD,IAAI,IAAI,CAAC/V,MAAM,CAACyb,uBAAuB,IAAI,IAAI,CAACzb,MAAM,CAAC0b,oBAAoB,IAAI,IAAI,CAAC1b,MAAM,CAAC0b,oBAAoB,CAAC,eAAe,CAAC,EAAE;QAC9H,IAAI,CAAC1b,MAAM,CAAC0b,oBAAoB,CAAC,eAAe,CAAC,GAAG,IAAI;MAC5D;MACA,IAAI,CAACzd,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACiX,gBAAgB,CAAC,IAAI,IAAI,CAACjX,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;QAC9G,IAAI,CAAClX,MAAM,CAAC2b,WAAW,CAAC,CAAC;MAC7B,CAAC,MACI;QACD,IAAI,CAAC3b,MAAM,CAAC4b,WAAW,CAAC,CAAC;MAC7B;IACJ,CAAC,MACI;MACD,IAAI,CAACja,iBAAiB,CAAC0Z,gBAAgB,GAAG,KAAK;MAC/C,IAAI,CAAC3G,mBAAmB,CAAC,CAAC;IAC9B;IACA,IAAI,IAAI,CAAC1U,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAI,IAAI,CAACuS,iBAAiB,EAAE;MACnE,IAAI,CAAC9Z,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,GAAG,EAAE;MACpC,IAAI,CAAC7P,MAAM,CAACkb,8BAA8B,GAAG,EAAE;MAC/C,IAAI,CAAClb,MAAM,CAACmb,gBAAgB,GAAG,EAAE;MACjC,IAAI,CAACnb,MAAM,CAACe,iBAAiB,CAAC8a,8BAA8B,CAAC,IAAI,CAAC7b,MAAM,CAACwH,QAAQ,CAAC;MAClF,IAAI,CAACxH,MAAM,CAACiC,QAAQ,CAAC6Z,OAAO,CAAC,CAAC;MAC9B,IAAI,CAAChC,iBAAiB,GAAG,KAAK;IAClC;IACA,IAAI,CAAC9Z,MAAM,CAACoW,aAAa,GAAG,EAAE;EAClC,CAAC;EACDtW,IAAI,CAACjC,SAAS,CAACgc,cAAc,GAAG,UAAUkC,YAAY,EAAEC,eAAe,EAAEC,YAAY,EAAE;IACnF,IAAIC,WAAW,GAAG,IAAI,CAAClc,MAAM,CAACwH,QAAQ;IACtC,IAAI2U,aAAa,GAAGH,eAAe,GAAGA,eAAe,CAACre,MAAM,GAAG,CAAC;IAChE,IAAIye,cAAc,GAAGL,YAAY,GAAGA,YAAY,CAACpe,MAAM,GAAG,CAAC;IAC3D,IAAIwe,aAAa,KAAK,CAAC,IAAIC,cAAc,KAAK,CAAC,EAAE;MAC7C;IACJ;IACA,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGF,aAAa,EAAEE,KAAK,EAAE,EAAE;MAChD,IAAIC,WAAW,GAAG,EAAE;MACpB,IAAIC,UAAU,GAAGxZ,QAAQ,CAACiZ,eAAe,CAACK,KAAK,CAAC,CAAC,IAAI,CAACrc,MAAM,CAACyE,cAAc,CAAC5C,EAAE,CAAC,EAAE,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC;MAC/F,IAAIuZ,UAAU,KAAK,KAAK,EAAE;QACtBA,UAAU,GAAGP,eAAe,CAACK,KAAK,CAAC,CAAC,IAAI,CAACrc,MAAM,CAACyE,cAAc,CAAC5C,EAAE,CAAC;MACtE;MACA,KAAK,IAAIrE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGue,YAAY,CAACpe,MAAM,EAAEH,CAAC,EAAE,EAAE;QAC1C,IAAIgf,cAAc,GAAGzZ,QAAQ,CAACgZ,YAAY,CAACve,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACyE,cAAc,CAAC5C,EAAE,CAAC,EAAE,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC;QAC5F,IAAIwZ,cAAc,KAAK,KAAK,EAAE;UAC1BA,cAAc,GAAGT,YAAY,CAACve,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACyE,cAAc,CAAC5C,EAAE,CAAC;QACnE;QACA,IAAI2a,cAAc,KAAKD,UAAU,EAAE;UAC/BD,WAAW,CAACvW,IAAI,CAACvI,CAAC,CAAC;UACnB;QACJ;MACJ;MACA,IAAI8e,WAAW,CAAC3e,MAAM,KAAK,CAAC,EAAE;QAC1B,IAAI8e,YAAY,GAAGP,WAAW,CAAC,IAAI,CAAClc,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAG6U,UAAU,CAAC,CAAC;QAClF,IAAIE,YAAY,EAAE;UACd,IAAI,CAACC,YAAY,CAACT,YAAY,EAAEQ,YAAY,CAAC;QACjD;MACJ,CAAC,MACI;QACD,IAAIE,OAAO,GAAG5Z,QAAQ,CAACuZ,WAAW,CAAC,CAAC,CAAC,CAACtZ,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC;QACrD,IAAI2Z,OAAO,CAAC3Z,QAAQ,CAAC,CAAC,KAAK,KAAK,EAAE;UAC9B2Z,OAAO,GAAGL,WAAW,CAAC,CAAC,CAAC,CAACtZ,QAAQ,CAAC,CAAC;QACvC;QACA+Y,YAAY,CAAC/S,MAAM,CAAC2T,OAAO,EAAE,CAAC,CAAC;MACnC;IACJ;IACA,IAAIC,UAAU,GAAGb,YAAY,GAAGA,YAAY,CAACpe,MAAM,GAAG,CAAC;IACvD,KAAK,IAAI0e,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGO,UAAU,EAAEP,KAAK,EAAE,EAAE;MAC7C,IAAIQ,MAAM,GAAGZ,YAAY,CAAC7V,eAAe,CAAC8C,MAAM;MAChD,IAAIqT,UAAU,GAAGR,YAAY,CAACM,KAAK,CAAC,CAAC,IAAI,CAACrc,MAAM,CAACyE,cAAc,CAAC5C,EAAE,CAAC;MACnE,IAAI8G,MAAM,GAAGuT,WAAW,CAAC,IAAI,CAAClc,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAG6U,UAAU,CAAC,CAAC;MAC5E,IAAI,CAACte,iBAAiB,CAAC0K,MAAM,CAAC,EAAE;QAC5B,KAAK,IAAI7C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6C,MAAM,CAACqH,YAAY,CAACrS,MAAM,EAAEmI,CAAC,EAAE,EAAE;UACjD,IAAI6C,MAAM,CAACqH,YAAY,CAAClK,CAAC,CAAC,CAACM,eAAe,CAAC8C,MAAM,KAAK2T,MAAM,EAAE;YAC1D,IAAI,CAACC,iBAAiB,CAACnU,MAAM,CAACqH,YAAY,CAAClK,CAAC,CAAC,CAAC;UAClD;QACJ;MACJ;IACJ;IACA,IAAIqW,aAAa,GAAG,CAAC,EAAE;MACnB,IAAIY,UAAU,GAAG,IAAI,CAAC/c,MAAM,CAAC2T,aAAa,CAACsI,YAAY,CAAClM,UAAU,CAAC;MACnE,IAAIgN,UAAU,EAAE;QACZ,IAAIA,UAAU,CAAC3W,eAAe,CAAC4W,QAAQ,KAAK,IAAI,CAAChd,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE;UAC7F,IAAI,CAACJ,iBAAiB,CAACb,YAAY,CAAC;QACxC;MACJ;IACJ;IACA;IACA,IAAIE,aAAa,KAAK,CAAC,EAAE;MACrB,IAAI,CAACgB,uBAAuB,CAAClB,YAAY,CAAC;IAC9C;IACA,IAAI,IAAI,CAACjc,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAACwH,QAAQ,CAAC7J,MAAM,GAAG,CAAC,CAAC,CAACyI,eAAe,CAAC4W,QAAQ,KAAK,IAAI,CAAChd,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE;MAC3N,IAAI,CAACld,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAAC,IAAI,CAAChJ,MAAM,CAACwH,QAAQ,CAAC7J,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;MAC/D,IAAI,CAACqC,MAAM,CAAC6G,eAAe,CAACmC,MAAM,CAAC,IAAI,CAAChJ,MAAM,CAAC6G,eAAe,CAAClJ,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;MAC7E,IAAI,CAACqC,MAAM,CAACod,OAAO,CAACpU,MAAM,CAAC,IAAI,CAAChJ,MAAM,CAACwH,QAAQ,CAAC7J,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;MAC9D,IAAI,CAACqC,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC,IAAI,CAAChJ,MAAM,CAACwH,QAAQ,CAAC7J,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IAC9D;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACImC,IAAI,CAACjC,SAAS,CAACsf,uBAAuB,GAAG,UAAUlB,YAAY,EAAE;IAC7D,IAAIoB,eAAe,GAAG,IAAI;IAC1B;IACA,KAAK,IAAI7f,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACwC,MAAM,CAACwH,QAAQ,CAAC7J,MAAM,EAAEH,CAAC,EAAE,EAAE;MAClD,IAAI,IAAI,CAACwC,MAAM,CAACwH,QAAQ,CAAChK,CAAC,CAAC,CAAC4I,eAAe,CAAC4W,QAAQ,KAAK,IAAI,CAAChd,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE;QAC1GG,eAAe,GAAG,IAAI,CAACrd,MAAM,CAACwH,QAAQ,CAAChK,CAAC,CAAC;MAC7C;IACJ;IACA,IAAI,CAACS,iBAAiB,CAACof,eAAe,CAAC,EAAE;MACrC,IAAI,CAACX,YAAY,CAACT,YAAY,EAAEoB,eAAe,CAAC;IACpD,CAAC,MACI;MACD;MACA,IAAIC,eAAe,GAAG,CAAC,CAAC;MACxBA,eAAe,CAAC,IAAI,CAACtd,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,GAAG,CAAC;MAC9Cyb,eAAe,CAAC,IAAI,CAACtd,MAAM,CAACqB,UAAU,CAAC8D,IAAI,CAAC,GAAG,IAAI,CAACnF,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC;MAClG,IAAIK,gBAAgB,GAAG,IAAI,CAACvd,MAAM,CAACiI,QAAQ;MAC3C,IAAI,CAACjI,MAAM,CAACiI,QAAQ,GAAG,KAAK;MAC5B,IAAIuV,YAAY,GAAG,IAAI,CAACxd,MAAM,CAACqJ,aAAa,CAACoU,YAAY,CAACH,eAAe,EAAE,CAAC,CAAC;MAC7E,IAAI,CAACtd,MAAM,CAACiI,QAAQ,GAAGsV,gBAAgB;MACvC,IAAI,CAACG,iBAAiB,CAACF,YAAY,CAAC;MACpC,IAAIf,YAAY,GAAG,IAAI,CAACzc,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAACwH,QAAQ,CAAC7J,MAAM,GAAG,CAAC,CAAC;MACxE,IAAI,CAAC+e,YAAY,CAACT,YAAY,EAAEQ,YAAY,CAAC;MAC7C;MACA,IAAIkB,MAAM,GAAG,IAAI,CAAC3d,MAAM,CAAC+E,UAAU;MACnC4Y,MAAM,CAAC5X,IAAI,CAACkW,YAAY,CAACnS,QAAQ,CAAC;IACtC;IACA,IAAIwN,WAAW,GAAG,IAAI,CAACtX,MAAM,CAAC6G,eAAe,CAACyB,MAAM,CAAC,UAAUrB,IAAI,EAAE;MACjE,OAAQA,IAAI,CAACb,eAAe,CAAC8C,MAAM,KAAK+S,YAAY,CAAC7V,eAAe,CAAC8C,MAAM,IACtEjC,IAAI,CAACqL,eAAe,KAAK2J,YAAY,CAAC3J,eAAgB;IAC/D,CAAC,CAAC,CAAC,CAAC,CAAC;IACL2J,YAAY,CAAClM,UAAU,GAAGuH,WAAW,CAACvH,UAAU;IAChDkM,YAAY,CAAC2B,cAAc,GAAGtG,WAAW,CAACsG,cAAc;EAC5D,CAAC;EACD9d,IAAI,CAACjC,SAAS,CAAC6f,iBAAiB,GAAG,UAAUF,YAAY,EAAE;IACvD,IAAIK,YAAY,GAAG,IAAI,CAAC7d,MAAM,CAACwH,QAAQ,CAAC7J,MAAM;IAC9C,IAAI,CAACqC,MAAM,CAAC6G,eAAe,CAACmC,MAAM,CAAC6U,YAAY,GAAG,CAAC,EAAE,CAAC,EAAEL,YAAY,CAAC;IACrE,IAAI,CAACxd,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAAC6U,YAAY,GAAG,CAAC,EAAE,CAAC,EAAEL,YAAY,CAAC;IAC9D,IAAI,CAACxd,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC6U,YAAY,GAAG,CAAC,EAAE,CAAC,EAAEL,YAAY,CAACpX,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;IAChG,IAAIkG,MAAM,GAAGsU,YAAY,CAACM,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGN,YAAY,CAACpX,eAAe,CAAC8C,MAAM,GAAG,GAAG,GAAGsU,YAAY,CAACpX,eAAe,CAAC8C,MAAM;IAC7H,IAAI,CAAClJ,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACuB,MAAM,CAAC6U,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE3U,MAAM,CAAC;IAC5D,IAAI,CAAC6U,sBAAsB,CAACP,YAAY,EAAE,KAAK,CAAC;EACpD,CAAC;EACD1d,IAAI,CAACjC,SAAS,CAAC6e,YAAY,GAAG,UAAUT,YAAY,EAAEQ,YAAY,EAAE;IAChE,IAAIe,YAAY,GAAG,IAAI;IACvBA,YAAY,GAAGrf,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE8d,YAAY,EAAE,IAAI,CAAC;IACjD,IAAI,CAACjc,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAElM,MAAM,CAAC,IAAI,CAACmB,MAAM,CAAC8B,OAAO,CAACD,EAAE,GAAG,QAAQ,CAAC,EAAE2b,YAAY,CAAC;IAC/F,IAAI,CAACxd,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAEyS,YAAY,CAAC1O,QAAQ,EAAE0O,YAAY,CAACpX,eAAe,EAAE,IAAI,CAAC;IACjG,IAAI0O,QAAQ,GAAG0I,YAAY,CAAC1O,QAAQ,CAACkP,OAAO,CAAC,IAAI,CAAChe,MAAM,CAAC8B,OAAO,CAACD,EAAE,GAAG,QAAQ,EAAE,EAAE,CAAC;IACnF,IAAI,CAAC7B,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE+J,QAAQ,EAAE0I,YAAY,CAAC;IACjE,IAAI,CAACxd,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE+J,QAAQ,EAAE0I,YAAY,CAACpX,eAAe,EAAE,IAAI,CAAC;IACvF,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,OAAO,EAAE,CAAC,EAAEyS,YAAY,CAAC;IACpD,IAAI,IAAI,CAACxd,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAE;MACjC,IAAI,CAAC/Y,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAE0R,YAAY,CAACrW,eAAe,CAAC8C,MAAM,EAAEsU,YAAY,CAACpX,eAAe,EAAE,IAAI,CAAC;IACnH;IACA,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAAC4U,cAAc,CAACxB,YAAY,CAAC,EAAEe,YAAY,CAAC;IAC9G,IAAIU,YAAY,GAAGV,YAAY,CAACzN,UAAU,GAAGyN,YAAY,CAACzN,UAAU,CAACjB,QAAQ,GAAG,IAAI;IACpF,IAAI,CAAC9O,MAAM,CAAC+K,cAAc,CAAC,gBAAgB,EAAEmT,YAAY,EAAEV,YAAY,CAAC;IACxEvB,YAAY,CAAC7V,eAAe,CAACiT,mBAAmB,CAACtT,IAAI,CAAC+O,QAAQ,CAAC;IAC/D0I,YAAY,CAACpX,eAAe,CAACiT,mBAAmB,GAAG4C,YAAY,CAAC7V,eAAe,CAACiT,mBAAmB;IACnG,IAAI,CAAC8E,gBAAgB,CAAC1B,YAAY,EAAEe,YAAY,CAAC;EACrD,CAAC;EACD1d,IAAI,CAACjC,SAAS,CAACif,iBAAiB,GAAG,UAAUnU,MAAM,EAAE;IACjD,IAAIyV,IAAI,GAAG,IAAI,CAACpe,MAAM;IACtB,IAAIiH,IAAI,GAAG,EAAE;IACb,IAAI,IAAI,CAACjH,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,IAAI,IAAI,CAACwB,MAAM,CAAC+E,UAAU,CAACA,UAAU,CAACsZ,IAAI,CAAC1gB,MAAM,GAAG,CAAC,EAAE;MACpGsJ,IAAI,GAAG,IAAI,CAACjH,MAAM,CAAC+E,UAAU,CAACA,UAAU,CAACsZ,IAAI;IACjD,CAAC,MACI;MACDpX,IAAI,GAAG,IAAI,CAACjH,MAAM,CAAC6G,eAAe;IACtC;IACA,IAAI9B,UAAU,GAAG,IAAI,CAAC/E,MAAM,CAAC+E,UAAU;IACvC,IAAIuZ,UAAU,GAAG3V,MAAM;IACvB,IAAI4V,cAAc,GAAG,IAAI,CAACve,MAAM,CAAC2T,aAAa,CAAC2K,UAAU,CAACvO,UAAU,CAAC;IACrE,IAAIuO,UAAU,EAAE;MACZ,IAAIA,UAAU,CAACvO,UAAU,EAAE;QACvB,IAAIyO,kBAAkB,GAAGD,cAAc,GAAGA,cAAc,CAACvO,YAAY,GAAG,EAAE;QAC1E,IAAIyO,UAAU,GAAG,CAAC;QAClB,IAAID,kBAAkB,IAAIA,kBAAkB,CAAC7gB,MAAM,GAAG,CAAC,EAAE;UACrD,IAAI6gB,kBAAkB,CAAC7gB,MAAM,KAAK,CAAC,EAAE;YACjC;YACA,IAAI,CAACqC,MAAM,CAAC0e,UAAU,GAAG,IAAI;YAC7BF,kBAAkB,CAAC,CAAC,CAAC,CAACtF,QAAQ,GAAG,IAAI;YACrC,IAAI,CAAClZ,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC+L,cAAc,CAAC;YAC3D,IAAI,CAACve,MAAM,CAAC0e,UAAU,GAAG,KAAK;YAC9BF,kBAAkB,CAAC,CAAC,CAAC,CAACtF,QAAQ,GAAG,KAAK;UAC1C;UACAuF,UAAU,GAAGD,kBAAkB,CAAC9W,OAAO,CAAC4W,UAAU,CAAC;UACnDC,cAAc,CAACvO,YAAY,CAAChH,MAAM,CAACyV,UAAU,EAAE,CAAC,CAAC;UACjD;UACA,IAAI,CAACje,mBAAmB,CAACuF,IAAI,CAACwY,cAAc,CAAC;QACjD;MACJ;MACA,IAAID,UAAU,CAAClY,eAAe,CAACiT,mBAAmB,CAAC1b,MAAM,EAAE;QACvD,IAAIghB,aAAa,GAAGL,UAAU,CAAClY,eAAe,CAACiT,mBAAmB,CAAC3R,OAAO,CAAC4W,UAAU,CAAClY,eAAe,CAACkP,WAAW,CAAC;QAClHgJ,UAAU,CAAClY,eAAe,CAACiT,mBAAmB,CAACrQ,MAAM,CAAC2V,aAAa,EAAE,CAAC,CAAC;MAC3E;MACA,IAAI,CAACZ,sBAAsB,CAACO,UAAU,EAAE,QAAQ,CAAC;MACjD;MACA,IAAI,CAAC,IAAI,CAACte,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAE;QAClC,IAAI6F,eAAe,GAAG,EAAE;QACxBA,eAAe,CAAC7Y,IAAI,CAACuY,UAAU,CAAClY,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;QACvE,IAAI,IAAI,CAAChD,MAAM,CAACuH,QAAQ,KAAK,aAAa,EAAE;UACxC,IAAI,CAACvH,MAAM,CAACuG,UAAU,CAACsY,oBAAoB,CAACD,eAAe,CAAC;QAChE;MACJ;MACA,IAAIE,eAAe,GAAG,IAAI,CAAC9e,MAAM,CAACwH,QAAQ,CAACE,OAAO,CAAC4W,UAAU,CAAC;MAC9D,IAAIF,IAAI,CAAC/c,UAAU,CAAC0X,QAAQ,EAAE;QAC1B,IAAIgG,GAAG,GAAG,KAAK,CAAC;QAChB,IAAIrY,SAAS,GAAG,IAAI,CAAC1G,MAAM,CAAC6G,eAAe;QAC3C,KAAK,IAAIrJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkJ,SAAS,CAAC/I,MAAM,EAAEH,CAAC,EAAE,EAAE;UACvC,IAAIkJ,SAAS,CAAClJ,CAAC,CAAC,CAAC4I,eAAe,CAACkP,WAAW,KAAKgJ,UAAU,CAAClY,eAAe,CAACkP,WAAW,EAAE;YACrFyJ,GAAG,GAAGvhB,CAAC;UACX;QACJ;QACA,IAAIuhB,GAAG,KAAK,CAAC,CAAC,EAAE;UACZ,IAAIha,UAAU,CAACpH,MAAM,GAAG,CAAC,EAAE;YACvBoH,UAAU,CAACiE,MAAM,CAAC+V,GAAG,EAAE,CAAC,CAAC;UAC7B;UACA9X,IAAI,CAAC+B,MAAM,CAAC+V,GAAG,EAAE,CAAC,CAAC;UACnB,IAAI,CAAC/e,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAAC8V,eAAe,EAAE,CAAC,CAAC;UAC/C,IAAI,CAAC9e,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC8V,eAAe,EAAE,CAAC,CAAC;UAC1C,IAAI,CAAC9e,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACuB,MAAM,CAAC8V,eAAe,EAAE,CAAC,CAAC;QACvD;MACJ;MACA,IAAIxC,WAAW,GAAGrV,IAAI,CAACS,OAAO,CAAC4W,UAAU,CAAC;MAC1C,IAAI,CAACF,IAAI,CAAC/c,UAAU,CAAC0X,QAAQ,EAAE;QAC3B,IAAIiG,kBAAkB,GAAG,IAAI,CAAChf,MAAM,CAACuG,UAAU,CAAC0Y,aAAa,CAACX,UAAU,EAAE,CAAC,CAAC;QAC5ErX,IAAI,CAAC+B,MAAM,CAACsT,WAAW,EAAE0C,kBAAkB,GAAG,CAAC,CAAC;QAChD,IAAI,CAAChf,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAAC8V,eAAe,EAAEE,kBAAkB,GAAG,CAAC,CAAC;QACpE,IAAI,CAAChf,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC8V,eAAe,EAAEE,kBAAkB,GAAG,CAAC,CAAC;QAC/D,IAAI,CAAChf,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACuB,MAAM,CAAC8V,eAAe,EAAEE,kBAAkB,GAAG,CAAC,CAAC;MAC5E;MACA,IAAIV,UAAU,CAACvO,UAAU,IAAIwO,cAAc,IAAIA,cAAc,CAACvO,YAAY,IAAI,CAACuO,cAAc,CAACvO,YAAY,CAACrS,MAAM,EAAE;QAC/G,IAAI,CAACqC,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAE,KAAK,EAAEwT,cAAc,CAAC;QAC7D,IAAI,CAACve,MAAM,CAAC+K,cAAc,CAAC,iBAAiB,EAAE,KAAK,EAAEwT,cAAc,CAAC;MACxE;IACJ;EACJ,CAAC;EACD;EACAze,IAAI,CAACjC,SAAS,CAACsgB,gBAAgB,GAAG,UAAUe,aAAa,EAAEC,aAAa,EAAE;IACtE,IAAIf,IAAI,GAAG,IAAI,CAACpe,MAAM;IACtB,IAAI6d,YAAY,GAAG,IAAI,CAAC7d,MAAM,CAACwH,QAAQ,CAACE,OAAO,CAACwX,aAAa,CAAC;IAC9D,IAAIlP,YAAY,GAAG,IAAI,CAAChQ,MAAM,CAACuG,UAAU,CAAC0Y,aAAa,CAACC,aAAa,EAAE,CAAC,CAAC;IACzE,IAAIE,kBAAkB;IACtB,IAAIC,WAAW;IACf,IAAItC,UAAU,GAAG,IAAI,CAAC/c,MAAM,CAACiV,iBAAiB,CAACkK,aAAa,CAACpP,UAAU,CAACjB,QAAQ,CAAC;IACjF,IAAI,IAAI,CAAC9O,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAACpG,YAAY,CAAC,SAAS,CAAC,IAAI,IAAI,CAACA,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,IAAI,IAAI,CAAC7d,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAAC3hB,MAAM,GAAG,CAAC,EAAE;MAC1N,IAAIof,UAAU,CAAC3W,eAAe,CAAC4W,QAAQ,KAAK,IAAI,CAAChd,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE;QAC7FkC,kBAAkB,GAAG,IAAI,CAACpf,MAAM,CAACod,OAAO,CAACzf,MAAM,GAAG,CAAC;MACvD,CAAC,MACI;QACD,KAAK,IAAImI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACrE,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAAC3hB,MAAM,EAAEmI,CAAC,EAAE,EAAE;UACzE,IAAI,IAAI,CAACrE,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAACmB,IAAI,CAAC2W,cAAc,KAAKuB,aAAa,CAACvB,cAAc,IAAIuB,aAAa,CAAC/Y,eAAe,CAAC8C,MAAM,KAAK,IAAI,CAACzH,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAACmB,IAAI,CAACb,eAAe,CAAC8C,MAAM,EAAE;YAC5N,IAAIqW,OAAO,GAAG,IAAI,CAAC9d,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAACuW,KAAK;YAClE,IAAI,IAAI,CAAC5a,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAAC0Z,QAAQ,KAAK,OAAO,EAAE;cACpEJ,kBAAkB,GAAGG,OAAO;YACjC,CAAC,MACI;cACAH,kBAAkB,GAAGG,OAAO,GAAG,CAAC;YACrC;YACA,KAAK,IAAI/hB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG0hB,aAAa,CAAClP,YAAY,CAACrS,MAAM,EAAEH,CAAC,EAAE,EAAE;cACxD,IAAI,GAAG,GAAG0hB,aAAa,CAAClP,YAAY,CAACxS,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM,KAAK,IAAI,CAACzH,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAACjE,EAAE,EAAE;gBAClH,IAAI,IAAI,CAACJ,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAAC0Z,QAAQ,KAAK,OAAO,EAAE;kBACrEH,WAAW,GAAG7hB,CAAC;gBACnB,CAAC,MACI;kBACD6hB,WAAW,GAAG7hB,CAAC,GAAG,CAAC;gBACvB;gBACA;cACJ;YACJ;YACA;UACJ,CAAC,MACI,IAAI,IAAI,CAACiE,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAACmB,IAAI,CAAC2W,cAAc,KAAKuB,aAAa,CAACvB,cAAc,IAAIuB,aAAa,CAAC/Y,eAAe,CAAC8C,MAAM,KAAK,IAAI,CAACzH,YAAY,CAAC,SAAS,CAAC,CAAC6d,cAAc,CAACxZ,CAAC,CAAC,CAACmB,IAAI,CAACb,eAAe,CAAC8C,MAAM,EAAE;YACjO,IAAIuW,aAAa,GAAG,IAAI,CAACzf,MAAM,CAACiV,iBAAiB,CAACkK,aAAa,CAACpP,UAAU,CAACjB,QAAQ,CAAC;YACpFsQ,kBAAkB,GAAGK,aAAa,CAACpD,KAAK,GAAGoD,aAAa,CAACzP,YAAY,CAACrS,MAAM,GAAG,CAAC;YAChF;UACJ;QACJ;MACJ;IACJ,CAAC,MACI,IAAI,IAAI,CAACqC,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAIkV,UAAU,CAAC3W,eAAe,CAAC4W,QAAQ,KAAK,IAAI,CAAChd,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAACld,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,uBAAuB,CAAC,EAAE;MAC7P,KAAK,IAAIrK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACwC,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,uBAAuB,CAAC,CAAClK,MAAM,EAAEH,CAAC,EAAE,EAAE;QAClG,IAAI,IAAI,CAACwC,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,uBAAuB,CAAC,CAACrK,CAAC,CAAC,CAACyJ,IAAI,CAACb,eAAe,CAAC8C,MAAM,KAAKiW,aAAa,CAAC/Y,eAAe,CAAC8C,MAAM,EAAE;UAC9I,IAAI6T,UAAU,CAACV,KAAK,EAAE;YAClB+C,kBAAkB,GAAG,IAAI,CAACpf,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,uBAAuB,CAAC,CAACrK,CAAC,CAAC,CAACyJ,IAAI,CAACoV,KAAK;YACvGgD,WAAW,GAAGD,kBAAkB,GAAGrC,UAAU,CAACV,KAAK,GAAG,CAAC;UAC3D,CAAC,MACI;YACD+C,kBAAkB,GAAInhB,iBAAiB,CAAC+R,YAAY,CAAC,IACjDA,YAAY,KAAK,CAAC,GAAI6N,YAAY,GAAG,CAAC,GACtC7N,YAAY,GAAG6N,YAAY,GAAG,CAAC;YACnCwB,WAAW,GAAG,CAAC;UACnB;UACA;QACJ;MACJ;IACJ,CAAC,MACI,IAAI,CAACphB,iBAAiB,CAAC,IAAI,CAACyhB,WAAW,CAAC,IAAI,IAAI,CAACC,cAAc,IAAIT,aAAa,CAAClP,YAAY,IAAI,IAAI,CAAC2P,cAAc,KAAK,OAAO,EAAE;MACnI,IAAIC,eAAe,GAAGV,aAAa,CAAClP,YAAY,CAAC,IAAI,CAAC0P,WAAW,CAAC;MAClE,IAAIF,QAAQ,GAAG,IAAI,CAACG,cAAc,KAAK,OAAO,IAAI,IAAI,CAACA,cAAc,KAAK,OAAO,GAAG,IAAI,CAACA,cAAc,GACnG,OAAO;MACXP,kBAAkB,GAAGQ,eAAe,GAAG,IAAI,CAACF,WAAW,GAAG7B,YAAY,GAAG,CAAC,GACtE7N,YAAY,GAAG6N,YAAY,GAAG,CAAC;MACnCuB,kBAAkB,GAAGI,QAAQ,KAAK,OAAO,GAAGJ,kBAAkB,GAAGA,kBAAkB,GAAG,CAAC;IAC3F,CAAC,MACI;MACDA,kBAAkB,GAAInhB,iBAAiB,CAAC+R,YAAY,CAAC,IACjDA,YAAY,KAAK,CAAC,GAAI6N,YAAY,GAAG,CAAC,GACtC7N,YAAY,GAAG6N,YAAY,GAAG,CAAC;IACvC;IACA;IACA,IAAI,CAAC7d,MAAM,CAAC6G,eAAe,CAACmC,MAAM,CAACoW,kBAAkB,EAAE,CAAC,EAAED,aAAa,CAAC;IACxE,IAAI,CAACnf,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAACoW,kBAAkB,EAAE,CAAC,EAAED,aAAa,CAAC;IACjE,IAAI,CAACnf,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACoW,kBAAkB,EAAE,CAAC,EAAED,aAAa,CAAC/Y,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;IACnG,IAAI,CAAC+a,sBAAsB,CAACoB,aAAa,EAAE,KAAK,CAAC;IACjD,IAAIU,QAAQ,GAAGV,aAAa,CAACrB,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGqB,aAAa,CAAC/Y,eAAe,CAAC8C,MAAM,GAAG,GAAG,GAAGiW,aAAa,CAAC/Y,eAAe,CAAC8C,MAAM;IAClI,IAAI,CAAClJ,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACuB,MAAM,CAACoW,kBAAkB,EAAE,CAAC,EAAES,QAAQ,CAAC;IAChE,IAAI,CAACX,aAAa,CAAC5M,eAAe,EAAE;MAChC,IAAI,CAACtS,MAAM,CAAC+K,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAEmU,aAAa,CAAC;MAClE,IAAI,CAAClf,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAE,IAAI,EAAEmU,aAAa,CAAC;MAC3D,IAAI,CAACA,aAAa,CAAClP,YAAY,CAACrS,MAAM,EAAE;QACpCuhB,aAAa,CAAClP,YAAY,GAAG,EAAE;QAC/B,IAAI,CAACoO,IAAI,CAAC/c,UAAU,CAAC0X,QAAQ,IAAI9a,iBAAiB,CAACihB,aAAa,CAACpV,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,CAAC,EAAE;UACtGsN,aAAa,CAACpV,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,GAAG,EAAE;QAC7D;MACJ;IACJ;IACA,IAAIyN,WAAW,IAAI,CAAC,EAAE;MAClBH,aAAa,CAAClP,YAAY,CAAChH,MAAM,CAACqW,WAAW,EAAE,CAAC,EAAEF,aAAa,CAAC;IACpE,CAAC,MACI;MACDD,aAAa,CAAClP,YAAY,CAAChH,MAAM,CAACkW,aAAa,CAAClP,YAAY,CAACrS,MAAM,EAAE,CAAC,EAAEwhB,aAAa,CAAC;IAC1F;IACA,IAAI,CAAClhB,iBAAiB,CAACkhB,aAAa,CAAC,IAAI,CAAC,IAAI,CAACnf,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,IAClE,CAAC9a,iBAAiB,CAACihB,aAAa,CAACpV,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,CAAC,EAAE;MAC7EsN,aAAa,CAACpV,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,CAAC5I,MAAM,CAACkW,aAAa,CAAClP,YAAY,CAACrS,MAAM,EAAE,CAAC,EAAEwhB,aAAa,CAACrV,QAAQ,CAAC;IAC7H;IACA,IAAI,CAAC7L,iBAAiB,CAACkhB,aAAa,CAACpP,UAAU,CAAC,EAAE;MAC9C;MACA,IAAI,CAACvP,mBAAmB,CAACuF,IAAI,CAACmZ,aAAa,CAAC;IAChD;EACJ,CAAC;EACDpf,IAAI,CAACjC,SAAS,CAAC6W,mBAAmB,GAAG,UAAU7P,IAAI,EAAE;IACjD,IAAI,CAAC7E,MAAM,CAACqR,iBAAiB,GAAG,CAAC,CAAC;IAClC,IAAI,CAACD,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACpR,MAAM,CAAC6R,iBAAiB,GAAG,IAAI;IACpC,IAAI,CAAC7R,MAAM,CAACiI,QAAQ,GAAG,KAAK;IAC5B,IAAI,CAACjI,MAAM,CAACe,iBAAiB,CAACC,mBAAmB,GAAG,EAAE;IACtD,IAAI,CAAChB,MAAM,CAACiQ,qBAAqB,GAAG,KAAK;IACzC,IAAI,CAACjQ,MAAM,CAAC6R,iBAAiB,GAAG,IAAI;IACpC,IAAI,CAAClR,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAAC3C,iBAAiB,CAAC,IAAI,CAACwD,YAAY,CAAC,KAAKxD,iBAAiB,CAAC4G,IAAI,CAAC,IAChE,CAAC5G,iBAAiB,CAAC4G,IAAI,CAAC,IAAIA,IAAI,CAAC,aAAa,CAAC,KAAK,YAAY,IAAI,CAACA,IAAI,CAAC,QAAQ,CAAE,CAAC,EAAE;MACxF,IAAI,IAAI,CAACpD,YAAY,CAACqe,MAAM,IAAI,CAAC,IAAI,CAACre,YAAY,CAACse,SAAS,CAACtZ,WAAW,EAAE;QACtE,IAAI,CAAChF,YAAY,CAACse,SAAS,CAACC,IAAI,CAAC,CAAC;MACtC;MACA,IAAI,CAACve,YAAY,CAACwe,WAAW,CAAC,CAAC;IACnC;IACA,IAAI,CAACjgB,MAAM,CAAC4b,WAAW,CAAC,CAAC;IACzB,IAAI,CAAC5b,MAAM,CAACkgB,kBAAkB,CAAC,KAAK,CAAC;EACzC,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIpgB,IAAI,CAACjC,SAAS,CAAC2d,aAAa,GAAG,UAAU3W,IAAI,EAAE;IAC3C,IAAI,CAAC6P,mBAAmB,CAAC,CAAC;IAC1B,IAAI7P,IAAI,CAACqF,MAAM,KAAK,gBAAgB,EAAE;MAClC,IAAI,CAAClK,MAAM,CAAC4W,OAAO,CAAC,eAAe,EAAE/R,IAAI,CAAC;IAC9C,CAAC,MACI,IAAIA,IAAI,CAACqF,MAAM,KAAK,aAAa,EAAE;MACpC,IAAI,CAAClK,MAAM,CAAC4W,OAAO,CAAC,SAAS,EAAE/R,IAAI,CAAC;IACxC,CAAC,MACI,IAAIA,IAAI,CAACqF,MAAM,KAAK,eAAe,EAAE;MACtC,IAAI,IAAI,CAACzI,YAAY,CAACqe,MAAM,IAAI,CAAC,IAAI,CAACre,YAAY,CAACse,SAAS,CAACtZ,WAAW,EAAE;QACtE,IAAI,CAAChF,YAAY,CAACse,SAAS,CAACC,IAAI,CAAC,CAAC;MACtC;MACA,IAAI,CAACve,YAAY,CAACwe,WAAW,CAAC,CAAC;IACnC;EACJ,CAAC;EACD;EACAngB,IAAI,CAACjC,SAAS,CAACsiB,UAAU,GAAG,UAAUtb,IAAI,EAAE;IACxC,IAAI,CAAC4P,uBAAuB,CAAC,CAAC;IAC9B,IAAI,CAACzU,MAAM,CAAC4b,WAAW,CAAC,CAAC;IACzB;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI9b,IAAI,CAACjC,SAAS,CAACmE,yBAAyB,GAAG,YAAY;IACnD,IAAI+d,SAAS,GAAG,IAAIvgB,MAAM,CAAC;MACvB4T,KAAK,EAAE,OAAO;MACdgN,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,KAAK;MACdzc,SAAS,EAAE,IAAI,CAAC5D,MAAM,CAAC4D,SAAS;MAChC0c,OAAO,EAAE,IAAI,CAACtgB,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,eAAe,CAAC;MAC3DqD,OAAO,EAAE,CACL;QACIC,KAAK,EAAE,IAAI,CAACC,qBAAqB,CAACte,IAAI,CAAC,IAAI,CAAC;QAC5Cue,WAAW,EAAE;UAAEJ,OAAO,EAAE,IAAI,CAACtgB,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,QAAQ,CAAC;UAAEyD,SAAS,EAAE;QAAK;MACzF,CAAC,EACD;QACIH,KAAK,EAAE,IAAI,CAACI,kBAAkB,CAACze,IAAI,CAAC,IAAI,CAAC;QACzCue,WAAW,EAAE;UAAEJ,OAAO,EAAE,IAAI,CAACtgB,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,QAAQ;QAAE;MACxE,CAAC,CACJ;MACD7G,MAAM,EAAE,IAAI,CAACrW,MAAM,CAAC8B,OAAO;MAC3B+e,iBAAiB,EAAE;QAAEC,MAAM,EAAE;MAAO;IACxC,CAAC,CAAC;IACFf,SAAS,CAACra,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC1F,MAAM,CAAC8B,OAAO,CAACD,EAAE,GAAG,sBAAsB,CAAC;IACzE,IAAI,CAACnB,aAAa,GAAGqf,SAAS;EAClC,CAAC;EACDjgB,IAAI,CAACjC,SAAS,CAAC+iB,kBAAkB,GAAG,YAAY;IAC5C,IAAI,CAAClgB,aAAa,CAACsf,IAAI,CAAC,CAAC;EAC7B,CAAC;EACDlgB,IAAI,CAACjC,SAAS,CAAC4iB,qBAAqB,GAAG,YAAY;IAC/C,IAAI,CAACM,mBAAmB,CAAC,CAAC;IAC1B,IAAI,CAACrgB,aAAa,CAACsf,IAAI,CAAC,CAAC;IACzB,IAAIgB,eAAe,GAAG,IAAI,CAAChhB,MAAM,CAAC8B,OAAO,CAACyY,aAAa,CAAC,aAAa,CAAC;IACtEyG,eAAe,CAACC,KAAK,CAAC,CAAC;EAC3B,CAAC;EACD;AACJ;AACA;AACA;EACInhB,IAAI,CAACjC,SAAS,CAACqjB,iBAAiB,GAAG,YAAY;IAC3C,IAAI,IAAI,CAAClhB,MAAM,CAACiB,YAAY,CAACW,aAAa,IAAI,CAAC,IAAI,CAAC5B,MAAM,CAACqH,QAAQ,EAAE;MACjE,IAAI,IAAI,CAACrH,MAAM,CAACiB,YAAY,CAACmB,uBAAuB,EAAE;QAClD,IAAI,CAAC1B,aAAa,CAACygB,IAAI,CAAC,CAAC;MAC7B,CAAC,MACI;QACD,IAAI,CAACJ,mBAAmB,CAAC,CAAC;QAC1B,IAAIK,eAAe,GAAG,IAAI,CAACphB,MAAM,CAAC8B,OAAO,CAACyY,aAAa,CAAC,aAAa,CAAC;QACtE6G,eAAe,CAACH,KAAK,CAAC,CAAC;MAC3B;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACInhB,IAAI,CAACjC,SAAS,CAACwjB,qBAAqB,GAAG,UAAUC,eAAe,EAAE;IAC9D,IAAItI,aAAa,GAAG,EAAE;IACtB,IAAIuI,OAAO,GAAG,SAAAA,CAAU/jB,CAAC,EAAE;MACvB,IAAI8jB,eAAe,CAAC9jB,CAAC,CAAC,CAACuS,UAAU,EAAE;QAC/B,IAAIuR,eAAe,CAAC9jB,CAAC,CAAC,CAAC4I,eAAe,CAACiT,mBAAmB,CAAC1b,MAAM,KAAK,CAAC,EAAE;UACrE,IAAIsJ,IAAI,GAAGqa,eAAe,CAAC9jB,CAAC,CAAC;UAC7B,IAAIoL,GAAG,GAAG3B,IAAI,CAACb,eAAe,CAACiT,mBAAmB;UAClD,KAAK,IAAIvT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8C,GAAG,CAACjL,MAAM,EAAEmI,CAAC,EAAE,EAAE;YACjC,IAAI0b,MAAM,CAACxhB,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACkB,GAAG,CAAC9C,CAAC,CAAC,CAAC9C,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;cACrDgW,aAAa,CAACjT,IAAI,CAACyb,MAAM,CAACxhB,MAAM,CAACwH,QAAQ,CAACga,MAAM,CAACxhB,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACkB,GAAG,CAAC9C,CAAC,CAAC,CAAC9C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5F,CAAC,MACI,IAAIwe,MAAM,CAACxhB,MAAM,CAAC6H,cAAc,IAAI2Z,MAAM,CAACxhB,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI2Z,MAAM,CAACxhB,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,IAAI2Z,MAAM,CAACxhB,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;cACnNmR,aAAa,CAACjT,IAAI,CAACyb,MAAM,CAACxhB,MAAM,CAACwH,QAAQ,CAACga,MAAM,CAACxhB,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,GAAG,GAAG4Z,eAAe,CAAC9jB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM,CAAC,CAAC,CAAC;YAC9H;UACJ;UACA,IAAIsY,MAAM,CAACxhB,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACT,IAAI,CAACb,eAAe,CAACkP,WAAW,CAAC,KAAK,CAAC,CAAC,IAClE0D,aAAa,CAACtR,OAAO,CAAC8Z,MAAM,CAACxhB,MAAM,CAACwH,QAAQ,CAACga,MAAM,CAACxhB,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACT,IAAI,CAACb,eAAe,CAACkP,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;YACnH0D,aAAa,CAACjT,IAAI,CAACyb,MAAM,CAACxhB,MAAM,CAACwH,QAAQ,CAACga,MAAM,CAACxhB,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACT,IAAI,CAACb,eAAe,CAACkP,WAAW,CAAC,CAAC,CAAC;UAC3G;QACJ,CAAC,MACI,IAAIkM,MAAM,CAACxhB,MAAM,CAAC6H,cAAc,IAAI2Z,MAAM,CAACxhB,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAIyZ,eAAe,CAAC9jB,CAAC,CAAC,CAAC4I,eAAe,CAACiT,mBAAmB,CAAC1b,MAAM,GAAG,CAAC,EAAE;UAC/Jqb,aAAa,CAACjT,IAAI,CAACub,eAAe,CAAC9jB,CAAC,CAAC,CAAC;QAC1C;MACJ,CAAC,MACI;QACD,IAAIikB,cAAc,GAAGD,MAAM,CAACxhB,MAAM,CAACwH,QAAQ,CAACc,MAAM,CAAC,UAAUrB,IAAI,EAAE;UAC/D,OAAQA,IAAI,CAACb,eAAe,CAAC8C,MAAM,KAAKoY,eAAe,CAAC9jB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM,IAC7EjC,IAAI,CAACqL,eAAe;QAC5B,CAAC,CAAC,CAAC,CAAC,CAAC;QACL0G,aAAa,CAACjT,IAAI,CAAC0b,cAAc,CAAC;MACtC;IACJ,CAAC;IACD,IAAID,MAAM,GAAG,IAAI;IACjB,KAAK,IAAIhkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8jB,eAAe,CAAC3jB,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC7C+jB,OAAO,CAAC/jB,CAAC,CAAC;IACd;IACA,IAAI,CAACkkB,SAAS,CAAC1I,aAAa,CAAC;EACjC,CAAC;EACDlZ,IAAI,CAACjC,SAAS,CAAC8jB,GAAG,GAAG,UAAUhZ,MAAM,EAAEiZ,YAAY,EAAE;IACjDA,YAAY,CAAC7b,IAAI,CAAC4C,MAAM,CAAC;IACzB,IAAIA,MAAM,CAAC2J,eAAe,EAAE;MACxB,IAAIV,KAAK,GAAGjJ,MAAM,CAACqH,YAAY;MAC/B,KAAK,IAAIxS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoU,KAAK,CAACjU,MAAM,EAAEH,CAAC,EAAE,EAAE;QACnC,IAAI,CAACmkB,GAAG,CAAC/P,KAAK,CAACpU,CAAC,CAAC,EAAEokB,YAAY,CAAC;MACpC;IACJ,CAAC,MACI;MACD,IAAIA,YAAY,CAACla,OAAO,CAACiB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;QACrCiZ,YAAY,CAAC7b,IAAI,CAAC4C,MAAM,CAAC;MAC7B;IACJ;EACJ,CAAC;EACD7I,IAAI,CAACjC,SAAS,CAACkjB,mBAAmB,GAAG,YAAY;IAC7C,IAAI,CAAC,IAAI,CAAC9gB,kBAAkB,EAAE;MAC1B,IAAIqhB,eAAe,GAAG,EAAE;MACxB,IAAI,IAAI,CAACthB,MAAM,CAAC6hB,iBAAiB,CAAC1gB,IAAI,KAAK,MAAM,EAAE;QAC/CmgB,eAAe,GAAG,IAAI,CAACthB,MAAM,CAAC8hB,eAAe,CAACC,kBAAkB,CAAC,CAAC;MACtE,CAAC,MACI,IAAI,IAAI,CAAC/hB,MAAM,CAAC6hB,iBAAiB,CAAC1gB,IAAI,KAAK,MAAM,EAAE;QACpDmgB,eAAe,GAAG,IAAI,CAACthB,MAAM,CAAC8hB,eAAe,CAACE,sBAAsB,CAAC,CAAC;MAC1E;MACA,IAAI,IAAI,CAAChiB,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;QACzC,IAAI,CAAC8Z,qBAAqB,CAACC,eAAe,CAAC;MAC/C,CAAC,MACI;QACD,IAAI,CAACI,SAAS,CAACJ,eAAe,CAAC;MACnC;IACJ,CAAC,MACI;MACD,IAAI,IAAI,CAACphB,eAAe,CAACvC,MAAM,EAAE;QAC7B,IAAI,IAAI,CAACqC,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;UACzC,IAAI,CAAC8Z,qBAAqB,CAAC,IAAI,CAACnhB,eAAe,CAAC;QACpD,CAAC,MACI;UACD,IAAI,CAACwhB,SAAS,CAAC,IAAI,CAACxhB,eAAe,CAAC;QACxC;MACJ;MACA,IAAI,CAACD,kBAAkB,GAAG,KAAK;IACnC;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIH,IAAI,CAACjC,SAAS,CAACokB,YAAY,GAAG,UAAUC,UAAU,EAAE;IAChD,IAAI,CAACjiB,kBAAkB,GAAG,IAAI;IAC9B,IAAIkiB,YAAY,GAAG,OAAQD,UAAW;IACtC,IAAI,CAAChiB,eAAe,GAAG,EAAE;IACzB,QAAQiiB,YAAY;MAChB,KAAK,QAAQ;MACb,KAAK,QAAQ;QACT;UACI,IAAIjZ,MAAM,GAAGgZ,UAAU,CAAClf,QAAQ,CAAC,CAAC;UAClC,IAAI,IAAI,CAAChD,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;YACzC,IAAI,CAACtJ,iBAAiB,CAACiL,MAAM,CAAC,IAAI,IAAI,CAAClJ,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAGwB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;cACrF,IAAI,CAAChJ,eAAe,CAAC6F,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAGwB,MAAM,CAAC,CAAC,CAAC;YACnG;UACJ,CAAC,MACI;YACD,IAAI,CAACjL,iBAAiB,CAACiL,MAAM,CAAC,IAAI,IAAI,CAAClJ,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACwB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;cACtE,IAAI,CAAChJ,eAAe,CAAC6F,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAAC2H,aAAa,CAACuB,MAAM,CAAC,CAAC;YAChE;UACJ;UACA;QACJ;MACJ,KAAK,QAAQ;QACT,IAAI,CAACkZ,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,EAAE;UAC5B,IAAI,CAAChiB,eAAe,CAAC6F,IAAI,CAACmc,UAAU,CAACI,OAAO,CAAC,CAAC,CAAC;QACnD,CAAC,MACI;UACD,IAAI,CAACC,qBAAqB,CAACL,UAAU,CAAC;QAC1C;QACA;MACJ;IACJ;IACA,IAAI,CAAChB,iBAAiB,CAAC,CAAC;EAC5B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIphB,IAAI,CAACjC,SAAS,CAAC0kB,qBAAqB,GAAG,UAAUC,eAAe,EAAE;IAC9D,IAAIA,eAAe,CAAC7kB,MAAM,EAAE;MACxB,IAAIwkB,YAAY,GAAG,OAAQK,eAAe,CAAC,CAAC,CAAE;MAC9C,IAAIL,YAAY,KAAK,QAAQ,EAAE;QAC3B,IAAI,CAACjiB,eAAe,GAAGsiB,eAAe;MAC1C,CAAC,MACI;QACD;QACA,KAAK,IAAIhlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGglB,eAAe,CAAC7kB,MAAM,EAAEH,CAAC,EAAE,EAAE;UAC7C,IAAIqE,EAAE,GAAG2gB,eAAe,CAAChlB,CAAC,CAAC,CAACwF,QAAQ,CAAC,CAAC;UACtC,IAAI,IAAI,CAAChD,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;YACzC,IAAI,CAACtJ,iBAAiB,CAAC4D,EAAE,CAAC,IAAI,IAAI,CAAC7B,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAG7F,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;cAC7E,IAAI,CAAC3B,eAAe,CAAC6F,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAG7F,EAAE,CAAC,CAAC,CAAC;YAC/F;UACJ,CAAC,MACI,IAAI,CAAC5D,iBAAiB,CAAC4D,EAAE,CAAC,IAAI,IAAI,CAAC7B,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAAC7F,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;YACnE,IAAI,CAAC3B,eAAe,CAAC6F,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAAC2H,aAAa,CAAC9F,EAAE,CAAC,CAAC;UAC5D;QACJ;MACJ;IACJ;EACJ,CAAC;EACD/B,IAAI,CAACjC,SAAS,CAAC6jB,SAAS,GAAG,UAAUpa,KAAK,EAAE;IACxC,IAAImb,QAAQ,GAAGnb,KAAK,IAAIA,KAAK,CAAC3J,MAAM,GAAG2J,KAAK,GACxC,IAAI,CAACtH,MAAM,CAAC8hB,eAAe,CAACC,kBAAkB,CAAC,CAAC;IACpD,IAAI,CAAC/hB,MAAM,CAAC0iB,eAAe,GAAG,IAAI;IAClC,IAAID,QAAQ,CAAC9kB,MAAM,EAAE;MACjB,IAAI,CAACqC,MAAM,CAAC0e,UAAU,GAAG,IAAI;MAC7B+D,QAAQ,CAAC9S,OAAO,CAAC,UAAU3H,IAAI,EAAE;QAC7BA,IAAI,CAACkR,QAAQ,GAAG,IAAI;MACxB,CAAC,CAAC;MACF,IAAI,IAAI,CAAClZ,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAI,CAACD,KAAK,CAAC3J,MAAM,EAAE;QAC1D8kB,QAAQ,GAAG,EAAE;MACjB;MACA,IAAI,IAAI,CAACziB,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC,uBAAuB,CAAC,CAAC,QAAQ,CAAC,EAAE;QACpI,IAAI,IAAI,CAACA,MAAM,CAAC6H,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;UACjG,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;UAC3C,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QAC3D;QACA,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;UACpD,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,sBAAsB,CAAC,CAAC,CAAC;QACxD;QACA,IAAI8a,OAAO,GAAG,CAAC,CAAC;QAChBA,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ;QAC5BA,OAAO,CAAC,uBAAuB,CAAC,GAAG,EAAE;QACrC,IAAI,CAAC3iB,MAAM,CAAC6H,cAAc,CAAC,cAAc,CAAC,CAAC1J,MAAM,CAAC,EAAE,EAAE,EAAE,EAAEskB,QAAQ,EAAE,IAAI,CAAC,EAAEE,OAAO,EAAE,uBAAuB,CAAC;QAC5G,IAAI,CAAC3iB,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAClK,MAAM,GAAG,CAAC,CAAC,GAAGglB,OAAO;MACzH;MACA,IAAIC,OAAO,GAAG,SAAAA,CAAUplB,CAAC,EAAE;QACvB,IAAIykB,YAAY,GAAGQ,QAAQ,CAACjlB,CAAC,CAAC;QAC9B,IAAIqlB,MAAM,CAAC/hB,kBAAkB,CAAC4G,OAAO,CAACua,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;UACxD,OAAO,UAAU;QACrB;QACA,IAAIa,WAAW,GAAG,CAACb,YAAY,CAAC;QAChC,IAAIY,MAAM,CAAC7iB,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAIsb,MAAM,CAAC7iB,MAAM,CAAC6H,cAAc,IAAIgb,MAAM,CAAC7iB,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI4a,QAAQ,CAACjlB,CAAC,CAAC,CAAC4I,eAAe,CAACzD,YAAY,IAAI8f,QAAQ,CAACjlB,CAAC,CAAC,CAAC4I,eAAe,CAACzD,YAAY,CAAChF,MAAM,GAAG,CAAC,EAAE;UACrOmlB,WAAW,GAAG,EAAE;UAChB,IAAI,CAACL,QAAQ,CAACjlB,CAAC,CAAC,CAAC8U,eAAe,EAAE;YAC9B,IAAIyQ,IAAI,GAAG,GAAG,GAAGN,QAAQ,CAACjlB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM;YACnD2Z,MAAM,CAAC7iB,MAAM,CAACod,OAAO,CAAC4F,MAAM,CAAC,UAAUhL,CAAC,EAAElS,CAAC,EAAE;cACzC,IAAIkS,CAAC,KAAK+K,IAAI,EAAE;gBACZD,WAAW,CAAC/c,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAACwH,QAAQ,CAAC1B,CAAC,CAAC,CAAC;cAC7C;YACJ,CAAC,CAAC3D,IAAI,CAAC0gB,MAAM,CAAC,EAAE,EAAE,CAAC;UACvB;QACJ;QACA,KAAK,IAAI/c,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgd,WAAW,CAACnlB,MAAM,EAAEmI,CAAC,EAAE,EAAE;UACzC,IAAIiX,UAAU,GAAG8F,MAAM,CAAC7iB,MAAM,CAAC2T,aAAa,CAACmP,WAAW,CAAChd,CAAC,CAAC,CAACiK,UAAU,CAAC;UACvE,IAAI+S,WAAW,CAAChd,CAAC,CAAC,CAACiK,UAAU,EAAE;YAC3B,IAAI4C,WAAW,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC1U,iBAAiB,CAAC8e,UAAU,CAAC,EAAE;cAChCpK,WAAW,GAAGoK,UAAU,CAAC/M,YAAY;cACrC,IAAIiT,cAAc,GAAGtQ,WAAW,CAAChV,MAAM,KAAK,CAAC,GACzCgV,WAAW,GAAGA,WAAW,CAACrK,MAAM,CAAC,UAAUrB,IAAI,EAAE;gBACjD,OAAO,CAACA,IAAI,CAACiS,QAAQ;cACzB,CAAC,CAAC;cACF,IAAI+J,cAAc,CAACtlB,MAAM,GAAG,CAAC,EAAE;gBAC3BklB,MAAM,CAAC7iB,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACsQ,WAAW,CAAChd,CAAC,CAAC,CAACiK,UAAU,CAAC;cAC5E;YACJ;UACJ;UACA,IAAI5H,WAAW,GAAG2a,WAAW,CAAChd,CAAC,CAAC,CAACM,eAAe,CAAC+B,WAAW;UAC5D,IAAI+a,oBAAoB,GAAG,IAAI;UAC/B,IAAIL,MAAM,CAAC7iB,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAIwV,UAAU,IAAIA,UAAU,CAAC3W,eAAe,CAAC4W,QAAQ,KAC9F6F,MAAM,CAAC7iB,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE;YACvDgG,oBAAoB,GAAG,KAAK;UAChC;UACA,IAAI/a,WAAW,IAAIA,WAAW,CAACxK,MAAM,IAAIulB,oBAAoB,EAAE;YAC3DL,MAAM,CAACM,yBAAyB,CAACL,WAAW,CAAChd,CAAC,CAAC,CAAC;UACpD;UACA+c,MAAM,CAAC/hB,kBAAkB,CAACiF,IAAI,CAAC+c,WAAW,CAAChd,CAAC,CAAC,CAAC;UAC9C,IAAIgd,WAAW,CAAChd,CAAC,CAAC,CAACwM,eAAe,EAAE;YAChCuQ,MAAM,CAACrE,kBAAkB,CAACsE,WAAW,CAAChd,CAAC,CAAC,CAAC;UAC7C;QACJ;MACJ,CAAC;MACD,IAAI+c,MAAM,GAAG,IAAI;MACjB,KAAK,IAAIrlB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGilB,QAAQ,CAAC9kB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACtColB,OAAO,CAACplB,CAAC,CAAC;MACd;MACA,IAAI,IAAI,CAACwC,MAAM,CAAC8hB,eAAe,IAAI,IAAI,CAAC9hB,MAAM,CAACojB,cAAc,EAAE;QAC3D;QACA,IAAI,CAACpjB,MAAM,CAAC8hB,eAAe,CAACuB,cAAc,CAAC,CAAC;MAChD;MACA,IAAIC,UAAU,GAAG,CAAC,CAAC;MACnBA,UAAU,CAACC,uBAAuB,GAAG,IAAI,CAACziB,kBAAkB;MAC5DwiB,UAAU,CAACE,uBAAuB,GAAG,IAAI,CAACxjB,MAAM,CAACoW,aAAa;MAC9DkN,UAAU,CAAChS,MAAM,GAAG,KAAK;MACzBgS,UAAU,CAACpZ,MAAM,GAAG,QAAQ;MAC5B,IAAI,CAACuZ,oBAAoB,CAACH,UAAU,CAAC;MACrC,IAAI,CAACtjB,MAAM,CAAC0e,UAAU,GAAG,KAAK;IAClC;IACA,IAAI,CAACzgB,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACgW,aAAa,CAAC,EAAE;MAC/C,IAAI,CAAChW,MAAM,CAACgW,aAAa,CAAC0N,mBAAmB,CAAC,CAAC;IACnD;EACJ,CAAC;EACD5jB,IAAI,CAACjC,SAAS,CAACslB,yBAAyB,GAAG,UAAUxa,MAAM,EAAE;IACzD,IAAIgb,YAAY,GAAGhb,MAAM,CAACvC,eAAe,CAAC+B,WAAW;IACrD,KAAK,IAAI3K,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmmB,YAAY,CAAChmB,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC1C,IAAI2K,WAAW,GAAGwb,YAAY,CAACnmB,CAAC,CAAC;MACjC,IAAIqiB,QAAQ,GAAG,IAAI,CAAC7f,MAAM,CAACuH,QAAQ,KAAK,cAAc,GAAGoB,MAAM,CAACvC,eAAe,CAAC8C,MAAM,GAClFP,MAAM,CAACvC,eAAe,CAACkP,WAAW;MACtC,IAAInN,WAAW,CAACK,IAAI,CAACxF,QAAQ,CAAC,CAAC,KAAK6c,QAAQ,CAAC7c,QAAQ,CAAC,CAAC,EAAE;QACrD,IAAI4gB,QAAQ,GAAG,IAAI,CAAC5jB,MAAM,CAAC6jB,mBAAmB,CAAClc,aAAa,CAACQ,WAAW,CAACM,EAAE,CAACzF,QAAQ,CAAC,CAAC,CAAC;QACvF,IAAI,CAAC/E,iBAAiB,CAAC2lB,QAAQ,CAAC,EAAE;UAC9B,IAAIE,kBAAkB,GAAG3lB,MAAM,CAAC,EAAE,EAAE,EAAE,EAAEylB,QAAQ,CAACxd,eAAe,CAAC+B,WAAW,EAAE,IAAI,CAAC;UACnF,IAAIkU,KAAK,GAAG,KAAK,CAAC;UAClB,KAAK,IAAI/e,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwmB,kBAAkB,CAACnmB,MAAM,EAAEL,CAAC,EAAE,EAAE;YAChD,IAAIymB,IAAI,GAAG,IAAI,CAAC/jB,MAAM,CAACuH,QAAQ,KAAK,cAAc,GAAGqc,QAAQ,CAACxd,eAAe,CAAC8C,MAAM,GAChF0a,QAAQ,CAACxd,eAAe,CAACkP,WAAW;YACxC,IAAIwO,kBAAkB,CAACxmB,CAAC,CAAC,CAACmL,EAAE,CAACzF,QAAQ,CAAC,CAAC,KAAK+gB,IAAI,CAAC/gB,QAAQ,CAAC,CAAC,IACpD8gB,kBAAkB,CAACxmB,CAAC,CAAC,CAACkL,IAAI,CAACxF,QAAQ,CAAC,CAAC,KAAK6c,QAAQ,CAAC7c,QAAQ,CAAC,CAAC,EAAE;cAClEqZ,KAAK,GAAG/e,CAAC;cACT;YACJ;UACJ;UACAwmB,kBAAkB,CAAC9a,MAAM,CAACqT,KAAK,EAAE,CAAC,CAAC;UACnC,IAAI,CAAC2H,uBAAuB,CAACJ,QAAQ,EAAEE,kBAAkB,CAAC;QAC9D;MACJ,CAAC,MACI,IAAI3b,WAAW,CAACM,EAAE,CAACzF,QAAQ,CAAC,CAAC,KAAK6c,QAAQ,CAAC7c,QAAQ,CAAC,CAAC,EAAE;QACxD,IAAIihB,UAAU,GAAG,IAAI,CAACjkB,MAAM,CAAC6jB,mBAAmB,CAAClc,aAAa,CAACQ,WAAW,CAACK,IAAI,CAACxF,QAAQ,CAAC,CAAC,CAAC;QAC3F,IAAI,CAAC/E,iBAAiB,CAACgmB,UAAU,CAAC,EAAE;UAChC,IAAIC,oBAAoB,GAAG/lB,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE8lB,UAAU,CAAC7d,eAAe,CAAC+B,WAAW,EAAE,IAAI,CAAC;UACvF,IAAIkU,KAAK,GAAG,KAAK,CAAC;UAClB,KAAK,IAAI/e,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4mB,oBAAoB,CAACvmB,MAAM,EAAEL,CAAC,EAAE,EAAE;YAClD,IAAI6mB,MAAM,GAAG,IAAI,CAACnkB,MAAM,CAACuH,QAAQ,KAAK,cAAc,GAAG0c,UAAU,CAAC7d,eAAe,CAAC8C,MAAM,GACpF+a,UAAU,CAAC7d,eAAe,CAACkP,WAAW;YAC1C,IAAI4O,oBAAoB,CAAC5mB,CAAC,CAAC,CAACkL,IAAI,CAACxF,QAAQ,CAAC,CAAC,KAAKmhB,MAAM,CAACnhB,QAAQ,CAAC,CAAC,IAC1DkhB,oBAAoB,CAAC5mB,CAAC,CAAC,CAACmL,EAAE,CAACzF,QAAQ,CAAC,CAAC,KAAK6c,QAAQ,CAAC7c,QAAQ,CAAC,CAAC,EAAE;cAClEqZ,KAAK,GAAG/e,CAAC;cACT;YACJ;UACJ;UACA,IAAIqL,MAAM,CAACmG,QAAQ,KAAKmV,UAAU,CAACrG,cAAc,IAC7CjV,MAAM,CAACiV,cAAc,KAAKqG,UAAU,CAACnV,QAAQ,IAAI,IAAI,CAAC9O,MAAM,CAAC0e,UAAU,EAAE;YACzEwF,oBAAoB,CAAClb,MAAM,CAACqT,KAAK,EAAE,CAAC,CAAC;YACrC,IAAI,CAAC2H,uBAAuB,CAACC,UAAU,EAAEC,oBAAoB,CAAC;UAClE;QACJ;MACJ;IACJ;EACJ,CAAC;EACDpkB,IAAI,CAACjC,SAAS,CAACmmB,uBAAuB,GAAG,UAAUrb,MAAM,EAAEyb,eAAe,EAAE;IACxE,IAAI,CAACpkB,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAEqZ,eAAe,EAAEzb,MAAM,CAACvC,eAAe,EAAE,IAAI,CAAC;IACxF,IAAIie,iBAAiB,GAAG,IAAI,CAACrkB,MAAM,CAACe,iBAAiB,CAACujB,yBAAyB,CAAC3b,MAAM,CAAC;IACvF,IAAI,CAAC3I,MAAM,CAAC+K,cAAc,CAAC,kBAAkB,EAAEsZ,iBAAiB,EAAE1b,MAAM,CAACvC,eAAe,EAAE,IAAI,CAAC;IAC/F,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,WAAW,GAAG,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAACC,UAAU,EAAE+iB,iBAAiB,EAAE1b,MAAM,CAAC;IACtG,IAAI,CAAC3I,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAACC,UAAU,EAAE+iB,iBAAiB,EAAE1b,MAAM,CAAC;EAC5F,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACI7I,IAAI,CAACjC,SAAS,CAAC0mB,YAAY,GAAG,UAAUC,SAAS,EAAEC,KAAK,EAAE;IACtD,IAAI,CAAC,IAAI,CAACzkB,MAAM,CAACqH,QAAQ,EAAE;MACvB,IAAIqd,GAAG,GAAG,OAAOF,SAAS,KAAK,QAAQ,GAAGA,SAAS,CAACxhB,QAAQ,CAAC,CAAC,GAAGwhB,SAAS;MAC1E,IAAIG,GAAG,GAAG,OAAOF,KAAK,KAAK,QAAQ,GAAGA,KAAK,CAACzhB,QAAQ,CAAC,CAAC,GAAGyhB,KAAK;MAC9D,IAAI7b,GAAG,GAAG,IAAI,CAAC5I,MAAM,CAAC4I,GAAG;MACzB,IAAI,CAAC3K,iBAAiB,CAACymB,GAAG,CAAC,IAAI,CAACzmB,iBAAiB,CAAC0mB,GAAG,CAAC,EAAE;QACpD,IAAIC,MAAM,GAAGhc,GAAG,CAAClB,OAAO,CAACgd,GAAG,CAAC;QAC7B,IAAIG,MAAM,GAAGjc,GAAG,CAAClB,OAAO,CAACid,GAAG,CAAC;QAC7B;QACA,IAAIC,MAAM,KAAK,CAAC,CAAC,IAAIC,MAAM,GAAG,CAAC,CAAC,EAAE;UAC9B;QACJ;QACA,IAAIC,UAAU,GAAG,IAAI,CAAC9kB,MAAM,CAACwH,QAAQ,CAACod,MAAM,CAAC;QAC7C,IAAI,CAAC3mB,iBAAiB,CAAC6mB,UAAU,CAAC,EAAE;UAChC,IAAI,CAAC9kB,MAAM,CAAC+K,cAAc,CAAC,QAAQ,EAAE0Z,KAAK,EAAEK,UAAU,CAAC1e,eAAe,EAAE,IAAI,CAAC;UAC7E,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE4Z,GAAG,EAAEG,UAAU,CAAC1e,eAAe,EAAE,IAAI,CAAC;UAChF,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE4iB,KAAK,EAAEK,UAAU,EAAE,IAAI,CAAC;UAC9E,IAAI,CAAC9kB,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE4iB,KAAK,EAAEK,UAAU,CAAChb,QAAQ,EAAE,IAAI,CAAC;QAC3F;QACAlB,GAAG,CAACgc,MAAM,CAAC,GAAGD,GAAG;QACjB,IAAIG,UAAU,CAACxS,eAAe,IAAI,IAAI,CAACtS,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAE;UAC/D,IAAI/I,YAAY,GAAG8U,UAAU,CAAC9U,YAAY;UAC1C,KAAK,IAAI+U,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG/U,YAAY,CAACrS,MAAM,EAAEonB,KAAK,EAAE,EAAE;YACtD,IAAIpS,WAAW,GAAG3C,YAAY,CAAC+U,KAAK,CAAC;YACrCpS,WAAW,CAAC,IAAI,CAAC3S,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,GAAG0L,KAAK;YACpD,IAAI,CAACzkB,MAAM,CAACmV,eAAe,CAACkC,cAAc,CAAC,CAAC1E,WAAW,CAAC,CAAC;UAC7D;QACJ;QACA,IAAI,IAAI,CAAC3S,MAAM,CAACqB,UAAU,CAACC,UAAU,IAAI,CAACrD,iBAAiB,CAAC6mB,UAAU,CAAC1e,eAAe,CAAC+B,WAAW,CAAC,EAAE;UACjG,IAAIwb,YAAY,GAAGmB,UAAU,CAAC1e,eAAe,CAAC+B,WAAW;UACzD,IAAI6c,kBAAkB,GAAG,KAAK,CAAC;UAC/B,KAAK,IAAIxnB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmmB,YAAY,CAAChmB,MAAM,EAAEH,CAAC,EAAE,EAAE;YAC1C,IAAI2K,WAAW,GAAGwb,YAAY,CAACnmB,CAAC,CAAC;YACjC,IAAI2K,WAAW,CAACM,EAAE,KAAKic,GAAG,EAAE;cACxBM,kBAAkB,GAAG,IAAI,CAAChlB,MAAM,CAACwH,QAAQ,CAACoB,GAAG,CAAClB,OAAO,CAACS,WAAW,CAACK,IAAI,CAAC,CAAC;YAC5E,CAAC,MACI,IAAIL,WAAW,CAACK,IAAI,KAAKkc,GAAG,EAAE;cAC/BM,kBAAkB,GAAG,IAAI,CAAChlB,MAAM,CAACwH,QAAQ,CAACoB,GAAG,CAAClB,OAAO,CAACS,WAAW,CAACM,EAAE,CAAC,CAAC;YAC1E;YACA,IAAI,CAACwc,2BAA2B,CAACD,kBAAkB,EAAEN,GAAG,EAAEC,GAAG,CAAC;UAClE;QACJ;QACA,IAAI,CAAC3kB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,GAAG,EAAE;QACpC,IAAI,CAAC7P,MAAM,CAACiC,QAAQ,CAAC6Z,OAAO,CAAC,CAAC;MAClC;IACJ;EACJ,CAAC;EACDhc,IAAI,CAACjC,SAAS,CAAConB,2BAA2B,GAAG,UAAUD,kBAAkB,EAAEN,GAAG,EAAEC,GAAG,EAAE;IACjF,IAAI,IAAI,CAAC3kB,MAAM,CAACwH,QAAQ,CAACE,OAAO,CAACsd,kBAAkB,CAAC,GAAG,CAAC,CAAC,EAAE;MACvD,IAAIzc,IAAI,GAAGyc,kBAAkB,CAAC5e,eAAe,CAAC+B,WAAW;MACzD,KAAK,IAAIrC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyC,IAAI,CAAC5K,MAAM,EAAEmI,CAAC,EAAE,EAAE;QAClC,IAAIof,GAAG,GAAG3c,IAAI,CAACzC,CAAC,CAAC;QACjB,IAAIof,GAAG,CAACzc,EAAE,KAAKic,GAAG,EAAE;UAChBQ,GAAG,CAACzc,EAAE,GAAGkc,GAAG;QAChB,CAAC,MACI,IAAIO,GAAG,CAAC1c,IAAI,KAAKkc,GAAG,EAAE;UACvBQ,GAAG,CAAC1c,IAAI,GAAGmc,GAAG;QAClB;MACJ;IACJ;IACA,IAAI,CAACX,uBAAuB,CAACgB,kBAAkB,EAAEA,kBAAkB,CAAC5e,eAAe,CAAC+B,WAAW,CAAC;EACpG,CAAC;EACDrI,IAAI,CAACjC,SAAS,CAAC2gB,kBAAkB,GAAG,UAAU7V,MAAM,EAAE;IAClD,IAAIqH,YAAY,GAAGrH,MAAM,CAACqH,YAAY;IACtC,KAAK,IAAImV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnV,YAAY,CAACrS,MAAM,EAAEwnB,CAAC,EAAE,EAAE;MAC1C,IAAIxS,WAAW,GAAG3C,YAAY,CAACmV,CAAC,CAAC;MACjC,IAAI,IAAI,CAACrkB,kBAAkB,CAAC4G,OAAO,CAACiL,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;QACrD;MACJ;MACA,IAAIxK,WAAW,GAAGwK,WAAW,CAACvM,eAAe,CAAC+B,WAAW;MACzD,IAAI+a,oBAAoB,GAAG,IAAI;MAC/B,IAAInG,UAAU,GAAG,IAAI,CAAC/c,MAAM,CAAC2T,aAAa,CAAChB,WAAW,CAAC5C,UAAU,CAAC;MAClE,IAAI,IAAI,CAAC/P,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAIwV,UAAU,IAAIA,UAAU,CAAC3W,eAAe,CAAC4W,QAAQ,KAC5F,IAAI,CAAChd,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE;QACrDgG,oBAAoB,GAAG,KAAK;MAChC;MACA,IAAI/a,WAAW,IAAIA,WAAW,CAACxK,MAAM,IAAIulB,oBAAoB,EAAE;QAC3D,IAAI,CAACC,yBAAyB,CAACxQ,WAAW,CAAC;MAC/C;MACA,IAAI,CAAC7R,kBAAkB,CAACiF,IAAI,CAAC4M,WAAW,CAAC;MACzC,IAAIA,WAAW,CAACL,eAAe,EAAE;QAC7B,IAAI,CAACkM,kBAAkB,CAAC7L,WAAW,CAAC;MACxC;IACJ;EACJ,CAAC;EACD7S,IAAI,CAACjC,SAAS,CAACghB,oBAAoB,GAAG,UAAUD,eAAe,EAAE;IAC7D,IAAI7Z,UAAU;IACd,IAAI,IAAI,CAAC/E,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,EAAE;MAC/CuG,UAAU,GAAG,IAAI,CAAC/E,MAAM,CAAC+E,UAAU,CAACA,UAAU,CAACsZ,IAAI;IACvD,CAAC,MACI;MACDtZ,UAAU,GAAG,IAAI,CAAC/E,MAAM,CAAC+E,UAAU;IACvC;IACA,IAAI,CAACqgB,UAAU,CAACrgB,UAAU,EAAE6Z,eAAe,CAAC;IAC5C,IAAI,CAAC/d,WAAW,GAAG,KAAK;EAC5B,CAAC;EACDf,IAAI,CAACjC,SAAS,CAACunB,UAAU,GAAG,UAAUC,cAAc,EAAE1c,MAAM,EAAE;IAC1D,KAAK,IAAInL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6nB,cAAc,CAAC1nB,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC5C,IAAI,IAAI,CAACqD,WAAW,EAAE;QAClB;MACJ;MACA,IAAI8H,MAAM,CAACjB,OAAO,CAACrJ,QAAQ,CAAC,IAAI,CAAC2B,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAEwjB,cAAc,CAAC7nB,CAAC,CAAC,CAAC,CAACwF,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1F,IAAIqiB,cAAc,CAAC7nB,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,EAAE;UACjD,IAAI5B,YAAY,GAAGqV,cAAc,CAAC7nB,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC;UAClE,IAAI,CAACwT,UAAU,CAACpV,YAAY,EAAErH,MAAM,CAAC;QACzC;QACAA,MAAM,CAACK,MAAM,CAACL,MAAM,CAACjB,OAAO,CAACrJ,QAAQ,CAAC,IAAI,CAAC2B,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAEwjB,cAAc,CAAC7nB,CAAC,CAAC,CAAC,CAACwF,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACnGqiB,cAAc,CAACrc,MAAM,CAACxL,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAImL,MAAM,CAAChL,MAAM,KAAK,CAAC,EAAE;UACrB,IAAI,CAACkD,WAAW,GAAG,IAAI;UACvB;QACJ;MACJ,CAAC,MACI,IAAIwkB,cAAc,CAAC7nB,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,EAAE;QACtD,IAAI5B,YAAY,GAAGqV,cAAc,CAAC7nB,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC;QAClE,IAAI,CAACwT,UAAU,CAACpV,YAAY,EAAErH,MAAM,CAAC;MACzC;IACJ;EACJ,CAAC;EACD7I,IAAI,CAACjC,SAAS,CAAC4lB,oBAAoB,GAAG,UAAU5e,IAAI,EAAE;IAClD,IAAIN,KAAK,GAAG,IAAI;IAChB,IAAI,CAACvE,MAAM,CAACoX,WAAW,CAAC,CAAC;IACzB,IAAIrB,SAAS,GAAG,CAAC,CAAC;IAClBA,SAAS,CAACxE,WAAW,GAAG,cAAc;IACtCwE,SAAS,CAAC9O,IAAI,GAAGpC,IAAI,CAAC0e,uBAAuB;IAC7CxN,SAAS,CAACI,eAAe,GAAGtR,IAAI,CAAC2e,uBAAuB;IACxDzN,SAAS,CAACO,gBAAgB,GAAGtX,WAAW,CAAC6F,IAAI,CAAC2e,uBAAuB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAACxjB,MAAM,CAAC;IAC/F,IAAI,CAACA,MAAM,CAAC4W,OAAO,CAAC,aAAa,EAAEb,SAAS,EAAE,UAAUc,QAAQ,EAAE;MAC9D,IAAI,CAAC5Y,iBAAiB,CAACsG,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAAC,IAAI1S,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;QAChH3S,KAAK,CAACvE,MAAM,CAACmX,WAAW,CAAC,CAAC;MAC9B,CAAC,MACI;QACD5S,KAAK,CAACvE,MAAM,CAACoX,WAAW,CAAC,CAAC;MAC9B;MACA,IAAIP,QAAQ,CAACvF,MAAM,EAAE;QACjB,IAAI0H,aAAa,GAAGzU,KAAK,CAACzD,kBAAkB;QAC5C,KAAK,IAAImY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,aAAa,CAACrb,MAAM,EAAEsb,CAAC,EAAE,EAAE;UAC3CD,aAAa,CAACC,CAAC,CAAC,CAACC,QAAQ,GAAG,KAAK;QACrC;QACA3U,KAAK,CAACzD,kBAAkB,GAAG,EAAE;QAC7ByD,KAAK,CAACkQ,uBAAuB,CAAC,CAAC;QAC/BlQ,KAAK,CAACvE,MAAM,CAACkgB,kBAAkB,CAAC,KAAK,CAAC;QACtC3b,KAAK,CAACvE,MAAM,CAAC4b,WAAW,CAAC,CAAC;MAC9B,CAAC,MACI;QACD,IAAI3c,YAAY,CAACsF,KAAK,CAACvE,MAAM,CAAC+E,UAAU,CAAC,EAAE;UACvC,IAAIugB,MAAM,GAAG/gB,KAAK,CAACvE,MAAM,CAAC+E,UAAU;UACpC,IAAIR,KAAK,CAACvE,MAAM,CAACulB,QAAQ,EAAE;YACvB1O,QAAQ,CAACV,eAAe,CAACxG,OAAO,CAAC,UAAU6V,cAAc,EAAE;cACvDpmB,WAAW,CAAComB,cAAc,EAAEjhB,KAAK,CAACvE,MAAM,CAAC;YAC7C,CAAC,CAAC;UACN;UACA,IAAIylB,aAAa,GAAG;YAChBC,cAAc,EAAE1mB,WAAW,CAAC6X,QAAQ,CAAC5P,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE1C,KAAK,CAACvE,MAAM,CAAC;YACpEuX,cAAc,EAAEV,QAAQ,CAACP;UAC7B,CAAC;UACD,IAAIqB,OAAO,GAAG2N,MAAM,CAAC3N,OAAO;UAC5B,IAAIgO,OAAO,GAAGphB,KAAK,CAACvE,MAAM,CAACwX,KAAK,YAAY/Y,KAAK,GAAG8F,KAAK,CAACvE,MAAM,CAACwX,KAAK,GAAG,IAAI/Y,KAAK,CAAC,CAAC;UACpF,IAAI,EAAEkZ,OAAO,YAAYhZ,aAAa,IAAIgZ,OAAO,YAAYjZ,YAAY,CAAC,IAAI4mB,MAAM,CAACvgB,UAAU,CAAC6S,QAAQ,EAAE;YACtG,IAAIH,IAAI,GAAG6N,MAAM,CAACzN,WAAW,CAAC4N,aAAa,EAAElhB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE,IAAI,EAAE8jB,OAAO,CAAC;YACvFlO,IAAI,CAACM,IAAI,CAAC,YAAY;cAAE,OAAOxT,KAAK,CAACqhB,aAAa,CAAC/gB,IAAI,CAAC;YAAE,CAAC,CAAC,CACvDqT,KAAK,CAAC,UAAUF,CAAC,EAAE;cAAE,OAAOzT,KAAK,CAAC4T,SAAS,CAACH,CAAC,EAAEnT,IAAI,CAAC;YAAE,CAAC,CAAC;UACjE,CAAC,MACI;YACD,IAAI6gB,cAAc,GAAG,gBAAgB;YACrC,IAAIG,UAAU,GAAG,IAAI;YACrB,KAAK,IAAIroB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGioB,aAAa,CAACC,cAAc,CAAC,CAAC/nB,MAAM,EAAEH,CAAC,EAAE,EAAE;cAC3DqoB,UAAU,GAAGP,MAAM,CAACQ,MAAM,CAACvhB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE4jB,aAAa,CAACC,cAAc,CAAC,CAACloB,CAAC,CAAC,EAAE,IAAI,EAAEmoB,OAAO,CAAC;YAC3G;YACAE,UAAU,CAAC9N,IAAI,CAAC,YAAY;cACxB,IAAIR,cAAc,GAAG,gBAAgB;cACrC,IAAIwO,OAAO,GAAG,SAAAA,CAAUvoB,CAAC,EAAE;gBACvB,IAAIioB,aAAa,CAAC,gBAAgB,CAAC,CAACO,IAAI,CAAC,UAAUrd,MAAM,EAAE;kBAAE,OAAOA,MAAM,CAACpE,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,KAAK4jB,aAAa,CAAClO,cAAc,CAAC,CAAC/Z,CAAC,CAAC,CAAC0L,MAAM;gBAAE,CAAC,CAAC,EAAE;kBACpJuc,aAAa,CAAClO,cAAc,CAAC,CAACvO,MAAM,CAACxL,CAAC,EAAE,CAAC,CAAC;gBAC9C;cACJ,CAAC;cACD,KAAK,IAAIA,CAAC,GAAGioB,aAAa,CAAClO,cAAc,CAAC,CAAC5Z,MAAM,GAAG,CAAC,EAAEH,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;gBAChEuoB,OAAO,CAACvoB,CAAC,CAAC;cACd;cACA,IAAIyoB,UAAU,GAAGX,MAAM,CAACxN,MAAM,CAACvT,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE4jB,aAAa,CAAClO,cAAc,CAAC,EAAE,IAAI,EAAEoO,OAAO,CAAC;cACxGM,UAAU,CAAClO,IAAI,CAAC,YAAY;gBAAE,OAAOxT,KAAK,CAACqhB,aAAa,CAAC/gB,IAAI,CAAC;cAAE,CAAC,CAAC,CAC7DqT,KAAK,CAAC,UAAUF,CAAC,EAAE;gBAAE,OAAOzT,KAAK,CAAC4T,SAAS,CAACH,CAAC,EAAEnT,IAAI,CAAC;cAAE,CAAC,CAAC;YACjE,CAAC,CAAC,CAACqT,KAAK,CAAC,UAAUF,CAAC,EAAE;cAAE,OAAOzT,KAAK,CAAC4T,SAAS,CAACH,CAAC,EAAEnT,IAAI,CAAC;YAAE,CAAC,CAAC;UAC/D;QACJ,CAAC,MACI;UACDN,KAAK,CAACqhB,aAAa,CAAC/gB,IAAI,CAAC;QAC7B;MACJ;IACJ,CAAC,CAAC;EACN,CAAC;EACD/E,IAAI,CAACjC,SAAS,CAAC+nB,aAAa,GAAG,UAAU/gB,IAAI,EAAE;IAC3C,IAAIN,KAAK,GAAG,IAAI;IAChB,IAAIiD,QAAQ,GAAG,IAAI,CAACxH,MAAM,CAACwH,QAAQ;IACnC,IAAIuG,WAAW,GAAG,IAAI,CAAC/N,MAAM,CAAC6G,eAAe;IAC7C,IAAI6e,cAAc,GAAG,EAAE;IACvB,KAAK,IAAIloB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqH,IAAI,CAAC0e,uBAAuB,CAAC5lB,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC1D,IAAI,IAAI,CAACwC,MAAM,CAACuH,QAAQ,KAAK,aAAa,EAAE;QACxC,IAAIoB,MAAM,GAAG,IAAI,CAAC3I,MAAM,CAAC2H,aAAa,CAAC9C,IAAI,CAAC0e,uBAAuB,CAAC/lB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM,CAAC;QAC9F,IAAI,CAACjL,iBAAiB,CAAC0K,MAAM,CAAC,EAAE;UAC5B+c,cAAc,CAAC3f,IAAI,CAAC4C,MAAM,CAAC;QAC/B;MACJ,CAAC,MACI;QACD,IAAI9G,EAAE,GAAG,KAAK,CAAC;QACf,IAAIgD,IAAI,CAAC0e,uBAAuB,CAAC/lB,CAAC,CAAC,CAAC8U,eAAe,EAAE;UACjDzQ,EAAE,GAAG,GAAG,GAAGgD,IAAI,CAAC0e,uBAAuB,CAAC/lB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM;QACrE,CAAC,MACI;UACDrH,EAAE,GAAG,GAAG,GAAGgD,IAAI,CAAC0e,uBAAuB,CAAC/lB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM;QACrE;QACA,IAAI,IAAI,CAAClJ,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;UACjF6d,cAAc,CAAC3f,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAACiV,iBAAiB,CAACpQ,IAAI,CAAC0e,uBAAuB,CAAC/lB,CAAC,CAAC,CAACsR,QAAQ,CAAC,CAAC;QAChG,CAAC,MACI;UACD4W,cAAc,CAAC3f,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC7F,EAAE,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACzF;MACJ;IACJ;IACA,IAAI4b,eAAe,GAAG,EAAE;IACxB,IAAI8G,cAAc,CAAC/nB,MAAM,GAAG,CAAC,EAAE;MAC3B,IAAI2e,WAAW,GAAG,KAAK,CAAC;MACxB,IAAI3T,MAAM,GAAG,KAAK,CAAC;MACnB,IAAI,IAAI,CAAC3I,MAAM,CAACqY,oBAAoB,EAAE;QAClCiE,WAAW,GAAG,IAAI,CAACtc,MAAM,CAACwH,QAAQ,CAACE,OAAO,CAACge,cAAc,CAACA,cAAc,CAAC/nB,MAAM,GAAG,CAAC,CAAC,CAAC;QACrF,IAAI,CAACqC,MAAM,CAACkmB,sBAAsB,GAAG,IAAI,CAAClmB,MAAM,CAACmmB,gBAAgB,GAAG7J,WAAW;QAC/E3T,MAAM,GAAG,IAAI,CAAC3I,MAAM,CAACwH,QAAQ,CAAC,IAAI,CAACxH,MAAM,CAACmmB,gBAAgB,GAAG,CAAC,CAAC;QAC/D;QACA,IAAI,CAAC,IAAI,CAACnmB,MAAM,CAAComB,aAAa,EAAE;UAC5B;UACA,IAAI,CAACpmB,MAAM,CAACkmB,sBAAsB,GAAI5J,WAAW,IAAIoJ,cAAc,CAAC/nB,MAAM,GAAG,CAAC,CAAE;QACpF;MACJ,CAAC,MACI;QACD2e,WAAW,GAAG,IAAI,CAACtc,MAAM,CAAC6G,eAAe,CAACa,OAAO,CAACge,cAAc,CAACA,cAAc,CAAC/nB,MAAM,GAAG,CAAC,CAAC,CAAC;QAC5F,IAAI,CAACqC,MAAM,CAACkmB,sBAAsB,GAAG,IAAI,CAAClmB,MAAM,CAACmmB,gBAAgB,GAAG7J,WAAW;QAC/E3T,MAAM,GAAG,IAAI,CAAC3I,MAAM,CAAC6G,eAAe,CAAC,IAAI,CAAC7G,MAAM,CAACmmB,gBAAgB,GAAG,CAAC,CAAC;MAC1E;MACA,IAAI,CAACloB,iBAAiB,CAAC0K,MAAM,CAAC,EAAE;QAC5B,IAAI,CAAC3I,MAAM,CAACqmB,gBAAgB,GAAG1d,MAAM;MACzC,CAAC,MACI;QACD,IAAI2d,eAAe,GAAG,IAAI,CAACtmB,MAAM,CAACmmB,gBAAgB,GAAG,CAAC;QACtD,IAAIG,eAAe,IAAI,CAAC,EAAE;UACtB,IAAI,CAACtmB,MAAM,CAACqmB,gBAAgB,GAAG,IAAI,CAACrmB,MAAM,CAACqY,oBAAoB,GAC3D,IAAI,CAACrY,MAAM,CAACwH,QAAQ,CAAC8e,eAAe,CAAC,GAAG,IAAI,CAACtmB,MAAM,CAAC6G,eAAe,CAACyf,eAAe,CAAC;QAC5F;MACJ;IACJ;IACA,IAAI,CAAChmB,aAAa,GAAGolB,cAAc;IACnC,KAAK,IAAIloB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkoB,cAAc,CAAC/nB,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC5C,IAAIykB,YAAY,GAAGyD,cAAc,CAACloB,CAAC,CAAC;MACpC,IAAI+oB,YAAY,GAAG,KAAK,CAAC;MACzB,IAAIC,SAAS,GAAG,KAAK,CAAC;MACtB,IAAI,IAAI,CAACxmB,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;QACzC,IAAI0a,YAAY,CAAC3P,eAAe,EAAE;UAC9BiU,YAAY,GAAG,IAAI,CAACvmB,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,GAAG,GAAGua,YAAY,CAAC7b,eAAe,CAAC8C,MAAM,CAAClG,QAAQ,CAAC,CAAC,CAAC;UAChGwjB,SAAS,GAAG,IAAI,CAACxmB,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,GAAG,GAAGua,YAAY,CAAC7b,eAAe,CAAC8C,MAAM,CAAClG,QAAQ,CAAC,CAAC,CAAC;QACjG,CAAC,MACI;UACDujB,YAAY,GAAG,IAAI,CAACvmB,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,GAAG,GAAGua,YAAY,CAAC7b,eAAe,CAAC8C,MAAM,CAAClG,QAAQ,CAAC,CAAC,CAAC;UAChGwjB,SAAS,GAAG,IAAI,CAACxmB,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,GAAG,GAAGua,YAAY,CAAC7b,eAAe,CAAC8C,MAAM,CAAClG,QAAQ,CAAC,CAAC,CAAC;QACjG;MACJ,CAAC,MACI;QACDujB,YAAY,GAAGxY,WAAW,CAACrG,OAAO,CAACua,YAAY,CAAC;QAChDuE,SAAS,GAAGhf,QAAQ,CAACE,OAAO,CAACua,YAAY,CAAC;MAC9C;MACA,IAAIwE,mBAAmB,GAAG,IAAI,CAACzmB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAACnI,OAAO,CAACua,YAAY,CAAC;MAC/E,IAAIyE,QAAQ,GAAGroB,QAAQ,CAAC,yBAAyB,EAAE,IAAI,CAAC2B,MAAM,CAAC;MAC/D,IAAI2mB,SAAS,GAAGD,QAAQ,CAAChf,OAAO,CAACua,YAAY,CAACnY,QAAQ,CAAC;MACvD,IAAI2U,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI8H,YAAY,KAAK,CAAC,CAAC,EAAE;QACrBxY,WAAW,CAAC/E,MAAM,CAACud,YAAY,EAAE,CAAC,CAAC;MACvC;MACA,IAAIC,SAAS,KAAK,CAAC,CAAC,EAAE;QAClBhf,QAAQ,CAACwB,MAAM,CAACwd,SAAS,EAAE,CAAC,CAAC;MACjC;MACA,IAAIG,SAAS,KAAK,CAAC,CAAC,EAAE;QAClBD,QAAQ,CAAC1d,MAAM,CAAC2d,SAAS,EAAE,CAAC,CAAC;MACjC;MACA,IAAI,CAAC1oB,iBAAiB,CAACgkB,YAAY,CAAC,EAAE;QAClCrD,eAAe,CAAC7Y,IAAI,CAACkc,YAAY,CAAC7b,eAAe,CAAC8C,MAAM,CAAClG,QAAQ,CAAC,CAAC,CAAC;QACpE,IAAIwjB,SAAS,KAAK,CAAC,CAAC,EAAE;UAClB,IAAI,CAACxmB,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACwd,SAAS,EAAE,CAAC,CAAC;UACpC,IAAI,IAAI,CAACxmB,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;YACzC,IAAI,CAACvH,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACuB,MAAM,CAACwd,SAAS,EAAE,CAAC,CAAC;YAC7C,IAAI,CAACvE,YAAY,CAAC3P,eAAe,EAAE;cAC/B2P,YAAY,CAAC7b,eAAe,CAACzD,YAAY,GAAG,IAAI;cAChD,OAAOsf,YAAY,CAAC7b,eAAe,CAACwgB,aAAa;cACjD3E,YAAY,CAAC,IAAI,CAACjiB,MAAM,CAACqB,UAAU,CAACsB,YAAY,CAAC,GAAG,IAAI;cACxDsf,YAAY,CAAC7b,eAAe,CAACiT,mBAAmB,GAAG,EAAE;cACrD,OAAO4I,YAAY,CAACnY,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACsB,YAAY,CAAC;YACrE;UACJ;QACJ;QACA,IAAIsf,YAAY,CAACnE,KAAK,KAAK,CAAC,IAAI2I,mBAAmB,KAAK,CAAC,CAAC,EAAE;UACxD,IAAI,CAACzmB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAAC7G,MAAM,CAACyd,mBAAmB,EAAE,CAAC,CAAC;QAClE;QACA,IAAIxE,YAAY,CAAClS,UAAU,EAAE;UACzB,IAAIA,UAAU,GAAG,IAAI,CAAC/P,MAAM,CAAC2T,aAAa,CAACsO,YAAY,CAAClS,UAAU,CAAC;UACnE,IAAIA,UAAU,EAAE;YACZ,IAAIC,YAAY,GAAGD,UAAU,CAACC,YAAY;YAC1CyO,UAAU,GAAGzO,YAAY,CAACtI,OAAO,CAACua,YAAY,CAAC;YAC/C,IAAIxD,UAAU,KAAK,CAAC,CAAC,EAAE;cACnBzO,YAAY,CAAChH,MAAM,CAACyV,UAAU,EAAE,CAAC,CAAC;YACtC;YACA,IAAI,CAACzO,YAAY,CAACrS,MAAM,EAAE;cACtB,IAAI,CAACqC,MAAM,CAAC+K,cAAc,CAAC,iBAAiB,EAAE,KAAK,EAAEgF,UAAU,CAAC;YACpE;UACJ;QACJ;QACA,IAAI,CAACgO,sBAAsB,CAACkE,YAAY,EAAE,QAAQ,CAAC;MACvD;IACJ;IACA,IAAIrD,eAAe,CAACjhB,MAAM,GAAG,CAAC,EAAE;MAC5B,IAAI,CAACkhB,oBAAoB,CAACD,eAAe,CAAC;IAC9C;IACA,IAAI7I,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,CAAC/V,MAAM,CAACkb,8BAA8B,GAAG,EAAE;IAC/C,IAAI,CAAClb,MAAM,CAACmb,gBAAgB,GAAG,EAAE;IACjC,IAAI,CAACnb,MAAM,CAACe,iBAAiB,CAAC8a,8BAA8B,CAAC,IAAI,CAAC7b,MAAM,CAACwH,QAAQ,CAAC;IAClF,IAAI,CAACxH,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,GAAG,EAAE;IACpC,IAAI,CAACgX,OAAO,GAAG,KAAK;IACpB,IAAI,CAAC7mB,MAAM,CAACiC,QAAQ,CAACsE,UAAU,CAAC,WAAW,CAAC,GAAG,KAAK;IACpD,IAAI,CAACvG,MAAM,CAACiC,QAAQ,CAAC6Z,OAAO,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC9b,MAAM,CAACkH,mBAAmB,EAAE;MACjC,IAAI,CAAC4f,4BAA4B,CAAC,CAAC;IACvC;IACA;IACA/Q,SAAS,CAACxE,WAAW,GAAG,QAAQ;IAChCwE,SAAS,CAAC9O,IAAI,GAAGpC,IAAI,CAAC0e,uBAAuB;IAC7CxN,SAAS,CAACI,eAAe,GAAGtR,IAAI,CAAC2e,uBAAuB;IACxDzN,SAAS,CAACO,gBAAgB,GAAGtX,WAAW,CAAC6F,IAAI,CAAC2e,uBAAuB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAACxjB,MAAM,CAAC;IAC/F5B,QAAQ,CAAC,QAAQ,EAAEyG,IAAI,CAACqF,MAAM,EAAE6L,SAAS,CAAC;IAC1C,IAAI,CAAC/V,MAAM,CAAC0e,UAAU,GAAG,KAAK;IAC9B,IAAI,IAAI,CAAC1e,MAAM,CAACuH,QAAQ,KAAK,cAAc,KAAK,CAAC,IAAI,CAACvH,MAAM,CAAC6H,cAAc,IAAK,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,KAAK,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAK,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,QAAS,CAAE,CAAC,EAAE;MAC/R,IAAIkf,2BAA2B,GAAGhR,SAAS,CAAC9O,IAAI,CAACqB,MAAM,CAAC,UAAUrB,IAAI,EAAE;QACpE,OAAO,CAACA,IAAI,CAACqL,eAAe;MAChC,CAAC,CAAC;MACF,IAAI0U,OAAO,GAAG,SAAAA,CAAUxpB,CAAC,EAAE;QACvB,IAAIypB,cAAc,GAAGC,MAAM,CAAClnB,MAAM,CAACwH,QAAQ,CAACc,MAAM,CAAC,UAAUrB,IAAI,EAAE;UAC/D,OAAOA,IAAI,CAACb,eAAe,CAAC4W,QAAQ,KAAKzY,KAAK,CAACvE,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC;QACjG,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,IAAIiK,WAAW,GAAG,EAAE;QACpB,IAAIF,cAAc,EAAE;UAChBE,WAAW,GAAGF,cAAc,CAACjX,YAAY,CAAC1H,MAAM,CAAC,UAAUrB,IAAI,EAAE;YAC7D,OAAOA,IAAI,CAACb,eAAe,CAAC8C,MAAM,KAAK6d,2BAA2B,CAACvpB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM;UAChG,CAAC,CAAC;QACN;QACA,IAAI6T,UAAU,GAAGmK,MAAM,CAAClnB,MAAM,CAAC2T,aAAa,CAACoT,2BAA2B,CAACvpB,CAAC,CAAC,CAACuS,UAAU,CAAC;QACvF,IAAIgN,UAAU,IAAIA,UAAU,CAAC3W,eAAe,CAAC4W,QAAQ,KACjDkK,MAAM,CAAClnB,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,IAAIiK,WAAW,CAACxpB,MAAM,KAAK,CAAC,EAAE;UACnFupB,MAAM,CAAC/J,uBAAuB,CAAC4J,2BAA2B,CAACvpB,CAAC,CAAC,CAAC;QAClE,CAAC,MACI,IAAI,CAACuf,UAAU,KAAK,CAACoK,WAAW,IAAIA,WAAW,CAACxpB,MAAM,KAAK,CAAC,CAAC,EAAE;UAChEupB,MAAM,CAAC/J,uBAAuB,CAAC4J,2BAA2B,CAACvpB,CAAC,CAAC,CAAC;QAClE;QACAypB,cAAc,GAAGC,MAAM,CAAClnB,MAAM,CAACwH,QAAQ,CAACc,MAAM,CAAC,UAAUrB,IAAI,EAAE;UAC3D,OAAOA,IAAI,CAACb,eAAe,CAAC4W,QAAQ,KAAKzY,KAAK,CAACvE,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC;QACjG,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,IAAInN,UAAU,GAAGmX,MAAM,CAAClnB,MAAM,CAAC6G,eAAe,CAACyB,MAAM,CAAC,UAAUrB,IAAI,EAAE;UAClE,IAAIA,IAAI,CAACb,eAAe,CAAC8C,MAAM,KAAK6d,2BAA2B,CAACvpB,CAAC,CAAC,CAAC4I,eAAe,CAAC8C,MAAM,IACpF,CAACjC,IAAI,CAACqL,eAAe,IAAIrL,IAAI,CAAC8I,UAAW,IACvCkX,cAAc,CAACnY,QAAQ,KAAK7H,IAAI,CAAC8I,UAAU,CAACjB,QAAQ,EAAE;YACzD,OAAO7H,IAAI;UACf,CAAC,MACI;YACD,OAAO,IAAI;UACf;QACJ,CAAC,CAAC;QACF,IAAI8I,UAAU,CAAC,CAAC,CAAC,EAAE;UACfmX,MAAM,CAAClnB,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACzC,UAAU,CAAC,CAAC,CAAC,CAAC;QAChE;MACJ,CAAC;MACD,IAAImX,MAAM,GAAG,IAAI;MACjB,KAAK,IAAI1pB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGupB,2BAA2B,CAACppB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACzDwpB,OAAO,CAACxpB,CAAC,CAAC;MACd;IACJ;IACA,IAAI,CAACwC,MAAM,CAAC4W,OAAO,CAAC,gBAAgB,EAAEb,SAAS,CAAC;IAChD,IAAI,CAACjV,kBAAkB,GAAG,EAAE;IAC5B,IAAI,CAACd,MAAM,CAACkgB,kBAAkB,CAAC,KAAK,CAAC;IACrC,IAAI,CAACjiB,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACiX,gBAAgB,CAAC,IAAI,IAAI,CAACjX,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;MAC9G,IAAI,CAAClX,MAAM,CAAC2b,WAAW,CAAC,CAAC;IAC7B,CAAC,MACI;MACD,IAAI,CAAC3b,MAAM,CAAC4b,WAAW,CAAC,CAAC;IAC7B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI9b,IAAI,CAACjC,SAAS,CAACupB,YAAY,GAAG,YAAY;IACtC,IAAIxe,GAAG,GAAG,IAAI,CAAC5I,MAAM,CAACuH,QAAQ,KAAK,cAAc,GAAG,IAAI,CAACvH,MAAM,CAACyH,UAAU,CAAC,CAAC,GAAG,IAAI,CAACzH,MAAM,CAAC4I,GAAG;IAC9F,IAAIye,KAAK,GAAGze,GAAG,CAACjL,MAAM;IACtB,IAAI2pB,SAAS,GAAGD,KAAK,GAAG,CAAC;IACzB,IAAI,IAAI,CAACrnB,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;MACzC,IAAIqB,GAAG,CAAClB,OAAO,CAAC,GAAG,GAAG4f,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI1e,GAAG,CAAClB,OAAO,CAAC,GAAG,GAAG4f,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5EA,SAAS,GAAGA,SAAS,GAAG,CAAC;QACzB,IAAI1e,GAAG,CAAClB,OAAO,CAAC,GAAG,GAAG4f,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI1e,GAAG,CAAClB,OAAO,CAAC,GAAG,GAAG4f,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;UAC5E,GAAG;YACCA,SAAS,GAAGA,SAAS,GAAG,CAAC;UAC7B,CAAC,QAAQ1e,GAAG,CAAClB,OAAO,CAAC,GAAG,GAAG4f,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI1e,GAAG,CAAClB,OAAO,CAAC,GAAG,GAAG4f,SAAS,CAAC,KAAK,CAAC,CAAC;QACvF;MACJ;IACJ,CAAC,MACI;MACD,IAAI1e,GAAG,CAAClB,OAAO,CAAC4f,SAAS,CAACtkB,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1CskB,SAAS,GAAGA,SAAS,GAAG,CAAC;QACzB,IAAI1e,GAAG,CAAClB,OAAO,CAAC4f,SAAS,CAACtkB,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;UAC1C,GAAG;YACCskB,SAAS,GAAGA,SAAS,GAAG,CAAC;UAC7B,CAAC,QAAQ1e,GAAG,CAAClB,OAAO,CAAC4f,SAAS,CAACtkB,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QACrD;MACJ;IACJ;IACA,IAAI,IAAI,CAAChD,MAAM,CAACmM,aAAa,CAAC,IAAI,CAACnM,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACwC,QAAQ,KAAK,YAAY,EAAE;MAChF,OAAOijB,SAAS,GAAGA,SAAS,CAACtkB,QAAQ,CAAC,CAAC;IAC3C,CAAC,MACI;MACD,OAAOskB,SAAS;IACpB;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI;EACAxnB,IAAI,CAACjC,SAAS,CAAC0pB,qBAAqB,GAAG,UAAUC,GAAG,EAAEC,WAAW,EAAE;IAC/D,IAAIC,SAAS,GAAG,IAAI,CAAC1nB,MAAM,CAACqB,UAAU;IACtC,IAAIQ,EAAE;IACN,IAAI8lB,WAAW;IACf,IAAI/e,GAAG,GAAG,IAAI,CAAC5I,MAAM,CAAC4I,GAAG;IACzB;IACA,IAAI4e,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC,EAAE;MACnB,IAAI+G,GAAG,CAAClB,OAAO,CAAC8f,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;QAClDwkB,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC,GAAG,IAAI;MAC5B,CAAC,MACI;QACD,IAAI,OAAQ2lB,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAE,KAAK,QAAQ,EAAE;UACzC8lB,WAAW,GAAGH,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC;QACnC,CAAC,MACI;UACD8lB,WAAW,GAAG5kB,QAAQ,CAACykB,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC,EAAE,EAAE,CAAC;QACjD;QACA2lB,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC,GAAG5D,iBAAiB,CAAC0pB,WAAW,CAAC,GAAG,IAAI,GAAGA,WAAW;MAC3E;IACJ;IACA,IAAI,CAACH,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC,EAAE;MACpBA,EAAE,GAAG,IAAI,CAACulB,YAAY,CAAC,CAAC;MACxBI,GAAG,CAACE,SAAS,CAAC7lB,EAAE,CAAC,GAAGA,EAAE;IAC1B;IACA,IAAI,CAAC,IAAI,CAAC7B,MAAM,CAAC4K,qBAAqB,IAAI,CAAC4c,GAAG,CAACE,SAAS,CAAC/d,SAAS,CAAC,EAAE;MACjE6d,GAAG,CAACE,SAAS,CAAC/d,SAAS,CAAC,GAAG,IAAI,CAAC3J,MAAM,CAAC4nB,gBAAgB;IAC3D;IACA,IAAI,CAAC,IAAI,CAAC5nB,MAAM,CAAC4K,qBAAqB,IAAI8c,SAAS,CAACte,QAAQ,IAAInL,iBAAiB,CAACupB,GAAG,CAACE,SAAS,CAACte,QAAQ,CAAC,CAAC,EAAE;MACxG,IAAI,CAACoe,GAAG,CAACE,SAAS,CAAC9d,OAAO,CAAC,EAAE;QACzB4d,GAAG,CAACE,SAAS,CAACte,QAAQ,CAAC,GAAG,GAAG;MACjC;IACJ;IACA,IAAIse,SAAS,CAAChlB,QAAQ,EAAE;MACpB8kB,GAAG,CAACE,SAAS,CAAChlB,QAAQ,CAAC,GAAG8kB,GAAG,CAACE,SAAS,CAAChlB,QAAQ,CAAC,GAAI8kB,GAAG,CAACE,SAAS,CAAChlB,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG8kB,GAAG,CAACE,SAAS,CAAChlB,QAAQ,CAAC,GAAI,CAAC;IAC3H;IACA,IAAI,CAAC,IAAI,CAAC1C,MAAM,CAAC4K,qBAAqB,IAAI,CAAC4c,GAAG,CAACE,SAAS,CAAC9d,OAAO,CAAC,IAAI8d,SAAS,CAAC9d,OAAO,EAAE;MACpF,IAAI,CAAC4d,GAAG,CAACE,SAAS,CAACte,QAAQ,CAAC,EAAE;QAC1B,IAAIO,SAAS,GAAG,IAAI,CAAC3J,MAAM,CAACqJ,aAAa,CAAC+C,iBAAiB,CAAC,IAAI,CAACpM,MAAM,CAAC4nB,gBAAgB,CAAC;QACzF,IAAI,CAAC3pB,iBAAiB,CAAC0L,SAAS,CAAC,EAAE;UAC/BA,SAAS,CAACke,OAAO,CAACle,SAAS,CAACme,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;UAC1CN,GAAG,CAACE,SAAS,CAAC9d,OAAO,CAAC,GAAG,IAAI,CAAC5J,MAAM,CAAC+nB,eAAe,CAACpe,SAAS,EAAE,IAAI,CAAC3J,MAAM,CAACgoB,aAAa,CAAC,CAAC,CAAC;QAChG;MACJ;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIloB,IAAI,CAACjC,SAAS,CAACoqB,8BAA8B,GAAG,UAAUT,GAAG,EAAE1J,KAAK,EAAE2J,WAAW,EAAE1X,UAAU,EAAEnJ,QAAQ,EAAE;IACrG,IAAI4W,YAAY,GAAG,IAAI,CAACxd,MAAM,CAACqJ,aAAa,CAACoU,YAAY,CAAC+J,GAAG,EAAE1J,KAAK,CAAC;IACrE,QAAQ2J,WAAW;MACf,KAAK,OAAO;QACRjK,YAAY,CAACnB,KAAK,GAAGzV,QAAQ;QAC7B;MACJ,KAAK,OAAO;MACZ,KAAK,OAAO;QACR4W,YAAY,CAACnB,KAAK,GAAGzV,QAAQ,GAAG,CAAC;QACjC;MACJ,KAAK,QAAQ;QACT4W,YAAY,CAACnB,KAAK,GAAG,IAAI,CAACrc,MAAM,CAACqY,oBAAoB,GAAG,IAAI,CAACrY,MAAM,CAACwH,QAAQ,CAAC7J,MAAM,GAAG,IAAI,CAACqC,MAAM,CAAC6G,eAAe,CAAClJ,MAAM;QACxH;MACJ,KAAK,KAAK;QACN6f,YAAY,CAACnB,KAAK,GAAG,CAAC;QACtB;MACJ;QACI;IACR;IACA,IAAI,CAACpe,iBAAiB,CAAC8R,UAAU,CAAC,EAAE;MAChC,IAAI,CAAC/P,MAAM,CAAC+K,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAAC4U,cAAc,CAAClO,UAAU,CAAC,EAAEyN,YAAY,CAAC;MAC5G,IAAI0K,MAAM,GAAG1K,YAAY,CAACzN,UAAU,GAAGyN,YAAY,CAACzN,UAAU,CAACsM,KAAK,GAAG,IAAI;MAC3E,IAAI,CAACrc,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAEmd,MAAM,EAAE1K,YAAY,CAAC;MAC/D,IAAIU,YAAY,GAAGV,YAAY,CAACzN,UAAU,GAAGyN,YAAY,CAACzN,UAAU,CAACjB,QAAQ,GAAG,IAAI;MACpF,IAAI,CAAC9O,MAAM,CAAC+K,cAAc,CAAC,gBAAgB,EAAEmT,YAAY,EAAEV,YAAY,CAAC;MACxE,IAAI,CAACvf,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,IAC7C,CAAC5D,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,IAAIyE,YAAY,CAACzN,UAAU,EAAE;QAChF,IAAI,IAAI,CAAC/P,MAAM,CAACuH,QAAQ,KAAK,aAAa,EAAE;UACxC,IAAI,CAACvH,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAEyE,YAAY,CAACzN,UAAU,CAAC7G,MAAM,EAAEsU,YAAY,CAAC1T,QAAQ,EAAE,IAAI,CAAC;QAC5H;QACA,IAAI,CAAC9J,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAEyS,YAAY,CAACzN,UAAU,CAAC7G,MAAM,EAAEsU,YAAY,CAACpX,eAAe,EAAE,IAAI,CAAC;QAC1G,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAEyE,YAAY,CAACzN,UAAU,CAAC7G,MAAM,EAAEsU,YAAY,EAAE,IAAI,CAAC;MACnH;IACJ;IACA,IAAI,CAACxd,MAAM,CAACiI,QAAQ,GAAG,IAAI;IAC3B,IAAI,IAAI,CAACjI,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;MACjF,IAAI2f,GAAG,CAAC,iBAAiB,CAAC,EAAE;QACxB,IAAI5F,YAAY,GAAG,EAAE;QACrB,IAAIuG,aAAa,GAAG,IAAI,CAACnoB,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,uBAAuB,CAAC;QACxF,KAAK,IAAIrK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgqB,GAAG,CAAC,cAAc,CAAC,CAAC7pB,MAAM,EAAEH,CAAC,EAAE,EAAE;UACjD,IAAI,CAACmkB,GAAG,CAAC6F,GAAG,CAAC,cAAc,CAAC,CAAChqB,CAAC,CAAC,EAAEokB,YAAY,CAAC;QAClD;QACA,KAAK,IAAI9b,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqiB,aAAa,CAACxqB,MAAM,EAAEmI,CAAC,EAAE,EAAE;UAC3C,IAAI0hB,GAAG,CAAC,iBAAiB,CAAC,CAACte,MAAM,KAAKif,aAAa,CAACriB,CAAC,CAAC,CAAC,MAAM,CAAC,CAACM,eAAe,CAAC8C,MAAM,EAAE;YACnF,IAAIif,aAAa,CAACriB,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE;cAC1C2hB,WAAW,GAAG,OAAO;YACzB,CAAC,MACI,IAAIU,aAAa,CAACriB,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE;cAC/C2hB,WAAW,GAAG,OAAO;YACzB,CAAC,MACI,IAAIU,aAAa,CAACriB,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE;cAC/C2hB,WAAW,GAAG,OAAO;YACzB;YACA,IAAI,CAACW,6BAA6B,CAAC5K,YAAY,EAAEiK,WAAW,EAAE1X,UAAU,CAAC;YACzE,KAAK,IAAIvS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGokB,YAAY,CAACjkB,MAAM,EAAEH,CAAC,EAAE,EAAE;cAC1C,IAAI,IAAI,CAACwC,MAAM,CAACuH,QAAQ,KAAK,aAAa,EAAE;gBACxC,IAAIqa,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAAC7G,MAAM,KAAKsU,YAAY,CAACpX,eAAe,CAAC8C,MAAM,EAAE;kBAC3E0Y,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACsM,KAAK,GAAGmB,YAAY,CAACnB,KAAK;kBACrDuF,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAAC7G,MAAM,GAAGsU,YAAY,CAACpX,eAAe,CAAC8C,MAAM;kBACvE0Y,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACjB,QAAQ,GAAG0O,YAAY,CAACpX,eAAe,CAAC0I,QAAQ;kBAC3E8S,YAAY,CAACpkB,CAAC,CAAC,CAACogB,cAAc,GAAGJ,YAAY,CAACpX,eAAe,CAAC0I,QAAQ;gBAC1E;cACJ,CAAC,MACI;gBACD8S,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACsM,KAAK,GAAGmB,YAAY,CAACnB,KAAK;gBACrDuF,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAAC7G,MAAM,GAAGsU,YAAY,CAACpX,eAAe,CAACkP,WAAW;gBAC5EsM,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACjB,QAAQ,GAAG0O,YAAY,CAACpX,eAAe,CAAC0I,QAAQ;gBAC3E8S,YAAY,CAACpkB,CAAC,CAAC,CAACogB,cAAc,GAAGJ,YAAY,CAACpX,eAAe,CAAC0I,QAAQ;cAC1E;YACJ;YACA;UACJ;QACJ;QACA,IAAI,CAACuZ,kBAAkB,GAAG7K,YAAY;QACtCA,YAAY,CAAC1T,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,GAAG,EAAE;QACxD,KAAK,IAAI7I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6Y,YAAY,CAACjkB,MAAM,EAAEoL,CAAC,EAAE,EAAE;UAC1C,IAAI,CAAC/I,MAAM,CAACiI,QAAQ,GAAG,KAAK;UAC5B,IAAIqgB,SAAS,GAAG,IAAI,CAACtoB,MAAM,CAACqJ,aAAa,CAACoU,YAAY,CAACmE,YAAY,CAAC7Y,CAAC,CAAC,EAAE6Y,YAAY,CAAC7Y,CAAC,CAAC,CAAC+U,KAAK,CAAC;UAC9F,IAAIwK,SAAS,CAACtY,YAAY,CAACrS,MAAM,KAAK,CAAC,IAAI2qB,SAAS,CAACxe,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,EAAE;YACzF0W,SAAS,CAACxe,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,GAAG,EAAE;UACzD;UACA7B,UAAU,GAAG,IAAI,CAAC/P,MAAM,CAAC2H,aAAa,CAACia,YAAY,CAAC7Y,CAAC,CAAC,CAACgH,UAAU,CAAC7G,MAAM,CAAC;UACzE,IAAI,CAACjL,iBAAiB,CAAC8R,UAAU,CAAC,EAAE;YAChC,IAAI,CAAC/P,MAAM,CAAC+K,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC/K,MAAM,CAACqJ,aAAa,CAAC4U,cAAc,CAAClO,UAAU,CAAC,EAAEuY,SAAS,CAAC;YACzG,IAAIJ,MAAM,GAAGI,SAAS,CAACvY,UAAU,GAAGuY,SAAS,CAACvY,UAAU,CAACsM,KAAK,GAAG,IAAI;YACrE,IAAI,CAACrc,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAEmd,MAAM,EAAEI,SAAS,CAAC;YAC5D,IAAIpK,YAAY,GAAGoK,SAAS,CAACvY,UAAU,GAAGuY,SAAS,CAACvY,UAAU,CAACjB,QAAQ,GAAG,IAAI;YAC9E,IAAI,CAAC9O,MAAM,CAAC+K,cAAc,CAAC,gBAAgB,EAAEmT,YAAY,EAAEoK,SAAS,CAAC;YACrE,IAAI,CAACrqB,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,IAC7C,CAAC5D,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,IAAIuP,SAAS,CAACvY,UAAU,EAAE;cAC7E,IAAI,IAAI,CAAC/P,MAAM,CAACuH,QAAQ,KAAK,aAAa,EAAE;gBACxC,IAAI,CAACvH,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAEuP,SAAS,CAACvY,UAAU,CAAC7G,MAAM,EAAEof,SAAS,CAACxe,QAAQ,EAAE,IAAI,CAAC;cACtH;cACA,IAAI,CAAC9J,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAEud,SAAS,CAACvY,UAAU,CAAC7G,MAAM,EAAEof,SAAS,CAACliB,eAAe,EAAE,IAAI,CAAC;cACpG,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAEuP,SAAS,CAACvY,UAAU,CAAC7G,MAAM,EAAEof,SAAS,EAAE,IAAI,CAAC;YAC7G;UACJ;UACA,IAAI,CAACtoB,MAAM,CAACiI,QAAQ,GAAG,IAAI;UAC3B,IAAIqgB,SAAS,CAACvY,UAAU,EAAE;YACtB,IAAIA,UAAU,CAACC,YAAY,CAACrS,MAAM,KAAK,CAAC,EAAE;cACtC8pB,WAAW,GAAG,OAAO;YACzB,CAAC,MACI;cACDA,WAAW,GAAG,OAAO;YACzB;UACJ;UACA,IAAI,IAAI,CAACznB,MAAM,CAAC2T,aAAa,CAAC2U,SAAS,CAACvY,UAAU,CAAC,CAACC,YAAY,CAACrS,MAAM,GAAG,CAAC,EAAE;YACzE,IAAI,CAAC0qB,kBAAkB,GAAG,IAAI,CAACroB,MAAM,CAAC2T,aAAa,CAAC2U,SAAS,CAACvY,UAAU,CAAC,CAACC,YAAY,CAAC,IAAI,CAAChQ,MAAM,CAAC2T,aAAa,CAAC2U,SAAS,CAACvY,UAAU,CAAC,CAACC,YAAY,CAACrS,MAAM,GAAG,CAAC,CAAC;UACnK;UACA,IAAI,CAACyqB,6BAA6B,CAACE,SAAS,EAAEb,WAAW,EAAE1X,UAAU,CAAC;UACtE,KAAK,IAAIvS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGokB,YAAY,CAACjkB,MAAM,EAAEH,CAAC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAACwC,MAAM,CAACuH,QAAQ,KAAK,aAAa,EAAE;cACxC,IAAIqa,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAAC7G,MAAM,KAAKof,SAAS,CAACliB,eAAe,CAAC8C,MAAM,EAAE;gBACxE0Y,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACsM,KAAK,GAAGiM,SAAS,CAACjM,KAAK;gBAClDuF,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAAC7G,MAAM,GAAGof,SAAS,CAACliB,eAAe,CAAC8C,MAAM;gBACpE0Y,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACjB,QAAQ,GAAGwZ,SAAS,CAACliB,eAAe,CAAC0I,QAAQ;gBACxE8S,YAAY,CAACpkB,CAAC,CAAC,CAACogB,cAAc,GAAG0K,SAAS,CAACliB,eAAe,CAAC0I,QAAQ;cACvE;YACJ,CAAC,MACI;cACD8S,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACsM,KAAK,GAAGmB,YAAY,CAACnB,KAAK;cACrDuF,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAAC7G,MAAM,GAAGsU,YAAY,CAACpX,eAAe,CAACkP,WAAW;cAC5EsM,YAAY,CAACpkB,CAAC,CAAC,CAACuS,UAAU,CAACjB,QAAQ,GAAG0O,YAAY,CAACpX,eAAe,CAAC0I,QAAQ;cAC3E8S,YAAY,CAACpkB,CAAC,CAAC,CAACogB,cAAc,GAAGJ,YAAY,CAACpX,eAAe,CAAC0I,QAAQ;YAC1E;UACJ;QACJ;MACJ,CAAC,MACI;QACD,IAAI,CAACsZ,6BAA6B,CAAC5K,YAAY,EAAEiK,WAAW,EAAE1X,UAAU,CAAC;MAC7E;IACJ,CAAC,MACI;MACD,IAAI,CAACqY,6BAA6B,CAAC5K,YAAY,EAAEiK,WAAW,EAAE1X,UAAU,CAAC;IAC7E;IACA;IACA,IAAI,IAAI,CAAC/P,MAAM,CAACqB,UAAU,CAACC,UAAU,IAAIkc,YAAY,CAACpX,eAAe,CAAC4D,gBAAgB,EAAE;MACpF,IAAI,CAAC,IAAI,CAAChK,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;QACnF,IAAI,CAAC7H,MAAM,CAACe,iBAAiB,CAACwnB,iCAAiC,CAAC/K,YAAY,EAAEA,YAAY,CAACpX,eAAe,CAAC;MAC/G;MACA,IAAI,CAACpG,MAAM,CAACe,iBAAiB,CAACynB,uBAAuB,CAAChL,YAAY,CAAC;MACnE,IAAI,CAACxd,MAAM,CAACe,iBAAiB,CAAC0nB,wBAAwB,CAACjL,YAAY,CAAC;IACxE;IACA,IAAIA,YAAY,CAACzN,UAAU,IAAI,IAAI,CAAC/P,MAAM,CAAC2T,aAAa,CAAC6J,YAAY,CAACzN,UAAU,CAAC,CAAC3J,eAAe,CAAC8H,cAAc,EAAE;MAC9G,IAAI,CAAClO,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAACgL,YAAY,CAACzN,UAAU,CAAC;IACxE;IACA,IAAI,CAAC/P,MAAM,CAACiI,QAAQ,GAAG,KAAK;IAC5B,OAAOuV,YAAY;EACvB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI1d,IAAI,CAACjC,SAAS,CAACohB,aAAa,GAAG,UAAUtW,MAAM,EAAEoc,KAAK,EAAE;IACpD,IAAI2D,aAAa;IACjB,IAAI,CAAC/f,MAAM,CAAC2J,eAAe,EAAE;MACzB,OAAO,CAAC;IACZ;IACA,KAAK,IAAI9U,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmL,MAAM,CAACqH,YAAY,CAACrS,MAAM,EAAEH,CAAC,EAAE,EAAE;MACjDkrB,aAAa,GAAG/f,MAAM,CAACqH,YAAY,CAACxS,CAAC,CAAC;MACtCunB,KAAK,EAAE;MACP,IAAI2D,aAAa,CAACpW,eAAe,EAAE;QAC/ByS,KAAK,GAAG,IAAI,CAAC9F,aAAa,CAACyJ,aAAa,EAAE3D,KAAK,CAAC;MACpD;IACJ;IACA,OAAOA,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIjlB,IAAI,CAACjC,SAAS,CAAC8qB,0BAA0B,GAAG,UAAU1hB,IAAI,EAAE8d,KAAK,EAAElQ,UAAU,EAAE;IAC3E,IAAI7E,YAAY;IAChB,IAAIrS,MAAM;IACV,IAAIsJ,IAAI,CAACqL,eAAe,EAAE;MACtBtC,YAAY,GAAG/I,IAAI,CAAC+I,YAAY;MAChCrS,MAAM,GAAGqS,YAAY,CAACrS,MAAM;MAC5B,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,MAAM,EAAEH,CAAC,EAAE,EAAE;QAC7B,IAAIqX,UAAU,CAACnN,OAAO,CAACsI,YAAY,CAACxS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;UAC5CunB,KAAK,EAAE;QACX;QACA,IAAI/U,YAAY,CAACxS,CAAC,CAAC,CAAC8U,eAAe,EAAE;UACjCyS,KAAK,GAAG,IAAI,CAAC4D,0BAA0B,CAAC3Y,YAAY,CAACxS,CAAC,CAAC,EAAEunB,KAAK,EAAElQ,UAAU,CAAC;QAC/E;MACJ;IACJ,CAAC,MACI;MACD,IAAIA,UAAU,CAACnN,OAAO,CAACT,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QACjC8d,KAAK,EAAE;MACX;IACJ;IACA,OAAOA,KAAK;EAChB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIjlB,IAAI,CAACjC,SAAS,CAAC+qB,gCAAgC,GAAG,UAAUnM,YAAY,EAAE;IACtE,IAAIoM,GAAG,GAAGpM,YAAY,CAACrW,eAAe,CAAC+B,WAAW,CAACxK,MAAM;IACzD,IAAImrB,oBAAoB,GAAGrM,YAAY,CAACrW,eAAe;IACvD,IAAI2iB,qBAAqB,GAAGD,oBAAoB,CAAC3gB,WAAW;IAC5D,IAAIwK,WAAW;IACf,IAAIqW,gBAAgB;IACpB,IAAIC,kBAAkB,GAAG,EAAE;IAC3B,IAAIC,gBAAgB;IACpB,KAAK,IAAInE,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAG8D,GAAG,EAAE9D,KAAK,EAAE,EAAE;MACtC,IAAId,UAAU,GAAG,IAAI,CAACjkB,MAAM,CAAC2H,aAAa,CAACohB,qBAAqB,CAAChE,KAAK,CAAC,CAACvc,IAAI,CAAC;MAC7E,IAAIob,QAAQ,GAAG,IAAI,CAAC5jB,MAAM,CAAC2H,aAAa,CAACohB,qBAAqB,CAAChE,KAAK,CAAC,CAACtc,EAAE,CAAC;MACzEygB,gBAAgB,GAAG,IAAI,CAAClpB,MAAM,CAACuB,uBAAuB,CAAC4nB,yBAAyB,CAAClF,UAAU,EAAEL,QAAQ,CAAC;MACtG,IAAI,CAACsF,gBAAgB,IAAI,CAAC,IAAI,CAAClpB,MAAM,CAACqS,qBAAqB,EAAE;QACzD,IAAI0W,qBAAqB,CAAChE,KAAK,CAAC,CAACtc,EAAE,KAAKqgB,oBAAoB,CAACxT,WAAW,CAACtS,QAAQ,CAAC,CAAC,EAAE;UACjF2P,WAAW,GAAG,IAAI,CAAC3S,MAAM,CAAC2H,aAAa,CAACohB,qBAAqB,CAAChE,KAAK,CAAC,CAACvc,IAAI,CAAC;UAC1EwgB,gBAAgB,GAAG9pB,QAAQ,CAAC6pB,qBAAqB,CAAChE,KAAK,CAAC,EAAE,MAAM,EAAEpS,WAAW,CAACvM,eAAe,CAAC+B,WAAW,EAAE,IAAI,CAAC;UAChH;UACA,IAAIihB,sBAAsB,GAAIjrB,MAAM,CAAC,EAAE,EAAEwU,WAAW,CAACvM,eAAe,CAAC+B,WAAW,EAAE,EAAE,EAAE,IAAI,CAAE;UAC5FihB,sBAAsB,CAACpgB,MAAM,CAACggB,gBAAgB,EAAE,CAAC,CAAC;UAClD,IAAI,CAAChpB,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAEqe,sBAAsB,EAAEzW,WAAW,CAACvM,eAAe,EAAE,IAAI,CAAC;QACxG,CAAC,MACI,IAAI2iB,qBAAqB,CAAChE,KAAK,CAAC,CAACvc,IAAI,KAAKsgB,oBAAoB,CAACxT,WAAW,CAACtS,QAAQ,CAAC,CAAC,EAAE;UACxF2P,WAAW,GAAG,IAAI,CAAC3S,MAAM,CAAC2H,aAAa,CAACohB,qBAAqB,CAAChE,KAAK,CAAC,CAACtc,EAAE,CAAC;UACxE,IAAI4gB,QAAQ,GAAI1W,WAAW,CAACvM,eAAe,CAAC4D,gBAAgB,CAAChH,QAAQ,CAAC,CAAC,CAAEsmB,KAAK,CAAC,GAAG,CAAC;UACnF,IAAIC,GAAG,GAAGR,qBAAqB,CAAChE,KAAK,CAAC,CAACvc,IAAI,GAAGugB,qBAAqB,CAAChE,KAAK,CAAC,CAACniB,IAAI;UAC/E,IAAI4mB,GAAG,GAAGH,QAAQ,CAAC3hB,OAAO,CAAC6hB,GAAG,CAAC;UAC/BF,QAAQ,CAACrgB,MAAM,CAACwgB,GAAG,EAAE,CAAC,CAAC;UACvB,IAAI,CAACxpB,MAAM,CAAC+K,cAAc,CAAC,kBAAkB,EAAEse,QAAQ,CAACrjB,IAAI,CAAC,GAAG,CAAC,EAAE2M,WAAW,CAACvM,eAAe,EAAE,IAAI,CAAC;UACrG,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,IAAI,CAAC/K,MAAM,CAACqB,UAAU,CAACC,UAAU,EAAE+nB,QAAQ,CAACrjB,IAAI,CAAC,GAAG,CAAC,EAAE2M,WAAW,CAAC;UAC9FqW,gBAAgB,GAAG9pB,QAAQ,CAAC6pB,qBAAqB,CAAChE,KAAK,CAAC,EAAE,MAAM,EAAEpS,WAAW,CAACvM,eAAe,CAAC+B,WAAW,EAAE,IAAI,CAAC;UAChH;UACA,IAAIshB,yBAAyB,GAAItrB,MAAM,CAAC,EAAE,EAAEwU,WAAW,CAACvM,eAAe,CAAC+B,WAAW,EAAE,EAAE,EAAE,IAAI,CAAE;UAC/FshB,yBAAyB,CAACzgB,MAAM,CAACggB,gBAAgB,EAAE,CAAC,CAAC;UACrD,IAAI,CAAChpB,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE0e,yBAAyB,EAAE9W,WAAW,CAACvM,eAAe,EAAE,IAAI,CAAC;UACvG,IAAI,CAACpG,MAAM,CAACe,iBAAiB,CAAC0nB,wBAAwB,CAAC9V,WAAW,CAAC;QACvE;MACJ;IACJ;IACA,IAAI,CAACuW,gBAAgB,IAAI,CAAC,IAAI,CAAClpB,MAAM,CAACqS,qBAAqB,EAAE;MACzD,IAAI,CAACrS,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAEke,kBAAkB,EAAExM,YAAY,CAACrW,eAAe,EAAE,IAAI,CAAC;MACjG,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,kBAAkB,EAAE,EAAE,EAAE0R,YAAY,CAACrW,eAAe,EAAE,IAAI,CAAC;IAC1F;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACItG,IAAI,CAACjC,SAAS,CAACuqB,6BAA6B,GAAG,UAAUzf,MAAM,EAAE8e,WAAW,EAAE1X,UAAU,EAAE;IACtF,IAAImM,WAAW,GAAG,IAAI,CAAClc,MAAM,CAACwH,QAAQ;IACtC,IAAIX,eAAe,GAAG,IAAI,CAAC7G,MAAM,CAAC6G,eAAe;IACjD,IAAI+B,GAAG,GAAG,IAAI,CAAC5I,MAAM,CAAC4I,GAAG;IACzB,IAAI8gB,gBAAgB;IACpB,IAAIpN,WAAW;IACf,IAAIqN,sBAAsB;IAC1B,IAAIlL,UAAU;IACd,QAAQgJ,WAAW;MACf,KAAK,KAAK;QACNvL,WAAW,CAAClT,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAAC;QAChC9B,eAAe,CAACmC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAAC;QACpCC,GAAG,CAACI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACvC,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACjE;MACJ,KAAK,QAAQ;QACTkZ,WAAW,CAACnW,IAAI,CAAC4C,MAAM,CAAC;QACxB9B,eAAe,CAACd,IAAI,CAAC4C,MAAM,CAAC;QAC5BC,GAAG,CAAC7C,IAAI,CAAC4C,MAAM,CAACvC,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,IAAI,CAAChD,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;UACzC,IAAI2B,MAAM,GAAGP,MAAM,CAACmV,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGnV,MAAM,CAACvC,eAAe,CAAC8C,MAAM,GAAG,GAAG,GAAGP,MAAM,CAACvC,eAAe,CAAC8C,MAAM;UAC3G,IAAI,CAAClJ,MAAM,CAACyH,UAAU,CAAC,CAAC,CAAC1B,IAAI,CAACmD,MAAM,CAAC;QACzC;QACA;MACJ,KAAK,OAAO;QACR;QACAoT,WAAW,GAAGJ,WAAW,CAACxU,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC;QAC1DsB,sBAAsB,GAAG9iB,eAAe,CAACa,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC;QACzE,IAAI,CAACuB,sBAAsB,CAACnL,UAAU,EAAEnC,WAAW,EAAEqN,sBAAsB,EAAEhhB,MAAM,EAAEoH,UAAU,EAAE0X,WAAW,CAAC;QAC7G;MACJ,KAAK,OAAO;QACRiC,gBAAgB,GAAGxN,WAAW,CAACxU,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC;QAC/D,IAAI,IAAI,CAACA,kBAAkB,CAAC/V,eAAe,EAAE;UACzC,IAAIuX,cAAc,GAAG,IAAI,CAAC5K,aAAa,CAAC,IAAI,CAACoJ,kBAAkB,EAAE,CAAC,CAAC;UACnE/L,WAAW,GAAGoN,gBAAgB,GAAGG,cAAc,GAAG,CAAC;UACnDF,sBAAsB,GAAG9iB,eAAe,CAACa,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC,GACrE,IAAI,CAACM,0BAA0B,CAAC,IAAI,CAACN,kBAAkB,EAAE,CAAC,EAAExhB,eAAe,CAAC,GAAG,CAAC;QACxF,CAAC,MACI;UACDyV,WAAW,GAAGoN,gBAAgB,GAAG,CAAC;UAClCC,sBAAsB,GAAG9iB,eAAe,CAACa,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC,GAAG,CAAC;QACjF;QACA,IAAI,CAACuB,sBAAsB,CAACnL,UAAU,GAAG,CAAC,EAAEnC,WAAW,EAAEqN,sBAAsB,EAAEhhB,MAAM,EAAEoH,UAAU,EAAE0X,WAAW,CAAC;QACjH;MACJ,KAAK,OAAO;QACRiC,gBAAgB,GAAGxN,WAAW,CAACxU,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC;QAC/D,IAAI,IAAI,CAACA,kBAAkB,CAAC/V,eAAe,EAAE;UACzC,IAAIuX,cAAc,GAAG,IAAI,CAAC5K,aAAa,CAAC,IAAI,CAACoJ,kBAAkB,EAAE,CAAC,CAAC;UACnE/L,WAAW,GAAGoN,gBAAgB,GAAGG,cAAc,GAAG,CAAC;UACnD;UACA,IAAI,CAAC,IAAI,CAACxB,kBAAkB,CAACyB,QAAQ,IAAI,CAAC,IAAI,CAAC9pB,MAAM,CAAC+pB,kBAAkB,EAAE;YACtE,IAAI,CAAC/pB,MAAM,CAACgqB,UAAU,CAAC,IAAI,CAAC3B,kBAAkB,CAACjiB,eAAe,CAACkP,WAAW,CAAC;UAC/E;UACAqU,sBAAsB,GAAG9iB,eAAe,CAACa,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC,GACrE,IAAI,CAACM,0BAA0B,CAAC,IAAI,CAACN,kBAAkB,EAAE,CAAC,EAAExhB,eAAe,CAAC,GAAG,CAAC;QACxF,CAAC,MACI;UACD,IAAI,CAAC7G,MAAM,CAAC+K,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,IAAI,CAACsd,kBAAkB,CAAC;UAC5E,IAAI,CAACroB,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE,KAAK,EAAE,IAAI,CAACsd,kBAAkB,CAACjiB,eAAe,EAAE,IAAI,CAAC;UAC/F,IAAI,CAACpG,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAACsd,kBAAkB,CAAC;UACrE,IAAI,CAACroB,MAAM,CAAC+K,cAAc,CAAC,cAAc,EAAE,EAAE,EAAE,IAAI,CAACsd,kBAAkB,CAAC;UACvE/L,WAAW,GAAGoN,gBAAgB,GAAG,CAAC;UAClCC,sBAAsB,GAAG9iB,eAAe,CAACa,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC,GAAG,CAAC;UAC7E,IAAI,IAAI,CAACA,kBAAkB,CAACjiB,eAAe,CAAC+B,WAAW,EAAE;YACrD,IAAI,CAACygB,gCAAgC,CAAC,IAAI,CAACP,kBAAkB,CAAC;UAClE;UACA,IAAI,CAACpqB,iBAAiB,CAAC,IAAI,CAACoqB,kBAAkB,CAACjiB,eAAe,CAAC6F,QAAQ,CAAC,EAAE;YACtE,IAAI,CAACoc,kBAAkB,CAACjiB,eAAe,CAAC6F,QAAQ,GAAG,IAAI;UAC3D;QACJ;QACA,IAAI,CAAC2d,sBAAsB,CAACnL,UAAU,GAAG,CAAC,EAAEnC,WAAW,EAAEqN,sBAAsB,EAAEhhB,MAAM,EAAEoH,UAAU,EAAE0X,WAAW,CAAC;QACjH;IACR;IACA,IAAI,CAACwC,sBAAsB,GAAGthB,MAAM;EACxC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI7I,IAAI,CAACjC,SAAS,CAAC+rB,sBAAsB,GAAG,UAAUnL,UAAU,EAAEnC,WAAW,EAAEqN,sBAAsB,EAAEhhB,MAAM,EAAEoH,UAAU,EAAE0X,WAAW,EAAE;IAChI,IAAIvL,WAAW,GAAG,IAAI,CAAClc,MAAM,CAACwH,QAAQ;IACtC,IAAIX,eAAe,GAAG,IAAI,CAAC7G,MAAM,CAAC6G,eAAe;IACjD,IAAI+B,GAAG,GAAG,IAAI,CAAC5I,MAAM,CAAC4I,GAAG;IACzB;IACAsT,WAAW,CAAClT,MAAM,CAACsT,WAAW,EAAE,CAAC,EAAE3T,MAAM,CAAC;IAC1C9B,eAAe,CAACmC,MAAM,CAAC2gB,sBAAsB,EAAE,CAAC,EAAEhhB,MAAM,CAAC;IACzDC,GAAG,CAACI,MAAM,CAACsT,WAAW,EAAE,CAAC,EAAE3T,MAAM,CAACvC,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;IACzE,IAAI,IAAI,CAAChD,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;MACzC,IAAI2B,MAAM,GAAGP,MAAM,CAACmV,KAAK,KAAK,CAAC,GAAG,GAAG,GAAGnV,MAAM,CAACvC,eAAe,CAAC8C,MAAM,GAAG,GAAG,GAAGP,MAAM,CAACvC,eAAe,CAAC8C,MAAM;MAC3G,IAAI,CAAClJ,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACuB,MAAM,CAACsT,WAAW,EAAE,CAAC,EAAEpT,MAAM,CAAC;IAC3D;IACA;IACA,IAAI,CAACjL,iBAAiB,CAAC8R,UAAU,CAAC,EAAE;MAChC,IAAI0X,WAAW,KAAK,OAAO,EAAE;QACzBhJ,UAAU,GAAG1O,UAAU,CAACC,YAAY,CAACtI,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC;MACzE,CAAC,MACI,IAAIZ,WAAW,KAAK,OAAO,EAAE;QAC9BhJ,UAAU,GAAG1O,UAAU,CAACC,YAAY,CAACtI,OAAO,CAAC,IAAI,CAAC2gB,kBAAkB,CAAC,GAAG,CAAC;MAC7E,CAAC,MACI;QACD5J,UAAU,GAAG1O,UAAU,CAACC,YAAY,CAACrS,MAAM;MAC/C;MACA;MACAoS,UAAU,CAACC,YAAY,CAAChH,MAAM,CAACyV,UAAU,EAAE,CAAC,EAAE9V,MAAM,CAAC;MACrD,IAAI,CAAC,IAAI,CAAC3I,MAAM,CAACqB,UAAU,CAACuQ,KAAK,EAAE;QAC/B,IAAI,CAAC5R,MAAM,CAACqB,UAAU,CAACuQ,KAAK,GAAG,UAAU;MAC7C;MACA,IAAK,IAAI,CAAC5R,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,IAC9CP,iBAAiB,CAAC8R,UAAU,CAACjG,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,CAAC,IACvE,CAAC9a,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAAC+E,UAAU,CAAC,EAAE;QAC5C,IAAI6M,KAAK,GAAG,IAAI,CAAC5R,MAAM,CAACqB,UAAU,CAACuQ,KAAK;QACxC,IAAI7B,UAAU,CAACjG,QAAQ,CAAC8H,KAAK,CAAC,IAAI7B,UAAU,CAACjG,QAAQ,CAAC8H,KAAK,CAAC,CAACjU,MAAM,GAAG,CAAC,EAAE;UACrE,IAAI8pB,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,OAAO,EAAE;YACpD1X,UAAU,CAACjG,QAAQ,CAAC8H,KAAK,CAAC,CAAC5I,MAAM,CAACyV,UAAU,EAAE,CAAC,EAAE9V,MAAM,CAACmB,QAAQ,CAAC;UACrE,CAAC,MACI;YACDiG,UAAU,CAACjG,QAAQ,CAAC8H,KAAK,CAAC,CAAC7L,IAAI,CAAC4C,MAAM,CAACmB,QAAQ,CAAC;UACpD;QACJ,CAAC,MACI;UACDiG,UAAU,CAACjG,QAAQ,CAAC8H,KAAK,CAAC,GAAG,EAAE;UAC/B7B,UAAU,CAACjG,QAAQ,CAAC8H,KAAK,CAAC,CAAC7L,IAAI,CAAC4C,MAAM,CAACmB,QAAQ,CAAC;QACpD;QACA,IAAI,CAAC3J,gBAAgB,GAAG,IAAI;MAChC;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIL,IAAI,CAACjC,SAAS,CAACqsB,2BAA2B,GAAG,UAAU1M,YAAY,EAAErH,eAAe,EAAEgU,KAAK,EAAE;IACzF,IAAIpU,SAAS,GAAG,CAAC,CAAC;IAClBA,SAAS,CAAC7L,MAAM,GAAG6L,SAAS,CAACxE,WAAW,GAAG4Y,KAAK;IAChD,IAAI3M,YAAY,CAAC7f,MAAM,GAAG,CAAC,EAAE;MACzBoY,SAAS,CAAC9O,IAAI,GAAG,EAAE;MACnB8O,SAAS,CAACqU,WAAW,GAAG,EAAE;MAC1BrU,SAAS,CAACuG,WAAW,GAAG,EAAE;MAC1B,KAAK,IAAI9e,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGggB,YAAY,CAAC7f,MAAM,EAAEH,CAAC,EAAE,EAAE;QAC1CuY,SAAS,CAAC9O,IAAI,CAACzJ,CAAC,CAAC,GAAGggB,YAAY,CAAChgB,CAAC,CAAC;QAClCuY,SAAS,CAACqU,WAAW,CAAC5sB,CAAC,CAAC,GAAKwB,WAAW,CAAC,CAACwe,YAAY,CAAChgB,CAAC,CAAC,CAAC,EAAEuY,SAAS,CAAC9O,IAAI,CAACzJ,CAAC,CAAC,EAAEuY,SAAS,EAAE,IAAI,CAAC/V,MAAM,CAAE;QACxG+V,SAAS,CAACuG,WAAW,CAAC9e,CAAC,CAAC,GAAGggB,YAAY,CAAChgB,CAAC,CAAC,CAAC6e,KAAK;MACpD;IACJ,CAAC,MACI,IAAImB,YAAY,CAAC7f,MAAM,KAAK,CAAC,EAAE;MAChC,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGggB,YAAY,CAAC7f,MAAM,EAAEH,CAAC,EAAE,EAAE;QACzCuY,SAAS,CAAC9O,IAAI,GAAKuW,YAAY,CAAChgB,CAAC,CAAE;QACnCuY,SAAS,CAACqU,WAAW,GAAKprB,WAAW,CAAC,CAACwe,YAAY,CAAChgB,CAAC,CAAC,CAAC,EAAEuY,SAAS,CAAC9O,IAAI,EAAE8O,SAAS,EAAE,IAAI,CAAC/V,MAAM,CAAE;QAClG+V,SAAS,CAACuG,WAAW,GAAGkB,YAAY,CAAChgB,CAAC,CAAC,CAAC6e,KAAK;MACjD;IACJ;IACAtG,SAAS,CAACI,eAAe,GAAGA,eAAe;IAC3CJ,SAAS,CAACO,gBAAgB,GAAGtX,WAAW,CAACmX,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAACnW,MAAM,CAAC;IAClF,OAAO+V,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIjW,IAAI,CAACjC,SAAS,CAACwsB,UAAU,GAAG,UAAUxlB,IAAI,EAAE;IACxC;IACA;IACA,IAAI,CAAC7E,MAAM,CAACkb,8BAA8B,GAAG,EAAE;IAC/C,IAAI,CAAClb,MAAM,CAACmb,gBAAgB,GAAG,EAAE;IACjC,IAAI,CAACnb,MAAM,CAACe,iBAAiB,CAAC8a,8BAA8B,CAAC,IAAI,CAAC7b,MAAM,CAACwH,QAAQ,CAAC;IAClF,IAAI,CAACxH,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,GAAG,EAAE;IACpC,IAAI,CAAC7P,MAAM,CAAC0iB,eAAe,GAAG,IAAI;IAClC,IAAI,CAAC1iB,MAAM,CAACiC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,IAAI;IAC/C,IAAI,CAAC4kB,OAAO,GAAG,IAAI;IACnB,IAAI,IAAI,CAAC7mB,MAAM,CAACiC,QAAQ,CAACsE,UAAU,EAAE;MACjC,IAAI,CAACvG,MAAM,CAACiC,QAAQ,CAACsE,UAAU,CAAC,WAAW,CAAC,GAAG,KAAK;IACxD;IACA,IAAI,CAACvG,MAAM,CAACiC,QAAQ,CAAC6Z,OAAO,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC9b,MAAM,CAACkH,mBAAmB,EAAE;MACjC,IAAI,CAAClH,MAAM,CAACmW,eAAe,GAAGtR,IAAI,CAACsR,eAAe;MAClD,IAAI,CAACnW,MAAM,CAACmW,eAAe,CAACpQ,IAAI,CAAClB,IAAI,CAACoC,IAAI,CAAC;MAC3C,IAAI,CAAC6f,4BAA4B,CAAC,CAAC;IACvC;EACJ,CAAC;EACDhnB,IAAI,CAACjC,SAAS,CAACipB,4BAA4B,GAAG,UAAU7f,IAAI,EAAEqjB,OAAO,EAAE;IACnE,IAAI,CAACA,OAAO,IAAI,CAACrsB,iBAAiB,CAACgJ,IAAI,CAAC,EAAE;MACtC,KAAK,IAAIzJ,CAAC,GAAGyJ,IAAI,CAAC,CAAC,CAAC,CAACoV,KAAK,GAAG,CAAC,EAAE7e,CAAC,GAAG,IAAI,CAACwC,MAAM,CAAC6G,eAAe,CAAClJ,MAAM,EAAEH,CAAC,EAAE,EAAE;QACzE,IAAIyJ,IAAI,CAAC,CAAC,CAAC,CAAC6W,KAAK,GAAG,IAAI,CAAC9d,MAAM,CAAC6G,eAAe,CAACrJ,CAAC,CAAC,CAACsgB,KAAK,EAAE;UACtD,IAAI,CAAC9d,MAAM,CAACmW,eAAe,CAACpQ,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAAC6G,eAAe,CAACrJ,CAAC,CAAC,CAAC;QACpE,CAAC,MACI;UACD;QACJ;MACJ;IACJ;IACA,IAAI+sB,OAAO,GAAG,SAAAA,CAAU/sB,CAAC,EAAE;MACvB,IAAIwX,YAAY,GAAGwV,MAAM,CAACxqB,MAAM,CAACmW,eAAe,CAAC3Y,CAAC,CAAC;MACnD,IAAIitB,SAAS,GAAGD,MAAM,CAACxqB,MAAM,CAAC0b,oBAAoB,IAAI8O,MAAM,CAACxqB,MAAM,CAAC0qB,mBAAmB,GAAG,CAAC,GAAG,CAAC;MAC/F,IAAIC,YAAY,GAAGH,MAAM,CAACxqB,MAAM,CAACqB,UAAU,CAACQ,EAAE;MAC9C,IAAI+oB,aAAa,GAAGJ,MAAM,CAACxqB,MAAM,CAAC6G,eAAe,CAACgkB,SAAS,CAAC,UAAU5jB,IAAI,EAAE;QACxE,OAAQA,IAAI,CAAC0jB,YAAY,CAAC,KAAK3V,YAAY,CAAC2V,YAAY,CAAC;MAC7D,CAAC,CAAC;MACF,IAAIH,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAAC6oB,OAAO,CAAC,CAAC,CAACF,aAAa,CAAC,EAAE;QACjD,IAAIjkB,GAAG,GAAG6jB,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAACE,mBAAmB,CAAC+U,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAACG,WAAW,CAAC,CAAC,CAACkV,aAAa,CAAC,CAACjV,YAAY,CAAC,UAAU,CAAC,CAAC;QAC5I6U,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAAC8oB,YAAY,CAACC,UAAU,CAAC;UAC3C/jB,IAAI,EAAEN,GAAG,CAACM,IAAI;UACdgkB,IAAI,EAAET,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAAC6oB,OAAO,CAAC,CAAC,CAACF,aAAa,CAAC,CAACM,KAAK,CAACV,MAAM,CAACxqB,MAAM,CAACmrB,eAAe,GAAGV,SAAS,CAAC;UACtG5nB,MAAM,EAAE2nB,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAACsT,IAAI,CAAC6V,UAAU,CAAC,CAAC,CAACZ,MAAM,CAACxqB,MAAM,CAACmrB,eAAe,CAAC;UAC/E5Z,WAAW,EAAE;QACjB,CAAC,CAAC;QACFiZ,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAAC8oB,YAAY,CAACM,WAAW,CAAC;UAC5CpkB,IAAI,EAAE+N,YAAY;UAAErO,GAAG,EAAE6jB,MAAM,CAACxqB,MAAM,CAACiC,QAAQ,CAAC6oB,OAAO,CAAC,CAAC,CAACF,aAAa,CAAC;UAAEU,SAAS,EAAEd,MAAM,CAACxqB,MAAM,CAACsrB;QACvG,CAAC,CAAC;MACN;IACJ,CAAC;IACD,IAAId,MAAM,GAAG,IAAI;IACjB,KAAK,IAAIhtB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACwC,MAAM,CAACmW,eAAe,CAACxY,MAAM,EAAEH,CAAC,EAAE,EAAE;MACzD+sB,OAAO,CAAC/sB,CAAC,CAAC;IACd;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACIsC,IAAI,CAACjC,SAAS,CAAC0tB,oBAAoB,GAAG,UAAUC,WAAW,EAAE/D,WAAW,EAAE;IACtE,IAAIpmB,UAAU,GAAG,IAAI,CAACrB,MAAM,CAACqB,UAAU;IACvC,IAAI0D,UAAU,GAAG5F,eAAe,CAAC,IAAI,CAACa,MAAM,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC2B,MAAM,CAAC+E,UAAU,CAAC,GACtF,IAAI,CAAC/E,MAAM,CAAC+E,UAAU;IAC1B,IAAI,IAAI,CAAC/E,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,EAAE;MAC/CuG,UAAU,GAAG,IAAI,CAAC/E,MAAM,CAAC+E,UAAU,CAACA,UAAU,CAACsZ,IAAI;IACvD;IACA,KAAK,IAAI7gB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGguB,WAAW,CAAC7tB,MAAM,EAAEH,CAAC,EAAE,EAAE;MACzC,IAAIS,iBAAiB,CAACwpB,WAAW,CAAC,IAAIxpB,iBAAiB,CAAC,IAAI,CAACoqB,kBAAkB,CAAC,EAAE;QAC9EZ,WAAW,GAAGA,WAAW,KAAK,QAAQ,GAAG,QAAQ,GAAG,KAAK;MAC7D;MACA,IAAIA,WAAW,KAAK,KAAK,EAAE;QACvB1iB,UAAU,CAACiE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEwiB,WAAW,CAAChuB,CAAC,CAAC,CAACsM,QAAQ,CAAC;MACpD,CAAC,MACI,IAAI2d,WAAW,KAAK,QAAQ,EAAE;QAC/B1iB,UAAU,CAACgB,IAAI,CAACylB,WAAW,CAAChuB,CAAC,CAAC,CAACsM,QAAQ,CAAC;MAC5C,CAAC,MACI;QACD,IAAI,CAAC7L,iBAAiB,CAACoD,UAAU,CAACQ,EAAE,CAAC,IAAI,CAAC5D,iBAAiB,CAACoD,UAAU,CAAC0X,QAAQ,CAAC,IAAI0O,WAAW,KAAK,OAAO,EAAE;UACzG1iB,UAAU,CAACgB,IAAI,CAACylB,WAAW,CAAChuB,CAAC,CAAC,CAACsM,QAAQ,CAAC;QAC5C,CAAC,MACI;UACD,IAAI,CAAC,IAAI,CAAC3J,gBAAgB,EAAE;YACxB,IAAI,CAACsrB,uBAAuB,CAAC1mB,UAAU,EAAEymB,WAAW,CAAChuB,CAAC,CAAC,CAACsM,QAAQ,EAAE2d,WAAW,CAAC;UAClF;UACA,IAAI,CAACtnB,gBAAgB,GAAG,KAAK;QACjC;MACJ;MACA,IAAI,CAACU,WAAW,GAAG,KAAK;IAC5B;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIf,IAAI,CAACjC,SAAS,CAAC4tB,uBAAuB,GAAG,UAAUpG,cAAc,EAAE1c,MAAM,EAAE8e,WAAW,EAAE;IACpF,KAAK,IAAIjqB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6nB,cAAc,CAAC1nB,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC5C,IAAIoU,KAAK,GAAG,IAAI,CAAC5R,MAAM,CAACqB,UAAU,CAACuQ,KAAK;MACxC,IAAI,IAAI,CAAC/Q,WAAW,EAAE;QAClB;MACJ;MACA,IAAIxC,QAAQ,CAAC,IAAI,CAAC2B,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAEwjB,cAAc,CAAC7nB,CAAC,CAAC,CAAC,CAACwF,QAAQ,CAAC,CAAC,KACjE,IAAI,CAACqlB,kBAAkB,CAACjiB,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,EAAE;QAChE,IAAIqZ,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,IAAI,CAACrc,MAAM,CAAC0b,oBAAoB,IAAI,IAAI,CAAC1b,MAAM,CAAC0b,oBAAoB,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC1b,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;UAClI,KAAK,IAAImkB,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGrG,cAAc,CAAC1nB,MAAM,EAAE+tB,GAAG,EAAE,EAAE;YAClD,IAAIrG,cAAc,CAACqG,GAAG,CAAC,CAAC,IAAI,CAAC1rB,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,KAAK,IAAI,CAAC7B,MAAM,CAAC0b,oBAAoB,CAAC,eAAe,CAAC,CAACtV,eAAe,CAAC8C,MAAM,EAAE;cAC7HmT,KAAK,GAAGqP,GAAG;cACX;YACJ;UACJ;QACJ;QACA,IAAIjE,WAAW,KAAK,OAAO,EAAE;UACzB,IAAIpL,KAAK,EAAE;YACPgJ,cAAc,CAACrc,MAAM,CAACqT,KAAK,EAAE,CAAC,EAAE1T,MAAM,CAAC;UAC3C,CAAC,MACI;YACD0c,cAAc,CAACrc,MAAM,CAACxL,CAAC,EAAE,CAAC,EAAEmL,MAAM,CAAC;UACvC;QACJ,CAAC,MACI,IAAI8e,WAAW,KAAK,OAAO,EAAE;UAC9B,IAAIpL,KAAK,EAAE;YACPgJ,cAAc,CAACrc,MAAM,CAACqT,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE1T,MAAM,CAAC;UAC/C,CAAC,MACI;YACD0c,cAAc,CAACrc,MAAM,CAACxL,CAAC,GAAG,CAAC,EAAE,CAAC,EAAEmL,MAAM,CAAC;UAC3C;QACJ,CAAC,MACI,IAAI8e,WAAW,KAAK,OAAO,EAAE;UAC9B,IAAIpC,cAAc,CAAC7nB,CAAC,CAAC,CAACoU,KAAK,CAAC,IAAIyT,cAAc,CAAC7nB,CAAC,CAAC,CAACoU,KAAK,CAAC,CAACjU,MAAM,GAAG,CAAC,EAAE;YACjE0nB,cAAc,CAAC7nB,CAAC,CAAC,CAACoU,KAAK,CAAC,CAAC7L,IAAI,CAAC4C,MAAM,CAAC;UACzC,CAAC,MACI;YACD0c,cAAc,CAAC7nB,CAAC,CAAC,CAACoU,KAAK,CAAC,GAAG,EAAE;YAC7ByT,cAAc,CAAC7nB,CAAC,CAAC,CAACoU,KAAK,CAAC,CAAC7L,IAAI,CAAC4C,MAAM,CAAC;UACzC;QACJ;QACA,IAAI,CAAC9H,WAAW,GAAG,IAAI;QACvB;MACJ,CAAC,MACI,IAAIwkB,cAAc,CAAC7nB,CAAC,CAAC,CAACoU,KAAK,CAAC,EAAE;QAC/B,IAAI5B,YAAY,GAAGqV,cAAc,CAAC7nB,CAAC,CAAC,CAACoU,KAAK,CAAC;QAC3C,IAAI,CAAC6Z,uBAAuB,CAACzb,YAAY,EAAErH,MAAM,EAAE8e,WAAW,CAAC;MACnE;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI3nB,IAAI,CAACjC,SAAS,CAAC8tB,0BAA0B,GAAG,UAAU3T,CAAC,EAAEnT,IAAI,EAAE;IAC3D,IAAI+mB,mBAAmB,GAAG5T,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC;IAC3C,IAAIjT,QAAQ,GAAGxb,MAAM,CAACsM,IAAI,CAACkiB,mBAAmB,CAAC,CAACjuB,MAAM;IACtD,KAAK,IAAImI,CAAC,GAAG,CAAC,EAAE+S,EAAE,GAAGzb,MAAM,CAACsM,IAAI,CAACkiB,mBAAmB,CAAC,EAAE9lB,CAAC,GAAG8S,QAAQ,EAAE9S,CAAC,EAAE,EAAE;MACtE,IAAIO,GAAG,GAAGwS,EAAE,CAAC9V,QAAQ,CAAC+C,CAAC,CAAC9C,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MACxC6B,IAAI,CAACoC,IAAI,CAAC,EAAE,GAAGZ,GAAG,CAAC,GAAGulB,mBAAmB,CAAC,EAAE,GAAGvlB,GAAG,CAAC;IACvD;IACA,IAAI,IAAI,CAACrG,MAAM,CAACqB,UAAU,CAACQ,EAAE,KAAK,IAAI,EAAE;MACpCgD,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,QAAQ,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC;IACxF;IACA,IAAI,IAAI,CAAC7B,MAAM,CAACqB,UAAU,CAAC8D,IAAI,KAAK,IAAI,EAAE;MACtCN,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,UAAU,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAAC8D,IAAI,CAAC;IAC5F;IACA,IAAI,IAAI,CAACnF,MAAM,CAACqB,UAAU,CAACsI,SAAS,KAAK,IAAI,EAAE;MAC3C9E,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,WAAW,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAACsI,SAAS,CAAC;IAClG;IACA,IAAI,IAAI,CAAC3J,MAAM,CAACqB,UAAU,CAACuI,OAAO,KAAK,IAAI,EAAE;MACzC/E,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,SAAS,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAACuI,OAAO,CAAC;IAC9F;IACA,IAAI,IAAI,CAAC5J,MAAM,CAACqB,UAAU,CAAC+H,QAAQ,KAAK,IAAI,EAAE;MAC1CvE,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,UAAU,CAAC,GAAG0G,UAAU,CAAC8e,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAAC+H,QAAQ,CAAC,CAAC;IAC5G;IACA,IAAI,IAAI,CAACpJ,MAAM,CAACqB,UAAU,CAACwK,YAAY,KAAK,IAAI,EAAE;MAC9ChH,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,cAAc,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAACwK,YAAY,CAAC;IACxG;IACA,IAAI,IAAI,CAAC7L,MAAM,CAACqB,UAAU,CAACqB,QAAQ,KAAK,IAAI,EAAE;MAC1CmC,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,UAAU,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAACqB,QAAQ,CAAC;IAChG;IACA,IAAI,IAAI,CAAC1C,MAAM,CAACqB,UAAU,CAACC,UAAU,KAAK,IAAI,EAAE;MAC5CuD,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,YAAY,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAACC,UAAU,CAAC;IACpG;IACA,IAAI,IAAI,CAACtB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,KAAK,IAAI,EAAE;MAC1ClU,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,UAAU,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC;IAChG;IACA,IAAI,IAAI,CAAC/Y,MAAM,CAACqB,UAAU,CAAC2K,eAAe,KAAK,IAAI,EAAE;MACjDnH,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,iBAAiB,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAAC2K,eAAe,CAAC;IAC9G;IACA,IAAI,IAAI,CAAChM,MAAM,CAACqB,UAAU,CAAC0K,iBAAiB,KAAK,IAAI,EAAE;MACnDlH,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,mBAAmB,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAAC0K,iBAAiB,CAAC;IAClH;IACA,IAAI,IAAI,CAAC/L,MAAM,CAACqB,UAAU,CAACsB,YAAY,KAAK,IAAI,EAAE;MAC9CkC,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC,WAAW,CAAC,GAAGwlB,mBAAmB,CAAC,IAAI,CAAC5rB,MAAM,CAACqB,UAAU,CAACsB,YAAY,CAAC;IACrG;EACJ,CAAC;EACD7C,IAAI,CAACjC,SAAS,CAACiuB,oBAAoB,GAAG,UAAUnjB,MAAM,EAAE9D,IAAI,EAAE;IAC1D,IAAI,IAAI,CAAC7E,MAAM,CAAC6H,cAAc,KAAK,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAK,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC7H,MAAM,CAACuH,QAAQ,KAAK,cAAe,CAAC,IACpP,IAAI,CAACvH,MAAM,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC,EAAE;MAChD2I,MAAM,CAAC,QAAQ,CAAC,GAAG,KAAK;MACxB,IAAIojB,WAAW,GAAGlnB,IAAI,CAACoC,IAAI,CAACtJ,MAAM,GAAG,CAAC,GAClCQ,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE0G,IAAI,CAACoC,IAAI,EAAE,IAAI,CAAC,GAAG,CAACpC,IAAI,CAACoC,IAAI,CAAC;MACjD,IAAI+kB,QAAQ,GAAG,EAAE;MACjB,IAAIC,OAAO,GAAG,SAAAA,CAAUzuB,CAAC,EAAE;QACvBwuB,QAAQ,GAAIE,MAAM,CAAClsB,MAAM,CAACwH,QAAQ,CAACc,MAAM,CAAC,UAAUrB,IAAI,EAAE;UACtD,OAAQ8kB,WAAW,CAACvuB,CAAC,CAAC,CAAC6e,KAAK,KAAKpV,IAAI,CAACoV,KAAK,IAAI0P,WAAW,CAACvuB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC0L,MAAM,KAAKjC,IAAI,CAACb,eAAe,CAAC8C,MAAM;QAC3H,CAAC,CAAE;MACP,CAAC;MACD,IAAIgjB,MAAM,GAAG,IAAI;MACjB,KAAK,IAAI1uB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuuB,WAAW,CAACpuB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACzCyuB,OAAO,CAACzuB,CAAC,CAAC;MACd;MACAmL,MAAM,CAAC,cAAc,CAAC,GAAGxK,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE6tB,QAAQ,EAAE,IAAI,CAAC;MACvD,IAAI,CAAChsB,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAClK,MAAM,GAAG,CAAC,CAAC,GAAGgL,MAAM;IACxH;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI7I,IAAI,CAACjC,SAAS,CAACsuB,SAAS,GAAG,UAAUllB,IAAI,EAAEwgB,WAAW,EAAE7gB,QAAQ,EAAE;IAC9D,IAAIrC,KAAK,GAAG,IAAI;IAChB,IAAI6nB,UAAU,GAAG,IAAI,CAACpsB,MAAM,CAACqB,UAAU,CAACQ,EAAE;IAC1C,IAAI,IAAI,CAAC7B,MAAM,CAACuG,UAAU,IAAI,IAAI,CAACvG,MAAM,CAACiB,YAAY,CAACO,WAAW,EAAE;MAChE,IAAI,CAACxB,MAAM,CAACqsB,aAAa,GAAG,IAAI;MAChC,IAAI,CAACrsB,MAAM,CAACiC,QAAQ,CAAC,kBAAkB,CAAC,GAAG,IAAI;MAC/C,IAAI,CAACjC,MAAM,CAACssB,SAAS,GAAG,IAAI;MAC5B,IAAIC,cAAc,GAAG,EAAE;MACvB,IAAItuB,iBAAiB,CAACgJ,IAAI,CAAC,EAAE;QACzB,IAAI,CAACulB,oBAAoB,CAACvlB,IAAI,EAAEwgB,WAAW,EAAE7gB,QAAQ,EAAE2lB,cAAc,CAAC;MAC1E,CAAC,MACI,IAAItlB,IAAI,YAAYmb,KAAK,EAAE;QAC5B,IAAI,IAAI,CAACpiB,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;UACjF,IAAI4kB,OAAO,GAAGxlB,IAAI;UAClB,IAAIylB,QAAQ,GAAG9lB,QAAQ;UACvB,IAAI,IAAI,CAAC5G,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;YACzC,IAAIN,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE;cACjCwgB,WAAW,GAAG,OAAO;YACzB,CAAC,MACI,IAAIxgB,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE;cACtCwgB,WAAW,GAAG,OAAO;YACzB,CAAC,MACI,IAAIxgB,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,OAAO,EAAE;cACtCwgB,WAAW,GAAG,OAAO;YACzB;YACAiF,QAAQ,GAAG,IAAI,CAAC1sB,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAACjE,QAAQ,CAAC,CAAC,CAAC;YAChEypB,OAAO,GAAGxlB,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;UAC7B;UACA,IAAI,CAACulB,oBAAoB,CAACC,OAAO,EAAEhF,WAAW,EAAEiF,QAAQ,EAAEH,cAAc,CAAC;QAC7E,CAAC,MACI;UACD,KAAK,IAAI/uB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyJ,IAAI,CAACtJ,MAAM,EAAEH,CAAC,EAAE,EAAE;YAClC,IAAI,CAACgvB,oBAAoB,CAACvlB,IAAI,CAACzJ,CAAC,CAAC,EAAEiqB,WAAW,EAAE7gB,QAAQ,EAAE2lB,cAAc,CAAC;UAC7E;QACJ;MACJ,CAAC,MACI,IAAI,OAAQtlB,IAAK,KAAK,QAAQ,EAAE;QACjC,IAAI,CAACulB,oBAAoB,CAACvlB,IAAI,EAAEwgB,WAAW,EAAE7gB,QAAQ,EAAE2lB,cAAc,CAAC;MAC1E,CAAC,MACI;QACD;MACJ;MACA,IAAI1nB,IAAI,GAAG,CAAC,CAAC;MACbA,IAAI,GAAG,IAAI,CAACqlB,2BAA2B,CAACqC,cAAc,EAAE,IAAI,CAACvsB,MAAM,CAACoW,aAAa,EAAE,WAAW,CAAC;MAC/F,IAAI,CAACnY,iBAAiB,CAACwpB,WAAW,CAAC,EAAE;QACjC5iB,IAAI,CAAC4iB,WAAW,GAAGA,WAAW;MAClC;MACA,IAAI,IAAI,CAACznB,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC,uBAAuB,CAAC,CAAC,KAAK,CAAC,EAAE;QACjI,IAAI,IAAI,CAACA,MAAM,CAAC6H,cAAc,CAAC,aAAa,CAAC,EAAE;UAC3C,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/C;QACA,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,sBAAsB,CAAC,CAAC,CAAC;MACxD;MACA,IAAI,CAAC7H,MAAM,CAAC4W,OAAO,CAAC,aAAa,EAAE/R,IAAI,EAAE,UAAUA,IAAI,EAAE;QACrDN,KAAK,CAACvE,MAAM,CAAC6O,eAAe,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC5Q,iBAAiB,CAACsG,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAAC,IAAI1S,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;UAChH3S,KAAK,CAACvE,MAAM,CAACmX,WAAW,CAAC,CAAC;QAC9B,CAAC,MACI;UACD5S,KAAK,CAACvE,MAAM,CAACoX,WAAW,CAAC,CAAC;QAC9B;QACA,IAAI9P,KAAK,GAAG/C,KAAK,CAACvE,MAAM,CAACqB,UAAU;QACnC,IAAIqF,SAAS;QACb,IAAInC,KAAK,CAACvE,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;UAC1C,IAAI1C,IAAI,CAACoC,IAAI,CAAC,cAAc,CAAC,CAACtJ,MAAM,GAAG,CAAC,EAAE;YACtC+I,SAAS,GAAGnC,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACjD,KAAK,CAACvE,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAG7C,IAAI,CAACoC,IAAI,CAACK,KAAK,CAACzF,EAAE,CAAC,CAAC,CAAC;UACnG,CAAC,MACI;YACD6E,SAAS,GAAGnC,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACjD,KAAK,CAACvE,MAAM,CAACyH,UAAU,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,GAAG7C,IAAI,CAACoC,IAAI,CAACK,KAAK,CAACzF,EAAE,CAAC,CAAC,CAAC;UACnG;QACJ,CAAC,MACI;UACD6E,SAAS,GAAGnC,KAAK,CAACvE,MAAM,CAAC2H,aAAa,CAAC9C,IAAI,CAACoC,IAAI,CAACK,KAAK,CAACzF,EAAE,CAAC,CAAC;QAC/D;QACA,IAAI,CAAC5D,iBAAiB,CAACyI,SAAS,CAAC,EAAE;UAC/BnC,KAAK,CAAC2D,oBAAoB,CAACrD,IAAI,CAACulB,WAAW,EAAE1jB,SAAS,EAAE,IAAI,CAAC;UAC7DnC,KAAK,CAACvE,MAAM,CAACwJ,oBAAoB,CAACC,gBAAgB,CAAC/C,SAAS,CAAC;UAC7DnC,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAACU,eAAe,CAACrD,SAAS,CAAC;UACrDnC,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC9L,SAAS,CAAC;QAC3D;QACA,IAAI,CAACzI,iBAAiB,CAAC4G,IAAI,CAACoC,IAAI,CAAC,EAAE,GAAGmlB,UAAU,CAAC,CAAC,EAAE;UAChD,IAAIvnB,IAAI,CAACoC,IAAI,CAACmlB,UAAU,CAAC,KAAKvnB,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE;YAClE,KAAK,IAAIyD,EAAE,GAAG,CAAC,EAAEC,EAAE,GAAGvN,MAAM,CAACsM,IAAI,CAACnF,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAAC,EAAE8B,EAAE,GAAGC,EAAE,CAAChN,MAAM,EAAE+M,EAAE,EAAE,EAAE;cACvE,IAAIrE,GAAG,GAAGsE,EAAE,CAACD,EAAE,CAAC;cAChB,IAAInG,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAACvC,GAAG,CAAC,KAAKxB,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,CAACjE,QAAQ,CAAC,CAAC,EAAE;gBAC7EuB,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAACvC,GAAG,CAAC,GAAGxB,IAAI,CAACoC,IAAI,CAACmlB,UAAU,CAAC,CAACppB,QAAQ,CAAC,CAAC;gBACxD;cACJ;YACJ;YACA6B,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,GAAGpC,IAAI,CAACoC,IAAI,CAACmlB,UAAU,CAAC;YAC9DvnB,IAAI,CAACulB,WAAW,CAACgC,UAAU,CAAC,GAAGvnB,IAAI,CAACoC,IAAI,CAACmlB,UAAU,CAAC;YACpDvnB,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,GAAGpC,IAAI,CAACoC,IAAI,CAACmlB,UAAU,CAAC,CAACppB,QAAQ,CAAC,CAAC;UAClF;QACJ;QACA,IAAI,CAAC6B,IAAI,CAACyM,MAAM,EAAE;UACd,IAAI3I,MAAM,GAAG,CAAC,CAAC;UACf,IAAI1J,YAAY,CAACsF,KAAK,CAACvE,MAAM,CAAC+E,UAAU,CAAC,EAAE;YACvC,IAAI4nB,MAAM,GAAGpoB,KAAK,CAACvE,MAAM,CAAC+E,UAAU;YACpC,IAAI6nB,aAAa,GAAG;cAChBf,YAAY,EAAE,CAAChnB,IAAI,CAACulB,WAAW,CAAC;cAChC7S,cAAc,EAAE1S,IAAI,CAACyR;YACzB,CAAC;YACD;YACA,IAAIkB,KAAK,GAAGjT,KAAK,CAACvE,MAAM,CAACwX,KAAK,YAAY/Y,KAAK,GAAG8F,KAAK,CAACvE,MAAM,CAACwX,KAAK,GAAG,IAAI/Y,KAAK,CAAC,CAAC;YAClF,IAAIkZ,OAAO,GAAGgV,MAAM,CAAChV,OAAO;YAC5B,IAAI,EAAEA,OAAO,YAAYhZ,aAAa,IAAIgZ,OAAO,YAAYjZ,YAAY,IACrEiZ,OAAO,YAAY/Y,cAAc,CAAC,IAAI+tB,MAAM,CAAC5nB,UAAU,CAAC6S,QAAQ,EAAE;cAClE;cACA,IAAIH,IAAI,GAAGkV,MAAM,CAAC9U,WAAW,CAAC+U,aAAa,EAAEroB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE,IAAI,EAAE2V,KAAK,CAAC;cACrFC,IAAI,CAACM,IAAI,CAAC,UAAUC,CAAC,EAAE;gBACnB,IAAIA,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,KAAK6B,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,EAAE;kBACrGpC,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,GAAG+Q,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC;kBACjG6B,IAAI,CAACulB,WAAW,CAACgC,UAAU,CAAC,GAAGpU,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC;kBACvF6B,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAAC,aAAa,CAAC,GAAG+Q,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC;kBACtGuB,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAAC7C,IAAI,CAACiS,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAAC;gBACnF;gBACA,IAAI6pB,MAAM,GAAGhoB,IAAI,CAACoC,IAAI,CAACb,eAAe,CAAC8C,MAAM,CAAClG,QAAQ,CAAC,CAAC;gBACxD,IAAIuB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,IAAI,CAAC5D,iBAAiB,CAAC+Z,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAAC,IAC/FmW,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,KAAK6pB,MAAM,EAAE;kBACrEtoB,KAAK,CAACvE,MAAM,CAAC+K,cAAc,CAAC,QAAQ,EAAEiN,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,EAAEgD,IAAI,CAACoC,IAAI,CAACb,eAAe,EAAE,IAAI,CAAC;kBACrH7B,KAAK,CAACvE,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAEiN,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,EAAEhnB,IAAI,CAACoC,IAAI,CAAC;kBACrE1C,KAAK,CAACvE,MAAM,CAAC+K,cAAc,CAACxG,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAEmW,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,EAAEgD,IAAI,CAACoC,IAAI,CAAC;kBACjH1C,KAAK,CAACvE,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAEiN,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,EAAE6B,IAAI,CAACoC,IAAI,CAACb,eAAe,EAAE,IAAI,CAAC;kBACrI7B,KAAK,CAAConB,0BAA0B,CAAC3T,CAAC,EAAEnT,IAAI,CAAC;kBACzC,IAAIioB,QAAQ,GAAGvoB,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAACmlB,MAAM,CAAC;kBAC/C,IAAIC,QAAQ,KAAK,CAAC,CAAC,EAAE;oBACjBvoB,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAACkkB,QAAQ,CAAC,GAAG9U,CAAC,CAAC6T,YAAY,CAAC,CAAC,CAAC,CAACtnB,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC;kBACzF;gBACJ;gBACAuB,KAAK,CAACwoB,eAAe,CAACR,cAAc,EAAE1nB,IAAI,CAAC;cAC/C,CAAC,CAAC,CAACqT,KAAK,CAAC,UAAUF,CAAC,EAAE;gBAClBzT,KAAK,CAACyoB,iBAAiB,CAAC,CAAC;gBACzBzoB,KAAK,CAAC4T,SAAS,CAACH,CAAC,EAAEnT,IAAI,CAAC;gBACxBN,KAAK,CAAC0oB,gBAAgB,CAAC,CAAC;cAC5B,CAAC,CAAC;YACN,CAAC,MACI;cACD,IAAIpB,YAAY,GAAG,cAAc;cACjC,IAAIqB,UAAU,GAAGP,MAAM,CAACQ,MAAM,CAACP,aAAa,CAACf,YAAY,CAAC,EAAE,IAAI,EAAErU,KAAK,CAAC;cACxE0V,UAAU,CAACnV,IAAI,CAAC,UAAUC,CAAC,EAAE;gBACzB,IAAI6T,YAAY;gBAChB,IAAI,CAAC5tB,iBAAiB,CAAC+Z,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;kBAC1B6T,YAAY,GAAG7T,CAAC,CAAC,CAAC,CAAC;gBACvB,CAAC,MACI;kBACD6T,YAAY,GAAGe,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACnD;gBACAL,cAAc,CAAC5c,OAAO,CAAC,UAAUhH,MAAM,EAAE;kBACrC,IAAI,CAAC1K,iBAAiB,CAAC0K,MAAM,CAAC,EAAE;oBAC5BpE,KAAK,CAACuU,wBAAwB,CAAC+S,YAAY,EAAEljB,MAAM,CAAC;oBACpDpE,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAACkL,cAAc,CAAC5L,MAAM,CAAC;kBACrD;gBACJ,CAAC,CAAC;gBACFpE,KAAK,CAACwoB,eAAe,CAACR,cAAc,EAAE1nB,IAAI,CAAC;cAC/C,CAAC,CAAC,CAACqT,KAAK,CAAC,UAAUF,CAAC,EAAE;gBAClBzT,KAAK,CAACyoB,iBAAiB,CAAC,CAAC;gBACzBzoB,KAAK,CAAC4T,SAAS,CAACH,CAAC,EAAEnT,IAAI,CAAC;gBACxBN,KAAK,CAAC0oB,gBAAgB,CAAC,CAAC;cAC5B,CAAC,CAAC;YACN;UACJ,CAAC,MACI;YACD,IAAI1oB,KAAK,CAACvE,MAAM,CAACuH,QAAQ,KAAK,aAAa,EAAE;cACzC,IAAKkgB,WAAW,KAAK,KAAK,IAAIA,WAAW,KAAK,QAAQ,IAChDA,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,OAAO,IAAKxpB,iBAAiB,CAACwpB,WAAW,CAAC,IAAI,CAAC5iB,IAAI,CAACoC,IAAI,CAAC8I,UAAW,EAAE;gBAC9I,IAAIlL,IAAI,CAACoC,IAAI,YAAYmb,KAAK,EAAE;kBAC5B7d,KAAK,CAACgnB,oBAAoB,CAAC1mB,IAAI,CAACoC,IAAI,EAAEwgB,WAAW,CAAC;gBACtD,CAAC,MACI;kBACD,IAAI2F,MAAM,GAAG,EAAE;kBACfA,MAAM,CAACrnB,IAAI,CAAClB,IAAI,CAACoC,IAAI,CAAC;kBACtB1C,KAAK,CAACgnB,oBAAoB,CAAC6B,MAAM,EAAE3F,WAAW,CAAC;kBAC/CljB,KAAK,CAACvE,MAAM,CAACqmB,gBAAgB,GAAGkG,cAAc,CAAC,CAAC,CAAC;gBACrD;cACJ;YACJ,CAAC,MACI;cACD,IAAIxnB,UAAU,GAAG5F,eAAe,CAACoF,KAAK,CAACvE,MAAM,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,EAAEkG,KAAK,CAACvE,MAAM,CAAC+E,UAAU,CAAC,GACxFR,KAAK,CAACvE,MAAM,CAAC+E,UAAU,CAAC,CAAC;cAC7BA,UAAU,CAACgB,IAAI,CAAClB,IAAI,CAACoC,IAAI,CAAC6C,QAAQ,CAAC;YACvC;YACA,IAAIyiB,cAAc,CAACzO,KAAK,KAAK,CAAC,EAAE;cAC5BvZ,KAAK,CAACvE,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAAC7G,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEujB,cAAc,CAAC;YACjE;YACAhoB,KAAK,CAACwZ,sBAAsB,CAACwO,cAAc,EAAE,KAAK,CAAC;YACnD,IAAIhoB,KAAK,CAACvE,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAIhD,KAAK,CAACvE,MAAM,CAAC6H,cAAc,IAAItD,KAAK,CAACvE,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,EAAE;cACzH,IAAIwlB,SAAS,GAAG,KAAK;cACrB,IAAIxoB,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,EAAE;gBAC9BomB,SAAS,GAAG,IAAI;cACpB,CAAC,MACI;gBACD,IAAIxoB,IAAI,CAACoC,IAAI,CAAC,YAAY,CAAC,EAAE;kBACzB,IAAI8V,UAAU,GAAGxY,KAAK,CAACvE,MAAM,CAACiV,iBAAiB,CAACpQ,IAAI,CAACoC,IAAI,CAAC,YAAY,CAAC,CAAC6H,QAAQ,CAAC;kBACjF,IAAIiO,UAAU,CAAC3W,eAAe,CAAC4W,QAAQ,KAAKzY,KAAK,CAACvE,MAAM,CAACid,SAAS,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE;oBAC9FmQ,SAAS,GAAG,IAAI;kBACpB;gBACJ;cACJ;cACA,IAAI9oB,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAInD,KAAK,CAACvE,MAAM,CAAC6H,cAAc,IAAItD,KAAK,CAACvE,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAItD,KAAK,CAACvE,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,KAAK,QAAQ,IAClMwlB,SAAS,EAAE;gBACd,IAAIpG,cAAc,GAAG1iB,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACjD,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC9E,IAAI4lB,SAAS,GAAGrG,cAAc,CAACjX,YAAY,CAAC1H,MAAM,CAAC,UAAUrB,IAAI,EAAE;kBAAE,OAAOA,IAAI,CAACb,eAAe,CAAC8C,MAAM,KAAKrE,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,CAACiC,MAAM;gBAAE,CAAC,CAAC;gBACnJ,IAAIrE,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,EAAE;kBAC9BqmB,SAAS,GAAGzoB,IAAI,CAACoC,IAAI,CAAC,cAAc,CAAC;gBACzC;gBACA,IAAIsmB,OAAO,GAAG,SAAAA,CAAUznB,CAAC,EAAE;kBACvB,IAAImhB,cAAc,CAACjX,YAAY,CAACrS,MAAM,KAAK,CAAC,EAAE;oBAC1C4G,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAACzE,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACnEnD,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACzE,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC9DnD,KAAK,CAACvE,MAAM,CAACod,OAAO,CAACpU,MAAM,CAACzE,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;kBACtE,CAAC,MACI;oBACD,IAAI2U,KAAK,GAAG9X,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,GAAG,GAAG4lB,SAAS,CAACxnB,CAAC,CAAC,CAACM,eAAe,CAAC8C,MAAM,CAAC;oBACnF,IAAIskB,IAAI,GAAG,GAAG,GAAGF,SAAS,CAACxnB,CAAC,CAAC,CAACM,eAAe,CAAC8C,MAAM;oBACpD,IAAIukB,OAAO,GAAGlpB,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC4F,MAAM,CAAC,UAAU0K,CAAC,EAAE1V,CAAC,EAAExa,CAAC,EAAE;sBACzD,IAAIwa,CAAC,KAAKwV,IAAI,EAAE;wBACZE,CAAC,CAAC3nB,IAAI,CAACvI,CAAC,CAAC;sBACb;sBACA,OAAOkwB,CAAC;oBACZ,CAAC,EAAE,EAAE,CAAC;oBACNrR,KAAK,GAAGoR,OAAO,CAACA,OAAO,CAAC9vB,MAAM,GAAG,CAAC,CAAC;oBACnC4G,KAAK,CAACvE,MAAM,CAACod,OAAO,CAACpU,MAAM,CAACqT,KAAK,EAAE,CAAC,CAAC;oBACrC9X,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAACqT,KAAK,EAAE,CAAC,CAAC;oBACtC9X,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACqT,KAAK,EAAE,CAAC,CAAC;kBACrC;gBACJ,CAAC;gBACD,KAAK,IAAIvW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwnB,SAAS,CAAC3vB,MAAM,EAAEmI,CAAC,EAAE,EAAE;kBACvCynB,OAAO,CAACznB,CAAC,CAAC;gBACd;gBACA,IAAImhB,cAAc,IAAI1iB,KAAK,CAACvE,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;kBAC5D,IAAIc,OAAO,GAAG9D,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACjD,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;kBAC3E,IAAI,CAACW,OAAO,EAAE;oBACV9D,KAAK,CAACvE,MAAM,CAACwH,QAAQ,CAACwB,MAAM,CAACzE,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBACnEnD,KAAK,CAACvE,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACzE,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;oBAC9DnD,KAAK,CAACvE,MAAM,CAACod,OAAO,CAACpU,MAAM,CAACzE,KAAK,CAACvE,MAAM,CAACod,OAAO,CAAC1V,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;kBACtE;gBACJ;cACJ;YACJ;YACAnD,KAAK,CAACopB,uBAAuB,CAAC9oB,IAAI,EAAE0nB,cAAc,CAAC;YACnD,IAAIhoB,KAAK,CAACvE,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAIhD,KAAK,CAACvE,MAAM,CAACqB,UAAU,CAACqM,IAAI,IAAIhH,SAAS,EAAE;cACvFnC,KAAK,CAACvE,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC9L,SAAS,EAAE,IAAI,CAAC;YACjE;YACAnC,KAAK,CAACunB,oBAAoB,CAACnjB,MAAM,EAAE9D,IAAI,CAAC;YACxCN,KAAK,CAAC0oB,gBAAgB,CAAC,CAAC;UAC5B;UACA1oB,KAAK,CAACvE,MAAM,CAACssB,SAAS,GAAG,KAAK;QAClC,CAAC,MACI;UACD/nB,KAAK,CAACyoB,iBAAiB,CAAC,CAAC;UACzBzoB,KAAK,CAACkQ,uBAAuB,CAAC,CAAC;UAC/BlQ,KAAK,CAAC0oB,gBAAgB,CAAC,CAAC;QAC5B;MACJ,CAAC,CAAC;IACN;EACJ,CAAC;EACDntB,IAAI,CAACjC,SAAS,CAAC+vB,eAAe,GAAG,YAAY;IACzC,IAAIC,UAAU,GAAG,CAAC,CAAC;IACnB,IAAIzpB,YAAY,GAAG,IAAI,CAACpE,MAAM,CAACoE,YAAY;IAC3C,IAAI0pB,kBAAkB,GAAG,IAAI,CAAC9tB,MAAM,CAACqB,UAAU;IAC/C,IAAI6H,MAAM,GAAG,IAAI,CAAClJ,MAAM,CAACuG,UAAU,CAAC6gB,YAAY,CAAC,CAAC;IAClD,KAAK,IAAI5pB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4G,YAAY,CAACzG,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC1C,IAAIuwB,SAAS,GAAG3pB,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK;MACrC,IAAI4qB,SAAS,KAAKD,kBAAkB,CAACjsB,EAAE,EAAE;QACrCgsB,UAAU,CAACE,SAAS,CAAC,GAAG7kB,MAAM;MAClC,CAAC,MACI,IAAI9E,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAACnkB,SAAS,EAAE;QAC7D,IAAI1L,iBAAiB,CAAC4vB,UAAU,CAACC,kBAAkB,CAAClkB,OAAO,CAAC,CAAC,EAAE;UAC3DikB,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI,CAAC/tB,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACusB,mBAAmB,CAAC,CAAC;QACrF,CAAC,MACI;UACDH,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI7iB,IAAI,CAAC2iB,UAAU,CAACC,kBAAkB,CAAClkB,OAAO,CAAC,CAAC;QAC5E;QACA,IAAI,IAAI,CAAC5J,MAAM,CAACulB,QAAQ,EAAE;UACtBsI,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI,CAAC/tB,MAAM,CAACwJ,oBAAoB,CAACsc,MAAM,CAAC+H,UAAU,CAACE,SAAS,CAAC,EAAE,IAAI,CAAC/tB,MAAM,CAACulB,QAAQ,CAAC;QAChH;MACJ,CAAC,MACI,IAAInhB,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAAClkB,OAAO,EAAE;QAC3D,IAAI3L,iBAAiB,CAAC4vB,UAAU,CAACC,kBAAkB,CAACnkB,SAAS,CAAC,CAAC,EAAE;UAC7DkkB,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI,CAAC/tB,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAACusB,mBAAmB,CAAC,CAAC;QACrF,CAAC,MACI;UACDH,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI7iB,IAAI,CAAC2iB,UAAU,CAACC,kBAAkB,CAACnkB,SAAS,CAAC,CAAC;QAC9E;QACA,IAAI,IAAI,CAAC3J,MAAM,CAACulB,QAAQ,EAAE;UACtBsI,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI,CAAC/tB,MAAM,CAACwJ,oBAAoB,CAACsc,MAAM,CAAC+H,UAAU,CAACE,SAAS,CAAC,EAAE,IAAI,CAAC/tB,MAAM,CAACulB,QAAQ,CAAC;QAChH;MACJ,CAAC,MACI,IAAInhB,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAAC1kB,QAAQ,EAAE;QAC5DykB,UAAU,CAACE,SAAS,CAAC,GAAG,CAAC;MAC7B,CAAC,MACI,IAAI3pB,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAAC3oB,IAAI,EAAE;QACxD0oB,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI,CAAC/tB,MAAM,CAACuG,UAAU,CAAC9E,YAAY,CAAC,WAAW,CAAC,CAACyb,WAAW,CAAC,gBAAgB,CAAC,GAAG,GAAG,GAAGhU,MAAM;MACzH,CAAC,MACI,IAAI9E,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAACprB,QAAQ,EAAE;QAC5DmrB,UAAU,CAACE,SAAS,CAAC,GAAG,CAAC;MAC7B,CAAC,MACI,IAAI3pB,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAACpgB,IAAI,EAAE;QACxDmgB,UAAU,CAACE,SAAS,CAAC,GAAG,CAAC;MAC7B,CAAC,MACI,IAAI3pB,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAAClrB,IAAI,IAAIwB,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK,UAAU,EAAE;QAChG0qB,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI,CAAC/tB,MAAM,CAACgO,QAAQ;MAChD,CAAC,MACI,IAAI5J,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,KAAK2qB,kBAAkB,CAAClmB,SAAS,EAAE;QAC7DimB,UAAU,CAACE,SAAS,CAAC,GAAG,IAAI;MAChC,CAAC,MACI;QACDF,UAAU,CAAC,IAAI,CAAC7tB,MAAM,CAACoE,YAAY,CAAC5G,CAAC,CAAC,CAAC2F,KAAK,CAAC,GAAG,EAAE;MACtD;IACJ;IACA,OAAO0qB,UAAU;EACrB,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI/tB,IAAI,CAACjC,SAAS,CAAC2uB,oBAAoB,GAAG,UAAUvlB,IAAI,EAAEwgB,WAAW,EAAE7gB,QAAQ,EAAE4W,YAAY,EAAE;IACvF,IAAI2I,gBAAgB,GAAGloB,iBAAiB,CAAC2I,QAAQ,CAAC,IAAIwE,KAAK,CAACrI,QAAQ,CAAC6D,QAAQ,CAAC5D,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAC1F,IAAI,CAAChD,MAAM,CAAC8hB,eAAe,GACvB,CAAC,IAAI,CAAC9hB,MAAM,CAAC6hB,iBAAiB,CAAC1gB,IAAI,KAAK,KAAK,IAAI,IAAI,CAACnB,MAAM,CAAC6hB,iBAAiB,CAAC1gB,IAAI,KAAK,MAAM,KAC1F,IAAI,CAACnB,MAAM,CAAC8hB,eAAe,CAACmM,kBAAkB,CAACtwB,MAAM,KAAK,CAAC,GAC3D,IAAI,CAACqC,MAAM,CAAC8hB,eAAe,CAACmM,kBAAkB,CAAC,CAAC,CAAC,GACjD,IAAI,CAACjuB,MAAM,CAAC6hB,iBAAiB,CAAC1gB,IAAI,KAAK,MAAM,IACzC,IAAI,CAACnB,MAAM,CAAC8hB,eAAe,CAACoM,yBAAyB,CAAC,CAAC,CAACvwB,MAAM,KAAK,CAAC,GACpE,IAAI,CAACqC,MAAM,CAAC8hB,eAAe,CAACoM,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACtnB,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAGA,QAAQ;IAC5G,IAAI,CAACyhB,kBAAkB,GAAGpqB,iBAAiB,CAACkoB,gBAAgB,CAAC,GAAG,IAAI,GAAG,IAAI,CAACnmB,MAAM,CAACmuB,cAAc,CAAChI,gBAAgB,CAAC;IACnHsB,WAAW,GAAGxpB,iBAAiB,CAACwpB,WAAW,CAAC,GAAG,IAAI,CAACznB,MAAM,CAACiB,YAAY,CAACmtB,cAAc,GAAG3G,WAAW;IACpGxgB,IAAI,GAAGhJ,iBAAiB,CAACgJ,IAAI,CAAC,GAAG,IAAI,CAAC2mB,eAAe,CAAC,CAAC,GAAG3mB,IAAI;IAC9D,IAAK,CAAChJ,iBAAiB,CAACkoB,gBAAgB,CAAC,IAAIA,gBAAgB,GAAG,CAAC,IAC7DloB,iBAAiB,CAAC,IAAI,CAACoqB,kBAAkB,CAAC,MAAMZ,WAAW,KAAK,OAAO,IACpEA,WAAW,KAAK,OAAO,IACvBA,WAAW,KAAK,OAAO,CAAC,IAAK,CAACA,WAAW,IAAKA,WAAW,KAAK,OAAO,IACrEA,WAAW,KAAK,OAAO,IACvBA,WAAW,KAAK,OAAO,IAAIA,WAAW,KAAK,KAAK,IACnDA,WAAW,KAAK,QAAS,EAAE;MAC3BA,WAAW,GAAG,KAAK;IACvB;IACA,IAAI3J,KAAK,GAAG,CAAC;IACb,IAAI/N,UAAU;IACd,QAAQ0X,WAAW;MACf,KAAK,KAAK;MACV,KAAK,QAAQ;QACT,IAAI,IAAI,CAACznB,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;UACzCuW,KAAK,GAAG,CAAC;QACb,CAAC,MACI;UACDA,KAAK,GAAG,CAAC;QACb;QACA;MACJ,KAAK,OAAO;MACZ,KAAK,OAAO;QACRA,KAAK,GAAG,IAAI,CAACuK,kBAAkB,CAACvK,KAAK;QACrC/N,UAAU,GAAG,IAAI,CAAC/P,MAAM,CAAC2T,aAAa,CAAC,IAAI,CAAC0U,kBAAkB,CAACtY,UAAU,CAAC;QAC1E;MACJ,KAAK,OAAO;QACR+N,KAAK,GAAG,IAAI,CAACuK,kBAAkB,CAACvK,KAAK,GAAG,CAAC;QACzC/N,UAAU,GAAG,IAAI,CAACsY,kBAAkB;QACpC;IACR;IACA,IAAI,CAAC,IAAI,CAACroB,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,EAAE;MACnF,IAAI,CAAC0f,qBAAqB,CAACtgB,IAAI,EAAEwgB,WAAW,CAAC;IACjD;IACA,IAAI4G,SAAS,GAAI,IAAI,CAACpG,8BAA8B,CAAChhB,IAAI,EAAE6W,KAAK,EAAE2J,WAAW,EAAE1X,UAAU,EAAEnJ,QAAQ,CAAE;IACrG4W,YAAY,CAACzX,IAAI,CAACsoB,SAAS,CAAC;EAChC,CAAC;EACDvuB,IAAI,CAACjC,SAAS,CAACyd,cAAc,GAAG,YAAY;IACxC,IAAIrZ,QAAQ,GAAG,IAAI,CAACjC,MAAM,CAACiC,QAAQ;IACnC,IAAI4E,eAAe,GAAG,IAAI,CAAC7G,MAAM,CAAC6G,eAAe;IACjD,IAAIynB,QAAQ,GAAGznB,eAAe,CAAClJ,MAAM;IACrC,KAAK,IAAI0e,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGiS,QAAQ,EAAEjS,KAAK,EAAE,EAAE;MAC3C,IAAI1V,GAAG,GAAG1E,QAAQ,CAACssB,aAAa,CAAClS,KAAK,CAAC;MACvC,IAAI1V,GAAG,EAAE;QACL,IAAIC,QAAQ,GAAGuE,MAAM,CAACxE,GAAG,CAACgP,YAAY,CAAC,eAAe,CAAC,CAAC;QACxD9O,eAAe,CAACwV,KAAK,CAAC,CAACA,KAAK,GAAGzV,QAAQ;QACvC,IAAIC,eAAe,CAACwV,KAAK,CAAC,CAACtM,UAAU,IAAIlJ,eAAe,CAACwV,KAAK,CAAC,CAACtM,UAAU,CAAC7G,MAAM,EAAE;UAC/E,IAAIuT,YAAY,GAAG,IAAI,CAACzc,MAAM,CAAC2H,aAAa,CAACd,eAAe,CAACwV,KAAK,CAAC,CAACtM,UAAU,CAAC7G,MAAM,CAAC;UACtFrC,eAAe,CAACwV,KAAK,CAAC,CAACtM,UAAU,CAACsM,KAAK,GAAGI,YAAY,CAACJ,KAAK;UAC5DxV,eAAe,CAACwV,KAAK,CAAC,CAACtM,UAAU,CAAC+N,KAAK,GAAGrB,YAAY,CAACqB,KAAK;QAChE;MACJ;IACJ;EACJ,CAAC;EACDhe,IAAI,CAACjC,SAAS,CAACkvB,eAAe,GAAG,UAAUvP,YAAY,EAAE3Y,IAAI,EAAE;IAC3D,IAAIN,KAAK,GAAG,IAAI;IAChBiZ,YAAY,CAAC7N,OAAO,CAAC,UAAUhH,MAAM,EAAE;MACnC,IAAIA,MAAM,CAACmV,KAAK,KAAK,CAAC,EAAE;QACpBvZ,KAAK,CAACvE,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAAC7G,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAAC;QACrD,IAAI+d,QAAQ,GAAGroB,QAAQ,CAAC,yBAAyB,EAAEkG,KAAK,CAACvE,MAAM,CAAC;QAChE0mB,QAAQ,CAAC1d,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEL,MAAM,CAACmB,QAAQ,CAAC;MAC1C;MACAvF,KAAK,CAACwZ,sBAAsB,CAACpV,MAAM,EAAE,KAAK,CAAC;IAC/C,CAAC,CAAC;IACF,IAAI,CAACoV,sBAAsB,CAACP,YAAY,EAAE,KAAK,CAAC;IAChD,IAAI,CAACmQ,uBAAuB,CAAC9oB,IAAI,EAAE2Y,YAAY,CAAC;IAChD,IAAIgR,aAAa,GAAG,CAAC,CAAC;IACtB,IAAI,CAAC1C,oBAAoB,CAAC0C,aAAa,EAAE3pB,IAAI,CAAC;IAC9C,IAAI,CAACooB,gBAAgB,CAAC,CAAC;EAC3B,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIntB,IAAI,CAACjC,SAAS,CAACovB,gBAAgB,GAAG,YAAY;IAC1C,IAAI,CAACjtB,MAAM,CAACiI,QAAQ,GAAG,KAAK;IAC5B,IAAI,CAACjI,MAAM,CAAC4b,WAAW,CAAC,CAAC;IACzB,IAAI,CAACyM,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAAC4B,sBAAsB,GAAG,IAAI;IAClC,IAAI,CAACppB,WAAW,GAAG,KAAK;IACxB,IAAI,CAACb,MAAM,CAAC8B,OAAO,CAAC2sB,QAAQ,GAAG,CAAC;IAChC,IAAI,CAACzuB,MAAM,CAACkgB,kBAAkB,CAAC,KAAK,CAAC;EACzC,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;EACIpgB,IAAI,CAACjC,SAAS,CAACkgB,sBAAsB,GAAG,UAAU9W,IAAI,EAAEiD,MAAM,EAAE;IAC5D,IAAIA,MAAM,KAAK,KAAK,EAAE;MAClB9L,QAAQ,CAAC,qBAAqB,GAAG6I,IAAI,CAAC6H,QAAQ,EAAE7H,IAAI,EAAE,IAAI,CAACjH,MAAM,CAACiC,QAAQ,CAAC;IAC/E,CAAC,MACI,IAAIiI,MAAM,KAAK,QAAQ,EAAE;MAC1B5L,YAAY,CAACD,QAAQ,CAAC,oBAAoB,EAAE,IAAI,CAAC2B,MAAM,CAACiC,QAAQ,CAAC,EAAEgF,IAAI,CAAC6H,QAAQ,CAAC;IACrF;EACJ,CAAC;EACDhP,IAAI,CAACjC,SAAS,CAAC8vB,uBAAuB,GAAG,UAAU9oB,IAAI,EAAE2Y,YAAY,EAAE;IACnE,IAAI,IAAI,CAACxd,MAAM,CAAC8hB,eAAe,IAAI,IAAI,CAAC9hB,MAAM,CAACojB,cAAc,KACxD,IAAI,CAACpjB,MAAM,CAAC6hB,iBAAiB,CAAC1gB,IAAI,KAAK,KAAK,IAAI,IAAI,CAACnB,MAAM,CAAC6hB,iBAAiB,CAAC1gB,IAAI,KAAK,MAAM,CAAC,EAAE;MACjG,IAAI,CAACnB,MAAM,CAACkmB,sBAAsB,GAAG,IAAI,CAAClmB,MAAM,CAAC6G,eAAe,CAACa,OAAO,CAAC7C,IAAI,CAACoC,IAAI,CAAC;IACvF;IACA,IAAI,IAAI,CAACjH,MAAM,CAACwZ,gBAAgB,CAACC,mBAAmB,EAAE;MAClD,IAAIC,SAAS,GAAG,EAAE;MAClB,IAAI7U,IAAI,CAACsR,eAAe,CAACxY,MAAM,GAAG,CAAC,EAAE;QACjC+b,SAAS,GAAG7U,IAAI,CAACoC,IAAI,CAACtJ,MAAM,GAAG,CAAC,GAC5BQ,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE0G,IAAI,CAACoC,IAAI,EAAE,IAAI,CAAC,GAAG,CAACpC,IAAI,CAACoC,IAAI,CAAC,CAAC,CAAC;QACnDyS,SAAS,CAAC3T,IAAI,CAAC/H,KAAK,CAAC0b,SAAS,EAAE7U,IAAI,CAACsR,eAAe,CAAC;MACzD,CAAC,MACI;QACDuD,SAAS,GAAG7U,IAAI,CAACoC,IAAI,CAACtJ,MAAM,GAAG,CAAC,GAC5BQ,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE0G,IAAI,CAACoC,IAAI,EAAE,IAAI,CAAC,GAAG,CAACpC,IAAI,CAACoC,IAAI,CAAC;MACrD;MACA,IAAI,CAACjH,MAAM,CAAC2Z,cAAc,CAACC,uBAAuB,CAAC,CAACF,SAAS,CAAC,EAAE7U,IAAI,CAACqF,MAAM,CAAC;IAChF;IACA,IAAI,CAACmgB,UAAU,CAACxlB,IAAI,CAAC;IACrBA,IAAI,GAAG,IAAI,CAACqlB,2BAA2B,CAAC1M,YAAY,EAAE3Y,IAAI,CAACsR,eAAe,EAAE,KAAK,CAAC;IAClF,IAAI,IAAI,CAAC1U,YAAY,CAACitB,gBAAgB,IAAI,CAAC,IAAI,CAAC1uB,MAAM,CAAC2uB,MAAM,IAAI,IAAI,CAAC3uB,MAAM,CAACqB,UAAU,CAACqM,IAAI,EAAE;MAC1F,IAAI,CAAC1N,MAAM,CAACqJ,aAAa,CAACC,sBAAsB,CAACkU,YAAY,CAAC,CAAC,CAAC,CAAC;IACrE;IACA,IAAI,CAAClC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACtb,MAAM,CAAC4W,OAAO,CAAC,gBAAgB,EAAE/R,IAAI,CAAC;IAC3C,IAAI,CAAC5G,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACiX,gBAAgB,CAAC,IAAI,IAAI,CAACjX,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;MAC9G,IAAI,CAAClX,MAAM,CAAC2b,WAAW,CAAC,CAAC;IAC7B,CAAC,MACI;MACD,IAAI,CAAC3b,MAAM,CAAC4b,WAAW,CAAC,CAAC;IAC7B;IACA,IAAI,IAAI,CAACna,YAAY,CAACqe,MAAM,IAAI,CAAC,IAAI,CAACre,YAAY,CAACse,SAAS,CAACtZ,WAAW,EAAE;MACtE,IAAI,CAAChF,YAAY,CAACse,SAAS,CAACC,IAAI,CAAC,CAAC;IACtC;IACA,IAAI,CAACve,YAAY,CAACwe,WAAW,CAAC,CAAC;IAC/B,IAAI,IAAI,CAACjgB,MAAM,CAACuH,QAAQ,KAAK,cAAc,EAAE;MACzC,IAAIiW,YAAY,CAAC7f,MAAM,GAAG,CAAC,EAAE;QACzB,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGggB,YAAY,CAAC7f,MAAM,EAAEH,CAAC,EAAE,EAAE;UAC1CqH,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAAC4I,eAAe,CAACiT,mBAAmB,CAACtT,IAAI,CAAClB,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAC7D4I,eAAe,CAACkP,WAAW,CAAC;UACjC,IAAIzQ,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAAC4I,eAAe,CAACzD,YAAY,EAAE;YAC3C;YACA,IAAIqC,SAAS,GAAG7G,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE0G,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAAC4I,eAAe,CAACzD,YAAY,EAAE,IAAI,CAAC;YAC/EqC,SAAS,CAACgE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,IAAI,CAAC6Q,cAAc,CAAC,EAAE,EAAE7U,SAAS,EAAEH,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAAC;YAChD;UACJ,CAAC,MACI;YACD,IAAI,CAAC,IAAI,CAACwC,MAAM,CAAC6H,cAAc,IAAK,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,IAAI,CAAChD,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAACwC,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAE,EAAE;cAC5M,IAAI,CAACiV,iBAAiB,CAACjY,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAAC;cACpC,IAAI,CAACwC,MAAM,CAACuG,UAAU,CAAC4W,uBAAuB,CAACtY,IAAI,CAACoC,IAAI,CAACzJ,CAAC,CAAC,CAAC;YAChE;UACJ;UACA,KAAK,IAAIuL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvI,mBAAmB,CAAC7C,MAAM,EAAEoL,CAAC,EAAE,EAAE;YACtD,IAAI,CAAC/I,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC,IAAI,CAAChS,mBAAmB,CAACuI,CAAC,CAAC,CAAC;UAC5E;UACA,IAAI,CAACvI,mBAAmB,GAAG,EAAE;QACjC;MACJ,CAAC,MACI;QACDqE,IAAI,CAACoC,IAAI,CAACb,eAAe,CAACiT,mBAAmB,CAACtT,IAAI,CAAClB,IAAI,CAACoC,IAAI,CAACb,eAAe,CAACkP,WAAW,CAAC;QACzF;QACA,IAAIzQ,IAAI,CAACoC,IAAI,CAACb,eAAe,CAACzD,YAAY,IAAIkC,IAAI,CAACoC,IAAI,CAACb,eAAe,CAACzD,YAAY,CAAChF,MAAM,EAAE;UACzF,IAAIkH,IAAI,CAACoC,IAAI,CAACb,eAAe,CAACzD,YAAY,CAAChF,MAAM,GAAG,CAAC,EAAE;YACnD;YACA,IAAIqH,SAAS,GAAG7G,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE0G,IAAI,CAACoC,IAAI,CAACb,eAAe,CAACzD,YAAY,EAAE,IAAI,CAAC;YAC5EqC,SAAS,CAACgE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;YACtB,IAAI,CAAC6Q,cAAc,CAAC,EAAE,EAAE7U,SAAS,EAAEH,IAAI,CAACoC,IAAI,CAAC;UACjD;QACJ,CAAC,MACI;UACD,IAAI,CAAC,IAAI,CAACjH,MAAM,CAAC6H,cAAc,IAAK,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,IAAI,CAAChD,IAAI,CAACoC,IAAI,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAACjH,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAE,EAAE;YACzM,IAAI,CAACiV,iBAAiB,CAACjY,IAAI,CAACoC,IAAI,CAAC;YACjC,IAAI,CAACjH,MAAM,CAACuG,UAAU,CAAC4W,uBAAuB,CAACtY,IAAI,CAACoC,IAAI,CAAC;UAC7D;QACJ;QACA,KAAK,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvI,mBAAmB,CAAC7C,MAAM,EAAEoL,CAAC,EAAE,EAAE;UACtD,IAAI,CAAC/I,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC,IAAI,CAAChS,mBAAmB,CAACuI,CAAC,CAAC,CAAC;QAC5E;QACA,IAAI,CAACvI,mBAAmB,GAAG,EAAE;MACjC;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIV,IAAI,CAACjC,SAAS,CAACmvB,iBAAiB,GAAG,YAAY;IAC3C,IAAI9Q,WAAW,GAAG,IAAI,CAAClc,MAAM,CAACwH,QAAQ;IACtC,IAAIX,eAAe,GAAG,IAAI,CAAC7G,MAAM,CAAC6G,eAAe;IACjD,IAAI+B,GAAG,GAAG,IAAI,CAAC5I,MAAM,CAAC4I,GAAG;IACzB,IAAIgmB,gBAAgB,GAAG1S,WAAW,CAACxU,OAAO,CAAC,IAAI,CAACuiB,sBAAsB,CAAC;IACvE,IAAI4E,oBAAoB,GAAGhoB,eAAe,CAACa,OAAO,CAAC,IAAI,CAACuiB,sBAAsB,CAAC;IAC/E,IAAI6C,QAAQ,GAAGlkB,GAAG,CAAClB,OAAO,CAAC,IAAI,CAACuiB,sBAAsB,CAAC7jB,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;IAC9F1E,YAAY,CAAC,IAAI,CAAC0B,MAAM,CAAC6O,eAAe,EAAEqN,WAAW,CAAC0S,gBAAgB,CAAC,CAAC9f,QAAQ,CAAC;IACjF,IAAI,IAAI,CAACmb,sBAAsB,CAACla,UAAU,EAAE;MACxC,IAAIA,UAAU,GAAG,IAAI,CAAC/P,MAAM,CAAC2T,aAAa,CAAC,IAAI,CAACsW,sBAAsB,CAACla,UAAU,CAAC;MAClF,IAAI+e,WAAW,GAAG/e,UAAU,CAACC,YAAY,CAACtI,OAAO,CAAC,IAAI,CAACuiB,sBAAsB,CAAC;MAC9Ela,UAAU,CAACC,YAAY,CAAChH,MAAM,CAAC8lB,WAAW,EAAE,CAAC,CAAC;IAClD;IACA5S,WAAW,CAAClT,MAAM,CAAC4lB,gBAAgB,EAAE,CAAC,CAAC;IACvC/nB,eAAe,CAACmC,MAAM,CAAC6lB,oBAAoB,EAAE,CAAC,CAAC;IAC/CjmB,GAAG,CAACI,MAAM,CAAC8jB,QAAQ,EAAE,CAAC,CAAC;EAC3B,CAAC;EACDhtB,IAAI,CAACjC,SAAS,CAACkxB,kBAAkB,GAAG,YAAY;IAC5C,IAAIC,UAAU,GAAG,IAAI,CAAChvB,MAAM,CAACmuB,cAAc,CAAC,IAAI,CAACnuB,MAAM,CAAC8hB,eAAe,CAACmN,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACvG,IAAIC,cAAc,GAAG,IAAI,CAAClvB,MAAM,CAAC8hB,eAAe,CAACC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,IAAI/hB,MAAM,GAAG,IAAI,CAACA,MAAM,CAACmvB,aAAa,CAACH,UAAU,EAAEE,cAAc,CAACpR,KAAK,CAAC;IACxE,IAAIsR,SAAS,GAAG,IAAI,CAACpvB,MAAM,CAACmuB,cAAc,CAACzmB,OAAO,CAAC1H,MAAM,CAAC;IAC1D,OAAOovB,SAAS;EACpB,CAAC;EACD;AACJ;AACA;AACA;AACA;EACItvB,IAAI,CAACjC,SAAS,CAACwxB,MAAM,GAAG,YAAY;IAChC,IAAIhT,KAAK,GAAG,IAAI,CAACrc,MAAM,CAACmmB,gBAAgB;IACxC,IAAImJ,UAAU,GAAG,IAAI,CAACtvB,MAAM,CAAC8hB,eAAe,GAAG,IAAI,CAAC9hB,MAAM,CAAC8hB,eAAe,CAACmM,kBAAkB,CAACtwB,MAAM,KAAK,CAAC,IACtG,IAAI,CAACqC,MAAM,CAAC8hB,eAAe,CAACoM,yBAAyB,CAAC,CAAC,CAACvwB,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK;IAC/F,IAAI4xB,SAAS;IACb,IAAIP,UAAU,GAAG,IAAI,CAAChvB,MAAM,CAACmuB,cAAc,CAAC,IAAI,CAACnuB,MAAM,CAAC8hB,eAAe,CAACmN,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACvG,IAAIC,cAAc,GAAG,IAAI,CAAClvB,MAAM,CAAC8hB,eAAe,CAACC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,IAAI,CAAC,IAAI,CAAC/hB,MAAM,CAACiB,YAAY,CAACC,YAAY,IAAImb,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,CAAC,IAAI,CAACiT,UAAU,IACpF,IAAI,CAACtvB,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAI,CAACtJ,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACmuB,cAAc,CAAC9R,KAAK,CAAC,CAAC,IAAI,IAAI,CAACrc,MAAM,CAACmuB,cAAc,CAAC9R,KAAK,CAAC,CAACyB,KAAK,GAAGkR,UAAU,CAAClR,KAAK,KAAK,CAAC,EAAE;MACtK;IACJ,CAAC,MACI;MACD,IAAIkR,UAAU,CAAClR,KAAK,GAAGoR,cAAc,CAACpR,KAAK,KAAK,CAAC,EAAE;QAC/CyR,SAAS,GAAG,IAAI,CAACvvB,MAAM,CAAC8hB,eAAe,CAACmN,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAC1E,CAAC,MACI;QACDM,SAAS,GAAG,IAAI,CAACR,kBAAkB,CAAC,CAAC;MACzC;MACA,IAAI,CAACS,gBAAgB,CAAC,CAAC,IAAI,CAACxvB,MAAM,CAAC8hB,eAAe,CAACmN,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAEM,SAAS,EAAE,OAAO,CAAC;IACvG;EACJ,CAAC;EACD;AACJ;AACA;AACA;AACA;EACIzvB,IAAI,CAACjC,SAAS,CAAC4xB,OAAO,GAAG,YAAY;IACjC,IAAIpT,KAAK,GAAG,IAAI,CAACrc,MAAM,CAAC8hB,eAAe,CAACmN,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC;IAClE,IAAIM,SAAS;IACb,IAAID,UAAU,GAAG,IAAI,CAACtvB,MAAM,CAAC8hB,eAAe,GAAG,IAAI,CAAC9hB,MAAM,CAAC8hB,eAAe,CAACmM,kBAAkB,CAACtwB,MAAM,KAAK,CAAC,IACtG,IAAI,CAACqC,MAAM,CAAC8hB,eAAe,CAACoM,yBAAyB,CAAC,CAAC,CAACvwB,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK;IAC/F,IAAI,CAAC,IAAI,CAACqC,MAAM,CAACiB,YAAY,CAACC,YAAY,IAAImb,KAAK,KAAK,CAAC,CAAC,IAAIA,KAAK,KAAK,CAAC,IAAI,CAACiT,UAAU,IACpF,IAAI,CAACtvB,MAAM,CAACuH,QAAQ,KAAK,cAAc,IAAI,IAAI,CAACvH,MAAM,CAACmuB,cAAc,CAAC9R,KAAK,CAAC,CAACyB,KAAK,KAAK,CAAC,EAAE;MAC1F;IACJ,CAAC,MACI;MACD,IAAI4R,UAAU,GAAG,IAAI,CAAC1vB,MAAM,CAACiV,iBAAiB,CAAC,IAAI,CAACjV,MAAM,CAAC8hB,eAAe,CAACC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAChS,UAAU,CAACjB,QAAQ,CAAC;MACvHygB,SAAS,GAAG,IAAI,CAACvvB,MAAM,CAACmuB,cAAc,CAACzmB,OAAO,CAACgoB,UAAU,CAAC;MAC1D,IAAI,CAACF,gBAAgB,CAAC,CAACnT,KAAK,CAAC,EAAEkT,SAAS,EAAE,OAAO,CAAC;IACtD;EACJ,CAAC;EACDzvB,IAAI,CAACjC,SAAS,CAAC2xB,gBAAgB,GAAG,UAAUG,WAAW,EAAEpQ,OAAO,EAAEqQ,GAAG,EAAE;IACnE,IAAIrrB,KAAK,GAAG,IAAI;IAChB;IACA,IAAIorB,WAAW,CAAC,CAAC,CAAC,KAAKpQ,OAAO,IAAIqQ,GAAG,KAAK,OAAO,IAAI,OAAO,IAAI,OAAO,EAAE;MACrE,IAAIA,GAAG,KAAK,OAAO,EAAE;QACjB,IAAI,CAACC,YAAY,GAAG,YAAY;MACpC;MACA,IAAID,GAAG,KAAK,OAAO,EAAE;QACjB,IAAI,CAACC,YAAY,GAAG,eAAe;MACvC;MACA,IAAID,GAAG,KAAK,OAAO,EAAE;QACjB,IAAI,CAACC,YAAY,GAAG,eAAe;MACvC;MACA,IAAI3lB,MAAM,GAAG,KAAK,CAAC;MACnB,IAAIvB,MAAM,GAAG,EAAE;MACf,KAAK,IAAInL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmyB,WAAW,CAAChyB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACzC,IAAI,IAAI,CAACwC,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,EAAE;UAChI,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,EAAE;YAC/Dc,MAAM,CAACnL,CAAC,CAAC,GAAG,IAAI,CAACwC,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAACrK,CAAC,CAAC,CAACyJ,IAAI;UACrF,CAAC,MACI;YACD0B,MAAM,CAACnL,CAAC,CAAC,GAAG,IAAI,CAACwC,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAACrK,CAAC,CAAC;UACtE;QACJ,CAAC,MACI;UACDmL,MAAM,CAACnL,CAAC,CAAC,GAAG,IAAI,CAACwC,MAAM,CAACmuB,cAAc,CAACwB,WAAW,CAACnyB,CAAC,CAAC,CAAC;QAC1D;MACJ;MACA,IAAIsyB,YAAY,GAAG,IAAI;MACvB,IAAIC,MAAM,GAAG;QACT9oB,IAAI,EAAE0B,MAAM;QACZ4mB,SAAS,EAAEhQ,OAAO;QAClBsQ,YAAY,EAAE,IAAI,CAACA;MACvB,CAAC;MACD,IAAI,IAAI,CAACA,YAAY,KAAK,eAAe,EAAE;QACvC3lB,MAAM,GAAG,WAAW;MACxB,CAAC,MACI,IAAI,IAAI,CAAC2lB,YAAY,KAAK,eAAe,EAAE;QAC5C3lB,MAAM,GAAG,YAAY;MACzB;MACA,IAAI8lB,UAAU,GAAG;QACb9lB,MAAM,EAAEA,MAAM;QACdjD,IAAI,EAAE0B,MAAM,CAAC,CAAC,CAAC;QACf2I,MAAM,EAAE;MACZ,CAAC;MACD,IAAI,CAACtR,MAAM,CAAC4W,OAAO,CAAC,aAAa,EAAEoZ,UAAU,EAAE,UAAUC,SAAS,EAAE;QAChE,IAAI,CAAChyB,iBAAiB,CAACsG,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAAC,IAAI1S,KAAK,CAACvE,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;UAChH3S,KAAK,CAACvE,MAAM,CAACmX,WAAW,CAAC,CAAC;QAC9B,CAAC,MACI;UACD5S,KAAK,CAACvE,MAAM,CAACoX,WAAW,CAAC,CAAC;QAC9B;QACA,IAAI,CAAC6Y,SAAS,CAAC3e,MAAM,EAAE;UACnB/M,KAAK,CAAC2rB,aAAa,CAACH,MAAM,EAAED,YAAY,CAAC;QAC7C,CAAC,MACI;UACD;QACJ;MACJ,CAAC,CAAC;IACN,CAAC,MACI;MACD;IACJ;EACJ,CAAC;EACDhwB,IAAI,CAACjC,SAAS,CAACqyB,aAAa,GAAG,UAAUrrB,IAAI,EAAEsrB,UAAU,EAAE;IACvD,IAAI5rB,KAAK,GAAG,IAAI;IAChB,IAAI,CAACsrB,YAAY,GAAGhrB,IAAI,CAACgrB,YAAY;IACrC,IAAI,CAAC7vB,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE;IAC9B,IAAI,CAACA,MAAM,CAAC,YAAY,CAAC,GAAG7B,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE0G,IAAI,CAACoC,IAAI,EAAE,IAAI,CAAC;IAC3D,IAAIpC,IAAI,CAACgrB,YAAY,KAAK,SAAS,IAAI,IAAI,CAAC7vB,MAAM,CAACuG,UAAU,EAAE;MAC3D,IAAIihB,GAAG,GAAG,IAAI,CAACxnB,MAAM;MACrB,IAAIowB,UAAU,GAAG,KAAK,CAAC;MACvB,IAAI,CAAClR,aAAa,GAAGsI,GAAG,CAAC2G,cAAc,CAACtpB,IAAI,CAAC0qB,SAAS,CAAC;MACvD,IAAIrlB,MAAM,GAAGrF,IAAI,CAACgrB,YAAY,KAAK,eAAe,GAAG,QAAQ,GAAG,SAAS;MACzE,IAAI,IAAI,CAAC7vB,MAAM,CAAC6H,cAAc,IAAI,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC,uBAAuB,CAAC,CAACkK,MAAM,CAAC,EAAE;QAClI,IAAIvB,MAAM,GAAG,CAAC,CAAC;QACfA,MAAM,CAAC,QAAQ,CAAC,GAAGuB,MAAM;QACzBvB,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE;QAC7BA,MAAM,CAAC,oBAAoB,CAAC,GAAGxK,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC6B,MAAM,CAAC8hB,eAAe,CAACmM,kBAAkB,EAAE,IAAI,CAAC;QACnG,IAAI,CAACjuB,MAAM,CAAC6H,cAAc,CAAC,cAAc,CAAC,CAAC1J,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC0G,IAAI,CAACoC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE0B,MAAM,EAAE,gBAAgB,CAAC;QAC1GA,MAAM,CAAC,eAAe,CAAC,GAAGxK,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC+gB,aAAa,EAAE,IAAI,CAAC;QAClE,IAAI,IAAI,CAAClf,MAAM,CAAC6H,cAAc,CAAC,aAAa,CAAC,EAAE;UAC3C,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,aAAa,CAAC,GAAG,KAAK;UACjD,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,GAAG,EAAE;UACpD,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,GAAG,EAAE;UACpD,IAAI,IAAI,CAAC7H,MAAM,CAACgW,aAAa,EAAE;YAC3B,IAAI,CAAChW,MAAM,CAACgW,aAAa,CAACC,WAAW,CAAC,CAAC,IAAI,CAACjW,MAAM,CAACkW,SAAS,GAAG,OAAO,CAAC,EAAE,KAAK,CAAC;UACnF;UACA,IAAI,CAAClW,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QAC3D;QACA,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,sBAAsB,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,mBAAmB,CAAC,CAAClK,MAAM,GAAG,CAAC,CAAC,GAAGgL,MAAM;MACxH;MACA,IAAI0nB,WAAW,GAAG,EAAE;MACpB,IAAIC,UAAU,GAAG,IAAI,CAACpR,aAAa;MACnC,IAAI,CAACra,IAAI,CAACoC,IAAI,CAAC,CAAC,CAAC,EAAE;QACfopB,WAAW,CAACtqB,IAAI,CAAClB,IAAI,CAACoC,IAAI,CAAC;MAC/B,CAAC,MACI;QACDopB,WAAW,GAAGxrB,IAAI,CAACoC,IAAI;MAC3B;MACA,IAAIke,CAAC,GAAG,CAAC;MACT,IAAIoL,OAAO,GAAGF,WAAW,CAAC1yB,MAAM;MAChC,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+yB,OAAO,EAAE/yB,CAAC,EAAE,EAAE;QAC9B,IAAI,CAACwC,MAAM,CAACiI,QAAQ,GAAG,IAAI;QAC3BmoB,UAAU,GAAGC,WAAW,CAAC7yB,CAAC,CAAC;QAC3B,IAAI,CAAC2hB,aAAa,GAAGiR,UAAU;QAC/B,IAAI,IAAI,CAACP,YAAY,KAAK,SAAS,EAAE;UACjC,IAAIM,UAAU,EAAE;YACZ,IAAI,CAACK,aAAa,CAAC,CAAC;UACxB;UACA,IAAI3S,YAAY,GAAG,IAAI,CAAC4S,YAAY,CAAC/oB,OAAO,CAAC4oB,UAAU,CAAC;UACxD,IAAI,IAAI,CAACT,YAAY,KAAK,eAAe,EAAE;YACvC,IAAI,CAACS,UAAU,CAAChe,eAAe,EAAE;cAC7B,IAAI,IAAI,CAACtS,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,IAAI,IAAI,CAACrS,SAAS,CAAC/I,MAAM,GAAG,CAAC,EAAE;gBAC9D,IAAI,CAAC+I,SAAS,CAACsC,MAAM,CAAC6U,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAACsB,aAAa,CAACrV,QAAQ,CAAC;cAC3E;cACA,IAAI,CAAC2mB,YAAY,CAACznB,MAAM,CAAC6U,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAACsB,aAAa,CAAC;cACjE,IAAI,CAACnf,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC6U,YAAY,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAACsB,aAAa,CAAC/Y,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;YAC1G,CAAC,MACI;cACDmiB,CAAC,GAAG,IAAI,CAACnlB,MAAM,CAACuG,UAAU,CAAC0Y,aAAa,CAACqR,UAAU,EAAE,CAAC,CAAC;cACvD,IAAI,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,IAAI,IAAI,CAACrS,SAAS,CAAC/I,MAAM,GAAG,CAAC,EAAE;gBAC9D,IAAI,CAAC+I,SAAS,CAACsC,MAAM,CAAC6U,YAAY,GAAGsH,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAChG,aAAa,CAACrV,QAAQ,CAAC;cAC/E;cACA,IAAI,CAAC2mB,YAAY,CAACznB,MAAM,CAAC6U,YAAY,GAAGsH,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAChG,aAAa,CAAC;cACrE,IAAI,CAACnf,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC6U,YAAY,GAAGsH,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAChG,aAAa,CAAC/Y,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;cAC1G,IAAI0tB,OAAO,GAAG,IAAI,CAAC1wB,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAAC,IAAI,CAACyX,aAAa,CAAC,IAAI,CAACnf,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAAC;cAC/F,IAAI0tB,OAAO,KAAK7S,YAAY,GAAGsH,CAAC,GAAG,CAAC,EAAE;gBAClC,IAAI,CAACnlB,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC0nB,OAAO,EAAE,CAAC,CAAC;gBAClC,IAAI,CAAC1wB,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC6U,YAAY,GAAGsH,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,CAAChG,aAAa,CAAC,IAAI,CAACnf,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAAC;cAC7G;YACJ;YACA,IAAI,CAAChD,MAAM,CAAC+K,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC0lB,YAAY,CAAC5S,YAAY,CAAC,CAAC9N,UAAU,EAAEqgB,UAAU,CAAC;YAChG,IAAI,CAACpwB,MAAM,CAAC+K,cAAc,CAAC,gBAAgB,EAAE,IAAI,CAAC0lB,YAAY,CAAC5S,YAAY,CAAC,CAACD,cAAc,EAAEwS,UAAU,CAAC;YACxG,IAAI,CAACpwB,MAAM,CAAC+K,cAAc,CAAC,OAAO,EAAE,IAAI,CAAC0lB,YAAY,CAAC5S,YAAY,CAAC,CAACC,KAAK,EAAEsS,UAAU,CAAC;YACtF,IAAIA,UAAU,CAAC9d,eAAe,EAAE;cAC5B,IAAIwL,KAAK,GAAG,CAAC;cACb,IAAI,CAAC6S,sBAAsB,CAACP,UAAU,EAAEtS,KAAK,CAAC;cAC9C,IAAI,CAAC8S,iBAAiB,CAACR,UAAU,EAAEvS,YAAY,GAAGsH,CAAC,GAAG,CAAC,CAAC;YAC5D;YACA,IAAImL,UAAU,CAACvgB,UAAU,EAAE;cACvB,IAAIpH,MAAM,GAAG,IAAI,CAAC3I,MAAM,CAAC2T,aAAa,CAAC2c,UAAU,CAACvgB,UAAU,CAAC,CAACC,YAAY;cAC1E,IAAIA,YAAY,GAAGrH,MAAM;cACzB,IAAIkoB,kBAAkB,GAAG7gB,YAAY,CAACtI,OAAO,CAAC4oB,UAAU,CAAC,GAAG,CAAC;cAC7DtgB,YAAY,CAAChH,MAAM,CAAC6nB,kBAAkB,EAAE,CAAC,EAAET,UAAU,CAAC;YAC1D;UACJ;UACA,IAAI,IAAI,CAACP,YAAY,KAAK,eAAe,EAAE;YACvC,IAAI,CAACiB,UAAU,CAACjT,YAAY,CAAC;UACjC;UACA,IAAI,CAAC5f,iBAAiB,CAACmyB,UAAU,CAACrgB,UAAU,IAAI,IAAI,CAACvP,mBAAmB,CAACkH,OAAO,CAAC0oB,UAAU,CAACrgB,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAC7G,IAAI,CAACvP,mBAAmB,CAACuF,IAAI,CAAC,IAAI,CAAC/F,MAAM,CAACiV,iBAAiB,CAACmb,UAAU,CAACrgB,UAAU,CAACjB,QAAQ,CAAC,CAAC;UAChG;QACJ;QACA,IAAI7Q,iBAAiB,CAACmyB,UAAU,CAACrgB,UAAU,CAAC,EAAE;UAC1C,IAAIghB,aAAa,GAAG,IAAI,CAAC/wB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU;UACnD,IAAImhB,cAAc,GAAGD,aAAa,CAACrpB,OAAO,CAAC,IAAI,CAACwX,aAAa,CAAC;UAC9D,IAAI,IAAI,CAAC2Q,YAAY,KAAK,eAAe,EAAE;YACvCkB,aAAa,CAAC/nB,MAAM,CAACgoB,cAAc,GAAG,CAAC,EAAE,CAAC,EAAEZ,UAAU,CAAC;UAC3D;QACJ;QACA,IAAI,CAACa,iBAAiB,CAAC,CAAC;MAC5B;MACA,IAAI,IAAI,CAACpB,YAAY,KAAK,eAAe,EAAE;QACvC,IAAI,CAAC5xB,iBAAiB,CAACqyB,UAAU,CAAClqB,eAAe,CAAC+B,WAAW,CAAC,EAAE;UAC5D,IAAI0gB,GAAG,GAAGyH,UAAU,CAAClqB,eAAe,CAAC+B,WAAW,CAACxK,MAAM;UACvD,KAAK,IAAIonB,KAAK,GAAG8D,GAAG,GAAG,CAAC,EAAE9D,KAAK,IAAI,CAAC,EAAEA,KAAK,EAAE,EAAE;YAC3C,IAAI,CAAC9mB,iBAAiB,CAACqyB,UAAU,CAAClqB,eAAe,CAAC+B,WAAW,CAAC,EAAE;cAC5D,IAAI8b,UAAU,GAAG,IAAI,CAACjkB,MAAM,CAAC2H,aAAa,CAAC2oB,UAAU,CAAClqB,eAAe,CAAC+B,WAAW,CAAC4c,KAAK,CAAC,CAACvc,IAAI,CAAC;cAC9F,IAAIob,QAAQ,GAAG,IAAI,CAAC5jB,MAAM,CAAC2H,aAAa,CAAC2oB,UAAU,CAAClqB,eAAe,CAAC+B,WAAW,CAAC4c,KAAK,CAAC,CAACtc,EAAE,CAAC;cAC1F,IAAIygB,gBAAgB,GAAG,IAAI,CAAClpB,MAAM,CAACuB,uBAAuB,CAAC4nB,yBAAyB,CAAClF,UAAU,EAAEL,QAAQ,CAAC;cAC1G,IAAI0M,UAAU,CAAClqB,eAAe,CAAC+B,WAAW,KAAK,CAAC+gB,gBAAgB,IAAI,CAAC,IAAI,CAAClpB,MAAM,CAACqS,qBAAqB,CAAC,EAAE;gBACrG,IAAI,CAACrS,MAAM,CAACuG,UAAU,CAAC4c,yBAAyB,CAACmN,UAAU,CAAC;gBAC5DA,UAAU,CAAClqB,eAAe,CAAC+B,WAAW,CAACa,MAAM,CAAC+b,KAAK,EAAE,CAAC,CAAC;gBACvDuL,UAAU,CAAClqB,eAAe,CAAC4D,gBAAgB,GAAG,IAAI;gBAClDsmB,UAAU,CAAC,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAACC,UAAU,CAAC,GAAG,IAAI;gBACpDgvB,UAAU,CAACxmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACC,UAAU,CAAC,GAAG,IAAI;cACjE;YACJ;UACJ;QACJ;QACA,IAAIgvB,UAAU,CAAClqB,eAAe,CAAC0E,WAAW,EAAE;UACxC,IAAI,CAAC9K,MAAM,CAAC+K,cAAc,CAAC,aAAa,EAAE,KAAK,EAAEulB,UAAU,CAAClqB,eAAe,EAAE,IAAI,CAAC;UAClF,IAAI,CAACnI,iBAAiB,CAACqyB,UAAU,CAACxmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuG,SAAS,CAAC,CAAC,EAAE;YAC3E,IAAI0oB,UAAU,CAACxmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuG,SAAS,CAAC,KAAK,IAAI,EAAE;cAChE0oB,UAAU,CAACxmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuG,SAAS,CAAC,GAAG,KAAK;YACjE;UACJ;QACJ;MACJ;MACA,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvI,mBAAmB,CAAC7C,MAAM,EAAEoL,CAAC,EAAE,EAAE;QACtD,IAAI,CAAC/I,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC,IAAI,CAAChS,mBAAmB,CAACuI,CAAC,CAAC,CAAC;MAC5E;MACA,IAAI,CAAC/I,MAAM,CAACoW,aAAa,CAACzG,OAAO,CAAC,UAAUhH,MAAM,EAAE;QAChDpE,KAAK,CAACuN,WAAW,GAAG,IAAI;QACxBvN,KAAK,CAACvE,MAAM,CAACe,iBAAiB,CAACiQ,mBAAmB,CAACrI,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;MACtE,CAAC,CAAC;MACF,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACvI,mBAAmB,CAAC7C,MAAM,EAAEoL,CAAC,EAAE,EAAE;QACtD,IAAI,CAAC/I,MAAM,CAACqJ,aAAa,CAACmJ,iBAAiB,CAAC,IAAI,CAAChS,mBAAmB,CAACuI,CAAC,CAAC,CAAC;MAC5E;MACA,IAAI,CAACvI,mBAAmB,GAAG,EAAE;MAC7B,IAAI,CAACR,MAAM,CAACiI,QAAQ,GAAG,KAAK;IAChC;IACA,IAAI,CAAC1H,QAAQ,GAAG,IAAI;IACpB,IAAI,CAAC2wB,aAAa,CAACrsB,IAAI,CAAC;EAC5B,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACI/E,IAAI,CAACjC,SAAS,CAACqzB,aAAa,GAAG,UAAUrsB,IAAI,EAAEssB,MAAM,EAAE;IACnD,IAAI5sB,KAAK,GAAG,IAAI;IAChB,IAAItF,YAAY,CAAC,IAAI,CAACe,MAAM,CAAC+E,UAAU,CAAC,EAAE;MACtC,IAAIkC,IAAI,GAAG,IAAI,CAACjH,MAAM,CAAC+E,UAAU;MACjC,IAAIuS,WAAW,GAAG;QACdC,cAAc,EAAEvY,WAAW,CAAC,IAAI,CAACgB,MAAM,CAACoW,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAACpW,MAAM;MAClF,CAAC;MACD,IAAIoxB,UAAU,GAAG,IAAI,CAACpxB,MAAM,CAACwX,KAAK,YAAY/Y,KAAK,GAAG,IAAI,CAACuB,MAAM,CAACwX,KAAK,GAAG,IAAI/Y,KAAK,CAAC,CAAC;MACrF,IAAIgZ,IAAI,GAAG,IAAI;MACf,IAAIE,OAAO,GAAG1Q,IAAI,CAAC0Q,OAAO;MAC1B,IAAI,EAAEA,OAAO,YAAYhZ,aAAa,IAAIgZ,OAAO,YAAYjZ,YAAY,CAAC,IAAIuI,IAAI,CAAClC,UAAU,CAAC6S,QAAQ,EAAE;QACpGH,IAAI,GAAGxQ,IAAI,CAAC4Q,WAAW,CAACP,WAAW,EAAE,IAAI,CAACtX,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAE,IAAI,EAAEuvB,UAAU,CAAC;MACrF,CAAC,MACI;QACD,IAAI7Z,cAAc,GAAG,gBAAgB;QACrCE,IAAI,GAAGxQ,IAAI,CAAC6Q,MAAM,CAAC,IAAI,CAAC9X,MAAM,CAACqB,UAAU,CAACQ,EAAE,EAAEyV,WAAW,CAACC,cAAc,CAAC,EAAE,IAAI,EAAE6Z,UAAU,CAAC;MAChG;MACA3Z,IAAI,CAACM,IAAI,CAAC,UAAUC,CAAC,EAAE;QAAE,OAAOzT,KAAK,CAAC8sB,aAAa,CAACrZ,CAAC,EAAEnT,IAAI,EAAEssB,MAAM,CAAC;MAAE,CAAC,CAAC,CACnEjZ,KAAK,CAAC,UAAUF,CAAC,EAAE;QAAE,OAAOzT,KAAK,CAAC+sB,aAAa,CAACtZ,CAAC,CAAC;MAAE,CAAC,CAAC;IAC/D,CAAC,MACI;MACD,IAAI,CAACuZ,oBAAoB,CAAC1sB,IAAI,EAAEssB,MAAM,CAAC;IAC3C;EACJ,CAAC;EACDrxB,IAAI,CAACjC,SAAS,CAACwzB,aAAa,GAAG,UAAUrZ,CAAC,EAAEnT,IAAI,EAAEssB,MAAM,EAAE;IACtD,IAAI,CAAC1Y,kBAAkB,CAACT,CAAC,CAAC;IAC1B,IAAI,CAACuZ,oBAAoB,CAAC1sB,IAAI,EAAEssB,MAAM,CAAC;EAC3C,CAAC;EACDrxB,IAAI,CAACjC,SAAS,CAACyzB,aAAa,GAAG,UAAUtZ,CAAC,EAAE;IACxC,IAAI,CAAChY,MAAM,CAAC4W,OAAO,CAAC,eAAe,EAAE;MAAEuC,KAAK,EAAEnB;IAAE,CAAC,CAAC;EACtD,CAAC;EACDlY,IAAI,CAACjC,SAAS,CAAC0zB,oBAAoB,GAAG,UAAU1sB,IAAI,EAAEssB,MAAM,EAAE;IAC1D,IAAI,CAACnxB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,GAAG,EAAE;IACpC,IAAI,IAAI,CAAC7P,MAAM,CAACiC,QAAQ,CAACsE,UAAU,EAAE;MACjC,IAAI,CAACvG,MAAM,CAACiC,QAAQ,CAACsE,UAAU,CAAC,WAAW,CAAC,GAAG,KAAK;IACxD;IACA,IAAI,CAACvG,MAAM,CAACiC,QAAQ,CAAC6Z,OAAO,CAAC,CAAC;IAC9B,IAAI,IAAI,CAAC9b,MAAM,CAACkH,mBAAmB,EAAE;MACjC,IAAI,CAAC4f,4BAA4B,CAACjiB,IAAI,CAACoC,IAAI,EAAEkqB,MAAM,CAAC;MACpD,IAAI,CAACnxB,MAAM,CAACmV,eAAe,CAACkC,cAAc,CAAC,IAAI,CAACrX,MAAM,CAACoW,aAAa,CAAC;IACzE;IACA,IAAI+a,MAAM,EAAE;MACRtsB,IAAI,CAAC0M,WAAW,GAAG,YAAY;IACnC,CAAC,MACI;MACD,IAAI,IAAI,CAACse,YAAY,KAAK,eAAe,EAAE;QACvChrB,IAAI,CAAC0M,WAAW,GAAG,UAAU;MACjC,CAAC,MACI,IAAI,IAAI,CAACse,YAAY,KAAK,eAAe,EAAE;QAC5ChrB,IAAI,CAAC0M,WAAW,GAAG,WAAW;MAClC;IACJ;IACA1M,IAAI,CAACsR,eAAe,GAAG,IAAI,CAACnW,MAAM,CAACoW,aAAa;IAChD,IAAI,IAAI,CAACpW,MAAM,CAACulB,QAAQ,EAAE;MACtB,KAAK,IAAI/nB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqH,IAAI,CAACsR,eAAe,CAACxY,MAAM,EAAEH,CAAC,EAAE,EAAE;QAClD4B,WAAW,CAACyF,IAAI,CAACsR,eAAe,CAAC3Y,CAAC,CAAC,EAAE,IAAI,CAACwC,MAAM,CAAC;MACrD;IACJ;IACA,IAAI,IAAI,CAACO,QAAQ,EAAE;MACf,IAAI,CAACP,MAAM,CAAC6O,eAAe,GAAG,CAAC,CAAC;IACpC;IACA,IAAI,CAACtO,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACP,MAAM,CAAC4W,OAAO,CAAC,gBAAgB,EAAE/R,IAAI,CAAC;IAC3C,IAAI,CAAC5G,iBAAiB,CAAC,IAAI,CAAC+B,MAAM,CAACiX,gBAAgB,CAAC,IAAI,IAAI,CAACjX,MAAM,CAACiX,gBAAgB,CAACC,aAAa,KAAK,SAAS,EAAE;MAC9G,IAAI,CAAClX,MAAM,CAAC2b,WAAW,CAAC,CAAC;IAC7B,CAAC,MACI;MACD,IAAI,CAAC3b,MAAM,CAAC4b,WAAW,CAAC,CAAC;IAC7B;IACA,IAAI,IAAI,CAAC5b,MAAM,CAAC0b,oBAAoB,EAAE;MAClC,IAAI,CAAC1b,MAAM,CAAC0b,oBAAoB,CAAC,eAAe,CAAC,GAAG,IAAI;IAC5D;EACJ,CAAC;EACD5b,IAAI,CAACjC,SAAS,CAACozB,iBAAiB,GAAG,YAAY;IAC3C,IAAIb,UAAU,GAAG,IAAI,CAACjR,aAAa;IACnC,IAAImR,UAAU,GAAG,IAAI,CAACpR,aAAa;IACnC,IAAIsS,KAAK,GAAG,IAAI,CAACxxB,MAAM;IACvB,IAAI0mB,QAAQ;IACZ,IAAI+K,IAAI;IACR,IAAI,IAAI,CAACzxB,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,EAAE;MAC/CkoB,QAAQ,GAAGroB,QAAQ,CAAC,yBAAyB,EAAE,IAAI,CAAC2B,MAAM,CAAC;IAC/D,CAAC,MACI;MACD0mB,QAAQ,GAAG8K,KAAK,CAACzsB,UAAU;IAC/B;IACA,IAAI2hB,QAAQ,CAAC/oB,MAAM,GAAG,CAAC,IAAK,CAACM,iBAAiB,CAACqyB,UAAU,CAAC,IAAI,CAACA,UAAU,CAACvgB,UAAW,EAAE;MACnF,KAAK,IAAIvS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACsM,IAAI,CAACgd,QAAQ,CAAC,CAAC/oB,MAAM,EAAEH,CAAC,EAAE,EAAE;QACnD,IAAIkpB,QAAQ,CAAClpB,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,KAAK0e,UAAU,CAACxmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,EAAE;UACjG6f,IAAI,GAAGj0B,CAAC;QACZ;MACJ;MACA,IAAI,IAAI,CAACqyB,YAAY,KAAK,YAAY,EAAE;QACpC,IAAI,CAAC,IAAI,CAAC7vB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAE;UAClC2N,QAAQ,CAAC1d,MAAM,CAACyoB,IAAI,EAAE,CAAC,EAAErB,UAAU,CAACtmB,QAAQ,CAAC;QACjD;MACJ,CAAC,MACI,IAAI,IAAI,CAAC+lB,YAAY,KAAK,eAAe,EAAE;QAC5C,IAAI,CAAC,IAAI,CAAC7vB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAE;UAClC2N,QAAQ,CAAC1d,MAAM,CAACyoB,IAAI,GAAG,CAAC,EAAE,CAAC,EAAErB,UAAU,CAACtmB,QAAQ,CAAC;QACrD;MACJ;IACJ,CAAC,MACI,IAAI,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,IAAK,CAAC9a,iBAAiB,CAACqyB,UAAU,CAAC,IAAIA,UAAU,CAACvgB,UAAW,EAAE;MACpG,IAAI,IAAI,CAAC8f,YAAY,KAAK,YAAY,IAAI,IAAI,CAACA,YAAY,KAAK,eAAe,EAAE;QAC7E,IAAI6B,MAAM,GAAG,IAAI,CAAC7B,YAAY,KAAK,YAAY,GAAG,OAAO,GAAG,OAAO;QACnE,IAAI,CAAC7vB,MAAM,CAACuG,UAAU,CAAC8hB,kBAAkB,GAAGiI,UAAU;QACtD,IAAIqB,UAAU,GAAG,EAAE;QACnB,IAAI,CAACvP,KAAK,CAACC,OAAO,CAAC+N,UAAU,CAAC,EAAE;UAC5BuB,UAAU,CAAC,CAAC,CAAC,GAAGvB,UAAU;QAC9B,CAAC,MACI;UACDuB,UAAU,GAAGvB,UAAU;QAC3B;QACA,IAAI,CAACpwB,MAAM,CAACuG,UAAU,CAACglB,oBAAoB,CAACoG,UAAU,EAAED,MAAM,CAAC;QAC/D,OAAO,IAAI,CAAC1xB,MAAM,CAACuG,UAAU,CAAC8hB,kBAAkB;MACpD;IACJ;IACA,IAAI,IAAI,CAACroB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAE;MACjC,IAAIqX,UAAU,CAACrgB,UAAU,EAAE;QACvB,IAAI,IAAI,CAAC8f,YAAY,KAAK,YAAY,IAAI,IAAI,CAACA,YAAY,KAAK,eAAe,EAAE;UAC7EO,UAAU,CAAC,IAAI,CAACpwB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,GAAGuX,UAAU,CAAC,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC;UACzFqX,UAAU,CAACtmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,GAAGuX,UAAU,CAAC,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC;UAClGqX,UAAU,CAAChqB,eAAe,CAAC,UAAU,CAAC,GAAGkqB,UAAU,CAAC,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC;QACxF,CAAC,MACI;UACDqX,UAAU,CAAC,IAAI,CAACpwB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,GAAGuX,UAAU,CAAC,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC;UACnFuuB,UAAU,CAACtmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,GAAGuX,UAAU,CAAC,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC;UAC5FuuB,UAAU,CAAChqB,eAAe,CAAC,UAAU,CAAC,GAAGkqB,UAAU,CAAC,IAAI,CAACtwB,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC;QAClF;MACJ,CAAC,MACI;QACDuuB,UAAU,CAAC,IAAI,CAACpwB,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,GAAG,IAAI;QAClDqX,UAAU,CAACtmB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,CAAC,GAAG,IAAI;QAC3DqX,UAAU,CAAChqB,eAAe,CAAC,UAAU,CAAC,GAAG,IAAI;MACjD;IACJ;EACJ,CAAC;EACDtG,IAAI,CAACjC,SAAS,CAAC2yB,aAAa,GAAG,YAAY;IACvC,IAAI,IAAI,CAACxwB,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,EAAE;MAC/C,IAAI,CAACkI,SAAS,GAAGrI,QAAQ,CAAC,yBAAyB,EAAE,IAAI,CAAC2B,MAAM,CAAC;IACrE,CAAC,MACI;MACD,IAAI,CAAC0G,SAAS,GAAGvH,eAAe,CAAC,IAAI,CAACa,MAAM,CAAC,GAAG3B,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC2B,MAAM,CAAC+E,UAAU,CAAC,GACtF,IAAI,CAAC/E,MAAM,CAAC+E,UAAU;IAC9B;IACA,IAAI,CAAC0rB,YAAY,GAAGtxB,eAAe,CAAC,IAAI,CAACa,MAAM,CAAC,GAC5C3B,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC2B,MAAM,CAACiC,QAAQ,CAAC8C,UAAU,CAAC,GAAG,IAAI,CAAC/E,MAAM,CAACiC,QAAQ,CAAC8C,UAAU;IACzF,IAAI6sB,MAAM,GAAG,IAAI,CAAC5xB,MAAM,CAACiV,iBAAiB,CAAC,IAAI,CAACkK,aAAa,CAACrQ,QAAQ,CAAC;IACvE,IAAI,CAAC+iB,aAAa,CAACD,MAAM,CAAC;EAC9B,CAAC;EACD9xB,IAAI,CAACjC,SAAS,CAACi0B,0BAA0B,GAAG,UAAUC,cAAc,EAAE;IAClE,IAAIC,gBAAgB,GAAG;MACnBljB,QAAQ,EAAEijB,cAAc,CAACjjB,QAAQ;MACjCgb,QAAQ,EAAEiI,cAAc,CAACjI,QAAQ;MACjChM,KAAK,EAAEiU,cAAc,CAACjU,KAAK;MAC3BzB,KAAK,EAAE0V,cAAc,CAAC1V,KAAK;MAC3BnT,MAAM,EAAE6oB,cAAc,CAAC3rB,eAAe,CAACkP;IAC3C,CAAC;IACD,KAAK,IAAI9X,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGu0B,cAAc,CAAC/hB,YAAY,CAACrS,MAAM,EAAEH,CAAC,EAAE,EAAE;MACzD,IAAI,CAACwC,MAAM,CAAC+K,cAAc,CAAC,YAAY,EAAEinB,gBAAgB,EAAED,cAAc,CAAC/hB,YAAY,CAACxS,CAAC,CAAC,CAAC;MAC1F,IAAI,CAACwC,MAAM,CAAC+K,cAAc,CAAC,gBAAgB,EAAEgnB,cAAc,CAACjjB,QAAQ,EAAEijB,cAAc,CAAC/hB,YAAY,CAACxS,CAAC,CAAC,CAAC;IACzG;IACA,IAAIu0B,cAAc,CAACzf,eAAe,EAAE;MAChCyf,cAAc,GAAGA,cAAc,CAAC/hB,YAAY;MAC5C,KAAK,IAAIlK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGisB,cAAc,CAAC,QAAQ,CAAC,EAAEjsB,CAAC,EAAE,EAAE;QAC/C,IAAI,CAACgsB,0BAA0B,CAACC,cAAc,CAACjsB,CAAC,CAAC,CAAC;MACtD;IACJ;EACJ,CAAC;EACDhG,IAAI,CAACjC,SAAS,CAACizB,UAAU,GAAG,UAAUjT,YAAY,EAAE;IAChD,IAAI2J,GAAG,GAAG,IAAI,CAACxnB,MAAM;IACrB,IAAIiyB,QAAQ;IACZ,IAAI7S,kBAAkB;IACtB,IAAI,IAAI,CAACpf,MAAM,CAAC6H,cAAc,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,qBAAqB,CAAC,IAAI,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,IAC7I,IAAI,CAAC7H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC2X,QAAQ,KAAK,OAAO,EAAE;MAC1F,IAAI,IAAI,CAACxf,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC2X,QAAQ,KAAK,OAAO,EAAE;QACvFJ,kBAAkB,GAAG,IAAI,CAACpf,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAAC,IAAI,CAAC1H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAChG,EAAE,CAACmB,QAAQ,CAAC,CAAC,CAAC;MAChI,CAAC,MACI,IAAI,IAAI,CAAChD,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC2X,QAAQ,KAAK,OAAO,EAAE;QAC5FJ,kBAAkB,GAAG,IAAI,CAACpf,MAAM,CAAC4I,GAAG,CAAClB,OAAO,CAAC,IAAI,CAAC1H,MAAM,CAAC6H,cAAc,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAChG,EAAE,CAACmB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC;MACpI;IACJ,CAAC,MACI;MACDivB,QAAQ,GAAG,IAAI,CAACjyB,MAAM,CAACuG,UAAU,CAAC0Y,aAAa,CAAC,IAAI,CAACC,aAAa,EAAE,CAAC,CAAC;MACtEE,kBAAkB,GAAInhB,iBAAiB,CAACg0B,QAAQ,CAAC,IAC7CA,QAAQ,KAAK,CAAC,GAAIpU,YAAY,GAAG,CAAC,GAClCoU,QAAQ,GAAGpU,YAAY,GAAG,CAAC;IACnC;IACA,IAAI,IAAI,CAACgS,YAAY,KAAK,eAAe,EAAE;MACvC,IAAIrI,GAAG,CAACnmB,UAAU,CAAC0X,QAAQ,IAAI,IAAI,CAACrS,SAAS,CAAC/I,MAAM,GAAG,CAAC,EAAE;QACtD,IAAI,CAAC+I,SAAS,CAACsC,MAAM,CAACoW,kBAAkB,EAAE,CAAC,EAAE,IAAI,CAACD,aAAa,CAACrV,QAAQ,CAAC;MAC7E;MACA,IAAI,CAAC2mB,YAAY,CAACznB,MAAM,CAACoW,kBAAkB,EAAE,CAAC,EAAE,IAAI,CAACD,aAAa,CAAC;MACnE,IAAI,CAACnf,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACoW,kBAAkB,EAAE,CAAC,EAAE,IAAI,CAACD,aAAa,CAAC,IAAI,CAACnf,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAAC;MACvG,IAAI,CAACkvB,WAAW,CAAC,CAAC;MAClB,IAAI,IAAI,CAAC/S,aAAa,CAAC7M,eAAe,EAAE;QACpC,IAAI,CAACse,iBAAiB,CAAC,IAAI,CAACzR,aAAa,EAAEC,kBAAkB,EAAE,IAAI,CAACF,aAAa,CAAC4K,QAAQ,CAAC;QAC3F,IAAI,IAAI,CAAC9pB,MAAM,CAACkH,mBAAmB,EAAE;UACjC,IAAI6qB,cAAc,GAAG,IAAI,CAAC5S,aAAa;UACvC,IAAI,CAAC2S,0BAA0B,CAACC,cAAc,CAAC;QACnD;MACJ;MACA,IAAI9zB,iBAAiB,CAAC,IAAI,CAACkhB,aAAa,CAACpP,UAAU,IAC/C,IAAI,CAACvP,mBAAmB,CAACkH,OAAO,CAAC,IAAI,CAACyX,aAAa,CAACpP,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;QACzE,IAAI,CAACvP,mBAAmB,CAACuF,IAAI,CAAC,IAAI,CAACoZ,aAAa,CAACpP,UAAU,CAAC;MAChE;IACJ;EACJ,CAAC;EACDjQ,IAAI,CAACjC,SAAS,CAAC8yB,sBAAsB,GAAG,UAAUhoB,MAAM,EAAEwpB,IAAI,EAAE;IAC5D,IAAIx0B,MAAM,GAAG,CAAC;IACd,IAAIy0B,UAAU;IACdD,IAAI,EAAE;IACN,IAAI,CAACxpB,MAAM,CAAC2J,eAAe,EAAE;MACzB,OAAO,CAAC;IACZ;IACA3U,MAAM,GAAGgL,MAAM,CAACqH,YAAY,CAACrS,MAAM;IACnC,KAAK,IAAImI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnI,MAAM,EAAEmI,CAAC,EAAE,EAAE;MAC7BssB,UAAU,GAAGzpB,MAAM,CAACqH,YAAY,CAAClK,CAAC,CAAC;MACnC,IAAI+J,UAAU,GAAG,KAAK,CAAC;MACvB,IAAIlH,MAAM,CAACoH,UAAU,EAAE;QACnB,IAAIlO,EAAE,GAAG,oBAAoB;QAC7BgO,UAAU,GAAG,IAAI,CAAC7P,MAAM,CAACiC,QAAQ,CAACJ,EAAE,CAAC,CAAC8G,MAAM,CAACoH,UAAU,CAACjB,QAAQ,CAAC;MACrE;MACAsjB,UAAU,CAACtU,KAAK,GAAGnV,MAAM,CAACoH,UAAU,GAAGF,UAAU,CAACiO,KAAK,GAAGqU,IAAI,GAAGxpB,MAAM,CAACmV,KAAK,GAAG,CAAC;MACjF,IAAIsU,UAAU,CAAC9f,eAAe,EAAE;QAC5B6f,IAAI,EAAE;QACNA,IAAI,GAAG,IAAI,CAACxB,sBAAsB,CAACyB,UAAU,EAAED,IAAI,CAAC;MACxD;IACJ;IACA,OAAOA,IAAI;EACf,CAAC;EACD;EACAryB,IAAI,CAACjC,SAAS,CAAC+yB,iBAAiB,GAAG,UAAUjoB,MAAM,EAAEoc,KAAK,EAAE+E,QAAQ,EAAE;IAClE,IAAIsI,UAAU;IACd,IAAI5K,GAAG,GAAG,IAAI,CAACxnB,MAAM;IACrB,IAAIrC,MAAM,GAAG,CAAC;IACd,IAAI,CAACgL,MAAM,CAAC2J,eAAe,EAAE;MACzB,OAAO,CAAC;IACZ;IACA3U,MAAM,GAAGgL,MAAM,CAACqH,YAAY,CAACrS,MAAM;IACnC,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,MAAM,EAAEH,CAAC,EAAE,EAAE;MAC7B40B,UAAU,GAAGzpB,MAAM,CAACqH,YAAY,CAACxS,CAAC,CAAC;MACnCunB,KAAK,EAAE;MACPyC,GAAG,CAAChgB,QAAQ,CAACwB,MAAM,CAAC+b,KAAK,EAAE,CAAC,EAAEqN,UAAU,CAAC;MACzC,IAAI,CAACpyB,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAAC+b,KAAK,EAAE,CAAC,EAAEqN,UAAU,CAAChsB,eAAe,CAACkP,WAAW,CAACtS,QAAQ,CAAC,CAAC,CAAC;MACnF,IAAIwkB,GAAG,CAACnmB,UAAU,CAAC0X,QAAQ,IAAI,IAAI,CAACrS,SAAS,CAAC/I,MAAM,GAAG,CAAC,EAAE;QACtD,IAAI,CAAC+I,SAAS,CAACsC,MAAM,CAAC+b,KAAK,EAAE,CAAC,EAAEqN,UAAU,CAACtoB,QAAQ,CAAC;MACxD;MACA,IAAIsoB,UAAU,CAAC9f,eAAe,EAAE;QAC5ByS,KAAK,GAAG,IAAI,CAAC6L,iBAAiB,CAACwB,UAAU,EAAErN,KAAK,CAAC;MACrD;IACJ;IACA,OAAOA,KAAK;EAChB,CAAC;EACDjlB,IAAI,CAACjC,SAAS,CAACg0B,aAAa,GAAG,UAAUlpB,MAAM,EAAE;IAC7C,IAAI6e,GAAG,GAAG,IAAI,CAACxnB,MAAM;IACrB,IAAI+E,UAAU;IACd,IAAI,IAAI,CAAC/E,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,EAAE;MAC/CuG,UAAU,GAAG1G,QAAQ,CAAC,yBAAyB,EAAE,IAAI,CAAC2B,MAAM,CAAC;IACjE,CAAC,MACI;MACD+E,UAAU,GAAG,IAAI,CAAC/E,MAAM,CAAC+E,UAAU;IACvC;IACA,IAAI6sB,MAAM,GAAGjpB,MAAM;IACnB,IAAIipB,MAAM,EAAE;MACR,IAAIS,UAAU,GAAG,IAAI,CAACryB,MAAM,CAAC2T,aAAa,CAACie,MAAM,CAAC7hB,UAAU,CAAC;MAC7D,IAAI6hB,MAAM,CAAC7hB,UAAU,EAAE;QACnB,IAAIC,YAAY,GAAGqiB,UAAU,GAAGA,UAAU,CAACriB,YAAY,GAAG,EAAE;QAC5D,IAAIyO,UAAU,GAAG,CAAC;QAClB,IAAIzO,YAAY,IAAIA,YAAY,CAACrS,MAAM,GAAG,CAAC,EAAE;UACzC8gB,UAAU,GAAGzO,YAAY,CAACtI,OAAO,CAACkqB,MAAM,CAAC;UACzCS,UAAU,CAACriB,YAAY,CAAChH,MAAM,CAACyV,UAAU,EAAE,CAAC,CAAC;UAC7C,IAAI,CAAC,IAAI,CAACze,MAAM,CAACqB,UAAU,CAAC0X,QAAQ,EAAE;YAClCsZ,UAAU,CAACvoB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACuQ,KAAK,CAAC,CAAC5I,MAAM,CAACyV,UAAU,EAAE,CAAC,CAAC;UAC3E;UACA;UACA,IAAI,CAACje,mBAAmB,CAACuF,IAAI,CAACssB,UAAU,CAAC;QAC7C;MACJ;MACA,IAAI7K,GAAG,CAACnmB,UAAU,CAAC0X,QAAQ,EAAE;QACzB,IAAI6Y,MAAM,CAACtf,eAAe,IAAIsf,MAAM,CAAC5hB,YAAY,CAACrS,MAAM,GAAG,CAAC,EAAE;UAC1D,IAAI,CAAC20B,eAAe,CAACV,MAAM,CAAC;QAChC;QACA,IAAIH,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI/qB,SAAS,GAAG3B,UAAU,CAACpH,MAAM,GAAG,CAAC,GACjCoH,UAAU,GAAG,IAAI,CAAC/E,MAAM,CAAC6G,eAAe;QAC5C,KAAK,IAAIrJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkJ,SAAS,CAAC/I,MAAM,EAAEH,CAAC,EAAE,EAAE;UACvC,IAAIkJ,SAAS,CAAClJ,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,KAAK+vB,MAAM,CAAC9nB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,EAAE;YACxF4vB,IAAI,GAAGj0B,CAAC;UACZ;QACJ;QACA,IAAIi0B,IAAI,KAAK,CAAC,CAAC,EAAE;UACb,IAAI1sB,UAAU,CAACpH,MAAM,GAAG,CAAC,EAAE;YACvBoH,UAAU,CAACiE,MAAM,CAACyoB,IAAI,EAAE,CAAC,CAAC;UAC9B;UACA,IAAIc,QAAQ,GAAG,KAAK,CAAC;UACrB,KAAK,IAAI/0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACizB,YAAY,CAAC9yB,MAAM,EAAEH,CAAC,EAAE,EAAE;YAC/C,IAAI,IAAI,CAACizB,YAAY,CAACjzB,CAAC,CAAC,CAAC,IAAI,CAACwC,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,KAAK+vB,MAAM,CAAC9nB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,EAAE;cAChG0wB,QAAQ,GAAG/0B,CAAC;YAChB;UACJ;UACA,IAAI,CAACizB,YAAY,CAACznB,MAAM,CAACupB,QAAQ,EAAE,CAAC,CAAC;UACrC,IAAI,CAACvyB,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACupB,QAAQ,EAAE,CAAC,CAAC;UACnC,IAAI,IAAI,CAACvyB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAACnI,OAAO,CAACkqB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YACxD,IAAI,CAAC5xB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAAC7G,MAAM,CAAC,IAAI,CAAChJ,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAACnI,OAAO,CAACkqB,MAAM,CAAC,EAAE,CAAC,CAAC;UAC9F;QACJ;MACJ;MACA,IAAIY,SAAS,GAAG,IAAI,CAAC/B,YAAY,CAAC/oB,OAAO,CAACkqB,MAAM,CAAC;MACjD,IAAI,CAACpK,GAAG,CAACnmB,UAAU,CAAC0X,QAAQ,EAAE;QAC1B,IAAIiG,kBAAkB,GAAG,IAAI,CAACC,aAAa,CAAC2S,MAAM,EAAE,CAAC,CAAC;QACtD,IAAI,CAACnB,YAAY,CAACznB,MAAM,CAACwpB,SAAS,EAAExT,kBAAkB,GAAG,CAAC,CAAC;QAC3D,IAAI,CAAChf,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACwpB,SAAS,EAAExT,kBAAkB,GAAG,CAAC,CAAC;QACzD,IAAI8P,WAAW,GAAG,IAAI,CAACpoB,SAAS,CAACgB,OAAO,CAACkqB,MAAM,CAAC9nB,QAAQ,CAAC;QACzD,IAAIglB,WAAW,KAAK,CAAC,CAAC,EAAE;UACpB,IAAI,CAACpoB,SAAS,CAACsC,MAAM,CAAC8lB,WAAW,EAAE,CAAC,CAAC;UACrC,IAAI,CAAC9uB,MAAM,CAACiC,QAAQ,CAAC4N,UAAU,CAAC7G,MAAM,CAAC8lB,WAAW,EAAE,CAAC,CAAC;QAC1D;MACJ;MACA,IAAI8C,MAAM,CAAC7hB,UAAU,IAAIsiB,UAAU,IAAIA,UAAU,CAACriB,YAAY,IAAI,CAACqiB,UAAU,CAACriB,YAAY,CAACrS,MAAM,EAAE;QAC/F,IAAI,CAACqC,MAAM,CAAC+K,cAAc,CAAC,UAAU,EAAE,KAAK,EAAEsnB,UAAU,CAAC;QACzD,IAAI,CAACryB,MAAM,CAAC+K,cAAc,CAAC,iBAAiB,EAAE,KAAK,EAAEsnB,UAAU,CAAC;MACpE;IACJ;EACJ,CAAC;EACDvyB,IAAI,CAACjC,SAAS,CAACy0B,eAAe,GAAG,UAAU3pB,MAAM,EAAE;IAC/C,IAAIypB,UAAU;IACd,IAAIX,IAAI;IACR,KAAK,IAAIj0B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmL,MAAM,CAACqH,YAAY,CAACrS,MAAM,EAAEH,CAAC,EAAE,EAAE;MACjD40B,UAAU,GAAGzpB,MAAM,CAACqH,YAAY,CAACxS,CAAC,CAAC;MACnC,IAAIyJ,IAAI,GAAG,KAAK,CAAC;MACjB,IAAI,IAAI,CAACjH,MAAM,CAAC+E,UAAU,YAAYvG,WAAW,EAAE;QAC/CyI,IAAI,GAAG5I,QAAQ,CAAC,yBAAyB,EAAE,IAAI,CAAC2B,MAAM,CAAC;MAC3D,CAAC,MACI;QACDiH,IAAI,GAAG,IAAI,CAACjH,MAAM,CAAC+E,UAAU;MACjC;MACA,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmB,IAAI,CAACtJ,MAAM,EAAEmI,CAAC,EAAE,EAAE;QAClC,IAAImB,IAAI,CAACnB,CAAC,CAAC,CAAC,IAAI,CAAC9F,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,KAAKuwB,UAAU,CAACtoB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,EAAE;UACvF4vB,IAAI,GAAG3rB,CAAC;QACZ;MACJ;MACA,IAAI2rB,IAAI,KAAK,CAAC,CAAC,EAAE;QACb,IAAIxqB,IAAI,CAACtJ,MAAM,GAAG,CAAC,EAAE;UACjBsJ,IAAI,CAAC+B,MAAM,CAACyoB,IAAI,EAAE,CAAC,CAAC;QACxB;QACA,IAAIc,QAAQ,GAAG,KAAK,CAAC;QACrB,KAAK,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,IAAI,CAAChC,YAAY,CAAC9yB,MAAM,EAAE80B,GAAG,EAAE,EAAE;UACrD,IAAI,IAAI,CAAChC,YAAY,CAACgC,GAAG,CAAC,CAAC,IAAI,CAACzyB,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,KAAKuwB,UAAU,CAACtoB,QAAQ,CAAC,IAAI,CAAC9J,MAAM,CAACqB,UAAU,CAACQ,EAAE,CAAC,EAAE;YACtG0wB,QAAQ,GAAGE,GAAG;UAClB;QACJ;QACA,IAAI,CAAChC,YAAY,CAACznB,MAAM,CAACupB,QAAQ,EAAE,CAAC,CAAC;QACrC,IAAI,CAACvyB,MAAM,CAAC4I,GAAG,CAACI,MAAM,CAACupB,QAAQ,EAAE,CAAC,CAAC;MACvC;MACA,IAAIH,UAAU,CAAC9f,eAAe,EAAE;QAC5B,IAAI,CAACggB,eAAe,CAACF,UAAU,CAAC;MACpC;IACJ;EACJ,CAAC;EACDtyB,IAAI,CAACjC,SAAS,CAACq0B,WAAW,GAAG,YAAY;IACrC,IAAI1K,GAAG,GAAG,IAAI,CAACxnB,MAAM;IACrB,IAAIowB,UAAU,GAAG,IAAI,CAACjR,aAAa;IACnC,IAAImR,UAAU,GAAG,IAAI,CAACpR,aAAa;IACnC,IAAIwT,SAAS,GAAGlL,GAAG,CAACnmB,UAAU,CAACuQ,KAAK;IACpC,IAAI,CAAC0e,UAAU,CAAChe,eAAe,EAAE;MAC7Bge,UAAU,CAAChe,eAAe,GAAG,IAAI;MACjC,IAAI,CAACge,UAAU,CAACtgB,YAAY,CAACrS,MAAM,EAAE;QACjC2yB,UAAU,CAACtgB,YAAY,GAAG,EAAE;QAC5B,IAAI,CAACwX,GAAG,CAACnmB,UAAU,CAAC0X,QAAQ,IAAI9a,iBAAiB,CAACqyB,UAAU,CAACxmB,QAAQ,CAAC4oB,SAAS,CAAC,CAAC,EAAE;UAC/EpC,UAAU,CAACxmB,QAAQ,CAAC4oB,SAAS,CAAC,GAAG,EAAE;QACvC;MACJ;IACJ;IACA,IAAI,IAAI,CAAC7C,YAAY,KAAK,eAAe,EAAE;MACvC,IAAI9f,UAAU,GAAG5R,MAAM,CAAC,CAAC,CAAC,EAAEmyB,UAAU,CAAC;MACvC,OAAOvgB,UAAU,CAACC,YAAY;MAC9B,IAAIgiB,gBAAgB,GAAG;QACnBljB,QAAQ,EAAEiB,UAAU,CAACjB,QAAQ;QAC7Bgb,QAAQ,EAAE/Z,UAAU,CAAC+Z,QAAQ;QAC7BhM,KAAK,EAAE/N,UAAU,CAAC+N,KAAK;QACvBzB,KAAK,EAAEtM,UAAU,CAACsM,KAAK;QACvBnT,MAAM,EAAE6G,UAAU,CAAC3J,eAAe,CAACkP;MACvC,CAAC;MACD,IAAI,CAACtV,MAAM,CAAC+K,cAAc,CAAC,YAAY,EAAEinB,gBAAgB,EAAE5B,UAAU,CAAC;MACtE,IAAI,CAACpwB,MAAM,CAAC+K,cAAc,CAAC,gBAAgB,EAAEulB,UAAU,CAACxhB,QAAQ,EAAEshB,UAAU,CAAC;MAC7EE,UAAU,CAACtgB,YAAY,CAAChH,MAAM,CAACsnB,UAAU,CAACtgB,YAAY,CAACrS,MAAM,EAAE,CAAC,EAAEyyB,UAAU,CAAC;MAC7E,IAAI,CAACnyB,iBAAiB,CAACmyB,UAAU,CAAC,IAAI,CAAC5I,GAAG,CAACnmB,UAAU,CAAC0X,QAAQ,IAC1D,CAAC9a,iBAAiB,CAACqyB,UAAU,CAACxmB,QAAQ,CAAC4oB,SAAS,CAAC,CAAC,EAAE;QACpDpC,UAAU,CAACxmB,QAAQ,CAAC0d,GAAG,CAACnmB,UAAU,CAACuQ,KAAK,CAAC,CAAC5I,MAAM,CAACsnB,UAAU,CAACtgB,YAAY,CAACrS,MAAM,EAAE,CAAC,EAAEyyB,UAAU,CAACtmB,QAAQ,CAAC;MAC5G;MACA,IAAI,CAAC7L,iBAAiB,CAACqyB,UAAU,CAAClqB,eAAe,CAAC6F,QAAQ,CAAC,IAAIqkB,UAAU,CAAClqB,eAAe,CAAC6F,QAAQ,CAACtO,MAAM,GAAG,CAAC,EAAE;QAC3G2yB,UAAU,CAAClqB,eAAe,CAAC6F,QAAQ,GAAG,IAAI;QAC1CqkB,UAAU,CAACxmB,QAAQ,CAAC0d,GAAG,CAACnmB,UAAU,CAAC4K,QAAQ,CAAC,GAAG,IAAI;MACvD;MACA,IAAI,CAACmkB,UAAU,CAAC9d,eAAe,EAAE;QAC7B8d,UAAU,CAACtS,KAAK,GAAGwS,UAAU,CAACxS,KAAK,GAAG,CAAC;MAC3C,CAAC,MACI;QACD,IAAIA,KAAK,GAAG,CAAC;QACbsS,UAAU,CAACtS,KAAK,GAAGwS,UAAU,CAACxS,KAAK,GAAG,CAAC;QACvC,IAAI,CAAC6S,sBAAsB,CAACP,UAAU,EAAEtS,KAAK,CAAC;MAClD;MACAwS,UAAU,CAACxG,QAAQ,GAAG,IAAI;IAC9B;EACJ,CAAC;EACD,OAAOhqB,IAAI;AACf,CAAC,CAAC,CAAE;AACJ,SAASA,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}