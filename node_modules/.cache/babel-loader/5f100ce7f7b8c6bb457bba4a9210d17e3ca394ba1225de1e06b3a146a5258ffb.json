{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.for-each.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { createElement, isNullOrUndefined, extend, compile, getValue, setValue, SanitizeHtmlHelper, append } from '@syncfusion/ej2-base';\nimport { formatUnit, addClass } from '@syncfusion/ej2-base';\nimport { isScheduledTask, getTaskData } from '../base/utils';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as cls from '../base/css-constants';\nimport { DateProcessor } from '../base/date-processor';\n/**\n * To render the chart rows in Gantt\n */\nvar ChartRows = /** @class */function (_super) {\n  __extends(ChartRows, _super);\n  function ChartRows(ganttObj) {\n    var _this = _super.call(this, ganttObj) || this;\n    _this.taskBarHeight = 0;\n    _this.milestoneHeight = 0;\n    _this.milesStoneRadius = 0;\n    _this.baselineTop = 0;\n    _this.baselineHeight = 8;\n    _this.touchLeftConnectorpoint = '';\n    _this.touchRightConnectorpoint = '';\n    _this.dropSplit = false;\n    _this.refreshedTr = [];\n    _this.refreshedData = [];\n    _this.isUpdated = true;\n    _this.taskBaselineTemplateNode = null;\n    /**\n     * To trigger the touchmove.\n     *\n     * @param {TouchEvent} event .\n     * @returns {void}\n     * @private\n     */\n    _this.handleTouchMove = function (event) {\n      _this.parent.ganttChartModule['ganttChartMove'](event);\n    };\n    /**\n     * To trigger the touchend.\n     *\n     * @param {TouchEvent} event .\n     * @returns {void}\n     * @private\n     */\n    _this.handleTouchEnd = function (event) {\n      _this.parent.ganttChartModule['documentMouseUp'](event);\n    };\n    _this.parent = ganttObj;\n    _this.initPublicProp();\n    _this.addEventListener();\n    return _this;\n  }\n  /**\n   * To initialize the public property.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.initPublicProp = function () {\n    this.ganttChartTableBody = null;\n  };\n  ChartRows.prototype.addEventListener = function () {\n    this.parent.on('renderPanels', this.createChartTable, this);\n    this.parent.on('dataReady', this.initiateTemplates, this);\n    this.parent.on('destroy', this.destroy, this);\n  };\n  ChartRows.prototype.refreshChartByTimeline = function () {\n    this.taskTable.style.width = formatUnit(this.parent.enableTimelineVirtualization ? this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth);\n    var prevDate = getValue('prevProjectStartDate', this.parent.dataOperation);\n    var isUpdated = false;\n    if (prevDate) {\n      isUpdated = prevDate.getTime() === this.parent.cloneProjectStartDate.getTime();\n    }\n    this.isUpdated = this.parent.isFromOnPropertyChange && isUpdated && getValue('mutableData', this.parent.treeGrid.grid.contentModule) ? true : false;\n    this.refreshGanttRows();\n    this.isUpdated = true;\n  };\n  /**\n   * To render chart rows.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.createChartTable = function () {\n    this.taskTable = createElement('table', {\n      className: cls.taskTable + ' ' + cls.zeroSpacing,\n      id: 'GanttTaskTable' + this.parent.element.id,\n      styles: 'position: absolute;width:' + (this.parent.enableTimelineVirtualization ? this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth) + 'px;',\n      attrs: {\n        cellspacing: '0.25px'\n      }\n    });\n    var colgroup = createElement('colgroup');\n    var column = createElement('col', {\n      styles: 'width:' + this.parent.timelineModule.totalTimelineWidth + 'px;'\n    });\n    colgroup.appendChild(column);\n    this.taskTable.appendChild(colgroup);\n    this.ganttChartTableBody = createElement('tbody', {\n      id: this.parent.element.id + 'GanttTaskTableBody'\n    });\n    this.taskTable.appendChild(this.ganttChartTableBody);\n    this.parent.ganttChartModule.chartBodyContent.appendChild(this.taskTable);\n  };\n  ChartRows.prototype.initiateTemplates = function () {\n    this.taskTable.style.width = formatUnit(this.parent.enableTimelineVirtualization ? this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth);\n    this.initChartHelperPrivateVariable();\n    this.initializeChartTemplate();\n  };\n  /**\n   * To render chart rows.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.renderChartRows = function () {\n    this.createTaskbarTemplate();\n    this.parent.isGanttChartRendered = true;\n  };\n  /**\n   * To get gantt Indicator.\n   *\n   * @param {IIndicator} indicator .\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getIndicatorNode = function (indicator) {\n    var templateString = '<label class=\"' + cls.label + ' ' + cls.taskIndicatorDiv + '\" style=\"display: inline-flex; align-items: center; margin-top: 0; line-height:' + this.parent.rowHeight + 'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + this.getIndicatorleft(indicator.date) + 'px;\"><i class=\"' + indicator.iconClass + '\" style=\"margin-right: 3px;\"></i> </label>';\n    return this.createDivElement(templateString);\n  };\n  /**\n   * To get gantt Indicator.\n   *\n   * @param {Date | string} date .\n   * @returns {number} .\n   * @private\n   */\n  ChartRows.prototype.getIndicatorleft = function (date) {\n    date = this.parent.dateValidationModule.getDateFromFormat(date);\n    var left = this.parent.dataOperation.getTaskLeft(date, false);\n    return left;\n  };\n  /**\n   * To get child taskbar Node.\n   *\n   *  @param {number} i .\n   * @param {NodeList} rootElement .\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getChildTaskbarNode = function (i, rootElement) {\n    var childTaskbarNode = null;\n    var data = this.templateData;\n    var direction;\n    if (this.parent.enableRtl) {\n      direction = 'right:';\n    } else {\n      direction = 'left:';\n    }\n    if (this.childTaskbarTemplateFunction) {\n      childTaskbarNode = this.childTaskbarTemplateFunction(extend({\n        index: i\n      }, data), this.parent, 'TaskbarTemplate', this.getTemplateID('TaskbarTemplate'), false, undefined, rootElement[0], this.parent.treeGrid['root']);\n    } else {\n      var labelString = '';\n      var taskLabel = '';\n      var taskbarInnerDiv = void 0;\n      var progressDiv = void 0;\n      if (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration) {\n        taskbarInnerDiv = this.createDivElement('<div class=\"' + cls.childTaskBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"width:' + data.ganttProperties.width + 'px;height:' + this.taskBarHeight + 'px; margin-top :-1px\"></div>');\n        progressDiv = this.createDivElement('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildProgressBar + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildProgressBar) + '\"' + ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') + 'width:' + data.ganttProperties.progressWidth + 'px;height:100%;' + 'border-top-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;' + 'border-bottom-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;\">' + '</div>');\n      }\n      var tempDiv = createElement('div');\n      if (this.taskLabelTemplateFunction && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n        var taskLabelTemplateNode = this.taskLabelTemplateFunction(extend({\n          index: i\n        }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressDiv[0]);\n        if (taskLabelTemplateNode && taskLabelTemplateNode.length > 0) {\n          append(taskLabelTemplateNode, tempDiv);\n          labelString = tempDiv.innerHTML;\n        }\n      } else {\n        var field = this.parent.labelSettings.taskLabel;\n        labelString = this.getTaskLabel(field);\n        labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n        if (this.parent.enableHtmlSanitizer && typeof labelString === 'string') {\n          labelString = SanitizeHtmlHelper.sanitize(labelString);\n        }\n      }\n      if (labelString.indexOf('null') === -1) {\n        if (this.getTaskLabel(this.parent.labelSettings.taskLabel) === 'isCustomTemplate' && !this.isTemplate(this.parent.labelSettings.taskLabel)) {\n          labelString = '';\n        }\n        if (isNaN(parseInt(labelString, 10))) {\n          taskLabel = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (this.taskBarHeight - 1) + 'px; text-align:' + (this.parent.enableRtl ? 'right;' : 'left;') + 'display:' + 'inline-block;' + 'width:' + (data.ganttProperties.width - 10) + 'px; height:' + this.taskBarHeight + 'px;\"></span>';\n        } else {\n          taskLabel = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (this.taskBarHeight - 1) + 'px;' + (this.parent.viewType === 'ResourceView' ? 'text-align:' + (this.parent.enableRtl ? 'right;' : 'left;') : '') + +(this.parent.viewType === 'ResourceView' ? 'display:inline-flex;' : '') + +(this.parent.viewType === 'ResourceView' ? data.ganttProperties.width - 10 : '') + 'px; height:' + this.taskBarHeight + 'px;\"></span>';\n        }\n      }\n      var template = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0 ? this.splitTaskbar(data, labelString) : data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration ? taskLabel : data.ganttProperties.startDate && !data.ganttProperties.endDate && !data.ganttProperties.duration ? '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + cls.unscheduledTaskbarLeft + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"' + direction + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>' : data.ganttProperties.endDate && !data.ganttProperties.startDate && !data.ganttProperties.duration ? '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + cls.unscheduledTaskbarRight + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"' + direction + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>' : data.ganttProperties.duration && !data.ganttProperties.startDate && !data.ganttProperties.endDate ? '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' + cls.unscheduledTaskbar + ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' + 'style=\"' + direction + data.ganttProperties.left + 'px; width:' + data.ganttProperties.width + 'px;' + ' height:' + this.taskBarHeight + 'px;\"></div>' : '';\n      if (data.ganttProperties.segments && data.ganttProperties.segments.length > 0) {\n        var progress = this.getSplitProgressResizerNode();\n        template = template + progress;\n      }\n      if (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration && (isNullOrUndefined(data.ganttProperties.segments) || !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length === 0)) {\n        if (template !== '' && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n          /* eslint-disable-next-line */\n          var templateElement = this.createDivElement(template)[0];\n          if (this.parent.disableHtmlEncode) {\n            templateElement.innerText = labelString;\n          } else {\n            templateElement.innerHTML = labelString;\n          }\n          var childLabel = this.parent.labelSettings.taskLabel;\n          if (childLabel && childLabel['elementRef']) {\n            templateElement.appendChild(tempDiv);\n          }\n          progressDiv[0].appendChild(templateElement);\n          if (progressDiv[0].querySelectorAll('.e-task-label')[0].textContent !== '' && !this.isTemplate(childLabel) && progressDiv[0].querySelectorAll('.e-task-label')[0].children[0]) {\n            progressDiv[0].querySelectorAll('.e-task-label')[0].children[0].remove();\n          }\n          if (progressDiv[0].querySelectorAll('.e-task-label')[0].textContent === '' && childLabel && !childLabel['elementRef'] && tempDiv.innerHTML !== '') {\n            progressDiv[0].querySelectorAll('.e-task-label')[0].textContent = childLabel;\n          }\n        }\n        if (!isNullOrUndefined(taskbarInnerDiv) && taskbarInnerDiv.length > 0) {\n          taskbarInnerDiv[0].appendChild([].slice.call(progressDiv)[0]);\n        }\n        childTaskbarNode = taskbarInnerDiv;\n      } else {\n        childTaskbarNode = this.createDivElement(template);\n      }\n    }\n    if (this.parent.enableRtl && !isNullOrUndefined(childTaskbarNode) && childTaskbarNode[0] && childTaskbarNode[0].querySelector('.e-task-label')) {\n      childTaskbarNode[0].querySelector('.e-task-label').style.marginLeft = '15px';\n      childTaskbarNode[0].querySelector('.e-task-label').style.marginRight = '8px';\n      if (childTaskbarNode[0].querySelector('.e-gantt-child-progressbar')) {\n        childTaskbarNode[0].querySelector('.e-gantt-child-progressbar').style.textAlign = 'left';\n      }\n    }\n    return childTaskbarNode;\n  };\n  ChartRows.prototype.splitTaskbar = function (data, labelString) {\n    var splitTasks = '';\n    for (var i = 0; i < data.ganttProperties.segments.length; i++) {\n      var segment = data.ganttProperties.segments[i];\n      var progressBarVisible = void 0;\n      if (!segment.showProgress) {\n        progressBarVisible = 'hidden';\n      } else {\n        progressBarVisible = 'initial';\n      }\n      var segmentPosition = i === 0 ? 'e-segment-first' : i === data.ganttProperties.segments.length - 1 ? 'e-segment-last' : 'e-segment-inprogress';\n      splitTasks +=\n      //split taskbar\n      '<div class=\"' + cls.childTaskBarInnerDiv + ' ' + segmentPosition + ' ' + cls.traceChildTaskBar + ' ' + ' e-segmented-taskbar' + '\"style=\"width:' + segment.width + 'px;position: absolute;' + (this.parent.enableRtl ? 'right:' : 'left:') + segment.left + 'px;height:' + this.taskBarHeight + 'px; overflow:' + progressBarVisible + ';\" data-segment-index = \"' + i + '\" aria-label = \"' + this.generateSpiltTaskAriaLabel(segment, data.ganttProperties) + '\"> ' + this.getSplitTaskbarLeftResizerNode() +\n      //split progress bar\n      '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildProgressBar + ' ' + '\" style=\"border-style:' + (segment.progressWidth ? 'solid;' : 'none;') + 'display:' + (segment.progressWidth >= 0 ? 'block;' : 'none;') + 'width:' + segment.progressWidth + 'px;height:100%;' + 'text-align:' + (this.parent.enableRtl ? 'left;' : 'right;') + 'border-top-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;' + 'border-bottom-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;\">' +\n      // progress label\n      '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (this.taskBarHeight - 1) + 'px;display:' + (segment.showProgress ? 'inline;' : 'none;') + 'height:' + this.taskBarHeight + 'px;\">' + labelString + '</span>' + '</div>' + this.getSplitTaskbarRightResizerNode(segment) + '</div></div>';\n    }\n    return splitTasks;\n  };\n  ChartRows.prototype.getSplitTaskbarLeftResizerNode = function () {\n    var lResizerLeft = !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? 5 : -2;\n    var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' + ' style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + lResizerLeft + 'px;height:' + this.taskBarHeight + 'px;z-index:1\"></div>';\n    return template;\n  };\n  ChartRows.prototype.getSplitTaskbarRightResizerNode = function (segment) {\n    var rResizerLeft = !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? -17 : -10;\n    var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' + ' style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + (segment.width + rResizerLeft) + 'px;' + 'height:' + this.taskBarHeight + 'px;z-index:1\"></div>';\n    return template;\n  };\n  ChartRows.prototype.getSplitProgressResizerNode = function () {\n    var width = this.parent.enableRtl ? this.templateData.ganttProperties.progressWidth + 8 : this.templateData.ganttProperties.progressWidth - 6;\n    var template = '<div class=\"' + cls.childProgressResizer + '\"' + ' style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + width + 'px;margin-top:' + (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' + '><div class=\"' + cls.progressHandlerElement + '\"></div>' + '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n    return template;\n  };\n  ChartRows.prototype.getSegmentIndex = function (splitStartDate, record) {\n    var segmentIndex = -1;\n    var ganttProp = record.ganttProperties;\n    var segments = ganttProp.segments;\n    if (!isNullOrUndefined(segments)) {\n      segments.sort(function (a, b) {\n        return a.startDate.getTime() - b.startDate.getTime();\n      });\n      var length_1 = segments.length;\n      for (var i = 0; i < length_1; i++) {\n        var segment = segments[i];\n        // To find if user tend to split the start date of a main taskbar\n        // purpose of this to restrict the split action\n        if (splitStartDate.getTime() === ganttProp.startDate.getTime()) {\n          this.dropSplit = true;\n          segmentIndex = 0;\n          // To find the if user tend to split the first date of already segmented task.\n          // purpose of this to move on day of a segment\n        } else if (splitStartDate.getTime() === segment.startDate.getTime()) {\n          this.dropSplit = true;\n          var sDate = segment.startDate;\n          sDate.setDate(sDate.getDate() + 1);\n          sDate = segment.startDate = this.parent.dataOperation.checkStartDate(sDate, ganttProp, false);\n          segment.startDate = sDate;\n          var eDate = segment.endDate;\n          eDate = this.parent.dataOperation.getEndDate(sDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n          segment.endDate = eDate;\n          if (i === segments.length - 1) {\n            this.parent.setRecordValue('endDate', eDate, ganttProp, true);\n          }\n          this.incrementSegments(segments, i, record);\n          segmentIndex = segment.segmentIndex;\n          // To find if the user tend to split the segment and find the segment index\n        } else {\n          segment.endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n          if (splitStartDate.getTime() >= segment.startDate.getTime() && splitStartDate.getTime() <= segment.endDate.getTime()) {\n            segmentIndex = segment.segmentIndex;\n          }\n        }\n        this.parent.setRecordValue('segments', ganttProp.segments, ganttProp, true);\n      }\n    }\n    if (segmentIndex === -1) {\n      this.dropSplit = true;\n    }\n    return segmentIndex;\n  };\n  ChartRows.prototype.mergeTask = function (taskId, segmentIndexes) {\n    var mergeArrayLength = segmentIndexes.length;\n    var taskFields = this.parent.taskFields;\n    var mergeData = this.parent.flatData.filter(function (x) {\n      if (x[taskFields.id] === taskId) {\n        return x;\n      } else {\n        return null;\n      }\n    })[0];\n    if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      var details = {};\n      details['action'] = 'MergeTaskbar';\n      if (this.parent['isUndoRedoItemPresent']('Edit')) {\n        if (this.parent.editModule && this.parent.editModule.taskbarEditModule['isDragged'] && this.parent.getUndoActions().length > 0) {\n          this.parent.undoRedoModule['getUndoCollection'].splice(this.parent.undoRedoModule['getUndoCollection'].length - 1, 1);\n        }\n        this.parent.undoRedoModule['createUndoCollection']();\n        var rec = this.parent.previousFlatData[mergeData.index];\n        details['modifiedRecords'] = extend([], [rec], [], true);\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n      }\n    }\n    var segments = mergeData.ganttProperties.segments;\n    segmentIndexes = segmentIndexes.sort(function (a, b) {\n      return b.firstSegmentIndex - a.firstSegmentIndex;\n    });\n    for (var arrayLength = 0; arrayLength < mergeArrayLength; arrayLength++) {\n      var firstSegment = segments[segmentIndexes[arrayLength].firstSegmentIndex];\n      var secondSegment = segments[segmentIndexes[arrayLength].secondSegmentIndex];\n      var duration = firstSegment.duration + secondSegment.duration;\n      var endDate = this.parent.dataOperation.getEndDate(firstSegment.startDate, duration, mergeData.ganttProperties.durationUnit, mergeData.ganttProperties, false);\n      var segment = {\n        startDate: firstSegment.startDate,\n        endDate: endDate,\n        duration: duration\n      };\n      var insertIndex = segmentIndexes[arrayLength].firstSegmentIndex;\n      segments.splice(insertIndex, 2, segment);\n      this.parent.setRecordValue('segments', segments, mergeData.ganttProperties, true);\n      this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n      if (segments.length === 1) {\n        this.parent.setRecordValue('endDate', endDate, mergeData.ganttProperties, true);\n        this.parent.setRecordValue('EndDate', endDate, mergeData, true);\n        this.parent.setRecordValue('segments', null, mergeData.ganttProperties, true);\n        this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n      } else if (mergeData.ganttProperties.endDate !== segments[segments.length - 1].endDate) {\n        this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, mergeData.ganttProperties, true);\n      }\n    }\n    var segmentFields;\n    if (!isNullOrUndefined(mergeData[taskFields.segments]) && !isNullOrUndefined(mergeData[taskFields.segments][0])) {\n      segmentFields = Object.keys(mergeData[taskFields.segments][0]);\n    }\n    var modifiedSegments = [];\n    for (var i = 0; i < segments.length; i++) {\n      if (!isNullOrUndefined(segmentFields) && !modifiedSegments[i]) {\n        modifiedSegments[i] = {};\n      }\n      if (!isNullOrUndefined(segmentFields) && segmentFields.indexOf('StartDate') !== -1) {\n        modifiedSegments[i][taskFields.startDate] = segments[i].startDate;\n      }\n      if (!isNullOrUndefined(segmentFields) && segmentFields.indexOf('EndDate') !== -1) {\n        modifiedSegments[i][taskFields.endDate] = segments[i].endDate;\n      }\n      if (!isNullOrUndefined(segmentFields) && segmentFields.indexOf('Duration') !== -1) {\n        modifiedSegments[i][taskFields.duration] = segments[i].duration;\n      }\n    }\n    mergeData[taskFields.segments] = modifiedSegments;\n    this.updateSegment(mergeData.ganttProperties.segments, taskId);\n    this.refreshChartAfterSegment(mergeData, 'mergeSegment');\n  };\n  ChartRows.prototype.updateSegment = function (segmentData, taskId) {\n    var _this = this;\n    if (!isNullOrUndefined(this.parent.taskFields.segmentId) && this.parent.segmentData.length > 0) {\n      if (!isNullOrUndefined(segmentData)) {\n        var segmentsArray = [];\n        for (var i = 0; i < segmentData.length; i++) {\n          var segmentObj = {};\n          var segment = segmentData[i];\n          segmentObj[this.parent.taskFields.segmentId] = taskId;\n          if (!isNullOrUndefined(this.parent.taskFields.startDate)) {\n            segmentObj[this.parent.taskFields.startDate] = segment.startDate;\n          }\n          if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n            segmentObj[this.parent.taskFields.duration] = segment.duration;\n          }\n          if (!isNullOrUndefined(this.parent.taskFields.endDate)) {\n            segmentObj[this.parent.taskFields.endDate] = segment.endDate;\n          }\n          segmentsArray.push(segmentObj);\n        }\n        var filterData = this.parent.segmentData.filter(function (data) {\n          return !(taskId === data[_this.parent.taskFields.segmentId]);\n        });\n        for (var i = 0; i < segmentsArray.length; i++) {\n          filterData.push(segmentsArray[i]);\n        }\n        this.parent.segmentData = filterData;\n      } else {\n        var filterData = this.parent.segmentData.filter(function (data) {\n          return !(taskId === data[_this.parent.taskFields.segmentId]);\n        });\n        this.parent.segmentData = filterData;\n      }\n    }\n  };\n  ChartRows.prototype.refreshChartAfterSegment = function (data, requestType) {\n    this.parent.setRecordValue('segments', this.parent.dataOperation.setSegmentsInfo(data, false), data.ganttProperties, true);\n    this.parent.dataOperation.updateMappingData(data, 'segments');\n    this.parent.dataOperation.updateWidthLeft(data);\n    this.parent.dataOperation.updateParentItems(data);\n    if (this.parent.predecessorModule && this.parent.taskFields.dependency) {\n      this.parent.predecessorModule.updatedRecordsDateByPredecessor();\n      this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.flatData);\n      this.parent.connectorLineEditModule.refreshEditedRecordConnectorLine(this.parent.flatData);\n      if (data.parentItem && this.parent.getParentTask(data.parentItem).ganttProperties.isAutoSchedule && this.parent.isInPredecessorValidation) {\n        this.parent.dataOperation.updateParentItems(data.parentItem);\n      }\n      this.refreshRecords(this.parent.currentViewData);\n    } else {\n      this.refreshRecords(this.parent.currentViewData);\n    }\n    var tr = this.ganttChartTableBody.querySelectorAll('tr')[this.parent.currentViewData.indexOf(data)];\n    var args = {\n      requestType: requestType,\n      rowData: data,\n      modifiedRecords: this.parent.editedRecords,\n      modifiedTaskData: getTaskData(this.parent.editedRecords, true)\n    };\n    this.triggerQueryTaskbarInfoByIndex(tr, data);\n    if (this.parent.selectionModule) {\n      this.parent.selectionModule.clearSelection();\n    }\n    var segments = args.rowData.taskData[this.parent.taskFields.segments];\n    if (this.parent.timezone && segments != null) {\n      for (var i = 0; i < segments.length; i++) {\n        segments[i][this.parent.taskFields.startDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].startDate, this.parent.timezone);\n        if (this.parent.taskFields.endDate) {\n          segments[i][this.parent.taskFields.endDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].endDate, this.parent.timezone);\n        }\n      }\n    }\n    this.parent.trigger('actionComplete', args);\n    if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n      this.parent.hideMaskRow();\n    } else {\n      this.parent.hideSpinner();\n    }\n    setValue('isEdit', false, this.parent.contextMenuModule);\n    setValue('isEdit', false, this.parent);\n  };\n  /**\n   * public method to split task bar.\n   *\n   * @public\n   */\n  ChartRows.prototype.splitTask = function (taskId, splitDates) {\n    var taskFields = this.parent.taskFields;\n    var splitDate = splitDates;\n    var splitRecord = this.parent.flatData.filter(function (x) {\n      if (x[taskFields.id] === taskId) {\n        return x;\n      } else {\n        return null;\n      }\n    })[0];\n    if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n      var details = {};\n      details['action'] = 'MergeTaskbar';\n      if (this.parent['isUndoRedoItemPresent']('Edit')) {\n        this.parent.undoRedoModule['createUndoCollection']();\n        details['modifiedRecords'] = extend([], [splitRecord], [], true);\n        this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n      }\n    }\n    var ganttProp = splitRecord.ganttProperties;\n    this.dropSplit = false;\n    var segmentIndex = -1;\n    var segments = ganttProp.segments;\n    if (isNullOrUndefined(splitDates.length) || splitDates.length < 0) {\n      var splitStartDate = this.parent.dataOperation.checkStartDate(splitDate, ganttProp, false);\n      if (splitStartDate.getTime() !== ganttProp.startDate.getTime()) {\n        if (ganttProp.isAutoSchedule) {\n          if (!isNullOrUndefined(segments) && segments.length > 0) {\n            segmentIndex = this.getSegmentIndex(splitStartDate, splitRecord);\n          }\n          //check atleast one day difference is there to split\n          if (this.dropSplit === false && splitDate.getTime() > ganttProp.startDate.getTime() && splitDate.getTime() < ganttProp.endDate.getTime()) {\n            segments = segmentIndex !== -1 ? segments : [];\n            var startDate = segmentIndex !== -1 ? segments[segmentIndex].startDate : new Date(ganttProp.startDate.getTime());\n            var endDate = segmentIndex !== -1 ? segments[segmentIndex].endDate : new Date(ganttProp.endDate.getTime());\n            var segmentDuration = this.parent.dataOperation.getDuration(startDate, endDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone);\n            this.parent.setRecordValue('segments', this.splitSegmentedTaskbar(startDate, endDate, splitDate, segmentIndex, segments, splitRecord, segmentDuration), ganttProp, true);\n            var modifiedSegments = [];\n            for (var i = 0; i < segments.length; i++) {\n              if (!modifiedSegments[i]) {\n                modifiedSegments[i] = {};\n              }\n              modifiedSegments[i][taskFields.startDate] = segments[i].startDate;\n              modifiedSegments[i][taskFields.endDate] = segments[i].endDate;\n              modifiedSegments[i][taskFields.duration] = segments[i].duration;\n            }\n            splitRecord[taskFields.segments] = modifiedSegments;\n            if (segmentIndex !== -1) {\n              this.incrementSegments(segments, segmentIndex + 1, splitRecord);\n            }\n            this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, ganttProp, true);\n            if (this.parent.taskFields.endDate) {\n              this.parent.dataOperation.updateMappingData(splitRecord, 'endDate');\n            }\n          }\n          this.updateSegment(splitRecord.ganttProperties.segments, taskId);\n          this.refreshChartAfterSegment(splitRecord, 'splitTaskbar');\n        }\n      }\n    } else {\n      splitDates.sort(function (a, b) {\n        return a.getTime() - b.getTime();\n      });\n      this.parent.setRecordValue('segments', this.constructSegments(splitDates, splitRecord.ganttProperties), splitRecord.ganttProperties, true);\n      this.updateSegment(splitRecord.ganttProperties.segments, taskId);\n      this.refreshChartAfterSegment(splitRecord, 'splitTask');\n    }\n  };\n  ChartRows.prototype.constructSegments = function (dates, taskData) {\n    var segmentsArray = [];\n    var segment;\n    var startDate = new Date();\n    var endDate;\n    var duration;\n    for (var i = 0; i < dates.length + 1; i++) {\n      startDate = i === 0 ? taskData.startDate : startDate;\n      startDate = this.parent.dataOperation.checkStartDate(startDate, taskData, false);\n      endDate = i !== dates.length ? new Date(dates[i].getTime()) > taskData.endDate ? taskData.endDate : new Date(dates[i].getTime()) : taskData.endDate;\n      endDate = this.parent.dataOperation.checkEndDate(endDate, taskData, false);\n      duration = this.parent.dataOperation.getDuration(startDate, endDate, taskData.durationUnit, taskData.isAutoSchedule, taskData.isMilestone);\n      if (endDate.getTime() >= startDate.getTime()) {\n        segment = {\n          startDate: startDate,\n          endDate: endDate,\n          duration: duration\n        };\n        segmentsArray.push(segment);\n      }\n      if (i === dates.length) {\n        break;\n      }\n      startDate = new Date(dates[i].getTime());\n      startDate.setDate(dates[i].getDate() + 1);\n    }\n    return segmentsArray;\n  };\n  ChartRows.prototype.splitSegmentedTaskbar = function (startDate, endDate, splitDate, segmentIndex, segments, ganttData, segmentDuration) {\n    var ganttProp = ganttData.ganttProperties;\n    var checkClickState;\n    var endDateState;\n    if (this.parent.includeWeekend) {\n      checkClickState = -1;\n    } else {\n      checkClickState = this.parent.nonWorkingDayIndex.indexOf(splitDate.getDay());\n    }\n    var increment = checkClickState === -1 ? 0 : checkClickState === 0 ? 1 : checkClickState === 1 ? 1 : 2;\n    startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n    var segmentEndDate = new Date(splitDate.getTime());\n    segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n    for (var i = 0; i < 2; i++) {\n      if (this.parent.weekWorkingTime.length > 0) {\n        var dayEndTime = this.parent['getCurrentDayEndTime'](segmentEndDate);\n        this.setTime(dayEndTime, segmentEndDate);\n      }\n      var segment = {\n        startDate: startDate,\n        endDate: segmentEndDate,\n        duration: this.parent.dataOperation.getDuration(startDate, segmentEndDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone),\n        offsetDuration: 1\n      };\n      if (this.parent.includeWeekend) {\n        endDateState = -1;\n      } else {\n        endDateState = this.parent.nonWorkingDayIndex.indexOf(segmentEndDate.getDay());\n      }\n      if (segmentIndex !== -1) {\n        segments.splice(segmentIndex, 1);\n        segmentIndex = -1;\n      }\n      segments.push(segment);\n      var mode = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n      if (mode === 'Hour' || mode === 'Minutes') {\n        startDate = new Date(splitDate.getTime());\n        startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n        var count = this.parent.timelineModule.customTimelineSettings.bottomTier.count;\n        var mode_1 = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n        var timeIncrement = this.parent.timelineModule.getIncrement(startDate, count, mode_1);\n        var newTime = startDate.getTime() + timeIncrement;\n        startDate.setTime(newTime + increment);\n        segmentEndDate = new Date(endDate.getTime());\n        timeIncrement = this.parent.timelineModule.getIncrement(segmentEndDate, count, mode_1);\n        newTime = segmentEndDate.getTime() + timeIncrement;\n        segmentEndDate.setTime(newTime + increment);\n      } else {\n        startDate = new Date(splitDate.getTime());\n        startDate.setDate(startDate.getDate() + 1 + increment);\n        var dayStartTime = this.parent['getCurrentDayStartTime'](startDate);\n        this.setTime(dayStartTime, startDate);\n        startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n        if (!this.parent.taskFields.duration && increment <= 0) {\n          startDate.setDate(startDate.getDate() + 1);\n        }\n        segmentEndDate = new Date(endDate.getTime());\n        if (this.isOnHolidayOrWeekEnd(segmentEndDate, true)) {\n          do {\n            segmentEndDate.setDate(segmentEndDate.getDate() + 1);\n          } while (this.isOnHolidayOrWeekEnd(segmentEndDate, true));\n        }\n        if (!this.parent.includeWeekend) {\n          segmentEndDate = this.getNextWorkingDay(segmentEndDate);\n        }\n      }\n      if (endDateState !== -1) {\n        var diff = segmentDuration - segment.duration;\n        segmentEndDate = this.parent.dataOperation.getEndDate(startDate, diff, ganttProp.durationUnit, ganttProp, false);\n      } else {\n        segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n      }\n    }\n    segments.sort(function (a, b) {\n      return a.startDate.getTime() - b.startDate.getTime();\n    });\n    return segments;\n  };\n  ChartRows.prototype.incrementSegments = function (segments, segmentIndex, ganttData) {\n    var ganttProp = ganttData.ganttProperties;\n    for (var i = segmentIndex + 1; i < segments.length; i++) {\n      var segment = segments[i];\n      var startDate = i !== 0 ? new Date(segments[i - 1].endDate.getTime()) : new Date(segment.startDate.getTime());\n      this.parent.dataOperation['fromSegments'] = true;\n      startDate = this.parent.dataOperation.getEndDate(startDate, segment.offsetDuration, ganttProp.durationUnit, ganttProp, false);\n      this.parent.dataOperation['fromSegments'] = false;\n      startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n      segment.startDate = startDate;\n      var endDate = segment.endDate = this.parent.dataOperation.getEndDate(startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n      segment.endDate = endDate;\n      if (i === segments.length - 1) {\n        this.parent.setRecordValue('endDate', endDate, ganttProp, true);\n        if (this.parent.taskFields.endDate) {\n          this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n        }\n      }\n    }\n    segments.sort(function (a, b) {\n      return a.startDate.getTime() - b.startDate.getTime();\n    });\n    this.parent.setRecordValue('segments', segments, ganttProp, true);\n    this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n  };\n  ChartRows.prototype.calculateLeftValue = function (rowHeight) {\n    var taskbarHeightValue = this.parent.renderBaseline ? 0.45 : !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? 0.7 : 0.62;\n    var defaultTaskbarHeight = Math.floor(this.parent.rowHeight * taskbarHeightValue);\n    if (!isNullOrUndefined(this.parent.taskbarHeight) && this.parent.taskbarHeight <= defaultTaskbarHeight || isNullOrUndefined(this.parent.taskbarHeight) && rowHeight <= 36) {\n      return 1;\n    } else {\n      if (rowHeight <= 36) {\n        return 1;\n      }\n      return -1 / 12 * (rowHeight - 36) + 1;\n    }\n  };\n  /**\n   * To get milestone node.\n   *\n   * @param {number} i .\n   * @param {NodeList} rootElement .\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getMilestoneNode = function (i, rootElement) {\n    var milestoneNode = null;\n    var data = this.templateData;\n    var rowHeight = this.parent.rowHeight;\n    var leftValue = this.calculateLeftValue(rowHeight);\n    if (this.milestoneTemplateFunction) {\n      milestoneNode = this.milestoneTemplateFunction(extend({\n        index: i\n      }, data), this.parent, 'MilestoneTemplate', this.getTemplateID('MilestoneTemplate'), false, undefined, rootElement[0], this.parent.treeGrid['root']);\n    } else {\n      var template = '<div class=\"' + cls.traceMilestone + '\" style=\"width:' + (this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 6) + 'px;height:' + (this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 6) + 'px;position:absolute;transform: rotate(45deg);left:' + leftValue + 'px;\"> </div>';\n      milestoneNode = this.createDivElement(template);\n    }\n    return milestoneNode;\n  };\n  /**\n   * To get task baseline Node.\n   *\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getTaskBaselineNode = function () {\n    var data = this.templateData;\n    var template = '<div class=\"' + cls.baselineBar + ' ' + '\" role=\"term\" style=\"margin-top:' + this.baselineTop + 'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + data.ganttProperties.baselineLeft + 'px;' + 'width:' + data.ganttProperties.baselineWidth + 'px;height:' + this.baselineHeight + 'px;' + (this.baselineColor ? 'background-color: ' + this.baselineColor + ';' : '') + '\"></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.updateTaskBaselineNode = function (childData) {\n    var template = '<div class=\"' + cls.baselineBar + ' ' + '\" role=\"term\" style=\"margin-top:' + this.baselineTop + 'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + childData.ganttProperties.baselineLeft + 'px;' + 'width:' + childData.ganttProperties.baselineWidth + 'px;height:' + this.baselineHeight + 'px;' + (this.baselineColor ? 'background-color: ' + this.baselineColor + ';' : '') + '\"></div>';\n    return this.createDivElement(template);\n  };\n  /**\n   * To get milestone baseline node.\n   *\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getMilestoneBaselineNode = function () {\n    var data = this.templateData;\n    var baselineMilestoneHeight = this.parent.renderBaseline ? 5 : 2;\n    var template = '<div class=\"' + cls.baselineMilestoneContainer + '\" style=\"width:' + (this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 10) + 'px;height:' + (this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 10) + 'px;position:absolute;transform:rotate(45deg);' + (this.parent.enableRtl ? 'right:' : 'left:') + (this.parent.enableRtl ? data.ganttProperties.left - this.milestoneHeight / 2 + 3 : data.ganttProperties.baselineLeft - this.milestoneHeight / 2 + 1) + 'px;' + (this.baselineColor ? 'background-color: ' + this.baselineColor + ';' : '') + 'margin-top:' + (-Math.floor(this.parent.rowHeight - this.milestoneMarginTop) + baselineMilestoneHeight + 2) + 'px\"> </div>';\n    return this.createDivElement(template);\n  };\n  /**\n   * To get left label node.\n   *\n   * @param {number} i .\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getLeftLabelNode = function (i) {\n    var leftLabelNode = this.leftLabelContainer();\n    if (this.generateTaskLabelAriaLabel('left') !== '') {\n      leftLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('left'));\n    }\n    var leftLabelTemplateNode = null;\n    if (this.leftTaskLabelTemplateFunction) {\n      leftLabelTemplateNode = this.leftTaskLabelTemplateFunction(extend({\n        index: i\n      }, this.templateData), this.parent, 'LeftLabelTemplate', this.getTemplateID('LeftLabelTemplate'), false, undefined, leftLabelNode[0], this.parent.treeGrid['root']);\n    } else {\n      var field = this.parent.labelSettings.leftLabel;\n      var labelString = this.getTaskLabel(field);\n      if (labelString) {\n        labelString = labelString === 'isCustomTemplate' ? field : labelString;\n        leftLabelTemplateNode = this.getLableText(labelString, cls.leftLabelInnerDiv);\n        if (this.parent.enableHtmlSanitizer && typeof labelString === 'string') {\n          labelString = SanitizeHtmlHelper.sanitize(labelString);\n          labelString = labelString === 'isCustomTemplate' ? field : labelString;\n          leftLabelTemplateNode = this.getLableText(labelString, cls.leftLabelInnerDiv);\n        }\n      }\n    }\n    if (leftLabelTemplateNode && leftLabelTemplateNode.length > 0) {\n      if (leftLabelTemplateNode[0]['data'] === 'null') {\n        leftLabelTemplateNode[0]['data'] = '';\n      }\n      append(leftLabelTemplateNode, leftLabelNode[0]);\n    }\n    if (this.parent.enableRtl) {\n      leftLabelNode[0].style.paddingLeft = '25px';\n      leftLabelNode[0].style.paddingRight = '0px';\n    }\n    return leftLabelNode;\n  };\n  ChartRows.prototype.getLableText = function (labelString, labelDiv) {\n    var leftLabelHeight = this.parent.renderBaseline ? (this.parent.rowHeight - this.taskBarHeight) / 2 : this.taskBarMarginTop;\n    var templateString = createElement('div', {\n      className: labelDiv,\n      styles: 'height:' + this.taskBarHeight + 'px;' + 'margin-top:' + leftLabelHeight + 'px;'\n    });\n    var spanElem = createElement('span', {\n      className: cls.label\n    });\n    var property = this.parent.disableHtmlEncode ? 'textContent' : 'innerHTML';\n    spanElem[property] = labelString;\n    templateString.appendChild(spanElem);\n    var div = createElement('div');\n    div.appendChild(templateString);\n    return div.childNodes;\n  };\n  /**\n   * To get right label node.\n   *\n   * @param {number} i .\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getRightLabelNode = function (i) {\n    var rightLabelNode = this.rightLabelContainer();\n    if (this.generateTaskLabelAriaLabel('right') !== '') {\n      rightLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('right'));\n    }\n    var rightLabelTemplateNode = null;\n    if (this.rightTaskLabelTemplateFunction) {\n      rightLabelTemplateNode = this.rightTaskLabelTemplateFunction(extend({\n        index: i\n      }, this.templateData), this.parent, 'RightLabelTemplate', this.getTemplateID('RightLabelTemplate'), false, undefined, rightLabelNode[0], this.parent.treeGrid['root']);\n    } else {\n      var field = this.parent.labelSettings.rightLabel;\n      var labelString = this.getTaskLabel(field);\n      if (labelString) {\n        labelString = labelString === 'isCustomTemplate' ? field : labelString;\n        rightLabelTemplateNode = this.getLableText(labelString, cls.rightLabelInnerDiv);\n        if (this.parent.enableHtmlSanitizer && typeof labelString === 'string') {\n          labelString = SanitizeHtmlHelper.sanitize(labelString);\n          labelString = labelString === 'isCustomTemplate' ? field : labelString;\n          rightLabelTemplateNode = this.getLableText(labelString, cls.rightLabelInnerDiv);\n        }\n      }\n    }\n    if (rightLabelTemplateNode && rightLabelTemplateNode.length > 0) {\n      if (rightLabelTemplateNode[0]['data'] === 'null') {\n        rightLabelTemplateNode[0]['data'] = '';\n      }\n      append(rightLabelTemplateNode, rightLabelNode[0]);\n    }\n    if (this.parent.enableRtl) {\n      rightLabelNode[0].style.marginLeft = '0px';\n      rightLabelNode[0].style.paddingRight = '25px';\n    }\n    return rightLabelNode;\n  };\n  ChartRows.prototype.getManualTaskbar = function () {\n    var data = this.templateData;\n    var taskbarHeight = this.taskBarHeight / 2 - 1;\n    var innerDiv = data.ganttProperties.startDate && data.ganttProperties.endDate && (data.ganttProperties.duration || data.hasChildRecords) ? '<div class=\"' + cls.manualParentTaskBar + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' + taskbarHeight / 5 + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' : !data.ganttProperties.startDate && !data.ganttProperties.endDate && data.ganttProperties.duration ? '<div class=\"' + cls.manualParentTaskBar + ' ' + cls.traceManualUnscheduledTask + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' + (taskbarHeight / 5 + 1) + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' : '<div class=\"' + cls.manualParentTaskBar + ' ' + (data.ganttProperties.startDate ? cls.unscheduledTaskbarLeft : cls.unscheduledTaskbarRight) + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' + taskbarHeight * 2 + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>';\n    var childEle = innerDiv + (data.ganttProperties.startDate && data.ganttProperties.endDate && (data.ganttProperties.duration || data.hasChildRecords) || data.ganttProperties.duration ? '<div class=\"e-gantt-manualparenttaskbar-left\" style=' + (this.parent.enableRtl ? 'margin-right:0px;' : '') + '\"height:' + (taskbarHeight / 5 + 8) + 'px;border-left-width:' + taskbarHeight / 5 + 'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' + '<div class=\"e-gantt-manualparenttaskbar-right\" style=' + (this.parent.enableRtl ? 'margin-right:-8px;' : '') + (this.parent.enableRtl ? 'right:' : 'left:') + (data.ganttProperties.width - Math.floor((taskbarHeight / 5 + 8) / 5)) + 'px;height:' + (taskbarHeight / 5 + 8) + 'px;border-right-width:' + taskbarHeight / 5 + 'px;border-bottom:' + taskbarHeight / 5 + 'px solid transparent;>' + '</div></div>' : '');\n    var template = '<div class=\"' + cls.manualParentMainContainer + '\"' + 'style=' + (this.parent.enableRtl ? 'right:' : 'left:') + (data.ganttProperties.left - data.ganttProperties.autoLeft) + 'px;' + 'width:' + data.ganttProperties.width + 'px;' + 'height:' + taskbarHeight + 'px;cursor:' + (this.parent.editSettings.allowTaskbarEditing ? 'move;' : 'default;') + '</div>';\n    var milestoneTemplate = '<div class=\"' + cls.manualParentMilestone + '\" style=\"width:' + (this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7) + 'px;height:' + (this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7) + 'px;position:absolute;transform: rotate(45deg);top:' + (this.parent.rowHeight > 40 ? 0 : 2) + 'px;left:' + (this.parent.renderBaseline ? 2 : 1) + 'px;\"> </div>';\n    return this.createDivElement(data.ganttProperties.duration === 0 && data.hasChildRecords && !data.ganttProperties.isAutoSchedule ? milestoneTemplate + childEle : template + childEle);\n  };\n  /**\n   * To get parent taskbar node.\n   *\n   * @param {number} i .\n   * @param {NodeList} rootElement .\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getParentTaskbarNode = function (i, rootElement) {\n    var parentTaskbarNode = null;\n    var data = this.templateData;\n    if (this.parentTaskbarTemplateFunction) {\n      parentTaskbarNode = this.parentTaskbarTemplateFunction(extend({\n        index: i\n      }, data), this.parent, 'ParentTaskbarTemplate', this.getTemplateID('ParentTaskbarTemplate'), false, undefined, rootElement[0], this.parent.treeGrid['root']);\n    } else {\n      var labelString = '';\n      var labelDiv = void 0;\n      var tHeight = this.taskBarHeight / 5;\n      var template = this.createDivElement('<div class=\"' + cls.parentTaskBarInnerDiv + ' ' + this.getExpandClass(data) + ' ' + cls.traceParentTaskBar + '\"' + ' style=\"width:' + (data.ganttProperties.isAutoSchedule ? data.ganttProperties.width : data.ganttProperties.autoWidth) + 'px;height:' + (data.ganttProperties.isAutoSchedule ? this.taskBarHeight : tHeight * 3) + 'px;margin-top:' + (data.ganttProperties.isAutoSchedule ? -1 : tHeight * 2) + 'px; \">' + '</div>');\n      var progressBarInnerDiv = this.createDivElement('<div class=\"' + cls.parentProgressBarInnerDiv + ' ' + this.getExpandClass(data) + ' ' + cls.traceParentProgressBar + '\"' + ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') + 'width:' + data.ganttProperties.progressWidth + 'px;' + 'border-top-right-radius:' + this.getBorderRadius(data) + 'px;' + 'border-bottom-right-radius:' + this.getBorderRadius(data) + 'px;height:100%;\"></div>');\n      var div = createElement('div');\n      if (this.taskLabelTemplateFunction) {\n        var parentTaskLabelNode = this.taskLabelTemplateFunction(extend({\n          index: i\n        }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressBarInnerDiv[0]);\n        if (parentTaskLabelNode && parentTaskLabelNode.length > 0) {\n          append(parentTaskLabelNode, div);\n          labelString = div.innerHTML;\n        }\n      } else {\n        labelString = this.getTaskLabel(this.parent.labelSettings.taskLabel);\n        labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n        if (this.parent.enableHtmlSanitizer && typeof labelString === 'string') {\n          labelString = SanitizeHtmlHelper.sanitize(labelString);\n        }\n      }\n      if (labelString.indexOf('null') === -1) {\n        if (this.getTaskLabel(this.parent.labelSettings.taskLabel) === 'isCustomTemplate' && !this.isTemplate(this.parent.labelSettings.taskLabel)) {\n          labelString = '';\n        }\n        if (isNaN(parseInt(labelString, 10))) {\n          labelDiv = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (data['isManual'] && data.hasChildRecords ? Math.floor(60 / 100 * this.taskBarHeight) : this.taskBarHeight - 1) + 'px; text-align:' + (this.parent.enableRtl ? 'right;' : 'left;') + 'display:' + 'inline-block;' + 'width:' + (data.ganttProperties.width - 10) + 'px; height:' + this.taskBarHeight + 'px;\"></span>';\n        } else {\n          labelDiv = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' + (data['isManual'] && data.hasChildRecords ? Math.floor(60 / 100 * this.taskBarHeight) : this.taskBarHeight - 1) + 'px;' + (this.parent.viewType === 'ResourceView' ? 'display:inline-flex;' : '') + (this.parent.viewType === 'ResourceView' ? 'width:' + (data.ganttProperties.width - 10) : '') + 'px; height:' + (this.taskBarHeight - 1) + 'px;' + (this.parent.viewType === 'ResourceView' ? 'display: inline-flex;' : '') + (this.parent.viewType === 'ResourceView' ? 'width:' + (data.ganttProperties.width - 10) : '') + 'px; height:' + this.taskBarHeight + 'px;\"></span>';\n        }\n        var labelElement = this.createDivElement(labelDiv)[0];\n        if (this.parent.disableHtmlEncode) {\n          labelElement.innerText = labelString;\n        } else {\n          labelElement.innerHTML = labelString;\n        }\n        var parentLabel = this.parent.labelSettings.taskLabel;\n        if (parentLabel && parentLabel['elementRef']) {\n          labelElement.appendChild(div);\n        }\n        progressBarInnerDiv[0].appendChild(labelElement);\n        if (progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].textContent !== '' && !this.isTemplate(parentLabel) && progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].children[0]) {\n          progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].children[0].remove();\n        }\n        if (progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].textContent === '' && parentLabel && !parentLabel['elementRef'] && div.innerHTML !== '') {\n          progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].textContent = parentLabel;\n        }\n      }\n      var milestoneTemplate = '<div class=\"' + cls.parentMilestone + '\" style=\"width:' + (this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7) + 'px;height:' + (this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7) + 'px;position:absolute;transform: rotate(45deg);top:' + (this.parent.rowHeight > 40 ? 0 : 2) + 'px;left:' + (this.parent.renderBaseline ? 2 : 1) + 'px;\"> </div>';\n      template[0].appendChild([].slice.call(progressBarInnerDiv)[0]);\n      parentTaskbarNode = data.ganttProperties.isMilestone ? this.createDivElement(data.ganttProperties.isAutoSchedule ? milestoneTemplate : '') : template;\n    }\n    if (this.parent.enableRtl && parentTaskbarNode[0] && parentTaskbarNode[0].querySelector('.e-task-label')) {\n      parentTaskbarNode[0].querySelector('.e-task-label').style.marginLeft = '15px';\n      parentTaskbarNode[0].querySelector('.e-task-label').style.marginRight = '8px';\n      if (parentTaskbarNode[0].querySelector('.e-gantt-parent-progressbar')) {\n        parentTaskbarNode[0].querySelector('.e-gantt-parent-progressbar').style.textAlign = 'left';\n      }\n    }\n    return parentTaskbarNode;\n  };\n  /**\n   * To get taskbar row('TR') node\n   *\n   * @param {number} i .\n   * @returns {NodeList} .\n   * @private\n   */\n  ChartRows.prototype.getTableTrNode = function (i) {\n    var _this = this;\n    var table = createElement('table');\n    var className = this.parent.gridLines === 'Horizontal' || this.parent.gridLines === 'Both' ? 'e-chart-row-border' : '';\n    /* eslint-disable-next-line */\n    var activecls;\n    var rows;\n    if (this.parent.treeGridModule.isPersist) {\n      setTimeout(function () {\n        if (!isNullOrUndefined(_this.parent.treeGrid.grid) && !isNullOrUndefined(_this.parent.treeGrid.grid.contentModule) && !isNullOrUndefined(_this.parent.treeGrid.grid.contentModule.getRows())) {\n          rows = _this.parent.treeGrid.grid.contentModule.getRows()[i];\n          if (rows && rows.isSelected) {\n            activecls = 'e-active';\n          } else {\n            activecls = '';\n          }\n        }\n      }, 0);\n    } else {\n      rows = this.parent.treeGrid.grid.contentModule.getRows()[i];\n      if (rows && rows.isSelected) {\n        activecls = 'e-active';\n      } else {\n        activecls = '';\n      }\n    }\n    table.innerHTML = '<tr class=\"' + this.getRowClassName(this.templateData) + ' ' + cls.chartRow + ' ' + activecls + '\"' + 'style=\"display:' + this.getExpandDisplayProp(this.templateData) + ';height:' + this.parent.rowHeight + 'px;\">' + '<td class=\"' + cls.chartRowCell + ' ' + className + '\"style=\"width:' + this.parent.timelineModule.totalTimelineWidth + 'px;\"></td></tr>';\n    return table.childNodes;\n  };\n  /**\n   * To initialize chart templates.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.initializeChartTemplate = function () {\n    if (!isNullOrUndefined(this.parent.parentTaskbarTemplate)) {\n      this.parentTaskbarTemplateFunction = this.templateCompiler(this.parent.parentTaskbarTemplate);\n    }\n    if (!isNullOrUndefined(this.parent.labelSettings.leftLabel) && this.isTemplate(this.parent.labelSettings.leftLabel)) {\n      this.leftTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.leftLabel);\n    }\n    if (!isNullOrUndefined(this.parent.labelSettings.rightLabel) && this.isTemplate(this.parent.labelSettings.rightLabel)) {\n      this.rightTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.rightLabel);\n    }\n    if (!isNullOrUndefined(this.parent.labelSettings.taskLabel) && this.isTemplate(this.parent.labelSettings.taskLabel)) {\n      this.taskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.taskLabel);\n    }\n    if (!isNullOrUndefined(this.parent.taskbarTemplate)) {\n      this.childTaskbarTemplateFunction = this.templateCompiler(this.parent.taskbarTemplate);\n    }\n    if (!isNullOrUndefined(this.parent.milestoneTemplate)) {\n      this.milestoneTemplateFunction = this.templateCompiler(this.parent.milestoneTemplate);\n    }\n  };\n  ChartRows.prototype.createDivElement = function (template) {\n    var div = createElement('div');\n    div.innerHTML = template;\n    return div.childNodes;\n  };\n  ChartRows.prototype.isTemplate = function (template) {\n    var result = false;\n    for (var i = 0; i < this.parent.ganttColumns.length; i++) {\n      if (template === this.parent.ganttColumns[i].field) {\n        result = true;\n        break;\n      }\n    }\n    if (typeof template !== 'string' || template.indexOf('#') === 0 || template.indexOf('<') > -1 || template.indexOf('$') > -1 || !result) {\n      result = true;\n    } else {\n      result = false;\n    }\n    return result;\n  };\n  /**\n   * @param {string} templateName .\n   * @returns {string} .\n   * @private\n   */\n  ChartRows.prototype.getTemplateID = function (templateName) {\n    var ganttID = this.parent.element.id;\n    return ganttID + templateName;\n  };\n  ChartRows.prototype.leftLabelContainer = function () {\n    var template = '<div class=\"' + (this.leftTaskLabelTemplateFunction ? cls.leftLabelTempContainer : cls.leftLabelContainer) + ' ' + '\" tabindex=\"-1\" role=\"term\" style=\"height:' + (this.parent.rowHeight - 2) + 'px;width:' + this.taskNameWidth(this.templateData) + '\"></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.taskbarContainer = function () {\n    var data = this.templateData;\n    var manualParent = this.parent.editModule && this.parent.editSettings.allowTaskbarEditing && this.parent.editModule.taskbarEditModule.taskBarEditAction === 'ParentResizing' ? true : false;\n    var template = '<div class=\"' + cls.taskBarMainContainer + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) + ' ' + (data.ganttProperties.cssClass ? data.ganttProperties.cssClass : '') + '\" ' + ' tabindex=\"-1\" role=\"term\" style=\"' + (data.ganttProperties.isMilestone && !manualParent && !(data.hasChildRecords && !data.ganttProperties.isAutoSchedule) ? 'width:' + this.milestoneHeight + 'px;height:' + this.milestoneHeight + 'px;margin-top:' + this.milestoneMarginTop + 'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + (data.ganttProperties.left - this.milestoneHeight / 2) + 'px;cursor:' + (this.parent.editSettings.allowTaskbarEditing ? 'move;' : 'default;') : 'width:' + data.ganttProperties.width + 'px;margin-top:' + this.taskBarMarginTop + 'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + (!data.hasChildRecords || data.ganttProperties.isAutoSchedule ? data.ganttProperties.left : data.ganttProperties.autoLeft) + 'px;height:' + this.taskBarHeight + 'px;cursor:' + (this.parent.editSettings.allowTaskbarEditing ? 'move;' : 'default;')) + '\"></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.rightLabelContainer = function () {\n    var template = '<div class=\"' + (this.rightTaskLabelTemplateFunction ? cls.rightLabelTempContainer : cls.rightLabelContainer) + '\" ' + ' tabindex=\"-1\" role=\"term\" style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + this.getRightLabelLeft(this.templateData) + 'px; height:' + (this.parent.rowHeight - 2) + 'px;\"></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.childTaskbarLeftResizer = function () {\n    var lResizerLeft = !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? 5 : -2;\n    var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' + 'style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + lResizerLeft + 'px;height:' + this.taskBarHeight + 'px;z-index:1\"></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.childTaskbarRightResizer = function () {\n    var rResizerLeft = !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? -17 : -11;\n    var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' + 'style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + (this.templateData.ganttProperties.width + rResizerLeft) + 'px;' + 'height:' + this.taskBarHeight + 'px;z-index:1\"></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.childTaskbarProgressResizer = function () {\n    var width = this.parent.enableRtl ? this.templateData.ganttProperties.progressWidth + 8 : this.templateData.ganttProperties.progressWidth - 6;\n    var template = '<div class=\"' + cls.childProgressResizer + '\"' + 'style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + width + 'px;margin-top:' + (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' + '><div class=\"' + cls.progressHandlerElement + '\"></div>' + '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.getLeftPointNode = function () {\n    var data = this.templateData;\n    var left = !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? 12 : 0;\n    var mileStoneLeftValue = !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? 6 : 3;\n    var pointerLeft = -(2 + this.connectorPointWidth + left);\n    var mileStoneLeft = -(this.connectorPointWidth + mileStoneLeftValue);\n    var pointerTop = Math.floor(this.milesStoneRadius - this.connectorPointWidth / 2);\n    var marginTop;\n    if (!this.templateData.ganttProperties.isAutoSchedule && this.templateData.hasChildRecords && this.parent.allowParentDependency) {\n      marginTop = '';\n    } else {\n      marginTop = 'margin-top:' + this.connectorPointMargin + 'px';\n    }\n    var canAdd = true;\n    if (data.hasChildRecords && !this.parent.allowParentDependency) {\n      canAdd = false;\n    }\n    var template = '<div class=\"' + cls.leftConnectorPointOuterDiv + '\" style=\"' + (data.ganttProperties.isMilestone ? 'margin-top:' + pointerTop + 'px;left:' + mileStoneLeft + 'px;' : marginTop + ';left:' + pointerLeft + 'px;') + '\">' + '<div class=\"' + (canAdd ? cls.connectorPointLeft : '') + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) + '\" style=\"width: ' + this.connectorPointWidth + 'px;' + (this.parent.enableRtl ? 'margin-right:2px;' : '') + 'height: ' + this.connectorPointWidth + 'px;\">' + this.touchLeftConnectorpoint + '</div></div>';\n    return this.createDivElement(template);\n  };\n  ChartRows.prototype.getRightPointNode = function () {\n    var data = this.templateData;\n    var right = !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? -12 : 0;\n    var pointerRight = -(3 + right);\n    var pointerTop = Math.floor(this.milesStoneRadius - this.connectorPointWidth / 2);\n    var marginTop;\n    if (!this.templateData.ganttProperties.isAutoSchedule && this.templateData.hasChildRecords && this.parent.allowParentDependency) {\n      marginTop = '';\n    } else {\n      marginTop = 'margin-top:' + this.connectorPointMargin + 'px';\n    }\n    var canAdd = true;\n    if (data.hasChildRecords && !this.parent.allowParentDependency) {\n      canAdd = false;\n    }\n    var template = '<div class=\"' + cls.rightConnectorPointOuterDiv + '\" style=\"' + (data.ganttProperties.isMilestone ? 'left:' + (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? this.milestoneHeight + 5 : this.milestoneHeight - 2) + 'px;margin-top:' + pointerTop + 'px;' : 'left:' + (data.ganttProperties.width + pointerRight) + 'px;' + marginTop + ';') + '\">' + '<div class=\"' + (canAdd ? cls.connectorPointRight : '') + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) + '\" style=\"width:' + this.connectorPointWidth + 'px;height:' + this.connectorPointWidth + 'px;\">' + this.touchRightConnectorpoint + '</div></div>';\n    return this.createDivElement(template);\n  };\n  /**\n   * To get task label.\n   *\n   * @param {string} field .\n   * @returns {string} .\n   * @private\n   */\n  ChartRows.prototype.getTaskLabel = function (field) {\n    var length = this.parent.ganttColumns.length;\n    var resultString = null;\n    if (!isNullOrUndefined(field) && field !== '') {\n      if (field === this.parent.taskFields.resourceInfo) {\n        resultString = this.getResourceName(this.templateData);\n      } else {\n        for (var i = 0; i < length; i++) {\n          if (field === this.parent.ganttColumns[i].field) {\n            resultString = this.getFieldValue(this.templateData[field]).toString();\n            break;\n          }\n        }\n        if (isNullOrUndefined(resultString)) {\n          return 'isCustomTemplate';\n        }\n      }\n    } else {\n      resultString = '';\n    }\n    return resultString;\n  };\n  ChartRows.prototype.getExpandDisplayProp = function (data) {\n    data = this.templateData;\n    if (this.parent.getExpandStatus(data)) {\n      return 'table-row';\n    }\n    return 'none';\n  };\n  ChartRows.prototype.getRowClassName = function (data) {\n    data = this.templateData;\n    var rowClass = 'gridrowtaskId';\n    var parentItem = data.parentItem;\n    if (parentItem) {\n      rowClass += parentItem.taskId.toString();\n    }\n    rowClass += 'level';\n    rowClass += data.level.toString();\n    return rowClass;\n  };\n  ChartRows.prototype.getBorderRadius = function (data) {\n    data = this.templateData;\n    var diff = data.ganttProperties.width - data.ganttProperties.progressWidth;\n    if (diff <= 4) {\n      return 4 - diff;\n    } else {\n      return 0;\n    }\n  };\n  ChartRows.prototype.getSplitTaskBorderRadius = function (data) {\n    var diff = data.width - data.progressWidth;\n    if (diff <= 4) {\n      return 4 - diff;\n    } else {\n      return 0;\n    }\n  };\n  ChartRows.prototype.taskNameWidth = function (ganttData) {\n    ganttData = this.templateData;\n    var ganttProp = ganttData.ganttProperties;\n    var width;\n    if (ganttData.ganttProperties.isMilestone) {\n      width = ganttData.ganttProperties.left - this.parent.getTaskbarHeight() / 2;\n    } else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n      if (!this.parent.allowUnscheduledTasks) {\n        width = ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime() ? ganttProp.autoLeft : ganttProp.left;\n      } else {\n        width = ganttProp.left < ganttProp.autoLeft ? ganttProp.left : ganttProp.autoLeft;\n      }\n    } else {\n      width = ganttData.ganttProperties.left;\n    }\n    if (width < 0) {\n      width = 0;\n    }\n    return width + 'px';\n  };\n  ChartRows.prototype.getRightLabelLeft = function (ganttData) {\n    ganttData = this.templateData;\n    var ganttProp = ganttData.ganttProperties;\n    var left;\n    var endLeft;\n    var width;\n    if (ganttData.ganttProperties.isMilestone) {\n      return ganttData.ganttProperties.left + this.parent.getTaskbarHeight() / 2;\n    } else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n      if (!this.parent.allowUnscheduledTasks) {\n        left = ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime() ? ganttProp.autoLeft : ganttProp.left;\n        endLeft = ganttProp.autoEndDate.getTime() < ganttProp.endDate.getTime() ? this.parent.dataOperation.getTaskLeft(ganttProp.endDate, ganttProp.isMilestone) : this.parent.dataOperation.getTaskLeft(ganttProp.autoEndDate, ganttProp.isMilestone);\n        width = endLeft - left;\n      } else {\n        left = ganttProp.left < ganttProp.autoLeft ? ganttProp.autoLeft : ganttProp.left;\n        width = ganttProp.autoWidth;\n      }\n      return left + width;\n    } else {\n      return ganttData.ganttProperties.left + ganttData.ganttProperties.width;\n    }\n  };\n  ChartRows.prototype.getExpandClass = function (data) {\n    data = this.templateData;\n    if (data.expanded) {\n      return cls.rowExpand;\n    } else if (!data.expanded && data.hasChildRecords) {\n      return cls.rowCollapse;\n    }\n    return '';\n  };\n  ChartRows.prototype.getFieldValue = function (field) {\n    return isNullOrUndefined(field) ? '' : field;\n  };\n  ChartRows.prototype.getResourceName = function (ganttData) {\n    ganttData = this.templateData;\n    var resource = null;\n    if (!isNullOrUndefined(ganttData.ganttProperties.resourceInfo)) {\n      var length_2 = ganttData.ganttProperties.resourceInfo.length;\n      if (length_2 > 0) {\n        for (var i = 0; i < length_2; i++) {\n          var resourceName = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.name];\n          var resourceUnit = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.unit];\n          if (resourceUnit !== 100) {\n            resourceName += '[' + resourceUnit + '%' + ']';\n          }\n          if (isNullOrUndefined(resource)) {\n            resource = resourceName;\n          } else {\n            resource += ' , ' + resourceName;\n          }\n        }\n        return resource;\n      } else {\n        return '';\n      }\n    }\n    return '';\n  };\n  /**\n   * To initialize private variable help to render task bars.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.initChartHelperPrivateVariable = function () {\n    var taskbarHeightValue = this.parent.renderBaseline ? 0.45 : !isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger') ? 0.7 : 0.62;\n    var taskBarMarginTopValue = this.parent.renderBaseline ? 4 : 2;\n    var milestoneHeightValue = this.parent.renderBaseline ? 1.13 : 0.82;\n    this.parent.rowHeight = isNullOrUndefined(this.parent.rowHeight) ? 36 : this.parent.rowHeight;\n    this.baselineColor = !isNullOrUndefined(this.parent.baselineColor) && this.parent.baselineColor !== '' ? this.parent.baselineColor : null;\n    this.taskBarHeight = isNullOrUndefined(this.parent.taskbarHeight) || this.parent.taskbarHeight >= this.parent.rowHeight ? Math.floor(this.parent.rowHeight * taskbarHeightValue) : this.parent.taskbarHeight; // 0.62 -- Standard Ratio.\n    if (this.parent.renderBaseline) {\n      var height = void 0;\n      if (this.taskBarHeight + this.baselineHeight <= this.parent.rowHeight) {\n        height = this.taskBarHeight;\n      } else {\n        height = this.taskBarHeight - (this.baselineHeight + 1);\n      }\n      this.taskBarHeight = height;\n    }\n    this.milestoneHeight = Math.floor(this.taskBarHeight * milestoneHeightValue); // 0.82 -- Standard Ratio.\n    this.taskBarMarginTop = Math.floor((this.parent.rowHeight - this.taskBarHeight) / taskBarMarginTopValue);\n    this.milestoneMarginTop = Math.floor((this.parent.rowHeight - this.milestoneHeight) / 2);\n    this.milesStoneRadius = Math.floor(this.milestoneHeight / 2);\n    this.baselineTop = -(Math.floor(this.parent.rowHeight - (this.taskBarHeight + this.taskBarMarginTop)) - 4);\n    this.connectorPointWidth = this.parent.isAdaptive ? Math.round(this.taskBarHeight / 2) : 9;\n    this.connectorPointMargin = Math.floor(this.taskBarHeight / 2 - this.connectorPointWidth / 1.5);\n  };\n  /**\n   * Function used to refresh Gantt rows.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.refreshGanttRows = function () {\n    this.parent.currentViewData = this.parent.treeGrid.getCurrentViewRecords().slice();\n    this.createTaskbarTemplate();\n    if (this.parent.showOverAllocation) {\n      for (var i = 0; i < this.parent.currentViewData.length; i++) {\n        var data = this.parent.currentViewData[i];\n        if (data.childRecords.length > 0) {\n          this.parent.setRecordValue('workTimelineRanges', this.parent.dataOperation.mergeRangeCollections(data.ganttProperties.workTimelineRanges, true), data.ganttProperties, true);\n          this.parent.dataOperation.calculateRangeLeftWidth(data.ganttProperties.workTimelineRanges);\n        }\n      }\n      this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n    }\n    this.parent.ganttChartModule.updateLastRowBottomWidth();\n  };\n  /**\n   * To render taskbars.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.createTaskbarTemplate = function () {\n    var _this = this;\n    var _a;\n    var trs = [].slice.call(this.ganttChartTableBody.querySelectorAll('tr'));\n    this.ganttChartTableBody.innerHTML = '';\n    var collapsedResourceRecord = [];\n    var prevCurrentView = this.parent.treeGridModule.prevCurrentView;\n    this.refreshedTr = [];\n    this.refreshedData = [];\n    if (this.parent.enableImmutableMode && prevCurrentView && prevCurrentView.length > 0 && this.isUpdated) {\n      var oldKeys = {};\n      var oldRowElements = [];\n      var key = this.parent.treeGrid.getPrimaryKeyFieldNames()[0];\n      for (var i = 0; i < prevCurrentView.length; i++) {\n        oldRowElements[i] = trs[i];\n        oldKeys[prevCurrentView[i][key]] = i;\n      }\n      for (var index = 0; index < this.parent.currentViewData.length; index++) {\n        var oldIndex = oldKeys[this.parent.currentViewData[index][key]];\n        var modifiedRecIndex = this.parent.modifiedRecords.indexOf(this.parent.currentViewData[index]);\n        if (isNullOrUndefined(oldIndex) || modifiedRecIndex !== -1 || this.parent.isFromRenderBaseline) {\n          var tRow = this.getGanttChartRow(index, this.parent.currentViewData[index]);\n          this.ganttChartTableBody.appendChild(tRow);\n          this.refreshedTr.push(this.ganttChartTableBody.querySelectorAll('tr')[index]);\n          this.refreshedData.push(this.parent.currentViewData[index]);\n        } else {\n          this.ganttChartTableBody.appendChild(oldRowElements[oldIndex]);\n        }\n        this.ganttChartTableBody.querySelectorAll('tr')[index].setAttribute('data-rowindex', index.toString());\n      }\n    } else {\n      var dupChartBody = createElement('tbody', {\n        id: this.parent.element.id + 'GanttTaskTableBody'\n      });\n      for (var i = 0; i < this.parent.currentViewData.length; i++) {\n        var tempTemplateData = this.parent.currentViewData[i];\n        if (!tempTemplateData.expanded && this.parent.enableMultiTaskbar) {\n          collapsedResourceRecord.push(tempTemplateData);\n        }\n        var tRow = this.getGanttChartRow(i, tempTemplateData);\n        if (tempTemplateData.hasChildRecords && !tempTemplateData.expanded && this.parent.enableMultiTaskbar && !this.parent.allowTaskbarOverlap) {\n          this.updateDragDropRecords(tempTemplateData, tRow);\n        }\n        dupChartBody.appendChild(tRow);\n        if (this.parent.enableImmutableMode) {\n          this.refreshedTr.push(dupChartBody.querySelectorAll('tr')[i]);\n          this.refreshedData.push(this.parent.currentViewData[i]);\n        }\n        // To maintain selection when virtualization is enabled\n        if (this.parent.selectionModule && this.parent.allowSelection) {\n          this.parent.selectionModule.maintainSelectedRecords(parseInt(tRow.getAttribute('data-rowindex'), 10));\n        }\n      }\n      /* eslint-disable-next-line */\n      (_a = this.ganttChartTableBody).replaceChildren.apply(_a, dupChartBody.childNodes);\n      // To trigger the touchend event while perform touch Pinch In/Out action\n      this.ganttChartTableBody.childNodes.forEach(function (tr) {\n        if (tr instanceof Element) {\n          tr.addEventListener('touchmove', _this.handleTouchMove);\n          tr.addEventListener('touchend', _this.handleTouchEnd);\n        }\n      });\n      this.parent.initialChartRowElements = this.parent.ganttChartModule.getChartRows();\n    }\n    if (this.parent.enableCriticalPath && this.parent.criticalPathModule) {\n      var criticalModule = this.parent.criticalPathModule;\n      if (criticalModule.criticalPathCollection) {\n        this.parent.criticalPathModule.criticalConnectorLine(criticalModule.criticalPathCollection, criticalModule.detailPredecessorCollection, true, criticalModule.predecessorCollectionTaskIds);\n      }\n    }\n    this.parent.renderTemplates();\n    this.triggerQueryTaskbarInfo();\n    this.parent.modifiedRecords = [];\n    if (this.parent.showOverAllocation) {\n      this.updateOverlapped();\n    }\n    if (collapsedResourceRecord.length) {\n      for (var j = 0; j < collapsedResourceRecord.length; j++) {\n        if (collapsedResourceRecord[j].hasChildRecords) {\n          this.parent.isGanttChartRendered = true;\n          this.parent.chartRowsModule.refreshRecords([collapsedResourceRecord[j]]);\n        }\n      }\n    }\n    this.parent.isGanttChartRendered = true;\n    this.parent.renderTemplates();\n  };\n  /**\n   * To render taskbars.\n   *\n   * @param {number} i .\n   * @param {IGanttData} tempTemplateData .\n   * @returns {Node} .\n   * @private\n   */\n  ChartRows.prototype.getGanttChartRow = function (i, tempTemplateData) {\n    this.templateData = tempTemplateData;\n    var parentTrNode = this.getTableTrNode(i);\n    var leftLabelNode = this.getLeftLabelNode(i);\n    var taskbarContainerNode = this.taskbarContainer();\n    taskbarContainerNode[0].setAttribute('aria-label', this.generateAriaLabel(this.templateData));\n    taskbarContainerNode[0].setAttribute('rowUniqueId', this.templateData.ganttProperties.rowUniqueID);\n    var connectorLineLeftNode;\n    var connectorLineRightNode;\n    connectorLineLeftNode = this.getLeftPointNode();\n    if (this.templateData.ganttProperties.isAutoSchedule && this.parent.viewType === 'ProjectView' || !this.templateData.hasChildRecords) {\n      taskbarContainerNode[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n    }\n    if (this.templateData.hasChildRecords) {\n      var parentTaskbarTemplateNode = void 0;\n      if (!this.parent.enableMultiTaskbar || this.parent.enableMultiTaskbar && this.templateData.expanded) {\n        parentTaskbarTemplateNode = this.getParentTaskbarNode(i, taskbarContainerNode);\n      } else {\n        taskbarContainerNode = [];\n        for (var j = 0; j < this.templateData.childRecords.length; j++) {\n          this.templateData = this.templateData.childRecords[j];\n          var taskbarContainerNode1 = this.taskbarContainer();\n          taskbarContainerNode1[0].setAttribute('aria-label', this.generateAriaLabel(this.templateData));\n          taskbarContainerNode1[0].setAttribute('rowUniqueId', this.templateData.ganttProperties.rowUniqueID);\n          if (!this.parent.allowParentDependency) {\n            connectorLineLeftNode = this.getLeftPointNode();\n            taskbarContainerNode1[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n          } else {\n            connectorLineLeftNode = this.getLeftPointNode();\n            if (this.templateData.ganttProperties.isAutoSchedule || !this.templateData.hasChildRecords) {\n              taskbarContainerNode1[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n            }\n          }\n          this.appendChildTaskbars(tempTemplateData, i, taskbarContainerNode1, connectorLineRightNode, taskbarContainerNode);\n        }\n      }\n      if (!this.templateData.ganttProperties.isAutoSchedule) {\n        var manualTaskbar = this.getManualTaskbar();\n        if (!isNullOrUndefined(manualTaskbar[0])) {\n          if (this.parent.allowParentDependency) {\n            manualTaskbar[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n            var connectorLineRightNode_1 = this.getRightPointNode();\n            manualTaskbar[0].appendChild([].slice.call(connectorLineRightNode_1)[0]);\n          }\n          /* eslint-disable-next-line */\n          taskbarContainerNode[0].appendChild([].slice.call(manualTaskbar)[0]);\n        }\n      }\n      if (this.templateData.ganttProperties.autoDuration !== 0 && !this.templateData.ganttProperties.isMilestone && parentTaskbarTemplateNode && parentTaskbarTemplateNode.length > 0) {\n        append(parentTaskbarTemplateNode, taskbarContainerNode[0]);\n      } else if (this.templateData.ganttProperties.duration === 0 && this.templateData.ganttProperties.isMilestone && this.templateData.ganttProperties.isAutoSchedule) {\n        var milestoneTemplateNode = this.getMilestoneNode(i, taskbarContainerNode);\n        if (milestoneTemplateNode && milestoneTemplateNode.length > 0) {\n          append(milestoneTemplateNode, taskbarContainerNode[0]);\n        }\n      }\n      if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate && this.templateData.ganttProperties.baselineEndDate) {\n        this.taskBaselineTemplateNode = this.templateData.ganttProperties.baselineStartDate.getTime() === this.templateData.ganttProperties.baselineEndDate.getTime() || !isNullOrUndefined(this.templateData.ganttProperties.baselineStartDate) && !isNullOrUndefined(this.templateData.ganttProperties.startDate) && this.templateData.ganttProperties.baselineStartDate.getTime() === this.templateData.ganttProperties.startDate.getTime() && !isNullOrUndefined(this.templateData.ganttProperties.baselineEndDate) && !isNullOrUndefined(this.templateData.ganttProperties.endDate) && this.templateData.ganttProperties.baselineEndDate.getTime() === this.templateData.ganttProperties.endDate.getTime() && this.templateData.ganttProperties.isMilestone ? this.getMilestoneBaselineNode() : this.getTaskBaselineNode();\n      }\n      if (!this.parent.enableMultiTaskbar || this.parent.enableMultiTaskbar && this.templateData.expanded) {\n        if (this.parent.allowParentDependency && (this.templateData.ganttProperties.isAutoSchedule && this.parent.viewType === 'ProjectView' || !this.templateData.hasChildRecords)) {\n          connectorLineRightNode = this.getRightPointNode();\n          /* eslint-disable-next-line */\n          taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n        } else if (!this.parent.allowParentDependency) {\n          connectorLineRightNode = this.getRightPointNode();\n          /* eslint-disable-next-line */\n          taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n        }\n      }\n    } else {\n      this.appendChildTaskbars(tempTemplateData, i, taskbarContainerNode, connectorLineRightNode);\n    }\n    var rightLabelNode = this.getRightLabelNode(i);\n    if (this.parent.enableMultiTaskbar && this.templateData.hasChildRecords && !this.templateData.expanded) {\n      var collapseParent = createElement('div', {\n        className: 'e-collapse-parent'\n      });\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild(collapseParent);\n      for (var j = 0; j < taskbarContainerNode.length; j++) {\n        addClass([taskbarContainerNode[j]], 'collpse-parent-border');\n        parentTrNode[0].childNodes[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskbarContainerNode)[j]);\n      }\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n      if (this.templateData.ganttProperties.indicators && this.templateData.ganttProperties.indicators.length > 0) {\n        this.appendIndicators(i, parentTrNode);\n      }\n    } else {\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskbarContainerNode)[0]);\n      if (this.templateData.ganttProperties.indicators && this.templateData.ganttProperties.indicators.length > 0) {\n        this.appendIndicators(i, parentTrNode);\n      }\n      if (rightLabelNode && rightLabelNode.length > 0) {\n        parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(rightLabelNode)[0]);\n      }\n    }\n    if (!isNullOrUndefined(this.taskBaselineTemplateNode)) {\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(this.taskBaselineTemplateNode)[0]);\n    }\n    this.taskBaselineTemplateNode = null;\n    var tRow = parentTrNode[0].childNodes[0];\n    this.setAriaRowIndex(tempTemplateData, tRow);\n    return tRow;\n  };\n  /**\n   * To set data-rowindex for chart rows\n   *\n   * @returns {void} .\n   * @private\n   */\n  ChartRows.prototype.setAriaRowIndex = function (tempTemplateData, tRow) {\n    var _this = this;\n    var dataSource = this.parent.treeGrid.getCurrentViewRecords();\n    var visualData = this.parent.virtualScrollModule && this.parent.enableVirtualization ? getValue('virtualScrollModule.visualData', this.parent.treeGrid) : dataSource;\n    var index;\n    if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n      /* eslint-disable-next-line */\n      var gridData = this.parent.treeGrid.grid.contentModule['rows'];\n      /* eslint-disable-next-line */\n      var data = gridData.filter(function (x) {\n        if (x['data'][_this.parent.taskFields.id] === tempTemplateData.ganttProperties.taskId) {\n          return x;\n        }\n      })[0];\n      tRow.setAttribute('data-rowindex', data['index'].toString());\n    } else {\n      index = visualData.indexOf(tempTemplateData);\n      tRow.setAttribute('aria-rowindex', (index + 1).toString());\n      tRow.setAttribute('data-rowindex', index.toString());\n    }\n  };\n  /**\n   * To trigger query taskbar info event.\n   *\n   * @returns {void}\n   * @private\n   */\n  ChartRows.prototype.triggerQueryTaskbarInfo = function () {\n    if (!this.parent.queryTaskbarInfo) {\n      return;\n    }\n    var length = this.parent.enableImmutableMode ? this.refreshedTr.length : this.ganttChartTableBody.querySelectorAll('tr').length;\n    var trElement;\n    var data;\n    for (var index = 0; index < length; index++) {\n      trElement = this.parent.enableImmutableMode ? this.refreshedTr[index] : this.ganttChartTableBody.querySelectorAll('tr')[index];\n      data = this.refreshedData.length > 0 ? this.refreshedData[index] : this.parent.currentViewData[index];\n      var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n      if (segmentLength > 0) {\n        for (var i = 0; i < segmentLength; i++) {\n          var segmentedTasks = trElement.getElementsByClassName('e-segmented-taskbar');\n          var segmentElement = segmentedTasks[i];\n          this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n        }\n      } else if (trElement) {\n        this.triggerQueryTaskbarInfoByIndex(trElement, data);\n      }\n    }\n  };\n  ChartRows.prototype.appendIndicators = function (i, parentTrNode) {\n    var taskIndicatorNode;\n    var taskIndicatorTextFunction;\n    var taskIndicatorTextNode;\n    var indicators = this.templateData.ganttProperties.indicators;\n    for (var indicatorIndex = 0; indicatorIndex < indicators.length; indicatorIndex++) {\n      taskIndicatorNode = this.getIndicatorNode(indicators[indicatorIndex]);\n      taskIndicatorNode[0].setAttribute('aria-label', indicators[indicatorIndex].name);\n      if (indicators[indicatorIndex].name.indexOf('$') > -1 || indicators[indicatorIndex].name.indexOf('#') > -1) {\n        taskIndicatorTextFunction = this.templateCompiler(indicators[indicatorIndex].name);\n        taskIndicatorTextNode = taskIndicatorTextFunction(extend({\n          index: i\n        }, this.templateData), this.parent, 'indicatorLabelText');\n      } else {\n        var text = createElement('Text');\n        text.innerHTML = indicators[indicatorIndex].name;\n        if (this.parent.enableHtmlSanitizer && typeof indicators[indicatorIndex].name === 'string') {\n          indicators[indicatorIndex].name = SanitizeHtmlHelper.sanitize(indicators[indicatorIndex].name);\n        }\n        taskIndicatorTextNode = text.childNodes;\n      }\n      taskIndicatorNode[0].appendChild([].slice.call(taskIndicatorTextNode)[0]);\n      taskIndicatorNode[0].title = !isNullOrUndefined(indicators[indicatorIndex].tooltip) ? indicators[indicatorIndex].tooltip : '';\n      parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskIndicatorNode)[0]);\n    }\n  };\n  ChartRows.prototype.appendChildTaskbars = function (tempTemplateData, i, taskbarContainerNode, connectorLineRightNode, taskbarCollection) {\n    if (this.templateData.ganttProperties.isMilestone) {\n      var milestoneTemplateNode = this.getMilestoneNode(i, taskbarContainerNode);\n      if (milestoneTemplateNode && milestoneTemplateNode.length > 0) {\n        append(milestoneTemplateNode, taskbarContainerNode[0]);\n      }\n      if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate && this.templateData.ganttProperties.baselineEndDate) {\n        this.taskBaselineTemplateNode = this.templateData.ganttProperties.baselineStartDate.getTime() === this.templateData.ganttProperties.baselineEndDate.getTime() || !isNullOrUndefined(this.templateData.ganttProperties.baselineStartDate) && !isNullOrUndefined(this.templateData.ganttProperties.startDate) && this.templateData.ganttProperties.baselineStartDate.getTime() === this.templateData.ganttProperties.startDate.getTime() && !isNullOrUndefined(this.templateData.ganttProperties.baselineEndDate) && !isNullOrUndefined(this.templateData.ganttProperties.endDate) && this.templateData.ganttProperties.baselineEndDate.getTime() === this.templateData.ganttProperties.endDate.getTime() && this.templateData.ganttProperties.isMilestone ? this.getMilestoneBaselineNode() : this.getTaskBaselineNode();\n      }\n      if (taskbarCollection) {\n        /* eslint-disable-next-line */\n        taskbarCollection.push(taskbarContainerNode[0]);\n        this.templateData = tempTemplateData;\n      }\n    } else {\n      var scheduledTask = isScheduledTask(this.templateData.ganttProperties); // eslint-disable-line\n      var childTaskbarProgressResizeNode = null;\n      var childTaskbarRightResizeNode = null;\n      var childTaskbarLeftResizeNode = null;\n      if (!isNullOrUndefined(scheduledTask)) {\n        if (scheduledTask || this.templateData.ganttProperties.duration) {\n          if (scheduledTask && (isNullOrUndefined(this.templateData.ganttProperties.segments) || this.templateData.ganttProperties.segments.length <= 0)) {\n            childTaskbarProgressResizeNode = this.childTaskbarProgressResizer();\n            childTaskbarLeftResizeNode = this.childTaskbarLeftResizer();\n            childTaskbarRightResizeNode = this.childTaskbarRightResizer();\n          }\n        }\n        var childTaskbarTemplateNode = this.getChildTaskbarNode(i, taskbarContainerNode);\n        if (childTaskbarLeftResizeNode) {\n          taskbarContainerNode[0].appendChild([].slice.call(childTaskbarLeftResizeNode)[0]);\n        }\n        if (childTaskbarTemplateNode && childTaskbarTemplateNode.length > 0) {\n          if (this.templateData.ganttProperties.segments && this.templateData.ganttProperties.segments.length > 0) {\n            var length_3 = this.templateData.ganttProperties.segments.length;\n            var connector = '<div class=\"e-gantt-split-container-line\"></div>';\n            var segmentConnector = null;\n            segmentConnector = this.createDivElement(connector);\n            taskbarContainerNode[0].appendChild([].slice.call(segmentConnector)[0]);\n            for (var i_1 = 0; i_1 < length_3; i_1++) {\n              append(childTaskbarTemplateNode, taskbarContainerNode[0]);\n            }\n          } else {\n            append(childTaskbarTemplateNode, taskbarContainerNode[0]);\n          }\n        }\n        if (childTaskbarProgressResizeNode) {\n          taskbarContainerNode[0].appendChild([].slice.call(childTaskbarProgressResizeNode)[0]);\n        }\n        if (childTaskbarRightResizeNode) {\n          taskbarContainerNode[0].appendChild([].slice.call(childTaskbarRightResizeNode)[0]);\n        }\n      }\n      if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate && this.templateData.ganttProperties.baselineEndDate) {\n        this.taskBaselineTemplateNode = this.templateData.ganttProperties.baselineStartDate.getTime() === this.templateData.ganttProperties.baselineEndDate.getTime() || !isNullOrUndefined(this.templateData.ganttProperties.baselineStartDate) && !isNullOrUndefined(this.templateData.ganttProperties.startDate) && this.templateData.ganttProperties.baselineStartDate.getTime() === this.templateData.ganttProperties.startDate.getTime() && !isNullOrUndefined(this.templateData.ganttProperties.baselineEndDate) && !isNullOrUndefined(this.templateData.ganttProperties.endDate) && this.templateData.ganttProperties.baselineEndDate.getTime() === this.templateData.ganttProperties.endDate.getTime() && this.templateData.ganttProperties.isMilestone ? this.getMilestoneBaselineNode() : this.getTaskBaselineNode();\n      }\n    }\n    if (this.parent.allowParentDependency && (this.templateData.ganttProperties.isAutoSchedule && this.parent.viewType === 'ProjectView' || !this.templateData.hasChildRecords)) {\n      connectorLineRightNode = this.getRightPointNode();\n      /* eslint-disable-next-line */\n      taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n    } else if (!this.parent.allowParentDependency) {\n      connectorLineRightNode = this.getRightPointNode();\n      /* eslint-disable-next-line */\n      taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n    }\n    if (taskbarCollection) {\n      /* eslint-disable-next-line */\n      taskbarCollection.push(taskbarContainerNode[0]);\n      this.templateData = tempTemplateData;\n    }\n  };\n  ChartRows.prototype.customizeTaskbars = function (data, trElement, taskbarElement) {\n    var _this = this;\n    var rowElement;\n    var segmentRowElement;\n    if (data.ganttProperties.segments && data.ganttProperties.segments.length > 0 && trElement && trElement.parentElement && trElement.parentElement.parentElement && trElement.parentElement.parentElement.parentElement) {\n      segmentRowElement = trElement.parentElement.parentElement.parentElement;\n    }\n    var triggerTaskbarElement;\n    var args = {\n      data: data,\n      rowElement: trElement,\n      taskbarElement: taskbarElement,\n      taskbarType: data.hasChildRecords ? 'ParentTask' : data.ganttProperties.isMilestone ? 'Milestone' : 'ChildTask'\n    };\n    var classCollections = this.getClassName(args);\n    if (args.taskbarType === 'Milestone') {\n      args.milestoneColor = taskbarElement.querySelector(classCollections[0]) ? getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor : null;\n      args.baselineColor = trElement.querySelector(classCollections[1]) ? getComputedStyle(trElement.querySelector(classCollections[1])).backgroundColor : trElement.querySelector('.' + cls.baselineBar) ? getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor : null;\n    } else if (taskbarElement) {\n      var childTask = taskbarElement.querySelector(classCollections[0]);\n      var progressTask = taskbarElement.querySelector(classCollections[1]);\n      args.taskbarBgColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ? getComputedStyle(taskbarElement).backgroundColor : getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor;\n      args.taskbarBorderColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ? getComputedStyle(taskbarElement).backgroundColor : getComputedStyle(taskbarElement.querySelector(classCollections[0])).outlineColor;\n      args.progressBarBgColor = isNullOrUndefined(progressTask) ? null : taskbarElement.classList.contains(cls.traceChildProgressBar) ? getComputedStyle(taskbarElement).backgroundColor : getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor;\n      // args.progressBarBorderColor = taskbarElement.querySelector(progressBarClass) ?\n      //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor : null;\n      if (segmentRowElement) {\n        args.baselineColor = segmentRowElement.querySelector('.' + cls.baselineBar) ? getComputedStyle(segmentRowElement.querySelector('.' + cls.baselineBar)).backgroundColor : null;\n      } else {\n        args.baselineColor = trElement.querySelector('.' + cls.baselineBar) ? getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor : null;\n      }\n      args.taskLabelColor = taskbarElement.querySelector('.' + cls.taskLabel) ? getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color : null;\n    }\n    if (segmentRowElement) {\n      args.rightLabelColor = segmentRowElement.querySelector('.' + cls.rightLabelContainer) && segmentRowElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label) ? getComputedStyle(segmentRowElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label)).color : null;\n      args.leftLabelColor = segmentRowElement.querySelector('.' + cls.leftLabelContainer) && segmentRowElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label) ? getComputedStyle(segmentRowElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label)).color : null;\n    } else {\n      args.rightLabelColor = trElement.querySelector('.' + cls.rightLabelContainer) && trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label) ? getComputedStyle(trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label)).color : null;\n      args.leftLabelColor = trElement.querySelector('.' + cls.leftLabelContainer) && trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label) ? getComputedStyle(trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label)).color : null;\n    }\n    this.parent.trigger('queryTaskbarInfo', args, function (taskbarArgs) {\n      _this.updateQueryTaskbarInfoArgs(taskbarArgs, rowElement, triggerTaskbarElement);\n    });\n  };\n  /**\n   *\n   * @param {Element} trElement .\n   * @param {IGanttData} data .\n   * @returns {void} .\n   * @private\n   */\n  ChartRows.prototype.triggerQueryTaskbarInfoByIndex = function (trElement, data) {\n    // eslint-disable-next-line\n    if (isNullOrUndefined(trElement)) {\n      return;\n    }\n    var taskbarElement;\n    var currentData = data;\n    if (!(!isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0)) {\n      if (this.parent.enableMultiTaskbar) {\n        var taskbarElements = trElement.querySelectorAll('.' + cls.taskBarMainContainer);\n        for (var i = 0; i < taskbarElements.length; i++) {\n          taskbarElement = taskbarElements[i];\n          currentData = !data.expanded && data.hasChildRecords ? data.childRecords[i] : currentData;\n          var id = this.parent.viewType === 'ResourceView' ? taskbarElement.getAttribute('rowUniqueId') : currentData.ganttProperties.taskId.toString();\n          if (currentData.ganttProperties.segments && currentData.ganttProperties.segments.length > 0 && currentData.parentItem && !data.expanded) {\n            id = this.parent.viewType === 'ResourceView' ? data.ganttProperties.rowUniqueID : data.ganttProperties.taskId.toString();\n          }\n          trElement = this.parent.getRowByID(id);\n          trElement = trElement ? trElement : taskbarElement.querySelector('.e-gantt-child-taskbar');\n          if (isNullOrUndefined(trElement) && currentData.ganttProperties.isMilestone) {\n            trElement = taskbarElement;\n          }\n          if (trElement) {\n            var segmentElements = trElement.querySelectorAll('.e-segmented-taskbar');\n            if (segmentElements && segmentElements.length > 0) {\n              /* eslint-disable-next-line */\n              var taskContainer = trElement.querySelector(\".e-taskbar-main-container[rowuniqueid=\\\"\" + currentData.ganttProperties.rowUniqueID + \"\\\"]\") || trElement;\n              var segmentedTasks = taskContainer.querySelectorAll('.e-segmented-taskbar');\n              for (var i_2 = 0; i_2 < segmentedTasks.length; i_2++) {\n                taskbarElement = segmentedTasks[i_2];\n                this.customizeTaskbars(currentData, segmentedTasks[i_2], taskbarElement);\n              }\n            } else {\n              this.customizeTaskbars(currentData, trElement, taskbarElement);\n            }\n          }\n        }\n      } else {\n        var taskbarElement_1 = trElement.querySelector('.' + cls.taskBarMainContainer);\n        if (trElement) {\n          this.customizeTaskbars(currentData, trElement, taskbarElement_1);\n        }\n      }\n    } else {\n      taskbarElement = trElement;\n      if (trElement) {\n        this.customizeTaskbars(data, trElement, taskbarElement);\n      }\n    }\n  };\n  /**\n   * To update query taskbar info args.\n   *\n   * @param {IQueryTaskbarInfoEventArgs} args .\n   * @param {Element} rowElement .\n   * @param {Element} taskBarElement .\n   * @returns {void}\n   * @private\n   */\n  /* eslint-disable-next-line */\n  ChartRows.prototype.updateQueryTaskbarInfoArgs = function (args, rowElement, taskBarElement) {\n    var trElement = args.rowElement;\n    var taskbarElement = this.parent.enableVirtualization ? args.rowElement : args.taskbarElement;\n    var classCollections = this.getClassName(args);\n    var segmentRowElement;\n    if (args.data.ganttProperties.segments && args.data.ganttProperties.segments.length > 0) {\n      segmentRowElement = trElement.parentElement.parentElement.parentElement;\n    }\n    if (args.taskbarType === 'Milestone') {\n      if (taskbarElement.querySelector(classCollections[0]) && getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor !== args.milestoneColor) {\n        taskbarElement.querySelector(classCollections[0]).style.backgroundColor = args.milestoneColor;\n      }\n      if (trElement.querySelector(classCollections[1]) && getComputedStyle(trElement.querySelector(classCollections[1])).backgroundColor !== args.baselineColor) {\n        trElement.querySelector(classCollections[1]).style.backgroundColor = args.baselineColor;\n      }\n      if (trElement.querySelector('.' + cls.baselineBar) && getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).borderTopColor !== args.baselineColor) {\n        trElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n      }\n    } else if (taskbarElement) {\n      if (taskbarElement.querySelector(classCollections[0]) && getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor !== args.taskbarBgColor) {\n        taskbarElement.querySelector(classCollections[0]).style.backgroundColor = args.taskbarBgColor;\n      }\n      if (taskbarElement.querySelector(classCollections[0]) && getComputedStyle(taskbarElement.querySelector(classCollections[0])).outlineColor !== args.taskbarBorderColor) {\n        taskbarElement.querySelector(classCollections[0]).style.outlineColor = args.taskbarBorderColor;\n      }\n      if (taskbarElement.querySelector(classCollections[1]) && getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor !== args.progressBarBgColor) {\n        taskbarElement.querySelector(classCollections[1]).style.backgroundColor = args.progressBarBgColor;\n      }\n      if (taskbarElement.classList.contains(cls.traceChildTaskBar) && getComputedStyle(taskbarElement).backgroundColor !== args.taskbarBgColor) {\n        taskbarElement.style.backgroundColor = args.taskbarBgColor;\n      }\n      if (taskbarElement.classList.contains(cls.traceChildTaskBar) && getComputedStyle(taskbarElement).outlineColor !== args.taskbarBorderColor) {\n        taskbarElement.style.outlineColor = args.taskbarBorderColor;\n      }\n      if (taskbarElement.classList.contains(cls.traceChildProgressBar) && getComputedStyle(taskbarElement).backgroundColor !== args.progressBarBgColor) {\n        taskbarElement.style.backgroundColor = args.progressBarBgColor;\n      }\n      // if (taskbarElement.querySelector(progressBarClass) &&\n      //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor !== args.progressBarBorderColor) {\n      //     (taskbarElement.querySelector(progressBarClass) as HTMLElement).style.borderColor = args.progressBarBorderColor;\n      // }\n      if (taskbarElement.querySelector('.' + cls.taskLabel) && getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color !== args.taskLabelColor) {\n        taskbarElement.querySelector('.' + cls.taskLabel).style.color = args.taskLabelColor;\n      }\n      if (segmentRowElement) {\n        if (segmentRowElement.querySelector('.' + cls.baselineBar) && getComputedStyle(segmentRowElement.querySelector('.' + cls.baselineBar)).backgroundColor !== args.baselineColor) {\n          segmentRowElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n        }\n      } else {\n        if (trElement.querySelector('.' + cls.baselineBar) && getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor !== args.baselineColor) {\n          trElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n        }\n      }\n    }\n    if (segmentRowElement) {\n      if (segmentRowElement.querySelector('.' + cls.leftLabelContainer) && segmentRowElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label) && getComputedStyle(segmentRowElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label)).color !== args.leftLabelColor) {\n        segmentRowElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label).style.color = args.leftLabelColor;\n      }\n      if (segmentRowElement.querySelector('.' + cls.rightLabelContainer) && segmentRowElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label) && getComputedStyle(segmentRowElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label)).color !== args.rightLabelColor) {\n        segmentRowElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label).style.color = args.rightLabelColor;\n      }\n    } else {\n      if (trElement.querySelector('.' + cls.leftLabelContainer) && trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label) && getComputedStyle(trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label)).color !== args.leftLabelColor) {\n        trElement.querySelector('.' + cls.leftLabelContainer).querySelector('.' + cls.label).style.color = args.leftLabelColor;\n      }\n      if (trElement.querySelector('.' + cls.rightLabelContainer) && trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label) && getComputedStyle(trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label)).color !== args.rightLabelColor) {\n        trElement.querySelector('.' + cls.rightLabelContainer).querySelector('.' + cls.label).style.color = args.rightLabelColor;\n      }\n    }\n  };\n  ChartRows.prototype.getClassName = function (args) {\n    var classCollection = [];\n    classCollection.push('.' + (args.taskbarType === 'ParentTask' ? cls.traceParentTaskBar : args.taskbarType === 'ChildTask' ? cls.traceChildTaskBar : cls.traceMilestone));\n    classCollection.push('.' + (args.taskbarType === 'ParentTask' ? cls.traceParentProgressBar : args.taskbarType === 'ChildTask' ? cls.traceChildProgressBar : cls.baselineMilestoneContainer));\n    return classCollection;\n  };\n  /**\n   * To compile template string.\n   *\n   * @param {string} template .\n   * @returns {Function} .\n   * @private\n   */\n  ChartRows.prototype.templateCompiler = function (template) {\n    if (!isNullOrUndefined(template) && template !== '') {\n      try {\n        if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim(), this.parent);\n        } else {\n          return compile(template, this.parent);\n        }\n      } catch (e) {\n        return compile(template, this.parent);\n      }\n    }\n    return null;\n  };\n  // to update the eOverlapped property\n  ChartRows.prototype.updateOverlapped = function () {\n    for (var k = 0; k < this.parent.treeGrid.parentData.length; k++) {\n      var childRecords = this.parent.treeGrid.parentData[k].childRecords;\n      for (var i = 0; i < childRecords.length; i++) {\n        if (childRecords[i + 1]) {\n          childRecords[i].ganttProperties.eOverlapped = undefined;\n        }\n        for (var j = i + 1; j < childRecords.length; j++) {\n          childRecords[j].ganttProperties.eOverlapped = undefined;\n          if (childRecords[i].ganttProperties.startDate.getTime() < childRecords[j].ganttProperties.endDate.getTime() && childRecords[i].ganttProperties.endDate.getTime() > childRecords[j].ganttProperties.startDate.getTime()) {\n            childRecords[j].ganttProperties.eOverlapped = true;\n            childRecords[i].ganttProperties.eOverlapped = true;\n          } else {\n            if (isNullOrUndefined(childRecords[j].ganttProperties.eOverlapped)) {\n              childRecords[j].ganttProperties.eOverlapped = false;\n            }\n            if (isNullOrUndefined(childRecords[i].ganttProperties.eOverlapped)) {\n              childRecords[i].ganttProperties.eOverlapped = false;\n            }\n          }\n        }\n      }\n    }\n  };\n  // To update the row height when allow overallocation set to false\n  ChartRows.prototype.updateDragDropRecords = function (data, tr) {\n    var childRecords = data.childRecords;\n    var rowIndex = this.parent.currentViewData.indexOf(data);\n    var treeGridContentHeight = this.parent.enableRtl ? this.parent['element'].getElementsByClassName('e-content')[2].children[0]['offsetHeight'] : this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n    if (!tr) {\n      tr = this.ganttChartTableBody.childNodes[rowIndex];\n    }\n    if (this.parent.ganttChartModule.isExpandAll || this.parent.ganttChartModule.isCollapseAll) {\n      tr['style'].height = this.parent.treeGrid.getRowByIndex(rowIndex)['style'].height = this.parent.rowHeight + 'px';\n    } else {\n      tr['style'].height = this.parent.treeGrid.getRows()[rowIndex]['style'].height = this.parent.rowHeight + 'px';\n    }\n    this.parent.contentHeight = treeGridContentHeight;\n    var rowIDs = [];\n    var rowCounts = 0;\n    if (data) {\n      for (var i = 0; i < childRecords.length; i++) {\n        for (var j = i + 1; j < childRecords.length; j++) {\n          var taskbarContainer = tr.getElementsByClassName('e-taskbar-main-container');\n          for (var k = 0; k < taskbarContainer.length; k++) {\n            var rowuniqueid = this.parent.viewType === 'ResourceView' ? childRecords[j]['rowUniqueID'] : childRecords[j].ganttProperties.rowUniqueID;\n            if (childRecords[i].ganttProperties.startDate.getTime() < childRecords[j].ganttProperties.endDate.getTime() && childRecords[i].ganttProperties.endDate.getTime() > childRecords[j].ganttProperties.startDate.getTime()) {\n              if (taskbarContainer[k].getAttribute('rowuniqueid') === rowuniqueid && rowIDs.indexOf(rowuniqueid) === -1) {\n                rowIDs.push(rowuniqueid);\n                rowCounts++;\n                tr.children[0]['style'].verticalAlign = 'baseline';\n                tr.getElementsByClassName('e-taskbar-main-container')[k]['style'].marginTop = rowCounts * this.parent.rowHeight + this.taskBarMarginTop + 'px';\n                if (this.parent.ganttChartModule.isExpandAll || this.parent.ganttChartModule.isCollapseAll) {\n                  tr['style'].height = this.parent.treeGrid.getRowByIndex(rowIndex)['style'].height = parseInt(tr['style'].height, 10) + this.parent.rowHeight + 'px';\n                } else {\n                  tr['style'].height = this.parent.treeGrid.getRows()[rowIndex]['style'].height = parseInt(tr['style'].height, 10) + this.parent.rowHeight + 'px';\n                }\n              }\n            } else {\n              if (taskbarContainer[k].getAttribute('rowuniqueid') === rowuniqueid && rowIDs.indexOf(rowuniqueid) === -1 && this.parent.rowDragAndDropModule && this.parent.rowDragAndDropModule['draggedRecord'] && taskbarContainer[k].getAttribute('rowuniqueid') === this.parent.rowDragAndDropModule['draggedRecord']['rowUniqueID'] && this.parent.rowDragAndDropModule['draggedRecord']['rowUniqueID'] === childRecords[j]['rowUniqueID']) {\n                tr.getElementsByClassName('e-taskbar-main-container')[k]['style'].marginTop = this.parent.editModule.taskbarEditModule.draggedRecordMarginTop;\n              }\n            }\n          }\n        }\n      }\n      this.parent.contentHeight = treeGridContentHeight;\n      document.getElementsByClassName('e-chart-rows-container')[0]['style'].height = this.parent.contentHeight + 'px';\n    }\n  };\n  /**\n   * To refresh edited TR\n   *\n   * @param {number} index .\n   * @param {boolean} isValidateRange .\n   * @param {boolean} isUndoRedo .\n   * @returns {void} .\n   * @private\n   */\n  ChartRows.prototype.refreshRow = function (index, isValidateRange, isUndoRedo) {\n    var _this = this;\n    var tr = this.ganttChartTableBody.childNodes[index];\n    var selectedItem;\n    if (isUndoRedo) {\n      selectedItem = this.parent.previousFlatData[index];\n    } else {\n      selectedItem = this.parent.currentViewData[index];\n    }\n    if (index !== -1 && selectedItem) {\n      var data = selectedItem;\n      if (!this.parent.allowTaskbarOverlap && data.expanded) {\n        if (this.parent.ganttChartModule.isExpandAll || this.parent.ganttChartModule.isCollapseAll) {\n          tr['style'].height = this.parent.treeGrid.getRowByIndex(index)['style'].height = this.parent.rowHeight + 'px';\n        } else {\n          tr['style'].height = this.parent.treeGrid.getRows()[index]['style'].height = this.parent.rowHeight + 'px';\n        }\n      }\n      if (data.hasChildRecords && !data.expanded && this.parent.enableMultiTaskbar) {\n        tr.replaceChild(this.getGanttChartRow(index, data).childNodes[0], tr.childNodes[0]);\n        if (this.parent.renderBaseline) {\n          data.childRecords.forEach(function (childRecord) {\n            if (!isNullOrUndefined(childRecord.ganttProperties.baselineStartDate && childRecord.ganttProperties.baselineEndDate)) {\n              tr.childNodes[0].appendChild(_this.updateTaskBaselineNode(childRecord)[0]);\n            }\n          });\n        }\n      } else {\n        if (this.parent.allowTaskbarDragAndDrop && !data.expanded) {\n          tr.replaceWith(this.getGanttChartRow(index, data));\n        } else {\n          tr.replaceChild(this.getGanttChartRow(index, data).childNodes[0], tr.childNodes[0]);\n        }\n      }\n      this.parent.renderTemplates();\n      if (data.hasChildRecords && this.parent.showOverAllocation && this.parent.allowTaskbarOverlap) {\n        if (isValidateRange) {\n          this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n        } else {\n          this.parent.dataOperation.updateOverlappingValues(data);\n          this.parent.ganttChartModule.renderRangeContainer([data]);\n        }\n      }\n      var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n      if (segmentLength > 0) {\n        for (var i = 0; i < segmentLength; i++) {\n          var segmentedTasks = tr.getElementsByClassName('e-segmented-taskbar');\n          var segmentElement = segmentedTasks[i];\n          this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n        }\n      } else {\n        this.triggerQueryTaskbarInfoByIndex(tr, data);\n      }\n      var dataId = this.parent.viewType === 'ProjectView' ? data.ganttProperties.taskId : data.ganttProperties.rowUniqueID;\n      if (!this.parent.ganttChartModule.isExpandAll && !this.parent.ganttChartModule.isCollapseAll) {\n        this.parent.treeGrid.grid.setRowData(dataId, data);\n      }\n      if (data.hasChildRecords && !data.expanded && this.parent.enableMultiTaskbar && !this.parent.allowTaskbarOverlap) {\n        this.updateDragDropRecords(selectedItem, tr);\n      }\n      if (data.hasChildRecords && this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n        this.parent.dataOperation.updateOverlappingValues(data);\n        this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n      }\n      var nextEditableElement = this.parent.ganttChartModule.tempNextElement;\n      if (this.parent.ganttChartModule.isEditableElement && nextEditableElement) {\n        this.parent.treeGrid.grid.focusModule.focus();\n        addClass([this.parent.treeGrid.getRows()[tr.getAttribute('data-rowindex')].children[this.parent.ganttChartModule.childrenIndex]], 'e-focused');\n        this.parent.ganttChartModule.tempNextElement = null;\n      }\n      var row = this.parent.treeGrid.grid.getRowObjectFromUID(this.parent.treeGrid.grid.getDataRows()[index].getAttribute('data-uid'));\n      if (!isNullOrUndefined(row)) {\n        row.data = data;\n      }\n    }\n  };\n  ChartRows.prototype.updateResourceTaskbarElement = function (tRow, parentTr) {\n    var cloneElement = tRow.querySelector('.e-taskbar-main-container');\n    if (this.parent.viewType === 'ProjectView' && tRow.querySelector('.e-collapse-parent')) {\n      cloneElement = tRow.querySelector('.e-collapse-parent');\n    }\n    if (tRow.querySelector('.e-collapse-parent') === null) {\n      addClass([cloneElement], 'collpse-parent-border');\n    }\n    var id = tRow.querySelector('.' + cls.taskBarMainContainer).getAttribute('rowUniqueId');\n    var ganttData = this.parent.getRecordByID(id);\n    if (!isNullOrUndefined(ganttData) && ganttData.ganttProperties.segments && ganttData.ganttProperties.segments.length > 0) {\n      var segmentedTasks = cloneElement.getElementsByClassName('e-segmented-taskbar');\n      for (var i = 0; i < segmentedTasks.length; i++) {\n        this.triggerQueryTaskbarInfoByIndex(segmentedTasks[i], ganttData);\n      }\n    } else if (this.parent.queryTaskbarInfo) {\n      var mainTaskbar = cloneElement.querySelector('.e-gantt-child-taskbar');\n      if (!isNullOrUndefined(mainTaskbar)) {\n        this.triggerQueryTaskbarInfoByIndex(mainTaskbar, ganttData);\n      }\n    }\n    var zIndex = '';\n    if (ganttData && !isNullOrUndefined(ganttData.ganttProperties.eOverlapIndex)) {\n      zIndex = ganttData.ganttProperties.eOverlapIndex.toString();\n    }\n    var cloneChildElement = cloneElement.cloneNode(true);\n    cloneChildElement.style.zIndex = zIndex;\n    parentTr[0].childNodes[0].childNodes[0].childNodes[0].appendChild(cloneChildElement);\n  };\n  /**\n   * To refresh all edited records\n   *\n   * @param {IGanttData} items .\n   * @param {boolean} isValidateRange .\n   * @param {boolean} isUndoRedo .\n   * @returns {void} .\n   * @private\n   */\n  ChartRows.prototype.refreshRecords = function (items, isValidateRange, isUndoRedo) {\n    if (this.parent.isGanttChartRendered) {\n      this.parent.renderTemplates();\n      if (this.parent.enableMultiTaskbar) {\n        var sortedRecords = [];\n        sortedRecords = new DataManager(items).executeLocal(new Query().sortBy('expanded', 'Descending'));\n        items = sortedRecords;\n      }\n      for (var i = 0; i < items.length; i++) {\n        var index = void 0;\n        if (isUndoRedo) {\n          index = this.parent.ids.indexOf(items[i].ganttProperties.taskId.toString());\n        } else {\n          index = this.parent.currentViewData.indexOf(items[i]);\n        }\n        if (!this.parent.enableMultiTaskbar || this.parent.enableMultiTaskbar && (items[i].expanded || !this.parent.isLoad)) {\n          this.refreshRow(index, isValidateRange, isUndoRedo);\n        }\n      }\n      this.parent.ganttChartModule.updateLastRowBottomWidth();\n    }\n  };\n  ChartRows.prototype.removeEventListener = function () {\n    var _this = this;\n    if (this.parent.isDestroyed) {\n      return;\n    }\n    this.ganttChartTableBody.childNodes.forEach(function (tr) {\n      if (tr instanceof Element) {\n        tr.removeEventListener('touchmove', _this.handleTouchMove);\n        tr.removeEventListener('touchend', _this.handleTouchEnd);\n      }\n    });\n    this.parent.off('renderPanels', this.createChartTable);\n    this.parent.off('dataReady', this.initiateTemplates);\n    this.parent.off('destroy', this.destroy);\n  };\n  ChartRows.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n  ChartRows.prototype.generateAriaLabel = function (data) {\n    data = this.templateData;\n    var defaultValue = '';\n    var nameConstant = this.parent.localeObj.getConstant('name');\n    var startDateConstant = this.parent.localeObj.getConstant('startDate');\n    var endDateConstant = this.parent.localeObj.getConstant('endDate');\n    var durationConstant = this.parent.localeObj.getConstant('duration');\n    var taskNameVal = data.ganttProperties.taskName;\n    var startDateVal = data.ganttProperties.startDate;\n    var endDateVal = data.ganttProperties.endDate;\n    var durationVal = data.ganttProperties.duration;\n    if (data.ganttProperties.isMilestone) {\n      defaultValue = nameConstant + ' ' + taskNameVal + ' ' + startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal);\n    } else {\n      if (taskNameVal) {\n        defaultValue += nameConstant + ' ' + taskNameVal + ' ';\n      }\n      if (startDateVal) {\n        defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n      }\n      if (endDateVal) {\n        defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n      }\n      if (durationVal) {\n        defaultValue += durationConstant + ' ' + this.parent.getDurationString(durationVal, data.ganttProperties.durationUnit);\n      }\n    }\n    return defaultValue;\n  };\n  ChartRows.prototype.generateBaselineAriaLabel = function (data) {\n    data = this.templateData;\n    var defaultValue = '';\n    var nameConstant = this.parent.localeObj.getConstant('name');\n    var startDateConstant = this.parent.localeObj.getConstant('startDate');\n    var endDateConstant = this.parent.localeObj.getConstant('endDate');\n    var taskNameVal = data.ganttProperties.taskName;\n    var startDateVal = data.ganttProperties.baselineStartDate;\n    var endDateVal = data.ganttProperties.baselineEndDate;\n    defaultValue += 'Baseline' + ' ';\n    defaultValue += nameConstant + ' ' + taskNameVal + ' ';\n    defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n    defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n    return defaultValue;\n  };\n  ChartRows.prototype.generateSpiltTaskAriaLabel = function (data, ganttProp) {\n    var defaultValue = '';\n    var startDateConstant = this.parent.localeObj.getConstant('startDate');\n    var endDateConstant = this.parent.localeObj.getConstant('endDate');\n    var durationConstant = this.parent.localeObj.getConstant('duration');\n    var startDateVal = data.startDate;\n    var endDateVal = data.endDate;\n    var durationVal = data.duration;\n    if (startDateVal) {\n      defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n    }\n    if (endDateVal) {\n      defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n    }\n    if (durationVal) {\n      defaultValue += durationConstant + ' ' + this.parent.getDurationString(durationVal, ganttProp.durationUnit);\n    }\n    return defaultValue;\n  };\n  ChartRows.prototype.generateTaskLabelAriaLabel = function (type) {\n    var label = '';\n    if (type === 'left' && this.parent.labelSettings.leftLabel && !this.leftTaskLabelTemplateFunction) {\n      label += this.parent.localeObj.getConstant('leftTaskLabel') + ' ' + this.getTaskLabel(this.parent.labelSettings.leftLabel);\n    } else if (type === 'right' && this.parent.labelSettings.rightLabel && !this.rightTaskLabelTemplateFunction) {\n      label += this.parent.localeObj.getConstant('rightTaskLabel') + ' ' + this.getTaskLabel(this.parent.labelSettings.rightLabel);\n    }\n    return label;\n  };\n  return ChartRows;\n}(DateProcessor);\nexport { ChartRows };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","createElement","isNullOrUndefined","extend","compile","getValue","setValue","SanitizeHtmlHelper","append","formatUnit","addClass","isScheduledTask","getTaskData","DataManager","Query","cls","DateProcessor","ChartRows","_super","ganttObj","_this","call","taskBarHeight","milestoneHeight","milesStoneRadius","baselineTop","baselineHeight","touchLeftConnectorpoint","touchRightConnectorpoint","dropSplit","refreshedTr","refreshedData","isUpdated","taskBaselineTemplateNode","handleTouchMove","event","parent","ganttChartModule","handleTouchEnd","initPublicProp","addEventListener","ganttChartTableBody","on","createChartTable","initiateTemplates","destroy","refreshChartByTimeline","taskTable","style","width","enableTimelineVirtualization","timelineModule","wholeTimelineWidth","totalTimelineWidth","prevDate","dataOperation","getTime","cloneProjectStartDate","isFromOnPropertyChange","treeGrid","grid","contentModule","refreshGanttRows","className","zeroSpacing","id","element","styles","attrs","cellspacing","colgroup","column","appendChild","chartBodyContent","initChartHelperPrivateVariable","initializeChartTemplate","renderChartRows","createTaskbarTemplate","isGanttChartRendered","getIndicatorNode","indicator","templateString","label","taskIndicatorDiv","rowHeight","enableRtl","getIndicatorleft","date","iconClass","createDivElement","dateValidationModule","getDateFromFormat","left","getTaskLeft","getChildTaskbarNode","i","rootElement","childTaskbarNode","data","templateData","direction","childTaskbarTemplateFunction","index","getTemplateID","undefined","labelString","taskLabel","taskbarInnerDiv","progressDiv","ganttProperties","startDate","endDate","duration","childTaskBarInnerDiv","traceChildTaskBar","isAutoSchedule","manualChildTaskBar","childProgressBarInnerDiv","traceChildProgressBar","manualChildProgressBar","progressWidth","getBorderRadius","tempDiv","taskLabelTemplateFunction","length","taskLabelTemplateNode","innerHTML","field","labelSettings","getTaskLabel","enableHtmlSanitizer","sanitize","indexOf","isTemplate","isNaN","parseInt","viewType","template","segments","splitTaskbar","unscheduledTaskbarLeft","unscheduledTaskbarRight","unscheduledTaskbar","progress","getSplitProgressResizerNode","templateElement","disableHtmlEncode","innerText","childLabel","querySelectorAll","textContent","children","remove","slice","querySelector","marginLeft","marginRight","textAlign","splitTasks","segment","progressBarVisible","showProgress","segmentPosition","generateSpiltTaskAriaLabel","getSplitTaskbarLeftResizerNode","getSplitTaskBorderRadius","getSplitTaskbarRightResizerNode","lResizerLeft","document","body","includes","taskBarLeftResizer","icon","rResizerLeft","taskBarRightResizer","childProgressResizer","progressBarHandler","progressHandlerElement","progressBarHandlerAfter","getSegmentIndex","splitStartDate","record","segmentIndex","ganttProp","sort","a","length_1","sDate","setDate","getDate","checkStartDate","eDate","getEndDate","durationUnit","setRecordValue","incrementSegments","mergeTask","taskId","segmentIndexes","mergeArrayLength","taskFields","mergeData","flatData","filter","x","undoRedoModule","details","editModule","taskbarEditModule","getUndoActions","splice","rec","previousFlatData","firstSegmentIndex","arrayLength","firstSegment","secondSegment","secondSegmentIndex","insertIndex","updateMappingData","segmentFields","keys","modifiedSegments","updateSegment","refreshChartAfterSegment","segmentData","segmentId","segmentsArray","segmentObj","push","filterData","requestType","setSegmentsInfo","updateWidthLeft","updateParentItems","predecessorModule","dependency","updatedRecordsDateByPredecessor","connectorLineModule","removePreviousConnectorLines","connectorLineEditModule","refreshEditedRecordConnectorLine","parentItem","getParentTask","isInPredecessorValidation","refreshRecords","currentViewData","tr","args","rowData","modifiedRecords","editedRecords","modifiedTaskData","triggerQueryTaskbarInfoByIndex","selectionModule","clearSelection","taskData","timezone","trigger","loadingIndicator","indicatorType","hideMaskRow","hideSpinner","contextMenuModule","splitTask","splitDates","splitDate","splitRecord","Date","segmentDuration","getDuration","isMilestone","splitSegmentedTaskbar","constructSegments","dates","checkEndDate","ganttData","checkClickState","endDateState","includeWeekend","nonWorkingDayIndex","getDay","increment","segmentEndDate","weekWorkingTime","dayEndTime","setTime","offsetDuration","mode","customTimelineSettings","bottomTier","unit","count","mode_1","timeIncrement","getIncrement","newTime","dayStartTime","isOnHolidayOrWeekEnd","getNextWorkingDay","diff","calculateLeftValue","taskbarHeightValue","renderBaseline","defaultTaskbarHeight","Math","floor","taskbarHeight","getMilestoneNode","milestoneNode","leftValue","milestoneTemplateFunction","traceMilestone","getTaskBaselineNode","baselineBar","baselineLeft","baselineWidth","baselineColor","updateTaskBaselineNode","childData","getMilestoneBaselineNode","baselineMilestoneHeight","baselineMilestoneContainer","milestoneMarginTop","getLeftLabelNode","leftLabelNode","leftLabelContainer","generateTaskLabelAriaLabel","setAttribute","leftLabelTemplateNode","leftTaskLabelTemplateFunction","leftLabel","getLableText","leftLabelInnerDiv","paddingLeft","paddingRight","labelDiv","leftLabelHeight","taskBarMarginTop","spanElem","property","div","childNodes","getRightLabelNode","rightLabelNode","rightLabelContainer","rightLabelTemplateNode","rightTaskLabelTemplateFunction","rightLabel","rightLabelInnerDiv","getManualTaskbar","innerDiv","hasChildRecords","manualParentTaskBar","traceManualUnscheduledTask","childEle","manualParentMainContainer","autoLeft","editSettings","allowTaskbarEditing","milestoneTemplate","manualParentMilestone","getParentTaskbarNode","parentTaskbarNode","parentTaskbarTemplateFunction","tHeight","parentTaskBarInnerDiv","getExpandClass","traceParentTaskBar","autoWidth","progressBarInnerDiv","parentProgressBarInnerDiv","traceParentProgressBar","parentTaskLabelNode","labelElement","parentLabel","parentMilestone","getTableTrNode","table","gridLines","activecls","rows","treeGridModule","isPersist","setTimeout","getRows","isSelected","getRowClassName","chartRow","getExpandDisplayProp","chartRowCell","parentTaskbarTemplate","templateCompiler","taskbarTemplate","result","ganttColumns","templateName","ganttID","leftLabelTempContainer","taskNameWidth","taskbarContainer","manualParent","taskBarEditAction","taskBarMainContainer","getUnscheduledTaskClass","cssClass","rightLabelTempContainer","getRightLabelLeft","childTaskbarLeftResizer","childTaskbarRightResizer","childTaskbarProgressResizer","getLeftPointNode","mileStoneLeftValue","pointerLeft","connectorPointWidth","mileStoneLeft","pointerTop","marginTop","allowParentDependency","connectorPointMargin","canAdd","leftConnectorPointOuterDiv","connectorPointLeft","getRightPointNode","right","pointerRight","rightConnectorPointOuterDiv","connectorPointRight","resultString","resourceInfo","getResourceName","getFieldValue","toString","getExpandStatus","rowClass","level","getTaskbarHeight","allowUnscheduledTasks","autoStartDate","endLeft","autoEndDate","expanded","rowExpand","rowCollapse","resource","length_2","resourceName","resourceFields","name","resourceUnit","taskBarMarginTopValue","milestoneHeightValue","height","isAdaptive","round","getCurrentViewRecords","showOverAllocation","childRecords","mergeRangeCollections","workTimelineRanges","calculateRangeLeftWidth","renderRangeContainer","updateLastRowBottomWidth","_a","trs","collapsedResourceRecord","prevCurrentView","enableImmutableMode","oldKeys","oldRowElements","key","getPrimaryKeyFieldNames","oldIndex","modifiedRecIndex","isFromRenderBaseline","tRow","getGanttChartRow","dupChartBody","tempTemplateData","enableMultiTaskbar","allowTaskbarOverlap","updateDragDropRecords","allowSelection","maintainSelectedRecords","getAttribute","replaceChildren","apply","forEach","Element","initialChartRowElements","getChartRows","enableCriticalPath","criticalPathModule","criticalModule","criticalPathCollection","criticalConnectorLine","detailPredecessorCollection","predecessorCollectionTaskIds","renderTemplates","triggerQueryTaskbarInfo","updateOverlapped","j","chartRowsModule","parentTrNode","taskbarContainerNode","generateAriaLabel","rowUniqueID","connectorLineLeftNode","connectorLineRightNode","parentTaskbarTemplateNode","taskbarContainerNode1","appendChildTaskbars","manualTaskbar","connectorLineRightNode_1","autoDuration","milestoneTemplateNode","baselineStartDate","baselineEndDate","collapseParent","indicators","appendIndicators","setAriaRowIndex","dataSource","visualData","virtualScrollModule","enableVirtualization","loadChildOnDemand","hasChildMapping","gridData","queryTaskbarInfo","trElement","segmentLength","segmentedTasks","getElementsByClassName","segmentElement","taskIndicatorNode","taskIndicatorTextFunction","taskIndicatorTextNode","indicatorIndex","text","title","tooltip","taskbarCollection","scheduledTask","childTaskbarProgressResizeNode","childTaskbarRightResizeNode","childTaskbarLeftResizeNode","childTaskbarTemplateNode","length_3","connector","segmentConnector","i_1","customizeTaskbars","taskbarElement","rowElement","segmentRowElement","parentElement","triggerTaskbarElement","taskbarType","classCollections","getClassName","milestoneColor","getComputedStyle","backgroundColor","childTask","progressTask","taskbarBgColor","classList","contains","taskbarBorderColor","outlineColor","progressBarBgColor","taskLabelColor","color","rightLabelColor","leftLabelColor","taskbarArgs","updateQueryTaskbarInfoArgs","currentData","taskbarElements","getRowByID","segmentElements","taskContainer","i_2","taskbarElement_1","taskBarElement","borderTopColor","classCollection","trim","e","k","parentData","eOverlapped","rowIndex","treeGridContentHeight","isExpandAll","isCollapseAll","getRowByIndex","contentHeight","rowIDs","rowCounts","rowuniqueid","verticalAlign","rowDragAndDropModule","draggedRecordMarginTop","refreshRow","isValidateRange","isUndoRedo","selectedItem","replaceChild","childRecord","allowTaskbarDragAndDrop","replaceWith","updateOverlappingValues","dataId","setRowData","nextEditableElement","tempNextElement","isEditableElement","focusModule","focus","childrenIndex","row","getRowObjectFromUID","getDataRows","updateResourceTaskbarElement","parentTr","cloneElement","getRecordByID","mainTaskbar","zIndex","eOverlapIndex","cloneChildElement","cloneNode","items","sortedRecords","executeLocal","sortBy","ids","isLoad","removeEventListener","isDestroyed","off","defaultValue","nameConstant","localeObj","getConstant","startDateConstant","endDateConstant","durationConstant","taskNameVal","taskName","startDateVal","endDateVal","durationVal","getFormatedDate","getDurationString","generateBaselineAriaLabel","type"],"sources":["/var/www/vue/vue-gantt-chart/node_modules/@syncfusion/ej2-gantt/src/gantt/renderer/chart-rows.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createElement, isNullOrUndefined, extend, compile, getValue, setValue, SanitizeHtmlHelper, append } from '@syncfusion/ej2-base';\nimport { formatUnit, addClass } from '@syncfusion/ej2-base';\nimport { isScheduledTask, getTaskData } from '../base/utils';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as cls from '../base/css-constants';\nimport { DateProcessor } from '../base/date-processor';\n/**\n * To render the chart rows in Gantt\n */\nvar ChartRows = /** @class */ (function (_super) {\n    __extends(ChartRows, _super);\n    function ChartRows(ganttObj) {\n        var _this = _super.call(this, ganttObj) || this;\n        _this.taskBarHeight = 0;\n        _this.milestoneHeight = 0;\n        _this.milesStoneRadius = 0;\n        _this.baselineTop = 0;\n        _this.baselineHeight = 8;\n        _this.touchLeftConnectorpoint = '';\n        _this.touchRightConnectorpoint = '';\n        _this.dropSplit = false;\n        _this.refreshedTr = [];\n        _this.refreshedData = [];\n        _this.isUpdated = true;\n        _this.taskBaselineTemplateNode = null;\n        /**\n         * To trigger the touchmove.\n         *\n         * @param {TouchEvent} event .\n         * @returns {void}\n         * @private\n         */\n        _this.handleTouchMove = function (event) {\n            _this.parent.ganttChartModule['ganttChartMove'](event);\n        };\n        /**\n         * To trigger the touchend.\n         *\n         * @param {TouchEvent} event .\n         * @returns {void}\n         * @private\n         */\n        _this.handleTouchEnd = function (event) {\n            _this.parent.ganttChartModule['documentMouseUp'](event);\n        };\n        _this.parent = ganttObj;\n        _this.initPublicProp();\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * To initialize the public property.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.initPublicProp = function () {\n        this.ganttChartTableBody = null;\n    };\n    ChartRows.prototype.addEventListener = function () {\n        this.parent.on('renderPanels', this.createChartTable, this);\n        this.parent.on('dataReady', this.initiateTemplates, this);\n        this.parent.on('destroy', this.destroy, this);\n    };\n    ChartRows.prototype.refreshChartByTimeline = function () {\n        this.taskTable.style.width = formatUnit(this.parent.enableTimelineVirtualization ?\n            this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth);\n        var prevDate = getValue('prevProjectStartDate', this.parent.dataOperation);\n        var isUpdated = false;\n        if (prevDate) {\n            isUpdated = prevDate.getTime() === this.parent.cloneProjectStartDate.getTime();\n        }\n        this.isUpdated = this.parent.isFromOnPropertyChange && isUpdated &&\n            getValue('mutableData', this.parent.treeGrid.grid.contentModule) ? true : false;\n        this.refreshGanttRows();\n        this.isUpdated = true;\n    };\n    /**\n     * To render chart rows.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.createChartTable = function () {\n        this.taskTable = createElement('table', {\n            className: cls.taskTable + ' ' + cls.zeroSpacing, id: 'GanttTaskTable' + this.parent.element.id,\n            styles: 'position: absolute;width:' + (this.parent.enableTimelineVirtualization ? this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth) + 'px;',\n            attrs: { cellspacing: '0.25px' }\n        });\n        var colgroup = createElement('colgroup');\n        var column = createElement('col', { styles: 'width:' + this.parent.timelineModule.totalTimelineWidth + 'px;' });\n        colgroup.appendChild(column);\n        this.taskTable.appendChild(colgroup);\n        this.ganttChartTableBody = createElement('tbody', {\n            id: this.parent.element.id + 'GanttTaskTableBody'\n        });\n        this.taskTable.appendChild(this.ganttChartTableBody);\n        this.parent.ganttChartModule.chartBodyContent.appendChild(this.taskTable);\n    };\n    ChartRows.prototype.initiateTemplates = function () {\n        this.taskTable.style.width = formatUnit(this.parent.enableTimelineVirtualization ?\n            this.parent.timelineModule.wholeTimelineWidth : this.parent.timelineModule.totalTimelineWidth);\n        this.initChartHelperPrivateVariable();\n        this.initializeChartTemplate();\n    };\n    /**\n     * To render chart rows.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.renderChartRows = function () {\n        this.createTaskbarTemplate();\n        this.parent.isGanttChartRendered = true;\n    };\n    /**\n     * To get gantt Indicator.\n     *\n     * @param {IIndicator} indicator .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getIndicatorNode = function (indicator) {\n        var templateString = '<label class=\"' + cls.label + ' ' + cls.taskIndicatorDiv + '\" style=\"display: inline-flex; align-items: center; margin-top: 0; line-height:'\n            + (this.parent.rowHeight) + 'px;' +\n            (this.parent.enableRtl ? 'right:' : 'left:') + this.getIndicatorleft(indicator.date) + 'px;\"><i class=\"' + indicator.iconClass + '\" style=\"margin-right: 3px;\"></i> </label>';\n        return this.createDivElement(templateString);\n    };\n    /**\n     * To get gantt Indicator.\n     *\n     * @param {Date | string} date .\n     * @returns {number} .\n     * @private\n     */\n    ChartRows.prototype.getIndicatorleft = function (date) {\n        date = this.parent.dateValidationModule.getDateFromFormat(date);\n        var left = this.parent.dataOperation.getTaskLeft(date, false);\n        return left;\n    };\n    /**\n     * To get child taskbar Node.\n     *\n     *  @param {number} i .\n     * @param {NodeList} rootElement .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getChildTaskbarNode = function (i, rootElement) {\n        var childTaskbarNode = null;\n        var data = this.templateData;\n        var direction;\n        if (this.parent.enableRtl) {\n            direction = 'right:';\n        }\n        else {\n            direction = 'left:';\n        }\n        if (this.childTaskbarTemplateFunction) {\n            childTaskbarNode = this.childTaskbarTemplateFunction(extend({ index: i }, data), this.parent, 'TaskbarTemplate', this.getTemplateID('TaskbarTemplate'), false, undefined, rootElement[0], this.parent.treeGrid['root']);\n        }\n        else {\n            var labelString = '';\n            var taskLabel = '';\n            var taskbarInnerDiv = void 0;\n            var progressDiv = void 0;\n            if (data.ganttProperties.startDate && data.ganttProperties.endDate\n                && data.ganttProperties.duration) {\n                taskbarInnerDiv = this.createDivElement('<div class=\"' + cls.childTaskBarInnerDiv + ' ' + cls.traceChildTaskBar +\n                    ' ' + (data.ganttProperties.isAutoSchedule ? '' : cls.manualChildTaskBar) + '\"' +\n                    'style=\"width:' + data.ganttProperties.width + 'px;height:' +\n                    (this.taskBarHeight) + 'px; margin-top :-1px\"></div>');\n                progressDiv = this.createDivElement('<div class=\"' + cls.childProgressBarInnerDiv + ' ' +\n                    cls.traceChildProgressBar + ' ' + (data.ganttProperties.isAutoSchedule ?\n                    '' : cls.manualChildProgressBar) + '\"' +\n                    ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') +\n                    'width:' + data.ganttProperties.progressWidth + 'px;height:100%;' +\n                    'border-top-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;' +\n                    'border-bottom-right-radius:' + this.getBorderRadius(data.ganttProperties) + 'px;\">' +\n                    '</div>');\n            }\n            var tempDiv = createElement('div');\n            if (this.taskLabelTemplateFunction && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n                var taskLabelTemplateNode = this.taskLabelTemplateFunction(extend({ index: i }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressDiv[0]);\n                if (taskLabelTemplateNode && taskLabelTemplateNode.length > 0) {\n                    append(taskLabelTemplateNode, tempDiv);\n                    labelString = tempDiv.innerHTML;\n                }\n            }\n            else {\n                var field = this.parent.labelSettings.taskLabel;\n                labelString = this.getTaskLabel(field);\n                labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n                if (this.parent.enableHtmlSanitizer && typeof (labelString) === 'string') {\n                    labelString = SanitizeHtmlHelper.sanitize(labelString);\n                }\n            }\n            if (labelString.indexOf('null') === -1) {\n                if (this.getTaskLabel(this.parent.labelSettings.taskLabel) === 'isCustomTemplate' &&\n                    !this.isTemplate(this.parent.labelSettings.taskLabel)) {\n                    labelString = '';\n                }\n                if (isNaN(parseInt(labelString, 10))) {\n                    taskLabel = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' +\n                        (this.taskBarHeight - 1) + 'px; text-align:' + (this.parent.enableRtl ? 'right;' : 'left;') +\n                        'display:' + 'inline-block;' +\n                        'width:' + (data.ganttProperties.width - 10) + 'px; height:' +\n                        this.taskBarHeight + 'px;\"></span>';\n                }\n                else {\n                    taskLabel = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' +\n                        (this.taskBarHeight - 1) + 'px;' + (this.parent.viewType === 'ResourceView' ? ('text-align:' +\n                        (this.parent.enableRtl ? 'right;' : 'left;')) : '') +\n                        +(this.parent.viewType === 'ResourceView' ? 'display:inline-flex;' : '') +\n                        +(this.parent.viewType === 'ResourceView' ? (data.ganttProperties.width - 10) : '') + 'px; height:' +\n                        this.taskBarHeight + 'px;\"></span>';\n                }\n            }\n            var template = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0 ?\n                this.splitTaskbar(data, labelString) : (data.ganttProperties.startDate && data.ganttProperties.endDate\n                && data.ganttProperties.duration) ? (taskLabel) :\n                (data.ganttProperties.startDate && !data.ganttProperties.endDate && !data.ganttProperties.duration) ? ('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' +\n                    cls.unscheduledTaskbarLeft + ' ' + (data.ganttProperties.isAutoSchedule ?\n                    '' : cls.manualChildTaskBar) + '\"' +\n                    'style=\"' + direction + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>') :\n                    (data.ganttProperties.endDate && !data.ganttProperties.startDate && !data.ganttProperties.duration) ?\n                        ('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' +\n                            cls.unscheduledTaskbarRight + ' ' + (data.ganttProperties.isAutoSchedule ?\n                            '' : cls.manualChildTaskBar) + '\"' +\n                            'style=\"' + direction + data.ganttProperties.left + 'px; height:' + this.taskBarHeight + 'px;\"></div>') :\n                        (data.ganttProperties.duration && !data.ganttProperties.startDate && !data.ganttProperties.endDate) ?\n                            ('<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildTaskBar + ' ' +\n                                cls.unscheduledTaskbar + ' ' + (data.ganttProperties.isAutoSchedule ?\n                                '' : cls.manualChildTaskBar) + '\"' +\n                                'style=\"' + direction + data.ganttProperties.left + 'px; width:' + data.ganttProperties.width + 'px;' +\n                                ' height:' + this.taskBarHeight + 'px;\"></div>') : '';\n            if (data.ganttProperties.segments && data.ganttProperties.segments.length > 0) {\n                var progress = this.getSplitProgressResizerNode();\n                template = template + progress;\n            }\n            if (data.ganttProperties.startDate && data.ganttProperties.endDate && data.ganttProperties.duration &&\n                (isNullOrUndefined(data.ganttProperties.segments) || (!isNullOrUndefined(data.ganttProperties.segments) &&\n                    data.ganttProperties.segments.length === 0))) {\n                if (template !== '' && !isNullOrUndefined(progressDiv) && progressDiv.length > 0) {\n                    /* eslint-disable-next-line */\n                    var templateElement = this.createDivElement(template)[0];\n                    if (this.parent.disableHtmlEncode) {\n                        templateElement.innerText = labelString;\n                    }\n                    else {\n                        templateElement.innerHTML = labelString;\n                    }\n                    var childLabel = this.parent.labelSettings.taskLabel;\n                    if (childLabel && childLabel['elementRef']) {\n                        templateElement.appendChild(tempDiv);\n                    }\n                    progressDiv[0].appendChild(templateElement);\n                    if (progressDiv[0].querySelectorAll('.e-task-label')[0].textContent !== '' &&\n                        !this.isTemplate(childLabel) &&\n                        progressDiv[0].querySelectorAll('.e-task-label')[0].children[0]) {\n                        progressDiv[0].querySelectorAll('.e-task-label')[0].children[0].remove();\n                    }\n                    if (progressDiv[0].querySelectorAll('.e-task-label')[0].textContent === '' &&\n                        childLabel && !childLabel['elementRef'] && tempDiv.innerHTML !== '') {\n                        progressDiv[0].querySelectorAll('.e-task-label')[0].textContent = childLabel;\n                    }\n                }\n                if (!isNullOrUndefined(taskbarInnerDiv) && taskbarInnerDiv.length > 0) {\n                    taskbarInnerDiv[0].appendChild([].slice.call(progressDiv)[0]);\n                }\n                childTaskbarNode = taskbarInnerDiv;\n            }\n            else {\n                childTaskbarNode = this.createDivElement(template);\n            }\n        }\n        if (this.parent.enableRtl && !isNullOrUndefined(childTaskbarNode) && childTaskbarNode[0] && childTaskbarNode[0].querySelector('.e-task-label')) {\n            childTaskbarNode[0].querySelector('.e-task-label').style.marginLeft = '15px';\n            childTaskbarNode[0].querySelector('.e-task-label').style.marginRight = '8px';\n            if (childTaskbarNode[0].querySelector('.e-gantt-child-progressbar')) {\n                childTaskbarNode[0].querySelector('.e-gantt-child-progressbar').style.textAlign = 'left';\n            }\n        }\n        return childTaskbarNode;\n    };\n    ChartRows.prototype.splitTaskbar = function (data, labelString) {\n        var splitTasks = '';\n        for (var i = 0; i < data.ganttProperties.segments.length; i++) {\n            var segment = data.ganttProperties.segments[i];\n            var progressBarVisible = void 0;\n            if (!segment.showProgress) {\n                progressBarVisible = 'hidden';\n            }\n            else {\n                progressBarVisible = 'initial';\n            }\n            var segmentPosition = (i === 0) ? 'e-segment-first' : (i === data.ganttProperties.segments.length - 1)\n                ? 'e-segment-last' : 'e-segment-inprogress';\n            splitTasks += (\n            //split taskbar\n            '<div class=\"' + cls.childTaskBarInnerDiv + ' ' + segmentPosition + ' ' + cls.traceChildTaskBar + ' ' +\n                ' e-segmented-taskbar' +\n                '\"style=\"width:' + segment.width + 'px;position: absolute;' + (this.parent.enableRtl ? 'right:' : 'left:') + segment.left + 'px;height:' +\n                (this.taskBarHeight) + 'px; overflow:' + progressBarVisible + ';\" data-segment-index = \"' + i + '\" aria-label = \"' +\n                this.generateSpiltTaskAriaLabel(segment, data.ganttProperties) + '\"> ' +\n                this.getSplitTaskbarLeftResizerNode() +\n                //split progress bar\n                '<div class=\"' + cls.childProgressBarInnerDiv + ' ' + cls.traceChildProgressBar + ' ' +\n                '\" style=\"border-style:' + (segment.progressWidth ? 'solid;' : 'none;') +\n                'display:' + (segment.progressWidth >= 0 ? 'block;' : 'none;') +\n                'width:' + segment.progressWidth + 'px;height:100%;' + 'text-align:' + (this.parent.enableRtl ? 'left;' : 'right;') +\n                'border-top-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;' +\n                'border-bottom-right-radius:' + this.getSplitTaskBorderRadius(segment) + 'px;\">' +\n                // progress label\n                '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' +\n                (this.taskBarHeight - 1) + 'px;display:' + (segment.showProgress ? 'inline;' : 'none;') +\n                'height:' + this.taskBarHeight + 'px;\">' + labelString + '</span>' +\n                '</div>' +\n                this.getSplitTaskbarRightResizerNode(segment) +\n                '</div></div>');\n        }\n        return splitTasks;\n    };\n    ChartRows.prototype.getSplitTaskbarLeftResizerNode = function () {\n        var lResizerLeft = (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? 5 : -2;\n        var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' +\n            ' style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + lResizerLeft + 'px;height:' + (this.taskBarHeight) + 'px;z-index:1\"></div>';\n        return template;\n    };\n    ChartRows.prototype.getSplitTaskbarRightResizerNode = function (segment) {\n        var rResizerLeft = (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? -17 : -10;\n        var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' +\n            ' style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + (segment.width + rResizerLeft) + 'px;' +\n            'height:' + (this.taskBarHeight) + 'px;z-index:1\"></div>';\n        return template;\n    };\n    ChartRows.prototype.getSplitProgressResizerNode = function () {\n        var width = this.parent.enableRtl ? (this.templateData.ganttProperties.progressWidth + 8) :\n            (this.templateData.ganttProperties.progressWidth - 6);\n        var template = '<div class=\"' + cls.childProgressResizer + '\"' +\n            ' style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + width + 'px;margin-top:' +\n            (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' +\n            '><div class=\"' + cls.progressHandlerElement + '\"></div>' +\n            '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n        return template;\n    };\n    ChartRows.prototype.getSegmentIndex = function (splitStartDate, record) {\n        var segmentIndex = -1;\n        var ganttProp = record.ganttProperties;\n        var segments = ganttProp.segments;\n        if (!isNullOrUndefined(segments)) {\n            segments.sort(function (a, b) {\n                return a.startDate.getTime() - b.startDate.getTime();\n            });\n            var length_1 = segments.length;\n            for (var i = 0; i < length_1; i++) {\n                var segment = segments[i];\n                // To find if user tend to split the start date of a main taskbar\n                // purpose of this to restrict the split action\n                if (splitStartDate.getTime() === ganttProp.startDate.getTime()) {\n                    this.dropSplit = true;\n                    segmentIndex = 0;\n                    // To find the if user tend to split the first date of already segmented task.\n                    // purpose of this to move on day of a segment\n                }\n                else if (splitStartDate.getTime() === segment.startDate.getTime()) {\n                    this.dropSplit = true;\n                    var sDate = segment.startDate;\n                    sDate.setDate(sDate.getDate() + 1);\n                    sDate = segment.startDate = this.parent.dataOperation.checkStartDate(sDate, ganttProp, false);\n                    segment.startDate = sDate;\n                    var eDate = segment.endDate;\n                    eDate = this.parent.dataOperation.getEndDate(sDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n                    segment.endDate = eDate;\n                    if (i === segments.length - 1) {\n                        this.parent.setRecordValue('endDate', eDate, ganttProp, true);\n                    }\n                    this.incrementSegments(segments, i, record);\n                    segmentIndex = segment.segmentIndex;\n                    // To find if the user tend to split the segment and find the segment index\n                }\n                else {\n                    segment.endDate = this.parent.dataOperation.getEndDate(segment.startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n                    if (splitStartDate.getTime() >= segment.startDate.getTime() && splitStartDate.getTime() <= segment.endDate.getTime()) {\n                        segmentIndex = segment.segmentIndex;\n                    }\n                }\n                this.parent.setRecordValue('segments', ganttProp.segments, ganttProp, true);\n            }\n        }\n        if (segmentIndex === -1) {\n            this.dropSplit = true;\n        }\n        return segmentIndex;\n    };\n    ChartRows.prototype.mergeTask = function (taskId, segmentIndexes) {\n        var mergeArrayLength = segmentIndexes.length;\n        var taskFields = this.parent.taskFields;\n        var mergeData = this.parent.flatData.filter(function (x) {\n            if (x[taskFields.id] === taskId) {\n                return x;\n            }\n            else {\n                return null;\n            }\n        })[0];\n        if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            var details = {};\n            details['action'] = 'MergeTaskbar';\n            if (this.parent['isUndoRedoItemPresent']('Edit')) {\n                if (this.parent.editModule && this.parent.editModule.taskbarEditModule['isDragged'] && this.parent.getUndoActions().length > 0) {\n                    this.parent.undoRedoModule['getUndoCollection'].splice(this.parent.undoRedoModule['getUndoCollection'].length - 1, 1);\n                }\n                this.parent.undoRedoModule['createUndoCollection']();\n                var rec = this.parent.previousFlatData[mergeData.index];\n                details['modifiedRecords'] = extend([], [rec], [], true);\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n            }\n        }\n        var segments = mergeData.ganttProperties.segments;\n        segmentIndexes = segmentIndexes.sort(function (a, b) {\n            return b.firstSegmentIndex - a.firstSegmentIndex;\n        });\n        for (var arrayLength = 0; arrayLength < mergeArrayLength; arrayLength++) {\n            var firstSegment = segments[segmentIndexes[arrayLength].firstSegmentIndex];\n            var secondSegment = segments[segmentIndexes[arrayLength].secondSegmentIndex];\n            var duration = firstSegment.duration + secondSegment.duration;\n            var endDate = this.parent.dataOperation.getEndDate(firstSegment.startDate, duration, mergeData.ganttProperties.durationUnit, mergeData.ganttProperties, false);\n            var segment = {\n                startDate: firstSegment.startDate,\n                endDate: endDate,\n                duration: duration\n            };\n            var insertIndex = segmentIndexes[arrayLength].firstSegmentIndex;\n            segments.splice(insertIndex, 2, segment);\n            this.parent.setRecordValue('segments', segments, mergeData.ganttProperties, true);\n            this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n            if (segments.length === 1) {\n                this.parent.setRecordValue('endDate', endDate, mergeData.ganttProperties, true);\n                this.parent.setRecordValue('EndDate', endDate, mergeData, true);\n                this.parent.setRecordValue('segments', null, mergeData.ganttProperties, true);\n                this.parent.dataOperation.updateMappingData(mergeData, 'segments');\n            }\n            else if (mergeData.ganttProperties.endDate !== segments[segments.length - 1].endDate) {\n                this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, mergeData.ganttProperties, true);\n            }\n        }\n        var segmentFields;\n        if (!isNullOrUndefined(mergeData[taskFields.segments]) && !isNullOrUndefined(mergeData[taskFields.segments][0])) {\n            segmentFields = Object.keys(mergeData[taskFields.segments][0]);\n        }\n        var modifiedSegments = [];\n        for (var i = 0; i < segments.length; i++) {\n            if (!isNullOrUndefined(segmentFields) && !modifiedSegments[i]) {\n                modifiedSegments[i] = {};\n            }\n            if (!isNullOrUndefined(segmentFields) && segmentFields.indexOf('StartDate') !== -1) {\n                modifiedSegments[i][taskFields.startDate] = segments[i].startDate;\n            }\n            if (!isNullOrUndefined(segmentFields) && segmentFields.indexOf('EndDate') !== -1) {\n                modifiedSegments[i][taskFields.endDate] = segments[i].endDate;\n            }\n            if (!isNullOrUndefined(segmentFields) && segmentFields.indexOf('Duration') !== -1) {\n                modifiedSegments[i][taskFields.duration] = segments[i].duration;\n            }\n        }\n        mergeData[taskFields.segments] = modifiedSegments;\n        this.updateSegment(mergeData.ganttProperties.segments, taskId);\n        this.refreshChartAfterSegment(mergeData, 'mergeSegment');\n    };\n    ChartRows.prototype.updateSegment = function (segmentData, taskId) {\n        var _this = this;\n        if (!isNullOrUndefined(this.parent.taskFields.segmentId) && this.parent.segmentData.length > 0) {\n            if (!isNullOrUndefined(segmentData)) {\n                var segmentsArray = [];\n                for (var i = 0; i < segmentData.length; i++) {\n                    var segmentObj = {};\n                    var segment = segmentData[i];\n                    segmentObj[this.parent.taskFields.segmentId] = taskId;\n                    if (!isNullOrUndefined(this.parent.taskFields.startDate)) {\n                        segmentObj[this.parent.taskFields.startDate] = segment.startDate;\n                    }\n                    if (!isNullOrUndefined(this.parent.taskFields.duration)) {\n                        segmentObj[this.parent.taskFields.duration] = segment.duration;\n                    }\n                    if (!isNullOrUndefined(this.parent.taskFields.endDate)) {\n                        segmentObj[this.parent.taskFields.endDate] = segment.endDate;\n                    }\n                    segmentsArray.push(segmentObj);\n                }\n                var filterData = this.parent.segmentData.filter(function (data) {\n                    return !(taskId === data[_this.parent.taskFields.segmentId]);\n                });\n                for (var i = 0; i < segmentsArray.length; i++) {\n                    filterData.push(segmentsArray[i]);\n                }\n                this.parent.segmentData = filterData;\n            }\n            else {\n                var filterData = this.parent.segmentData.filter(function (data) {\n                    return !(taskId === data[_this.parent.taskFields.segmentId]);\n                });\n                this.parent.segmentData = filterData;\n            }\n        }\n    };\n    ChartRows.prototype.refreshChartAfterSegment = function (data, requestType) {\n        this.parent.setRecordValue('segments', this.parent.dataOperation.setSegmentsInfo(data, false), data.ganttProperties, true);\n        this.parent.dataOperation.updateMappingData(data, 'segments');\n        this.parent.dataOperation.updateWidthLeft(data);\n        this.parent.dataOperation.updateParentItems(data);\n        if (this.parent.predecessorModule && this.parent.taskFields.dependency) {\n            this.parent.predecessorModule.updatedRecordsDateByPredecessor();\n            this.parent.connectorLineModule.removePreviousConnectorLines(this.parent.flatData);\n            this.parent.connectorLineEditModule.refreshEditedRecordConnectorLine(this.parent.flatData);\n            if (data.parentItem && this.parent.getParentTask(data.parentItem).ganttProperties.isAutoSchedule\n                && this.parent.isInPredecessorValidation) {\n                this.parent.dataOperation.updateParentItems(data.parentItem);\n            }\n            this.refreshRecords(this.parent.currentViewData);\n        }\n        else {\n            this.refreshRecords(this.parent.currentViewData);\n        }\n        var tr = this.ganttChartTableBody.querySelectorAll('tr')[this.parent.currentViewData.indexOf(data)];\n        var args = {\n            requestType: requestType,\n            rowData: data,\n            modifiedRecords: this.parent.editedRecords,\n            modifiedTaskData: getTaskData(this.parent.editedRecords, true)\n        };\n        this.triggerQueryTaskbarInfoByIndex(tr, data);\n        if (this.parent.selectionModule) {\n            this.parent.selectionModule.clearSelection();\n        }\n        var segments = args.rowData.taskData[this.parent.taskFields.segments];\n        if (this.parent.timezone && segments != null) {\n            for (var i = 0; i < segments.length; i++) {\n                segments[i][this.parent.taskFields.startDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].startDate, this.parent.timezone);\n                if (this.parent.taskFields.endDate) {\n                    segments[i][this.parent.taskFields.endDate] = this.parent.dateValidationModule.remove(args.rowData.ganttProperties.segments[i].endDate, this.parent.timezone);\n                }\n            }\n        }\n        this.parent.trigger('actionComplete', args);\n        if (!isNullOrUndefined(this.parent.loadingIndicator) && this.parent.loadingIndicator.indicatorType === 'Shimmer') {\n            this.parent.hideMaskRow();\n        }\n        else {\n            this.parent.hideSpinner();\n        }\n        setValue('isEdit', false, this.parent.contextMenuModule);\n        setValue('isEdit', false, this.parent);\n    };\n    /**\n     * public method to split task bar.\n     *\n     * @public\n     */\n    ChartRows.prototype.splitTask = function (taskId, splitDates) {\n        var taskFields = this.parent.taskFields;\n        var splitDate = splitDates;\n        var splitRecord = this.parent.flatData.filter(function (x) {\n            if (x[taskFields.id] === taskId) {\n                return x;\n            }\n            else {\n                return null;\n            }\n        })[0];\n        if (this.parent.undoRedoModule && !this.parent.undoRedoModule['isUndoRedoPerformed']) {\n            var details = {};\n            details['action'] = 'MergeTaskbar';\n            if (this.parent['isUndoRedoItemPresent']('Edit')) {\n                this.parent.undoRedoModule['createUndoCollection']();\n                details['modifiedRecords'] = extend([], [splitRecord], [], true);\n                this.parent.undoRedoModule['getUndoCollection'][this.parent.undoRedoModule['getUndoCollection'].length - 1] = details;\n            }\n        }\n        var ganttProp = splitRecord.ganttProperties;\n        this.dropSplit = false;\n        var segmentIndex = -1;\n        var segments = ganttProp.segments;\n        if (isNullOrUndefined(splitDates.length) || splitDates.length < 0) {\n            var splitStartDate = this.parent.dataOperation.checkStartDate(splitDate, ganttProp, false);\n            if (splitStartDate.getTime() !== ganttProp.startDate.getTime()) {\n                if (ganttProp.isAutoSchedule) {\n                    if (!isNullOrUndefined(segments) && segments.length > 0) {\n                        segmentIndex = this.getSegmentIndex(splitStartDate, splitRecord);\n                    }\n                    //check atleast one day difference is there to split\n                    if (this.dropSplit === false && splitDate.getTime() > ganttProp.startDate.getTime() &&\n                        splitDate.getTime() < ganttProp.endDate.getTime()) {\n                        segments = segmentIndex !== -1 ? segments : [];\n                        var startDate = segmentIndex !== -1 ?\n                            segments[segmentIndex].startDate : new Date(ganttProp.startDate.getTime());\n                        var endDate = segmentIndex !== -1 ?\n                            segments[segmentIndex].endDate : new Date(ganttProp.endDate.getTime());\n                        var segmentDuration = this.parent.dataOperation.getDuration(startDate, endDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone);\n                        this.parent.setRecordValue('segments', this.splitSegmentedTaskbar(startDate, endDate, splitDate, segmentIndex, segments, splitRecord, segmentDuration), ganttProp, true);\n                        var modifiedSegments = [];\n                        for (var i = 0; i < segments.length; i++) {\n                            if (!modifiedSegments[i]) {\n                                modifiedSegments[i] = {};\n                            }\n                            modifiedSegments[i][taskFields.startDate] = segments[i].startDate;\n                            modifiedSegments[i][taskFields.endDate] = segments[i].endDate;\n                            modifiedSegments[i][taskFields.duration] = segments[i].duration;\n                        }\n                        splitRecord[taskFields.segments] = modifiedSegments;\n                        if (segmentIndex !== -1) {\n                            this.incrementSegments(segments, segmentIndex + 1, splitRecord);\n                        }\n                        this.parent.setRecordValue('endDate', segments[segments.length - 1].endDate, ganttProp, true);\n                        if (this.parent.taskFields.endDate) {\n                            this.parent.dataOperation.updateMappingData(splitRecord, 'endDate');\n                        }\n                    }\n                    this.updateSegment(splitRecord.ganttProperties.segments, taskId);\n                    this.refreshChartAfterSegment(splitRecord, 'splitTaskbar');\n                }\n            }\n        }\n        else {\n            splitDates.sort(function (a, b) {\n                return a.getTime() - b.getTime();\n            });\n            this.parent.setRecordValue('segments', this.constructSegments(splitDates, splitRecord.ganttProperties), splitRecord.ganttProperties, true);\n            this.updateSegment(splitRecord.ganttProperties.segments, taskId);\n            this.refreshChartAfterSegment(splitRecord, 'splitTask');\n        }\n    };\n    ChartRows.prototype.constructSegments = function (dates, taskData) {\n        var segmentsArray = [];\n        var segment;\n        var startDate = new Date();\n        var endDate;\n        var duration;\n        for (var i = 0; i < dates.length + 1; i++) {\n            startDate = i === 0 ? taskData.startDate : startDate;\n            startDate = this.parent.dataOperation.checkStartDate(startDate, taskData, false);\n            endDate = i !== dates.length ? new Date(dates[i].getTime()) > taskData.endDate ? taskData.endDate\n                : new Date(dates[i].getTime()) : taskData.endDate;\n            endDate = this.parent.dataOperation.checkEndDate(endDate, taskData, false);\n            duration = this.parent.dataOperation.getDuration(startDate, endDate, taskData.durationUnit, taskData.isAutoSchedule, taskData.isMilestone);\n            if (endDate.getTime() >= startDate.getTime()) {\n                segment = {\n                    startDate: startDate,\n                    endDate: endDate,\n                    duration: duration\n                };\n                segmentsArray.push(segment);\n            }\n            if (i === dates.length) {\n                break;\n            }\n            startDate = new Date(dates[i].getTime());\n            startDate.setDate(dates[i].getDate() + 1);\n        }\n        return segmentsArray;\n    };\n    ChartRows.prototype.splitSegmentedTaskbar = function (startDate, endDate, splitDate, segmentIndex, segments, ganttData, segmentDuration) {\n        var ganttProp = ganttData.ganttProperties;\n        var checkClickState;\n        var endDateState;\n        if (this.parent.includeWeekend) {\n            checkClickState = -1;\n        }\n        else {\n            checkClickState = this.parent.nonWorkingDayIndex.indexOf(splitDate.getDay());\n        }\n        var increment = checkClickState === -1 ? 0 : checkClickState === 0 ? 1 : checkClickState === 1 ? 1 : 2;\n        startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n        var segmentEndDate = new Date(splitDate.getTime());\n        segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n        for (var i = 0; i < 2; i++) {\n            if (this.parent.weekWorkingTime.length > 0) {\n                var dayEndTime = this.parent['getCurrentDayEndTime'](segmentEndDate);\n                this.setTime(dayEndTime, segmentEndDate);\n            }\n            var segment = {\n                startDate: startDate,\n                endDate: segmentEndDate,\n                duration: this.parent.dataOperation.getDuration(startDate, segmentEndDate, ganttProp.durationUnit, ganttProp.isAutoSchedule, ganttProp.isMilestone),\n                offsetDuration: 1\n            };\n            if (this.parent.includeWeekend) {\n                endDateState = -1;\n            }\n            else {\n                endDateState = this.parent.nonWorkingDayIndex.indexOf(segmentEndDate.getDay());\n            }\n            if (segmentIndex !== -1) {\n                segments.splice(segmentIndex, 1);\n                segmentIndex = -1;\n            }\n            segments.push(segment);\n            var mode = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n            if (mode === 'Hour' || mode === 'Minutes') {\n                startDate = new Date(splitDate.getTime());\n                startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n                var count = this.parent.timelineModule.customTimelineSettings.bottomTier.count;\n                var mode_1 = this.parent.timelineModule.customTimelineSettings.bottomTier.unit;\n                var timeIncrement = this.parent.timelineModule.getIncrement(startDate, count, mode_1);\n                var newTime = startDate.getTime() + timeIncrement;\n                startDate.setTime(newTime + increment);\n                segmentEndDate = new Date(endDate.getTime());\n                timeIncrement = this.parent.timelineModule.getIncrement(segmentEndDate, count, mode_1);\n                newTime = segmentEndDate.getTime() + timeIncrement;\n                segmentEndDate.setTime(newTime + increment);\n            }\n            else {\n                startDate = new Date(splitDate.getTime());\n                startDate.setDate(startDate.getDate() + 1 + increment);\n                var dayStartTime = this.parent['getCurrentDayStartTime'](startDate);\n                this.setTime(dayStartTime, startDate);\n                startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n                if (!this.parent.taskFields.duration && increment <= 0) {\n                    startDate.setDate(startDate.getDate() + 1);\n                }\n                segmentEndDate = new Date(endDate.getTime());\n                if (this.isOnHolidayOrWeekEnd(segmentEndDate, true)) {\n                    do {\n                        segmentEndDate.setDate(segmentEndDate.getDate() + 1);\n                    } while (this.isOnHolidayOrWeekEnd(segmentEndDate, true));\n                }\n                if (!this.parent.includeWeekend) {\n                    segmentEndDate = this.getNextWorkingDay(segmentEndDate);\n                }\n            }\n            if (endDateState !== -1) {\n                var diff = segmentDuration - segment.duration;\n                segmentEndDate =\n                    this.parent.dataOperation.getEndDate(startDate, diff, ganttProp.durationUnit, ganttProp, false);\n            }\n            else {\n                segmentEndDate = this.parent.dataOperation.checkEndDate(segmentEndDate, ganttProp, false);\n            }\n        }\n        segments.sort(function (a, b) {\n            return a.startDate.getTime() - b.startDate.getTime();\n        });\n        return segments;\n    };\n    ChartRows.prototype.incrementSegments = function (segments, segmentIndex, ganttData) {\n        var ganttProp = ganttData.ganttProperties;\n        for (var i = segmentIndex + 1; i < segments.length; i++) {\n            var segment = segments[i];\n            var startDate = i !== 0 ? new Date(segments[i - 1].endDate.getTime()) : new Date(segment.startDate.getTime());\n            this.parent.dataOperation['fromSegments'] = true;\n            startDate = this.parent.dataOperation.getEndDate(startDate, segment.offsetDuration, ganttProp.durationUnit, ganttProp, false);\n            this.parent.dataOperation['fromSegments'] = false;\n            startDate = this.parent.dataOperation.checkStartDate(startDate, ganttProp, false);\n            segment.startDate = startDate;\n            var endDate = segment.endDate = this.parent.dataOperation.getEndDate(startDate, segment.duration, ganttProp.durationUnit, ganttProp, false);\n            segment.endDate = endDate;\n            if (i === segments.length - 1) {\n                this.parent.setRecordValue('endDate', endDate, ganttProp, true);\n                if (this.parent.taskFields.endDate) {\n                    this.parent.dataOperation.updateMappingData(ganttData, 'endDate');\n                }\n            }\n        }\n        segments.sort(function (a, b) {\n            return a.startDate.getTime() - b.startDate.getTime();\n        });\n        this.parent.setRecordValue('segments', segments, ganttProp, true);\n        this.parent.dataOperation.updateMappingData(ganttData, 'segments');\n    };\n    ChartRows.prototype.calculateLeftValue = function (rowHeight) {\n        var taskbarHeightValue = this.parent.renderBaseline ? 0.45 : ((!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? 0.7 : 0.62);\n        var defaultTaskbarHeight = Math.floor(this.parent.rowHeight * taskbarHeightValue);\n        if ((!isNullOrUndefined(this.parent.taskbarHeight) && this.parent.taskbarHeight <= defaultTaskbarHeight) ||\n            (isNullOrUndefined(this.parent.taskbarHeight) && rowHeight <= 36)) {\n            return 1;\n        }\n        else {\n            if (rowHeight <= 36) {\n                return 1;\n            }\n            return (-1 / 12) * (rowHeight - 36) + 1;\n        }\n    };\n    /**\n     * To get milestone node.\n     *\n     * @param {number} i .\n     * @param {NodeList} rootElement .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getMilestoneNode = function (i, rootElement) {\n        var milestoneNode = null;\n        var data = this.templateData;\n        var rowHeight = this.parent.rowHeight;\n        var leftValue = this.calculateLeftValue(rowHeight);\n        if (this.milestoneTemplateFunction) {\n            milestoneNode = this.milestoneTemplateFunction(extend({ index: i }, data), this.parent, 'MilestoneTemplate', this.getTemplateID('MilestoneTemplate'), false, undefined, rootElement[0], this.parent.treeGrid['root']);\n        }\n        else {\n            var template = '<div class=\"' + cls.traceMilestone + '\" style=\"width:' + ((this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 6)) + 'px;height:' +\n                ((this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 6)) + 'px;position:absolute;transform: rotate(45deg);left:' + leftValue + 'px;\"> </div>';\n            milestoneNode = this.createDivElement(template);\n        }\n        return milestoneNode;\n    };\n    /**\n     * To get task baseline Node.\n     *\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getTaskBaselineNode = function () {\n        var data = this.templateData;\n        var template = '<div class=\"' + cls.baselineBar + ' ' + '\" role=\"term\" style=\"margin-top:' + this.baselineTop +\n            'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + data.ganttProperties.baselineLeft + 'px;' +\n            'width:' + data.ganttProperties.baselineWidth + 'px;height:' +\n            this.baselineHeight + 'px;' + (this.baselineColor ? 'background-color: ' + this.baselineColor + ';' : '') + '\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.updateTaskBaselineNode = function (childData) {\n        var template = '<div class=\"' + cls.baselineBar + ' ' + '\" role=\"term\" style=\"margin-top:' + this.baselineTop +\n            'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + childData.ganttProperties.baselineLeft + 'px;' +\n            'width:' + childData.ganttProperties.baselineWidth + 'px;height:' +\n            this.baselineHeight + 'px;' + (this.baselineColor ? 'background-color: ' + this.baselineColor + ';' : '') + '\"></div>';\n        return this.createDivElement(template);\n    };\n    /**\n     * To get milestone baseline node.\n     *\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getMilestoneBaselineNode = function () {\n        var data = this.templateData;\n        var baselineMilestoneHeight = this.parent.renderBaseline ? 5 : 2;\n        var template = '<div class=\"' + cls.baselineMilestoneContainer + '\" style=\"width:' + ((this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 10)) + 'px;height:' +\n            ((this.parent.renderBaseline ? this.taskBarHeight : this.taskBarHeight - 10)) + 'px;position:absolute;transform:rotate(45deg);' + (this.parent.enableRtl ? 'right:' : 'left:') + (this.parent.enableRtl ? (data.ganttProperties.left -\n            (this.milestoneHeight / 2) + 3) : (data.ganttProperties.baselineLeft - (this.milestoneHeight / 2) + 1)) + 'px;' + (this.baselineColor ?\n            'background-color: ' + this.baselineColor + ';' : '') + 'margin-top:' + ((-Math.floor(this.parent.rowHeight - this.milestoneMarginTop) + baselineMilestoneHeight) + 2) + 'px\"> </div>';\n        return this.createDivElement(template);\n    };\n    /**\n     * To get left label node.\n     *\n     * @param {number} i .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getLeftLabelNode = function (i) {\n        var leftLabelNode = this.leftLabelContainer();\n        if (this.generateTaskLabelAriaLabel('left') !== '') {\n            leftLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('left'));\n        }\n        var leftLabelTemplateNode = null;\n        if (this.leftTaskLabelTemplateFunction) {\n            leftLabelTemplateNode = this.leftTaskLabelTemplateFunction(extend({ index: i }, this.templateData), this.parent, 'LeftLabelTemplate', this.getTemplateID('LeftLabelTemplate'), false, undefined, leftLabelNode[0], this.parent.treeGrid['root']);\n        }\n        else {\n            var field = this.parent.labelSettings.leftLabel;\n            var labelString = this.getTaskLabel(field);\n            if (labelString) {\n                labelString = labelString === 'isCustomTemplate' ? field : labelString;\n                leftLabelTemplateNode = this.getLableText(labelString, cls.leftLabelInnerDiv);\n                if (this.parent.enableHtmlSanitizer && typeof (labelString) === 'string') {\n                    labelString = SanitizeHtmlHelper.sanitize(labelString);\n                    labelString = labelString === 'isCustomTemplate' ? field : labelString;\n                    leftLabelTemplateNode = this.getLableText(labelString, cls.leftLabelInnerDiv);\n                }\n            }\n        }\n        if (leftLabelTemplateNode && leftLabelTemplateNode.length > 0) {\n            if (leftLabelTemplateNode[0]['data'] === 'null') {\n                leftLabelTemplateNode[0]['data'] = '';\n            }\n            append(leftLabelTemplateNode, leftLabelNode[0]);\n        }\n        if (this.parent.enableRtl) {\n            leftLabelNode[0].style.paddingLeft = '25px';\n            leftLabelNode[0].style.paddingRight = '0px';\n        }\n        return leftLabelNode;\n    };\n    ChartRows.prototype.getLableText = function (labelString, labelDiv) {\n        var leftLabelHeight = this.parent.renderBaseline ?\n            ((this.parent.rowHeight - this.taskBarHeight) / 2) : this.taskBarMarginTop;\n        var templateString = createElement('div', {\n            className: labelDiv, styles: 'height:' + (this.taskBarHeight) + 'px;' +\n                'margin-top:' + leftLabelHeight + 'px;'\n        });\n        var spanElem = createElement('span', { className: cls.label });\n        var property = this.parent.disableHtmlEncode ? 'textContent' : 'innerHTML';\n        spanElem[property] = labelString;\n        templateString.appendChild(spanElem);\n        var div = createElement('div');\n        div.appendChild(templateString);\n        return div.childNodes;\n    };\n    /**\n     * To get right label node.\n     *\n     * @param {number} i .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getRightLabelNode = function (i) {\n        var rightLabelNode = this.rightLabelContainer();\n        if (this.generateTaskLabelAriaLabel('right') !== '') {\n            rightLabelNode[0].setAttribute('aria-label', this.generateTaskLabelAriaLabel('right'));\n        }\n        var rightLabelTemplateNode = null;\n        if (this.rightTaskLabelTemplateFunction) {\n            rightLabelTemplateNode = this.rightTaskLabelTemplateFunction(extend({ index: i }, this.templateData), this.parent, 'RightLabelTemplate', this.getTemplateID('RightLabelTemplate'), false, undefined, rightLabelNode[0], this.parent.treeGrid['root']);\n        }\n        else {\n            var field = this.parent.labelSettings.rightLabel;\n            var labelString = this.getTaskLabel(field);\n            if (labelString) {\n                labelString = labelString === 'isCustomTemplate' ? field : labelString;\n                rightLabelTemplateNode = this.getLableText(labelString, cls.rightLabelInnerDiv);\n                if (this.parent.enableHtmlSanitizer && typeof (labelString) === 'string') {\n                    labelString = SanitizeHtmlHelper.sanitize(labelString);\n                    labelString = labelString === 'isCustomTemplate' ? field : labelString;\n                    rightLabelTemplateNode = this.getLableText(labelString, cls.rightLabelInnerDiv);\n                }\n            }\n        }\n        if (rightLabelTemplateNode && rightLabelTemplateNode.length > 0) {\n            if (rightLabelTemplateNode[0]['data'] === 'null') {\n                rightLabelTemplateNode[0]['data'] = '';\n            }\n            append(rightLabelTemplateNode, rightLabelNode[0]);\n        }\n        if (this.parent.enableRtl) {\n            rightLabelNode[0].style.marginLeft = '0px';\n            rightLabelNode[0].style.paddingRight = '25px';\n        }\n        return rightLabelNode;\n    };\n    ChartRows.prototype.getManualTaskbar = function () {\n        var data = this.templateData;\n        var taskbarHeight = (this.taskBarHeight / 2 - 1);\n        var innerDiv = (data.ganttProperties.startDate && data.ganttProperties.endDate &&\n            (data.ganttProperties.duration || data.hasChildRecords)) ?\n            ('<div class=\"' + cls.manualParentTaskBar + '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' +\n                taskbarHeight / 5 + 'px;border-left-width:' + taskbarHeight / 5 +\n                'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>') :\n            (!data.ganttProperties.startDate && !data.ganttProperties.endDate && data.ganttProperties.duration) ?\n                ('<div class=\"' + cls.manualParentTaskBar + ' ' + cls.traceManualUnscheduledTask +\n                    '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' +\n                    (taskbarHeight / 5 + 1) + 'px;border-left-width:' + taskbarHeight / 5 +\n                    'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>') : ('<div class=\"' +\n                cls.manualParentTaskBar + ' ' + (data.ganttProperties.startDate ? cls.unscheduledTaskbarLeft : cls.unscheduledTaskbarRight) +\n                '\" style=\"width:' + data.ganttProperties.width + 'px;' + 'height:' +\n                taskbarHeight * 2 + 'px;border-left-width:' + taskbarHeight / 5 +\n                'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>');\n        var childEle = innerDiv + ((data.ganttProperties.startDate && data.ganttProperties.endDate &&\n            (data.ganttProperties.duration || data.hasChildRecords)) || data.ganttProperties.duration ? '<div class=\"e-gantt-manualparenttaskbar-left\" style=' +\n            (this.parent.enableRtl ? 'margin-right:0px;' : '') + '\"height:' + ((taskbarHeight / 5) + 8) + 'px;border-left-width:' + taskbarHeight / 5 +\n            'px; border-bottom:' + taskbarHeight / 5 + 'px solid transparent;\"></div>' +\n            '<div class=\"e-gantt-manualparenttaskbar-right\" style=' + (this.parent.enableRtl ? 'margin-right:-8px;' : '') +\n            (this.parent.enableRtl ? 'right:' : 'left:') + (data.ganttProperties.width - Math.floor(((taskbarHeight / 5) + 8) / 5)) + 'px;height:' +\n            ((taskbarHeight / 5) + 8) + 'px;border-right-width:' + taskbarHeight / 5 + 'px;border-bottom:' +\n            taskbarHeight / 5 + 'px solid transparent;>' + '</div></div>' : '');\n        var template = '<div class=\"' + cls.manualParentMainContainer + '\"' +\n            'style=' + (this.parent.enableRtl ? 'right:' : 'left:') + (data.ganttProperties.left - data.ganttProperties.autoLeft) + 'px;' +\n            'width:' + data.ganttProperties.width + 'px;' +\n            'height:' + taskbarHeight + 'px;cursor:' + (this.parent.editSettings.allowTaskbarEditing ? 'move;' : 'default;') + '</div>';\n        var milestoneTemplate = '<div class=\"' + cls.manualParentMilestone + '\" style=\"width:' + ((this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7)) + 'px;height:' +\n            ((this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7)) +\n            'px;position:absolute;transform: rotate(45deg);top:' + (this.parent.rowHeight > 40 ? 0 : 2) + 'px;left:'\n            + (this.parent.renderBaseline ? 2 : 1) + 'px;\"> </div>';\n        return this.createDivElement((data.ganttProperties.duration === 0 && data.hasChildRecords &&\n            !data.ganttProperties.isAutoSchedule) ? milestoneTemplate + childEle : template + childEle);\n    };\n    /**\n     * To get parent taskbar node.\n     *\n     * @param {number} i .\n     * @param {NodeList} rootElement .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getParentTaskbarNode = function (i, rootElement) {\n        var parentTaskbarNode = null;\n        var data = this.templateData;\n        if (this.parentTaskbarTemplateFunction) {\n            parentTaskbarNode = this.parentTaskbarTemplateFunction(extend({ index: i }, data), this.parent, 'ParentTaskbarTemplate', this.getTemplateID('ParentTaskbarTemplate'), false, undefined, rootElement[0], this.parent.treeGrid['root']);\n        }\n        else {\n            var labelString = '';\n            var labelDiv = void 0;\n            var tHeight = this.taskBarHeight / 5;\n            var template = this.createDivElement('<div class=\"' + cls.parentTaskBarInnerDiv + ' ' +\n                this.getExpandClass(data) + ' ' + cls.traceParentTaskBar + '\"' +\n                ' style=\"width:' + (data.ganttProperties.isAutoSchedule ? data.ganttProperties.width :\n                data.ganttProperties.autoWidth) + 'px;height:' + (data.ganttProperties.isAutoSchedule ? this.taskBarHeight :\n                (tHeight * 3)) + 'px;margin-top:' + (data.ganttProperties.isAutoSchedule ? -1 :\n                (tHeight * 2)) + 'px; \">' +\n                '</div>');\n            var progressBarInnerDiv = this.createDivElement('<div class=\"' + cls.parentProgressBarInnerDiv + ' ' +\n                this.getExpandClass(data) + ' ' + cls.traceParentProgressBar + '\"' +\n                ' style=\"border-style:' + (data.ganttProperties.progressWidth ? 'solid;' : 'none;') +\n                'width:' + data.ganttProperties.progressWidth + 'px;' +\n                'border-top-right-radius:' + this.getBorderRadius(data) + 'px;' +\n                'border-bottom-right-radius:' + this.getBorderRadius(data) + 'px;height:100%;\"></div>');\n            var div = createElement('div');\n            if (this.taskLabelTemplateFunction) {\n                var parentTaskLabelNode = this.taskLabelTemplateFunction(extend({ index: i }, data), this.parent, 'TaskLabelTemplate', this.getTemplateID('TaskLabelTemplate'), false, undefined, progressBarInnerDiv[0]);\n                if (parentTaskLabelNode && parentTaskLabelNode.length > 0) {\n                    append(parentTaskLabelNode, div);\n                    labelString = div.innerHTML;\n                }\n            }\n            else {\n                labelString = this.getTaskLabel(this.parent.labelSettings.taskLabel);\n                labelString = labelString === 'isCustomTemplate' ? this.parent.labelSettings.taskLabel : labelString;\n                if (this.parent.enableHtmlSanitizer && typeof (labelString) === 'string') {\n                    labelString = SanitizeHtmlHelper.sanitize(labelString);\n                }\n            }\n            if (labelString.indexOf('null') === -1) {\n                if (this.getTaskLabel(this.parent.labelSettings.taskLabel) === 'isCustomTemplate' &&\n                    !this.isTemplate(this.parent.labelSettings.taskLabel)) {\n                    labelString = '';\n                }\n                if (isNaN(parseInt(labelString, 10))) {\n                    labelDiv = '<span class=\"' + cls.taskLabel + '\" style=\"line-height:' +\n                        (data['isManual'] && data.hasChildRecords ? (Math.floor((60 / 100) * this.taskBarHeight)) : (this.taskBarHeight - 1)) +\n                        'px; text-align:' + (this.parent.enableRtl ? 'right;' : 'left;') +\n                        'display:' + 'inline-block;' +\n                        'width:' + (data.ganttProperties.width - 10) + 'px; height:' +\n                        this.taskBarHeight + 'px;\"></span>';\n                }\n                else {\n                    labelDiv = '<span class=\"' +\n                        cls.taskLabel + '\" style=\"line-height:' +\n                        (data['isManual'] && data.hasChildRecords ? (Math.floor((60 / 100) * this.taskBarHeight)) : (this.taskBarHeight - 1)) + 'px;' +\n                        (this.parent.viewType === 'ResourceView' ? 'display:inline-flex;' : '') +\n                        (this.parent.viewType === 'ResourceView' ? 'width:' + (data.ganttProperties.width - 10) : '') + 'px; height:' +\n                        (this.taskBarHeight - 1) + 'px;' + (this.parent.viewType === 'ResourceView' ? 'display: inline-flex;' : '') +\n                        (this.parent.viewType === 'ResourceView' ? 'width:' + (data.ganttProperties.width - 10) : '') + 'px; height:' +\n                        this.taskBarHeight + 'px;\"></span>';\n                }\n                var labelElement = this.createDivElement(labelDiv)[0];\n                if (this.parent.disableHtmlEncode) {\n                    labelElement.innerText = labelString;\n                }\n                else {\n                    labelElement.innerHTML = labelString;\n                }\n                var parentLabel = this.parent.labelSettings.taskLabel;\n                if (parentLabel && parentLabel['elementRef']) {\n                    labelElement.appendChild(div);\n                }\n                progressBarInnerDiv[0].appendChild(labelElement);\n                if (progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].textContent !== '' &&\n                    !this.isTemplate(parentLabel) &&\n                    progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].children[0]) {\n                    progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].children[0].remove();\n                }\n                if (progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].textContent === '' &&\n                    parentLabel && !parentLabel['elementRef'] && div.innerHTML !== '') {\n                    progressBarInnerDiv[0].querySelectorAll('.e-task-label')[0].textContent = parentLabel;\n                }\n            }\n            var milestoneTemplate = '<div class=\"' + cls.parentMilestone + '\" style=\"width:' + ((this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7)) + 'px;height:' +\n                ((this.parent.renderBaseline ? this.taskBarHeight - 3 : this.taskBarHeight - 7)) + 'px;position:absolute;transform: rotate(45deg);top:' + (this.parent.rowHeight > 40 ? 0 : 2) + 'px;left:' + (this.parent.renderBaseline ? 2 : 1) + 'px;\"> </div>';\n            template[0].appendChild([].slice.call(progressBarInnerDiv)[0]);\n            parentTaskbarNode = data.ganttProperties.isMilestone ?\n                this.createDivElement(data.ganttProperties.isAutoSchedule ? milestoneTemplate : '') : template;\n        }\n        if (this.parent.enableRtl && parentTaskbarNode[0] && parentTaskbarNode[0].querySelector('.e-task-label')) {\n            parentTaskbarNode[0].querySelector('.e-task-label').style.marginLeft = '15px';\n            parentTaskbarNode[0].querySelector('.e-task-label').style.marginRight = '8px';\n            if (parentTaskbarNode[0].querySelector('.e-gantt-parent-progressbar')) {\n                parentTaskbarNode[0].querySelector('.e-gantt-parent-progressbar').style.textAlign = 'left';\n            }\n        }\n        return parentTaskbarNode;\n    };\n    /**\n     * To get taskbar row('TR') node\n     *\n     * @param {number} i .\n     * @returns {NodeList} .\n     * @private\n     */\n    ChartRows.prototype.getTableTrNode = function (i) {\n        var _this = this;\n        var table = createElement('table');\n        var className = (this.parent.gridLines === 'Horizontal' || this.parent.gridLines === 'Both') ?\n            'e-chart-row-border' : '';\n        /* eslint-disable-next-line */\n        var activecls;\n        var rows;\n        if (this.parent.treeGridModule.isPersist) {\n            setTimeout(function () {\n                if (!isNullOrUndefined(_this.parent.treeGrid.grid) && !isNullOrUndefined(_this.parent.treeGrid.grid.contentModule) &&\n                    !isNullOrUndefined(_this.parent.treeGrid.grid.contentModule.getRows())) {\n                    rows = _this.parent.treeGrid.grid.contentModule.getRows()[i];\n                    if (rows && rows.isSelected) {\n                        activecls = 'e-active';\n                    }\n                    else {\n                        activecls = '';\n                    }\n                }\n            }, 0);\n        }\n        else {\n            rows = this.parent.treeGrid.grid.contentModule.getRows()[i];\n            if (rows && rows.isSelected) {\n                activecls = 'e-active';\n            }\n            else {\n                activecls = '';\n            }\n        }\n        table.innerHTML = '<tr class=\"' + this.getRowClassName(this.templateData) + ' ' + cls.chartRow + ' ' + (activecls) + '\"' +\n            'style=\"display:' + this.getExpandDisplayProp(this.templateData) + ';height:' +\n            this.parent.rowHeight + 'px;\">' +\n            '<td class=\"' + cls.chartRowCell + ' ' + className\n            + '\"style=\"width:' + this.parent.timelineModule.totalTimelineWidth + 'px;\"></td></tr>';\n        return table.childNodes;\n    };\n    /**\n     * To initialize chart templates.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.initializeChartTemplate = function () {\n        if (!isNullOrUndefined(this.parent.parentTaskbarTemplate)) {\n            this.parentTaskbarTemplateFunction = this.templateCompiler(this.parent.parentTaskbarTemplate);\n        }\n        if (!isNullOrUndefined(this.parent.labelSettings.leftLabel) &&\n            this.isTemplate(this.parent.labelSettings.leftLabel)) {\n            this.leftTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.leftLabel);\n        }\n        if (!isNullOrUndefined(this.parent.labelSettings.rightLabel) &&\n            this.isTemplate(this.parent.labelSettings.rightLabel)) {\n            this.rightTaskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.rightLabel);\n        }\n        if (!isNullOrUndefined(this.parent.labelSettings.taskLabel) &&\n            this.isTemplate(this.parent.labelSettings.taskLabel)) {\n            this.taskLabelTemplateFunction = this.templateCompiler(this.parent.labelSettings.taskLabel);\n        }\n        if (!isNullOrUndefined(this.parent.taskbarTemplate)) {\n            this.childTaskbarTemplateFunction = this.templateCompiler(this.parent.taskbarTemplate);\n        }\n        if (!isNullOrUndefined(this.parent.milestoneTemplate)) {\n            this.milestoneTemplateFunction = this.templateCompiler(this.parent.milestoneTemplate);\n        }\n    };\n    ChartRows.prototype.createDivElement = function (template) {\n        var div = createElement('div');\n        div.innerHTML = template;\n        return div.childNodes;\n    };\n    ChartRows.prototype.isTemplate = function (template) {\n        var result = false;\n        for (var i = 0; i < this.parent.ganttColumns.length; i++) {\n            if (template === this.parent.ganttColumns[i].field) {\n                result = true;\n                break;\n            }\n        }\n        if (typeof template !== 'string' || template.indexOf('#') === 0 || template.indexOf('<') > -1\n            || template.indexOf('$') > -1 || !result) {\n            result = true;\n        }\n        else {\n            result = false;\n        }\n        return result;\n    };\n    /**\n     * @param {string} templateName .\n     * @returns {string} .\n     * @private\n     */\n    ChartRows.prototype.getTemplateID = function (templateName) {\n        var ganttID = this.parent.element.id;\n        return ganttID + templateName;\n    };\n    ChartRows.prototype.leftLabelContainer = function () {\n        var template = '<div class=\"' + ((this.leftTaskLabelTemplateFunction) ? cls.leftLabelTempContainer :\n            cls.leftLabelContainer) + ' ' + '\" tabindex=\"-1\" role=\"term\" style=\"height:' +\n            (this.parent.rowHeight - 2) + 'px;width:' + this.taskNameWidth(this.templateData) + '\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.taskbarContainer = function () {\n        var data = this.templateData;\n        var manualParent = this.parent.editModule && this.parent.editSettings.allowTaskbarEditing &&\n            this.parent.editModule.taskbarEditModule.taskBarEditAction === 'ParentResizing' ?\n            true : false;\n        var template = '<div class=\"' + cls.taskBarMainContainer + ' ' +\n            this.parent.getUnscheduledTaskClass(data.ganttProperties) + ' ' +\n            ((data.ganttProperties.cssClass) ? data.ganttProperties.cssClass : '') + '\" ' +\n            ' tabindex=\"-1\" role=\"term\" style=\"' + ((data.ganttProperties.isMilestone && !manualParent && !(data.hasChildRecords && !data.ganttProperties.isAutoSchedule)) ?\n            ('width:' + this.milestoneHeight + 'px;height:' +\n                this.milestoneHeight + 'px;margin-top:' + this.milestoneMarginTop + 'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + (data.ganttProperties.left -\n                (this.milestoneHeight / 2)) + 'px;cursor:' + (this.parent.editSettings.allowTaskbarEditing ? 'move;' : 'default;')) : ('width:' + data.ganttProperties.width +\n            'px;margin-top:' + this.taskBarMarginTop + 'px;' + (this.parent.enableRtl ? 'right:' : 'left:') + (!data.hasChildRecords || data.ganttProperties.isAutoSchedule ?\n            data.ganttProperties.left : data.ganttProperties.autoLeft) + 'px;height:' +\n            this.taskBarHeight + 'px;cursor:' + (this.parent.editSettings.allowTaskbarEditing ? 'move;' : 'default;'))) + '\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.rightLabelContainer = function () {\n        var template = '<div class=\"' + ((this.rightTaskLabelTemplateFunction) ? cls.rightLabelTempContainer :\n            cls.rightLabelContainer) + '\" ' + ' tabindex=\"-1\" role=\"term\" style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + this.getRightLabelLeft(this.templateData) + 'px; height:'\n            + (this.parent.rowHeight - 2) + 'px;\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.childTaskbarLeftResizer = function () {\n        var lResizerLeft = (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? 5 : -2;\n        var template = '<div class=\"' + cls.taskBarLeftResizer + ' ' + cls.icon + '\"' +\n            'style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + lResizerLeft + 'px;height:' + (this.taskBarHeight) + 'px;z-index:1\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.childTaskbarRightResizer = function () {\n        var rResizerLeft = (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? -17 : -11;\n        var template = '<div class=\"' + cls.taskBarRightResizer + ' ' + cls.icon + '\"' +\n            'style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + (this.templateData.ganttProperties.width + rResizerLeft) + 'px;' +\n            'height:' + (this.taskBarHeight) + 'px;z-index:1\"></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.childTaskbarProgressResizer = function () {\n        var width = this.parent.enableRtl ? (this.templateData.ganttProperties.progressWidth + 8) :\n            (this.templateData.ganttProperties.progressWidth - 6);\n        var template = '<div class=\"' + cls.childProgressResizer + '\"' +\n            'style=\"' + (this.parent.enableRtl ? 'right:' : 'left:') + width + 'px;margin-top:' +\n            (this.taskBarHeight - 4) + 'px;\"><div class=\"' + cls.progressBarHandler + '\"' +\n            '><div class=\"' + cls.progressHandlerElement + '\"></div>' +\n            '<div class=\"' + cls.progressBarHandlerAfter + '\"></div></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.getLeftPointNode = function () {\n        var data = this.templateData;\n        var left = (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? 12 : 0;\n        var mileStoneLeftValue = (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? 6 : 3;\n        var pointerLeft = -(2 + this.connectorPointWidth + left);\n        var mileStoneLeft = -(this.connectorPointWidth + mileStoneLeftValue);\n        var pointerTop = Math.floor(this.milesStoneRadius - (this.connectorPointWidth / 2));\n        var marginTop;\n        if ((!this.templateData.ganttProperties.isAutoSchedule && this.templateData.hasChildRecords) && this.parent.allowParentDependency) {\n            marginTop = '';\n        }\n        else {\n            marginTop = 'margin-top:' + this.connectorPointMargin + 'px';\n        }\n        var canAdd = true;\n        if (data.hasChildRecords && !this.parent.allowParentDependency) {\n            canAdd = false;\n        }\n        var template = '<div class=\"' + cls.leftConnectorPointOuterDiv + '\" style=\"' +\n            ((data.ganttProperties.isMilestone) ? ('margin-top:' + pointerTop + 'px;left:' + mileStoneLeft +\n                'px;') : (marginTop + ';left:' + pointerLeft + 'px;')) + '\">' +\n            '<div class=\"' + (canAdd ? cls.connectorPointLeft : '') + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) +\n            '\" style=\"width: ' + this.connectorPointWidth + 'px;' + (this.parent.enableRtl ? 'margin-right:2px;' : '') +\n            'height: ' + this.connectorPointWidth + 'px;\">' + this.touchLeftConnectorpoint + '</div></div>';\n        return this.createDivElement(template);\n    };\n    ChartRows.prototype.getRightPointNode = function () {\n        var data = this.templateData;\n        var right = (!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? -12 : 0;\n        var pointerRight = -(3 + right);\n        var pointerTop = Math.floor(this.milesStoneRadius - (this.connectorPointWidth / 2));\n        var marginTop;\n        if ((!this.templateData.ganttProperties.isAutoSchedule && this.templateData.hasChildRecords) && this.parent.allowParentDependency) {\n            marginTop = '';\n        }\n        else {\n            marginTop = 'margin-top:' + this.connectorPointMargin + 'px';\n        }\n        var canAdd = true;\n        if (data.hasChildRecords && !this.parent.allowParentDependency) {\n            canAdd = false;\n        }\n        var template = '<div class=\"' + cls.rightConnectorPointOuterDiv + '\" style=\"' +\n            ((data.ganttProperties.isMilestone) ? ('left:' + ((!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? (this.milestoneHeight + 5) : this.milestoneHeight - 2) + 'px;margin-top:' +\n                pointerTop + 'px;') : ('left:' + (data.ganttProperties.width + pointerRight) + 'px;' + marginTop + ';')) + '\">' +\n            '<div class=\"' + (canAdd ? cls.connectorPointRight : '') + ' ' + this.parent.getUnscheduledTaskClass(data.ganttProperties) +\n            '\" style=\"width:' + this.connectorPointWidth + 'px;height:' + this.connectorPointWidth + 'px;\">' +\n            this.touchRightConnectorpoint + '</div></div>';\n        return this.createDivElement(template);\n    };\n    /**\n     * To get task label.\n     *\n     * @param {string} field .\n     * @returns {string} .\n     * @private\n     */\n    ChartRows.prototype.getTaskLabel = function (field) {\n        var length = this.parent.ganttColumns.length;\n        var resultString = null;\n        if (!isNullOrUndefined(field) && field !== '') {\n            if (field === this.parent.taskFields.resourceInfo) {\n                resultString = this.getResourceName(this.templateData);\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    if (field === this.parent.ganttColumns[i].field) {\n                        resultString = this.getFieldValue(this.templateData[field]).toString();\n                        break;\n                    }\n                }\n                if (isNullOrUndefined(resultString)) {\n                    return 'isCustomTemplate';\n                }\n            }\n        }\n        else {\n            resultString = '';\n        }\n        return resultString;\n    };\n    ChartRows.prototype.getExpandDisplayProp = function (data) {\n        data = this.templateData;\n        if (this.parent.getExpandStatus(data)) {\n            return 'table-row';\n        }\n        return 'none';\n    };\n    ChartRows.prototype.getRowClassName = function (data) {\n        data = this.templateData;\n        var rowClass = 'gridrowtaskId';\n        var parentItem = data.parentItem;\n        if (parentItem) {\n            rowClass += parentItem.taskId.toString();\n        }\n        rowClass += 'level';\n        rowClass += data.level.toString();\n        return rowClass;\n    };\n    ChartRows.prototype.getBorderRadius = function (data) {\n        data = this.templateData;\n        var diff = data.ganttProperties.width - data.ganttProperties.progressWidth;\n        if (diff <= 4) {\n            return 4 - diff;\n        }\n        else {\n            return 0;\n        }\n    };\n    ChartRows.prototype.getSplitTaskBorderRadius = function (data) {\n        var diff = data.width - data.progressWidth;\n        if (diff <= 4) {\n            return 4 - diff;\n        }\n        else {\n            return 0;\n        }\n    };\n    ChartRows.prototype.taskNameWidth = function (ganttData) {\n        ganttData = this.templateData;\n        var ganttProp = ganttData.ganttProperties;\n        var width;\n        if (ganttData.ganttProperties.isMilestone) {\n            width = (ganttData.ganttProperties.left - (this.parent.getTaskbarHeight() / 2));\n        }\n        else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n            if (!this.parent.allowUnscheduledTasks) {\n                width = (ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime()) ?\n                    ganttProp.autoLeft : ganttProp.left;\n            }\n            else {\n                width = ganttProp.left < ganttProp.autoLeft ? ganttProp.left : ganttProp.autoLeft;\n            }\n        }\n        else {\n            width = ganttData.ganttProperties.left;\n        }\n        if (width < 0) {\n            width = 0;\n        }\n        return width + 'px';\n    };\n    ChartRows.prototype.getRightLabelLeft = function (ganttData) {\n        ganttData = this.templateData;\n        var ganttProp = ganttData.ganttProperties;\n        var left;\n        var endLeft;\n        var width;\n        if (ganttData.ganttProperties.isMilestone) {\n            return ganttData.ganttProperties.left + (this.parent.getTaskbarHeight() / 2);\n        }\n        else if (ganttData.hasChildRecords && !ganttProp.isAutoSchedule) {\n            if (!this.parent.allowUnscheduledTasks) {\n                left = ganttProp.autoStartDate.getTime() < ganttProp.startDate.getTime() ? ganttProp.autoLeft : ganttProp.left;\n                endLeft = ganttProp.autoEndDate.getTime() < ganttProp.endDate.getTime() ?\n                    this.parent.dataOperation.getTaskLeft(ganttProp.endDate, ganttProp.isMilestone) :\n                    this.parent.dataOperation.getTaskLeft(ganttProp.autoEndDate, ganttProp.isMilestone);\n                width = endLeft - left;\n            }\n            else {\n                left = ganttProp.left < ganttProp.autoLeft ? ganttProp.autoLeft : ganttProp.left;\n                width = ganttProp.autoWidth;\n            }\n            return left + width;\n        }\n        else {\n            return ganttData.ganttProperties.left + ganttData.ganttProperties.width;\n        }\n    };\n    ChartRows.prototype.getExpandClass = function (data) {\n        data = this.templateData;\n        if (data.expanded) {\n            return cls.rowExpand;\n        }\n        else if (!data.expanded && data.hasChildRecords) {\n            return cls.rowCollapse;\n        }\n        return '';\n    };\n    ChartRows.prototype.getFieldValue = function (field) {\n        return isNullOrUndefined(field) ? '' : field;\n    };\n    ChartRows.prototype.getResourceName = function (ganttData) {\n        ganttData = this.templateData;\n        var resource = null;\n        if (!isNullOrUndefined(ganttData.ganttProperties.resourceInfo)) {\n            var length_2 = ganttData.ganttProperties.resourceInfo.length;\n            if (length_2 > 0) {\n                for (var i = 0; i < length_2; i++) {\n                    var resourceName = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.name];\n                    var resourceUnit = ganttData.ganttProperties.resourceInfo[i][this.parent.resourceFields.unit];\n                    if (resourceUnit !== 100) {\n                        resourceName += '[' + resourceUnit + '%' + ']';\n                    }\n                    if (isNullOrUndefined(resource)) {\n                        resource = resourceName;\n                    }\n                    else {\n                        resource += ' , ' + resourceName;\n                    }\n                }\n                return resource;\n            }\n            else {\n                return '';\n            }\n        }\n        return '';\n    };\n    /**\n     * To initialize private variable help to render task bars.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.initChartHelperPrivateVariable = function () {\n        var taskbarHeightValue = this.parent.renderBaseline ? 0.45 : ((!isNullOrUndefined(document.body.className) && document.body.className.includes('e-bigger')) ? 0.7 : 0.62);\n        var taskBarMarginTopValue = this.parent.renderBaseline ? 4 : 2;\n        var milestoneHeightValue = this.parent.renderBaseline ? 1.13 : 0.82;\n        this.parent.rowHeight = isNullOrUndefined(this.parent.rowHeight) ? 36 : this.parent.rowHeight;\n        this.baselineColor = !isNullOrUndefined(this.parent.baselineColor) &&\n            this.parent.baselineColor !== '' ? this.parent.baselineColor : null;\n        this.taskBarHeight = isNullOrUndefined(this.parent.taskbarHeight) || this.parent.taskbarHeight >= this.parent.rowHeight ?\n            Math.floor(this.parent.rowHeight * taskbarHeightValue) : this.parent.taskbarHeight; // 0.62 -- Standard Ratio.\n        if (this.parent.renderBaseline) {\n            var height = void 0;\n            if ((this.taskBarHeight + this.baselineHeight) <= this.parent.rowHeight) {\n                height = this.taskBarHeight;\n            }\n            else {\n                height = this.taskBarHeight - (this.baselineHeight + 1);\n            }\n            this.taskBarHeight = height;\n        }\n        this.milestoneHeight = Math.floor(this.taskBarHeight * milestoneHeightValue); // 0.82 -- Standard Ratio.\n        this.taskBarMarginTop = Math.floor((this.parent.rowHeight - this.taskBarHeight) / taskBarMarginTopValue);\n        this.milestoneMarginTop = Math.floor((this.parent.rowHeight - this.milestoneHeight) / 2);\n        this.milesStoneRadius = Math.floor((this.milestoneHeight) / 2);\n        this.baselineTop = -(Math.floor((this.parent.rowHeight - (this.taskBarHeight + this.taskBarMarginTop))) - 4);\n        this.connectorPointWidth = this.parent.isAdaptive ? Math.round(this.taskBarHeight / 2) : 9;\n        this.connectorPointMargin = Math.floor((this.taskBarHeight / 2) - (this.connectorPointWidth / 1.5));\n    };\n    /**\n     * Function used to refresh Gantt rows.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.refreshGanttRows = function () {\n        this.parent.currentViewData = this.parent.treeGrid.getCurrentViewRecords().slice();\n        this.createTaskbarTemplate();\n        if (this.parent.showOverAllocation) {\n            for (var i = 0; i < this.parent.currentViewData.length; i++) {\n                var data = this.parent.currentViewData[i];\n                if (data.childRecords.length > 0) {\n                    this.parent.setRecordValue('workTimelineRanges', this.parent.dataOperation.mergeRangeCollections(data.ganttProperties.workTimelineRanges, true), data.ganttProperties, true);\n                    this.parent.dataOperation.calculateRangeLeftWidth(data.ganttProperties.workTimelineRanges);\n                }\n            }\n            this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n        }\n        this.parent.ganttChartModule.updateLastRowBottomWidth();\n    };\n    /**\n     * To render taskbars.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.createTaskbarTemplate = function () {\n        var _this = this;\n        var _a;\n        var trs = [].slice.call(this.ganttChartTableBody.querySelectorAll('tr'));\n        this.ganttChartTableBody.innerHTML = '';\n        var collapsedResourceRecord = [];\n        var prevCurrentView = this.parent.treeGridModule.prevCurrentView;\n        this.refreshedTr = [];\n        this.refreshedData = [];\n        if (this.parent.enableImmutableMode && prevCurrentView && prevCurrentView.length > 0 && this.isUpdated) {\n            var oldKeys = {};\n            var oldRowElements = [];\n            var key = this.parent.treeGrid.getPrimaryKeyFieldNames()[0];\n            for (var i = 0; i < prevCurrentView.length; i++) {\n                oldRowElements[i] = trs[i];\n                oldKeys[prevCurrentView[i][key]] = i;\n            }\n            for (var index = 0; index < this.parent.currentViewData.length; index++) {\n                var oldIndex = oldKeys[this.parent.currentViewData[index][key]];\n                var modifiedRecIndex = this.parent.modifiedRecords.indexOf(this.parent.currentViewData[index]);\n                if (isNullOrUndefined(oldIndex) || modifiedRecIndex !== -1 || this.parent.isFromRenderBaseline) {\n                    var tRow = this.getGanttChartRow(index, this.parent.currentViewData[index]);\n                    this.ganttChartTableBody.appendChild(tRow);\n                    this.refreshedTr.push(this.ganttChartTableBody.querySelectorAll('tr')[index]);\n                    this.refreshedData.push(this.parent.currentViewData[index]);\n                }\n                else {\n                    this.ganttChartTableBody.appendChild(oldRowElements[oldIndex]);\n                }\n                this.ganttChartTableBody.querySelectorAll('tr')[index].setAttribute('data-rowindex', index.toString());\n            }\n        }\n        else {\n            var dupChartBody = createElement('tbody', {\n                id: this.parent.element.id + 'GanttTaskTableBody'\n            });\n            for (var i = 0; i < this.parent.currentViewData.length; i++) {\n                var tempTemplateData = this.parent.currentViewData[i];\n                if (!tempTemplateData.expanded && this.parent.enableMultiTaskbar) {\n                    collapsedResourceRecord.push(tempTemplateData);\n                }\n                var tRow = this.getGanttChartRow(i, tempTemplateData);\n                if (tempTemplateData.hasChildRecords && (!tempTemplateData.expanded) && this.parent.enableMultiTaskbar\n                    && !this.parent.allowTaskbarOverlap) {\n                    this.updateDragDropRecords(tempTemplateData, tRow);\n                }\n                dupChartBody.appendChild(tRow);\n                if (this.parent.enableImmutableMode) {\n                    this.refreshedTr.push(dupChartBody.querySelectorAll('tr')[i]);\n                    this.refreshedData.push(this.parent.currentViewData[i]);\n                }\n                // To maintain selection when virtualization is enabled\n                if (this.parent.selectionModule && this.parent.allowSelection) {\n                    this.parent.selectionModule.maintainSelectedRecords(parseInt(tRow.getAttribute('data-rowindex'), 10));\n                }\n            }\n            /* eslint-disable-next-line */\n            (_a = this.ganttChartTableBody).replaceChildren.apply(_a, dupChartBody.childNodes);\n            // To trigger the touchend event while perform touch Pinch In/Out action\n            (this.ganttChartTableBody.childNodes).forEach(function (tr) {\n                if (tr instanceof Element) {\n                    tr.addEventListener('touchmove', _this.handleTouchMove);\n                    tr.addEventListener('touchend', _this.handleTouchEnd);\n                }\n            });\n            this.parent.initialChartRowElements = this.parent.ganttChartModule.getChartRows();\n        }\n        if (this.parent.enableCriticalPath && this.parent.criticalPathModule) {\n            var criticalModule = this.parent.criticalPathModule;\n            if (criticalModule.criticalPathCollection) {\n                this.parent.criticalPathModule.criticalConnectorLine(criticalModule.criticalPathCollection, criticalModule.detailPredecessorCollection, true, criticalModule.predecessorCollectionTaskIds);\n            }\n        }\n        this.parent.renderTemplates();\n        this.triggerQueryTaskbarInfo();\n        this.parent.modifiedRecords = [];\n        if (this.parent.showOverAllocation) {\n            this.updateOverlapped();\n        }\n        if (collapsedResourceRecord.length) {\n            for (var j = 0; j < collapsedResourceRecord.length; j++) {\n                if (collapsedResourceRecord[j].hasChildRecords) {\n                    this.parent.isGanttChartRendered = true;\n                    this.parent.chartRowsModule.refreshRecords([collapsedResourceRecord[j]]);\n                }\n            }\n        }\n        this.parent.isGanttChartRendered = true;\n        this.parent.renderTemplates();\n    };\n    /**\n     * To render taskbars.\n     *\n     * @param {number} i .\n     * @param {IGanttData} tempTemplateData .\n     * @returns {Node} .\n     * @private\n     */\n    ChartRows.prototype.getGanttChartRow = function (i, tempTemplateData) {\n        this.templateData = tempTemplateData;\n        var parentTrNode = this.getTableTrNode(i);\n        var leftLabelNode = this.getLeftLabelNode(i);\n        var taskbarContainerNode = this.taskbarContainer();\n        taskbarContainerNode[0].setAttribute('aria-label', this.generateAriaLabel(this.templateData));\n        taskbarContainerNode[0].setAttribute('rowUniqueId', this.templateData.ganttProperties.rowUniqueID);\n        var connectorLineLeftNode;\n        var connectorLineRightNode;\n        connectorLineLeftNode = this.getLeftPointNode();\n        if ((this.templateData.ganttProperties.isAutoSchedule && this.parent.viewType === 'ProjectView') || !this.templateData.hasChildRecords) {\n            taskbarContainerNode[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n        }\n        if (this.templateData.hasChildRecords) {\n            var parentTaskbarTemplateNode = void 0;\n            if (!this.parent.enableMultiTaskbar || (this.parent.enableMultiTaskbar && this.templateData.expanded)) {\n                parentTaskbarTemplateNode = this.getParentTaskbarNode(i, taskbarContainerNode);\n            }\n            else {\n                taskbarContainerNode = [];\n                for (var j = 0; j < this.templateData.childRecords.length; j++) {\n                    this.templateData = this.templateData.childRecords[j];\n                    var taskbarContainerNode1 = this.taskbarContainer();\n                    taskbarContainerNode1[0].setAttribute('aria-label', this.generateAriaLabel(this.templateData));\n                    taskbarContainerNode1[0].setAttribute('rowUniqueId', this.templateData.ganttProperties.rowUniqueID);\n                    if (!this.parent.allowParentDependency) {\n                        connectorLineLeftNode = this.getLeftPointNode();\n                        taskbarContainerNode1[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n                    }\n                    else {\n                        connectorLineLeftNode = this.getLeftPointNode();\n                        if ((this.templateData.ganttProperties.isAutoSchedule) || !this.templateData.hasChildRecords) {\n                            taskbarContainerNode1[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n                        }\n                    }\n                    this.appendChildTaskbars(tempTemplateData, i, taskbarContainerNode1, connectorLineRightNode, taskbarContainerNode);\n                }\n            }\n            if (!this.templateData.ganttProperties.isAutoSchedule) {\n                var manualTaskbar = this.getManualTaskbar();\n                if (!isNullOrUndefined(manualTaskbar[0])) {\n                    if (this.parent.allowParentDependency) {\n                        manualTaskbar[0].appendChild([].slice.call(connectorLineLeftNode)[0]);\n                        var connectorLineRightNode_1 = this.getRightPointNode();\n                        manualTaskbar[0].appendChild([].slice.call(connectorLineRightNode_1)[0]);\n                    }\n                    /* eslint-disable-next-line */\n                    taskbarContainerNode[0].appendChild([].slice.call(manualTaskbar)[0]);\n                }\n            }\n            if ((this.templateData.ganttProperties.autoDuration !== 0) && !this.templateData.ganttProperties.isMilestone &&\n                parentTaskbarTemplateNode && parentTaskbarTemplateNode.length > 0) {\n                append(parentTaskbarTemplateNode, taskbarContainerNode[0]);\n            }\n            else if ((this.templateData.ganttProperties.duration === 0 && this.templateData.ganttProperties.isMilestone &&\n                this.templateData.ganttProperties.isAutoSchedule)) {\n                var milestoneTemplateNode = this.getMilestoneNode(i, taskbarContainerNode);\n                if (milestoneTemplateNode && milestoneTemplateNode.length > 0) {\n                    append(milestoneTemplateNode, taskbarContainerNode[0]);\n                }\n            }\n            if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate &&\n                this.templateData.ganttProperties.baselineEndDate) {\n                this.taskBaselineTemplateNode = ((this.templateData.ganttProperties.baselineStartDate.getTime() ===\n                    this.templateData.ganttProperties.baselineEndDate.getTime()) || ((!isNullOrUndefined(this.templateData.ganttProperties.baselineStartDate) &&\n                    !isNullOrUndefined(this.templateData.ganttProperties.startDate) &&\n                    (this.templateData.ganttProperties.baselineStartDate.getTime() ===\n                        this.templateData.ganttProperties.startDate.getTime()))\n                    && (!isNullOrUndefined(this.templateData.ganttProperties.baselineEndDate) &&\n                        !isNullOrUndefined(this.templateData.ganttProperties.endDate) &&\n                        (this.templateData.ganttProperties.baselineEndDate.getTime() ===\n                            this.templateData.ganttProperties.endDate.getTime())) &&\n                    this.templateData.ganttProperties.isMilestone))\n                    ? this.getMilestoneBaselineNode() : this.getTaskBaselineNode();\n            }\n            if (!this.parent.enableMultiTaskbar || (this.parent.enableMultiTaskbar && this.templateData.expanded)) {\n                if (this.parent.allowParentDependency && ((this.templateData.ganttProperties.isAutoSchedule && this.parent.viewType === 'ProjectView') || !this.templateData.hasChildRecords)) {\n                    connectorLineRightNode = this.getRightPointNode();\n                    /* eslint-disable-next-line */\n                    taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n                }\n                else if (!this.parent.allowParentDependency) {\n                    connectorLineRightNode = this.getRightPointNode();\n                    /* eslint-disable-next-line */\n                    taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n                }\n            }\n        }\n        else {\n            this.appendChildTaskbars(tempTemplateData, i, taskbarContainerNode, connectorLineRightNode);\n        }\n        var rightLabelNode = this.getRightLabelNode(i);\n        if (this.parent.enableMultiTaskbar && this.templateData.hasChildRecords && !this.templateData.expanded) {\n            var collapseParent = createElement('div', {\n                className: 'e-collapse-parent'\n            });\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild(collapseParent);\n            for (var j = 0; j < taskbarContainerNode.length; j++) {\n                addClass([taskbarContainerNode[j]], 'collpse-parent-border');\n                parentTrNode[0].childNodes[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskbarContainerNode)[j]);\n            }\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n            if (this.templateData.ganttProperties.indicators && this.templateData.ganttProperties.indicators.length > 0) {\n                this.appendIndicators(i, parentTrNode);\n            }\n        }\n        else {\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(leftLabelNode)[0]);\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskbarContainerNode)[0]);\n            if (this.templateData.ganttProperties.indicators && this.templateData.ganttProperties.indicators.length > 0) {\n                this.appendIndicators(i, parentTrNode);\n            }\n            if (rightLabelNode && rightLabelNode.length > 0) {\n                parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(rightLabelNode)[0]);\n            }\n        }\n        if (!isNullOrUndefined(this.taskBaselineTemplateNode)) {\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(this.taskBaselineTemplateNode)[0]);\n        }\n        this.taskBaselineTemplateNode = null;\n        var tRow = parentTrNode[0].childNodes[0];\n        this.setAriaRowIndex(tempTemplateData, tRow);\n        return tRow;\n    };\n    /**\n     * To set data-rowindex for chart rows\n     *\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.setAriaRowIndex = function (tempTemplateData, tRow) {\n        var _this = this;\n        var dataSource = this.parent.treeGrid.getCurrentViewRecords();\n        var visualData = this.parent.virtualScrollModule && this.parent.enableVirtualization ?\n            getValue('virtualScrollModule.visualData', this.parent.treeGrid) : dataSource;\n        var index;\n        if (this.parent.loadChildOnDemand && this.parent.taskFields.hasChildMapping) {\n            /* eslint-disable-next-line */\n            var gridData = this.parent.treeGrid.grid.contentModule['rows'];\n            /* eslint-disable-next-line */\n            var data = gridData.filter(function (x) {\n                if (x['data'][_this.parent.taskFields.id] === tempTemplateData.ganttProperties.taskId) {\n                    return x;\n                }\n            })[0];\n            tRow.setAttribute('data-rowindex', data['index'].toString());\n        }\n        else {\n            index = visualData.indexOf(tempTemplateData);\n            tRow.setAttribute('aria-rowindex', (index + 1).toString());\n            tRow.setAttribute('data-rowindex', index.toString());\n        }\n    };\n    /**\n     * To trigger query taskbar info event.\n     *\n     * @returns {void}\n     * @private\n     */\n    ChartRows.prototype.triggerQueryTaskbarInfo = function () {\n        if (!this.parent.queryTaskbarInfo) {\n            return;\n        }\n        var length = this.parent.enableImmutableMode ?\n            this.refreshedTr.length : this.ganttChartTableBody.querySelectorAll('tr').length;\n        var trElement;\n        var data;\n        for (var index = 0; index < length; index++) {\n            trElement = this.parent.enableImmutableMode ? this.refreshedTr[index] : this.ganttChartTableBody.querySelectorAll('tr')[index];\n            data = this.refreshedData.length > 0 ? this.refreshedData[index] : this.parent.currentViewData[index];\n            var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n            if (segmentLength > 0) {\n                for (var i = 0; i < segmentLength; i++) {\n                    var segmentedTasks = trElement.getElementsByClassName('e-segmented-taskbar');\n                    var segmentElement = segmentedTasks[i];\n                    this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n                }\n            }\n            else if (trElement) {\n                this.triggerQueryTaskbarInfoByIndex(trElement, data);\n            }\n        }\n    };\n    ChartRows.prototype.appendIndicators = function (i, parentTrNode) {\n        var taskIndicatorNode;\n        var taskIndicatorTextFunction;\n        var taskIndicatorTextNode;\n        var indicators = this.templateData.ganttProperties.indicators;\n        for (var indicatorIndex = 0; indicatorIndex < indicators.length; indicatorIndex++) {\n            taskIndicatorNode = this.getIndicatorNode(indicators[indicatorIndex]);\n            taskIndicatorNode[0].setAttribute('aria-label', indicators[indicatorIndex].name);\n            if (indicators[indicatorIndex].name.indexOf('$') > -1 || indicators[indicatorIndex].name.indexOf('#') > -1) {\n                taskIndicatorTextFunction = this.templateCompiler(indicators[indicatorIndex].name);\n                taskIndicatorTextNode = taskIndicatorTextFunction(extend({ index: i }, this.templateData), this.parent, 'indicatorLabelText');\n            }\n            else {\n                var text = createElement('Text');\n                text.innerHTML = indicators[indicatorIndex].name;\n                if (this.parent.enableHtmlSanitizer && typeof (indicators[indicatorIndex].name) === 'string') {\n                    indicators[indicatorIndex].name = SanitizeHtmlHelper.sanitize(indicators[indicatorIndex].name);\n                }\n                taskIndicatorTextNode = text.childNodes;\n            }\n            taskIndicatorNode[0].appendChild([].slice.call(taskIndicatorTextNode)[0]);\n            taskIndicatorNode[0].title =\n                !isNullOrUndefined(indicators[indicatorIndex].tooltip) ? indicators[indicatorIndex].tooltip : '';\n            parentTrNode[0].childNodes[0].childNodes[0].appendChild([].slice.call(taskIndicatorNode)[0]);\n        }\n    };\n    ChartRows.prototype.appendChildTaskbars = function (tempTemplateData, i, taskbarContainerNode, connectorLineRightNode, taskbarCollection) {\n        if (this.templateData.ganttProperties.isMilestone) {\n            var milestoneTemplateNode = this.getMilestoneNode(i, taskbarContainerNode);\n            if (milestoneTemplateNode && milestoneTemplateNode.length > 0) {\n                append(milestoneTemplateNode, taskbarContainerNode[0]);\n            }\n            if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate &&\n                this.templateData.ganttProperties.baselineEndDate) {\n                this.taskBaselineTemplateNode = ((this.templateData.ganttProperties.baselineStartDate.getTime() ===\n                    this.templateData.ganttProperties.baselineEndDate.getTime()) || ((!isNullOrUndefined(this.templateData.ganttProperties.baselineStartDate) &&\n                    !isNullOrUndefined(this.templateData.ganttProperties.startDate) &&\n                    (this.templateData.ganttProperties.baselineStartDate.getTime() ===\n                        this.templateData.ganttProperties.startDate.getTime()))\n                    && (!isNullOrUndefined(this.templateData.ganttProperties.baselineEndDate) &&\n                        !isNullOrUndefined(this.templateData.ganttProperties.endDate) &&\n                        (this.templateData.ganttProperties.baselineEndDate.getTime() ===\n                            this.templateData.ganttProperties.endDate.getTime())) &&\n                    this.templateData.ganttProperties.isMilestone))\n                    ? this.getMilestoneBaselineNode() : this.getTaskBaselineNode();\n            }\n            if (taskbarCollection) {\n                /* eslint-disable-next-line */\n                taskbarCollection.push(taskbarContainerNode[0]);\n                this.templateData = tempTemplateData;\n            }\n        }\n        else {\n            var scheduledTask = isScheduledTask(this.templateData.ganttProperties); // eslint-disable-line\n            var childTaskbarProgressResizeNode = null;\n            var childTaskbarRightResizeNode = null;\n            var childTaskbarLeftResizeNode = null;\n            if (!isNullOrUndefined(scheduledTask)) {\n                if (scheduledTask || this.templateData.ganttProperties.duration) {\n                    if (scheduledTask && (isNullOrUndefined(this.templateData.ganttProperties.segments)\n                        || this.templateData.ganttProperties.segments.length <= 0)) {\n                        childTaskbarProgressResizeNode = this.childTaskbarProgressResizer();\n                        childTaskbarLeftResizeNode = this.childTaskbarLeftResizer();\n                        childTaskbarRightResizeNode = this.childTaskbarRightResizer();\n                    }\n                }\n                var childTaskbarTemplateNode = this.getChildTaskbarNode(i, taskbarContainerNode);\n                if (childTaskbarLeftResizeNode) {\n                    taskbarContainerNode[0].appendChild([].slice.call(childTaskbarLeftResizeNode)[0]);\n                }\n                if (childTaskbarTemplateNode && childTaskbarTemplateNode.length > 0) {\n                    if (this.templateData.ganttProperties.segments && this.templateData.ganttProperties.segments.length > 0) {\n                        var length_3 = this.templateData.ganttProperties.segments.length;\n                        var connector = ('<div class=\"e-gantt-split-container-line\"></div>');\n                        var segmentConnector = null;\n                        segmentConnector = this.createDivElement(connector);\n                        taskbarContainerNode[0].appendChild([].slice.call(segmentConnector)[0]);\n                        for (var i_1 = 0; i_1 < length_3; i_1++) {\n                            append(childTaskbarTemplateNode, taskbarContainerNode[0]);\n                        }\n                    }\n                    else {\n                        append(childTaskbarTemplateNode, taskbarContainerNode[0]);\n                    }\n                }\n                if (childTaskbarProgressResizeNode) {\n                    taskbarContainerNode[0].appendChild([].slice.call(childTaskbarProgressResizeNode)[0]);\n                }\n                if (childTaskbarRightResizeNode) {\n                    taskbarContainerNode[0].appendChild([].slice.call(childTaskbarRightResizeNode)[0]);\n                }\n            }\n            if (this.parent.renderBaseline && this.templateData.ganttProperties.baselineStartDate &&\n                this.templateData.ganttProperties.baselineEndDate) {\n                this.taskBaselineTemplateNode = ((this.templateData.ganttProperties.baselineStartDate.getTime() ===\n                    this.templateData.ganttProperties.baselineEndDate.getTime()) || ((!isNullOrUndefined(this.templateData.ganttProperties.baselineStartDate) &&\n                    !isNullOrUndefined(this.templateData.ganttProperties.startDate) &&\n                    (this.templateData.ganttProperties.baselineStartDate.getTime() ===\n                        this.templateData.ganttProperties.startDate.getTime()))\n                    && (!isNullOrUndefined(this.templateData.ganttProperties.baselineEndDate) &&\n                        !isNullOrUndefined(this.templateData.ganttProperties.endDate) &&\n                        (this.templateData.ganttProperties.baselineEndDate.getTime() ===\n                            this.templateData.ganttProperties.endDate.getTime())) &&\n                    this.templateData.ganttProperties.isMilestone))\n                    ? this.getMilestoneBaselineNode() : this.getTaskBaselineNode();\n            }\n        }\n        if (this.parent.allowParentDependency && ((this.templateData.ganttProperties.isAutoSchedule && this.parent.viewType === 'ProjectView') || !this.templateData.hasChildRecords)) {\n            connectorLineRightNode = this.getRightPointNode();\n            /* eslint-disable-next-line */\n            taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n        }\n        else if (!this.parent.allowParentDependency) {\n            connectorLineRightNode = this.getRightPointNode();\n            /* eslint-disable-next-line */\n            taskbarContainerNode[0].appendChild([].slice.call(connectorLineRightNode)[0]);\n        }\n        if (taskbarCollection) {\n            /* eslint-disable-next-line */\n            taskbarCollection.push(taskbarContainerNode[0]);\n            this.templateData = tempTemplateData;\n        }\n    };\n    ChartRows.prototype.customizeTaskbars = function (data, trElement, taskbarElement) {\n        var _this = this;\n        var rowElement;\n        var segmentRowElement;\n        if (data.ganttProperties.segments && data.ganttProperties.segments.length > 0 && trElement && trElement.parentElement\n            && trElement.parentElement.parentElement && trElement.parentElement.parentElement.parentElement) {\n            segmentRowElement = trElement.parentElement.parentElement.parentElement;\n        }\n        var triggerTaskbarElement;\n        var args = {\n            data: data,\n            rowElement: trElement,\n            taskbarElement: taskbarElement,\n            taskbarType: data.hasChildRecords ? 'ParentTask' : data.ganttProperties.isMilestone ? 'Milestone' : 'ChildTask'\n        };\n        var classCollections = this.getClassName(args);\n        if (args.taskbarType === 'Milestone') {\n            args.milestoneColor = taskbarElement.querySelector(classCollections[0]) ?\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor : null;\n            args.baselineColor = trElement.querySelector(classCollections[1]) ?\n                getComputedStyle(trElement.querySelector(classCollections[1])).backgroundColor :\n                (trElement.querySelector('.' + cls.baselineBar) ? getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor : null);\n        }\n        else if (taskbarElement) {\n            var childTask = taskbarElement.querySelector(classCollections[0]);\n            var progressTask = taskbarElement.querySelector(classCollections[1]);\n            args.taskbarBgColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ?\n                getComputedStyle(taskbarElement).backgroundColor :\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor;\n            args.taskbarBorderColor = isNullOrUndefined(childTask) ? null : taskbarElement.classList.contains(cls.traceChildTaskBar) ?\n                getComputedStyle(taskbarElement).backgroundColor :\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).outlineColor;\n            args.progressBarBgColor = isNullOrUndefined(progressTask) ? null :\n                taskbarElement.classList.contains(cls.traceChildProgressBar) ?\n                    getComputedStyle(taskbarElement).backgroundColor :\n                    getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor;\n            // args.progressBarBorderColor = taskbarElement.querySelector(progressBarClass) ?\n            //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor : null;\n            if (segmentRowElement) {\n                args.baselineColor = segmentRowElement.querySelector('.' + cls.baselineBar) ?\n                    getComputedStyle(segmentRowElement.querySelector('.' + cls.baselineBar)).backgroundColor : null;\n            }\n            else {\n                args.baselineColor = trElement.querySelector('.' + cls.baselineBar) ?\n                    getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor : null;\n            }\n            args.taskLabelColor = taskbarElement.querySelector('.' + cls.taskLabel) ?\n                getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color : null;\n        }\n        if (segmentRowElement) {\n            args.rightLabelColor = segmentRowElement.querySelector('.' + cls.rightLabelContainer) &&\n                (segmentRowElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label) ?\n                getComputedStyle((segmentRowElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label)).color : null;\n            args.leftLabelColor = segmentRowElement.querySelector('.' + cls.leftLabelContainer) &&\n                (segmentRowElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label) ?\n                getComputedStyle((segmentRowElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label)).color : null;\n        }\n        else {\n            args.rightLabelColor = trElement.querySelector('.' + cls.rightLabelContainer) &&\n                (trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label) ?\n                getComputedStyle((trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label)).color : null;\n            args.leftLabelColor = trElement.querySelector('.' + cls.leftLabelContainer) &&\n                (trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label) ?\n                getComputedStyle((trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label)).color : null;\n        }\n        this.parent.trigger('queryTaskbarInfo', args, function (taskbarArgs) {\n            _this.updateQueryTaskbarInfoArgs(taskbarArgs, rowElement, triggerTaskbarElement);\n        });\n    };\n    /**\n     *\n     * @param {Element} trElement .\n     * @param {IGanttData} data .\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.triggerQueryTaskbarInfoByIndex = function (trElement, data) {\n        // eslint-disable-next-line\n        if (isNullOrUndefined(trElement)) {\n            return;\n        }\n        var taskbarElement;\n        var currentData = data;\n        if (!(!isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length > 0)) {\n            if (this.parent.enableMultiTaskbar) {\n                var taskbarElements = trElement.querySelectorAll('.' + cls.taskBarMainContainer);\n                for (var i = 0; i < taskbarElements.length; i++) {\n                    taskbarElement = taskbarElements[i];\n                    currentData = (!data.expanded && data.hasChildRecords) ? data.childRecords[i] : currentData;\n                    var id = this.parent.viewType === 'ResourceView' ?\n                        taskbarElement.getAttribute('rowUniqueId') : currentData.ganttProperties.taskId.toString();\n                    if (currentData.ganttProperties.segments && currentData.ganttProperties.segments.length > 0 &&\n                        currentData.parentItem && !data.expanded) {\n                        id = this.parent.viewType === 'ResourceView' ?\n                            data.ganttProperties.rowUniqueID : data.ganttProperties.taskId.toString();\n                    }\n                    trElement = this.parent.getRowByID(id);\n                    trElement = trElement ? trElement : (taskbarElement.querySelector('.e-gantt-child-taskbar'));\n                    if (isNullOrUndefined(trElement) && currentData.ganttProperties.isMilestone) {\n                        trElement = taskbarElement;\n                    }\n                    if (trElement) {\n                        var segmentElements = trElement.querySelectorAll('.e-segmented-taskbar');\n                        if (segmentElements && segmentElements.length > 0) {\n                            /* eslint-disable-next-line */\n                            var taskContainer = trElement.querySelector(\".e-taskbar-main-container[rowuniqueid=\\\"\" + currentData.ganttProperties.rowUniqueID + \"\\\"]\") ||\n                                trElement;\n                            var segmentedTasks = taskContainer.querySelectorAll('.e-segmented-taskbar');\n                            for (var i_2 = 0; i_2 < segmentedTasks.length; i_2++) {\n                                taskbarElement = segmentedTasks[i_2];\n                                this.customizeTaskbars(currentData, segmentedTasks[i_2], taskbarElement);\n                            }\n                        }\n                        else {\n                            this.customizeTaskbars(currentData, trElement, taskbarElement);\n                        }\n                    }\n                }\n            }\n            else {\n                var taskbarElement_1 = trElement.querySelector('.' + cls.taskBarMainContainer);\n                if (trElement) {\n                    this.customizeTaskbars(currentData, trElement, taskbarElement_1);\n                }\n            }\n        }\n        else {\n            taskbarElement = trElement;\n            if (trElement) {\n                this.customizeTaskbars(data, trElement, taskbarElement);\n            }\n        }\n    };\n    /**\n     * To update query taskbar info args.\n     *\n     * @param {IQueryTaskbarInfoEventArgs} args .\n     * @param {Element} rowElement .\n     * @param {Element} taskBarElement .\n     * @returns {void}\n     * @private\n     */\n    /* eslint-disable-next-line */\n    ChartRows.prototype.updateQueryTaskbarInfoArgs = function (args, rowElement, taskBarElement) {\n        var trElement = args.rowElement;\n        var taskbarElement = this.parent.enableVirtualization ? args.rowElement : args.taskbarElement;\n        var classCollections = this.getClassName(args);\n        var segmentRowElement;\n        if (args.data.ganttProperties.segments && args.data.ganttProperties.segments.length > 0) {\n            segmentRowElement = trElement.parentElement.parentElement.parentElement;\n        }\n        if (args.taskbarType === 'Milestone') {\n            if (taskbarElement.querySelector(classCollections[0]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor !== args.milestoneColor) {\n                taskbarElement.querySelector(classCollections[0]).style.backgroundColor = args.milestoneColor;\n            }\n            if (trElement.querySelector(classCollections[1]) &&\n                getComputedStyle(trElement.querySelector(classCollections[1])).backgroundColor !== args.baselineColor) {\n                trElement.querySelector(classCollections[1]).style.backgroundColor = args.baselineColor;\n            }\n            if (trElement.querySelector('.' + cls.baselineBar) &&\n                getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).borderTopColor !== args.baselineColor) {\n                trElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n            }\n        }\n        else if (taskbarElement) {\n            if (taskbarElement.querySelector(classCollections[0]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).backgroundColor !== args.taskbarBgColor) {\n                taskbarElement.querySelector(classCollections[0]).style.backgroundColor = args.taskbarBgColor;\n            }\n            if (taskbarElement.querySelector(classCollections[0]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[0])).outlineColor !== args.taskbarBorderColor) {\n                taskbarElement.querySelector(classCollections[0]).style.outlineColor = args.taskbarBorderColor;\n            }\n            if (taskbarElement.querySelector(classCollections[1]) &&\n                getComputedStyle(taskbarElement.querySelector(classCollections[1])).backgroundColor !== args.progressBarBgColor) {\n                taskbarElement.querySelector(classCollections[1]).style.backgroundColor = args.progressBarBgColor;\n            }\n            if (taskbarElement.classList.contains(cls.traceChildTaskBar) &&\n                getComputedStyle(taskbarElement).backgroundColor !== args.taskbarBgColor) {\n                taskbarElement.style.backgroundColor = args.taskbarBgColor;\n            }\n            if (taskbarElement.classList.contains(cls.traceChildTaskBar) &&\n                getComputedStyle(taskbarElement).outlineColor !== args.taskbarBorderColor) {\n                taskbarElement.style.outlineColor = args.taskbarBorderColor;\n            }\n            if (taskbarElement.classList.contains(cls.traceChildProgressBar) &&\n                getComputedStyle(taskbarElement).backgroundColor !== args.progressBarBgColor) {\n                taskbarElement.style.backgroundColor = args.progressBarBgColor;\n            }\n            // if (taskbarElement.querySelector(progressBarClass) &&\n            //     getComputedStyle(taskbarElement.querySelector(progressBarClass)).borderColor !== args.progressBarBorderColor) {\n            //     (taskbarElement.querySelector(progressBarClass) as HTMLElement).style.borderColor = args.progressBarBorderColor;\n            // }\n            if (taskbarElement.querySelector('.' + cls.taskLabel) &&\n                getComputedStyle(taskbarElement.querySelector('.' + cls.taskLabel)).color !== args.taskLabelColor) {\n                taskbarElement.querySelector('.' + cls.taskLabel).style.color = args.taskLabelColor;\n            }\n            if (segmentRowElement) {\n                if (segmentRowElement.querySelector('.' + cls.baselineBar) &&\n                    getComputedStyle(segmentRowElement.querySelector('.' + cls.baselineBar)).backgroundColor !== args.baselineColor) {\n                    segmentRowElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n                }\n            }\n            else {\n                if (trElement.querySelector('.' + cls.baselineBar) &&\n                    getComputedStyle(trElement.querySelector('.' + cls.baselineBar)).backgroundColor !== args.baselineColor) {\n                    trElement.querySelector('.' + cls.baselineBar).style.backgroundColor = args.baselineColor;\n                }\n            }\n        }\n        if (segmentRowElement) {\n            if (segmentRowElement.querySelector('.' + cls.leftLabelContainer) &&\n                (segmentRowElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label) &&\n                getComputedStyle((segmentRowElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label)).color !== args.leftLabelColor) {\n                (segmentRowElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label).style.color = args.leftLabelColor;\n            }\n            if (segmentRowElement.querySelector('.' + cls.rightLabelContainer) &&\n                (segmentRowElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label) &&\n                getComputedStyle((segmentRowElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label)).color !== args.rightLabelColor) {\n                (segmentRowElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label).style.color = args.rightLabelColor;\n            }\n        }\n        else {\n            if (trElement.querySelector('.' + cls.leftLabelContainer) &&\n                (trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label) &&\n                getComputedStyle((trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label)).color !== args.leftLabelColor) {\n                (trElement.querySelector('.' + cls.leftLabelContainer)).querySelector('.' + cls.label).style.color = args.leftLabelColor;\n            }\n            if (trElement.querySelector('.' + cls.rightLabelContainer) &&\n                (trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label) &&\n                getComputedStyle((trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label)).color !== args.rightLabelColor) {\n                (trElement.querySelector('.' + cls.rightLabelContainer)).querySelector('.' + cls.label).style.color = args.rightLabelColor;\n            }\n        }\n    };\n    ChartRows.prototype.getClassName = function (args) {\n        var classCollection = [];\n        classCollection.push('.' + (args.taskbarType === 'ParentTask' ?\n            cls.traceParentTaskBar : args.taskbarType === 'ChildTask' ? cls.traceChildTaskBar : cls.traceMilestone));\n        classCollection.push('.' + (args.taskbarType === 'ParentTask' ?\n            cls.traceParentProgressBar : args.taskbarType === 'ChildTask' ? cls.traceChildProgressBar : cls.baselineMilestoneContainer));\n        return classCollection;\n    };\n    /**\n     * To compile template string.\n     *\n     * @param {string} template .\n     * @returns {Function} .\n     * @private\n     */\n    ChartRows.prototype.templateCompiler = function (template) {\n        if (!isNullOrUndefined(template) && template !== '') {\n            try {\n                if (typeof template !== 'function' && document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim(), this.parent);\n                }\n                else {\n                    return compile(template, this.parent);\n                }\n            }\n            catch (e) {\n                return compile(template, this.parent);\n            }\n        }\n        return null;\n    };\n    // to update the eOverlapped property\n    ChartRows.prototype.updateOverlapped = function () {\n        for (var k = 0; k < this.parent.treeGrid.parentData.length; k++) {\n            var childRecords = this.parent.treeGrid.parentData[k].childRecords;\n            for (var i = 0; i < childRecords.length; i++) {\n                if (childRecords[i + 1]) {\n                    childRecords[i].ganttProperties.eOverlapped = undefined;\n                }\n                for (var j = i + 1; j < childRecords.length; j++) {\n                    childRecords[j].ganttProperties.eOverlapped = undefined;\n                    if (childRecords[i].ganttProperties.startDate.getTime() <\n                        childRecords[j].ganttProperties.endDate.getTime() &&\n                        childRecords[i].ganttProperties.endDate.getTime() >\n                            childRecords[j].ganttProperties.startDate.getTime()) {\n                        childRecords[j].ganttProperties.eOverlapped = true;\n                        childRecords[i].ganttProperties.eOverlapped = true;\n                    }\n                    else {\n                        if (isNullOrUndefined(childRecords[j].ganttProperties.eOverlapped)) {\n                            childRecords[j].ganttProperties.eOverlapped = false;\n                        }\n                        if (isNullOrUndefined(childRecords[i].ganttProperties.eOverlapped)) {\n                            childRecords[i].ganttProperties.eOverlapped = false;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // To update the row height when allow overallocation set to false\n    ChartRows.prototype.updateDragDropRecords = function (data, tr) {\n        var childRecords = data.childRecords;\n        var rowIndex = this.parent.currentViewData.indexOf(data);\n        var treeGridContentHeight = this.parent.enableRtl ?\n            this.parent['element'].getElementsByClassName('e-content')[2].children[0]['offsetHeight'] :\n            this.parent['element'].getElementsByClassName('e-content')[0].children[0]['offsetHeight'];\n        if (!tr) {\n            tr = this.ganttChartTableBody.childNodes[rowIndex];\n        }\n        if (this.parent.ganttChartModule.isExpandAll || this.parent.ganttChartModule.isCollapseAll) {\n            tr['style'].height = this.parent.treeGrid.getRowByIndex(rowIndex)['style'].height = this.parent.rowHeight + 'px';\n        }\n        else {\n            tr['style'].height = this.parent.treeGrid.getRows()[rowIndex]['style'].height = this.parent.rowHeight + 'px';\n        }\n        this.parent.contentHeight = treeGridContentHeight;\n        var rowIDs = [];\n        var rowCounts = 0;\n        if (data) {\n            for (var i = 0; i < childRecords.length; i++) {\n                for (var j = i + 1; j < childRecords.length; j++) {\n                    var taskbarContainer = tr.getElementsByClassName('e-taskbar-main-container');\n                    for (var k = 0; k < taskbarContainer.length; k++) {\n                        var rowuniqueid = this.parent.viewType === 'ResourceView' ? childRecords[j]['rowUniqueID'] : childRecords[j].ganttProperties.rowUniqueID;\n                        if (childRecords[i].ganttProperties.startDate.getTime() <\n                            childRecords[j].ganttProperties.endDate.getTime() &&\n                            childRecords[i].ganttProperties.endDate.getTime() >\n                                childRecords[j].ganttProperties.startDate.getTime()) {\n                            if (taskbarContainer[k].getAttribute('rowuniqueid') === rowuniqueid &&\n                                rowIDs.indexOf(rowuniqueid) === -1) {\n                                rowIDs.push(rowuniqueid);\n                                rowCounts++;\n                                tr.children[0]['style'].verticalAlign = 'baseline';\n                                tr.getElementsByClassName('e-taskbar-main-container')[k]['style'].marginTop =\n                                    (rowCounts * this.parent.rowHeight) + this.taskBarMarginTop + 'px';\n                                if (this.parent.ganttChartModule.isExpandAll || this.parent.ganttChartModule.isCollapseAll) {\n                                    tr['style'].height = this.parent.treeGrid.getRowByIndex(rowIndex)['style'].height = parseInt(tr['style'].height, 10) + this.parent.rowHeight + 'px';\n                                }\n                                else {\n                                    tr['style'].height = this.parent.treeGrid.getRows()[rowIndex]['style'].height = parseInt(tr['style'].height, 10) + this.parent.rowHeight + 'px';\n                                }\n                            }\n                        }\n                        else {\n                            if (taskbarContainer[k].getAttribute('rowuniqueid') === rowuniqueid &&\n                                rowIDs.indexOf(rowuniqueid) === -1 && this.parent.rowDragAndDropModule &&\n                                this.parent.rowDragAndDropModule['draggedRecord'] && taskbarContainer[k].getAttribute('rowuniqueid') ===\n                                this.parent.rowDragAndDropModule['draggedRecord']['rowUniqueID'] && this.parent.rowDragAndDropModule['draggedRecord']['rowUniqueID'] ===\n                                childRecords[j]['rowUniqueID']) {\n                                tr.getElementsByClassName('e-taskbar-main-container')[k]['style'].marginTop =\n                                    this.parent.editModule.taskbarEditModule.draggedRecordMarginTop;\n                            }\n                        }\n                    }\n                }\n            }\n            this.parent.contentHeight = treeGridContentHeight;\n            document.getElementsByClassName('e-chart-rows-container')[0]['style'].height = this.parent.contentHeight + 'px';\n        }\n    };\n    /**\n     * To refresh edited TR\n     *\n     * @param {number} index .\n     * @param {boolean} isValidateRange .\n     * @param {boolean} isUndoRedo .\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.refreshRow = function (index, isValidateRange, isUndoRedo) {\n        var _this = this;\n        var tr = this.ganttChartTableBody.childNodes[index];\n        var selectedItem;\n        if (isUndoRedo) {\n            selectedItem = this.parent.previousFlatData[index];\n        }\n        else {\n            selectedItem = this.parent.currentViewData[index];\n        }\n        if (index !== -1 && selectedItem) {\n            var data = selectedItem;\n            if (!this.parent.allowTaskbarOverlap && data.expanded) {\n                if (this.parent.ganttChartModule.isExpandAll || this.parent.ganttChartModule.isCollapseAll) {\n                    tr['style'].height = this.parent.treeGrid.getRowByIndex(index)['style'].height = this.parent.rowHeight + 'px';\n                }\n                else {\n                    tr['style'].height = this.parent.treeGrid.getRows()[index]['style'].height = this.parent.rowHeight + 'px';\n                }\n            }\n            if (data.hasChildRecords && !data.expanded && this.parent.enableMultiTaskbar) {\n                tr.replaceChild(this.getGanttChartRow(index, data).childNodes[0], tr.childNodes[0]);\n                if (this.parent.renderBaseline) {\n                    data.childRecords.forEach(function (childRecord) {\n                        if (!isNullOrUndefined(childRecord.ganttProperties.baselineStartDate &&\n                            childRecord.ganttProperties.baselineEndDate)) {\n                            tr.childNodes[0].appendChild((_this.updateTaskBaselineNode(childRecord))[0]);\n                        }\n                    });\n                }\n            }\n            else {\n                if (this.parent.allowTaskbarDragAndDrop && !data.expanded) {\n                    tr.replaceWith(this.getGanttChartRow(index, data));\n                }\n                else {\n                    tr.replaceChild(this.getGanttChartRow(index, data).childNodes[0], tr.childNodes[0]);\n                }\n            }\n            this.parent.renderTemplates();\n            if (data.hasChildRecords && this.parent.showOverAllocation && this.parent.allowTaskbarOverlap) {\n                if (isValidateRange) {\n                    this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n                }\n                else {\n                    this.parent.dataOperation.updateOverlappingValues(data);\n                    this.parent.ganttChartModule.renderRangeContainer([data]);\n                }\n            }\n            var segmentLength = !isNullOrUndefined(data.ganttProperties.segments) && data.ganttProperties.segments.length;\n            if (segmentLength > 0) {\n                for (var i = 0; i < segmentLength; i++) {\n                    var segmentedTasks = tr.getElementsByClassName('e-segmented-taskbar');\n                    var segmentElement = segmentedTasks[i];\n                    this.triggerQueryTaskbarInfoByIndex(segmentElement, data);\n                }\n            }\n            else {\n                this.triggerQueryTaskbarInfoByIndex(tr, data);\n            }\n            var dataId = this.parent.viewType === 'ProjectView' ? data.ganttProperties.taskId : data.ganttProperties.rowUniqueID;\n            if (!this.parent.ganttChartModule.isExpandAll && !this.parent.ganttChartModule.isCollapseAll) {\n                this.parent.treeGrid.grid.setRowData(dataId, data);\n            }\n            if (data.hasChildRecords && !data.expanded && this.parent.enableMultiTaskbar && !this.parent.allowTaskbarOverlap) {\n                this.updateDragDropRecords(selectedItem, tr);\n            }\n            if (data.hasChildRecords && this.parent.showOverAllocation && !this.parent.allowTaskbarOverlap) {\n                this.parent.dataOperation.updateOverlappingValues(data);\n                this.parent.ganttChartModule.renderRangeContainer(this.parent.currentViewData);\n            }\n            var nextEditableElement = this.parent.ganttChartModule.tempNextElement;\n            if (this.parent.ganttChartModule.isEditableElement && nextEditableElement) {\n                this.parent.treeGrid.grid.focusModule.focus();\n                addClass([this.parent.treeGrid.getRows()[tr.getAttribute('data-rowindex')].children[this.parent.ganttChartModule.childrenIndex]], 'e-focused');\n                this.parent.ganttChartModule.tempNextElement = null;\n            }\n            var row = this.parent.treeGrid.grid.getRowObjectFromUID(this.parent.treeGrid.grid.getDataRows()[index].getAttribute('data-uid'));\n            if (!isNullOrUndefined(row)) {\n                row.data = data;\n            }\n        }\n    };\n    ChartRows.prototype.updateResourceTaskbarElement = function (tRow, parentTr) {\n        var cloneElement = tRow.querySelector('.e-taskbar-main-container');\n        if (this.parent.viewType === 'ProjectView' && tRow.querySelector('.e-collapse-parent')) {\n            cloneElement = tRow.querySelector('.e-collapse-parent');\n        }\n        if (tRow.querySelector('.e-collapse-parent') === null) {\n            addClass([cloneElement], 'collpse-parent-border');\n        }\n        var id = tRow.querySelector('.' + cls.taskBarMainContainer).getAttribute('rowUniqueId');\n        var ganttData = this.parent.getRecordByID(id);\n        if (!(isNullOrUndefined(ganttData)) && ganttData.ganttProperties.segments && ganttData.ganttProperties.segments.length > 0) {\n            var segmentedTasks = cloneElement.getElementsByClassName('e-segmented-taskbar');\n            for (var i = 0; i < segmentedTasks.length; i++) {\n                this.triggerQueryTaskbarInfoByIndex(segmentedTasks[i], ganttData);\n            }\n        }\n        else if (this.parent.queryTaskbarInfo) {\n            var mainTaskbar = (cloneElement.querySelector('.e-gantt-child-taskbar'));\n            if (!isNullOrUndefined(mainTaskbar)) {\n                this.triggerQueryTaskbarInfoByIndex(mainTaskbar, ganttData);\n            }\n        }\n        var zIndex = '';\n        if (ganttData && !isNullOrUndefined(ganttData.ganttProperties.eOverlapIndex)) {\n            zIndex = (ganttData.ganttProperties.eOverlapIndex).toString();\n        }\n        var cloneChildElement = cloneElement.cloneNode(true);\n        cloneChildElement.style.zIndex = zIndex;\n        parentTr[0].childNodes[0].childNodes[0].childNodes[0].appendChild(cloneChildElement);\n    };\n    /**\n     * To refresh all edited records\n     *\n     * @param {IGanttData} items .\n     * @param {boolean} isValidateRange .\n     * @param {boolean} isUndoRedo .\n     * @returns {void} .\n     * @private\n     */\n    ChartRows.prototype.refreshRecords = function (items, isValidateRange, isUndoRedo) {\n        if (this.parent.isGanttChartRendered) {\n            this.parent.renderTemplates();\n            if (this.parent.enableMultiTaskbar) {\n                var sortedRecords = [];\n                sortedRecords = new DataManager(items).executeLocal(new Query()\n                    .sortBy('expanded', 'Descending'));\n                items = sortedRecords;\n            }\n            for (var i = 0; i < items.length; i++) {\n                var index = void 0;\n                if (isUndoRedo) {\n                    index = this.parent.ids.indexOf(items[i].ganttProperties.taskId.toString());\n                }\n                else {\n                    index = this.parent.currentViewData.indexOf(items[i]);\n                }\n                if (!this.parent.enableMultiTaskbar ||\n                    (this.parent.enableMultiTaskbar && (items[i].expanded || !this.parent.isLoad))) {\n                    this.refreshRow(index, isValidateRange, isUndoRedo);\n                }\n            }\n            this.parent.ganttChartModule.updateLastRowBottomWidth();\n        }\n    };\n    ChartRows.prototype.removeEventListener = function () {\n        var _this = this;\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        (this.ganttChartTableBody.childNodes).forEach(function (tr) {\n            if (tr instanceof Element) {\n                tr.removeEventListener('touchmove', _this.handleTouchMove);\n                tr.removeEventListener('touchend', _this.handleTouchEnd);\n            }\n        });\n        this.parent.off('renderPanels', this.createChartTable);\n        this.parent.off('dataReady', this.initiateTemplates);\n        this.parent.off('destroy', this.destroy);\n    };\n    ChartRows.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    ChartRows.prototype.generateAriaLabel = function (data) {\n        data = this.templateData;\n        var defaultValue = '';\n        var nameConstant = this.parent.localeObj.getConstant('name');\n        var startDateConstant = this.parent.localeObj.getConstant('startDate');\n        var endDateConstant = this.parent.localeObj.getConstant('endDate');\n        var durationConstant = this.parent.localeObj.getConstant('duration');\n        var taskNameVal = data.ganttProperties.taskName;\n        var startDateVal = data.ganttProperties.startDate;\n        var endDateVal = data.ganttProperties.endDate;\n        var durationVal = data.ganttProperties.duration;\n        if (data.ganttProperties.isMilestone) {\n            defaultValue = nameConstant + ' ' + taskNameVal + ' ' + startDateConstant + ' '\n                + this.parent.getFormatedDate(startDateVal);\n        }\n        else {\n            if (taskNameVal) {\n                defaultValue += nameConstant + ' ' + taskNameVal + ' ';\n            }\n            if (startDateVal) {\n                defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n            }\n            if (endDateVal) {\n                defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n            }\n            if (durationVal) {\n                defaultValue += durationConstant + ' '\n                    + this.parent.getDurationString(durationVal, data.ganttProperties.durationUnit);\n            }\n        }\n        return defaultValue;\n    };\n    ChartRows.prototype.generateBaselineAriaLabel = function (data) {\n        data = this.templateData;\n        var defaultValue = '';\n        var nameConstant = this.parent.localeObj.getConstant('name');\n        var startDateConstant = this.parent.localeObj.getConstant('startDate');\n        var endDateConstant = this.parent.localeObj.getConstant('endDate');\n        var taskNameVal = data.ganttProperties.taskName;\n        var startDateVal = data.ganttProperties.baselineStartDate;\n        var endDateVal = data.ganttProperties.baselineEndDate;\n        defaultValue += 'Baseline' + ' ';\n        defaultValue += nameConstant + ' ' + taskNameVal + ' ';\n        defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n        defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n        return defaultValue;\n    };\n    ChartRows.prototype.generateSpiltTaskAriaLabel = function (data, ganttProp) {\n        var defaultValue = '';\n        var startDateConstant = this.parent.localeObj.getConstant('startDate');\n        var endDateConstant = this.parent.localeObj.getConstant('endDate');\n        var durationConstant = this.parent.localeObj.getConstant('duration');\n        var startDateVal = data.startDate;\n        var endDateVal = data.endDate;\n        var durationVal = data.duration;\n        if (startDateVal) {\n            defaultValue += startDateConstant + ' ' + this.parent.getFormatedDate(startDateVal) + ' ';\n        }\n        if (endDateVal) {\n            defaultValue += endDateConstant + ' ' + this.parent.getFormatedDate(endDateVal) + ' ';\n        }\n        if (durationVal) {\n            defaultValue += durationConstant + ' '\n                + this.parent.getDurationString(durationVal, ganttProp.durationUnit);\n        }\n        return defaultValue;\n    };\n    ChartRows.prototype.generateTaskLabelAriaLabel = function (type) {\n        var label = '';\n        if (type === 'left' && this.parent.labelSettings.leftLabel && !this.leftTaskLabelTemplateFunction) {\n            label += this.parent.localeObj.getConstant('leftTaskLabel') +\n                ' ' + this.getTaskLabel(this.parent.labelSettings.leftLabel);\n        }\n        else if (type === 'right' && this.parent.labelSettings.rightLabel && !this.rightTaskLabelTemplateFunction) {\n            label += this.parent.localeObj.getConstant('rightTaskLabel') +\n                ' ' + this.getTaskLabel(this.parent.labelSettings.rightLabel);\n        }\n        return label;\n    };\n    return ChartRows;\n}(DateProcessor));\nexport { ChartRows };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}